BEGIN;
BEGIN
explain (analyze, buffers)
select
	nation,
	o_year,
	sum(amount) as sum_profit
from
	(
		select
			n_name as nation,
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
		from
			part,
			supplier,
			lineitem,
			partsupp,
			orders,
			nation
		where
			s_suppkey = l_suppkey
			and ps_suppkey = l_suppkey
			and ps_partkey = l_partkey
			and p_partkey = l_partkey
			and o_orderkey = l_orderkey
			and s_nationkey = n_nationkey
			and p_name like '%olive%'
	) as profit
group by
	nation,
	o_year
order by
	nation,
	o_year desc;
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=1602232.28..1602252.89 rows=154 width=90) (actual time=54870.779..58093.157 rows=175 loops=1)
   Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
   Buffers: shared hit=11211535 read=6606738 dirtied=11019 written=4159, temp read=47335 written=47468
   ->  Gather Merge  (cost=1602232.28..1602249.30 rows=128 width=90) (actual time=54826.170..58091.183 rows=525 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         Buffers: shared hit=11211535 read=6606738 dirtied=11019 written=4159, temp read=47335 written=47468
         ->  Partial GroupAggregate  (cost=1601232.26..1601234.50 rows=64 width=90) (actual time=54781.154..57608.474 rows=175 loops=3)
               Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
               Buffers: shared hit=11211535 read=6606738 dirtied=11019 written=4159, temp read=47335 written=47468
               ->  Sort  (cost=1601232.26..1601232.42 rows=64 width=81) (actual time=54772.404..55718.525 rows=1080561 loops=3)
                     Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                     Sort Method: external merge  Disk: 69944kB
                     Buffers: shared hit=11211535 read=6606738 dirtied=11019 written=4159, temp read=47335 written=47468
                     Worker 0:  Sort Method: external merge  Disk: 70400kB
                     Worker 1:  Sort Method: external merge  Disk: 70600kB
                     ->  Hash Join  (cost=54446.04..1601230.34 rows=64 width=81) (actual time=541.014..50670.524 rows=1080561 loops=3)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           Buffers: shared hit=11211507 read=6606738 dirtied=11019 written=4159
                           ->  Nested Loop  (cost=54444.48..1601228.41 rows=64 width=31) (actual time=540.886..48655.681 rows=1080561 loops=3)
                                 Buffers: shared hit=11211477 read=6606737 dirtied=11019 written=4159
                                 ->  Nested Loop  (cost=54444.04..1601021.75 rows=64 width=35) (actual time=540.806..23307.256 rows=1080561 loops=3)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       Buffers: shared hit=1651747 read=3569936 dirtied=11019 written=2149
                                       ->  Parallel Hash Join  (cost=54443.48..271592.52 rows=201352 width=26) (actual time=540.673..3881.820 rows=144024 loops=3)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             Buffers: shared hit=3 read=215753
                                             ->  Parallel Hash Join  (cost=52009.68..268628.50 rows=201984 width=18) (actual time=507.591..3473.638 rows=144024 loops=3)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   Buffers: shared read=215505
                                                   ->  Parallel Seq Scan on partsupp  (cost=0.00..207870.36 rows=3332736 width=14) (actual time=0.047..1470.254 rows=2666667 loops=3)
                                                         Buffers: shared read=174543
                                                   ->  Parallel Hash  (cost=51378.38..51378.38 rows=50504 width=4) (actual time=504.373..504.374 rows=36006 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5280kB
                                                         Buffers: shared read=40962
                                                         ->  Parallel Seq Scan on part  (cost=0.00..51378.38 rows=50504 width=4) (actual time=0.090..476.036 rows=36006 loops=3)
                                                               Filter: ((p_name)::text ~~ '%olive%'::text)
                                                               Rows Removed by Filter: 630661
                                                               Buffers: shared read=40962
                                             ->  Parallel Hash  (cost=1912.96..1912.96 rows=41667 width=8) (actual time=32.364..32.365 rows=33333 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                                   Buffers: shared hit=3 read=248
                                                   ->  Parallel Index Only Scan using supplier_s_nationkey_s_suppkey_idx on supplier  (cost=0.29..1912.96 rows=41667 width=8) (actual time=0.078..14.942 rows=33333 loops=3)
                                                         Heap Fetches: 0
                                                         Buffers: shared hit=3 read=248
                                       ->  Index Scan using lineitem_l_partkey_l_suppkey_l_shipdate_l_quantity_idx on lineitem  (cost=0.56..6.59 rows=1 width=33) (actual time=0.029..0.126 rows=8 loops=432072)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             Buffers: shared hit=1651744 read=3354183 dirtied=11019 written=2149
                                 ->  Index Only Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..3.23 rows=1 width=12) (actual time=0.022..0.022 rows=1 loops=3241684)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Heap Fetches: 14568
                                       Buffers: shared hit=9559730 read=3036801 written=2010
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.057..0.057 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 Buffers: shared hit=2 read=1
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.034..0.039 rows=25 loops=3)
                                       Buffers: shared hit=2 read=1
 Planning:
   Buffers: shared hit=802 read=123
 Planning Time: 12.439 ms
 Execution Time: 58121.551 ms
(61 rows)

COMMIT;
COMMIT
