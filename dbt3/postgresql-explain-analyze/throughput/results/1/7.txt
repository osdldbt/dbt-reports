BEGIN;
BEGIN
explain (analyze, buffers)
select
	supp_nation,
	cust_nation,
	l_year,
	sum(volume) as revenue
from
	(
		select
			n1.n_name as supp_nation,
			n2.n_name as cust_nation,
			extract(year from l_shipdate) as l_year,
			l_extendedprice * (1 - l_discount) as volume
		from
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2
		where
			s_suppkey = l_suppkey
			and o_orderkey = l_orderkey
			and c_custkey = o_custkey
			and s_nationkey = n1.n_nationkey
			and c_nationkey = n2.n_nationkey
			and (
				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
				or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
			)
			and l_shipdate between date '1995-01-01' and date '1996-12-31'
	) as shipping
group by
	supp_nation,
	cust_nation,
	l_year
order by
	supp_nation,
	cust_nation,
	l_year;
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=1988683.01..1991985.98 rows=10056 width=116) (actual time=27923.086..28074.424 rows=4 loops=1)
   Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
   Buffers: shared hit=1085 read=1432028 written=40, temp read=21623 written=21879
   ->  Gather Merge  (cost=1988683.01..1991583.74 rows=20112 width=116) (actual time=27907.739..28074.349 rows=12 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         Buffers: shared hit=1085 read=1432028 written=40, temp read=21623 written=21879
         ->  Partial GroupAggregate  (cost=1987682.98..1988262.29 rows=10056 width=116) (actual time=27888.591..27910.312 rows=4 loops=3)
               Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Buffers: shared hit=1085 read=1432028 written=40, temp read=21623 written=21879
               ->  Sort  (cost=1987682.98..1987744.19 rows=24484 width=96) (actual time=27879.455..27882.707 rows=19453 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                     Sort Method: quicksort  Memory: 2996kB
                     Buffers: shared hit=1085 read=1432028 written=40, temp read=21623 written=21879
                     Worker 0:  Sort Method: quicksort  Memory: 2670kB
                     Worker 1:  Sort Method: external merge  Disk: 1976kB
                     ->  Parallel Hash Join  (cost=400908.01..1985898.15 rows=24484 width=96) (actual time=27221.383..27826.676 rows=19453 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Join Filter: (((n1.n_name = 'FRANCE'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)) OR ((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'FRANCE'::bpchar)))
                           Rows Removed by Join Filter: 19546
                           Buffers: shared hit=997 read=1432028 written=40, temp read=21376 written=21632
                           ->  Parallel Hash Join  (cost=2083.94..1569000.41 rows=588330 width=50) (actual time=50.727..19027.061 rows=486714 loops=3)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Buffers: shared hit=528 read=1159206
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1535882.73 rows=7622031 width=28) (actual time=0.036..14997.832 rows=6076499 loops=3)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 13918762
                                       Buffers: shared hit=524 read=1158956
                                 ->  Parallel Hash  (cost=2042.28..2042.28 rows=3333 width=30) (actual time=46.482..46.486 rows=2670 loops=3)
                                       Buckets: 8192  Batches: 1  Memory Usage: 640kB
                                       Buffers: shared hit=4 read=250
                                       ->  Hash Join  (cost=1.69..2042.28 rows=3333 width=30) (actual time=8.425..34.353 rows=2670 loops=3)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             Buffers: shared hit=4 read=250
                                             ->  Parallel Index Only Scan using supplier_s_nationkey_s_suppkey_idx on supplier  (cost=0.29..1912.96 rows=41667 width=8) (actual time=1.015..26.024 rows=33333 loops=3)
                                                   Heap Fetches: 0
                                                   Buffers: shared hit=2 read=249
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.031..0.032 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=2 read=1
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.021..0.027 rows=2 loops=3)
                                                         Filter: ((n_name = 'FRANCE'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                                         Buffers: shared hit=2 read=1
                           ->  Parallel Hash  (cost=388627.70..388627.70 rows=501950 width=34) (actual time=7394.368..7394.372 rows=401951 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3232kB
                                 Buffers: shared hit=439 read=272822 written=40, temp written=7884
                                 ->  Parallel Hash Join  (cost=31140.58..388627.70 rows=501950 width=34) (actual time=488.796..6919.652 rows=401951 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=439 read=272822 written=40
                                       ->  Parallel Seq Scan on orders  (cost=0.00..331866.75 rows=6274375 width=12) (actual time=0.043..2255.911 rows=5000000 loops=3)
                                             Buffers: shared read=269123
                                       ->  Parallel Hash  (cost=30515.54..30515.54 rows=50003 width=30) (actual time=487.556..487.559 rows=40156 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                             Buffers: shared hit=411 read=3699 written=40
                                             ->  Hash Join  (cost=1.83..30515.54 rows=50003 width=30) (actual time=117.874..438.603 rows=40156 loops=3)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   Buffers: shared hit=411 read=3699 written=40
                                                   ->  Parallel Index Only Scan using customer_c_nationkey_c_custkey_idx on customer  (cost=0.43..28595.27 rows=625038 width=8) (actual time=0.080..290.676 rows=500000 loops=3)
                                                         Heap Fetches: 0
                                                         Buffers: shared hit=409 read=3698 written=40
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.043..0.044 rows=2 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         Buffers: shared hit=2 read=1
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.026..0.033 rows=2 loops=3)
                                                               Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'FRANCE'::bpchar))
                                                               Rows Removed by Filter: 23
                                                               Buffers: shared hit=2 read=1
 Planning:
   Buffers: shared hit=735 read=86
 Planning Time: 8.506 ms
 Execution Time: 28075.170 ms
(72 rows)

COMMIT;
COMMIT
