
Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   61.36 [nf_tables][16a]
   29.49 [nf_tables][167]
   29.49 [nf_tables][163]
   15.92 [nf_tables][1d5]
   13.41 [nf_tables][22d]
    6.64 [nf_tables][e0]
    4.20 [nf_tables][126]
    4.20 [nf_tables][125]
    3.28 [nf_tables][187]
    2.56 [nf_tables][11e]
    2.56 [nf_tables][11c]
    1.97 [nf_tables][31e]
    1.92 [nf_tables][43f]
    1.74 [nf_tables][182]
    1.74 [nf_tables][180]
    1.26 [nf_tables][179]
    1.23 [nf_tables][287]
    1.17 [nf_tables][123]
    0.90 [nf_tables][105]
    0.90 [nf_tables][104]
    0.89 [nf_tables][459]
    0.89 [nf_tables][454]
    0.88 [nf_tables][61e]
    0.88 [nf_tables][28b]
    0.86 [nf_tables][1c0]
    0.86 [nf_tables][1bd]
    0.81 [nf_tables][2e1]
    0.77 [nf_tables][4d5]
    0.76 [nf_tables][e7]
    0.76 [nf_tables][e6]
    0.76 [nf_tables][27e]
    0.74 [nf_tables][1a0]
    0.74 [nf_tables][19f]
    0.68 [nf_tables][58c]
    0.65 [nf_tables][27b]
    0.64 [nf_tables][5eb]
    0.52 [nf_tables][13e]
    0.52 [nf_tables][139]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (119 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000000e0 <nft_do_chain>:
         : 6   nft_do_chain():
    3.32 :    e0:     call   e5 <nft_do_chain+0x5> // [nf_tables][e0]
    0.00 :    e5:     push   %r15
    0.76 :    e7:     mov    $0xa,%ecx // [nf_tables][e7]
    0.00 :    ec:     push   %r14
    0.00 :    ee:     mov    %rdi,%r14
    0.00 :    f1:     push   %r13
    0.00 :    f3:     push   %r12
    0.00 :    f5:     push   %rbp
    0.00 :    f6:     mov    %rsi,%rbp
    0.00 :    f9:     push   %rbx
    0.00 :    fa:     sub    $0x218,%rsp
    0.00 :   101:    mov    0x8(%rdi),%rax
    0.90 :   105:    lea    0x48(%rsp),%rbx // [nf_tables][105]
    0.00 :   10a:    lea    0x98(%rsp),%rdx
    0.00 :   112:    mov    0x20(%rax),%rsi
    0.00 :   116:    mov    %rbx,%rdi
    0.00 :   119:    xor    %eax,%eax
    0.00 :   11b:    rep stos %rax,%es:(%rdi)
    2.56 :   11e:    mov    $0x30,%ecx // [nf_tables][11e]
    0.59 :   123:    mov    %rdx,%rdi // [nf_tables][123]
    4.20 :   126:    rep stos %rax,%es:(%rdi) // [nf_tables][126]
    0.00 :   129:    mov    $0x6,%ecx
    0.00 :   12e:    lea    0x18(%rsp),%rdi
    0.00 :   133:    movzbl 0xc20(%rsi),%r15d
    0.00 :   13b:    rep stos %rax,%es:(%rdi)
    0.52 :   13e:    nopl   0x0(%rax,%rax,1) // [nf_tables][13e]
    0.00 :   143:    mov    %r15b,0xf(%rsp)
    0.00 :   148:    xor    %r12d,%r12d
    0.00 :   14b:    cmpb   $0x0,0xf(%rsp)
    0.00 :   150:    mov    %rbp,(%rsp)
    0.00 :   154:    mov    (%rsp),%rax
    0.00 :   158:    mov    %rbp,0x10(%rsp)
    0.00 :   15d:    je     328 <nft_do_chain+0x248>
    0.00 :   163:    mov    0x8(%rax),%rax
   29.49 :   167:    mov    (%rax),%rbp // [nf_tables][167]
   30.68 :   16a:    lea    0x8(%rax),%r13 // [nf_tables][16a]
    0.00 :   16e:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   176:    add    %r13,%rbp
    0.63 :   179:    cmp    %rbp,%r13 // [nf_tables][179]
    0.00 :   17c:    jae    454 <nft_do_chain+0x374>
    1.74 :   182:    mov    %r12d,0x8(%rsp) // [nf_tables][182]
    1.64 :   187:    mov    %rbp,%r12 // [nf_tables][187]
    0.00 :   18a:    movzwl 0x0(%r13),%eax
    0.00 :   18f:    lea    0x8(%r13),%rbp
    0.00 :   193:    shr    %ax
    0.00 :   196:    and    $0xfff,%eax
    0.00 :   19b:    lea    0x8(%r13,%rax,1),%r15
    0.74 :   1a0:    cmp    %r15,%rbp // [nf_tables][1a0]
    0.00 :   1a3:    jne    287 <nft_do_chain+0x1a7>
    0.00 :   1a9:    jmp    5d5 <nft_do_chain+0x4f5>
    0.00 :   1ae:    cmp    $0x0,%rax
    0.00 :   1b4:    je     34b <nft_do_chain+0x26b>
    0.00 :   1ba:    cmp    $0x0,%rax
    0.86 :   1c0:    je     330 <nft_do_chain+0x250> // [nf_tables][1c0]
    0.00 :   1c6:    cmp    $0x0,%rax
    0.00 :   1cc:    je     384 <nft_do_chain+0x2a4>
    0.00 :   1d2:    mov    (%rax),%rax
    7.96 :   1d5:    mov    %r14,%rdx // [nf_tables][1d5]
    0.00 :   1d8:    mov    %rbx,%rsi
    0.00 :   1db:    mov    %rbp,%rdi
    0.00 :   1de:    cmp    $0x0,%rax
    0.00 :   1e4:    je     474 <nft_do_chain+0x394>
    0.00 :   1ea:    cmp    $0x0,%rax
    0.00 :   1f0:    je     4b6 <nft_do_chain+0x3d6>
    0.00 :   1f6:    cmp    $0x0,%rax
    0.00 :   1fc:    je     4c0 <nft_do_chain+0x3e0>
    0.00 :   202:    cmp    $0x0,%rax
    0.00 :   208:    je     4d5 <nft_do_chain+0x3f5>
    0.00 :   20e:    cmp    $0x0,%rax
    0.00 :   214:    je     4df <nft_do_chain+0x3ff>
    0.00 :   21a:    cmp    $0x0,%rax
    0.00 :   220:    je     521 <nft_do_chain+0x441>
    0.00 :   226:    cmp    $0x0,%rax
    0.00 :   22c:    je     52b <nft_do_chain+0x44b>
    0.00 :   232:    cmp    $0x0,%rax
    0.00 :   238:    je     564 <nft_do_chain+0x484>
    0.00 :   23e:    cmp    $0x0,%rax
    0.00 :   244:    je     56e <nft_do_chain+0x48e>
    0.00 :   24a:    cmp    $0x0,%rax
    0.00 :   250:    je     578 <nft_do_chain+0x498>
    0.00 :   256:    cmp    $0x0,%rax
    0.00 :   25c:    je     582 <nft_do_chain+0x4a2>
    0.00 :   262:    call   267 <nft_do_chain+0x187>
    0.00 :   267:    mov    0x48(%rsp),%edx
    0.00 :   26b:    cmp    $0xffffffff,%edx
    0.00 :   26e:    jne    670 <nft_do_chain+0x590>
    0.00 :   274:    mov    0x0(%rbp),%rax
    0.00 :   278:    mov    0x10(%rax),%eax
    0.65 :   27b:    add    %rax,%rbp // [nf_tables][27b]
    0.76 :   27e:    cmp    %rbp,%r15 // [nf_tables][27e]
    0.00 :   281:    je     47e <nft_do_chain+0x39e>
    1.23 :   287:    mov    0x0(%rbp),%rax // [nf_tables][287]
    0.88 :   28b:    cmp    $0x0,%rax // [nf_tables][28b]
    0.00 :   291:    jne    1ae <nft_do_chain+0xce>
    0.00 :   297:    movzbl 0x10(%rbp),%eax
    0.00 :   29b:    mov    0x48(%rsp,%rax,4),%eax
    0.00 :   29f:    and    0xc(%rbp),%eax
    0.00 :   2a2:    cmp    0x8(%rbp),%eax
    0.00 :   2a5:    sete   %al
    0.00 :   2a8:    cmp    0x12(%rbp),%al
    0.00 :   2ab:    jne    267 <nft_do_chain+0x187>
    0.00 :   2ad:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   2b5:    nopl   0x0(%rax,%rax,1)
    0.00 :   2ba:    movzwl 0x0(%r13),%eax
    0.00 :   2bf:    shr    %ax
    0.00 :   2c2:    and    $0xfff,%eax
    0.00 :   2c7:    lea    0x8(%r13,%rax,1),%r13
    0.00 :   2cc:    cmp    %r12,%r13
    0.00 :   2cf:    jb     18a <nft_do_chain+0xaa>
    0.00 :   2d5:    mov    %r12,%rbp
    0.00 :   2d8:    mov    0x48(%rsp),%edx
    0.00 :   2dc:    mov    0x8(%rsp),%r12d
    0.81 :   2e1:    nopl   0x0(%rax,%rax,1) // [nf_tables][2e1]
    0.00 :   2e6:    test   $0xfc,%dl
    0.00 :   2e9:    je     509 <nft_do_chain+0x429>
    0.00 :   2ef:    cmp    $0xfffffffd,%edx
    0.00 :   2f2:    je     58c <nft_do_chain+0x4ac>
    0.00 :   2f8:    ja     407 <nft_do_chain+0x327>
    0.00 :   2fe:    cmp    $0xfffffffb,%edx
    0.00 :   301:    je     40e <nft_do_chain+0x32e>
    0.00 :   307:    cmp    $0xfffffffc,%edx
    0.00 :   30a:    jne    40c <nft_do_chain+0x32c>
    0.00 :   310:    mov    0x50(%rsp),%rax
    0.00 :   315:    cmpb   $0x0,0xf(%rsp)
    0.00 :   31a:    mov    %rax,(%rsp)
    1.97 :   31e:    mov    (%rsp),%rax // [nf_tables][31e]
    0.00 :   322:    jne    163 <nft_do_chain+0x83>
    0.00 :   328:    mov    (%rax),%rax
    0.00 :   32b:    jmp    167 <nft_do_chain+0x87>
    0.00 :   330:    movzbl 0x10(%rbp),%eax
    0.00 :   334:    movzbl 0x11(%rbp),%edx
    0.00 :   338:    mov    0x48(%rsp,%rax,4),%eax
    0.00 :   33c:    and    0x8(%rbp),%eax
    0.00 :   33f:    xor    0xc(%rbp),%eax
    0.00 :   342:    mov    %eax,0x48(%rsp,%rdx,4)
    0.00 :   346:    jmp    267 <nft_do_chain+0x187>
    0.00 :   34b:    movzbl 0x28(%rbp),%eax
    0.00 :   34f:    xor    %edx,%edx
    0.00 :   351:    lea    (%rbx,%rax,4),%rcx
    0.00 :   355:    mov    (%rcx),%rax
    0.00 :   358:    and    0x18(%rbp),%rax
    0.00 :   35c:    cmp    0x8(%rbp),%rax
    0.00 :   360:    jne    373 <nft_do_chain+0x293>
    0.00 :   362:    xor    %edx,%edx
    0.00 :   364:    mov    0x8(%rcx),%rax
    0.00 :   368:    and    0x20(%rbp),%rax
    0.00 :   36c:    cmp    0x10(%rbp),%rax
    0.00 :   370:    sete   %dl
    0.00 :   373:    movzbl 0x2a(%rbp),%eax
    0.00 :   377:    cmp    %edx,%eax
    0.00 :   379:    jne    267 <nft_do_chain+0x187>
    0.00 :   37f:    jmp    2ad <nft_do_chain+0x1cd>
    0.00 :   384:    cmpb   $0x1,0x8(%rbp)
    0.00 :   388:    mov    (%r14),%rsi
    0.00 :   38b:    je     45e <nft_do_chain+0x37e>
    0.00 :   391:    testb  $0x1,0x10(%r14)
    0.00 :   396:    je     1d2 <nft_do_chain+0xf2>
    0.00 :   39c:    movzwl 0xb8(%rsi),%edx
    0.00 :   3a3:    mov    0x14(%r14),%edi
    0.00 :   3a7:    mov    0xc8(%rsi),%rcx
    0.00 :   3ae:    add    %rdi,%rdx
    0.00 :   3b1:    add    %rcx,%rdx
    0.00 :   3b4:    movzbl 0x9(%rbp),%edi
    0.00 :   3b8:    mov    0xbc(%rsi),%esi
    0.00 :   3be:    add    %rdi,%rdx
    0.00 :   3c1:    movzbl 0xa(%rbp),%edi
    0.00 :   3c5:    add    %rsi,%rcx
    0.00 :   3c8:    add    %rdx,%rdi
    0.00 :   3cb:    cmp    %rdi,%rcx
    0.00 :   3ce:    jb     1d2 <nft_do_chain+0xf2>
    0.00 :   3d4:    movzbl 0xb(%rbp),%ecx
    0.00 :   3d8:    movl   $0x0,0x48(%rsp,%rcx,4)
    0.00 :   3e0:    lea    (%rbx,%rcx,4),%rsi
    0.00 :   3e4:    mov    %rcx,%rax
    0.00 :   3e7:    movzbl 0xa(%rbp),%ecx
    0.00 :   3eb:    cmp    $0x2,%cl
    0.00 :   3ee:    je     4ca <nft_do_chain+0x3ea>
    0.00 :   3f4:    cmp    $0x4,%cl
    0.00 :   3f7:    je     535 <nft_do_chain+0x455>
    0.00 :   3fd:    movzbl (%rdx),%eax
    0.00 :   400:    mov    %al,(%rsi)
    0.00 :   402:    jmp    267 <nft_do_chain+0x187>
    0.00 :   407:    cmp    $0xffffffff,%edx
    0.00 :   40a:    je     40e <nft_do_chain+0x32e>
    0.00 :   40c:    ud2
    0.00 :   40e:    test   %r12d,%r12d
    0.00 :   411:    je     619 <nft_do_chain+0x539>
    0.00 :   417:    lea    -0x1(%r12),%eax
    0.00 :   41c:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   424:    mov    %rax,%r12
    0.00 :   427:    lea    (%rax,%rax,2),%rax
    0.00 :   42b:    shl    $0x3,%rax
    0.00 :   42f:    mov    0x98(%rsp,%rax,1),%rdi
    0.00 :   437:    mov    0xa0(%rsp,%rax,1),%r13
    1.92 :   43f:    mov    0xa8(%rsp,%rax,1),%rbp // [nf_tables][43f]
    0.00 :   447:    mov    %rdi,(%rsp)
    0.00 :   44b:    cmp    %rbp,%r13
    0.00 :   44e:    jb     182 <nft_do_chain+0xa2>
    0.89 :   454:    mov    $0xffffffff,%edx // [nf_tables][454]
    0.89 :   459:    jmp    2e1 <nft_do_chain+0x201> // [nf_tables][459]
    0.00 :   45e:    mov    0xc8(%rsi),%rcx
    0.00 :   465:    movzwl 0xb8(%rsi),%edx
    0.00 :   46c:    add    %rcx,%rdx
    0.00 :   46f:    jmp    3b4 <nft_do_chain+0x2d4>
    0.00 :   474:    call   479 <nft_do_chain+0x399>
    0.00 :   479:    jmp    267 <nft_do_chain+0x187>
    0.00 :   47e:    xchg   %ax,%ax
    0.00 :   480:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   485:    mov    (%r14),%rax
    0.00 :   488:    mov    (%rsp),%rsi
    0.00 :   48c:    mov    $0x3,%edx
    0.00 :   491:    lea    0x18(%rsp),%rdi
    0.00 :   496:    mov    %r13,0x38(%rsp)
    0.00 :   49b:    movzbl 0x80(%rax),%eax
    0.00 :   4a2:    shr    $0x4,%al
    0.00 :   4a5:    and    $0x1,%eax
    0.00 :   4a8:    mov    %al,0x19(%rsp)
    0.00 :   4ac:    call   0 <__nft_trace_packet>
    0.00 :   4b1:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   4b6:    call   4bb <nft_do_chain+0x3db>
    0.00 :   4bb:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4c0:    call   4c5 <nft_do_chain+0x3e5>
    0.00 :   4c5:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4ca:    movzwl (%rdx),%eax
    0.00 :   4cd:    mov    %ax,(%rsi)
    0.00 :   4d0:    jmp    267 <nft_do_chain+0x187>
    0.77 :   4d5:    call   4da <nft_do_chain+0x3fa> // [nf_tables][4d5]
    0.00 :   4da:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4df:    call   4e4 <nft_do_chain+0x404>
    0.00 :   4e4:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4e9:    mov    (%rsp),%rsi
    0.00 :   4ed:    lea    0x18(%rsp),%rdi
    0.00 :   4f2:    mov    %r13,0x38(%rsp)
    0.00 :   4f7:    call   90 <__nft_trace_verdict.isra.0>
    0.00 :   4fc:    mov    0x48(%rsp),%edx
    0.00 :   500:    test   $0xfc,%dl
    0.00 :   503:    jne    2ef <nft_do_chain+0x20f>
    0.00 :   509:    add    $0x218,%rsp
    0.00 :   510:    mov    %edx,%eax
    0.00 :   512:    pop    %rbx
    0.00 :   513:    pop    %rbp
    0.00 :   514:    pop    %r12
    0.00 :   516:    pop    %r13
    0.00 :   518:    pop    %r14
    0.00 :   51a:    pop    %r15
    0.00 :   51c:    jmp    521 <nft_do_chain+0x441>
    0.00 :   521:    call   526 <nft_do_chain+0x446>
    0.00 :   526:    jmp    267 <nft_do_chain+0x187>
    0.00 :   52b:    call   530 <nft_do_chain+0x450>
    0.00 :   530:    jmp    267 <nft_do_chain+0x187>
    0.00 :   535:    mov    (%rdx),%edx
    0.00 :   537:    mov    %edx,0x48(%rsp,%rax,4)
    0.00 :   53b:    jmp    267 <nft_do_chain+0x187>
    0.00 :   540:    cmpb   $0x0,0x18(%rsp)
    0.00 :   545:    je     2ba <nft_do_chain+0x1da>
    0.00 :   54b:    mov    (%r14),%rax
    0.00 :   54e:    movzbl 0x80(%rax),%eax
    0.00 :   555:    shr    $0x4,%al
    0.00 :   558:    and    $0x1,%eax
    0.00 :   55b:    mov    %al,0x19(%rsp)
    0.00 :   55f:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   564:    call   569 <nft_do_chain+0x489>
    0.00 :   569:    jmp    267 <nft_do_chain+0x187>
    0.00 :   56e:    call   573 <nft_do_chain+0x493>
    0.00 :   573:    jmp    267 <nft_do_chain+0x187>
    0.00 :   578:    call   57d <nft_do_chain+0x49d>
    0.00 :   57d:    jmp    267 <nft_do_chain+0x187>
    0.00 :   582:    call   587 <nft_do_chain+0x4a7>
    0.00 :   587:    jmp    267 <nft_do_chain+0x187>
    0.68 :   58c:    cmp    $0xf,%r12d // [nf_tables][58c]
    0.00 :   590:    ja     610 <nft_do_chain+0x530>
    0.00 :   592:    movzwl 0x0(%r13),%edx
    0.00 :   597:    mov    %r12d,%eax
    0.00 :   59a:    mov    (%rsp),%rdi
    0.00 :   59e:    add    $0x1,%r12d
    0.00 :   5a2:    lea    (%rax,%rax,2),%rax
    0.00 :   5a6:    shr    %dx
    0.00 :   5a9:    shl    $0x3,%rax
    0.00 :   5ad:    and    $0xfff,%edx
    0.00 :   5b3:    mov    %rdi,0x98(%rsp,%rax,1)
    0.00 :   5bb:    lea    0x8(%r13,%rdx,1),%rdx
    0.00 :   5c0:    mov    %rbp,0xa8(%rsp,%rax,1)
    0.00 :   5c8:    mov    %rdx,0xa0(%rsp,%rax,1)
    0.00 :   5d0:    jmp    310 <nft_do_chain+0x230>
    0.00 :   5d5:    mov    0x48(%rsp),%edx
    0.00 :   5d9:    cmp    $0xfffffffe,%edx
    0.00 :   5dc:    je     2ad <nft_do_chain+0x1cd>
    0.00 :   5e2:    cmp    $0xffffffff,%edx
    0.00 :   5e5:    je     47e <nft_do_chain+0x39e>
    0.64 :   5eb:    mov    %r12,%rbp // [nf_tables][5eb]
    0.00 :   5ee:    mov    0x8(%rsp),%r12d
    0.00 :   5f3:    jmp    2e1 <nft_do_chain+0x201>
    0.00 :   5f8:    mov    %rbp,%rcx
    0.00 :   5fb:    mov    %rbx,%rdx
    0.00 :   5fe:    lea    0x18(%rsp),%rdi
    0.00 :   603:    mov    %r14,%rsi
    0.00 :   606:    call   60b <nft_do_chain+0x52b>
    0.00 :   60b:    jmp    143 <nft_do_chain+0x63>
    0.00 :   610:    ud2
    0.00 :   612:    xor    %edx,%edx
    0.00 :   614:    jmp    509 <nft_do_chain+0x429>
    0.00 :   619:    mov    0x10(%rsp),%rbp
    0.88 :   61e:    xchg   %ax,%ax // [nf_tables][61e]
    0.00 :   620:    xchg   %ax,%ax
    0.00 :   622:    movzbl -0x10(%rbp),%edx
    0.00 :   626:    jmp    509 <nft_do_chain+0x429>
    0.00 :   62b:    mov    %r14,%rsi
    0.00 :   62e:    mov    %rbp,%rdi
    0.00 :   631:    call   30 <nft_update_chain_stats>
    0.00 :   636:    movzbl -0x10(%rbp),%edx
    0.00 :   63a:    jmp    509 <nft_do_chain+0x429>
    0.00 :   63f:    mov    (%r14),%rax
    0.00 :   642:    mov    $0x1,%edx
    0.00 :   647:    mov    %rbp,%rsi
    0.00 :   64a:    lea    0x18(%rsp),%rdi
    0.00 :   64f:    movq   $0x0,0x38(%rsp)
    0.00 :   658:    movzbl 0x80(%rax),%eax
    0.00 :   65f:    shr    $0x4,%al
    0.00 :   662:    and    $0x1,%eax
    0.00 :   665:    mov    %al,0x19(%rsp)
    0.00 :   669:    call   0 <__nft_trace_packet>
    0.00 :   66e:    jmp    620 <nft_do_chain+0x540>
    0.44 :   670:    cmp    $0xfffffffe,%edx
    0.00 :   673:    jne    5eb <nft_do_chain+0x50b>
    0.00 :   679:    jmp    2ad <nft_do_chain+0x1cd>
         :
         : 333 Disassembly of section .init.text:
         :
         : 335 00000000000000e0 <init_module+0x3b>:
         : 336 nf_tables_module_init():
    3.32 :    e0:     mov    $0x0,%edi // [nf_tables][e0]
    0.76 :    e6:     call   eb <init_module+0x46> // [nf_tables][e6]
    0.00 :    eb:     mov    %eax,%ebx
    0.00 :    ed:     test   %eax,%eax
    0.00 :    ef:     js     16f <init_module+0xca>
    0.00 :    f1:     mov    $0x0,%rsi
    0.00 :    f8:     mov    $0x0,%rdi
    0.00 :    ff:     call   104 <init_module+0x5f>
    0.90 :   104:    mov    %eax,%ebx // [nf_tables][104]
    0.00 :   106:    test   %eax,%eax
    0.00 :   108:    js     163 <init_module+0xbe>
    0.00 :   10a:    call   10f <init_module+0x6a>
    0.00 :   10f:    mov    %eax,%ebx
    0.00 :   111:    test   %eax,%eax
    0.00 :   113:    js     153 <init_module+0xae>
    0.00 :   115:    mov    $0x0,%rdi
    2.56 :   11c:    call   121 <init_module+0x7c> // [nf_tables][11c]
    0.00 :   121:    mov    %eax,%ebx
    0.59 :   123:    test   %eax,%eax // [nf_tables][123]
    4.20 :   125:    js     14e <init_module+0xa9> // [nf_tables][125]
    0.00 :   127:    mov    $0x0,%rdi
    0.00 :   12e:    call   133 <init_module+0x8e>
    0.00 :   133:    mov    %eax,%ebx
    0.00 :   135:    test   %eax,%eax
    0.00 :   137:    jns    147 <init_module+0xa2>
    0.52 :   139:    mov    $0x0,%rdi // [nf_tables][139]
    0.00 :   140:    call   145 <init_module+0xa0>
    0.00 :   145:    jmp    14e <init_module+0xa9>
    0.00 :   147:    call   14c <init_module+0xa7>
    0.00 :   14c:    jmp    185 <init_module+0xe0>
    0.00 :   14e:    call   153 <init_module+0xae>
    0.00 :   153:    xor    %edx,%edx
    0.00 :   155:    xor    %esi,%esi
    0.00 :   157:    mov    $0x0,%rdi
    0.00 :   15e:    call   163 <init_module+0xbe>
   29.49 :   163:    mov    $0x0,%rdi // [nf_tables][163]
   30.68 :   16a:    call   16f <init_module+0xca> // [nf_tables][16a]
    0.00 :   16f:    call   174 <init_module+0xcf>
    0.00 :   174:    call   179 <init_module+0xd4>
    0.63 :   179:    mov    $0x0,%rdi // [nf_tables][179]
    1.74 :   180:    call   185 <init_module+0xe0> // [nf_tables][180]
    0.00 :   185:    mov    %ebx,%eax
    1.64 :   187:    pop    %rbx // [nf_tables][187]
    0.00 :   188:    jmp    18d <nft_chain_filter_init>
         :
         : 382 000000000000018d <nft_chain_filter_init>:
         : 383 nft_chain_filter_init():
    0.00 :   18d:    call   192 <nft_chain_filter_init+0x5>
    0.00 :   192:    push   %rbx
    0.00 :   193:    mov    $0x0,%rdi
    0.00 :   19a:    call   19f <nft_chain_filter_init+0x12>
    0.74 :   19f:    mov    $0x0,%rdi // [nf_tables][19f]
    0.00 :   1a6:    call   1ab <nft_chain_filter_init+0x1e>
    0.00 :   1ab:    test   %eax,%eax
    0.00 :   1ad:    jne    1ef <nft_chain_filter_init+0x62>
    0.00 :   1af:    mov    $0x0,%rdi
    0.00 :   1b6:    xor    %ebx,%ebx
    0.00 :   1b8:    call   1bd <nft_chain_filter_init+0x30>
    0.86 :   1bd:    mov    $0x0,%rdi // [nf_tables][1bd]
    0.00 :   1c4:    call   1c9 <nft_chain_filter_init+0x3c>
    0.00 :   1c9:    mov    $0x0,%rdi
    0.00 :   1d0:    call   1d5 <nft_chain_filter_init+0x48>
    7.96 :   1d5:    mov    $0x0,%rdi // [nf_tables][1d5]
    0.00 :   1dc:    call   1e1 <nft_chain_filter_init+0x54>
    0.00 :   1e1:    mov    $0x0,%rdi
    0.00 :   1e8:    call   1ed <nft_chain_filter_init+0x60>
    0.00 :   1ed:    jmp    201 <nft_chain_filter_init+0x74>
    0.00 :   1ef:    mov    %eax,%ebx
    0.00 :   1f1:    mov    $0x0,%rdi
    0.00 :   1f8:    call   1fd <nft_chain_filter_init+0x70>
    0.00 :   1fd:    test   %ebx,%ebx
    0.00 :   1ff:    jns    1af <nft_chain_filter_init+0x22>
    0.00 :   201:    mov    %ebx,%eax
    0.00 :   203:    pop    %rbx
    0.00 :   204:    jmp    209 <nft_chain_route_init>
         :
         : 413 0000000000000209 <nft_chain_route_init>:
         : 414 nft_chain_route_init():
    0.00 :   209:    call   20e <nft_chain_route_init+0x5>
    0.00 :   20e:    mov    $0x0,%rdi
    0.00 :   215:    call   21a <nft_chain_route_init+0x11>
    0.00 :   21a:    mov    $0x0,%rdi
    0.00 :   221:    call   226 <nft_chain_route_init+0x1d>
    0.00 :   226:    mov    $0x0,%rdi
   13.41 :   22d:    jmp    232 <__kstrtab_nf_tables_trans_destroy_flush_work+0x4> // [nf_tables][22d]

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   11.83 [nf_conntrack][949e]
    6.70 [nf_conntrack][948a]
    5.37 [nf_conntrack][95a4]
    5.02 [nf_conntrack][9dac]
    4.23 [nf_conntrack][9b20]
    4.12 [nf_conntrack][9ea9]
    3.63 [nf_conntrack][9df1]
    3.32 [nf_conntrack][9579]
    3.26 [nf_conntrack][a3ca]
    3.25 [nf_conntrack][9539]
    3.24 [nf_conntrack][96a9]
    3.21 [nf_conntrack][95c8]
    3.13 [nf_conntrack][a752]
    2.98 [nf_conntrack][9be3]
    2.96 [nf_conntrack][998b]
    2.94 [nf_conntrack][95f5]
    2.66 [nf_conntrack][9aa4]
    2.34 [nf_conntrack][9b48]
    2.34 [nf_conntrack][96c6]
    2.32 [nf_conntrack][9973]
    2.30 [nf_conntrack][9e0a]
    2.28 [nf_conntrack][a1a1]
    2.24 [nf_conntrack][a84c]
    2.09 [nf_conntrack][a744]
    1.94 [nf_conntrack][9bd4]
    1.83 [nf_conntrack][9d84]
    1.80 [nf_conntrack][96a6]
    1.64 [nf_conntrack][9e67]
    1.61 [nf_conntrack][a19e]
    1.51 [nf_conntrack][95d2]
    1.07 [nf_conntrack][93d0]
    0.84 [nf_conntrack][9dfa]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (40 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000093d0 <nf_conntrack_tcp_packet>:
         : 6    nf_conntrack_tcp_packet():
    1.07 :   93d0:   call   93d5 <nf_conntrack_tcp_packet+0x5> // [nf_conntrack][93d0]
    0.00 :   93d5:   push   %r15
    0.00 :   93d7:   push   %r14
    0.00 :   93d9:   mov    %edx,%r14d
    0.00 :   93dc:   push   %r13
    0.00 :   93de:   mov    %rsi,%r13
    0.00 :   93e1:   push   %r12
    0.00 :   93e3:   push   %rbp
    0.00 :   93e4:   push   %rbx
    0.00 :   93e5:   mov    %rdi,%rbx
    0.00 :   93e8:   sub    $0xc0,%rsp
    0.00 :   93ef:   mov    0x70(%rsi),%edx
    0.00 :   93f2:   mov    0xd0(%rsi),%rbp
    0.00 :   93f9:   mov    %ecx,(%rsp)
    0.00 :   93fc:   mov    %r8,0x10(%rsp)
    0.00 :   9401:   mov    %gs:0x28,%rax
    0.00 :   940a:   mov    %rax,0xb8(%rsp)
    0.00 :   9412:   mov    0x88(%rdi),%rax
    0.00 :   9419:   movl   $0x0,0x78(%rsp)
    0.00 :   9421:   movq   $0x0,0x68(%rsp)
    0.00 :   942a:   movq   $0x0,0x70(%rsp)
    0.00 :   9433:   mov    %rax,0x30(%rsp)
    0.00 :   9438:   mov    %edx,%eax
    0.00 :   943a:   sub    0x74(%rsi),%eax
    0.00 :   943d:   sub    %r14d,%eax
    0.00 :   9440:   cmp    $0x13,%eax
    0.00 :   9443:   jle    a427 <nf_conntrack_tcp_packet+0x1057>
    0.00 :   9449:   movslq %r14d,%rax
    0.00 :   944c:   add    %rax,%rbp
    0.00 :   944f:   je     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   9455:   movzbl 0xc(%rbp),%eax
    0.00 :   9459:   sub    %r14d,%edx
    0.00 :   945c:   shr    $0x4,%al
    0.00 :   945f:   movzbl %al,%eax
    0.00 :   9462:   shl    $0x2,%eax
    0.00 :   9465:   cmp    %eax,%edx
    0.00 :   9467:   setb   %r12b
    0.00 :   946b:   cmp    $0x13,%eax
    0.00 :   946e:   setle  %al
    0.00 :   9471:   or     %al,%r12b
    0.00 :   9474:   jne    947a <nf_conntrack_tcp_packet+0xaa>
    0.00 :   947a:   mov    0x10(%rsp),%rsi
    0.00 :   947f:   mov    0x20(%rsi),%rax
    0.00 :   9483:   cmpb   $0x0,0xb3e(%rax)
    6.70 :   948a:   jne    96a6 <nf_conntrack_tcp_packet+0x2d6> // [nf_conntrack][948a]
    0.00 :   9490:   movzbl 0xd(%rbp),%eax
    0.00 :   9494:   and    $0x37,%eax
    0.00 :   9497:   cmpb   $0x0,0x0(%rax)
   11.83 :   949e:   je     94a4 <nf_conntrack_tcp_packet+0xd4> // [nf_conntrack][949e]
    0.00 :   94a4:   mov    0x80(%rbx),%rax
    0.00 :   94ab:   test   $0x8,%al
    0.00 :   94ad:   je     96d4 <nf_conntrack_tcp_packet+0x304>
    0.00 :   94b3:   lea    0x4(%rbx),%rax
    0.00 :   94b7:   mov    %rax,%rdi
    0.00 :   94ba:   mov    %rax,0x28(%rsp)
    0.00 :   94bf:   call   94c4 <nf_conntrack_tcp_packet+0xf4>
    0.00 :   94c4:   movzbl 0xe0(%rbx),%eax
    0.00 :   94cb:   cmpl   $0x2,(%rsp)
    0.00 :   94cf:   seta   0x5d(%rsp)
    0.00 :   94d4:   mov    %eax,0x4(%rsp)
    0.00 :   94d8:   mov    %eax,%ecx
    0.00 :   94da:   seta   %al
    0.00 :   94dd:   movzbl %al,%eax
    0.00 :   94e0:   mov    %eax,0x24(%rsp)
    0.00 :   94e4:   movzbl 0xd(%rbp),%eax
    0.00 :   94e8:   mov    %al,0x8(%rsp)
    0.00 :   94ec:   test   $0x4,%al
    0.00 :   94ee:   jne    9f9c <nf_conntrack_tcp_packet+0xbcc>
    0.00 :   94f4:   movzbl 0x8(%rsp),%eax
    0.00 :   94f9:   testb  $0x2,0x8(%rsp)
    0.00 :   94fe:   jne    96f2 <nf_conntrack_tcp_packet+0x322>
    0.00 :   9504:   mov    0x4(%rsp),%r15d
    0.00 :   9509:   mov    0x24(%rsp),%r10d
    0.00 :   950e:   test   $0x1,%al
    0.00 :   9510:   jne    a3ff <nf_conntrack_tcp_packet+0x102f>
    0.00 :   9516:   test   $0x10,%al
    0.00 :   9518:   mov    %r10,%rax
    0.00 :   951b:   je     a147 <nf_conntrack_tcp_packet+0xd77>
    0.00 :   9521:   shl    $0x4,%rax
    0.00 :   9525:   movl   $0x3,0x1c(%rsp)
    0.00 :   952d:   sub    %r10,%rax
    0.00 :   9530:   movzbl 0x0(%r15,%rax,4),%eax
    3.25 :   9539:   cmp    $0x8,%al // [nf_conntrack][9539]
    0.00 :   953b:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   9541:   xor    %r9d,%r9d
    0.00 :   9544:   cmpl   $0x2,(%rsp)
    0.00 :   9548:   mov    0x4(%rbp),%eax
    0.00 :   954b:   movl   $0x8,0x20(%rsp)
    0.00 :   9553:   setbe  %r8b
    0.00 :   9557:   setbe  %r9b
    0.00 :   955b:   movzbl %r8b,%r8d
    0.00 :   955f:   mov    %eax,0x58(%rsp)
    0.00 :   9563:   bswap  %eax
    0.00 :   9565:   mov    %eax,0x18(%rsp)
    0.00 :   9569:   lea    (%r8,%r8,4),%rax
    0.00 :   956d:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   9575:   cmpl   $0x3,(%rsp)
    3.32 :   9579:   movzbl 0xc(%rbp),%edi // [nf_conntrack][9579]
    0.00 :   957d:   sbb    %r12,%r12
    0.00 :   9580:   mov    0x70(%r13),%ecx
    0.00 :   9584:   movzbl 0x8(%rsp),%edx
    0.00 :   9589:   not    %r12
    0.00 :   958c:   shr    $0x4,%dil
    0.00 :   9590:   mov    0x8(%rbp),%r11d
    0.00 :   9594:   and    $0x14,%r12d
    0.00 :   9598:   movzbl %dil,%edi
    0.00 :   959c:   lea    0xb8(%rbx,%r12,1),%rax
    5.37 :   95a4:   shl    $0x2,%edi // [nf_conntrack][95a4]
    0.00 :   95a7:   bswap  %r11d
    0.00 :   95aa:   mov    %rax,0x38(%rsp)
    0.00 :   95af:   movzwl 0xe(%rbp),%eax
    0.00 :   95b3:   rol    $0x8,%ax
    0.00 :   95b7:   mov    %ax,0x5e(%rsp)
    0.00 :   95bc:   movzwl %ax,%eax
    0.00 :   95bf:   mov    %eax,0x54(%rsp)
    0.00 :   95c3:   mov    %ecx,%eax
    0.00 :   95c5:   sub    %r14d,%eax
    3.21 :   95c8:   sub    %edi,%eax // [nf_conntrack][95c8]
    0.00 :   95ca:   mov    0x18(%rsp),%edi
    0.00 :   95ce:   add    %edi,%eax
    0.00 :   95d0:   mov    %edx,%edi
    1.51 :   95d2:   shr    %dl // [nf_conntrack][95d2]
    0.00 :   95d4:   and    $0x1,%edi
    0.00 :   95d7:   and    $0x1,%edx
    0.00 :   95da:   add    %edi,%eax
    0.00 :   95dc:   add    %edx,%eax
    0.00 :   95de:   and    $0x2,%esi
    0.00 :   95e1:   mov    %eax,0x8(%rsp)
    0.00 :   95e5:   jne    9ee6 <nf_conntrack_tcp_packet+0xb16>
    0.00 :   95eb:   mov    %r11d,%r15d
    0.00 :   95ee:   lea    -0x1(%r11),%edx
    0.00 :   95f2:   mov    %rbx,%rdi
    2.94 :   95f5:   add    %rbx,%r12 // [nf_conntrack][95f5]
    0.00 :   95f8:   mov    %r9d,%esi
    0.00 :   95fb:   mov    %r8,0x48(%rsp)
    0.00 :   9600:   mov    %r10,0x40(%rsp)
    0.00 :   9605:   mov    %r11d,0x50(%rsp)
    0.00 :   960a:   call   960f <nf_conntrack_tcp_packet+0x23f>
    0.00 :   960f:   mov    0x50(%rsp),%r11d
    0.00 :   9614:   mov    0x40(%rsp),%r10
    0.00 :   9619:   mov    0xc0(%r12),%edi
    0.00 :   9621:   sub    %eax,%r15d
    0.00 :   9624:   mov    0x48(%rsp),%r8
    0.00 :   9629:   test   %edi,%edi
    0.00 :   962b:   jne    9973 <nf_conntrack_tcp_packet+0x5a3>
    0.00 :   9631:   testb  $0x2,0xd(%rbp)
    0.00 :   9635:   jne    9cd2 <nf_conntrack_tcp_packet+0x902>
    0.00 :   963b:   mov    0x8(%rsp),%edi
    0.00 :   963f:   lea    (%r10,%r10,4),%rdx
    0.00 :   9643:   mov    %edi,0xb8(%r12)
    0.00 :   964b:   movzbl 0xc8(%rbx,%rdx,4),%ecx
    0.00 :   9653:   mov    0x54(%rsp),%edx
    0.00 :   9657:   shl    %cl,%edx
    0.00 :   9659:   mov    $0x1,%ecx
    0.00 :   965e:   test   %edx,%edx
    0.00 :   9660:   cmove  %ecx,%edx
    0.00 :   9663:   lea    (%r8,%r8,4),%rcx
    0.00 :   9667:   lea    (%rbx,%rcx,4),%rcx
    0.00 :   966b:   mov    %edx,0xc0(%r12)
    0.00 :   9673:   add    %edi,%edx
    0.00 :   9675:   mov    %edx,0xbc(%r12)
    0.00 :   967d:   mov    0xc0(%rcx),%esi
    0.00 :   9683:   test   %esi,%esi
    0.00 :   9685:   je     a16c <nf_conntrack_tcp_packet+0xd9c>
    0.00 :   968b:   mov    0xb8(%rcx),%esi
    0.00 :   9691:   lea    0x1(%rsi),%edi
    0.00 :   9694:   cmp    %edi,%r15d
    0.00 :   9697:   je     a722 <nf_conntrack_tcp_packet+0x1352>
    0.00 :   969d:   movzbl 0xd(%rbp),%ecx
    0.00 :   96a1:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    1.80 :   96a6:   cmpb   $0x0,(%rsi) // [nf_conntrack][96a6]
    3.24 :   96a9:   jne    9490 <nf_conntrack_tcp_packet+0xc0> // [nf_conntrack][96a9]
    0.00 :   96af:   movzbl 0x1(%rsi),%r8d
    0.00 :   96b4:   mov    $0x6,%ecx
    0.00 :   96b9:   xor    %esi,%esi
    0.00 :   96bb:   mov    %r14d,%edx
    0.00 :   96be:   mov    %r13,%rdi
    0.00 :   96c1:   call   96c6 <nf_conntrack_tcp_packet+0x2f6>
    2.34 :   96c6:   test   %ax,%ax // [nf_conntrack][96c6]
    0.00 :   96c9:   je     9490 <nf_conntrack_tcp_packet+0xc0>
    0.00 :   96cf:   jmp    96d4 <nf_conntrack_tcp_packet+0x304>
    0.00 :   96d4:   mov    %rbp,%rcx
    0.00 :   96d7:   mov    %r14d,%edx
    0.00 :   96da:   mov    %r13,%rsi
    0.00 :   96dd:   mov    %rbx,%rdi
    0.00 :   96e0:   call   9200 <tcp_new>
    0.00 :   96e5:   test   %al,%al
    0.00 :   96e7:   jne    94b3 <nf_conntrack_tcp_packet+0xe3>
    0.00 :   96ed:   jmp    a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   96f2:   mov    0x24(%rsp),%r10d
    0.00 :   96f7:   shr    $0x4,%al
    0.00 :   96fa:   mov    0x4(%rsp),%r15d
    0.00 :   96ff:   and    $0x1,%eax
    0.00 :   9702:   mov    %r10,%rcx
    0.00 :   9705:   mov    %eax,0x1c(%rsp)
    0.00 :   9709:   lea    (%rax,%rax,4),%rax
    0.00 :   970d:   shl    $0x4,%rcx
    0.00 :   9711:   add    %rax,%rax
    0.00 :   9714:   sub    %r10,%rcx
    0.00 :   9717:   lea    0x0(%rax,%rcx,4),%rax
    0.00 :   971f:   movzbl (%rax,%r15,1),%eax
    0.00 :   9724:   cmp    $0x8,%al
    0.00 :   9726:   je     9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   972c:   cmp    $0x8,%al
    0.00 :   972e:   ja     97b6 <nf_conntrack_tcp_packet+0x3e6>
    0.00 :   9734:   cmp    $0x2,%al
    0.00 :   9736:   je     a2bf <nf_conntrack_tcp_packet+0xeef>
    0.00 :   973c:   cmp    $0x7,%al
    0.00 :   973e:   jne    98d3 <nf_conntrack_tcp_packet+0x503>
    0.00 :   9744:   cmpl   $0x6,0x4(%rsp)
    0.00 :   9749:   jne    a213 <nf_conntrack_tcp_packet+0xe43>
    0.00 :   974f:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   9754:   jne    a213 <nf_conntrack_tcp_packet+0xe43>
    0.00 :   975a:   movzbl 0x5d(%rsp),%eax
    0.00 :   975f:   cmp    %al,0xe1(%rbx)
    0.00 :   9765:   je     a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   976b:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   9772:   jne    a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   9778:   movzbl 0xf3(%rbx),%eax
    0.00 :   977f:   test   $0x40,%al
    0.00 :   9781:   je     a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   9787:   and    $0xffffffbf,%eax
    0.00 :   978a:   mov    0x28(%rsp),%rdi
    0.00 :   978f:   mov    %al,0xf3(%rbx)
    0.00 :   9795:   call   979a <nf_conntrack_tcp_packet+0x3ca>
    0.00 :   979a:   mov    0x10(%rsp),%rdx
    0.00 :   979f:   mov    %rbx,%rsi
    0.00 :   97a2:   mov    %r13,%rdi
    0.00 :   97a5:   mov    $0x0,%rcx
    0.00 :   97ac:   call   97b1 <nf_conntrack_tcp_packet+0x3e1>
    0.00 :   97b1:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   97b6:   cmp    $0xa,%al
    0.00 :   97b8:   je     a32c <nf_conntrack_tcp_packet+0xf5c>
    0.00 :   97be:   cmpl   $0x2,(%rsp)
    0.00 :   97c2:   setbe  %cl
    0.00 :   97c5:   cmp    $0xb,%al
    0.00 :   97c7:   jne    9923 <nf_conntrack_tcp_packet+0x553>
    0.00 :   97cd:   cmpl   $0x1,0x1c(%rsp)
    0.00 :   97d2:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97d8:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   97df:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97e5:   movzbl 0xe1(%rbx),%edx
    0.00 :   97ec:   cmp    0x5d(%rsp),%dl
    0.00 :   97f0:   je     a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97f6:   mov    0x8(%rbp),%eax
    0.00 :   97f9:   bswap  %eax
    0.00 :   97fb:   cmp    0xec(%rbx),%eax
    0.00 :   9801:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   9807:   lea    (%rdx,%rdx,4),%rdx
    0.00 :   980b:   mov    $0x1,%edi
    0.00 :   9810:   mov    %rcx,%r8
    0.00 :   9813:   movl   $0x1,0x4(%rsp)
    0.00 :   981b:   lea    0x0(,%rdx,4),%r9
    0.00 :   9823:   movl   $0x2,0x20(%rsp)
    0.00 :   982b:   lea    (%rbx,%r9,1),%rsi
    0.00 :   982f:   mov    %eax,0xb8(%rsi)
    0.00 :   9835:   mov    %eax,0xbc(%rsi)
    0.00 :   983b:   movzwl 0xf0(%rbx),%eax
    0.00 :   9842:   test   %ax,%ax
    0.00 :   9845:   cmove  %edi,%eax
    0.00 :   9848:   and    $0x1,%r8d
    0.00 :   984c:   mov    %eax,0xc0(%rsi)
    0.00 :   9852:   movzwl 0x0(%rip),%esi        # 9859 <nf_conntrack_tcp_packet+0x489>
    0.00 :   9859:   movzbl 0xf3(%rbx),%eax
    0.00 :   9860:   mov    0xf2(%rbx),%sil
    0.00 :   9867:   and    $0xffffffbf,%eax
    0.00 :   986a:   mov    %esi,%edx
    0.00 :   986c:   mov    %al,0xf3(%rbx)
    0.00 :   9872:   mov    %al,%dh
    0.00 :   9874:   lea    (%r10,%r10,4),%rax
    0.00 :   9878:   mov    %dx,0xc8(%rbx,%r9,1)
    0.00 :   9881:   lea    (%rbx,%rax,4),%rax
    0.00 :   9885:   movzbl %cl,%r9d
    0.00 :   9889:   andb   $0x8,0xc9(%rax)
    0.00 :   9890:   movq   $0x0,0xb8(%rax)
    0.00 :   989b:   movq   $0x0,0xc0(%rax)
    0.00 :   98a6:   movb   $0x0,0xc8(%rax)
    0.00 :   98ad:   movzbl 0xd(%rbp),%eax
    0.00 :   98b1:   mov    %al,0x8(%rsp)
    0.00 :   98b5:   mov    0x4(%rbp),%eax
    0.00 :   98b8:   mov    %eax,0x58(%rsp)
    0.00 :   98bc:   bswap  %eax
    0.00 :   98be:   mov    %eax,0x18(%rsp)
    0.00 :   98c2:   lea    (%r8,%r8,4),%rax
    0.00 :   98c6:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   98ce:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   98d3:   cmp    $0x1,%al
    0.00 :   98d5:   jne    a3ca <nf_conntrack_tcp_packet+0xffa>
    0.00 :   98db:   cmpl   $0x2,(%rsp)
    0.00 :   98df:   setbe  %r8b
    0.00 :   98e3:   setbe  %r9b
    0.00 :   98e7:   setbe  %cl
    0.00 :   98ea:   cmpl   $0x6,0x4(%rsp)
    0.00 :   98ef:   movzbl %r8b,%r8d
    0.00 :   98f3:   movzbl %r9b,%r9d
    0.00 :   98f7:   lea    (%r8,%r8,4),%rax
    0.00 :   98fb:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   9903:   ja     a1c2 <nf_conntrack_tcp_packet+0xdf2>
    0.00 :   9909:   mov    0x4(%rbp),%eax
    0.00 :   990c:   movl   $0x1,0x20(%rsp)
    0.00 :   9914:   mov    %eax,0x58(%rsp)
    0.00 :   9918:   bswap  %eax
    0.00 :   991a:   mov    %eax,0x18(%rsp)
    0.00 :   991e:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   9923:   cmp    $0x9,%al
    0.00 :   9925:   jne    a3ca <nf_conntrack_tcp_packet+0xffa>
    0.00 :   992b:   orb    $0x80,0xf3(%rbx)
    0.00 :   9932:   movzbl 0xd(%rbp),%eax
    0.00 :   9936:   xor    %r9d,%r9d
    0.00 :   9939:   cmpl   $0x2,(%rsp)
    0.00 :   993d:   movl   $0x9,0x20(%rsp)
    0.00 :   9945:   mov    %al,0x8(%rsp)
    0.00 :   9949:   setbe  %r8b
    0.00 :   994d:   mov    0x4(%rbp),%eax
    0.00 :   9950:   setbe  %r9b
    0.00 :   9954:   movzbl %r8b,%r8d
    0.00 :   9958:   mov    %eax,0x58(%rsp)
    0.00 :   995c:   bswap  %eax
    0.00 :   995e:   mov    %eax,0x18(%rsp)
    0.00 :   9962:   lea    (%r8,%r8,4),%rax
    0.00 :   9966:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   996e:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    2.32 :   9973:   movzbl 0xd(%rbp),%ecx // [nf_conntrack][9973]
    0.00 :   9977:   test   $0x2,%cl
    0.00 :   997a:   jne    a056 <nf_conntrack_tcp_packet+0xc86>
    0.00 :   9980:   lea    (%r8,%r8,4),%rdx
    0.00 :   9984:   mov    0xb8(%rbx,%rdx,4),%esi
    2.96 :   998b:   mov    0xbc(%r12),%edx // [nf_conntrack][998b]
    0.00 :   9993:   test   $0x10,%cl
    0.00 :   9996:   jne    9d84 <nf_conntrack_tcp_packet+0x9b4>
    0.00 :   999c:   mov    %esi,%eax
    0.00 :   999e:   mov    %esi,%r15d
    0.00 :   99a1:   test   $0x4,%cl
    0.00 :   99a4:   je     99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   99a6:   mov    0x58(%rsp),%r14d
    0.00 :   99ab:   test   %r14d,%r14d
    0.00 :   99ae:   je     a295 <nf_conntrack_tcp_packet+0xec5>
    0.00 :   99b4:   lea    0x1(%rdx),%edi
    0.00 :   99b7:   cmp    %edi,0x18(%rsp)
    0.00 :   99bb:   js     9da9 <nf_conntrack_tcp_packet+0x9d9>
    0.00 :   99c1:   lea    (%r8,%r8,4),%rcx
    0.00 :   99c5:   mov    0xc0(%r12),%r9d
    0.00 :   99cd:   mov    0xc0(%rbx,%rcx,4),%esi
    0.00 :   99d4:   test   %esi,%esi
    0.00 :   99d6:   je     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   99d8:   mov    0x8(%rsp),%r14d
    0.00 :   99dd:   mov    %r14d,%ecx
    0.00 :   99e0:   sub    %edx,%ecx
    0.00 :   99e2:   mov    $0x101d0,%edx
    0.00 :   99e7:   lea    0x1(%rcx),%r8d
    0.00 :   99eb:   mov    %esi,%ecx
    0.00 :   99ed:   not    %ecx
    0.00 :   99ef:   add    0xb8(%r12),%ecx
    0.00 :   99f7:   sub    %r14d,%ecx
    0.00 :   99fa:   shr    $0x1f,%ecx
    0.00 :   99fd:   cmp    %edx,%r9d
    0.00 :   9a00:   cmovb  %edx,%r9d
    0.00 :   9a04:   mov    %eax,%edx
    0.00 :   9a06:   sub    %r9d,%edx
    0.00 :   9a09:   sub    $0x1,%edx
    0.00 :   9a0c:   sub    %r15d,%edx
    0.00 :   9a0f:   shr    $0x1f,%edx
    0.00 :   9a12:   test   %dl,%cl
    0.00 :   9a14:   je     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a16:   cmp    %r8d,%esi
    0.00 :   9a19:   jb     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a1b:   sub    $0x1,%r15d
    0.00 :   9a1f:   cmp    %eax,%r15d
    0.00 :   9a22:   jns    9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a24:   lea    (%r10,%r10,4),%rax
    0.00 :   9a28:   mov    %r14d,0xb8(%r12)
    0.00 :   9a30:   mov    $0x0,%r9
    0.00 :   9a37:   orb    $0x10,0xc9(%rbx,%rax,4)
    0.00 :   9a3f:   mov    %r10,0x8(%rsp)
    0.00 :   9a44:   push   %r8
    0.00 :   9a46:   xor    %r8d,%r8d
    0.00 :   9a49:   jmp    9a5e <nf_conntrack_tcp_packet+0x68e>
    0.00 :   9a4b:   mov    %r10,0x8(%rsp)
    0.00 :   9a50:   mov    $0x0,%r9
    0.00 :   9a57:   mov    $0x1,%r8d
    0.00 :   9a5d:   push   %rdi
    0.00 :   9a5e:   mov    0x40(%rsp),%rcx
    0.00 :   9a63:   mov    0x18(%rsp),%rdx
    0.00 :   9a68:   mov    %rbx,%rsi
    0.00 :   9a6b:   mov    %r13,%rdi
    0.00 :   9a6e:   call   8d20 <nf_tcp_log_invalid>
    0.00 :   9a73:   pop    %r11
    0.00 :   9a75:   mov    0x8(%rsp),%r10
    0.00 :   9a7a:   test   %eax,%eax
    0.00 :   9a7c:   jne    9aba <nf_conntrack_tcp_packet+0x6ea>
    0.00 :   9a7e:   mov    0x28(%rsp),%rdi
    0.00 :   9a83:   call   9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9a88:   mov    $0x1,%eax
    0.00 :   9a8d:   mov    0xb8(%rsp),%rdx
    0.00 :   9a95:   sub    %gs:0x28,%rdx
    0.00 :   9a9e:   jne    aa6a <nf_conntrack_tcp_packet+0x169a>
    2.66 :   9aa4:   add    $0xc0,%rsp // [nf_conntrack][9aa4]
    0.00 :   9aab:   pop    %rbx
    0.00 :   9aac:   pop    %rbp
    0.00 :   9aad:   pop    %r12
    0.00 :   9aaf:   pop    %r13
    0.00 :   9ab1:   pop    %r14
    0.00 :   9ab3:   pop    %r15
    0.00 :   9ab5:   jmp    9aba <nf_conntrack_tcp_packet+0x6ea>
    0.00 :   9aba:   cmp    $0x1,%eax
    0.00 :   9abd:   je     9ac3 <nf_conntrack_tcp_packet+0x6f3>
    0.00 :   9ac3:   mov    0x20(%rsp),%ecx
    0.00 :   9ac7:   mov    0x4(%rsp),%esi
    0.00 :   9acb:   cmp    $0x4,%ecx
    0.00 :   9ace:   mov    %ecx,%eax
    0.00 :   9ad0:   sete   %r12b
    0.00 :   9ad4:   cmp    %esi,%ecx
    0.00 :   9ad6:   setne  %dl
    0.00 :   9ad9:   and    %edx,%r12d
    0.00 :   9adc:   movzbl 0x1c(%rsp),%ecx
    0.00 :   9ae1:   movzbl 0x5d(%rsp),%esi
    0.00 :   9ae6:   mov    %cl,0xe3(%rbx)
    0.00 :   9aec:   mov    %sil,0xe1(%rbx)
    0.00 :   9af3:   nopl   0x0(%rax,%rax,1)
    0.00 :   9af8:   nopl   0x0(%rax,%rax,1)
    0.00 :   9afd:   mov    %al,0xe0(%rbx)
    0.00 :   9b03:   test   %r12b,%r12b
    0.00 :   9b06:   je     9b14 <nf_conntrack_tcp_packet+0x744>
    0.00 :   9b08:   lea    (%r10,%r10,4),%rax
    0.00 :   9b0c:   orb    $0x4,0xc9(%rbx,%rax,4)
    0.00 :   9b14:   mov    0x30(%rsp),%rsi
    0.00 :   9b19:   movzbl 0xb8e(%rsi),%ecx
    4.23 :   9b20:   lea    0xb54(%rsi),%rax // [nf_conntrack][9b20]
    0.00 :   9b27:   cmp    %cl,0xe2(%rbx)
    0.00 :   9b2d:   jb     9bed <nf_conntrack_tcp_packet+0x81d>
    0.00 :   9b33:   mov    0x20(%rsp),%edx
    0.00 :   9b37:   mov    0xb84(%rsi),%r12d
    0.00 :   9b3e:   cmp    (%rax,%rdx,4),%r12d
    0.00 :   9b42:   jae    9bed <nf_conntrack_tcp_packet+0x81d>
    2.34 :   9b48:   mov    0x28(%rsp),%rdi // [nf_conntrack][9b48]
    0.00 :   9b4d:   call   9b52 <nf_conntrack_tcp_packet+0x782>
    0.00 :   9b52:   mov    0x4(%rsp),%esi
    0.00 :   9b56:   cmp    %esi,0x20(%rsp)
    0.00 :   9b5a:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b5c:   mov    0x88(%rbx),%rax
    0.00 :   9b63:   mov    0xb48(%rax),%rax
    0.00 :   9b6a:   test   %rax,%rax
    0.00 :   9b6d:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b6f:   mov    0xb0(%rbx),%rdi
    0.00 :   9b76:   test   %rdi,%rdi
    0.00 :   9b79:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b7b:   movzbl 0x4(%rdi),%eax
    0.00 :   9b7f:   test   %al,%al
    0.00 :   9b81:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b83:   mov    0xc(%rdi),%esi
    0.00 :   9b86:   add    %rdi,%rax
    0.00 :   9b89:   test   %esi,%esi
    0.00 :   9b8b:   jne    a896 <nf_conntrack_tcp_packet+0x14c6>
    0.00 :   9b91:   test   %rax,%rax
    0.00 :   9b94:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b96:   lock orb $0x20,(%rax)
    0.00 :   9b9a:   mov    0x80(%rbx),%rax
    0.00 :   9ba1:   test   $0x2,%al
    0.00 :   9ba3:   jne    9c4d <nf_conntrack_tcp_packet+0x87d>
    0.00 :   9ba9:   testb  $0x4,0xd(%rbp)
    0.00 :   9bad:   jne    a4f3 <nf_conntrack_tcp_packet+0x1123>
    0.00 :   9bb3:   mov    0x1c(%rsp),%ecx
    0.00 :   9bb7:   test   %ecx,%ecx
    0.00 :   9bb9:   jne    9bc6 <nf_conntrack_tcp_packet+0x7f6>
    0.00 :   9bbb:   cmpl   $0x1,0x4(%rsp)
    0.00 :   9bc0:   je     9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9bc6:   cmpl   $0x3,0x20(%rsp)
    0.00 :   9bcb:   je     a506 <nf_conntrack_tcp_packet+0x1136>
    0.00 :   9bd1:   mov    (%rsp),%esi
    1.94 :   9bd4:   mov    $0x1,%r8d // [nf_conntrack][9bd4]
    0.00 :   9bda:   mov    %r12d,%ecx
    0.00 :   9bdd:   mov    %r13,%rdx
    0.00 :   9be0:   mov    %rbx,%rdi
    2.98 :   9be3:   call   9be8 <nf_conntrack_tcp_packet+0x818> // [nf_conntrack][9be3]
    0.00 :   9be8:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9bed:   cmpl   $0x4,0x1c(%rsp)
    0.00 :   9bf2:   je     a791 <nf_conntrack_tcp_packet+0x13c1>
    0.00 :   9bf8:   mov    0x20(%rsp),%edx
    0.00 :   9bfc:   mov    (%rax,%rdx,4),%r12d
    0.00 :   9c00:   movzbl 0xc9(%rbx),%eax
    0.00 :   9c07:   or     0xdd(%rbx),%al
    0.00 :   9c0d:   test   $0x10,%al
    0.00 :   9c0f:   je     9c29 <nf_conntrack_tcp_packet+0x859>
    0.00 :   9c11:   mov    0x30(%rsp),%rax
    0.00 :   9c16:   mov    0xb88(%rax),%eax
    0.00 :   9c1c:   cmp    %r12d,%eax
    0.00 :   9c1f:   jae    9c29 <nf_conntrack_tcp_packet+0x859>
    0.00 :   9c21:   mov    %eax,%r12d
    0.00 :   9c24:   jmp    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c29:   cmpw   $0x0,0xf0(%rbx)
    0.00 :   9c31:   jne    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c37:   mov    0x30(%rsp),%rax
    0.00 :   9c3c:   mov    0xb84(%rax),%eax
    0.00 :   9c42:   cmp    %r12d,%eax
    0.00 :   9c45:   jae    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c4b:   jmp    9c21 <nf_conntrack_tcp_packet+0x851>
    0.00 :   9c4d:   mov    0x80(%rbx),%rax
    0.00 :   9c54:   test   $0x4,%al
    0.00 :   9c56:   jne    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c5c:   mov    0x4(%rsp),%eax
    0.00 :   9c60:   sub    $0x2,%eax
    0.00 :   9c63:   cmp    $0x1,%eax
    0.00 :   9c66:   ja     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c6c:   cmpl   $0x3,0x20(%rsp)
    0.00 :   9c71:   jne    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c77:   lock orb $0x4,0x80(%rbx)
    0.00 :   9c7f:   mov    0x88(%rbx),%rax
    0.00 :   9c86:   mov    0xb48(%rax),%rax
    0.00 :   9c8d:   test   %rax,%rax
    0.00 :   9c90:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c96:   mov    0xb0(%rbx),%rdi
    0.00 :   9c9d:   test   %rdi,%rdi
    0.00 :   9ca0:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9ca6:   movzbl 0x4(%rdi),%eax
    0.00 :   9caa:   test   %al,%al
    0.00 :   9cac:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cb2:   mov    0xc(%rdi),%edx
    0.00 :   9cb5:   add    %rdi,%rax
    0.00 :   9cb8:   test   %edx,%edx
    0.00 :   9cba:   jne    a9dd <nf_conntrack_tcp_packet+0x160d>
    0.00 :   9cc0:   test   %rax,%rax
    0.00 :   9cc3:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cc9:   lock orb $0x10,(%rax)
    0.00 :   9ccd:   jmp    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cd2:   mov    %eax,0x40(%rsp)
    0.00 :   9cd6:   mov    0x8(%rsp),%eax
    0.00 :   9cda:   mov    $0x1,%edx
    0.00 :   9cdf:   mov    %r14d,%esi
    0.00 :   9ce2:   mov    0x38(%rsp),%rcx
    0.00 :   9ce7:   mov    %r13,%rdi
    0.00 :   9cea:   mov    %r8,0x60(%rsp)
    0.00 :   9cef:   mov    %eax,0xbc(%r12)
    0.00 :   9cf7:   mov    %eax,0xb8(%r12)
    0.00 :   9cff:   mov    0x54(%rsp),%eax
    0.00 :   9d03:   mov    %r10,0x48(%rsp)
    0.00 :   9d08:   test   %eax,%eax
    0.00 :   9d0a:   cmovne %eax,%edx
    0.00 :   9d0d:   mov    %edx,0xc0(%r12)
    0.00 :   9d15:   mov    %rbp,%rdx
    0.00 :   9d18:   call   90c0 <tcp_options>
    0.00 :   9d1d:   mov    0x48(%rsp),%r10
    0.00 :   9d22:   mov    0x50(%rsp),%r11d
    0.00 :   9d27:   mov    0x40(%rsp),%eax
    0.00 :   9d2b:   mov    0x60(%rsp),%r8
    0.00 :   9d30:   lea    (%r10,%r10,4),%rdx
    0.00 :   9d34:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   9d3c:   je     9d4c <nf_conntrack_tcp_packet+0x97c>
    0.00 :   9d3e:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d42:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   9d4a:   jne    9d64 <nf_conntrack_tcp_packet+0x994>
    0.00 :   9d4c:   lea    (%r10,%r10,4),%rdx
    0.00 :   9d50:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   9d58:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d5c:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   9d64:   movzbl 0xd(%rbp),%ecx
    0.00 :   9d68:   test   $0x10,%cl
    0.00 :   9d6b:   je     a129 <nf_conntrack_tcp_packet+0xd59>
    0.00 :   9d71:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d75:   mov    0xb8(%rbx,%rdx,4),%esi
    0.00 :   9d7c:   mov    0xbc(%r12),%edx
    1.83 :   9d84:   sub    %eax,%r11d // [nf_conntrack][9d84]
    0.00 :   9d87:   mov    0xc(%rbp),%eax
    0.00 :   9d8a:   and    $0x1400,%eax
    0.00 :   9d8f:   cmp    $0x1400,%eax
    0.00 :   9d94:   mov    %esi,%eax
    0.00 :   9d96:   jne    9da1 <nf_conntrack_tcp_packet+0x9d1>
    0.00 :   9d98:   test   %r11d,%r11d
    0.00 :   9d9b:   je     a1ba <nf_conntrack_tcp_packet+0xdea>
    0.00 :   9da1:   mov    %r11d,%esi
    0.00 :   9da4:   jmp    99a1 <nf_conntrack_tcp_packet+0x5d1>
    0.00 :   9da9:   lea    0x1(%rax),%edi
    5.02 :   9dac:   cmp    %edi,%r15d // [nf_conntrack][9dac]
    0.00 :   9daf:   jns    a4bc <nf_conntrack_tcp_packet+0x10ec>
    0.00 :   9db5:   lea    (%r8,%r8,4),%rdi
    0.00 :   9db9:   lea    (%rbx,%rdi,4),%rdi
    0.00 :   9dbd:   mov    0xc0(%rdi),%r9d
    0.00 :   9dc4:   test   %r9d,%r9d
    0.00 :   9dc7:   jne    a18e <nf_conntrack_tcp_packet+0xdbe>
    0.00 :   9dcd:   mov    0xc0(%r12),%r9d
    0.00 :   9dd5:   mov    $0x101d0,%r11d
    0.00 :   9ddb:   cmp    %r11d,%r9d
    0.00 :   9dde:   cmovae %r9d,%r11d
    0.00 :   9de2:   sub    %r11d,%eax
    0.00 :   9de5:   sub    $0x1,%eax
    0.00 :   9de8:   cmp    %r15d,%eax
    0.00 :   9deb:   jns    a4d4 <nf_conntrack_tcp_packet+0x1104>
    3.63 :   9df1:   and    $0x2,%ecx // [nf_conntrack][9df1]
    0.00 :   9df4:   jne    9e06 <nf_conntrack_tcp_packet+0xa36>
    0.00 :   9df6:   lea    (%r10,%r10,4),%rax
    0.84 :   9dfa:   movzbl 0xc8(%rbx,%rax,4),%ecx // [nf_conntrack][9dfa]
    0.00 :   9e02:   shll   %cl,0x54(%rsp)
    0.00 :   9e06:   mov    0x54(%rsp),%ecx
    2.30 :   9e0a:   mov    %r15d,%eax // [nf_conntrack][9e0a]
    0.00 :   9e0d:   sub    %esi,%eax
    0.00 :   9e0f:   add    %ecx,%eax
    0.00 :   9e11:   cmp    %eax,%r9d
    0.00 :   9e14:   jae    9e1e <nf_conntrack_tcp_packet+0xa4e>
    0.00 :   9e16:   mov    %eax,0xc0(%r12)
    0.00 :   9e1e:   mov    0x8(%rsp),%eax
    0.00 :   9e22:   cmp    %eax,0xb8(%r12)
    0.00 :   9e2a:   jns    9e40 <nf_conntrack_tcp_packet+0xa70>
    0.00 :   9e2c:   mov    %eax,0xb8(%r12)
    0.00 :   9e34:   lea    (%r10,%r10,4),%rax
    0.00 :   9e38:   orb    $0x10,0xc9(%rbx,%rax,4)
    0.00 :   9e40:   testb  $0x10,0xd(%rbp)
    0.00 :   9e44:   je     9e6f <nf_conntrack_tcp_packet+0xa9f>
    0.00 :   9e46:   lea    (%r10,%r10,4),%rax
    0.00 :   9e4a:   lea    (%rbx,%rax,4),%rcx
    0.00 :   9e4e:   movzbl 0xc9(%rcx),%eax
    0.00 :   9e55:   test   $0x20,%al
    0.00 :   9e57:   je     a51d <nf_conntrack_tcp_packet+0x114d>
    0.00 :   9e5d:   cmp    %esi,0xc4(%r12)
    0.00 :   9e65:   jns    9e6f <nf_conntrack_tcp_packet+0xa9f>
    1.64 :   9e67:   mov    %esi,0xc4(%r12) // [nf_conntrack][9e67]
    0.00 :   9e6f:   mov    0xc0(%rdi),%eax
    0.00 :   9e75:   test   %eax,%eax
    0.00 :   9e77:   je     9e85 <nf_conntrack_tcp_packet+0xab5>
    0.00 :   9e79:   mov    0x8(%rsp),%ecx
    0.00 :   9e7d:   cmp    %ecx,%edx
    0.00 :   9e7f:   js     a5ed <nf_conntrack_tcp_packet+0x121d>
    0.00 :   9e85:   mov    0x54(%rsp),%ecx
    0.00 :   9e89:   lea    (%rcx,%r15,1),%eax
    0.00 :   9e8d:   mov    %eax,%edx
    0.00 :   9e8f:   not    %edx
    0.00 :   9e91:   add    0xbc(%rdi),%edx
    0.00 :   9e97:   jns    9ea9 <nf_conntrack_tcp_packet+0xad9>
    0.00 :   9e99:   add    $0x1,%r15d
    0.00 :   9e9d:   test   %ecx,%ecx
    0.00 :   9e9f:   cmove  %r15d,%eax
    0.00 :   9ea3:   mov    %eax,0xbc(%rdi)
    4.12 :   9ea9:   cmp    0xb8(%rdi),%esi // [nf_conntrack][9ea9]
    0.00 :   9eaf:   jne    9ebd <nf_conntrack_tcp_packet+0xaed>
    0.00 :   9eb1:   lea    (%r8,%r8,4),%rax
    0.00 :   9eb5:   andb   $0xef,0xc9(%rbx,%rax,4)
    0.00 :   9ebd:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   9ec2:   je     a73d <nf_conntrack_tcp_packet+0x136d>
    0.00 :   9ec8:   mov    0x20(%rsp),%esi
    0.00 :   9ecc:   mov    0x4(%rsp),%edi
    0.00 :   9ed0:   cmp    %edi,%esi
    0.00 :   9ed2:   mov    %esi,%eax
    0.00 :   9ed4:   setne  %r12b
    0.00 :   9ed8:   cmp    $0x4,%esi
    0.00 :   9edb:   sete   %dl
    0.00 :   9ede:   and    %edx,%r12d
    0.00 :   9ee1:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   9ee6:   movq   $0x0,0x90(%rsp)
    0.00 :   9ef2:   movq   $0x0,0x98(%rsp)
    0.00 :   9efe:   movq   $0x0,0xa0(%rsp)
    0.00 :   9f0a:   movq   $0x0,0xa8(%rsp)
    0.00 :   9f16:   movq   $0x0,0xb0(%rsp)
    0.00 :   9f22:   movzbl 0xc(%rbp),%eax
    0.00 :   9f26:   shr    $0x4,%al
    0.00 :   9f29:   movzbl %al,%eax
    0.00 :   9f2c:   lea    -0x14(,%rax,4),%r15d
    0.00 :   9f34:   test   %r15d,%r15d
    0.00 :   9f37:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f3d:   lea    0x14(%r14),%esi
    0.00 :   9f41:   sub    0x74(%r13),%ecx
    0.00 :   9f45:   mov    0xd0(%r13),%rax
    0.00 :   9f4c:   sub    %esi,%ecx
    0.00 :   9f4e:   cmp    %ecx,%r15d
    0.00 :   9f51:   jg     a7f3 <nf_conntrack_tcp_packet+0x1423>
    0.00 :   9f57:   movslq %esi,%rsi
    0.00 :   9f5a:   add    %rsi,%rax
    0.00 :   9f5d:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f63:   cmp    $0xc,%r15d
    0.00 :   9f67:   je     a780 <nf_conntrack_tcp_packet+0x13b0>
    0.00 :   9f6d:   test   %r15d,%r15d
    0.00 :   9f70:   jle    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f76:   movzbl (%rax),%ecx
    0.00 :   9f79:   test   %cl,%cl
    0.00 :   9f7b:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f81:   cmp    $0x1,%cl
    0.00 :   9f84:   jne    a45b <nf_conntrack_tcp_packet+0x108b>
    0.00 :   9f8a:   sub    $0x1,%r15d
    0.00 :   9f8e:   add    $0x1,%rax
    0.00 :   9f92:   test   %r15d,%r15d
    0.00 :   9f95:   jg     9f76 <nf_conntrack_tcp_packet+0xba6>
    0.00 :   9f97:   jmp    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f9c:   mov    0x24(%rsp),%r10d
    0.00 :   9fa1:   mov    0x4(%rsp),%r15d
    0.00 :   9fa6:   mov    %r10,%rax
    0.00 :   9fa9:   shl    $0x4,%rax
    0.00 :   9fad:   sub    %r10,%rax
    0.00 :   9fb0:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   9fb9:   cmp    $0x8,%al
    0.00 :   9fbb:   je     a533 <nf_conntrack_tcp_packet+0x1163>
    0.00 :   9fc1:   movl   $0x4,0x1c(%rsp)
    0.00 :   9fc9:   jmp    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   9fce:   mov    %al,0x8(%rsp)
    0.00 :   9fd2:   mov    0x20(%rsp),%eax
    0.00 :   9fd6:   mov    $0x0,%rdi
    0.00 :   9fdd:   mov    $0x0,%rsi
    0.00 :   9fe4:   movzbl 0xd(%rbp),%r8d
    0.00 :   9fe9:   mov    %r10,0x10(%rsp)
    0.00 :   9fee:   push   %rax
    0.00 :   9fef:   mov    0xc(%rsp),%eax
    0.00 :   9ff3:   mov    %r8d,%r9d
    0.00 :   9ff6:   mov    %r8d,%ecx
    0.00 :   9ff9:   mov    %r8d,%edx
    0.00 :   9ffc:   and    $0x1,%r8d
    0.00 :   a000:   push   %rax
    0.00 :   a001:   shr    $0x2,%r9b
    0.00 :   a005:   shr    $0x4,%cl
    0.00 :   a008:   shr    %dl
    0.00 :   a00a:   and    $0x1,%ecx
    0.00 :   a00d:   and    $0x1,%r9d
    0.00 :   a011:   and    $0x1,%edx
    0.00 :   a014:   call   a019 <nf_conntrack_tcp_packet+0xc49>
    0.00 :   a019:   pop    %rdi
    0.00 :   a01a:   pop    %r8
    0.00 :   a01c:   mov    0x10(%rsp),%r10
    0.00 :   a021:   movzbl 0x8(%rsp),%eax
    0.00 :   a026:   jmp    9afd <nf_conntrack_tcp_packet+0x72d>
    0.00 :   a02b:   mov    $0x0,%rsi
    0.00 :   a032:   mov    $0x0,%rdi
    0.00 :   a039:   mov    %r10,0x10(%rsp)
    0.00 :   a03e:   mov    %al,0x8(%rsp)
    0.00 :   a042:   call   a047 <nf_conntrack_tcp_packet+0xc77>
    0.00 :   a047:   mov    0x10(%rsp),%r10
    0.00 :   a04c:   movzbl 0x8(%rsp),%eax
    0.00 :   a051:   jmp    9af8 <nf_conntrack_tcp_packet+0x728>
    0.00 :   a056:   mov    0x8(%rsp),%edi
    0.00 :   a05a:   cmp    %edi,0xb8(%r12)
    0.00 :   a062:   jns    9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a068:   movzbl 0xe0(%rbx),%esi
    0.00 :   a06f:   lea    -0x1(%rsi),%edx
    0.00 :   a072:   cmp    $0x1,%dl
    0.00 :   a075:   ja     9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a07b:   mov    %eax,0x40(%rsp)
    0.00 :   a07f:   mov    0x8(%rsp),%eax
    0.00 :   a083:   mov    $0x1,%edx
    0.00 :   a088:   mov    %r14d,%esi
    0.00 :   a08b:   mov    0x38(%rsp),%rcx
    0.00 :   a090:   mov    %r13,%rdi
    0.00 :   a093:   mov    %r8,0x60(%rsp)
    0.00 :   a098:   mov    %eax,0xbc(%r12)
    0.00 :   a0a0:   mov    %eax,0xb8(%r12)
    0.00 :   a0a8:   mov    0x54(%rsp),%eax
    0.00 :   a0ac:   mov    %r10,0x48(%rsp)
    0.00 :   a0b1:   test   %eax,%eax
    0.00 :   a0b3:   mov    %r11d,0x50(%rsp)
    0.00 :   a0b8:   cmovne %eax,%edx
    0.00 :   a0bb:   mov    %edx,0xc0(%r12)
    0.00 :   a0c3:   mov    %rbp,%rdx
    0.00 :   a0c6:   call   90c0 <tcp_options>
    0.00 :   a0cb:   mov    0x48(%rsp),%r10
    0.00 :   a0d0:   mov    0x50(%rsp),%r11d
    0.00 :   a0d5:   mov    0x40(%rsp),%eax
    0.00 :   a0d9:   mov    0x60(%rsp),%r8
    0.00 :   a0de:   lea    (%r10,%r10,4),%rdx
    0.00 :   a0e2:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   a0ea:   je     a0fa <nf_conntrack_tcp_packet+0xd2a>
    0.00 :   a0ec:   lea    (%r8,%r8,4),%rdx
    0.00 :   a0f0:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   a0f8:   jne    a112 <nf_conntrack_tcp_packet+0xd42>
    0.00 :   a0fa:   lea    (%r10,%r10,4),%rdx
    0.00 :   a0fe:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   a106:   lea    (%r8,%r8,4),%rdx
    0.00 :   a10a:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   a112:   cmpl   $0x2,(%rsp)
    0.00 :   a116:   movzbl 0xd(%rbp),%ecx
    0.00 :   a11a:   jbe    9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a120:   test   $0x10,%cl
    0.00 :   a123:   jne    9d71 <nf_conntrack_tcp_packet+0x9a1>
    0.00 :   a129:   mov    0x20(%rsp),%esi
    0.00 :   a12d:   mov    0x4(%rsp),%edi
    0.00 :   a131:   cmp    $0x4,%esi
    0.00 :   a134:   mov    %esi,%eax
    0.00 :   a136:   sete   %r12b
    0.00 :   a13a:   cmp    %edi,%esi
    0.00 :   a13c:   setne  %dl
    0.00 :   a13f:   and    %edx,%r12d
    0.00 :   a142:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a147:   shl    $0x4,%rax
    0.00 :   a14b:   movl   $0x5,0x1c(%rsp)
    0.00 :   a153:   sub    %r10,%rax
    0.00 :   a156:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   a15f:   cmp    $0x8,%al
    0.00 :   a161:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   a167:   jmp    9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   a16c:   mov    %r15d,0xbc(%rcx)
    0.00 :   a173:   mov    %r15d,%esi
    0.00 :   a176:   mov    %r15d,0xb8(%rcx)
    0.00 :   a17d:   movzbl 0xd(%rbp),%ecx
    0.00 :   a181:   mov    0xbc(%r12),%edx
    0.00 :   a189:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    0.00 :   a18e:   mov    0x8(%rsp),%r11d
    0.00 :   a193:   not    %r9d
    0.00 :   a196:   add    0xb8(%r12),%r9d
    1.61 :   a19e:   cmp    %r11d,%r9d // [nf_conntrack][a19e]
    2.28 :   a1a1:   js     9dcd <nf_conntrack_tcp_packet+0x9fd> // [nf_conntrack][a1a1]
    0.00 :   a1a7:   mov    %r10,0x8(%rsp)
    0.00 :   a1ac:   push   %r9
    0.00 :   a1ae:   mov    $0x0,%r9
    0.00 :   a1b5:   jmp    9a46 <nf_conntrack_tcp_packet+0x676>
    0.00 :   a1ba:   mov    %esi,%r15d
    0.00 :   a1bd:   jmp    99a1 <nf_conntrack_tcp_packet+0x5d1>
    0.00 :   a1c2:   lea    (%r10,%r10,4),%rax
    0.00 :   a1c6:   or     0xc9(%rbx,%rax,4),%sil
    0.00 :   a1ce:   and    $0x4,%esi
    0.00 :   a1d1:   jne    a1f1 <nf_conntrack_tcp_packet+0xe21>
    0.00 :   a1d3:   movzbl 0x5d(%rsp),%eax
    0.00 :   a1d8:   cmp    %al,0xe1(%rbx)
    0.00 :   a1de:   jne    97cd <nf_conntrack_tcp_packet+0x3fd>
    0.00 :   a1e4:   cmpb   $0x4,0xe3(%rbx)
    0.00 :   a1eb:   jne    97cd <nf_conntrack_tcp_packet+0x3fd>
    0.00 :   a1f1:   mov    0x28(%rsp),%rdi
    0.00 :   a1f6:   call   a1fb <nf_conntrack_tcp_packet+0xe2b>
    0.00 :   a1fb:   xor    %edx,%edx
    0.00 :   a1fd:   xor    %esi,%esi
    0.00 :   a1ff:   mov    %rbx,%rdi
    0.00 :   a202:   call   a207 <nf_conntrack_tcp_packet+0xe37>
    0.00 :   a207:   neg    %al
    0.00 :   a209:   sbb    %eax,%eax
    0.00 :   a20b:   and    $0xfffffffc,%eax
    0.00 :   a20e:   jmp    9a8d <nf_conntrack_tcp_packet+0x6bd>
    0.00 :   a213:   xor    %r9d,%r9d
    0.00 :   a216:   cmpl   $0x2,(%rsp)
    0.00 :   a21a:   mov    0x4(%rbp),%eax
    0.00 :   a21d:   movl   $0x7,0x20(%rsp)
    0.00 :   a225:   setbe  %r8b
    0.00 :   a229:   setbe  %r9b
    0.00 :   a22d:   movzbl %r8b,%r8d
    0.00 :   a231:   mov    %eax,0x58(%rsp)
    0.00 :   a235:   bswap  %eax
    0.00 :   a237:   mov    %eax,0x18(%rsp)
    0.00 :   a23b:   lea    (%r8,%r8,4),%rax
    0.00 :   a23f:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a247:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a24c:   xor    %r9d,%r9d
    0.00 :   a24f:   cmpl   $0x2,(%rsp)
    0.00 :   a253:   mov    0x4(%rbp),%eax
    0.00 :   a256:   setbe  %r8b
    0.00 :   a25a:   setbe  %r9b
    0.00 :   a25e:   movzbl %r8b,%r8d
    0.00 :   a262:   mov    %eax,0x58(%rsp)
    0.00 :   a266:   bswap  %eax
    0.00 :   a268:   mov    %eax,0x18(%rsp)
    0.00 :   a26c:   lea    (%r8,%r8,4),%rax
    0.00 :   a270:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a278:   movl   $0x3,0x1c(%rsp)
    0.00 :   a280:   movl   $0x6,0x4(%rsp)
    0.00 :   a288:   movl   $0x7,0x20(%rsp)
    0.00 :   a290:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a295:   cmpb   $0x1,0xe0(%rbx)
    0.00 :   a29c:   movl   $0x0,0x18(%rsp)
    0.00 :   a2a4:   jne    99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   a2aa:   mov    0xb8(%r12),%edi
    0.00 :   a2b2:   mov    %edi,0x18(%rsp)
    0.00 :   a2b6:   mov    %edi,0x8(%rsp)
    0.00 :   a2ba:   jmp    99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   a2bf:   xor    %r9d,%r9d
    0.00 :   a2c2:   cmpl   $0x2,(%rsp)
    0.00 :   a2c6:   mov    0x1c(%rsp),%ecx
    0.00 :   a2ca:   setbe  %r8b
    0.00 :   a2ce:   setbe  %r9b
    0.00 :   a2d2:   movzbl %r8b,%r8d
    0.00 :   a2d6:   lea    (%r8,%r8,4),%rax
    0.00 :   a2da:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a2e2:   mov    0x4(%rbp),%eax
    0.00 :   a2e5:   mov    %eax,0x58(%rsp)
    0.00 :   a2e9:   bswap  %eax
    0.00 :   a2eb:   mov    %eax,0x18(%rsp)
    0.00 :   a2ef:   cmp    $0x3,%ecx
    0.00 :   a2f2:   jne    a4e6 <nf_conntrack_tcp_packet+0x1116>
    0.00 :   a2f8:   cmpb   $0x0,0x5d(%rsp)
    0.00 :   a2fd:   je     a4e6 <nf_conntrack_tcp_packet+0x1116>
    0.00 :   a303:   cmpb   $0x0,0xf3(%rbx)
    0.00 :   a30a:   mov    $0x3,%eax
    0.00 :   a30f:   cmovns %ecx,%eax
    0.00 :   a312:   mov    %eax,0x1c(%rsp)
    0.00 :   a316:   movsbl 0xf3(%rbx),%eax
    0.00 :   a31d:   cltd
    0.00 :   a31e:   not    %edx
    0.00 :   a320:   add    $0x3,%edx
    0.00 :   a323:   mov    %edx,0x20(%rsp)
    0.00 :   a327:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a32c:   mov    0xb0(%rbx),%rdi
    0.00 :   a333:   test   %rdi,%rdi
    0.00 :   a336:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a33c:   movzbl 0x7(%rdi),%eax
    0.00 :   a340:   test   %al,%al
    0.00 :   a342:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a348:   mov    0xc(%rdi),%r12d
    0.00 :   a34c:   add    %rdi,%rax
    0.00 :   a34f:   test   %r12d,%r12d
    0.00 :   a352:   jne    a931 <nf_conntrack_tcp_packet+0x1561>
    0.00 :   a358:   test   %rax,%rax
    0.00 :   a35b:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a361:   cmpl   $0x1,0x4(%rsp)
    0.00 :   a366:   sete   %dl
    0.00 :   a369:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   a36e:   sete   %al
    0.00 :   a371:   test   %al,%dl
    0.00 :   a373:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a379:   cmpl   $0x2,(%rsp)
    0.00 :   a37d:   ja     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a383:   cmpb   $0x0,0xe1(%rbx)
    0.00 :   a38a:   jne    a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a390:   lea    (%r10,%r10,4),%rdx
    0.00 :   a394:   mov    0x4(%rbp),%eax
    0.00 :   a397:   mov    0xb8(%rbx,%rdx,4),%edx
    0.00 :   a39e:   bswap  %eax
    0.00 :   a3a0:   sub    $0x1,%edx
    0.00 :   a3a3:   cmp    %eax,%edx
    0.00 :   a3a5:   jne    a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a3ab:   xchg   %ax,%ax
    0.00 :   a3ad:   jmp    9a7e <nf_conntrack_tcp_packet+0x6ae>
    0.00 :   a3b2:   mov    $0x0,%rsi
    0.00 :   a3b9:   mov    $0x0,%rdi
    0.00 :   a3c0:   call   a3c5 <nf_conntrack_tcp_packet+0xff5>
    0.00 :   a3c5:   jmp    9a7e <nf_conntrack_tcp_packet+0x6ae>
    3.26 :   a3ca:   xor    %r9d,%r9d // [nf_conntrack][a3ca]
    0.00 :   a3cd:   cmpl   $0x2,(%rsp)
    0.00 :   a3d1:   mov    %eax,0x20(%rsp)
    0.00 :   a3d5:   setbe  %r8b
    0.00 :   a3d9:   mov    0x4(%rbp),%eax
    0.00 :   a3dc:   setbe  %r9b
    0.00 :   a3e0:   movzbl %r8b,%r8d
    0.00 :   a3e4:   mov    %eax,0x58(%rsp)
    0.00 :   a3e8:   bswap  %eax
    0.00 :   a3ea:   mov    %eax,0x18(%rsp)
    0.00 :   a3ee:   lea    (%r8,%r8,4),%rax
    0.00 :   a3f2:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a3fa:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a3ff:   mov    %r10,%rax
    0.00 :   a402:   movl   $0x2,0x1c(%rsp)
    0.00 :   a40a:   shl    $0x4,%rax
    0.00 :   a40e:   sub    %r10,%rax
    0.00 :   a411:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   a41a:   cmp    $0x8,%al
    0.00 :   a41c:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   a422:   jmp    9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   a427:   test   %rsi,%rsi
    0.00 :   a42a:   je     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   a430:   mov    $0x14,%ecx
    0.00 :   a435:   lea    0x68(%rsp),%rdx
    0.00 :   a43a:   mov    %r14d,%esi
    0.00 :   a43d:   mov    %r13,%rdi
    0.00 :   a440:   call   a445 <nf_conntrack_tcp_packet+0x1075>
    0.00 :   a445:   test   %eax,%eax
    0.00 :   a447:   js     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   a44d:   mov    0x70(%r13),%edx
    0.00 :   a451:   lea    0x68(%rsp),%rbp
    0.00 :   a456:   jmp    9455 <nf_conntrack_tcp_packet+0x85>
    0.00 :   a45b:   cmp    $0x1,%r15d
    0.00 :   a45f:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a465:   movzbl 0x1(%rax),%edx
    0.00 :   a469:   lea    0x2(%rax),%rsi
    0.00 :   a46d:   cmp    %r15d,%edx
    0.00 :   a470:   jg     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a476:   cmp    $0x1,%edx
    0.00 :   a479:   jle    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a47f:   lea    -0x2(%rdx),%eax
    0.00 :   a482:   cmp    $0x5,%cl
    0.00 :   a485:   jne    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a487:   cmp    $0x9,%edx
    0.00 :   a48a:   jle    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a48c:   test   $0x7,%al
    0.00 :   a48e:   jne    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a490:   mov    %r11d,%r15d
    0.00 :   a493:   xor    %ecx,%ecx
    0.00 :   a495:   mov    0x4(%rsi,%rcx,1),%edx
    0.00 :   a499:   bswap  %edx
    0.00 :   a49b:   cmp    %edx,%r15d
    0.00 :   a49e:   cmovs  %edx,%r15d
    0.00 :   a4a2:   add    $0x8,%rcx
    0.00 :   a4a6:   cmp    %ecx,%eax
    0.00 :   a4a8:   jg     a495 <nf_conntrack_tcp_packet+0x10c5>
    0.00 :   a4aa:   jmp    95ee <nf_conntrack_tcp_packet+0x21e>
    0.00 :   a4af:   cltq
    0.00 :   a4b1:   sub    %edx,%r15d
    0.00 :   a4b4:   add    %rsi,%rax
    0.00 :   a4b7:   jmp    9f6d <nf_conntrack_tcp_packet+0xb9d>
    0.00 :   a4bc:   mov    %r10,0x8(%rsp)
    0.00 :   a4c1:   mov    $0x0,%r9
    0.00 :   a4c8:   mov    $0x1,%r8d
    0.00 :   a4ce:   push   %rdi
    0.00 :   a4cf:   jmp    9a5e <nf_conntrack_tcp_packet+0x68e>
    0.00 :   a4d4:   mov    %r10,0x8(%rsp)
    0.00 :   a4d9:   mov    $0x0,%r9
    0.00 :   a4e0:   push   %rax
    0.00 :   a4e1:   jmp    9a46 <nf_conntrack_tcp_packet+0x676>
    0.00 :   a4e6:   movl   $0x2,0x20(%rsp)
    0.00 :   a4ee:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a4f3:   mov    (%rsp),%esi
    0.00 :   a4f6:   mov    %r13,%rdx
    0.00 :   a4f9:   mov    %rbx,%rdi
    0.00 :   a4fc:   call   a501 <nf_conntrack_tcp_packet+0x1131>
    0.00 :   a501:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   a506:   mov    0x30(%rsp),%rax
    0.00 :   a50b:   mov    0xb88(%rax),%eax
    0.00 :   a511:   cmp    %rax,%r12
    0.00 :   a514:   cmova  %rax,%r12
    0.00 :   a518:   jmp    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   a51d:   or     $0x20,%eax
    0.00 :   a520:   mov    %esi,0xc4(%r12)
    0.00 :   a528:   mov    %al,0xc9(%rcx)
    0.00 :   a52e:   jmp    9e6f <nf_conntrack_tcp_packet+0xa9f>
    0.00 :   a533:   movzbl %cl,%edi
    0.00 :   a536:   lea    -0x4(%rdi),%esi
    0.00 :   a539:   cmp    $0x4,%esi
    0.00 :   a53c:   jbe    a7de <nf_conntrack_tcp_packet+0x140e>
    0.00 :   a542:   xor    %r9d,%r9d
    0.00 :   a545:   cmpl   $0x2,(%rsp)
    0.00 :   a549:   setbe  %r8b
    0.00 :   a54d:   setbe  %r9b
    0.00 :   a551:   movzbl %r8b,%r8d
    0.00 :   a555:   lea    (%r8,%r8,4),%rax
    0.00 :   a559:   lea    (%rbx,%rax,4),%rax
    0.00 :   a55d:   movzbl 0xc9(%rax),%esi
    0.00 :   a564:   test   $0x20,%sil
    0.00 :   a568:   jne    a8a5 <nf_conntrack_tcp_packet+0x14d5>
    0.00 :   a56e:   mov    0x80(%rbx),%rax
    0.00 :   a575:   test   $0x2,%al
    0.00 :   a577:   jne    a94a <nf_conntrack_tcp_packet+0x157a>
    0.00 :   a57d:   movl   $0x8,0x20(%rsp)
    0.00 :   a585:   mov    0x80(%rbx),%rax
    0.00 :   a58c:   test   $0x4,%al
    0.00 :   a58e:   jne    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a590:   cmpb   $0x3,0xe3(%rbx)
    0.00 :   a597:   je     a95f <nf_conntrack_tcp_packet+0x158f>
    0.00 :   a59d:   mov    0x4(%rbp),%eax
    0.00 :   a5a0:   cmpl   $0x1,0x4(%rsp)
    0.00 :   a5a5:   movl   $0x4,0x1c(%rsp)
    0.00 :   a5ad:   mov    %eax,0x58(%rsp)
    0.00 :   a5b1:   bswap  %eax
    0.00 :   a5b3:   mov    %eax,0x18(%rsp)
    0.00 :   a5b7:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5bd:   mov    0xe0(%rbx),%eax
    0.00 :   a5c3:   and    $0xff00ff00,%eax
    0.00 :   a5c8:   cmp    $0x3000100,%eax
    0.00 :   a5cd:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5d3:   mov    0x18(%rsp),%eax
    0.00 :   a5d7:   cmp    %eax,0xe8(%rbx)
    0.00 :   a5dd:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5e3:   movzbl 0x20(%rsp),%eax
    0.00 :   a5e8:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a5ed:   sub    %edx,%eax
    0.00 :   a5ef:   add    %ecx,%eax
    0.00 :   a5f1:   mov    %eax,0xc0(%rdi)
    0.00 :   a5f7:   jmp    9e85 <nf_conntrack_tcp_packet+0xab5>
    0.00 :   a5fc:   movzbl 0x5d(%rsp),%eax
    0.00 :   a601:   mov    0x1c(%rsp),%r9d
    0.00 :   a606:   mov    %al,0xe1(%rbx)
    0.00 :   a60c:   mov    %r9b,0xe3(%rbx)
    0.00 :   a613:   mov    0x4(%rbp),%eax
    0.00 :   a616:   bswap  %eax
    0.00 :   a618:   mov    %eax,0xe4(%rbx)
    0.00 :   a61e:   movzbl 0xd(%rbp),%edx
    0.00 :   a622:   mov    0x70(%r13),%eax
    0.00 :   a626:   mov    0x4(%rbp),%esi
    0.00 :   a629:   mov    %edx,%edi
    0.00 :   a62b:   shr    %dl
    0.00 :   a62d:   sub    %r14d,%eax
    0.00 :   a630:   and    $0x1,%edi
    0.00 :   a633:   and    $0x1,%edx
    0.00 :   a636:   bswap  %esi
    0.00 :   a638:   add    %edi,%eax
    0.00 :   a63a:   add    %edx,%eax
    0.00 :   a63c:   movzbl 0xc(%rbp),%edx
    0.00 :   a640:   shr    $0x4,%dl
    0.00 :   a643:   movzbl %dl,%edx
    0.00 :   a646:   shl    $0x2,%edx
    0.00 :   a649:   sub    %edx,%eax
    0.00 :   a64b:   add    %esi,%eax
    0.00 :   a64d:   mov    %eax,0xec(%rbx)
    0.00 :   a653:   movzwl 0xe(%rbp),%eax
    0.00 :   a657:   rol    $0x8,%ax
    0.00 :   a65b:   mov    %ax,0xf0(%rbx)
    0.00 :   a662:   test   %r9d,%r9d
    0.00 :   a665:   jne    aa94 <nf_conntrack_tcp_packet+0x16c4>
    0.00 :   a66b:   test   %cl,%cl
    0.00 :   a66d:   je     aa94 <nf_conntrack_tcp_packet+0x16c4>
    0.00 :   a673:   movzwl 0x0(%rip),%r12d        # a67b <nf_conntrack_tcp_packet+0x12ab>
    0.00 :   a67b:   xor    %eax,%eax
    0.00 :   a67d:   mov    %rbp,%rdx
    0.00 :   a680:   mov    %r14d,%esi
    0.00 :   a683:   lea    0x7c(%rsp),%rdi
    0.00 :   a688:   mov    $0x5,%ecx
    0.00 :   a68d:   rep stos %eax,%es:(%rdi)
    0.00 :   a68f:   mov    %r12w,0xf2(%rbx)
    0.00 :   a697:   lea    0x7c(%rsp),%rcx
    0.00 :   a69c:   mov    %r13,%rdi
    0.00 :   a69f:   call   90c0 <tcp_options>
    0.00 :   a6a4:   movzbl 0x8d(%rsp),%ecx
    0.00 :   a6ac:   test   $0x1,%cl
    0.00 :   a6af:   je     a6ce <nf_conntrack_tcp_packet+0x12fe>
    0.00 :   a6b1:   movzbl 0xf3(%rbx),%edx
    0.00 :   a6b8:   mov    %r12d,%eax
    0.00 :   a6bb:   mov    0x8c(%rsp),%al
    0.00 :   a6c2:   or     $0x1,%edx
    0.00 :   a6c5:   mov    %dl,%ah
    0.00 :   a6c7:   mov    %ax,0xf2(%rbx)
    0.00 :   a6ce:   and    $0x2,%cl
    0.00 :   a6d1:   je     a6da <nf_conntrack_tcp_packet+0x130a>
    0.00 :   a6d3:   orb    $0x2,0xf3(%rbx)
    0.00 :   a6da:   cmpl   $0x6,0x4(%rsp)
    0.00 :   a6df:   jne    a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   a6e1:   orb    $0x40,0xf3(%rbx)
    0.00 :   a6e8:   mov    0x28(%rsp),%rdi
    0.00 :   a6ed:   call   a6f2 <nf_conntrack_tcp_packet+0x1322>
    0.00 :   a6f2:   push   0x0(,%r15,8)
    0.00 :   a6fa:   mov    0x2c(%rsp),%r9d
    0.00 :   a6ff:   mov    %r13,%rdi
    0.00 :   a702:   mov    0x24(%rsp),%r8d
    0.00 :   a707:   mov    $0x0,%rcx
    0.00 :   a70e:   mov    %rbx,%rsi
    0.00 :   a711:   mov    0x18(%rsp),%rdx
    0.00 :   a716:   call   a71b <nf_conntrack_tcp_packet+0x134b>
    0.00 :   a71b:   pop    %r13
    0.00 :   a71d:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   a722:   mov    %r15d,0xb8(%rcx)
    0.00 :   a729:   mov    %r15d,%esi
    0.00 :   a72c:   movzbl 0xd(%rbp),%ecx
    0.00 :   a730:   mov    0xbc(%r12),%edx
    0.00 :   a738:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    0.00 :   a73d:   movzbl 0xe1(%rbx),%eax
    2.09 :   a744:   cmp    %eax,0x24(%rsp) // [nf_conntrack][a744]
    0.00 :   a748:   je     a84c <nf_conntrack_tcp_packet+0x147c>
    0.00 :   a74e:   mov    0x18(%rsp),%eax
    3.13 :   a752:   mov    %esi,0xe8(%rbx) // [nf_conntrack][a752]
    0.00 :   a758:   movb   $0x0,0xe2(%rbx)
    0.00 :   a75f:   mov    %eax,0xe4(%rbx)
    0.00 :   a765:   mov    0x8(%rsp),%eax
    0.00 :   a769:   mov    %eax,0xec(%rbx)
    0.00 :   a76f:   movzwl 0x5e(%rsp),%eax
    0.00 :   a774:   mov    %ax,0xf0(%rbx)
    0.00 :   a77b:   jmp    9ec8 <nf_conntrack_tcp_packet+0xaf8>
    0.00 :   a780:   cmpl   $0xa080101,(%rax)
    0.00 :   a786:   jne    9f76 <nf_conntrack_tcp_packet+0xba6>
    0.00 :   a78c:   jmp    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a791:   mov    0x30(%rsp),%rax
    0.00 :   a796:   mov    0xb74(%rax),%r12d
    0.00 :   a79d:   jmp    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   a7a2:   mov    0x28(%rsp),%rdi
    0.00 :   a7a7:   call   a7ac <nf_conntrack_tcp_packet+0x13dc>
    0.00 :   a7ac:   push   0x0(,%r15,8)
    0.00 :   a7b4:   mov    0x2c(%rsp),%r9d
    0.00 :   a7b9:   mov    %rbx,%rsi
    0.00 :   a7bc:   mov    0x24(%rsp),%r8d
    0.00 :   a7c1:   mov    $0x0,%rcx
    0.00 :   a7c8:   mov    %r13,%rdi
    0.00 :   a7cb:   mov    0x18(%rsp),%rdx
    0.00 :   a7d0:   call   a7d5 <nf_conntrack_tcp_packet+0x1405>
    0.00 :   a7d5:   pop    %rbx
    0.00 :   a7d6:   or     $0xffffffff,%eax
    0.00 :   a7d9:   jmp    9a8d <nf_conntrack_tcp_packet+0x6bd>
    0.00 :   a7de:   movl   $0x4,0x1c(%rsp)
    0.00 :   a7e6:   movl   $0x8,0x20(%rsp)
    0.00 :   a7ee:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a7f3:   test   %r13,%r13
    0.00 :   a7f6:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a7fc:   mov    %r15d,%ecx
    0.00 :   a7ff:   lea    0x90(%rsp),%rdx
    0.00 :   a807:   mov    %r13,%rdi
    0.00 :   a80a:   mov    %r9d,0x60(%rsp)
    0.00 :   a80f:   mov    %r8,0x48(%rsp)
    0.00 :   a814:   mov    %r10,0x40(%rsp)
    0.00 :   a819:   mov    %r11d,0x50(%rsp)
    0.00 :   a81e:   call   a823 <nf_conntrack_tcp_packet+0x1453>
    0.00 :   a823:   mov    0x50(%rsp),%r11d
    0.00 :   a828:   mov    0x40(%rsp),%r10
    0.00 :   a82d:   test   %eax,%eax
    0.00 :   a82f:   mov    0x48(%rsp),%r8
    0.00 :   a834:   mov    0x60(%rsp),%r9d
    0.00 :   a839:   js     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a83f:   lea    0x90(%rsp),%rax
    0.00 :   a847:   jmp    9f63 <nf_conntrack_tcp_packet+0xb93>
    2.24 :   a84c:   mov    0x18(%rsp),%eax // [nf_conntrack][a84c]
    0.00 :   a850:   cmp    0xe4(%rbx),%eax
    0.00 :   a856:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a85c:   cmp    0xe8(%rbx),%esi
    0.00 :   a862:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a868:   mov    0x8(%rsp),%eax
    0.00 :   a86c:   cmp    0xec(%rbx),%eax
    0.00 :   a872:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a878:   movzwl 0x5e(%rsp),%eax
    0.00 :   a87d:   cmp    0xf0(%rbx),%ax
    0.00 :   a884:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a88a:   addb   $0x1,0xe2(%rbx)
    0.00 :   a891:   jmp    9ec8 <nf_conntrack_tcp_packet+0xaf8>
    0.00 :   a896:   mov    $0x4,%esi
    0.00 :   a89b:   call   a8a0 <nf_conntrack_tcp_packet+0x14d0>
    0.00 :   a8a0:   jmp    9b91 <nf_conntrack_tcp_packet+0x7c1>
    0.00 :   a8a5:   movzbl 0xe3(%rbx),%edi
    0.00 :   a8ac:   test   %dil,%dil
    0.00 :   a8af:   je     a982 <nf_conntrack_tcp_packet+0x15b2>
    0.00 :   a8b5:   mov    0x4(%rbp),%edx
    0.00 :   a8b8:   mov    %edx,%r11d
    0.00 :   a8bb:   mov    %edx,0x58(%rsp)
    0.00 :   a8bf:   bswap  %r11d
    0.00 :   a8c2:   mov    %r11d,0x18(%rsp)
    0.00 :   a8c7:   test   %edx,%edx
    0.00 :   a8c9:   je     a9a1 <nf_conntrack_tcp_packet+0x15d1>
    0.00 :   a8cf:   mov    0xc4(%rax),%eax
    0.00 :   a8d5:   cmp    %eax,0x18(%rsp)
    0.00 :   a8d9:   jns    a8ed <nf_conntrack_tcp_packet+0x151d>
    0.00 :   a8db:   mov    0x30(%rsp),%rdx
    0.00 :   a8e0:   cmpb   $0x0,0xb8f(%rdx)
    0.00 :   a8e7:   je     aa1e <nf_conntrack_tcp_packet+0x164e>
    0.00 :   a8ed:   movl   $0x4,0x1c(%rsp)
    0.00 :   a8f5:   movl   $0x8,0x20(%rsp)
    0.00 :   a8fd:   cmp    $0x3,%cl
    0.00 :   a900:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a906:   mov    0x80(%rbx),%rcx
    0.00 :   a90d:   and    $0x4,%ecx
    0.00 :   a910:   je     a91c <nf_conntrack_tcp_packet+0x154c>
    0.00 :   a912:   cmp    %eax,0x18(%rsp)
    0.00 :   a916:   jne    a9c3 <nf_conntrack_tcp_packet+0x15f3>
    0.00 :   a91c:   movl   $0x4,0x1c(%rsp)
    0.00 :   a924:   movl   $0x8,0x20(%rsp)
    0.00 :   a92c:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a931:   mov    $0x7,%esi
    0.00 :   a936:   mov    %r10,0x8(%rsp)
    0.00 :   a93b:   call   a940 <nf_conntrack_tcp_packet+0x1570>
    0.00 :   a940:   mov    0x8(%rsp),%r10
    0.00 :   a945:   jmp    a358 <nf_conntrack_tcp_packet+0xf88>
    0.00 :   a94a:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   a951:   movl   $0x8,0x20(%rsp)
    0.00 :   a959:   jne    a585 <nf_conntrack_tcp_packet+0x11b5>
    0.00 :   a95f:   mov    0x8(%rbp),%eax
    0.00 :   a962:   bswap  %eax
    0.00 :   a964:   cmp    0xec(%rbx),%eax
    0.00 :   a96a:   jne    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a970:   movl   $0x4,0x1c(%rsp)
    0.00 :   a978:   movzbl 0x20(%rsp),%eax
    0.00 :   a97d:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a982:   mov    0x80(%rbx),%rax
    0.00 :   a989:   movl   $0x8,0x20(%rsp)
    0.00 :   a991:   test   $0x2,%al
    0.00 :   a993:   jne    a95f <nf_conntrack_tcp_packet+0x158f>
    0.00 :   a995:   mov    0x80(%rbx),%rax
    0.00 :   a99c:   jmp    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a9a1:   cmp    $0x3,%cl
    0.00 :   a9a4:   je     a9ec <nf_conntrack_tcp_packet+0x161c>
    0.00 :   a9a6:   movl   $0x0,0x18(%rsp)
    0.00 :   a9ae:   movl   $0x4,0x1c(%rsp)
    0.00 :   a9b6:   movl   $0x8,0x20(%rsp)
    0.00 :   a9be:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a9c3:   cmp    $0x3,%dil
    0.00 :   a9c7:   je     aa44 <nf_conntrack_tcp_packet+0x1674>
    0.00 :   a9c9:   mov    0x80(%rbx),%rax
    0.00 :   a9d0:   mov    0x4(%rsp),%eax
    0.00 :   a9d4:   mov    %eax,0x20(%rsp)
    0.00 :   a9d8:   jmp    a585 <nf_conntrack_tcp_packet+0x11b5>
    0.00 :   a9dd:   mov    $0x4,%esi
    0.00 :   a9e2:   call   a9e7 <nf_conntrack_tcp_packet+0x1617>
    0.00 :   a9e7:   jmp    9cc0 <nf_conntrack_tcp_packet+0x8f0>
    0.00 :   a9ec:   mov    0x80(%rbx),%rax
    0.00 :   a9f3:   test   $0x4,%al
    0.00 :   a9f5:   je     aa6f <nf_conntrack_tcp_packet+0x169f>
    0.00 :   a9f7:   imul   $0x14,%r8,%rax
    0.00 :   a9fb:   mov    0xc4(%rbx,%rax,1),%eax
    0.00 :   aa02:   mov    %eax,%ecx
    0.00 :   aa04:   neg    %ecx
    0.00 :   aa06:   jns    a906 <nf_conntrack_tcp_packet+0x1536>
    0.00 :   aa0c:   mov    0x30(%rsp),%rcx
    0.00 :   aa11:   cmpb   $0x0,0xb8f(%rcx)
    0.00 :   aa18:   jne    a906 <nf_conntrack_tcp_packet+0x1536>
    0.00 :   aa1e:   mov    0x28(%rsp),%rdi
    0.00 :   aa23:   call   aa28 <nf_conntrack_tcp_packet+0x1658>
    0.00 :   aa28:   mov    0x10(%rsp),%rdx
    0.00 :   aa2d:   mov    %rbx,%rsi
    0.00 :   aa30:   mov    %r13,%rdi
    0.00 :   aa33:   mov    $0x0,%rcx
    0.00 :   aa3a:   call   aa3f <nf_conntrack_tcp_packet+0x166f>
    0.00 :   aa3f:   jmp    a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   aa44:   movzbl 0x5d(%rsp),%eax
    0.00 :   aa49:   cmp    %al,0xe1(%rbx)
    0.00 :   aa4f:   jne    a9c9 <nf_conntrack_tcp_packet+0x15f9>
    0.00 :   aa55:   mov    0x18(%rsp),%eax
    0.00 :   aa59:   cmp    %eax,0xec(%rbx)
    0.00 :   aa5f:   jne    a9c9 <nf_conntrack_tcp_packet+0x15f9>
    0.00 :   aa65:   jmp    a91c <nf_conntrack_tcp_packet+0x154c>
    0.00 :   aa6a:   call   aa6f <nf_conntrack_tcp_packet+0x169f>
    0.00 :   aa6f:   xor    %r11d,%r11d
    0.00 :   aa72:   movl   $0x4,0x1c(%rsp)
    0.00 :   aa7a:   mov    %r11d,0x18(%rsp)
    0.00 :   aa7f:   movl   $0x3,0x4(%rsp)
    0.00 :   aa87:   movl   $0x8,0x20(%rsp)
    0.00 :   aa8f:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   aa94:   cmpl   $0x1,0x4(%rsp)
    0.00 :   aa99:   sete   %al
    0.00 :   aa9c:   test   %al,0x5d(%rsp)
    0.00 :   aaa0:   je     a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   aaa6:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   aaab:   jne    a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   aab1:   mov    0x8(%rbp),%eax
    0.00 :   aab4:   bswap  %eax
    0.00 :   aab6:   mov    %eax,0xe8(%rbx)
    0.00 :   aabc:   jmp    a6e8 <nf_conntrack_tcp_packet+0x1318>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   42.52 [nf_conntrack][332d]
   25.92 [nf_conntrack][3364]
   13.18 [nf_conntrack][32fe]
    4.35 [nf_conntrack][32c0]
    3.18 [nf_conntrack][341d]
    2.84 [nf_conntrack][32f8]
    2.82 [nf_conntrack][3500]
    2.28 [nf_conntrack][3412]
    1.63 [nf_conntrack][343d]
    1.28 [nf_conntrack][343b]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (36 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000032c0 <__nf_conntrack_find_get>:
         : 6    __nf_conntrack_find_get():
    4.35 :   32c0:   call   32c5 <__nf_conntrack_find_get+0x5> // [nf_conntrack][32c0]
    0.00 :   32c5:   push   %r15
    0.00 :   32c7:   mov    %rdx,%r15
    0.00 :   32ca:   push   %r14
    0.00 :   32cc:   mov    %rsi,%r14
    0.00 :   32cf:   push   %r13
    0.00 :   32d1:   mov    %ecx,%r13d
    0.00 :   32d4:   push   %r12
    0.00 :   32d6:   push   %rbp
    0.00 :   32d7:   push   %rbx
    0.00 :   32d8:   sub    $0x10,%rsp
    0.00 :   32dc:   mov    %rdi,0x8(%rsp)
    0.00 :   32e1:   call   32e6 <__nf_conntrack_find_get+0x26>
    0.00 :   32e6:   mov    %r13d,%eax
    0.00 :   32e9:   mov    $0xfffffffffffffff0,%r13
    0.00 :   32f0:   mov    %rax,(%rsp)
    0.00 :   32f4:   jmp    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   32f6:   pause
    2.84 :   32f8:   mov    0x0(%rip),%eax        # 32fe <__nf_conntrack_find_get+0x3e> // [nf_conntrack][32f8]
   13.18 :   32fe:   test   $0x1,%al // [nf_conntrack][32fe]
    0.00 :   3300:   jne    32f6 <__nf_conntrack_find_get+0x36>
    0.00 :   3302:   mov    0x0(%rip),%r12d        # 3309 <__nf_conntrack_find_get+0x49>
    0.00 :   3309:   mov    0x0(%rip),%rsi        # 3310 <__nf_conntrack_find_get+0x50>
    0.00 :   3310:   mov    0x0(%rip),%ecx        # 3316 <__nf_conntrack_find_get+0x56>
    0.00 :   3316:   cmp    %eax,%ecx
    0.00 :   3318:   jne    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   331a:   mov    (%rsp),%rax
    0.00 :   331e:   imul   %rax,%r12
    0.00 :   3322:   shr    $0x20,%r12
    0.00 :   3326:   lea    (%rsi,%r12,8),%rax
    0.00 :   332a:   mov    (%rax),%rbx
   42.52 :   332d:   test   $0x1,%bl // [nf_conntrack][332d]
    0.00 :   3330:   je     3360 <__nf_conntrack_find_get+0xa0>
    0.00 :   3332:   jmp    33c6 <__nf_conntrack_find_get+0x106>
    0.00 :   3337:   mov    (%r15),%rax
    0.00 :   333a:   mov    0x8(%r15),%rsi
    0.00 :   333e:   xor    0x10(%rbx),%rax
    0.00 :   3342:   xor    0x18(%rbx),%rsi
    0.00 :   3346:   or     %rsi,%rax
    0.00 :   3349:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   334b:   mov    0x20(%rbx),%eax
    0.00 :   334e:   cmp    %eax,0x10(%r15)
    0.00 :   3352:   je     33e7 <__nf_conntrack_find_get+0x127>
    0.00 :   3358:   mov    (%rbx),%rbx
    0.00 :   335b:   test   $0x1,%bl
    0.00 :   335e:   jne    33c6 <__nf_conntrack_find_get+0x106>
    0.00 :   3360:   movzbl 0x37(%rbx),%esi
   25.92 :   3364:   mov    %r13,%rbp // [nf_conntrack][3364]
    0.00 :   3367:   lea    0x0(,%rsi,8),%rax
    0.00 :   336f:   mov    %rsi,%rcx
    0.00 :   3372:   sub    %rsi,%rax
    0.00 :   3375:   shl    $0x3,%rax
    0.00 :   3379:   sub    %rax,%rbp
    0.00 :   337c:   add    %rbx,%rbp
    0.00 :   337f:   mov    0x8(%rbp),%eax
    0.00 :   3382:   mov    0x0(%rip),%rsi        # 3389 <__nf_conntrack_find_get+0xc9>
    0.00 :   3389:   sub    %esi,%eax
    0.00 :   338b:   test   %eax,%eax
    0.00 :   338d:   jg     3337 <__nf_conntrack_find_get+0x77>
    0.00 :   338f:   mov    0x0(%rbp),%ecx
    0.00 :   3392:   test   %ecx,%ecx
    0.00 :   3394:   je     3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3396:   lea    0x1(%rcx),%esi
    0.00 :   3399:   mov    %ecx,%eax
    0.00 :   339b:   lock cmpxchg %esi,0x0(%rbp)
    0.00 :   33a0:   jne    352f <__nf_conntrack_find_get+0x26f>
    0.00 :   33a6:   test   %ecx,%ecx
    0.00 :   33a8:   js     3520 <__nf_conntrack_find_get+0x260>
    0.00 :   33ae:   test   %esi,%esi
    0.00 :   33b0:   js     3520 <__nf_conntrack_find_get+0x260>
    0.00 :   33b6:   mov    %rbp,%rdi
    0.00 :   33b9:   call   18e0 <nf_ct_gc_expired.part.0>
    0.00 :   33be:   mov    (%rbx),%rbx
    0.00 :   33c1:   test   $0x1,%bl
    0.00 :   33c4:   je     3360 <__nf_conntrack_find_get+0xa0>
    0.00 :   33c6:   shr    %rbx
    0.00 :   33c9:   cmp    %rbx,%r12
    0.00 :   33cc:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   33d2:   mov    0x8(%rsp),%rax
    0.00 :   33d7:   mov    0xb40(%rax),%rax
    0.00 :   33de:   incl   %gs:0x2c(%rax)
    0.00 :   33e2:   jmp    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   33e7:   mov    0x14(%r15),%rax
    0.00 :   33eb:   mov    0x1c(%r15),%rsi
    0.00 :   33ef:   xor    0x24(%rbx),%rax
    0.00 :   33f3:   xor    0x2c(%rbx),%rsi
    0.00 :   33f7:   or     %rsi,%rax
    0.00 :   33fa:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3400:   mov    0x24(%r15),%eax
    0.00 :   3404:   xor    0x34(%rbx),%eax
    0.00 :   3407:   test   $0xffffff,%eax
    0.00 :   340c:   jne    3358 <__nf_conntrack_find_get+0x98>
    2.28 :   3412:   mov    $0x1,%eax // [nf_conntrack][3412]
    0.00 :   3417:   movzbl 0xf(%rbp),%esi
    0.00 :   341b:   shl    %cl,%eax
    3.18 :   341d:   movzbl 0x3(%r14),%ecx // [nf_conntrack][341d]
    0.00 :   3422:   and    %eax,%ecx
    0.00 :   3424:   test   %eax,%esi
    0.00 :   3426:   jne    3500 <__nf_conntrack_find_get+0x240>
    0.00 :   342c:   test   %ecx,%ecx
    0.00 :   342e:   jne    351c <__nf_conntrack_find_get+0x25c>
    0.00 :   3434:   mov    0x80(%rbp),%rax
    1.28 :   343b:   test   $0x8,%al // [nf_conntrack][343b]
    1.63 :   343d:   je     3358 <__nf_conntrack_find_get+0x98> // [nf_conntrack][343d]
    0.00 :   3443:   mov    0x8(%rsp),%rax
    0.00 :   3448:   cmp    0x88(%rbp),%rax
    0.00 :   344f:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3455:   test   %rbx,%rbx
    0.00 :   3458:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   345e:   movzbl 0x37(%rbx),%edx
    0.00 :   3462:   lea    0x0(,%rdx,8),%rax
    0.00 :   346a:   sub    %rdx,%rax
    0.00 :   346d:   mov    %rbx,%rdx
    0.00 :   3470:   shl    $0x3,%rax
    0.00 :   3474:   sub    %rax,%rdx
    0.00 :   3477:   lea    -0x10(%rdx),%rbp
    0.00 :   347b:   mov    0x0(%rbp),%edx
    0.00 :   347e:   test   %edx,%edx
    0.00 :   3480:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   3482:   lea    0x1(%rdx),%ecx
    0.00 :   3485:   mov    %edx,%eax
    0.00 :   3487:   lock cmpxchg %ecx,0x0(%rbp)
    0.00 :   348c:   jne    35f1 <__nf_conntrack_find_get+0x331>
    0.00 :   3492:   test   %edx,%edx
    0.00 :   3494:   js     35de <__nf_conntrack_find_get+0x31e>
    0.00 :   349a:   test   %ecx,%ecx
    0.00 :   349c:   js     35de <__nf_conntrack_find_get+0x31e>
    0.00 :   34a2:   mov    (%r15),%rax
    0.00 :   34a5:   mov    0x8(%r15),%rdx
    0.00 :   34a9:   xor    0x10(%rbx),%rax
    0.00 :   34ad:   xor    0x18(%rbx),%rdx
    0.00 :   34b1:   or     %rdx,%rax
    0.00 :   34b4:   movzbl 0x37(%rbx),%ecx
    0.00 :   34b8:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   34ba:   mov    0x20(%rbx),%eax
    0.00 :   34bd:   cmp    %eax,0x10(%r15)
    0.00 :   34c1:   je     3536 <__nf_conntrack_find_get+0x276>
    0.00 :   34c3:   test   %rbp,%rbp
    0.00 :   34c6:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   34c8:   mov    $0xffffffff,%eax
    0.00 :   34cd:   lock xadd %eax,0x0(%rbp)
    0.00 :   34d2:   cmp    $0x1,%eax
    0.00 :   34d5:   je     360a <__nf_conntrack_find_get+0x34a>
    0.00 :   34db:   test   %eax,%eax
    0.00 :   34dd:   jle    35f8 <__nf_conntrack_find_get+0x338>
    0.00 :   34e3:   xor    %ebx,%ebx
    0.00 :   34e5:   call   34ea <__nf_conntrack_find_get+0x22a>
    0.00 :   34ea:   mov    %rbx,%rax
    0.00 :   34ed:   add    $0x10,%rsp
    0.00 :   34f1:   pop    %rbx
    0.00 :   34f2:   pop    %rbp
    0.00 :   34f3:   pop    %r12
    0.00 :   34f5:   pop    %r13
    0.00 :   34f7:   pop    %r14
    0.00 :   34f9:   pop    %r15
    0.00 :   34fb:   jmp    3500 <__nf_conntrack_find_get+0x240>
    2.82 :   3500:   movzwl 0xc(%rbp),%esi // [nf_conntrack][3500]
    0.00 :   3504:   xor    %eax,%eax
    0.00 :   3506:   test   %ecx,%ecx
    0.00 :   3508:   je     350e <__nf_conntrack_find_get+0x24e>
    0.00 :   350a:   movzwl (%r14),%eax
    0.00 :   350e:   cmp    %si,%ax
    0.00 :   3511:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3517:   jmp    3434 <__nf_conntrack_find_get+0x174>
    0.00 :   351c:   xor    %esi,%esi
    0.00 :   351e:   jmp    350a <__nf_conntrack_find_get+0x24a>
    0.00 :   3520:   xor    %esi,%esi
    0.00 :   3522:   mov    %rbp,%rdi
    0.00 :   3525:   call   352a <__nf_conntrack_find_get+0x26a>
    0.00 :   352a:   jmp    33b6 <__nf_conntrack_find_get+0xf6>
    0.00 :   352f:   mov    %eax,%ecx
    0.00 :   3531:   jmp    3392 <__nf_conntrack_find_get+0xd2>
    0.00 :   3536:   mov    0x14(%r15),%rax
    0.00 :   353a:   mov    0x1c(%r15),%rdx
    0.00 :   353e:   xor    0x24(%rbx),%rax
    0.00 :   3542:   xor    0x2c(%rbx),%rdx
    0.00 :   3546:   or     %rdx,%rax
    0.00 :   3549:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   354f:   mov    0x24(%r15),%eax
    0.00 :   3553:   xor    0x34(%rbx),%eax
    0.00 :   3556:   test   $0xffffff,%eax
    0.00 :   355b:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   3561:   movzbl %cl,%edx
    0.00 :   3564:   mov    %rbx,%rsi
    0.00 :   3567:   lea    0x0(,%rdx,8),%rax
    0.00 :   356f:   sub    %rdx,%rax
    0.00 :   3572:   movzbl 0x3(%r14),%edx
    0.00 :   3577:   shl    $0x3,%rax
    0.00 :   357b:   sub    %rax,%rsi
    0.00 :   357e:   mov    $0x1,%eax
    0.00 :   3583:   shl    %cl,%eax
    0.00 :   3585:   movzbl -0x1(%rsi),%ecx
    0.00 :   3589:   lea    -0x10(%rsi),%rdi
    0.00 :   358d:   and    %eax,%edx
    0.00 :   358f:   test   %eax,%ecx
    0.00 :   3591:   jne    35bd <__nf_conntrack_find_get+0x2fd>
    0.00 :   3593:   test   %edx,%edx
    0.00 :   3595:   jne    35ed <__nf_conntrack_find_get+0x32d>
    0.00 :   3597:   mov    0x80(%rdi),%rax
    0.00 :   359e:   test   $0x8,%al
    0.00 :   35a0:   je     34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   35a6:   mov    0x8(%rsp),%rax
    0.00 :   35ab:   cmp    0x88(%rdi),%rax
    0.00 :   35b2:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   35b8:   jmp    34e5 <__nf_conntrack_find_get+0x225>
    0.00 :   35bd:   movzwl 0xc(%rdi),%ecx
    0.00 :   35c1:   xor    %eax,%eax
    0.00 :   35c3:   test   %edx,%edx
    0.00 :   35c5:   je     35cb <__nf_conntrack_find_get+0x30b>
    0.00 :   35c7:   movzwl (%r14),%eax
    0.00 :   35cb:   cmp    %cx,%ax
    0.00 :   35ce:   je     3597 <__nf_conntrack_find_get+0x2d7>
    0.00 :   35d0:   test   %rbp,%rbp
    0.00 :   35d3:   jne    34c8 <__nf_conntrack_find_get+0x208>
    0.00 :   35d9:   jmp    34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   35de:   xor    %esi,%esi
    0.00 :   35e0:   mov    %rbp,%rdi
    0.00 :   35e3:   call   35e8 <__nf_conntrack_find_get+0x328>
    0.00 :   35e8:   jmp    34a2 <__nf_conntrack_find_get+0x1e2>
    0.00 :   35ed:   xor    %ecx,%ecx
    0.00 :   35ef:   jmp    35c7 <__nf_conntrack_find_get+0x307>
    0.00 :   35f1:   mov    %eax,%edx
    0.00 :   35f3:   jmp    347e <__nf_conntrack_find_get+0x1be>
    0.00 :   35f8:   mov    $0x3,%esi
    0.00 :   35fd:   mov    %rbp,%rdi
    0.00 :   3600:   call   3605 <__nf_conntrack_find_get+0x345>
    0.00 :   3605:   jmp    34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   360a:   mov    %rbp,%rdi
    0.00 :   360d:   call   3612 <__nf_conntrack_find_get+0x352>
    0.00 :   3612:   jmp    34e3 <__nf_conntrack_find_get+0x223>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   15.38 libc.so.6[5dbdf]
   13.03 libc.so.6[5d910]
    9.89 libc.so.6[5eb57]
    8.65 libc.so.6[5d94e]
    6.60 libc.so.6[5dc6d]
    6.27 libc.so.6[5d94b]
    5.46 libc.so.6[5df0e]
    5.39 libc.so.6[5da92]
    4.86 libc.so.6[5db77]
    4.80 libc.so.6[5dc73]
    4.59 libc.so.6[5e51c]
    4.50 libc.so.6[5e558]
    3.90 libc.so.6[5ef71]
    3.55 libc.so.6[5ec30]
    3.13 libc.so.6[5dc00]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (24 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000005d910 <__vfprintf_internal>:
         : 6     __vfprintf_internal():
   13.03 :   5d910:  endbr64 // libc.so.6[5d910]
    0.00 :   5d914:  push   %r15
    0.00 :   5d916:  push   %r14
    0.00 :   5d918:  push   %r13
    0.00 :   5d91a:  push   %r12
    0.00 :   5d91c:  mov    %rdx,%r12
    0.00 :   5d91f:  push   %rbp
    0.00 :   5d920:  push   %rbx
    0.00 :   5d921:  mov    %rdi,%rbx
    0.00 :   5d924:  sub    $0x508,%rsp
    0.00 :   5d92b:  mov    %rsi,(%rsp)
    0.00 :   5d92f:  mov    %ecx,0x3c(%rsp)
    0.00 :   5d933:  mov    %fs:0x28,%rax
    0.00 :   5d93c:  mov    %rax,0x4f8(%rsp)
    0.00 :   5d944:  mov    0x1754c5(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    6.27 :   5d94b:  mov    %fs:(%rax),%eax // libc.so.6[5d94b]
    8.65 :   5d94e:  mov    %eax,0x54(%rsp) // libc.so.6[5d94e]
    0.00 :   5d952:  mov    0xc0(%rdi),%eax
    0.00 :   5d958:  test   %eax,%eax
    0.00 :   5d95a:  jne    5dc20 <__vfprintf_internal+0x310>
    0.00 :   5d960:  movl   $0xffffffff,0xc0(%rdi)
    0.00 :   5d96a:  mov    (%rbx),%ebp
    0.00 :   5d96c:  test   $0x8,%bpl
    0.00 :   5d970:  jne    5fbb4 <__vfprintf_internal+0x22a4>
    0.00 :   5d976:  cmpq   $0x0,(%rsp)
    0.00 :   5d97b:  je     5fce0 <__vfprintf_internal+0x23d0>
    0.00 :   5d981:  test   $0x2,%bpl
    0.00 :   5d985:  jne    5eee8 <__vfprintf_internal+0x15d8>
    0.00 :   5d98b:  movdqu (%r12),%xmm1
    0.00 :   5d991:  mov    (%rsp),%rdi
    0.00 :   5d995:  mov    $0x25,%esi
    0.00 :   5d99a:  movups %xmm1,0xe8(%rsp)
    0.00 :   5d9a2:  mov    0x10(%r12),%rax
    0.00 :   5d9a7:  mov    %rax,0xf8(%rsp)
    0.00 :   5d9af:  call   264d0 <*ABS*+0x9fc40@plt>
    0.00 :   5d9b4:  and    $0x8000,%ebp
    0.00 :   5d9ba:  movb   $0x0,0x7a(%rsp)
    0.00 :   5d9bf:  mov    %rax,0x40(%rsp)
    0.00 :   5d9c4:  mov    %rax,0x80(%rsp)
    0.00 :   5d9cc:  mov    %rbx,0xc8(%rsp)
    0.00 :   5d9d4:  je     5dc38 <__vfprintf_internal+0x328>
    0.00 :   5d9da:  mov    (%rsp),%rax
    0.00 :   5d9de:  mov    0x40(%rsp),%r13
    0.00 :   5d9e3:  lea    0x172016(%rip),%rdi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5d9ea:  mov    0xd8(%rbx),%rbp
    0.00 :   5d9f1:  sub    %rax,%r13
    0.00 :   5d9f4:  lea    0x172d6d(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   5d9fb:  sub    %rdi,%rax
    0.00 :   5d9fe:  mov    %rax,0x10(%rsp)
    0.00 :   5da03:  mov    %rax,%rsi
    0.00 :   5da06:  mov    %rbp,%rax
    0.00 :   5da09:  sub    %rdi,%rax
    0.00 :   5da0c:  cmp    %rsi,%rax
    0.00 :   5da0f:  jae    5f1f0 <__vfprintf_internal+0x18e0>
    0.00 :   5da15:  mov    (%rsp),%rsi
    0.00 :   5da19:  mov    %r13,%rdx
    0.00 :   5da1c:  mov    %rbx,%rdi
    0.00 :   5da1f:  call   *0x38(%rbp)
    0.00 :   5da22:  cmp    %rax,%r13
    0.00 :   5da25:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5da2b:  movslq %r13d,%rdx
    0.00 :   5da2e:  mov    %r13,%rax
    0.00 :   5da31:  movslq %r13d,%rbp
    0.00 :   5da34:  shr    $0x3f,%rax
    0.00 :   5da38:  cmp    %rdx,%r13
    0.00 :   5da3b:  mov    $0x1,%edx
    0.00 :   5da40:  cmovne %edx,%eax
    0.00 :   5da43:  test   %eax,%eax
    0.00 :   5da45:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5da4b:  test   %r13d,%r13d
    0.00 :   5da4e:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5da54:  mov    0x80(%rsp),%r13
    0.00 :   5da5c:  cmpb   $0x0,0x0(%r13)
    0.00 :   5da61:  je     5db32 <__vfprintf_internal+0x222>
    0.00 :   5da67:  mov    0x177f32(%rip),%rsi        # 1d59a0 <__printf_function_table>
    0.00 :   5da6e:  mov    %rsi,0x68(%rsp)
    0.00 :   5da73:  test   %rsi,%rsi
    0.00 :   5da76:  jne    5f710 <__vfprintf_internal+0x1e00>
    0.00 :   5da7c:  cmpq   $0x0,0x177f0c(%rip)        # 1d5990 <__printf_modifier_table>
    0.00 :   5da84:  jne    5f760 <__vfprintf_internal+0x1e50>
    0.00 :   5da8a:  cmpq   $0x0,0x176e26(%rip)        # 1d48b8 <__printf_va_arg_table>
    5.39 :   5da92:  movl   $0x0,0x7c(%rsp) // libc.so.6[5da92]
    0.00 :   5da9a:  jne    5f830 <__vfprintf_internal+0x1f20>
    0.00 :   5daa0:  movl   $0x0,0x4c(%rsp)
    0.00 :   5daa8:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5dab1:  nopl   0x0(%rax)
    0.00 :   5dab8:  movzbl 0x1(%r13),%r9d
    0.00 :   5dabd:  lea    0x1(%r13),%rax
    0.00 :   5dac1:  mov    %rax,0x80(%rsp)
    0.00 :   5dac9:  lea    -0x20(%r9),%eax
    0.00 :   5dacd:  cmp    $0x5a,%al
    0.00 :   5dacf:  jbe    5dba0 <__vfprintf_internal+0x290>
    0.00 :   5dad5:  endbr64
    0.00 :   5dad9:  test   %r9b,%r9b
    0.00 :   5dadc:  je     5f4b8 <__vfprintf_internal+0x1ba8>
    0.00 :   5dae2:  mov    0x4c(%rsp),%eax
    0.00 :   5dae6:  sub    $0x8,%rsp
    0.00 :   5daea:  mov    %ebp,%r9d
    0.00 :   5daed:  mov    0x44(%rsp),%edi
    0.00 :   5daf1:  push   %rdi
    0.00 :   5daf2:  mov    %rbx,%rdi
    0.00 :   5daf5:  push   0x78(%rsp)
    0.00 :   5daf9:  push   0x78(%rsp)
    0.00 :   5dafd:  mov    0x74(%rsp),%ecx
    0.00 :   5db01:  push   %rcx
    0.00 :   5db02:  mov    %r12,%rcx
    0.00 :   5db05:  lea    0x138(%rsp),%rdx
    0.00 :   5db0d:  push   %rdx
    0.00 :   5db0e:  push   0x70(%rsp)
    0.00 :   5db12:  push   %rax
    0.00 :   5db13:  mov    0xbc(%rsp),%edx
    0.00 :   5db1a:  mov    0x40(%rsp),%rsi
    0.00 :   5db1f:  lea    0x128(%rsp),%r8
    0.00 :   5db27:  call   5b410 <printf_positional>
    0.00 :   5db2c:  add    $0x40,%rsp
    0.00 :   5db30:  mov    %eax,%ebp
    0.00 :   5db32:  testl  $0x8000,(%rbx)
    0.00 :   5db38:  je     5db70 <__vfprintf_internal+0x260>
    0.00 :   5db3a:  cmpb   $0x0,0x7a(%rsp)
    0.00 :   5db3f:  jne    5dca0 <__vfprintf_internal+0x390>
    0.00 :   5db45:  mov    0x4f8(%rsp),%rax
    0.00 :   5db4d:  sub    %fs:0x28,%rax
    0.00 :   5db56:  jne    5fdb4 <__vfprintf_internal+0x24a4>
    0.00 :   5db5c:  add    $0x508,%rsp
    0.00 :   5db63:  mov    %ebp,%eax
    0.00 :   5db65:  pop    %rbx
    0.00 :   5db66:  pop    %rbp
    0.00 :   5db67:  pop    %r12
    0.00 :   5db69:  pop    %r13
    0.00 :   5db6b:  pop    %r14
    0.00 :   5db6d:  pop    %r15
    0.00 :   5db6f:  ret
    0.00 :   5db70:  mov    0x88(%rbx),%rdi
    4.86 :   5db77:  mov    0x4(%rdi),%eax // libc.so.6[5db77]
    0.00 :   5db7a:  sub    $0x1,%eax
    0.00 :   5db7d:  mov    %eax,0x4(%rdi)
    0.00 :   5db80:  jne    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db82:  movq   $0x0,0x8(%rdi)
    0.00 :   5db8a:  xchg   %eax,(%rdi)
    0.00 :   5db8c:  cmp    $0x1,%eax
    0.00 :   5db8f:  jle    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db91:  call   87f80 <__lll_lock_wake_private>
    0.00 :   5db96:  jmp    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db98:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dba0:  movzbl %r9b,%eax
    0.00 :   5dba4:  lea    0x1325f5(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5dbab:  lea    0x13256e(%rip),%rsi        # 190120 <step0_jumps.9>
    0.00 :   5dbb2:  movl   $0x0,0x50(%rsp)
    0.00 :   5dbba:  sub    $0x20,%eax
    0.00 :   5dbbd:  movl   $0x0,0x18(%rsp)
    0.00 :   5dbc5:  xor    %r14d,%r14d
    0.00 :   5dbc8:  xor    %r13d,%r13d
    0.00 :   5dbcb:  cltq
    0.00 :   5dbcd:  movl   $0x0,0x8(%rsp)
    0.00 :   5dbd5:  xor    %r10d,%r10d
    0.00 :   5dbd8:  xor    %r15d,%r15d
    0.00 :   5dbdb:  movzbl (%rcx,%rax,1),%eax
   15.38 :   5dbdf:  lea    -0x111(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5> // libc.so.6[5dbdf]
    0.00 :   5dbe6:  movl   $0x0,0x30(%rsp)
    0.00 :   5dbee:  mov    $0xffffffff,%r11d
    0.00 :   5dbf4:  movl   $0x0,0x20(%rsp)
    0.00 :   5dbfc:  movslq (%rsi,%rax,4),%rax
    3.13 :   5dc00:  movl   $0x0,0x38(%rsp) // libc.so.6[5dc00]
    0.00 :   5dc08:  movl   $0x0,0x48(%rsp)
    0.00 :   5dc10:  add    %rcx,%rax
    0.00 :   5dc13:  movb   $0x20,0x34(%rsp)
    0.00 :   5dc18:  jmp    *%rax
    0.00 :   5dc1a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5dc20:  cmp    $0xffffffff,%eax
    0.00 :   5dc23:  je     5d96a <__vfprintf_internal+0x5a>
    0.00 :   5dc29:  mov    $0xffffffff,%ebp
    0.00 :   5dc2e:  jmp    5db45 <__vfprintf_internal+0x235>
    0.00 :   5dc33:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dc38:  mov    0x175301(%rip),%rax        # 1d2f40 <_IO_funlockfile@@GLIBC_2.2.5+0x17fd00>
    0.00 :   5dc3f:  lea    0xc0(%rsp),%rdi
    0.00 :   5dc47:  mov    %rax,0xc0(%rsp)
    0.00 :   5dc4f:  call   87df0 <__GI___libc_cleanup_push_defer>
    0.00 :   5dc54:  mov    (%rbx),%eax
    0.00 :   5dc56:  and    $0x8000,%eax
    0.00 :   5dc5b:  jne    5dc91 <__vfprintf_internal+0x381>
    0.00 :   5dc5d:  mov    %fs:0x10,%rbp
    0.00 :   5dc66:  mov    0x88(%rbx),%rdi
    6.60 :   5dc6d:  cmp    %rbp,0x8(%rdi) // libc.so.6[5dc6d]
    0.00 :   5dc71:  je     5dc8d <__vfprintf_internal+0x37d>
    4.80 :   5dc73:  mov    $0x1,%edx // libc.so.6[5dc73]
    0.00 :   5dc78:  lock cmpxchg %edx,(%rdi)
    0.00 :   5dc7c:  jne    5f60a <__vfprintf_internal+0x1cfa>
    0.00 :   5dc82:  mov    0x88(%rbx),%rdi
    0.00 :   5dc89:  mov    %rbp,0x8(%rdi)
    0.00 :   5dc8d:  addl   $0x1,0x4(%rdi)
    0.00 :   5dc91:  movb   $0x1,0x7a(%rsp)
    0.00 :   5dc96:  jmp    5d9da <__vfprintf_internal+0xca>
    0.00 :   5dc9b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dca0:  lea    0xc0(%rsp),%rdi
    0.00 :   5dca8:  call   87e40 <__GI___libc_cleanup_pop_restore>
    0.00 :   5dcad:  jmp    5db45 <__vfprintf_internal+0x235>
    0.00 :   5dcb2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5dcb8:  endbr64
    0.00 :   5dcbc:  endbr64
    0.00 :   5dcc0:  testb  $0x1,0x3c(%rsp)
    0.00 :   5dcc5:  jne    5fa38 <__vfprintf_internal+0x2128>
    0.00 :   5dccb:  mov    %r10d,%edx
    0.00 :   5dcce:  and    $0x1,%edx
    0.00 :   5dcd1:  mov    0x18(%rsp),%eax
    0.00 :   5dcd5:  movzbl %dl,%edx
    0.00 :   5dcd8:  movsbl %r9b,%r9d
    0.00 :   5dcdc:  movl   $0x0,0xac(%rsp)
    0.00 :   5dce7:  mov    %r11d,0xa0(%rsp)
    0.00 :   5dcef:  mov    %eax,0xa4(%rsp)
    0.00 :   5dcf6:  lea    0x0(%r13,%r13,1),%eax
    0.00 :   5dcfb:  or     %edx,%eax
    0.00 :   5dcfd:  movzwl 0x8(%rsp),%edx
    0.00 :   5dd02:  mov    %r9d,0xa8(%rsp)
    0.00 :   5dd0a:  shl    $0x2,%edx
    0.00 :   5dd0d:  or     %edx,%eax
    0.00 :   5dd0f:  movzwl 0x48(%rsp),%edx
    0.00 :   5dd14:  shl    $0x3,%edx
    0.00 :   5dd17:  or     %edx,%eax
    0.00 :   5dd19:  movzwl 0x38(%rsp),%edx
    0.00 :   5dd1e:  shl    $0x4,%edx
    0.00 :   5dd21:  or     %edx,%eax
    0.00 :   5dd23:  movzwl 0x20(%rsp),%edx
    0.00 :   5dd28:  shl    $0x5,%edx
    0.00 :   5dd2b:  or     %edx,%eax
    0.00 :   5dd2d:  movzwl 0x30(%rsp),%edx
    0.00 :   5dd32:  shl    $0x6,%edx
    0.00 :   5dd35:  or     %edx,%eax
    0.00 :   5dd37:  mov    %r15d,%edx
    0.00 :   5dd3a:  shl    $0x7,%edx
    0.00 :   5dd3d:  or     %edx,%eax
    0.00 :   5dd3f:  movzwl 0x50(%rsp),%edx
    0.00 :   5dd44:  shl    $0xb,%edx
    0.00 :   5dd47:  or     %edx,%eax
    0.00 :   5dd49:  and    $0x8ff,%ax
    0.00 :   5dd4d:  mov    %ax,0xac(%rsp)
    0.00 :   5dd55:  movzbl 0x34(%rsp),%eax
    0.00 :   5dd5a:  mov    %eax,0xb0(%rsp)
    0.00 :   5dd61:  test   %r10d,%r10d
    0.00 :   5dd64:  je     5f0b0 <__vfprintf_internal+0x17a0>
    0.00 :   5dd6a:  testb  $0x8,0x3c(%rsp)
    0.00 :   5dd6f:  je     5f440 <__vfprintf_internal+0x1b30>
    0.00 :   5dd75:  orb    $0x10,0xad(%rsp)
    0.00 :   5dd7d:  mov    0x4(%r12),%edx
    0.00 :   5dd82:  cmp    $0xaf,%edx
    0.00 :   5dd88:  ja     5f973 <__vfprintf_internal+0x2063>
    0.00 :   5dd8e:  mov    %edx,%eax
    0.00 :   5dd90:  add    $0x10,%edx
    0.00 :   5dd93:  add    0x10(%r12),%rax
    0.00 :   5dd98:  mov    %edx,0x4(%r12)
    0.00 :   5dd9d:  movdqa (%rax),%xmm2
    0.00 :   5dda1:  movaps %xmm2,0x90(%rsp)
    0.00 :   5dda9:  jmp    5f0dc <__vfprintf_internal+0x17cc>
    0.00 :   5ddae:  xchg   %ax,%ax
    0.00 :   5ddb0:  endbr64
    0.00 :   5ddb4:  mov    (%r12),%eax
    0.00 :   5ddb8:  lea    0xe0(%rsp),%rcx
    0.00 :   5ddc0:  movq   $0x0,0xe0(%rsp)
    0.00 :   5ddcc:  cmp    $0x2f,%eax
    0.00 :   5ddcf:  ja     5f2c0 <__vfprintf_internal+0x19b0>
    0.00 :   5ddd5:  mov    %eax,%edx
    0.00 :   5ddd7:  add    $0x8,%eax
    0.00 :   5ddda:  add    0x10(%r12),%rdx
    0.00 :   5dddf:  mov    %eax,(%r12)
    0.00 :   5dde3:  mov    (%rdx),%esi
    0.00 :   5dde5:  lea    0x100(%rsp),%r13
    0.00 :   5dded:  mov    %rcx,%rdx
    0.00 :   5ddf0:  mov    %r13,%rdi
    0.00 :   5ddf3:  call   b4550 <wcrtomb>
    0.00 :   5ddf8:  mov    %rax,%r14
    0.00 :   5ddfb:  cmp    $0xffffffffffffffff,%rax
    0.00 :   5ddff:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5de05:  mov    0x18(%rsp),%r15d
    0.00 :   5de0a:  mov    0x20(%rsp),%edx
    0.00 :   5de0e:  sub    %eax,%r15d
    0.00 :   5de11:  test   %edx,%edx
    0.00 :   5de13:  jne    5de1e <__vfprintf_internal+0x50e>
    0.00 :   5de15:  test   %r15d,%r15d
    0.00 :   5de18:  jg     5f53f <__vfprintf_internal+0x1c2f>
    0.00 :   5de1e:  mov    0xd8(%rbx),%rax
    0.00 :   5de25:  lea    0x171bd4(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5de2c:  mov    0x10(%rsp),%rsi
    0.00 :   5de31:  mov    %rax,%rdx
    0.00 :   5de34:  sub    %rcx,%rdx
    0.00 :   5de37:  cmp    %rsi,%rdx
    0.00 :   5de3a:  jae    5fb10 <__vfprintf_internal+0x2200>
    0.00 :   5de40:  mov    %r14,%rdx
    0.00 :   5de43:  mov    %r13,%rsi
    0.00 :   5de46:  mov    %rbx,%rdi
    0.00 :   5de49:  call   *0x38(%rax)
    0.00 :   5de4c:  cmp    %rax,%r14
    0.00 :   5de4f:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5de55:  mov    %r14,%rax
    0.00 :   5de58:  xor    %edx,%edx
    0.00 :   5de5a:  add    %rbp,%rax
    0.00 :   5de5d:  js     5fdf5 <__vfprintf_internal+0x24e5>
    0.00 :   5de63:  cmp    %rbp,%rax
    0.00 :   5de66:  jb     5fdf5 <__vfprintf_internal+0x24e5>
    0.00 :   5de6c:  movslq %eax,%rcx
    0.00 :   5de6f:  mov    %eax,%ebp
    0.00 :   5de71:  cmp    %rcx,%rax
    0.00 :   5de74:  mov    $0x1,%ecx
    0.00 :   5de79:  cmovne %ecx,%edx
    0.00 :   5de7c:  test   %edx,%edx
    0.00 :   5de7e:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5de84:  test   %eax,%eax
    0.00 :   5de86:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5de8c:  test   %r15d,%r15d
    0.00 :   5de8f:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5de91:  testb  $0x1,0x20(%rsp)
    0.00 :   5de96:  jne    5fa42 <__vfprintf_internal+0x2132>
    0.00 :   5de9c:  nopl   0x0(%rax)
    0.00 :   5dea0:  mov    0x80(%rsp),%rax
    0.00 :   5dea8:  mov    $0x25,%esi
    0.00 :   5dead:  addl   $0x1,0x4c(%rsp)
    0.00 :   5deb2:  lea    0x1(%rax),%r14
    0.00 :   5deb6:  mov    %r14,%rdi
    0.00 :   5deb9:  call   264d0 <*ABS*+0x9fc40@plt>
    0.00 :   5debe:  lea    0x171b3b(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5dec5:  mov    0x10(%rsp),%rsi
    0.00 :   5deca:  mov    %rax,%r15
    0.00 :   5decd:  mov    %rax,0x80(%rsp)
    0.00 :   5ded5:  mov    %rax,%r13
    0.00 :   5ded8:  mov    0xd8(%rbx),%rax
    0.00 :   5dedf:  sub    %r14,%r15
    0.00 :   5dee2:  mov    %rax,%rdx
    0.00 :   5dee5:  sub    %rcx,%rdx
    0.00 :   5dee8:  cmp    %rsi,%rdx
    0.00 :   5deeb:  jae    5efb0 <__vfprintf_internal+0x16a0>
    0.00 :   5def1:  mov    %r15,%rdx
    0.00 :   5def4:  mov    %r14,%rsi
    0.00 :   5def7:  mov    %rbx,%rdi
    0.00 :   5defa:  call   *0x38(%rax)
    0.00 :   5defd:  cmp    %rax,%r15
    0.00 :   5df00:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5df06:  movslq %ebp,%rax
    0.00 :   5df09:  xor    %edx,%edx
    0.00 :   5df0b:  add    %r15,%rax
    5.46 :   5df0e:  js     5fdaa <__vfprintf_internal+0x249a> // libc.so.6[5df0e]
    0.00 :   5df14:  cmp    %r15,%rax
    0.00 :   5df17:  jb     5fdaa <__vfprintf_internal+0x249a>
    0.00 :   5df1d:  movslq %eax,%rcx
    0.00 :   5df20:  movslq %eax,%rbp
    0.00 :   5df23:  cmp    %rcx,%rax
    0.00 :   5df26:  mov    $0x1,%ecx
    0.00 :   5df2b:  cmovne %ecx,%edx
    0.00 :   5df2e:  test   %edx,%edx
    0.00 :   5df30:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5df36:  test   %eax,%eax
    0.00 :   5df38:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5df3e:  cmpb   $0x0,0x0(%r13)
    0.00 :   5df43:  jne    5dab8 <__vfprintf_internal+0x1a8>
    0.00 :   5df49:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5df4e:  xchg   %ax,%ax
    0.00 :   5df50:  endbr64
    0.00 :   5df54:  mov    0x80(%rsp),%rax
    0.00 :   5df5c:  movzbl 0x1(%rax),%r9d
    0.00 :   5df61:  lea    0x1(%rax),%rdx
    0.00 :   5df65:  mov    %rdx,0x80(%rsp)
    0.00 :   5df6d:  lea    -0x20(%r9),%eax
    0.00 :   5df71:  cmp    $0x5a,%al
    0.00 :   5df73:  ja     5f480 <__vfprintf_internal+0x1b70>
    0.00 :   5df79:  movzbl %r9b,%eax
    0.00 :   5df7d:  lea    0x13221c(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5df84:  lea    0x132195(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5df8b:  movl   $0x1,0x38(%rsp)
    0.00 :   5df93:  sub    $0x20,%eax
    0.00 :   5df96:  lea    -0x4c8(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5df9d:  cltq
    0.00 :   5df9f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5dfa3:  movslq (%rcx,%rax,4),%rax
    0.00 :   5dfa7:  add    %rsi,%rax
    0.00 :   5dfaa:  jmp    *%rax
    0.00 :   5dfac:  nopl   0x0(%rax)
    0.00 :   5dfb0:  endbr64
    0.00 :   5dfb4:  mov    0x8(%rsp),%r8d
    0.00 :   5dfb9:  test   %r8d,%r8d
    0.00 :   5dfbc:  jne    5ddb0 <__vfprintf_internal+0x4a0>
    0.00 :   5dfc2:  mov    0x18(%rsp),%r13d
    0.00 :   5dfc7:  mov    0x20(%rsp),%edi
    0.00 :   5dfcb:  sub    $0x1,%r13d
    0.00 :   5dfcf:  test   %edi,%edi
    0.00 :   5dfd1:  je     5f588 <__vfprintf_internal+0x1c78>
    0.00 :   5dfd7:  mov    (%r12),%eax
    0.00 :   5dfdb:  cmp    $0x2f,%eax
    0.00 :   5dfde:  ja     5f518 <__vfprintf_internal+0x1c08>
    0.00 :   5dfe4:  mov    %eax,%edx
    0.00 :   5dfe6:  add    $0x8,%eax
    0.00 :   5dfe9:  add    0x10(%r12),%rdx
    0.00 :   5dfee:  mov    %eax,(%r12)
    0.00 :   5dff2:  mov    (%rdx),%edx
    0.00 :   5dff4:  mov    0x28(%rbx),%rax
    0.00 :   5dff8:  cmp    0x30(%rbx),%rax
    0.00 :   5dffc:  jae    5fc55 <__vfprintf_internal+0x2345>
    0.00 :   5e002:  lea    0x1(%rax),%rcx
    0.00 :   5e006:  mov    %rcx,0x28(%rbx)
    0.00 :   5e00a:  mov    %dl,(%rax)
    0.00 :   5e00c:  cmp    $0x7fffffff,%ebp
    0.00 :   5e012:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5e014:  mov    0x20(%rsp),%esi
    0.00 :   5e018:  add    $0x1,%ebp
    0.00 :   5e01b:  test   %esi,%esi
    0.00 :   5e01d:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e023:  test   %r13d,%r13d
    0.00 :   5e026:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e02c:  movslq %r13d,%r14
    0.00 :   5e02f:  mov    $0x20,%esi
    0.00 :   5e034:  mov    %rbx,%rdi
    0.00 :   5e037:  mov    %r14,%rdx
    0.00 :   5e03a:  call   78be0 <_IO_padn>
    0.00 :   5e03f:  cmp    %rax,%r14
    0.00 :   5e042:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e044:  add    %r13d,%ebp
    0.00 :   5e047:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5e049:  cmp    %r13d,%ebp
    0.00 :   5e04c:  jae    5f12a <__vfprintf_internal+0x181a>
    0.00 :   5e052:  nopw   0x0(%rax,%rax,1)
    0.00 :   5e058:  mov    0x174db1(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5e05f:  movl   $0x4b,%fs:(%rax)
    0.00 :   5e066:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5e070:  mov    $0xffffffff,%ebp
    0.00 :   5e075:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e07a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5e080:  endbr64
    0.00 :   5e084:  mov    0x48(%rsp),%r10d
    0.00 :   5e089:  mov    %r9b,0x28(%rsp)
    0.00 :   5e08e:  mov    %r11d,0x8(%rsp)
    0.00 :   5e093:  test   %r10d,%r10d
    0.00 :   5e096:  jne    5f498 <__vfprintf_internal+0x1b88>
    0.00 :   5e09c:  mov    0x54(%rsp),%edi
    0.00 :   5e0a0:  lea    0x110(%rsp),%rsi
    0.00 :   5e0a8:  mov    $0x3e8,%edx
    0.00 :   5e0ad:  call   9d370 <__strerror_r>
    0.00 :   5e0b2:  movzbl 0x28(%rsp),%r9d
    0.00 :   5e0b8:  mov    0x8(%rsp),%r11d
    0.00 :   5e0bd:  mov    %rax,%r13
    0.00 :   5e0c0:  mov    $0x1,%eax
    0.00 :   5e0c5:  test   %r13,%r13
    0.00 :   5e0c8:  je     5f897 <__vfprintf_internal+0x1f87>
    0.00 :   5e0ce:  cmp    $0x53,%r9b
    0.00 :   5e0d2:  je     5f656 <__vfprintf_internal+0x1d46>
    0.00 :   5e0d8:  test   %al,%al
    0.00 :   5e0da:  je     5f656 <__vfprintf_internal+0x1d46>
    0.00 :   5e0e0:  cmp    $0xffffffff,%r11d
    0.00 :   5e0e4:  je     5f820 <__vfprintf_internal+0x1f10>
    0.00 :   5e0ea:  movslq %r11d,%rsi
    0.00 :   5e0ed:  mov    %r13,%rdi
    0.00 :   5e0f0:  call   26380 <*ABS*+0xa1b90@plt>
    0.00 :   5e0f5:  mov    %rax,%r14
    0.00 :   5e0f8:  mov    0x18(%rsp),%r15d
    0.00 :   5e0fd:  sub    %eax,%r15d
    0.00 :   5e100:  js     5f6a0 <__vfprintf_internal+0x1d90>
    0.00 :   5e106:  mov    0x20(%rsp),%ecx
    0.00 :   5e10a:  test   %ecx,%ecx
    0.00 :   5e10c:  jne    5e117 <__vfprintf_internal+0x807>
    0.00 :   5e10e:  test   %r15d,%r15d
    0.00 :   5e111:  jne    5f9ec <__vfprintf_internal+0x20dc>
    0.00 :   5e117:  mov    0xd8(%rbx),%rax
    0.00 :   5e11e:  lea    0x1718db(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5e125:  mov    0x10(%rsp),%rdi
    0.00 :   5e12a:  mov    %rax,%rdx
    0.00 :   5e12d:  sub    %rcx,%rdx
    0.00 :   5e130:  cmp    %rdi,%rdx
    0.00 :   5e133:  jae    5fba0 <__vfprintf_internal+0x2290>
    0.00 :   5e139:  mov    %r14,%rdx
    0.00 :   5e13c:  mov    %r13,%rsi
    0.00 :   5e13f:  mov    %rbx,%rdi
    0.00 :   5e142:  call   *0x38(%rax)
    0.00 :   5e145:  cmp    %rax,%r14
    0.00 :   5e148:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e14e:  mov    %r14,%rax
    0.00 :   5e151:  xor    %edx,%edx
    0.00 :   5e153:  add    %rbp,%rax
    0.00 :   5e156:  js     5fdeb <__vfprintf_internal+0x24db>
    0.00 :   5e15c:  cmp    %rbp,%rax
    0.00 :   5e15f:  jb     5fdeb <__vfprintf_internal+0x24db>
    0.00 :   5e165:  movslq %eax,%r13
    0.00 :   5e168:  mov    $0x1,%ecx
    0.00 :   5e16d:  mov    %eax,%ebp
    0.00 :   5e16f:  cmp    %r13,%rax
    0.00 :   5e172:  cmovne %ecx,%edx
    0.00 :   5e175:  test   %edx,%edx
    0.00 :   5e177:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e17d:  test   %eax,%eax
    0.00 :   5e17f:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5e185:  test   %r15d,%r15d
    0.00 :   5e188:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e18e:  testb  $0x1,0x20(%rsp)
    0.00 :   5e193:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e199:  mov    %r15d,%r15d
    0.00 :   5e19c:  mov    $0x20,%esi
    0.00 :   5e1a1:  mov    %rbx,%rdi
    0.00 :   5e1a4:  mov    %r15,%rdx
    0.00 :   5e1a7:  call   78be0 <_IO_padn>
    0.00 :   5e1ac:  cmp    %rax,%r15
    0.00 :   5e1af:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e1b5:  lea    (%r15,%r13,1),%rax
    0.00 :   5e1b9:  movslq %eax,%rdx
    0.00 :   5e1bc:  mov    %eax,%ebp
    0.00 :   5e1be:  cmp    %rdx,%rax
    0.00 :   5e1c1:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e1c7:  test   %eax,%eax
    0.00 :   5e1c9:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e1cf:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e1d4:  nopl   0x0(%rax)
    0.00 :   5e1d8:  endbr64
    0.00 :   5e1dc:  mov    (%r12),%eax
    0.00 :   5e1e0:  cmp    $0x2f,%eax
    0.00 :   5e1e3:  ja     5f468 <__vfprintf_internal+0x1b58>
    0.00 :   5e1e9:  mov    %eax,%edx
    0.00 :   5e1eb:  add    $0x8,%eax
    0.00 :   5e1ee:  add    0x10(%r12),%rdx
    0.00 :   5e1f3:  mov    %eax,(%r12)
    0.00 :   5e1f7:  mov    (%rdx),%r13
    0.00 :   5e1fa:  test   %r13,%r13
    0.00 :   5e1fd:  jne    5fc22 <__vfprintf_internal+0x2312>
    0.00 :   5e203:  cmp    $0xffffffff,%r11d
    0.00 :   5e207:  je     5f880 <__vfprintf_internal+0x1f70>
    0.00 :   5e20d:  cmp    $0x5,%r11d
    0.00 :   5e211:  jg     5f880 <__vfprintf_internal+0x1f70>
    0.00 :   5e217:  xor    %eax,%eax
    0.00 :   5e219:  xor    %r14d,%r14d
    0.00 :   5e21c:  lea    0x143105(%rip),%r13        # 1a1328 <default_rwlockattr+0x338>
    0.00 :   5e223:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5e228:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e230:  endbr64
    0.00 :   5e234:  testb  $0x2,0x3c(%rsp)
    0.00 :   5e239:  je     5e278 <__vfprintf_internal+0x968>
    0.00 :   5e23b:  mov    0x7c(%rsp),%r15d
    0.00 :   5e240:  test   %r15d,%r15d
    0.00 :   5e243:  jne    5e278 <__vfprintf_internal+0x968>
    0.00 :   5e245:  mov    (%rsp),%r15
    0.00 :   5e249:  mov    %r15,%rdi
    0.00 :   5e24c:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   5e251:  mov    %r15,%rdi
    0.00 :   5e254:  lea    0x1(%rax),%rsi
    0.00 :   5e258:  call   11a410 <__readonly_area>
    0.00 :   5e25d:  mov    %eax,0x7c(%rsp)
    0.00 :   5e261:  test   %eax,%eax
    0.00 :   5e263:  jns    5e278 <__vfprintf_internal+0x968>
    0.00 :   5e265:  lea    0x13de74(%rip),%rdi        # 19c0e0 <aliasfile.0+0x698>
    0.00 :   5e26c:  call   810e0 <__libc_fatal>
    0.00 :   5e271:  nopl   0x0(%rax)
    0.00 :   5e278:  mov    (%r12),%eax
    0.00 :   5e27c:  cmp    $0x2f,%eax
    0.00 :   5e27f:  jbe    5f4e8 <__vfprintf_internal+0x1bd8>
    0.00 :   5e285:  mov    0x8(%r12),%rdx
    0.00 :   5e28a:  lea    0x8(%rdx),%rax
    0.00 :   5e28e:  mov    %rax,0x8(%r12)
    0.00 :   5e293:  mov    0x8(%rsp),%r11d
    0.00 :   5e298:  mov    (%rdx),%rax
    0.00 :   5e29b:  test   %r11d,%r11d
    0.00 :   5e29e:  je     5f628 <__vfprintf_internal+0x1d18>
    0.00 :   5e2a4:  movslq %ebp,%rdx
    0.00 :   5e2a7:  mov    %rdx,(%rax)
    0.00 :   5e2aa:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e2af:  nop
    0.00 :   5e2b0:  endbr64
    0.00 :   5e2b4:  mov    (%r12),%eax
    0.00 :   5e2b8:  cmp    $0x2f,%eax
    0.00 :   5e2bb:  ja     5f4d0 <__vfprintf_internal+0x1bc0>
    0.00 :   5e2c1:  mov    %eax,%edx
    0.00 :   5e2c3:  add    $0x8,%eax
    0.00 :   5e2c6:  add    0x10(%r12),%rdx
    0.00 :   5e2cb:  mov    %eax,(%r12)
    0.00 :   5e2cf:  mov    (%rdx),%rax
    0.00 :   5e2d2:  test   %rax,%rax
    0.00 :   5e2d5:  je     5f639 <__vfprintf_internal+0x1d29>
    0.00 :   5e2db:  movl   $0x0,0x8(%rsp)
    0.00 :   5e2e3:  mov    %rax,%r14
    0.00 :   5e2e6:  xor    %r15d,%r15d
    0.00 :   5e2e9:  mov    $0x78,%r9d
    0.00 :   5e2ef:  movl   $0x1,0x48(%rsp)
    0.00 :   5e2f7:  movl   $0x10,0x28(%rsp)
    0.00 :   5e2ff:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5e301:  nopl   0x0(%rax)
    0.00 :   5e308:  endbr64
    0.00 :   5e30c:  movl   $0x2,0x28(%rsp)
    0.00 :   5e314:  mov    0x8(%rsp),%edx
    0.00 :   5e318:  mov    (%r12),%eax
    0.00 :   5e31c:  test   %edx,%edx
    0.00 :   5e31e:  je     5ef28 <__vfprintf_internal+0x1618>
    0.00 :   5e324:  cmp    $0x2f,%eax
    0.00 :   5e327:  ja     5f140 <__vfprintf_internal+0x1830>
    0.00 :   5e32d:  mov    %eax,%edx
    0.00 :   5e32f:  add    $0x8,%eax
    0.00 :   5e332:  add    0x10(%r12),%rdx
    0.00 :   5e337:  mov    %eax,(%r12)
    0.00 :   5e33b:  movl   $0x0,0x30(%rsp)
    0.00 :   5e343:  mov    (%rdx),%r14
    0.00 :   5e346:  movl   $0x0,0x38(%rsp)
    0.00 :   5e34e:  movl   $0x0,0x8(%rsp)
    0.00 :   5e356:  test   %r11d,%r11d
    0.00 :   5e359:  js     5ef68 <__vfprintf_internal+0x1658>
    0.00 :   5e35f:  je     5ee60 <__vfprintf_internal+0x1550>
    0.00 :   5e365:  movslq %r11d,%rax
    0.00 :   5e368:  movb   $0x20,0x34(%rsp)
    0.00 :   5e36d:  mov    %rax,0x58(%rsp)
    0.00 :   5e372:  cmp    $0x58,%r9b
    0.00 :   5e376:  mov    0x28(%rsp),%edx
    0.00 :   5e37a:  mov    %r14,%rdi
    0.00 :   5e37d:  mov    %r9b,0x7b(%rsp)
    0.00 :   5e382:  sete   %cl
    0.00 :   5e385:  lea    0x4f8(%rsp),%r13
    0.00 :   5e38d:  lea    0x110(%rsp),%rax
    0.00 :   5e395:  movzbl %cl,%ecx
    0.00 :   5e398:  mov    %r13,%rsi
    0.00 :   5e39b:  mov    %rax,0x70(%rsp)
    0.00 :   5e3a0:  call   52c40 <_itoa_word>
    0.00 :   5e3a5:  mov    0x60(%rsp),%rcx
    0.00 :   5e3aa:  movzbl 0x7b(%rsp),%r9d
    0.00 :   5e3b0:  mov    %rax,%r10
    0.00 :   5e3b3:  test   %rcx,%rcx
    0.00 :   5e3b6:  je     5e3db <__vfprintf_internal+0xacb>
    0.00 :   5e3b8:  test   %r15d,%r15d
    0.00 :   5e3bb:  je     5e3db <__vfprintf_internal+0xacb>
    0.00 :   5e3bd:  mov    0x68(%rsp),%r8
    0.00 :   5e3c2:  mov    0x70(%rsp),%rdi
    0.00 :   5e3c7:  mov    %r13,%rdx
    0.00 :   5e3ca:  mov    %rax,%rsi
    0.00 :   5e3cd:  call   5aae0 <group_number>
    0.00 :   5e3d2:  movzbl 0x7b(%rsp),%r9d
    0.00 :   5e3d8:  mov    %rax,%r10
    0.00 :   5e3db:  test   %r14,%r14
    0.00 :   5e3de:  setne  %cl
    0.00 :   5e3e1:  cmpl   $0xa,0x28(%rsp)
    0.00 :   5e3e6:  jne    5eca8 <__vfprintf_internal+0x1398>
    0.00 :   5e3ec:  mov    0x50(%rsp),%r8d
    0.00 :   5e3f1:  test   %r8d,%r8d
    0.00 :   5e3f4:  je     5eca8 <__vfprintf_internal+0x1398>
    0.00 :   5e3fa:  mov    %r10,%rdi
    0.00 :   5e3fd:  mov    %r13,%rdx
    0.00 :   5e400:  mov    %r13,%rsi
    0.00 :   5e403:  mov    %cl,0x7b(%rsp)
    0.00 :   5e407:  mov    %r9b,0x50(%rsp)
    0.00 :   5e40c:  mov    %r13,%r15
    0.00 :   5e40f:  call   5ad20 <_i18n_number_rewrite>
    0.00 :   5e414:  movzbl 0x50(%rsp),%r9d
    0.00 :   5e41a:  movzbl 0x7b(%rsp),%ecx
    0.00 :   5e41f:  mov    %rax,%r10
    0.00 :   5e422:  sub    %rax,%r15
    0.00 :   5e425:  mov    0x58(%rsp),%r13
    0.00 :   5e42a:  mov    $0x0,%eax
    0.00 :   5e42f:  mov    0x20(%rsp),%esi
    0.00 :   5e433:  sub    %r15,%r13
    0.00 :   5e436:  cmovs  %rax,%r13
    0.00 :   5e43a:  mov    %r13d,%r11d
    0.00 :   5e43d:  test   %esi,%esi
    0.00 :   5e43f:  jne    5ecf8 <__vfprintf_internal+0x13e8>
    0.00 :   5e445:  mov    0x18(%rsp),%r14d
    0.00 :   5e44a:  sub    %r15d,%r14d
    0.00 :   5e44d:  sub    %r13d,%r14d
    0.00 :   5e450:  movzbl 0x48(%rsp),%r13d
    0.00 :   5e456:  and    %cl,%r13b
    0.00 :   5e459:  jne    5f200 <__vfprintf_internal+0x18f0>
    0.00 :   5e45f:  mov    0x8(%rsp),%eax
    0.00 :   5e463:  mov    0x38(%rsp),%ecx
    0.00 :   5e467:  or     %ecx,%eax
    0.00 :   5e469:  or     0x30(%rsp),%eax
    0.00 :   5e46d:  jne    5efc8 <__vfprintf_internal+0x16b8>
    0.00 :   5e473:  cmpb   $0x20,0x34(%rsp)
    0.00 :   5e478:  je     5f52e <__vfprintf_internal+0x1c1e>
    0.00 :   5e47e:  test   %r13b,%r13b
    0.00 :   5e481:  jne    5f158 <__vfprintf_internal+0x1848>
    0.00 :   5e487:  add    %r11d,%r14d
    0.00 :   5e48a:  test   %r14d,%r14d
    0.00 :   5e48d:  jg     5f010 <__vfprintf_internal+0x1700>
    0.00 :   5e493:  mov    0xd8(%rbx),%r13
    0.00 :   5e49a:  lea    0x17155f(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5e4a1:  mov    0x10(%rsp),%rdi
    0.00 :   5e4a6:  mov    %r13,%rax
    0.00 :   5e4a9:  sub    %rsi,%rax
    0.00 :   5e4ac:  cmp    %rdi,%rax
    0.00 :   5e4af:  jae    5f8d9 <__vfprintf_internal+0x1fc9>
    0.00 :   5e4b5:  mov    %r15,%rdx
    0.00 :   5e4b8:  mov    %r10,%rsi
    0.00 :   5e4bb:  mov    %rbx,%rdi
    0.00 :   5e4be:  call   *0x38(%r13)
    0.00 :   5e4c2:  cmp    %rax,%r15
    0.00 :   5e4c5:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e4cb:  movslq %ebp,%rbp
    0.00 :   5e4ce:  xor    %eax,%eax
    0.00 :   5e4d0:  add    %rbp,%r15
    0.00 :   5e4d3:  js     5fdc3 <__vfprintf_internal+0x24b3>
    0.00 :   5e4d9:  cmp    %rbp,%r15
    0.00 :   5e4dc:  jb     5fdc3 <__vfprintf_internal+0x24b3>
    0.00 :   5e4e2:  movslq %r15d,%rdx
    0.00 :   5e4e5:  mov    %r15d,%ebp
    0.00 :   5e4e8:  cmp    %rdx,%r15
    0.00 :   5e4eb:  mov    $0x1,%edx
    0.00 :   5e4f0:  cmovne %edx,%eax
    0.00 :   5e4f3:  test   %eax,%eax
    0.00 :   5e4f5:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e4fb:  test   %r15d,%r15d
    0.00 :   5e4fe:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e504:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e509:  nopl   0x0(%rax)
    0.00 :   5e510:  endbr64
    0.00 :   5e514:  movl   $0x10,0x28(%rsp)
    4.59 :   5e51c:  jmp    5e314 <__vfprintf_internal+0xa04> // libc.so.6[5e51c]
    0.00 :   5e521:  nopl   0x0(%rax)
    0.00 :   5e528:  endbr64
    0.00 :   5e52c:  movl   $0x8,0x28(%rsp)
    0.00 :   5e534:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e539:  nopl   0x0(%rax)
    0.00 :   5e540:  endbr64
    0.00 :   5e544:  movl   $0xa,0x28(%rsp)
    0.00 :   5e54c:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e551:  nopl   0x0(%rax)
    4.50 :   5e558:  endbr64 // libc.so.6[5e558]
    0.00 :   5e55c:  mov    0x8(%rsp),%ecx
    0.00 :   5e560:  mov    (%r12),%eax
    0.00 :   5e564:  test   %ecx,%ecx
    0.00 :   5e566:  jne    5f420 <__vfprintf_internal+0x1b10>
    0.00 :   5e56c:  test   %r14d,%r14d
    0.00 :   5e56f:  je     5f9c4 <__vfprintf_internal+0x20b4>
    0.00 :   5e575:  cmp    $0x2f,%eax
    0.00 :   5e578:  ja     5fb44 <__vfprintf_internal+0x2234>
    0.00 :   5e57e:  mov    %eax,%edx
    0.00 :   5e580:  add    $0x8,%eax
    0.00 :   5e583:  add    0x10(%r12),%rdx
    0.00 :   5e588:  mov    %eax,(%r12)
    0.00 :   5e58c:  movsbq (%rdx),%rax
    0.00 :   5e590:  test   %rax,%rax
    0.00 :   5e593:  js     5f680 <__vfprintf_internal+0x1d70>
    0.00 :   5e599:  movl   $0x0,0x8(%rsp)
    0.00 :   5e5a1:  mov    %rax,%r14
    0.00 :   5e5a4:  movl   $0xa,0x28(%rsp)
    0.00 :   5e5ac:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5e5b1:  nopl   0x0(%rax)
    0.00 :   5e5b8:  endbr64
    0.00 :   5e5bc:  mov    0x28(%rbx),%rax
    0.00 :   5e5c0:  cmp    0x30(%rbx),%rax
    0.00 :   5e5c4:  jae    5fbcc <__vfprintf_internal+0x22bc>
    0.00 :   5e5ca:  lea    0x1(%rax),%rdx
    0.00 :   5e5ce:  mov    %rdx,0x28(%rbx)
    0.00 :   5e5d2:  movb   $0x25,(%rax)
    0.00 :   5e5d5:  cmp    $0x7fffffff,%ebp
    0.00 :   5e5db:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5e5e1:  add    $0x1,%ebp
    0.00 :   5e5e4:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e5e9:  nopl   0x0(%rax)
    0.00 :   5e5f0:  endbr64
    0.00 :   5e5f4:  lea    0x80(%rsp),%rdi
    0.00 :   5e5fc:  call   5aa60 <read_int>
    0.00 :   5e601:  mov    %eax,0x18(%rsp)
    0.00 :   5e605:  cmp    $0xffffffff,%eax
    0.00 :   5e608:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5e60e:  mov    0x80(%rsp),%rax
    0.00 :   5e616:  movzbl (%rax),%r9d
    0.00 :   5e61a:  cmp    $0x24,%r9b
    0.00 :   5e61e:  je     5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5e624:  lea    -0x20(%r9),%eax
    0.00 :   5e628:  cmp    $0x5a,%al
    0.00 :   5e62a:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e630:  movzbl %r9b,%eax
    0.00 :   5e634:  lea    0x131b65(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e63b:  lea    -0xb6d(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e642:  sub    $0x20,%eax
    0.00 :   5e645:  cltq
    0.00 :   5e647:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5e64b:  lea    0x131a4e(%rip),%rax        # 1900a0 <step1_jumps.8>
    0.00 :   5e652:  movslq (%rax,%rdx,4),%rax
    0.00 :   5e656:  add    %rcx,%rax
    0.00 :   5e659:  jmp    *%rax
    0.00 :   5e65b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e660:  endbr64
    0.00 :   5e664:  mov    0x80(%rsp),%rcx
    0.00 :   5e66c:  lea    0x1(%rcx),%rax
    0.00 :   5e670:  mov    %rax,0x80(%rsp)
    0.00 :   5e678:  mov    %rax,0xa0(%rsp)
    0.00 :   5e680:  movzbl 0x1(%rcx),%eax
    0.00 :   5e684:  sub    $0x30,%eax
    0.00 :   5e687:  cmp    $0x9,%eax
    0.00 :   5e68a:  jbe    5f7e0 <__vfprintf_internal+0x1ed0>
    0.00 :   5e690:  mov    (%r12),%eax
    0.00 :   5e694:  cmp    $0x2f,%eax
    0.00 :   5e697:  ja     5f500 <__vfprintf_internal+0x1bf0>
    0.00 :   5e69d:  mov    %eax,%edx
    0.00 :   5e69f:  add    $0x8,%eax
    0.00 :   5e6a2:  add    0x10(%r12),%rdx
    0.00 :   5e6a7:  mov    %eax,(%r12)
    0.00 :   5e6ab:  mov    (%rdx),%eax
    0.00 :   5e6ad:  mov    %eax,0x18(%rsp)
    0.00 :   5e6b1:  test   %eax,%eax
    0.00 :   5e6b3:  jns    5e6c8 <__vfprintf_internal+0xdb8>
    0.00 :   5e6b5:  neg    %eax
    0.00 :   5e6b7:  movb   $0x20,0x34(%rsp)
    0.00 :   5e6bc:  mov    %eax,0x18(%rsp)
    0.00 :   5e6c0:  movl   $0x1,0x20(%rsp)
    0.00 :   5e6c8:  movzbl 0x1(%rcx),%r9d
    0.00 :   5e6cd:  lea    -0x20(%r9),%eax
    0.00 :   5e6d1:  cmp    $0x5a,%al
    0.00 :   5e6d3:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e6d9:  jmp    5e630 <__vfprintf_internal+0xd20>
    0.00 :   5e6de:  xchg   %ax,%ax
    0.00 :   5e6e0:  endbr64
    0.00 :   5e6e4:  mov    0x80(%rsp),%rax
    0.00 :   5e6ec:  movzbl 0x1(%rax),%r9d
    0.00 :   5e6f1:  lea    0x1(%rax),%rdx
    0.00 :   5e6f5:  lea    -0xc27(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e6fc:  mov    %rdx,0x80(%rsp)
    0.00 :   5e704:  lea    -0x20(%r9),%edx
    0.00 :   5e708:  cmp    $0x5a,%dl
    0.00 :   5e70b:  ja     5f410 <__vfprintf_internal+0x1b00>
    0.00 :   5e711:  movzbl %r9b,%eax
    0.00 :   5e715:  lea    0x131a84(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e71c:  lea    0x1319fd(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e723:  movl   $0x1,0x50(%rsp)
    0.00 :   5e72b:  sub    $0x20,%eax
    0.00 :   5e72e:  lea    -0xc60(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e735:  cltq
    0.00 :   5e737:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e73b:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e73f:  add    %rsi,%rax
    0.00 :   5e742:  jmp    *%rax
    0.00 :   5e744:  nopl   0x0(%rax)
    0.00 :   5e748:  endbr64
    0.00 :   5e74c:  cmpq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5e752:  je     5f83e <__vfprintf_internal+0x1f2e>
    0.00 :   5e758:  mov    0x80(%rsp),%rax
    0.00 :   5e760:  movzbl 0x1(%rax),%r9d
    0.00 :   5e765:  lea    0x1(%rax),%rdx
    0.00 :   5e769:  lea    -0xc9b(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e770:  mov    %rdx,0x80(%rsp)
    0.00 :   5e778:  lea    -0x20(%r9),%edx
    0.00 :   5e77c:  cmp    $0x5a,%dl
    0.00 :   5e77f:  ja     5f400 <__vfprintf_internal+0x1af0>
    0.00 :   5e785:  movzbl %r9b,%eax
    0.00 :   5e789:  lea    0x131a10(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e790:  lea    0x131989(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e797:  mov    $0x1,%r15d
    0.00 :   5e79d:  sub    $0x20,%eax
    0.00 :   5e7a0:  lea    -0xcd2(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e7a7:  cltq
    0.00 :   5e7a9:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e7ad:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e7b1:  add    %rsi,%rax
    0.00 :   5e7b4:  jmp    *%rax
    0.00 :   5e7b6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5e7c0:  endbr64
    0.00 :   5e7c4:  mov    0x20(%rsp),%esi
    0.00 :   5e7c8:  movzbl 0x34(%rsp),%edi
    0.00 :   5e7cd:  mov    $0x30,%eax
    0.00 :   5e7d2:  test   %esi,%esi
    0.00 :   5e7d4:  cmove  %eax,%edi
    0.00 :   5e7d7:  mov    0x80(%rsp),%rax
    0.00 :   5e7df:  movzbl 0x1(%rax),%r9d
    0.00 :   5e7e4:  lea    0x1(%rax),%rdx
    0.00 :   5e7e8:  mov    %dil,0x34(%rsp)
    0.00 :   5e7ed:  mov    %rdx,0x80(%rsp)
    0.00 :   5e7f5:  lea    -0x20(%r9),%eax
    0.00 :   5e7f9:  cmp    $0x5a,%al
    0.00 :   5e7fb:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e801:  movzbl %r9b,%eax
    0.00 :   5e805:  lea    0x131994(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e80c:  lea    0x13190d(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e813:  sub    $0x20,%eax
    0.00 :   5e816:  lea    -0xd48(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e81d:  cltq
    0.00 :   5e81f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e823:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e827:  add    %rsi,%rax
    0.00 :   5e82a:  jmp    *%rax
    0.00 :   5e82c:  nopl   0x0(%rax)
    0.00 :   5e830:  endbr64
    0.00 :   5e834:  mov    0x80(%rsp),%rax
    0.00 :   5e83c:  movzbl 0x1(%rax),%r9d
    0.00 :   5e841:  lea    0x1(%rax),%rdx
    0.00 :   5e845:  lea    -0xd77(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e84c:  mov    %rdx,0x80(%rsp)
    0.00 :   5e854:  lea    -0x20(%r9),%edx
    0.00 :   5e858:  cmp    $0x5a,%dl
    0.00 :   5e85b:  ja     5f3f0 <__vfprintf_internal+0x1ae0>
    0.00 :   5e861:  movzbl %r9b,%eax
    0.00 :   5e865:  lea    0x131934(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e86c:  lea    0x1318ad(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e873:  movl   $0x1,0x48(%rsp)
    0.00 :   5e87b:  sub    $0x20,%eax
    0.00 :   5e87e:  lea    -0xdb0(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e885:  cltq
    0.00 :   5e887:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e88b:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e88f:  add    %rsi,%rax
    0.00 :   5e892:  jmp    *%rax
    0.00 :   5e894:  nopl   0x0(%rax)
    0.00 :   5e898:  endbr64
    0.00 :   5e89c:  mov    0x80(%rsp),%rax
    0.00 :   5e8a4:  movzbl 0x1(%rax),%r9d
    0.00 :   5e8a9:  lea    0x1(%rax),%rdx
    0.00 :   5e8ad:  lea    -0xddf(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e8b4:  mov    %rdx,0x80(%rsp)
    0.00 :   5e8bc:  lea    -0x20(%r9),%edx
    0.00 :   5e8c0:  cmp    $0x5a,%dl
    0.00 :   5e8c3:  ja     5f3e0 <__vfprintf_internal+0x1ad0>
    0.00 :   5e8c9:  movzbl %r9b,%eax
    0.00 :   5e8cd:  lea    0x1318cc(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e8d4:  lea    0x131845(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e8db:  movb   $0x20,0x34(%rsp)
    0.00 :   5e8e0:  sub    $0x20,%eax
    0.00 :   5e8e3:  lea    -0xe15(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e8ea:  movl   $0x1,0x20(%rsp)
    0.00 :   5e8f2:  cltq
    0.00 :   5e8f4:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e8f8:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e8fc:  add    %rsi,%rax
    0.00 :   5e8ff:  jmp    *%rax
    0.00 :   5e901:  nopl   0x0(%rax)
    0.00 :   5e908:  endbr64
    0.00 :   5e90c:  mov    0x80(%rsp),%rax
    0.00 :   5e914:  movzbl 0x1(%rax),%r9d
    0.00 :   5e919:  lea    0x1(%rax),%rdx
    0.00 :   5e91d:  lea    -0xe4f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e924:  mov    %rdx,0x80(%rsp)
    0.00 :   5e92c:  lea    -0x20(%r9),%edx
    0.00 :   5e930:  cmp    $0x5a,%dl
    0.00 :   5e933:  ja     5f3d0 <__vfprintf_internal+0x1ac0>
    0.00 :   5e939:  movzbl %r9b,%eax
    0.00 :   5e93d:  lea    0x13185c(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e944:  lea    0x1317d5(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e94b:  movl   $0x1,0x30(%rsp)
    0.00 :   5e953:  sub    $0x20,%eax
    0.00 :   5e956:  lea    -0xe88(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e95d:  cltq
    0.00 :   5e95f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e963:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e967:  add    %rsi,%rax
    0.00 :   5e96a:  jmp    *%rax
    0.00 :   5e96c:  nopl   0x0(%rax)
    0.00 :   5e970:  endbr64
    0.00 :   5e974:  mov    0x80(%rsp),%rax
    0.00 :   5e97c:  movzbl 0x1(%rax),%r9d
    0.00 :   5e981:  lea    0x1(%rax),%rdx
    0.00 :   5e985:  lea    -0xeb7(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e98c:  mov    %rdx,0x80(%rsp)
    0.00 :   5e994:  lea    -0x20(%r9),%edx
    0.00 :   5e998:  cmp    $0x5a,%dl
    0.00 :   5e99b:  ja     5ea09 <__vfprintf_internal+0x10f9>
    0.00 :   5e99d:  movzbl %r9b,%eax
    0.00 :   5e9a1:  lea    0x1317f8(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5e9a8:  xor    %r10d,%r10d
    0.00 :   5e9ab:  movl   $0x1,0x8(%rsp)
    0.00 :   5e9b3:  sub    $0x20,%eax
    0.00 :   5e9b6:  lea    -0xee8(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e9bd:  cltq
    0.00 :   5e9bf:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5e9c3:  lea    0x131556(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5e9ca:  movslq (%rax,%rdx,4),%rax
    0.00 :   5e9ce:  add    %rsi,%rax
    0.00 :   5e9d1:  jmp    *%rax
    0.00 :   5e9d3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e9d8:  endbr64
    0.00 :   5e9dc:  mov    0x80(%rsp),%rax
    0.00 :   5e9e4:  movzbl 0x1(%rax),%r9d
    0.00 :   5e9e9:  lea    0x1(%rax),%rdx
    0.00 :   5e9ed:  lea    -0xf1f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e9f4:  mov    %rdx,0x80(%rsp)
    0.00 :   5e9fc:  lea    -0x20(%r9),%edx
    0.00 :   5ea00:  cmp    $0x5a,%dl
    0.00 :   5ea03:  jbe    5f390 <__vfprintf_internal+0x1a80>
    0.00 :   5ea09:  movl   $0x1,0x8(%rsp)
    0.00 :   5ea11:  xor    %r10d,%r10d
    0.00 :   5ea14:  jmp    *%rax
    0.00 :   5ea16:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5ea20:  endbr64
    0.00 :   5ea24:  mov    0x80(%rsp),%rax
    0.00 :   5ea2c:  movzbl 0x1(%rax),%r9d
    0.00 :   5ea31:  lea    0x1(%rax),%rdx
    0.00 :   5ea35:  lea    -0xf67(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ea3c:  mov    %rdx,0x80(%rsp)
    0.00 :   5ea44:  lea    -0x20(%r9),%edx
    0.00 :   5ea48:  cmp    $0x5a,%dl
    0.00 :   5ea4b:  ja     5ea09 <__vfprintf_internal+0x10f9>
    0.00 :   5ea4d:  movzbl %r9b,%eax
    0.00 :   5ea51:  lea    0x131748(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5ea58:  xor    %r10d,%r10d
    0.00 :   5ea5b:  movl   $0x1,0x8(%rsp)
    0.00 :   5ea63:  sub    $0x20,%eax
    0.00 :   5ea66:  lea    -0xf98(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ea6d:  cltq
    0.00 :   5ea6f:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5ea73:  lea    0x1314a6(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5ea7a:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ea7e:  add    %rcx,%rax
    0.00 :   5ea81:  jmp    *%rax
    0.00 :   5ea83:  nopl   0x0(%rax,%rax,1)
    0.00 :   5ea88:  endbr64
    0.00 :   5ea8c:  mov    0x80(%rsp),%rax
    0.00 :   5ea94:  movzbl 0x1(%rax),%r9d
    0.00 :   5ea99:  lea    0x1(%rax),%rdx
    0.00 :   5ea9d:  lea    -0xfcf(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eaa4:  mov    %rdx,0x80(%rsp)
    0.00 :   5eaac:  lea    -0x20(%r9),%edx
    0.00 :   5eab0:  cmp    $0x5a,%dl
    0.00 :   5eab3:  ja     5f380 <__vfprintf_internal+0x1a70>
    0.00 :   5eab9:  movzbl %r9b,%eax
    0.00 :   5eabd:  lea    0x1316dc(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5eac4:  lea    -0xff6(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eacb:  movl   $0x1,0x8(%rsp)
    0.00 :   5ead3:  sub    $0x20,%eax
    0.00 :   5ead6:  mov    $0x1,%r10d
    0.00 :   5eadc:  cltq
    0.00 :   5eade:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5eae2:  lea    0x131437(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5eae9:  movslq (%rax,%rdx,4),%rax
    0.00 :   5eaed:  add    %rsi,%rax
    0.00 :   5eaf0:  jmp    *%rax
    0.00 :   5eaf2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5eaf8:  endbr64
    0.00 :   5eafc:  mov    0x80(%rsp),%rax
    0.00 :   5eb04:  movzbl 0x1(%rax),%r9d
    0.00 :   5eb09:  lea    0x1(%rax),%rdx
    0.00 :   5eb0d:  lea    -0x103f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb14:  mov    %rdx,0x80(%rsp)
    0.00 :   5eb1c:  lea    -0x20(%r9),%edx
    0.00 :   5eb20:  cmp    $0x5a,%dl
    0.00 :   5eb23:  ja     5f370 <__vfprintf_internal+0x1a60>
    0.00 :   5eb29:  movzbl %r9b,%eax
    0.00 :   5eb2d:  lea    0x13166c(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5eb34:  lea    -0x1066(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb3b:  movl   $0x1,0x8(%rsp)
    0.00 :   5eb43:  sub    $0x20,%eax
    0.00 :   5eb46:  cltq
    0.00 :   5eb48:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5eb4c:  lea    0x13134d(%rip),%rax        # 18fea0 <step3b_jumps.4>
    0.00 :   5eb53:  movslq (%rax,%rdx,4),%rax
    9.89 :   5eb57:  add    %rdi,%rax // libc.so.6[5eb57]
    0.00 :   5eb5a:  jmp    *%rax
    0.00 :   5eb5c:  nopl   0x0(%rax)
    0.00 :   5eb60:  endbr64
    0.00 :   5eb64:  mov    0x80(%rsp),%rax
    0.00 :   5eb6c:  movzbl 0x1(%rax),%r9d
    0.00 :   5eb71:  lea    0x1(%rax),%rdx
    0.00 :   5eb75:  lea    -0x10a7(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb7c:  mov    %rdx,0x80(%rsp)
    0.00 :   5eb84:  lea    -0x20(%r9),%edx
    0.00 :   5eb88:  cmp    $0x5a,%dl
    0.00 :   5eb8b:  ja     5f360 <__vfprintf_internal+0x1a50>
    0.00 :   5eb91:  movzbl %r9b,%eax
    0.00 :   5eb95:  lea    0x131604(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5eb9c:  lea    -0x10ce(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eba3:  xor    %r13d,%r13d
    0.00 :   5eba6:  sub    $0x20,%eax
    0.00 :   5eba9:  mov    $0x1,%r14d
    0.00 :   5ebaf:  cltq
    0.00 :   5ebb1:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5ebb5:  lea    0x131364(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5ebbc:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ebc0:  add    %rcx,%rax
    0.00 :   5ebc3:  jmp    *%rax
    0.00 :   5ebc5:  nopl   (%rax)
    0.00 :   5ebc8:  endbr64
    0.00 :   5ebcc:  mov    0x80(%rsp),%rax
    0.00 :   5ebd4:  movzbl 0x1(%rax),%r9d
    0.00 :   5ebd9:  lea    0x1(%rax),%rdx
    0.00 :   5ebdd:  lea    -0x110f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ebe4:  mov    %rdx,0x80(%rsp)
    0.00 :   5ebec:  lea    -0x20(%r9),%edx
    0.00 :   5ebf0:  cmp    $0x5a,%dl
    0.00 :   5ebf3:  ja     5f358 <__vfprintf_internal+0x1a48>
    0.00 :   5ebf9:  movzbl %r9b,%eax
    0.00 :   5ebfd:  lea    0x13159c(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5ec04:  lea    -0x1136(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec0b:  mov    $0x1,%r13d
    0.00 :   5ec11:  sub    $0x20,%eax
    0.00 :   5ec14:  cltq
    0.00 :   5ec16:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5ec1a:  lea    0x13137f(%rip),%rax        # 18ffa0 <step3a_jumps.6>
    0.00 :   5ec21:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ec25:  add    %rsi,%rax
    0.00 :   5ec28:  jmp    *%rax
    0.00 :   5ec2a:  nopw   0x0(%rax,%rax,1)
    3.55 :   5ec30:  endbr64 // libc.so.6[5ec30]
    0.00 :   5ec34:  mov    0x80(%rsp),%rcx
    0.00 :   5ec3c:  movzbl 0x1(%rcx),%r9d
    0.00 :   5ec41:  lea    0x1(%rcx),%rax
    0.00 :   5ec45:  mov    %rax,0x80(%rsp)
    0.00 :   5ec4d:  cmp    $0x2a,%r9b
    0.00 :   5ec51:  je     5f780 <__vfprintf_internal+0x1e70>
    0.00 :   5ec57:  movzbl %r9b,%eax
    0.00 :   5ec5b:  xor    %r11d,%r11d
    0.00 :   5ec5e:  sub    $0x30,%eax
    0.00 :   5ec61:  cmp    $0x9,%eax
    0.00 :   5ec64:  jbe    5f5e0 <__vfprintf_internal+0x1cd0>
    0.00 :   5ec6a:  lea    -0x20(%r9),%eax
    0.00 :   5ec6e:  cmp    $0x5a,%al
    0.00 :   5ec70:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec76:  movzbl %r9b,%eax
    0.00 :   5ec7a:  lea    0x13151f(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5ec81:  lea    -0x11b3(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec88:  sub    $0x20,%eax
    0.00 :   5ec8b:  cltq
    0.00 :   5ec8d:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5ec91:  lea    0x131388(%rip),%rax        # 190020 <step2_jumps.7>
    0.00 :   5ec98:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ec9c:  add    %rdi,%rax
    0.00 :   5ec9f:  jmp    *%rax
    0.00 :   5eca1:  nopl   0x0(%rax)
    0.00 :   5eca8:  mov    %r13,%r15
    0.00 :   5ecab:  mov    0x58(%rsp),%rax
    0.00 :   5ecb0:  sub    %r10,%r15
    0.00 :   5ecb3:  cmp    %rax,%r15
    0.00 :   5ecb6:  jl     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecbc:  test   %cl,%cl
    0.00 :   5ecbe:  je     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecc4:  cmpl   $0x8,0x28(%rsp)
    0.00 :   5ecc9:  jne    5e425 <__vfprintf_internal+0xb15>
    0.00 :   5eccf:  mov    0x48(%rsp),%edi
    0.00 :   5ecd3:  test   %edi,%edi
    0.00 :   5ecd5:  je     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecdb:  lea    -0x1(%r10),%rax
    0.00 :   5ecdf:  mov    %r13,%r15
    0.00 :   5ece2:  movb   $0x30,-0x1(%r10)
    0.00 :   5ece7:  sub    %rax,%r15
    0.00 :   5ecea:  mov    %rax,%r10
    0.00 :   5eced:  jmp    5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecf2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ecf8:  mov    0x8(%rsp),%eax
    0.00 :   5ecfc:  test   %eax,%eax
    0.00 :   5ecfe:  je     5ef80 <__vfprintf_internal+0x1670>
    0.00 :   5ed04:  mov    0x28(%rbx),%rax
    0.00 :   5ed08:  cmp    0x30(%rbx),%rax
    0.00 :   5ed0c:  jae    5fad0 <__vfprintf_internal+0x21c0>
    0.00 :   5ed12:  lea    0x1(%rax),%rdx
    0.00 :   5ed16:  mov    %rdx,0x28(%rbx)
    0.00 :   5ed1a:  movb   $0x2d,(%rax)
    0.00 :   5ed1d:  cmp    $0x7fffffff,%ebp
    0.00 :   5ed23:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5ed29:  subl   $0x1,0x18(%rsp)
    0.00 :   5ed2e:  add    $0x1,%ebp
    0.00 :   5ed31:  test   %r14,%r14
    0.00 :   5ed34:  je     5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5ed36:  mov    0x48(%rsp),%eax
    0.00 :   5ed3a:  test   %eax,%eax
    0.00 :   5ed3c:  jne    5f250 <__vfprintf_internal+0x1940>
    0.00 :   5ed42:  mov    0x18(%rsp),%r14d
    0.00 :   5ed47:  add    %r15d,%r13d
    0.00 :   5ed4a:  sub    %r13d,%r14d
    0.00 :   5ed4d:  test   %r11d,%r11d
    0.00 :   5ed50:  jle    5eda6 <__vfprintf_internal+0x1496>
    0.00 :   5ed52:  movslq %r11d,%r13
    0.00 :   5ed55:  mov    $0x30,%esi
    0.00 :   5ed5a:  mov    %rbx,%rdi
    0.00 :   5ed5d:  mov    %r10,0x18(%rsp)
    0.00 :   5ed62:  mov    %r13,%rdx
    0.00 :   5ed65:  mov    %r11d,0x8(%rsp)
    0.00 :   5ed6a:  call   78be0 <_IO_padn>
    0.00 :   5ed6f:  cmp    %rax,%r13
    0.00 :   5ed72:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5ed78:  mov    0x8(%rsp),%r11d
    0.00 :   5ed7d:  xor    %eax,%eax
    0.00 :   5ed7f:  mov    0x18(%rsp),%r10
    0.00 :   5ed84:  add    %r11d,%ebp
    0.00 :   5ed87:  js     5fdcd <__vfprintf_internal+0x24bd>
    0.00 :   5ed8d:  cmp    %r13d,%ebp
    0.00 :   5ed90:  jb     5fdcd <__vfprintf_internal+0x24bd>
    0.00 :   5ed96:  test   %eax,%eax
    0.00 :   5ed98:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ed9e:  test   %ebp,%ebp
    0.00 :   5eda0:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5eda6:  mov    0xd8(%rbx),%r13
    0.00 :   5edad:  lea    0x170c4c(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5edb4:  mov    0x10(%rsp),%rdi
    0.00 :   5edb9:  mov    %r13,%rax
    0.00 :   5edbc:  sub    %rsi,%rax
    0.00 :   5edbf:  cmp    %rdi,%rax
    0.00 :   5edc2:  jae    5f8c5 <__vfprintf_internal+0x1fb5>
    0.00 :   5edc8:  mov    %r15,%rdx
    0.00 :   5edcb:  mov    %r10,%rsi
    0.00 :   5edce:  mov    %rbx,%rdi
    0.00 :   5edd1:  call   *0x38(%r13)
    0.00 :   5edd5:  cmp    %rax,%r15
    0.00 :   5edd8:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5edde:  movslq %ebp,%rax
    0.00 :   5ede1:  xor    %edx,%edx
    0.00 :   5ede3:  add    %r15,%rax
    0.00 :   5ede6:  js     5fdb9 <__vfprintf_internal+0x24a9>
    0.00 :   5edec:  cmp    %r15,%rax
    0.00 :   5edef:  jb     5fdb9 <__vfprintf_internal+0x24a9>
    0.00 :   5edf5:  movslq %eax,%r13
    0.00 :   5edf8:  mov    $0x1,%ecx
    0.00 :   5edfd:  mov    %eax,%ebp
    0.00 :   5edff:  cmp    %r13,%rax
    0.00 :   5ee02:  cmovne %ecx,%edx
    0.00 :   5ee05:  test   %edx,%edx
    0.00 :   5ee07:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ee0d:  test   %eax,%eax
    0.00 :   5ee0f:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5ee15:  test   %r14d,%r14d
    0.00 :   5ee18:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5ee1e:  mov    %r14,%rdx
    0.00 :   5ee21:  mov    $0x20,%esi
    0.00 :   5ee26:  mov    %rbx,%rdi
    0.00 :   5ee29:  call   78be0 <_IO_padn>
    0.00 :   5ee2e:  cmp    %rax,%r14
    0.00 :   5ee31:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5ee37:  add    %r13,%r14
    0.00 :   5ee3a:  movslq %r14d,%rax
    0.00 :   5ee3d:  mov    %r14d,%ebp
    0.00 :   5ee40:  cmp    %rax,%r14
    0.00 :   5ee43:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ee49:  test   %r14d,%r14d
    0.00 :   5ee4c:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5ee52:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5ee57:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ee60:  test   %r14,%r14
    0.00 :   5ee63:  jne    5f058 <__vfprintf_internal+0x1748>
    0.00 :   5ee69:  cmpl   $0x8,0x28(%rsp)
    0.00 :   5ee6e:  jne    5f2d8 <__vfprintf_internal+0x19c8>
    0.00 :   5ee74:  mov    0x48(%rsp),%r10d
    0.00 :   5ee79:  test   %r10d,%r10d
    0.00 :   5ee7c:  je     5f2d8 <__vfprintf_internal+0x19c8>
    0.00 :   5ee82:  movb   $0x30,0x4f7(%rsp)
    0.00 :   5ee8a:  mov    $0x1,%r15d
    0.00 :   5ee90:  lea    0x4f7(%rsp),%r10
    0.00 :   5ee98:  mov    0x20(%rsp),%eax
    0.00 :   5ee9c:  xor    %r13d,%r13d
    0.00 :   5ee9f:  test   %eax,%eax
    0.00 :   5eea1:  jne    5ecf8 <__vfprintf_internal+0x13e8>
    0.00 :   5eea7:  mov    0x8(%rsp),%eax
    0.00 :   5eeab:  mov    0x38(%rsp),%esi
    0.00 :   5eeaf:  mov    0x18(%rsp),%r14d
    0.00 :   5eeb4:  mov    0x30(%rsp),%r11d
    0.00 :   5eeb9:  or     %esi,%eax
    0.00 :   5eebb:  sub    %r15d,%r14d
    0.00 :   5eebe:  or     %eax,%r11d
    0.00 :   5eec1:  je     5f52b <__vfprintf_internal+0x1c1b>
    0.00 :   5eec7:  sub    $0x1,%r14d
    0.00 :   5eecb:  xor    %r13d,%r13d
    0.00 :   5eece:  mov    0x20(%rsp),%r11d
    0.00 :   5eed3:  test   %r14d,%r14d
    0.00 :   5eed6:  jg     5f8ed <__vfprintf_internal+0x1fdd>
    0.00 :   5eedc:  xor    %r14d,%r14d
    0.00 :   5eedf:  jmp    5efd7 <__vfprintf_internal+0x16c7>
    0.00 :   5eee4:  nopl   0x0(%rax)
    0.00 :   5eee8:  mov    0x4f8(%rsp),%rax
    0.00 :   5eef0:  sub    %fs:0x28,%rax
    0.00 :   5eef9:  jne    5fdb4 <__vfprintf_internal+0x24a4>
    0.00 :   5eeff:  mov    0x3c(%rsp),%ecx
    0.00 :   5ef03:  mov    (%rsp),%rsi
    0.00 :   5ef07:  mov    %r12,%rdx
    0.00 :   5ef0a:  mov    %rbx,%rdi
    0.00 :   5ef0d:  add    $0x508,%rsp
    0.00 :   5ef14:  pop    %rbx
    0.00 :   5ef15:  pop    %rbp
    0.00 :   5ef16:  pop    %r12
    0.00 :   5ef18:  pop    %r13
    0.00 :   5ef1a:  pop    %r14
    0.00 :   5ef1c:  pop    %r15
    0.00 :   5ef1e:  jmp    5fe10 <buffered_vfprintf>
    0.00 :   5ef23:  nopl   0x0(%rax,%rax,1)
    0.00 :   5ef28:  test   %r14d,%r14d
    0.00 :   5ef2b:  je     5f070 <__vfprintf_internal+0x1760>
    0.00 :   5ef31:  cmp    $0x2f,%eax
    0.00 :   5ef34:  ja     5f340 <__vfprintf_internal+0x1a30>
    0.00 :   5ef3a:  mov    %eax,%edx
    0.00 :   5ef3c:  add    $0x8,%eax
    0.00 :   5ef3f:  add    0x10(%r12),%rdx
    0.00 :   5ef44:  mov    %eax,(%r12)
    0.00 :   5ef48:  movl   $0x0,0x30(%rsp)
    0.00 :   5ef50:  movzbl (%rdx),%r14d
    0.00 :   5ef54:  movl   $0x0,0x38(%rsp)
    0.00 :   5ef5c:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5ef61:  nopl   0x0(%rax)
    0.00 :   5ef68:  movq   $0x1,0x58(%rsp)
    3.90 :   5ef71:  jmp    5e372 <__vfprintf_internal+0xa62> // libc.so.6[5ef71]
    0.00 :   5ef76:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5ef80:  mov    0x30(%rsp),%eax
    0.00 :   5ef84:  test   %eax,%eax
    0.00 :   5ef86:  je     5f220 <__vfprintf_internal+0x1910>
    0.00 :   5ef8c:  mov    0x28(%rbx),%rax
    0.00 :   5ef90:  cmp    0x30(%rbx),%rax
    0.00 :   5ef94:  jae    5fc09 <__vfprintf_internal+0x22f9>
    0.00 :   5ef9a:  lea    0x1(%rax),%rdx
    0.00 :   5ef9e:  mov    %rdx,0x28(%rbx)
    0.00 :   5efa2:  movb   $0x2b,(%rax)
    0.00 :   5efa5:  jmp    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5efaa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5efb0:  mov    %rax,0x8(%rsp)
    0.00 :   5efb5:  call   818e0 <_IO_vtable_check>
    0.00 :   5efba:  mov    0x8(%rsp),%rax
    0.00 :   5efbf:  jmp    5def1 <__vfprintf_internal+0x5e1>
    0.00 :   5efc4:  nopl   0x0(%rax)
    0.00 :   5efc8:  sub    $0x1,%r14d
    0.00 :   5efcc:  cmpb   $0x20,0x34(%rsp)
    0.00 :   5efd1:  je     5fda0 <__vfprintf_internal+0x2490>
    0.00 :   5efd7:  mov    0x8(%rsp),%ecx
    0.00 :   5efdb:  test   %ecx,%ecx
    0.00 :   5efdd:  je     5f1c0 <__vfprintf_internal+0x18b0>
    0.00 :   5efe3:  mov    0x28(%rbx),%rax
    0.00 :   5efe7:  cmp    0x30(%rbx),%rax
    0.00 :   5efeb:  jae    5fa91 <__vfprintf_internal+0x2181>
    0.00 :   5eff1:  lea    0x1(%rax),%rdx
    0.00 :   5eff5:  mov    %rdx,0x28(%rbx)
    0.00 :   5eff9:  movb   $0x2d,(%rax)
    0.00 :   5effc:  cmp    $0x7fffffff,%ebp
    0.00 :   5f002:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f008:  add    $0x1,%ebp
    0.00 :   5f00b:  jmp    5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f010:  movslq %r14d,%r13
    0.00 :   5f013:  mov    $0x30,%esi
    0.00 :   5f018:  mov    %rbx,%rdi
    0.00 :   5f01b:  mov    %r10,0x8(%rsp)
    0.00 :   5f020:  mov    %r13,%rdx
    0.00 :   5f023:  call   78be0 <_IO_padn>
    0.00 :   5f028:  cmp    %rax,%r13
    0.00 :   5f02b:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f031:  add    %r14d,%ebp
    0.00 :   5f034:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f03a:  cmp    %r14d,%ebp
    0.00 :   5f03d:  jb     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f043:  test   %ebp,%ebp
    0.00 :   5f045:  mov    0x8(%rsp),%r10
    0.00 :   5f04a:  jns    5e493 <__vfprintf_internal+0xb83>
    0.00 :   5f050:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f055:  nopl   (%rax)
    0.00 :   5f058:  movq   $0x0,0x58(%rsp)
    0.00 :   5f061:  movb   $0x20,0x34(%rsp)
    0.00 :   5f066:  jmp    5e372 <__vfprintf_internal+0xa62>
    0.00 :   5f06b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f070:  test   %r13d,%r13d
    0.00 :   5f073:  jne    5f308 <__vfprintf_internal+0x19f8>
    0.00 :   5f079:  cmp    $0x2f,%eax
    0.00 :   5f07c:  ja     5f960 <__vfprintf_internal+0x2050>
    0.00 :   5f082:  mov    %eax,%edx
    0.00 :   5f084:  add    $0x8,%eax
    0.00 :   5f087:  add    0x10(%r12),%rdx
    0.00 :   5f08c:  mov    %eax,(%r12)
    0.00 :   5f090:  movl   $0x0,0x30(%rsp)
    0.00 :   5f098:  mov    (%rdx),%r14d
    0.00 :   5f09b:  movl   $0x0,0x38(%rsp)
    0.00 :   5f0a3:  movl   $0x0,0x8(%rsp)
    0.00 :   5f0ab:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f0b0:  mov    0x4(%r12),%eax
    0.00 :   5f0b5:  cmp    $0xaf,%eax
    0.00 :   5f0ba:  ja     5f2f0 <__vfprintf_internal+0x19e0>
    0.00 :   5f0c0:  mov    %eax,%edx
    0.00 :   5f0c2:  add    $0x10,%eax
    0.00 :   5f0c5:  add    0x10(%r12),%rdx
    0.00 :   5f0ca:  mov    %eax,0x4(%r12)
    0.00 :   5f0cf:  movsd  (%rdx),%xmm0
    0.00 :   5f0d3:  movsd  %xmm0,0x90(%rsp)
    0.00 :   5f0dc:  lea    0x90(%rsp),%rax
    0.00 :   5f0e4:  and    $0xffffffdf,%r9d
    0.00 :   5f0e8:  mov    %rbx,%rdi
    0.00 :   5f0eb:  mov    %rax,0x88(%rsp)
    0.00 :   5f0f3:  lea    0x88(%rsp),%rdx
    0.00 :   5f0fb:  lea    0xa0(%rsp),%rsi
    0.00 :   5f103:  cmp    $0x41,%r9d
    0.00 :   5f107:  jne    5f618 <__vfprintf_internal+0x1d08>
    0.00 :   5f10d:  call   56bb0 <__printf_fphex>
    0.00 :   5f112:  test   %eax,%eax
    0.00 :   5f114:  js     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f11a:  add    %eax,%ebp
    0.00 :   5f11c:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f122:  cmp    %eax,%ebp
    0.00 :   5f124:  jb     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f12a:  test   %ebp,%ebp
    0.00 :   5f12c:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f132:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f137:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f140:  mov    0x8(%r12),%rdx
    0.00 :   5f145:  lea    0x8(%rdx),%rax
    0.00 :   5f149:  mov    %rax,0x8(%r12)
    0.00 :   5f14e:  jmp    5e33b <__vfprintf_internal+0xa2b>
    0.00 :   5f153:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f158:  mov    0x28(%rsp),%ecx
    0.00 :   5f15c:  mov    $0x10004,%eax
    0.00 :   5f161:  bt     %rcx,%rax
    0.00 :   5f165:  jae    5e487 <__vfprintf_internal+0xb77>
    0.00 :   5f16b:  mov    0x28(%rbx),%rax
    0.00 :   5f16f:  cmp    0x30(%rbx),%rax
    0.00 :   5f173:  jae    5fca0 <__vfprintf_internal+0x2390>
    0.00 :   5f179:  lea    0x1(%rax),%rdx
    0.00 :   5f17d:  mov    %rdx,0x28(%rbx)
    0.00 :   5f181:  movb   $0x30,(%rax)
    0.00 :   5f184:  cmp    $0x7fffffff,%ebp
    0.00 :   5f18a:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f190:  mov    0x28(%rbx),%rax
    0.00 :   5f194:  cmp    0x30(%rbx),%rax
    0.00 :   5f198:  jae    5fc70 <__vfprintf_internal+0x2360>
    0.00 :   5f19e:  lea    0x1(%rax),%rdx
    0.00 :   5f1a2:  mov    %rdx,0x28(%rbx)
    0.00 :   5f1a6:  mov    %r9b,(%rax)
    0.00 :   5f1a9:  cmp    $0x7ffffffe,%ebp
    0.00 :   5f1af:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f1b5:  add    $0x2,%ebp
    0.00 :   5f1b8:  jmp    5e487 <__vfprintf_internal+0xb77>
    0.00 :   5f1bd:  nopl   (%rax)
    0.00 :   5f1c0:  mov    0x30(%rsp),%edx
    0.00 :   5f1c4:  test   %edx,%edx
    0.00 :   5f1c6:  je     5f72f <__vfprintf_internal+0x1e1f>
    0.00 :   5f1cc:  mov    0x28(%rbx),%rax
    0.00 :   5f1d0:  cmp    0x30(%rbx),%rax
    0.00 :   5f1d4:  jae    5fbf0 <__vfprintf_internal+0x22e0>
    0.00 :   5f1da:  lea    0x1(%rax),%rdx
    0.00 :   5f1de:  mov    %rdx,0x28(%rbx)
    0.00 :   5f1e2:  movb   $0x2b,(%rax)
    0.00 :   5f1e5:  jmp    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5f1ea:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f1f0:  call   818e0 <_IO_vtable_check>
    0.00 :   5f1f5:  jmp    5da15 <__vfprintf_internal+0x105>
    0.00 :   5f1fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f200:  movzbl 0x28(%rsp),%ecx
    0.00 :   5f205:  mov    $0x10004,%eax
    0.00 :   5f20a:  lea    -0x2(%r14),%edx
    0.00 :   5f20e:  shr    %cl,%rax
    0.00 :   5f211:  test   $0x1,%al
    0.00 :   5f213:  cmovne %edx,%r14d
    0.00 :   5f217:  jmp    5e45f <__vfprintf_internal+0xb4f>
    0.00 :   5f21c:  nopl   0x0(%rax)
    0.00 :   5f220:  mov    0x38(%rsp),%eax
    0.00 :   5f224:  test   %eax,%eax
    0.00 :   5f226:  je     5ed31 <__vfprintf_internal+0x1421>
    0.00 :   5f22c:  mov    0x28(%rbx),%rax
    0.00 :   5f230:  cmp    0x30(%rbx),%rax
    0.00 :   5f234:  jae    5fd0c <__vfprintf_internal+0x23fc>
    0.00 :   5f23a:  lea    0x1(%rax),%rdx
    0.00 :   5f23e:  mov    %rdx,0x28(%rbx)
    0.00 :   5f242:  movb   $0x20,(%rax)
    0.00 :   5f245:  jmp    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5f24a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f250:  mov    0x28(%rsp),%edi
    0.00 :   5f254:  mov    $0x10004,%eax
    0.00 :   5f259:  bt     %rdi,%rax
    0.00 :   5f25d:  jae    5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5f263:  mov    0x28(%rbx),%rax
    0.00 :   5f267:  cmp    0x30(%rbx),%rax
    0.00 :   5f26b:  jae    5fd60 <__vfprintf_internal+0x2450>
    0.00 :   5f271:  lea    0x1(%rax),%rdx
    0.00 :   5f275:  mov    %rdx,0x28(%rbx)
    0.00 :   5f279:  movb   $0x30,(%rax)
    0.00 :   5f27c:  cmp    $0x7fffffff,%ebp
    0.00 :   5f282:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f288:  mov    0x28(%rbx),%rax
    0.00 :   5f28c:  cmp    0x30(%rbx),%rax
    0.00 :   5f290:  jae    5fd2f <__vfprintf_internal+0x241f>
    0.00 :   5f296:  lea    0x1(%rax),%rdx
    0.00 :   5f29a:  mov    %rdx,0x28(%rbx)
    0.00 :   5f29e:  mov    %r9b,(%rax)
    0.00 :   5f2a1:  cmp    $0x7ffffffe,%ebp
    0.00 :   5f2a7:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f2ad:  subl   $0x2,0x18(%rsp)
    0.00 :   5f2b2:  add    $0x2,%ebp
    0.00 :   5f2b5:  jmp    5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5f2ba:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f2c0:  mov    0x8(%r12),%rdx
    0.00 :   5f2c5:  lea    0x8(%rdx),%rax
    0.00 :   5f2c9:  mov    %rax,0x8(%r12)
    0.00 :   5f2ce:  jmp    5dde3 <__vfprintf_internal+0x4d3>
    0.00 :   5f2d3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f2d8:  xor    %r15d,%r15d
    0.00 :   5f2db:  lea    0x4f8(%rsp),%r10
    0.00 :   5f2e3:  jmp    5ee98 <__vfprintf_internal+0x1588>
    0.00 :   5f2e8:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f2f0:  mov    0x8(%r12),%rdx
    0.00 :   5f2f5:  lea    0x8(%rdx),%rax
    0.00 :   5f2f9:  mov    %rax,0x8(%r12)
    0.00 :   5f2fe:  jmp    5f0cf <__vfprintf_internal+0x17bf>
    0.00 :   5f303:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f308:  cmp    $0x2f,%eax
    0.00 :   5f30b:  ja     5f9b1 <__vfprintf_internal+0x20a1>
    0.00 :   5f311:  mov    %eax,%edx
    0.00 :   5f313:  add    $0x8,%eax
    0.00 :   5f316:  add    0x10(%r12),%rdx
    0.00 :   5f31b:  mov    %eax,(%r12)
    0.00 :   5f31f:  movl   $0x0,0x30(%rsp)
    0.00 :   5f327:  movzwl (%rdx),%r14d
    0.00 :   5f32b:  movl   $0x0,0x38(%rsp)
    0.00 :   5f333:  movl   $0x0,0x8(%rsp)
    0.00 :   5f33b:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f340:  mov    0x8(%r12),%rdx
    0.00 :   5f345:  lea    0x8(%rdx),%rax
    0.00 :   5f349:  mov    %rax,0x8(%r12)
    0.00 :   5f34e:  jmp    5ef48 <__vfprintf_internal+0x1638>
    0.00 :   5f353:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f358:  mov    $0x1,%r13d
    0.00 :   5f35e:  jmp    *%rax
    0.00 :   5f360:  xor    %r13d,%r13d
    0.00 :   5f363:  mov    $0x1,%r14d
    0.00 :   5f369:  jmp    *%rax
    0.00 :   5f36b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f370:  movl   $0x1,0x8(%rsp)
    0.00 :   5f378:  jmp    *%rax
    0.00 :   5f37a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f380:  movl   $0x1,0x8(%rsp)
    0.00 :   5f388:  mov    $0x1,%r10d
    0.00 :   5f38e:  jmp    *%rax
    0.00 :   5f390:  movzbl %r9b,%eax
    0.00 :   5f394:  lea    0x130e05(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5f39b:  xor    %r10d,%r10d
    0.00 :   5f39e:  movl   $0x1,0x8(%rsp)
    0.00 :   5f3a6:  sub    $0x20,%eax
    0.00 :   5f3a9:  lea    -0x18db(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5f3b0:  cltq
    0.00 :   5f3b2:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5f3b6:  lea    0x130b63(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5f3bd:  movslq (%rax,%rdx,4),%rax
    0.00 :   5f3c1:  add    %rdi,%rax
    0.00 :   5f3c4:  jmp    *%rax
    0.00 :   5f3c6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f3d0:  movl   $0x1,0x30(%rsp)
    0.00 :   5f3d8:  jmp    *%rax
    0.00 :   5f3da:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f3e0:  movb   $0x20,0x34(%rsp)
    0.00 :   5f3e5:  movl   $0x1,0x20(%rsp)
    0.00 :   5f3ed:  jmp    *%rax
    0.00 :   5f3ef:  nop
    0.00 :   5f3f0:  movl   $0x1,0x48(%rsp)
    0.00 :   5f3f8:  jmp    *%rax
    0.00 :   5f3fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f400:  mov    $0x1,%r15d
    0.00 :   5f406:  jmp    *%rax
    0.00 :   5f408:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f410:  movl   $0x1,0x50(%rsp)
    0.00 :   5f418:  jmp    *%rax
    0.00 :   5f41a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f420:  cmp    $0x2f,%eax
    0.00 :   5f423:  ja     5f99e <__vfprintf_internal+0x208e>
    0.00 :   5f429:  mov    %eax,%edx
    0.00 :   5f42b:  add    $0x8,%eax
    0.00 :   5f42e:  add    0x10(%r12),%rdx
    0.00 :   5f433:  mov    %eax,(%r12)
    0.00 :   5f437:  mov    (%rdx),%rax
    0.00 :   5f43a:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5f43f:  nop
    0.00 :   5f440:  mov    0x8(%r12),%rax
    0.00 :   5f445:  add    $0xf,%rax
    0.00 :   5f449:  and    $0xfffffffffffffff0,%rax
    0.00 :   5f44d:  lea    0x10(%rax),%rdx
    0.00 :   5f451:  mov    %rdx,0x8(%r12)
    0.00 :   5f456:  fldt   (%rax)
    0.00 :   5f458:  fstpt  0x90(%rsp)
    0.00 :   5f45f:  jmp    5f0dc <__vfprintf_internal+0x17cc>
    0.00 :   5f464:  nopl   0x0(%rax)
    0.00 :   5f468:  mov    0x8(%r12),%rdx
    0.00 :   5f46d:  lea    0x8(%rdx),%rax
    0.00 :   5f471:  mov    %rax,0x8(%r12)
    0.00 :   5f476:  jmp    5e1f7 <__vfprintf_internal+0x8e7>
    0.00 :   5f47b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f480:  lea    -0x19b2(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5f487:  movl   $0x1,0x38(%rsp)
    0.00 :   5f48f:  jmp    *%rax
    0.00 :   5f491:  nopl   0x0(%rax)
    0.00 :   5f498:  mov    0x54(%rsp),%edi
    0.00 :   5f49c:  call   75e90 <__get_errname>
    0.00 :   5f4a1:  mov    0x8(%rsp),%r11d
    0.00 :   5f4a6:  movzbl 0x28(%rsp),%r9d
    0.00 :   5f4ac:  mov    %rax,%r13
    0.00 :   5f4af:  jmp    5e0c0 <__vfprintf_internal+0x7b0>
    0.00 :   5f4b4:  nopl   0x0(%rax)
    0.00 :   5f4b8:  mov    0x173951(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5f4bf:  movl   $0x16,%fs:(%rax)
    0.00 :   5f4c6:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f4cb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f4d0:  mov    0x8(%r12),%rdx
    0.00 :   5f4d5:  lea    0x8(%rdx),%rax
    0.00 :   5f4d9:  mov    %rax,0x8(%r12)
    0.00 :   5f4de:  jmp    5e2cf <__vfprintf_internal+0x9bf>
    0.00 :   5f4e3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f4e8:  mov    %eax,%edx
    0.00 :   5f4ea:  add    $0x8,%eax
    0.00 :   5f4ed:  add    0x10(%r12),%rdx
    0.00 :   5f4f2:  mov    %eax,(%r12)
    0.00 :   5f4f6:  jmp    5e293 <__vfprintf_internal+0x983>
    0.00 :   5f4fb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f500:  mov    0x8(%r12),%rdx
    0.00 :   5f505:  lea    0x8(%rdx),%rax
    0.00 :   5f509:  mov    %rax,0x8(%r12)
    0.00 :   5f50e:  jmp    5e6ab <__vfprintf_internal+0xd9b>
    0.00 :   5f513:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f518:  mov    0x8(%r12),%rdx
    0.00 :   5f51d:  lea    0x8(%rdx),%rax
    0.00 :   5f521:  mov    %rax,0x8(%r12)
    0.00 :   5f526:  jmp    5dff2 <__vfprintf_internal+0x6e2>
    0.00 :   5f52b:  xor    %r13d,%r13d
    0.00 :   5f52e:  test   %r14d,%r14d
    0.00 :   5f531:  jg     5f8ed <__vfprintf_internal+0x1fdd>
    0.00 :   5f537:  xor    %r14d,%r14d
    0.00 :   5f53a:  jmp    5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f53f:  mov    %r15d,%edx
    0.00 :   5f542:  mov    $0x20,%esi
    0.00 :   5f547:  mov    %rbx,%rdi
    0.00 :   5f54a:  mov    %rdx,0x8(%rsp)
    0.00 :   5f54f:  call   78be0 <_IO_padn>
    0.00 :   5f554:  mov    0x8(%rsp),%rdx
    0.00 :   5f559:  cmp    %rax,%rdx
    0.00 :   5f55c:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f562:  movslq %ebp,%rax
    0.00 :   5f565:  add    %rdx,%rax
    0.00 :   5f568:  movslq %eax,%rdx
    0.00 :   5f56b:  movslq %eax,%rbp
    0.00 :   5f56e:  cmp    %rdx,%rax
    0.00 :   5f571:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f577:  test   %eax,%eax
    0.00 :   5f579:  jns    5de1e <__vfprintf_internal+0x50e>
    0.00 :   5f57f:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f584:  nopl   0x0(%rax)
    0.00 :   5f588:  test   %r13d,%r13d
    0.00 :   5f58b:  jle    5dfd7 <__vfprintf_internal+0x6c7>
    0.00 :   5f591:  movslq %r13d,%r14
    0.00 :   5f594:  mov    $0x20,%esi
    0.00 :   5f599:  mov    %rbx,%rdi
    0.00 :   5f59c:  mov    %r14,%rdx
    0.00 :   5f59f:  call   78be0 <_IO_padn>
    0.00 :   5f5a4:  cmp    %rax,%r14
    0.00 :   5f5a7:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f5ad:  xor    %eax,%eax
    0.00 :   5f5af:  add    %r13d,%ebp
    0.00 :   5f5b2:  js     5fdff <__vfprintf_internal+0x24ef>
    0.00 :   5f5b8:  cmp    %r13d,%ebp
    0.00 :   5f5bb:  jb     5fdff <__vfprintf_internal+0x24ef>
    0.00 :   5f5c1:  test   %eax,%eax
    0.00 :   5f5c3:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f5c9:  test   %ebp,%ebp
    0.00 :   5f5cb:  jns    5dfd7 <__vfprintf_internal+0x6c7>
    0.00 :   5f5d1:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f5d6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f5e0:  lea    0x80(%rsp),%rdi
    0.00 :   5f5e8:  call   5aa60 <read_int>
    0.00 :   5f5ed:  mov    %eax,%r11d
    0.00 :   5f5f0:  cmp    $0xffffffff,%eax
    0.00 :   5f5f3:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f5f9:  mov    0x80(%rsp),%rax
    0.00 :   5f601:  movzbl (%rax),%r9d
    0.00 :   5f605:  jmp    5ec6a <__vfprintf_internal+0x135a>
    0.00 :   5f60a:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   5f60f:  jmp    5dc82 <__vfprintf_internal+0x372>
    0.00 :   5f614:  nopl   0x0(%rax)
    0.00 :   5f618:  call   56b40 <__printf_fp>
    0.00 :   5f61d:  jmp    5f112 <__vfprintf_internal+0x1802>
    0.00 :   5f622:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f628:  test   %r14d,%r14d
    0.00 :   5f62b:  je     5f98e <__vfprintf_internal+0x207e>
    0.00 :   5f631:  mov    %bpl,(%rax)
    0.00 :   5f634:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f639:  mov    $0x5,%eax
    0.00 :   5f63e:  lea    0x137b6f(%rip),%r13        # 1971b4 <not_available+0x2f7>
    0.00 :   5f645:  cmp    %eax,%r11d
    0.00 :   5f648:  cmovl  %eax,%r11d
    0.00 :   5f64c:  cmp    $0x53,%r9b
    0.00 :   5f650:  jne    5e0ea <__vfprintf_internal+0x7da>
    0.00 :   5f656:  mov    0x20(%rsp),%r8d
    0.00 :   5f65b:  mov    0x18(%rsp),%ecx
    0.00 :   5f65f:  mov    %ebp,%r9d
    0.00 :   5f662:  mov    %r11d,%edx
    0.00 :   5f665:  mov    %r13,%rsi
    0.00 :   5f668:  mov    %rbx,%rdi
    0.00 :   5f66b:  call   5b010 <outstring_converted_wide_string>
    0.00 :   5f670:  mov    %eax,%ebp
    0.00 :   5f672:  test   %eax,%eax
    0.00 :   5f674:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f67a:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f67f:  nop
    0.00 :   5f680:  neg    %rax
    0.00 :   5f683:  movl   $0xa,0x28(%rsp)
    0.00 :   5f68b:  movl   $0x1,0x8(%rsp)
    0.00 :   5f693:  mov    %rax,%r14
    0.00 :   5f696:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f69b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f6a0:  mov    0xd8(%rbx),%r15
    0.00 :   5f6a7:  lea    0x170352(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5f6ae:  mov    0x10(%rsp),%rdi
    0.00 :   5f6b3:  mov    %r15,%rax
    0.00 :   5f6b6:  sub    %rsi,%rax
    0.00 :   5f6b9:  cmp    %rdi,%rax
    0.00 :   5f6bc:  jae    5fd25 <__vfprintf_internal+0x2415>
    0.00 :   5f6c2:  mov    %r14,%rdx
    0.00 :   5f6c5:  mov    %r13,%rsi
    0.00 :   5f6c8:  mov    %rbx,%rdi
    0.00 :   5f6cb:  call   *0x38(%r15)
    0.00 :   5f6cf:  cmp    %rax,%r14
    0.00 :   5f6d2:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f6d8:  movslq %ebp,%rax
    0.00 :   5f6db:  xor    %edx,%edx
    0.00 :   5f6dd:  add    %r14,%rax
    0.00 :   5f6e0:  js     5fde1 <__vfprintf_internal+0x24d1>
    0.00 :   5f6e6:  cmp    %r14,%rax
    0.00 :   5f6e9:  jb     5fde1 <__vfprintf_internal+0x24d1>
    0.00 :   5f6ef:  movslq %eax,%rcx
    0.00 :   5f6f2:  mov    %eax,%ebp
    0.00 :   5f6f4:  cmp    %rcx,%rax
    0.00 :   5f6f7:  mov    $0x1,%ecx
    0.00 :   5f6fc:  cmovne %ecx,%edx
    0.00 :   5f6ff:  test   %edx,%edx
    0.00 :   5f701:  je     5e1c7 <__vfprintf_internal+0x8b7>
    0.00 :   5f707:  jmp    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f70c:  nopl   0x0(%rax)
    0.00 :   5f710:  movl   $0x0,0x7c(%rsp)
    0.00 :   5f718:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f721:  movq   $0x0,0x68(%rsp)
    0.00 :   5f72a:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f72f:  mov    0x38(%rsp),%eax
    0.00 :   5f733:  test   %eax,%eax
    0.00 :   5f735:  je     5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f73b:  mov    0x28(%rbx),%rax
    0.00 :   5f73f:  cmp    0x30(%rbx),%rax
    0.00 :   5f743:  jae    5fcf3 <__vfprintf_internal+0x23e3>
    0.00 :   5f749:  lea    0x1(%rax),%rdx
    0.00 :   5f74d:  mov    %rdx,0x28(%rbx)
    0.00 :   5f751:  movb   $0x20,(%rax)
    0.00 :   5f754:  jmp    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5f759:  nopl   0x0(%rax)
    0.00 :   5f760:  movl   $0x0,0x7c(%rsp)
    0.00 :   5f768:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f771:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f776:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f780:  lea    0x2(%rcx),%rax
    0.00 :   5f784:  mov    %rax,0x80(%rsp)
    0.00 :   5f78c:  mov    %rax,0xa0(%rsp)
    0.00 :   5f794:  movzbl 0x2(%rcx),%eax
    0.00 :   5f798:  sub    $0x30,%eax
    0.00 :   5f79b:  cmp    $0x9,%eax
    0.00 :   5f79e:  jbe    5fb5f <__vfprintf_internal+0x224f>
    0.00 :   5f7a4:  mov    (%r12),%eax
    0.00 :   5f7a8:  cmp    $0x2f,%eax
    0.00 :   5f7ab:  ja     5fa70 <__vfprintf_internal+0x2160>
    0.00 :   5f7b1:  mov    %eax,%edx
    0.00 :   5f7b3:  add    $0x8,%eax
    0.00 :   5f7b6:  add    0x10(%r12),%rdx
    0.00 :   5f7bb:  mov    %eax,(%r12)
    0.00 :   5f7bf:  mov    (%rdx),%eax
    0.00 :   5f7c1:  mov    $0xffffffff,%edx
    0.00 :   5f7c6:  movzbl 0x2(%rcx),%r9d
    0.00 :   5f7cb:  test   %eax,%eax
    0.00 :   5f7cd:  cmovns %eax,%edx
    0.00 :   5f7d0:  mov    %edx,%r11d
    0.00 :   5f7d3:  jmp    5ec6a <__vfprintf_internal+0x135a>
    0.00 :   5f7d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f7e0:  lea    0xa0(%rsp),%rdi
    0.00 :   5f7e8:  mov    %rcx,0x18(%rsp)
    0.00 :   5f7ed:  call   5aa60 <read_int>
    0.00 :   5f7f2:  mov    0x18(%rsp),%rcx
    0.00 :   5f7f7:  cmp    $0xffffffff,%eax
    0.00 :   5f7fa:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f800:  test   %eax,%eax
    0.00 :   5f802:  je     5e690 <__vfprintf_internal+0xd80>
    0.00 :   5f808:  mov    0xa0(%rsp),%rax
    0.00 :   5f810:  cmpb   $0x24,(%rax)
    0.00 :   5f813:  jne    5e690 <__vfprintf_internal+0xd80>
    0.00 :   5f819:  jmp    5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5f81e:  xchg   %ax,%ax
    0.00 :   5f820:  mov    %r13,%rdi
    0.00 :   5f823:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   5f828:  mov    %rax,%r14
    0.00 :   5f82b:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5f830:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f839:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f83e:  mov    0x17372b(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
    0.00 :   5f845:  mov    %fs:(%rax),%rax
    0.00 :   5f849:  mov    0x8(%rax),%rax
    0.00 :   5f84d:  mov    0x48(%rax),%rsi
    0.00 :   5f851:  mov    0x40(%rax),%rcx
    0.00 :   5f855:  movzbl (%rsi),%eax
    0.00 :   5f858:  mov    %rcx,0x68(%rsp)
    0.00 :   5f85d:  test   %al,%al
    0.00 :   5f85f:  je     5fa83 <__vfprintf_internal+0x2173>
    0.00 :   5f865:  cmp    $0x7f,%al
    0.00 :   5f867:  je     5fa83 <__vfprintf_internal+0x2173>
    0.00 :   5f86d:  xor    %eax,%eax
    0.00 :   5f86f:  cmpb   $0x0,(%rcx)
    0.00 :   5f872:  cmovne %rsi,%rax
    0.00 :   5f876:  mov    %rax,0x60(%rsp)
    0.00 :   5f87b:  jmp    5e758 <__vfprintf_internal+0xe48>
    0.00 :   5f880:  mov    $0x6,%eax
    0.00 :   5f885:  mov    $0x6,%r14d
    0.00 :   5f88b:  lea    0x137928(%rip),%r13        # 1971ba <null>
    0.00 :   5f892:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5f897:  movslq 0x54(%rsp),%r14
    0.00 :   5f89c:  movl   $0x0,0x8(%rsp)
    0.00 :   5f8a4:  movl   $0xa,0x28(%rsp)
    0.00 :   5f8ac:  test   %r14d,%r14d
    0.00 :   5f8af:  jns    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f8b5:  movl   $0x1,0x8(%rsp)
    0.00 :   5f8bd:  neg    %r14
    0.00 :   5f8c0:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f8c5:  mov    %r10,0x8(%rsp)
    0.00 :   5f8ca:  call   818e0 <_IO_vtable_check>
    0.00 :   5f8cf:  mov    0x8(%rsp),%r10
    0.00 :   5f8d4:  jmp    5edc8 <__vfprintf_internal+0x14b8>
    0.00 :   5f8d9:  mov    %r10,0x8(%rsp)
    0.00 :   5f8de:  call   818e0 <_IO_vtable_check>
    0.00 :   5f8e3:  mov    0x8(%rsp),%r10
    0.00 :   5f8e8:  jmp    5e4b5 <__vfprintf_internal+0xba5>
    0.00 :   5f8ed:  movslq %r14d,%rdx
    0.00 :   5f8f0:  mov    $0x20,%esi
    0.00 :   5f8f5:  mov    %rbx,%rdi
    0.00 :   5f8f8:  mov    %r9b,0x48(%rsp)
    0.00 :   5f8fd:  mov    %rdx,0x18(%rsp)
    0.00 :   5f902:  mov    %r11d,0x34(%rsp)
    0.00 :   5f907:  mov    %r10,0x20(%rsp)
    0.00 :   5f90c:  call   78be0 <_IO_padn>
    0.00 :   5f911:  mov    0x18(%rsp),%rdx
    0.00 :   5f916:  cmp    %rax,%rdx
    0.00 :   5f919:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f91f:  xor    %eax,%eax
    0.00 :   5f921:  add    %ebp,%r14d
    0.00 :   5f924:  mov    0x20(%rsp),%r10
    0.00 :   5f929:  mov    0x34(%rsp),%r11d
    0.00 :   5f92e:  movzbl 0x48(%rsp),%r9d
    0.00 :   5f934:  js     5fdd7 <__vfprintf_internal+0x24c7>
    0.00 :   5f93a:  cmp    %edx,%r14d
    0.00 :   5f93d:  jb     5fdd7 <__vfprintf_internal+0x24c7>
    0.00 :   5f943:  mov    %r14d,%ebp
    0.00 :   5f946:  mov    %eax,%r14d
    0.00 :   5f949:  test   %eax,%eax
    0.00 :   5f94b:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f951:  test   %ebp,%ebp
    0.00 :   5f953:  jns    5efd7 <__vfprintf_internal+0x16c7>
    0.00 :   5f959:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f95e:  xchg   %ax,%ax
    0.00 :   5f960:  mov    0x8(%r12),%rdx
    0.00 :   5f965:  lea    0x8(%rdx),%rax
    0.00 :   5f969:  mov    %rax,0x8(%r12)
    0.00 :   5f96e:  jmp    5f090 <__vfprintf_internal+0x1780>
    0.00 :   5f973:  mov    0x8(%r12),%rax
    0.00 :   5f978:  add    $0xf,%rax
    0.00 :   5f97c:  and    $0xfffffffffffffff0,%rax
    0.00 :   5f980:  lea    0x10(%rax),%rdx
    0.00 :   5f984:  mov    %rdx,0x8(%r12)
    0.00 :   5f989:  jmp    5dd9d <__vfprintf_internal+0x48d>
    0.00 :   5f98e:  test   %r13d,%r13d
    0.00 :   5f991:  jne    5fb57 <__vfprintf_internal+0x2247>
    0.00 :   5f997:  mov    %ebp,(%rax)
    0.00 :   5f999:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f99e:  mov    0x8(%r12),%rdx
    0.00 :   5f9a3:  lea    0x8(%rdx),%rax
    0.00 :   5f9a7:  mov    %rax,0x8(%r12)
    0.00 :   5f9ac:  jmp    5f437 <__vfprintf_internal+0x1b27>
    0.00 :   5f9b1:  mov    0x8(%r12),%rdx
    0.00 :   5f9b6:  lea    0x8(%rdx),%rax
    0.00 :   5f9ba:  mov    %rax,0x8(%r12)
    0.00 :   5f9bf:  jmp    5f31f <__vfprintf_internal+0x1a0f>
    0.00 :   5f9c4:  test   %r13d,%r13d
    0.00 :   5f9c7:  jne    5fb24 <__vfprintf_internal+0x2214>
    0.00 :   5f9cd:  cmp    $0x2f,%eax
    0.00 :   5f9d0:  ja     5fc42 <__vfprintf_internal+0x2332>
    0.00 :   5f9d6:  mov    %eax,%edx
    0.00 :   5f9d8:  add    $0x8,%eax
    0.00 :   5f9db:  add    0x10(%r12),%rdx
    0.00 :   5f9e0:  mov    %eax,(%r12)
    0.00 :   5f9e4:  movslq (%rdx),%rax
    0.00 :   5f9e7:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5f9ec:  mov    %r15d,%edx
    0.00 :   5f9ef:  mov    $0x20,%esi
    0.00 :   5f9f4:  mov    %rbx,%rdi
    0.00 :   5f9f7:  mov    %rdx,0x8(%rsp)
    0.00 :   5f9fc:  call   78be0 <_IO_padn>
    0.00 :   5fa01:  mov    0x8(%rsp),%rdx
    0.00 :   5fa06:  cmp    %rax,%rdx
    0.00 :   5fa09:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fa0f:  movslq %ebp,%rax
    0.00 :   5fa12:  add    %rdx,%rax
    0.00 :   5fa15:  movslq %eax,%rdx
    0.00 :   5fa18:  movslq %eax,%rbp
    0.00 :   5fa1b:  cmp    %rdx,%rax
    0.00 :   5fa1e:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5fa24:  test   %eax,%eax
    0.00 :   5fa26:  jns    5e117 <__vfprintf_internal+0x807>
    0.00 :   5fa2c:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5fa31:  nopl   0x0(%rax)
    0.00 :   5fa38:  xor    %r10d,%r10d
    0.00 :   5fa3b:  xor    %edx,%edx
    0.00 :   5fa3d:  jmp    5dcd1 <__vfprintf_internal+0x3c1>
    0.00 :   5fa42:  movslq %r15d,%r15
    0.00 :   5fa45:  mov    $0x20,%esi
    0.00 :   5fa4a:  mov    %rbx,%rdi
    0.00 :   5fa4d:  mov    %r15,%rdx
    0.00 :   5fa50:  call   78be0 <_IO_padn>
    0.00 :   5fa55:  cmp    %rax,%r15
    0.00 :   5fa58:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fa5e:  add    %ebp,%r15d
    0.00 :   5fa61:  mov    %r15d,%ebp
    0.00 :   5fa64:  jno    5f12a <__vfprintf_internal+0x181a>
    0.00 :   5fa6a:  jmp    5e058 <__vfprintf_internal+0x748>
    0.00 :   5fa6f:  nop
    0.00 :   5fa70:  mov    0x8(%r12),%rdx
    0.00 :   5fa75:  lea    0x8(%rdx),%rax
    0.00 :   5fa79:  mov    %rax,0x8(%r12)
    0.00 :   5fa7e:  jmp    5f7bf <__vfprintf_internal+0x1eaf>
    0.00 :   5fa83:  movq   $0x0,0x60(%rsp)
    0.00 :   5fa8c:  jmp    5e758 <__vfprintf_internal+0xe48>
    0.00 :   5fa91:  mov    %r9b,0x20(%rsp)
    0.00 :   5fa96:  mov    $0x2d,%esi
    0.00 :   5fa9b:  mov    %r11d,0x18(%rsp)
    0.00 :   5faa0:  mov    %r10,0x8(%rsp)
    0.00 :   5faa5:  mov    %rbx,%rdi
    0.00 :   5faa8:  call   84a60 <__overflow>
    0.00 :   5faad:  mov    0x8(%rsp),%r10
    0.00 :   5fab2:  mov    0x18(%rsp),%r11d
    0.00 :   5fab7:  cmp    $0xffffffff,%eax
    0.00 :   5faba:  movzbl 0x20(%rsp),%r9d
    0.00 :   5fac0:  jne    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5fac6:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5facb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5fad0:  mov    %r9b,0x30(%rsp)
    0.00 :   5fad5:  mov    $0x2d,%esi
    0.00 :   5fada:  mov    %r11d,0x20(%rsp)
    0.00 :   5fadf:  mov    %r10,0x8(%rsp)
    0.00 :   5fae4:  mov    %rbx,%rdi
    0.00 :   5fae7:  call   84a60 <__overflow>
    0.00 :   5faec:  mov    0x8(%rsp),%r10
    0.00 :   5faf1:  mov    0x20(%rsp),%r11d
    0.00 :   5faf6:  cmp    $0xffffffff,%eax
    0.00 :   5faf9:  movzbl 0x30(%rsp),%r9d
    0.00 :   5faff:  jne    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5fb05:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fb0a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fb10:  mov    %rax,0x8(%rsp)
    0.00 :   5fb15:  call   818e0 <_IO_vtable_check>
    0.00 :   5fb1a:  mov    0x8(%rsp),%rax
    0.00 :   5fb1f:  jmp    5de40 <__vfprintf_internal+0x530>
    0.00 :   5fb24:  cmp    $0x2f,%eax
    0.00 :   5fb27:  ja     5fc2f <__vfprintf_internal+0x231f>
    0.00 :   5fb2d:  mov    %eax,%edx
    0.00 :   5fb2f:  add    $0x8,%eax
    0.00 :   5fb32:  add    0x10(%r12),%rdx
    0.00 :   5fb37:  mov    %eax,(%r12)
    0.00 :   5fb3b:  movswq (%rdx),%rax
    0.00 :   5fb3f:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5fb44:  mov    0x8(%r12),%rdx
    0.00 :   5fb49:  lea    0x8(%rdx),%rax
    0.00 :   5fb4d:  mov    %rax,0x8(%r12)
    0.00 :   5fb52:  jmp    5e58c <__vfprintf_internal+0xc7c>
    0.00 :   5fb57:  mov    %bp,(%rax)
    0.00 :   5fb5a:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5fb5f:  lea    0xa0(%rsp),%rdi
    0.00 :   5fb67:  mov    %rcx,0x28(%rsp)
    0.00 :   5fb6c:  call   5aa60 <read_int>
    0.00 :   5fb71:  mov    0x28(%rsp),%rcx
    0.00 :   5fb76:  cmp    $0xffffffff,%eax
    0.00 :   5fb79:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5fb7f:  test   %eax,%eax
    0.00 :   5fb81:  je     5f7a4 <__vfprintf_internal+0x1e94>
    0.00 :   5fb87:  mov    0xa0(%rsp),%rax
    0.00 :   5fb8f:  cmpb   $0x24,(%rax)
    0.00 :   5fb92:  jne    5f7a4 <__vfprintf_internal+0x1e94>
    0.00 :   5fb98:  jmp    5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5fb9d:  nopl   (%rax)
    0.00 :   5fba0:  mov    %rax,0x8(%rsp)
    0.00 :   5fba5:  call   818e0 <_IO_vtable_check>
    0.00 :   5fbaa:  mov    0x8(%rsp),%rax
    0.00 :   5fbaf:  jmp    5e139 <__vfprintf_internal+0x829>
    0.00 :   5fbb4:  mov    0x173255(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5fbbb:  or     $0x20,%ebp
    0.00 :   5fbbe:  mov    %ebp,(%rbx)
    0.00 :   5fbc0:  movl   $0x9,%fs:(%rax)
    0.00 :   5fbc7:  jmp    5dc29 <__vfprintf_internal+0x319>
    0.00 :   5fbcc:  mov    $0x25,%esi
    0.00 :   5fbd1:  mov    %rbx,%rdi
    0.00 :   5fbd4:  call   84a60 <__overflow>
    0.00 :   5fbd9:  cmp    $0xffffffff,%eax
    0.00 :   5fbdc:  jne    5e5d5 <__vfprintf_internal+0xcc5>
    0.00 :   5fbe2:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fbe7:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fbf0:  mov    %r9b,0x20(%rsp)
    0.00 :   5fbf5:  mov    $0x2b,%esi
    0.00 :   5fbfa:  mov    %r11d,0x18(%rsp)
    0.00 :   5fbff:  mov    %r10,0x8(%rsp)
    0.00 :   5fc04:  jmp    5faa5 <__vfprintf_internal+0x2195>
    0.00 :   5fc09:  mov    %r9b,0x30(%rsp)
    0.00 :   5fc0e:  mov    $0x2b,%esi
    0.00 :   5fc13:  mov    %r11d,0x20(%rsp)
    0.00 :   5fc18:  mov    %r10,0x8(%rsp)
    0.00 :   5fc1d:  jmp    5fae4 <__vfprintf_internal+0x21d4>
    0.00 :   5fc22:  movzbl 0x8(%rsp),%eax
    0.00 :   5fc27:  xor    $0x1,%eax
    0.00 :   5fc2a:  jmp    5e0ce <__vfprintf_internal+0x7be>
    0.00 :   5fc2f:  mov    0x8(%r12),%rdx
    0.00 :   5fc34:  lea    0x8(%rdx),%rax
    0.00 :   5fc38:  mov    %rax,0x8(%r12)
    0.00 :   5fc3d:  jmp    5fb3b <__vfprintf_internal+0x222b>
    0.00 :   5fc42:  mov    0x8(%r12),%rdx
    0.00 :   5fc47:  lea    0x8(%rdx),%rax
    0.00 :   5fc4b:  mov    %rax,0x8(%r12)
    0.00 :   5fc50:  jmp    5f9e4 <__vfprintf_internal+0x20d4>
    0.00 :   5fc55:  movzbl %dl,%esi
    0.00 :   5fc58:  mov    %rbx,%rdi
    0.00 :   5fc5b:  call   84a60 <__overflow>
    0.00 :   5fc60:  cmp    $0xffffffff,%eax
    0.00 :   5fc63:  jne    5e00c <__vfprintf_internal+0x6fc>
    0.00 :   5fc69:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fc6e:  xchg   %ax,%ax
    0.00 :   5fc70:  movzbl %r9b,%esi
    0.00 :   5fc74:  mov    %rbx,%rdi
    0.00 :   5fc77:  mov    %r11d,0x18(%rsp)
    0.00 :   5fc7c:  mov    %r10,0x8(%rsp)
    0.00 :   5fc81:  call   84a60 <__overflow>
    0.00 :   5fc86:  mov    0x8(%rsp),%r10
    0.00 :   5fc8b:  mov    0x18(%rsp),%r11d
    0.00 :   5fc90:  cmp    $0xffffffff,%eax
    0.00 :   5fc93:  jne    5f1a9 <__vfprintf_internal+0x1899>
    0.00 :   5fc99:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fc9e:  xchg   %ax,%ax
    0.00 :   5fca0:  mov    $0x30,%esi
    0.00 :   5fca5:  mov    %rbx,%rdi
    0.00 :   5fca8:  mov    %r9b,0x20(%rsp)
    0.00 :   5fcad:  mov    %r11d,0x18(%rsp)
    0.00 :   5fcb2:  mov    %r10,0x8(%rsp)
    0.00 :   5fcb7:  call   84a60 <__overflow>
    0.00 :   5fcbc:  mov    0x8(%rsp),%r10
    0.00 :   5fcc1:  mov    0x18(%rsp),%r11d
    0.00 :   5fcc6:  cmp    $0xffffffff,%eax
    0.00 :   5fcc9:  movzbl 0x20(%rsp),%r9d
    0.00 :   5fccf:  jne    5f184 <__vfprintf_internal+0x1874>
    0.00 :   5fcd5:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fcda:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fce0:  mov    0x173129(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5fce7:  movl   $0x16,%fs:(%rax)
    0.00 :   5fcee:  jmp    5dc29 <__vfprintf_internal+0x319>
    0.00 :   5fcf3:  mov    %r9b,0x20(%rsp)
    0.00 :   5fcf8:  mov    $0x20,%esi
    0.00 :   5fcfd:  mov    %r11d,0x18(%rsp)
    0.00 :   5fd02:  mov    %r10,0x8(%rsp)
    0.00 :   5fd07:  jmp    5faa5 <__vfprintf_internal+0x2195>
    0.00 :   5fd0c:  mov    %r9b,0x30(%rsp)
    0.00 :   5fd11:  mov    $0x20,%esi
    0.00 :   5fd16:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd1b:  mov    %r10,0x8(%rsp)
    0.00 :   5fd20:  jmp    5fae4 <__vfprintf_internal+0x21d4>
    0.00 :   5fd25:  call   818e0 <_IO_vtable_check>
    0.00 :   5fd2a:  jmp    5f6c2 <__vfprintf_internal+0x1db2>
    0.00 :   5fd2f:  movzbl %r9b,%esi
    0.00 :   5fd33:  mov    %rbx,%rdi
    0.00 :   5fd36:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd3b:  mov    %r10,0x8(%rsp)
    0.00 :   5fd40:  call   84a60 <__overflow>
    0.00 :   5fd45:  mov    0x8(%rsp),%r10
    0.00 :   5fd4a:  mov    0x20(%rsp),%r11d
    0.00 :   5fd4f:  cmp    $0xffffffff,%eax
    0.00 :   5fd52:  jne    5f2a1 <__vfprintf_internal+0x1991>
    0.00 :   5fd58:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fd5d:  nopl   (%rax)
    0.00 :   5fd60:  mov    $0x30,%esi
    0.00 :   5fd65:  mov    %rbx,%rdi
    0.00 :   5fd68:  mov    %r9b,0x28(%rsp)
    0.00 :   5fd6d:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd72:  mov    %r10,0x8(%rsp)
    0.00 :   5fd77:  call   84a60 <__overflow>
    0.00 :   5fd7c:  mov    0x8(%rsp),%r10
    0.00 :   5fd81:  mov    0x20(%rsp),%r11d
    0.00 :   5fd86:  cmp    $0xffffffff,%eax
    0.00 :   5fd89:  movzbl 0x28(%rsp),%r9d
    0.00 :   5fd8f:  jne    5f27c <__vfprintf_internal+0x196c>
    0.00 :   5fd95:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fd9a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fda0:  mov    %r11d,0x20(%rsp)
    0.00 :   5fda5:  jmp    5eece <__vfprintf_internal+0x15be>
    0.00 :   5fdaa:  mov    $0x1,%edx
    0.00 :   5fdaf:  jmp    5df1d <__vfprintf_internal+0x60d>
    0.00 :   5fdb4:  call   11ba20 <__stack_chk_fail>
    0.00 :   5fdb9:  mov    $0x1,%edx
    0.00 :   5fdbe:  jmp    5edf5 <__vfprintf_internal+0x14e5>
    0.00 :   5fdc3:  mov    $0x1,%eax
    0.00 :   5fdc8:  jmp    5e4e2 <__vfprintf_internal+0xbd2>
    0.00 :   5fdcd:  mov    $0x1,%eax
    0.00 :   5fdd2:  jmp    5ed96 <__vfprintf_internal+0x1486>
    0.00 :   5fdd7:  mov    $0x1,%eax
    0.00 :   5fddc:  jmp    5f943 <__vfprintf_internal+0x2033>
    0.00 :   5fde1:  mov    $0x1,%edx
    0.00 :   5fde6:  jmp    5f6ef <__vfprintf_internal+0x1ddf>
    0.00 :   5fdeb:  mov    $0x1,%edx
    0.00 :   5fdf0:  jmp    5e165 <__vfprintf_internal+0x855>
    0.00 :   5fdf5:  mov    $0x1,%edx
    0.00 :   5fdfa:  jmp    5de6c <__vfprintf_internal+0x55c>
    0.00 :   5fdff:  mov    $0x1,%eax
    0.00 :   5fe04:  jmp    5f5c1 <__vfprintf_internal+0x1cb1>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   29.44 dbt2-driver[40e577]
   15.11 dbt2-driver[40e802]
   14.61 dbt2-driver[40e7f7]
    9.63 dbt2-driver[40e7fc]
    8.96 dbt2-driver[40e4c9]
    5.17 dbt2-driver[40e3bc]
    4.67 dbt2-driver[40e16b]
    4.27 dbt2-driver[40e4dd]
    3.87 dbt2-driver[40e3c2]
    2.56 dbt2-driver[40e105]
    1.70 dbt2-driver[40e4ed]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (23 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040e00b <terminal_worker>:
         : 6      terminal_worker():
    0.00 :   40e00b: push   %rbp
    0.00 :   40e00c: mov    %rsp,%rbp
    0.00 :   40e00f: push   %r15
    0.00 :   40e011: push   %r14
    0.00 :   40e013: push   %r13
    0.00 :   40e015: push   %r12
    0.00 :   40e017: push   %rbx
    0.00 :   40e018: sub    $0x2f98,%rsp
    0.00 :   40e01f: mov    %rdi,-0x2fb8(%rbp)
    0.00 :   40e026: movq   $0x0,-0x2f98(%rbp)
    0.00 :   40e031: mov    -0x2fb8(%rbp),%rax
    0.00 :   40e038: mov    %rax,-0x48(%rbp)
    0.00 :   40e03c: call   4072b0 <pthread_self@plt>
    0.00 :   40e041: mov    %rax,-0x50(%rbp)
    0.00 :   40e045: call   4070e0 <getpid@plt>
    0.00 :   40e04a: mov    %eax,-0x54(%rbp)
    0.00 :   40e04d: lea    -0x2f98(%rbp),%rax
    0.00 :   40e054: mov    $0x8,%esi
    0.00 :   40e059: mov    %rax,%rdi
    0.00 :   40e05c: call   40919c <entropy_getbytes>
    0.00 :   40e061: mov    -0x2f98(%rbp),%rcx
    0.00 :   40e068: mov    -0x50(%rbp),%rdx
    0.00 :   40e06c: mov    -0x54(%rbp),%eax
    0.00 :   40e06f: mov    %eax,%esi
    0.00 :   40e071: mov    $0x411deb,%edi
    0.00 :   40e076: mov    $0x0,%eax
    0.00 :   40e07b: call   407130 <printf@plt>
    0.00 :   40e080: mov    0x9279(%rip),%rax        # 417300 <stdout@GLIBC_2.2.5>
    0.00 :   40e087: mov    %rax,%rdi
    0.00 :   40e08a: call   407240 <fflush@plt>
    0.00 :   40e08f: mov    -0x2f98(%rbp),%rax
    0.00 :   40e096: mov    %rax,%r12
    0.00 :   40e099: mov    $0x0,%r13d
    0.00 :   40e09f: mov    %r12,%rcx
    0.00 :   40e0a2: mov    %r13,%rbx
    0.00 :   40e0a5: mov    %r12,%rax
    0.00 :   40e0a8: mov    %r13,%rdx
    0.00 :   40e0ab: lea    -0x2fb0(%rbp),%rax
    0.00 :   40e0b2: mov    %rcx,%rsi
    0.00 :   40e0b5: mov    %rax,%rdi
    0.00 :   40e0b8: call   40c80e <pcg_mcg_128_srandom_r>
    0.00 :   40e0bd: mov    0x9229(%rip),%eax        # 4172ec <client_port>
    0.00 :   40e0c3: mov    %eax,%esi
    0.00 :   40e0c5: mov    $0x417440,%edi
    0.00 :   40e0ca: call   4078de <connect_to_client>
    0.00 :   40e0cf: mov    %eax,-0x58(%rbp)
    0.00 :   40e0d2: cmpl   $0x0,-0x58(%rbp)
    0.00 :   40e0d6: jg     40e105 <terminal_worker+0xfa>
    0.00 :   40e0d8: mov    $0x411bf0,%edx
    0.00 :   40e0dd: mov    $0x12e,%esi
    0.00 :   40e0e2: mov    $0x411c1e,%edi
    0.00 :   40e0e7: mov    $0x0,%eax
    0.00 :   40e0ec: call   4082df <log_error_message>
    0.00 :   40e0f1: mov    $0x411bf0,%edi
    0.00 :   40e0f6: call   4070a0 <puts@plt>
    0.00 :   40e0fb: mov    $0x0,%edi
    0.00 :   40e100: call   407220 <pthread_exit@plt>
    2.56 :   40e105: mov    0x9369(%rip),%eax        # 417474 <mode_altered> // dbt2-driver[40e105]
    0.00 :   40e10b: cmp    $0x1,%eax
    0.00 :   40e10e: jne    40e16b <terminal_worker+0x160>
    0.00 :   40e110: mov    0x9356(%rip),%edx        # 41746c <w_id_max>
    0.00 :   40e116: mov    0x934c(%rip),%eax        # 417468 <w_id_min>
    0.00 :   40e11c: sub    %eax,%edx
    0.00 :   40e11e: lea    0x1(%rdx),%eax
    0.00 :   40e121: movslq %eax,%rdx
    0.00 :   40e124: lea    -0x2fb0(%rbp),%rax
    0.00 :   40e12b: mov    %rdx,%rsi
    0.00 :   40e12e: mov    %rax,%rdi
    0.00 :   40e131: call   407ff5 <get_random>
    0.00 :   40e136: mov    %eax,%edx
    0.00 :   40e138: mov    0x932a(%rip),%eax        # 417468 <w_id_min>
    0.00 :   40e13e: add    %eax,%edx
    0.00 :   40e140: mov    -0x48(%rbp),%rax
    0.00 :   40e144: mov    %edx,(%rax)
    0.00 :   40e146: mov    0x91f8(%rip),%eax        # 417344 <table_cardinality+0x4>
    0.00 :   40e14c: movslq %eax,%rdx
    0.00 :   40e14f: lea    -0x2fb0(%rbp),%rax
    0.00 :   40e156: mov    %rdx,%rsi
    0.00 :   40e159: mov    %rax,%rdi
    0.00 :   40e15c: call   407ff5 <get_random>
    0.00 :   40e161: lea    0x1(%rax),%edx
    0.00 :   40e164: mov    -0x48(%rbp),%rax
    0.00 :   40e168: mov    %edx,0x4(%rax)
    4.67 :   40e16b: lea    -0x2fb0(%rbp),%rax // dbt2-driver[40e16b]
    0.00 :   40e172: mov    %rax,%rdi
    0.00 :   40e175: call   407f98 <get_percentage>
    0.00 :   40e17a: movq   %xmm0,%rax
    0.00 :   40e17f: mov    %rax,-0x60(%rbp)
    0.00 :   40e183: movsd  0x9645(%rip),%xmm0        # 4177d0 <transaction_mix+0x30>
    0.00 :   40e18b: comisd -0x60(%rbp),%xmm0
    0.00 :   40e190: jbe    40e1b3 <terminal_worker+0x1a8>
    0.00 :   40e192: movl   $0x1,-0x2f4c(%rbp)
    0.00 :   40e19c: mov    0x9652(%rip),%eax        # 4177f4 <key_time+0x4>
    0.00 :   40e1a2: mov    %eax,-0x34(%rbp)
    0.00 :   40e1a5: mov    0x9669(%rip),%eax        # 417814 <think_time+0x4>
    0.00 :   40e1ab: mov    %eax,-0x38(%rbp)
    0.00 :   40e1ae: jmp    40e2ad <terminal_worker+0x2a2>
    0.00 :   40e1b3: movsd  0x95f5(%rip),%xmm0        # 4177b0 <transaction_mix+0x10>
    0.00 :   40e1bb: pxor   %xmm1,%xmm1
    0.00 :   40e1bf: ucomisd %xmm1,%xmm0
    0.00 :   40e1c3: jp     40e1cf <terminal_worker+0x1c4>
    0.00 :   40e1c5: pxor   %xmm1,%xmm1
    0.00 :   40e1c9: ucomisd %xmm1,%xmm0
    0.00 :   40e1cd: je     40e1ff <terminal_worker+0x1f4>
    0.00 :   40e1cf: movsd  0x9601(%rip),%xmm0        # 4177d8 <transaction_mix+0x38>
    0.00 :   40e1d7: comisd -0x60(%rbp),%xmm0
    0.00 :   40e1dc: jbe    40e1ff <terminal_worker+0x1f4>
    0.00 :   40e1de: movl   $0x3,-0x2f4c(%rbp)
    0.00 :   40e1e8: mov    0x960e(%rip),%eax        # 4177fc <key_time+0xc>
    0.00 :   40e1ee: mov    %eax,-0x34(%rbp)
    0.00 :   40e1f1: mov    0x9625(%rip),%eax        # 41781c <think_time+0xc>
    0.00 :   40e1f7: mov    %eax,-0x38(%rbp)
    0.00 :   40e1fa: jmp    40e2ad <terminal_worker+0x2a2>
    0.00 :   40e1ff: movsd  0x95b1(%rip),%xmm0        # 4177b8 <transaction_mix+0x18>
    0.00 :   40e207: pxor   %xmm1,%xmm1
    0.00 :   40e20b: ucomisd %xmm1,%xmm0
    0.00 :   40e20f: jp     40e21b <terminal_worker+0x210>
    0.00 :   40e211: pxor   %xmm1,%xmm1
    0.00 :   40e215: ucomisd %xmm1,%xmm0
    0.00 :   40e219: je     40e248 <terminal_worker+0x23d>
    0.00 :   40e21b: movsd  0x95bd(%rip),%xmm0        # 4177e0 <transaction_mix+0x40>
    0.00 :   40e223: comisd -0x60(%rbp),%xmm0
    0.00 :   40e228: jbe    40e248 <terminal_worker+0x23d>
    0.00 :   40e22a: movl   $0x2,-0x2f4c(%rbp)
    0.00 :   40e234: mov    0x95be(%rip),%eax        # 4177f8 <key_time+0x8>
    0.00 :   40e23a: mov    %eax,-0x34(%rbp)
    0.00 :   40e23d: mov    0x95d5(%rip),%eax        # 417818 <think_time+0x8>
    0.00 :   40e243: mov    %eax,-0x38(%rbp)
    0.00 :   40e246: jmp    40e2ad <terminal_worker+0x2a2>
    0.00 :   40e248: movsd  0x9550(%rip),%xmm0        # 4177a0 <transaction_mix>
    0.00 :   40e250: pxor   %xmm1,%xmm1
    0.00 :   40e254: ucomisd %xmm1,%xmm0
    0.00 :   40e258: jp     40e264 <terminal_worker+0x259>
    0.00 :   40e25a: pxor   %xmm1,%xmm1
    0.00 :   40e25e: ucomisd %xmm1,%xmm0
    0.00 :   40e262: je     40e291 <terminal_worker+0x286>
    0.00 :   40e264: movsd  0x955c(%rip),%xmm0        # 4177c8 <transaction_mix+0x28>
    0.00 :   40e26c: comisd -0x60(%rbp),%xmm0
    0.00 :   40e271: jbe    40e291 <terminal_worker+0x286>
    0.00 :   40e273: movl   $0x0,-0x2f4c(%rbp)
    0.00 :   40e27d: mov    0x956d(%rip),%eax        # 4177f0 <key_time>
    0.00 :   40e283: mov    %eax,-0x34(%rbp)
    0.00 :   40e286: mov    0x9584(%rip),%eax        # 417810 <think_time>
    0.00 :   40e28c: mov    %eax,-0x38(%rbp)
    0.00 :   40e28f: jmp    40e2ad <terminal_worker+0x2a2>
    0.00 :   40e291: movl   $0x4,-0x2f4c(%rbp)
    0.00 :   40e29b: mov    0x955f(%rip),%eax        # 417800 <key_time+0x10>
    0.00 :   40e2a1: mov    %eax,-0x34(%rbp)
    0.00 :   40e2a4: mov    0x9576(%rip),%eax        # 417820 <think_time+0x10>
    0.00 :   40e2aa: mov    %eax,-0x38(%rbp)
    0.00 :   40e2ad: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e2b3: cmp    $0x4,%eax
    0.00 :   40e2b6: je     40e2e5 <terminal_worker+0x2da>
    0.00 :   40e2b8: mov    -0x48(%rbp),%rax
    0.00 :   40e2bc: mov    (%rax),%edx
    0.00 :   40e2be: mov    -0x2f4c(%rbp),%esi
    0.00 :   40e2c4: lea    -0x2f50(%rbp),%rax
    0.00 :   40e2cb: lea    0x8(%rax),%rdi
    0.00 :   40e2cf: lea    -0x2fb0(%rbp),%rax
    0.00 :   40e2d6: mov    %edx,%ecx
    0.00 :   40e2d8: mov    %rdi,%rdx
    0.00 :   40e2db: mov    %rax,%rdi
    0.00 :   40e2de: call   40fe24 <generate_input_data>
    0.00 :   40e2e3: jmp    40e31a <terminal_worker+0x30f>
    0.00 :   40e2e5: mov    -0x48(%rbp),%rax
    0.00 :   40e2e9: mov    0x4(%rax),%ecx
    0.00 :   40e2ec: mov    -0x48(%rbp),%rax
    0.00 :   40e2f0: mov    (%rax),%edx
    0.00 :   40e2f2: mov    -0x2f4c(%rbp),%esi
    0.00 :   40e2f8: lea    -0x2f50(%rbp),%rax
    0.00 :   40e2ff: lea    0x8(%rax),%rdi
    0.00 :   40e303: lea    -0x2fb0(%rbp),%rax
    0.00 :   40e30a: mov    %ecx,%r8d
    0.00 :   40e30d: mov    %edx,%ecx
    0.00 :   40e30f: mov    %rdi,%rdx
    0.00 :   40e312: mov    %rax,%rdi
    0.00 :   40e315: call   40fec8 <generate_input_data2>
    0.00 :   40e31a: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e320: movslq %eax,%rdx
    0.00 :   40e323: mov    %rdx,%rax
    0.00 :   40e326: shl    $0x2,%rax
    0.00 :   40e32a: add    %rdx,%rax
    0.00 :   40e32d: shl    $0x3,%rax
    0.00 :   40e331: add    $0xc8,%rax
    0.00 :   40e337: add    $0x417520,%rax
    0.00 :   40e33d: mov    %rax,%rdi
    0.00 :   40e340: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e345: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e34b: movslq %eax,%rdx
    0.00 :   40e34e: add    $0x5,%rdx
    0.00 :   40e352: mov    0x4174e0(,%rdx,4),%edx
    0.00 :   40e359: add    $0x1,%edx
    0.00 :   40e35c: cltq
    0.00 :   40e35e: add    $0x5,%rax
    0.00 :   40e362: mov    %edx,0x4174e0(,%rax,4)
    0.00 :   40e369: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e36f: movslq %eax,%rdx
    0.00 :   40e372: mov    %rdx,%rax
    0.00 :   40e375: shl    $0x2,%rax
    0.00 :   40e379: add    %rdx,%rax
    0.00 :   40e37c: shl    $0x3,%rax
    0.00 :   40e380: add    $0xc8,%rax
    0.00 :   40e386: add    $0x417520,%rax
    0.00 :   40e38c: mov    %rax,%rdi
    0.00 :   40e38f: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e394: mov    $0x0,%edi
    0.00 :   40e399: call   407200 <time@plt>
    0.00 :   40e39e: mov    %rax,%rdx
    0.00 :   40e3a1: mov    0x90bd(%rip),%eax        # 417464 <stop_time>
    0.00 :   40e3a7: cltq
    0.00 :   40e3a9: cmp    %rax,%rdx
    0.00 :   40e3ac: jge    40e896 <terminal_worker+0x88b>
    0.00 :   40e3b2: mov    -0x34(%rbp),%eax
    0.00 :   40e3b5: mov    %eax,%edi
    0.00 :   40e3b7: call   407390 <sleep@plt>
    5.17 :   40e3bc: mov    -0x2f4c(%rbp),%eax // dbt2-driver[40e3bc]
    3.87 :   40e3c2: movslq %eax,%rdx // dbt2-driver[40e3c2]
    0.00 :   40e3c5: mov    %rdx,%rax
    0.00 :   40e3c8: shl    $0x2,%rax
    0.00 :   40e3cc: add    %rdx,%rax
    0.00 :   40e3cf: shl    $0x3,%rax
    0.00 :   40e3d3: add    $0xc8,%rax
    0.00 :   40e3d9: add    $0x417520,%rax
    0.00 :   40e3df: mov    %rax,%rdi
    0.00 :   40e3e2: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e3e7: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e3ed: movslq %eax,%rdx
    0.00 :   40e3f0: add    $0x5,%rdx
    0.00 :   40e3f4: mov    0x4174e0(,%rdx,4),%edx
    0.00 :   40e3fb: sub    $0x1,%edx
    0.00 :   40e3fe: cltq
    0.00 :   40e400: add    $0x5,%rax
    0.00 :   40e404: mov    %edx,0x4174e0(,%rax,4)
    0.00 :   40e40b: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e411: movslq %eax,%rdx
    0.00 :   40e414: mov    %rdx,%rax
    0.00 :   40e417: shl    $0x2,%rax
    0.00 :   40e41b: add    %rdx,%rax
    0.00 :   40e41e: shl    $0x3,%rax
    0.00 :   40e422: add    $0xc8,%rax
    0.00 :   40e428: add    $0x417520,%rax
    0.00 :   40e42e: mov    %rax,%rdi
    0.00 :   40e431: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e436: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e43c: movslq %eax,%rdx
    0.00 :   40e43f: mov    %rdx,%rax
    0.00 :   40e442: shl    $0x2,%rax
    0.00 :   40e446: add    %rdx,%rax
    0.00 :   40e449: shl    $0x3,%rax
    0.00 :   40e44d: add    $0x417520,%rax
    0.00 :   40e453: mov    %rax,%rdi
    0.00 :   40e456: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e45b: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e461: movslq %eax,%rdx
    0.00 :   40e464: mov    0x4174e0(,%rdx,4),%edx
    0.00 :   40e46b: add    $0x1,%edx
    0.00 :   40e46e: cltq
    0.00 :   40e470: mov    %edx,0x4174e0(,%rax,4)
    0.00 :   40e477: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e47d: movslq %eax,%rdx
    0.00 :   40e480: mov    %rdx,%rax
    0.00 :   40e483: shl    $0x2,%rax
    0.00 :   40e487: add    %rdx,%rax
    0.00 :   40e48a: shl    $0x3,%rax
    0.00 :   40e48e: add    $0x417520,%rax
    0.00 :   40e494: mov    %rax,%rdi
    0.00 :   40e497: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e49c: lea    -0x2f80(%rbp),%rax
    0.00 :   40e4a3: mov    $0x0,%esi
    0.00 :   40e4a8: mov    %rax,%rdi
    0.00 :   40e4ab: call   407170 <gettimeofday@plt>
    0.00 :   40e4b0: cmp    $0xffffffff,%eax
    0.00 :   40e4b3: jne    40e4bf <terminal_worker+0x4b4>
    0.00 :   40e4b5: mov    $0x411e03,%edi
    0.00 :   40e4ba: call   4072d0 <perror@plt>
    0.00 :   40e4bf: lea    -0x2f50(%rbp),%rdx
    0.00 :   40e4c6: mov    -0x58(%rbp),%eax
    8.96 :   40e4c9: mov    %rdx,%rsi // dbt2-driver[40e4c9]
    0.00 :   40e4cc: mov    %eax,%edi
    0.00 :   40e4ce: call   4079ab <send_transaction_data>
    0.00 :   40e4d3: lea    -0x2f50(%rbp),%rdx
    0.00 :   40e4da: mov    -0x58(%rbp),%eax
    4.27 :   40e4dd: mov    %rdx,%rsi // dbt2-driver[40e4dd]
    0.00 :   40e4e0: mov    %eax,%edi
    0.00 :   40e4e2: call   407909 <receive_transaction_data>
    0.00 :   40e4e7: mov    -0x2f50(%rbp),%eax
    1.70 :   40e4ed: mov    %eax,-0x64(%rbp) // dbt2-driver[40e4ed]
    0.00 :   40e4f0: lea    -0x2f90(%rbp),%rax
    0.00 :   40e4f7: mov    $0x0,%esi
    0.00 :   40e4fc: mov    %rax,%rdi
    0.00 :   40e4ff: call   407170 <gettimeofday@plt>
    0.00 :   40e504: cmp    $0xffffffff,%eax
    0.00 :   40e507: jne    40e513 <terminal_worker+0x508>
    0.00 :   40e509: mov    $0x411e03,%edi
    0.00 :   40e50e: call   4072d0 <perror@plt>
    0.00 :   40e513: mov    -0x2f80(%rbp),%rax
    0.00 :   40e51a: mov    -0x2f78(%rbp),%rdx
    0.00 :   40e521: mov    -0x2f90(%rbp),%rdi
    0.00 :   40e528: mov    -0x2f88(%rbp),%rsi
    0.00 :   40e52f: mov    %rdx,%rcx
    0.00 :   40e532: mov    %rax,%rdx
    0.00 :   40e535: call   407af5 <difftimeval>
    0.00 :   40e53a: movq   %xmm0,%rax
    0.00 :   40e53f: mov    %rax,-0x70(%rbp)
    0.00 :   40e543: mov    $0x4174a0,%edi
    0.00 :   40e548: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e54d: cmpl   $0x1,-0x64(%rbp)
    0.00 :   40e551: jne    40e559 <terminal_worker+0x54e>
    0.00 :   40e553: movb   $0x43,-0x39(%rbp)
    0.00 :   40e557: jmp    40e56f <terminal_worker+0x564>
    0.00 :   40e559: cmpl   $0x4,-0x64(%rbp)
    0.00 :   40e55d: jne    40e565 <terminal_worker+0x55a>
    0.00 :   40e55f: movb   $0x52,-0x39(%rbp)
    0.00 :   40e563: jmp    40e56f <terminal_worker+0x564>
    0.00 :   40e565: cmpl   $0x0,-0x64(%rbp)
    0.00 :   40e569: jne    40e56f <terminal_worker+0x564>
    0.00 :   40e56b: movb   $0x45,-0x39(%rbp)
    0.00 :   40e56f: mov    -0x48(%rbp),%rax
    0.00 :   40e573: mov    0x4(%rax),%r13d
   29.44 :   40e577: mov    -0x48(%rbp),%rax // dbt2-driver[40e577]
    0.00 :   40e57b: mov    (%rax),%r12d
    0.00 :   40e57e: call   4072b0 <pthread_self@plt>
    0.00 :   40e583: mov    %rax,%r14
    0.00 :   40e586: movsbl -0x39(%rbp),%r15d
    0.00 :   40e58b: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e591: cltq
    0.00 :   40e593: movzbl 0x4115f8(%rax),%eax
    0.00 :   40e59a: movsbl %al,%ebx
    0.00 :   40e59d: mov    $0x0,%edi
    0.00 :   40e5a2: call   407200 <time@plt>
    0.00 :   40e5a7: mov    %eax,%esi
    0.00 :   40e5a9: mov    0x8ed0(%rip),%rax        # 417480 <log_mix>
    0.00 :   40e5b0: mov    -0x70(%rbp),%rdx
    0.00 :   40e5b4: push   %r13
    0.00 :   40e5b6: push   %r12
    0.00 :   40e5b8: mov    %r14,%r9
    0.00 :   40e5bb: movq   %rdx,%xmm0
    0.00 :   40e5c0: mov    %r15d,%r8d
    0.00 :   40e5c3: mov    %ebx,%ecx
    0.00 :   40e5c5: mov    %esi,%edx
    0.00 :   40e5c7: mov    $0x411e10,%esi
    0.00 :   40e5cc: mov    %rax,%rdi
    0.00 :   40e5cf: mov    $0x1,%eax
    0.00 :   40e5d4: call   4071e0 <fprintf@plt>
    0.00 :   40e5d9: add    $0x10,%rsp
    0.00 :   40e5dd: mov    0x8e9c(%rip),%rax        # 417480 <log_mix>
    0.00 :   40e5e4: mov    %rax,%rdi
    0.00 :   40e5e7: call   407240 <fflush@plt>
    0.00 :   40e5ec: mov    $0x4174a0,%edi
    0.00 :   40e5f1: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e5f6: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e5fc: movslq %eax,%rdx
    0.00 :   40e5ff: mov    %rdx,%rax
    0.00 :   40e602: shl    $0x2,%rax
    0.00 :   40e606: add    %rdx,%rax
    0.00 :   40e609: shl    $0x3,%rax
    0.00 :   40e60d: add    $0x417520,%rax
    0.00 :   40e613: mov    %rax,%rdi
    0.00 :   40e616: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e61b: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e621: movslq %eax,%rdx
    0.00 :   40e624: mov    0x4174e0(,%rdx,4),%edx
    0.00 :   40e62b: sub    $0x1,%edx
    0.00 :   40e62e: cltq
    0.00 :   40e630: mov    %edx,0x4174e0(,%rax,4)
    0.00 :   40e637: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e63d: movslq %eax,%rdx
    0.00 :   40e640: mov    %rdx,%rax
    0.00 :   40e643: shl    $0x2,%rax
    0.00 :   40e647: add    %rdx,%rax
    0.00 :   40e64a: shl    $0x3,%rax
    0.00 :   40e64e: add    $0x417520,%rax
    0.00 :   40e654: mov    %rax,%rdi
    0.00 :   40e657: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e65c: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e662: movslq %eax,%rdx
    0.00 :   40e665: mov    %rdx,%rax
    0.00 :   40e668: shl    $0x2,%rax
    0.00 :   40e66c: add    %rdx,%rax
    0.00 :   40e66f: shl    $0x3,%rax
    0.00 :   40e673: add    $0x190,%rax
    0.00 :   40e679: add    $0x417520,%rax
    0.00 :   40e67f: mov    %rax,%rdi
    0.00 :   40e682: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e687: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e68d: movslq %eax,%rdx
    0.00 :   40e690: add    $0xa,%rdx
    0.00 :   40e694: mov    0x4174e0(,%rdx,4),%edx
    0.00 :   40e69b: add    $0x1,%edx
    0.00 :   40e69e: cltq
    0.00 :   40e6a0: add    $0xa,%rax
    0.00 :   40e6a4: mov    %edx,0x4174e0(,%rax,4)
    0.00 :   40e6ab: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e6b1: movslq %eax,%rdx
    0.00 :   40e6b4: mov    %rdx,%rax
    0.00 :   40e6b7: shl    $0x2,%rax
    0.00 :   40e6bb: add    %rdx,%rax
    0.00 :   40e6be: shl    $0x3,%rax
    0.00 :   40e6c2: add    $0x190,%rax
    0.00 :   40e6c8: add    $0x417520,%rax
    0.00 :   40e6ce: mov    %rax,%rdi
    0.00 :   40e6d1: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e6d6: mov    $0x0,%edi
    0.00 :   40e6db: call   407200 <time@plt>
    0.00 :   40e6e0: mov    %rax,%rdx
    0.00 :   40e6e3: mov    0x8d7b(%rip),%eax        # 417464 <stop_time>
    0.00 :   40e6e9: cltq
    0.00 :   40e6eb: cmp    %rax,%rdx
    0.00 :   40e6ee: jge    40e7fc <terminal_worker+0x7f1>
    0.00 :   40e6f4: mov    -0x38(%rbp),%edx
    0.00 :   40e6f7: lea    -0x2fb0(%rbp),%rax
    0.00 :   40e6fe: mov    %edx,%esi
    0.00 :   40e700: mov    %rax,%rdi
    0.00 :   40e703: call   40802c <get_think_time>
    0.00 :   40e708: cltq
    0.00 :   40e70a: mov    %rax,-0x2f58(%rbp)
    0.00 :   40e711: mov    -0x2f58(%rbp),%rcx
    0.00 :   40e718: movabs $0x20c49ba5e353f7cf,%rdx
    0.00 :   40e722: mov    %rcx,%rax
    0.00 :   40e725: imul   %rdx
    0.00 :   40e728: mov    %rdx,%rax
    0.00 :   40e72b: sar    $0x7,%rax
    0.00 :   40e72f: sar    $0x3f,%rcx
    0.00 :   40e733: mov    %rcx,%rdx
    0.00 :   40e736: sub    %rdx,%rax
    0.00 :   40e739: mov    %rax,-0x2f60(%rbp)
    0.00 :   40e740: mov    -0x2f58(%rbp),%rcx
    0.00 :   40e747: movabs $0x20c49ba5e353f7cf,%rdx
    0.00 :   40e751: mov    %rcx,%rax
    0.00 :   40e754: imul   %rdx
    0.00 :   40e757: mov    %rdx,%rax
    0.00 :   40e75a: sar    $0x7,%rax
    0.00 :   40e75e: mov    %rcx,%rdx
    0.00 :   40e761: sar    $0x3f,%rdx
    0.00 :   40e765: sub    %rdx,%rax
    0.00 :   40e768: imul   $0x3e8,%rax,%rdx
    0.00 :   40e76f: mov    %rcx,%rax
    0.00 :   40e772: sub    %rdx,%rax
    0.00 :   40e775: imul   $0xf4240,%rax,%rax
    0.00 :   40e77c: mov    %rax,-0x2f58(%rbp)
    0.00 :   40e783: jmp    40e7de <terminal_worker+0x7d3>
    0.00 :   40e785: call   407080 <__errno_location@plt>
    0.00 :   40e78a: mov    (%rax),%eax
    0.00 :   40e78c: cmp    $0x4,%eax
    0.00 :   40e78f: jne    40e7af <terminal_worker+0x7a4>
    0.00 :   40e791: mov    -0x2f70(%rbp),%rax
    0.00 :   40e798: mov    -0x2f68(%rbp),%rdx
    0.00 :   40e79f: mov    %rax,-0x2f60(%rbp)
    0.00 :   40e7a6: mov    %rdx,-0x2f58(%rbp)
    0.00 :   40e7ad: jmp    40e7de <terminal_worker+0x7d3>
    0.00 :   40e7af: mov    -0x2f58(%rbp),%rdx
    0.00 :   40e7b6: mov    -0x2f60(%rbp),%rax
    0.00 :   40e7bd: mov    %rdx,%r8
    0.00 :   40e7c0: mov    %rax,%rcx
    0.00 :   40e7c3: mov    $0x411d70,%edx
    0.00 :   40e7c8: mov    $0x1ae,%esi
    0.00 :   40e7cd: mov    $0x411c1e,%edi
    0.00 :   40e7d2: mov    $0x0,%eax
    0.00 :   40e7d7: call   4082df <log_error_message>
    0.00 :   40e7dc: jmp    40e7fc <terminal_worker+0x7f1>
    0.00 :   40e7de: lea    -0x2f70(%rbp),%rdx
    0.00 :   40e7e5: lea    -0x2f60(%rbp),%rax
    0.00 :   40e7ec: mov    %rdx,%rsi
    0.00 :   40e7ef: mov    %rax,%rdi
    0.00 :   40e7f2: call   407150 <nanosleep@plt>
   14.61 :   40e7f7: cmp    $0xffffffff,%eax // dbt2-driver[40e7f7]
    0.00 :   40e7fa: je     40e785 <terminal_worker+0x77a>
    9.63 :   40e7fc: mov    -0x2f4c(%rbp),%eax // dbt2-driver[40e7fc]
   15.11 :   40e802: movslq %eax,%rdx // dbt2-driver[40e802]
    0.00 :   40e805: mov    %rdx,%rax
    0.00 :   40e808: shl    $0x2,%rax
    0.00 :   40e80c: add    %rdx,%rax
    0.00 :   40e80f: shl    $0x3,%rax
    0.00 :   40e813: add    $0x190,%rax
    0.00 :   40e819: add    $0x417520,%rax
    0.00 :   40e81f: mov    %rax,%rdi
    0.00 :   40e822: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e827: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e82d: movslq %eax,%rdx
    0.00 :   40e830: add    $0xa,%rdx
    0.00 :   40e834: mov    0x4174e0(,%rdx,4),%edx
    0.00 :   40e83b: sub    $0x1,%edx
    0.00 :   40e83e: cltq
    0.00 :   40e840: add    $0xa,%rax
    0.00 :   40e844: mov    %edx,0x4174e0(,%rax,4)
    0.00 :   40e84b: mov    -0x2f4c(%rbp),%eax
    0.00 :   40e851: movslq %eax,%rdx
    0.00 :   40e854: mov    %rdx,%rax
    0.00 :   40e857: shl    $0x2,%rax
    0.00 :   40e85b: add    %rdx,%rax
    0.00 :   40e85e: shl    $0x3,%rax
    0.00 :   40e862: add    $0x190,%rax
    0.00 :   40e868: add    $0x417520,%rax
    0.00 :   40e86e: mov    %rax,%rdi
    0.00 :   40e871: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e876: mov    $0x0,%edi
    0.00 :   40e87b: call   407200 <time@plt>
    0.00 :   40e880: mov    %rax,%rdx
    0.00 :   40e883: mov    0x8bdb(%rip),%eax        # 417464 <stop_time>
    0.00 :   40e889: cltq
    0.00 :   40e88b: cmp    %rax,%rdx
    0.00 :   40e88e: jl     40e105 <terminal_worker+0xfa>
    0.00 :   40e894: jmp    40e897 <terminal_worker+0x88c>
    0.00 :   40e896: nop
    0.00 :   40e897: mov    $0x4174a0,%edi
    0.00 :   40e89c: call   4073a0 <pthread_mutex_lock@plt>
    0.00 :   40e8a1: call   4072b0 <pthread_self@plt>
    0.00 :   40e8a6: mov    %eax,%ebx
    0.00 :   40e8a8: mov    $0x0,%edi
    0.00 :   40e8ad: call   407200 <time@plt>
    0.00 :   40e8b2: mov    %eax,%edx
    0.00 :   40e8b4: mov    0x8bc5(%rip),%rax        # 417480 <log_mix>
    0.00 :   40e8bb: mov    %ebx,%ecx
    0.00 :   40e8bd: mov    $0x411e27,%esi
    0.00 :   40e8c2: mov    %rax,%rdi
    0.00 :   40e8c5: mov    $0x0,%eax
    0.00 :   40e8ca: call   4071e0 <fprintf@plt>
    0.00 :   40e8cf: mov    0x8baa(%rip),%rax        # 417480 <log_mix>
    0.00 :   40e8d6: mov    %rax,%rdi
    0.00 :   40e8d9: call   407240 <fflush@plt>
    0.00 :   40e8de: mov    $0x4174a0,%edi
    0.00 :   40e8e3: call   407210 <pthread_mutex_unlock@plt>
    0.00 :   40e8e8: mov    $0x0,%eax
    0.00 :   40e8ed: lea    -0x28(%rbp),%rsp
    0.00 :   40e8f1: pop    %rbx
    0.00 :   40e8f2: pop    %r12
    0.00 :   40e8f4: pop    %r13
    0.00 :   40e8f6: pop    %r14
    0.00 :   40e8f8: pop    %r15
    0.00 :   40e8fa: pop    %rbp
    0.00 :   40e8fb: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   28.08 libc.so.6[8e32d]
   20.66 libc.so.6[8e300]
   20.20 libc.so.6[8e307]
    9.95 libc.so.6[8e344]
    9.89 libc.so.6[8e36a]
    6.11 libc.so.6[8e35a]
    5.11 libc.so.6[8e351]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (20 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008e300 <__pthread_mutex_lock@GLIBC_2.2.5>:
         : 6     ___pthread_mutex_lock():
   20.66 :   8e300:  endbr64 // libc.so.6[8e300]
    0.00 :   8e304:  mov    0x10(%rdi),%eax
   20.20 :   8e307:  mov    %eax,%edx // libc.so.6[8e307]
    0.00 :   8e309:  and    $0x17f,%edx
    0.00 :   8e30f:  nop
    0.00 :   8e310:  and    $0x7c,%eax
    0.00 :   8e313:  jne    8e3c0 <__pthread_mutex_lock@GLIBC_2.2.5+0xc0>
    0.00 :   8e319:  push   %rbx
    0.00 :   8e31a:  sub    $0x10,%rsp
    0.00 :   8e31e:  test   %edx,%edx
    0.00 :   8e320:  jne    8e3c8 <__pthread_mutex_lock@GLIBC_2.2.5+0xc8>
    0.00 :   8e326:  mov    0x147723(%rip),%r9d        # 1d5a50 <__GI___pthread_force_elision>
   28.08 :   8e32d:  test   %r9d,%r9d // libc.so.6[8e32d]
    0.00 :   8e330:  jne    8e390 <__pthread_mutex_lock@GLIBC_2.2.5+0x90>
    0.00 :   8e332:  mov    0x10(%rdi),%esi
    0.00 :   8e335:  and    $0x80,%esi
    0.00 :   8e33b:  jne    8e346 <__pthread_mutex_lock@GLIBC_2.2.5+0x46>
    0.00 :   8e33d:  cmpb   $0x0,0x14d2b4(%rip)        # 1db5f8 <__libc_single_threaded>
    9.95 :   8e344:  jne    8e380 <__pthread_mutex_lock@GLIBC_2.2.5+0x80> // libc.so.6[8e344]
    0.00 :   8e346:  xor    %eax,%eax
    0.00 :   8e348:  mov    $0x1,%edx
    0.00 :   8e34d:  lock cmpxchg %edx,(%rdi)
    5.11 :   8e351:  jne    8e408 <__pthread_mutex_lock@GLIBC_2.2.5+0x108> // libc.so.6[8e351]
    0.00 :   8e357:  mov    0x8(%rdi),%ecx
    6.11 :   8e35a:  test   %ecx,%ecx // libc.so.6[8e35a]
    0.00 :   8e35c:  jne    8e4be <__pthread_mutex_lock@GLIBC_2.2.5+0x1be>
    0.00 :   8e362:  mov    %fs:0x2d0,%eax
    9.89 :   8e36a:  mov    %eax,0x8(%rdi) // libc.so.6[8e36a]
    0.00 :   8e36d:  addl   $0x1,0xc(%rdi)
    0.00 :   8e371:  nop
    0.00 :   8e372:  xor    %eax,%eax
    0.00 :   8e374:  add    $0x10,%rsp
    0.00 :   8e378:  pop    %rbx
    0.00 :   8e379:  ret
    0.00 :   8e37a:  nopw   0x0(%rax,%rax,1)
    0.00 :   8e380:  mov    (%rdi),%r8d
    0.00 :   8e383:  test   %r8d,%r8d
    0.00 :   8e386:  jne    8e346 <__pthread_mutex_lock@GLIBC_2.2.5+0x46>
    0.00 :   8e388:  movl   $0x1,(%rdi)
    0.00 :   8e38e:  jmp    8e357 <__pthread_mutex_lock@GLIBC_2.2.5+0x57>
    0.00 :   8e390:  mov    0x10(%rdi),%eax
    0.00 :   8e393:  test   $0x3,%ah
    0.00 :   8e396:  je     8e3a0 <__pthread_mutex_lock@GLIBC_2.2.5+0xa0>
    0.00 :   8e398:  test   $0x1,%ah
    0.00 :   8e39b:  je     8e332 <__pthread_mutex_lock@GLIBC_2.2.5+0x32>
    0.00 :   8e39d:  jmp    8e3a6 <__pthread_mutex_lock@GLIBC_2.2.5+0xa6>
    0.00 :   8e39f:  nop
    0.00 :   8e3a0:  or     $0x1,%ah
    0.00 :   8e3a3:  mov    %eax,0x10(%rdi)
    0.00 :   8e3a6:  mov    0x10(%rdi),%edx
    0.00 :   8e3a9:  add    $0x10,%rsp
    0.00 :   8e3ad:  lea    0x16(%rdi),%rsi
    0.00 :   8e3b1:  pop    %rbx
    0.00 :   8e3b2:  and    $0x80,%edx
    0.00 :   8e3b8:  jmp    879b0 <__GI___lll_lock_elision>
    0.00 :   8e3bd:  nopl   (%rax)
    0.00 :   8e3c0:  jmp    8dc00 <__pthread_mutex_lock_full>
    0.00 :   8e3c5:  nopl   (%rax)
    0.00 :   8e3c8:  cmp    $0x100,%edx
    0.00 :   8e3ce:  je     8e3a6 <__pthread_mutex_lock@GLIBC_2.2.5+0xa6>
    0.00 :   8e3d0:  mov    0x10(%rdi),%edx
    0.00 :   8e3d3:  and    $0x7f,%edx
    0.00 :   8e3d6:  cmp    $0x1,%edx
    0.00 :   8e3d9:  jne    8e471 <__pthread_mutex_lock@GLIBC_2.2.5+0x171>
    0.00 :   8e3df:  mov    %fs:0x2d0,%eax
    0.00 :   8e3e7:  cmp    %eax,0x8(%rdi)
    0.00 :   8e3ea:  jne    8e41c <__pthread_mutex_lock@GLIBC_2.2.5+0x11c>
    0.00 :   8e3ec:  mov    0x4(%rdi),%eax
    0.00 :   8e3ef:  cmp    $0xffffffff,%eax
    0.00 :   8e3f2:  je     8e4b4 <__pthread_mutex_lock@GLIBC_2.2.5+0x1b4>
    0.00 :   8e3f8:  add    $0x1,%eax
    0.00 :   8e3fb:  mov    %eax,0x4(%rdi)
    0.00 :   8e3fe:  jmp    8e372 <__pthread_mutex_lock@GLIBC_2.2.5+0x72>
    0.00 :   8e403:  nopl   0x0(%rax,%rax,1)
    0.00 :   8e408:  mov    %rdi,0x8(%rsp)
    0.00 :   8e40d:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8e412:  mov    0x8(%rsp),%rdi
    0.00 :   8e417:  jmp    8e357 <__pthread_mutex_lock@GLIBC_2.2.5+0x57>
    0.00 :   8e41c:  mov    0x10(%rdi),%esi
    0.00 :   8e41f:  and    $0x80,%esi
    0.00 :   8e425:  jne    8e453 <__pthread_mutex_lock@GLIBC_2.2.5+0x153>
    0.00 :   8e427:  cmpb   $0x0,0x14d1ca(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   8e42e:  je     8e453 <__pthread_mutex_lock@GLIBC_2.2.5+0x153>
    0.00 :   8e430:  mov    (%rdi),%edx
    0.00 :   8e432:  test   %edx,%edx
    0.00 :   8e434:  jne    8e453 <__pthread_mutex_lock@GLIBC_2.2.5+0x153>
    0.00 :   8e436:  movl   $0x1,(%rdi)
    0.00 :   8e43c:  mov    0x8(%rdi),%eax
    0.00 :   8e43f:  test   %eax,%eax
    0.00 :   8e441:  jne    8e598 <__pthread_mutex_lock@GLIBC_2.2.5+0x298>
    0.00 :   8e447:  movl   $0x1,0x4(%rdi)
    0.00 :   8e44e:  jmp    8e362 <__pthread_mutex_lock@GLIBC_2.2.5+0x62>
    0.00 :   8e453:  xor    %eax,%eax
    0.00 :   8e455:  mov    $0x1,%edx
    0.00 :   8e45a:  lock cmpxchg %edx,(%rdi)
    0.00 :   8e45e:  je     8e43c <__pthread_mutex_lock@GLIBC_2.2.5+0x13c>
    0.00 :   8e460:  mov    %rdi,0x8(%rsp)
    0.00 :   8e465:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8e46a:  mov    0x8(%rsp),%rdi
    0.00 :   8e46f:  jmp    8e43c <__pthread_mutex_lock@GLIBC_2.2.5+0x13c>
    0.00 :   8e471:  mov    0x10(%rdi),%edx
    0.00 :   8e474:  and    $0x7f,%edx
    0.00 :   8e477:  cmp    $0x3,%edx
    0.00 :   8e47a:  jne    8e54b <__pthread_mutex_lock@GLIBC_2.2.5+0x24b>
    0.00 :   8e480:  mov    $0x1,%edx
    0.00 :   8e485:  lock cmpxchg %edx,(%rdi)
    0.00 :   8e489:  jne    8e4dd <__pthread_mutex_lock@GLIBC_2.2.5+0x1dd>
    0.00 :   8e48b:  cmpl   $0x0,0x8(%rdi)
    0.00 :   8e48f:  je     8e362 <__pthread_mutex_lock@GLIBC_2.2.5+0x62>
    0.00 :   8e495:  lea    0x111cd4(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e49c:  mov    $0xa7,%edx
    0.00 :   8e4a1:  lea    0x109a44(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e4a8:  lea    0x109a68(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8e4af:  call   35610 <__assert_fail>
    0.00 :   8e4b4:  mov    $0xb,%eax
    0.00 :   8e4b9:  jmp    8e374 <__pthread_mutex_lock@GLIBC_2.2.5+0x74>
    0.00 :   8e4be:  lea    0x111cab(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e4c5:  mov    $0x5e,%edx
    0.00 :   8e4ca:  lea    0x109a1b(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e4d1:  lea    0x109a3f(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8e4d8:  call   35610 <__assert_fail>
    0.00 :   8e4dd:  movswl 0x14(%rdi),%eax
    0.00 :   8e4e1:  movswl 0x144dc4(%rip),%edx        # 1d32ac <__GI___mutex_aconf>
    0.00 :   8e4e8:  lea    0xa(%rax,%rax,1),%eax
    0.00 :   8e4ec:  mov    %edx,%ecx
    0.00 :   8e4ee:  cmp    %edx,%eax
    0.00 :   8e4f0:  cmovle %eax,%ecx
    0.00 :   8e4f3:  rdtsc
    0.00 :   8e4f5:  mov    $0x1,%edx
    0.00 :   8e4fa:  xor    %ebx,%ebx
    0.00 :   8e4fc:  mov    %eax,%esi
    0.00 :   8e4fe:  lea    -0x1(%rdx),%eax
    0.00 :   8e501:  and    %esi,%eax
    0.00 :   8e503:  add    %edx,%eax
    0.00 :   8e505:  add    %eax,%ebx
    0.00 :   8e507:  cmp    %ebx,%ecx
    0.00 :   8e509:  jle    8e571 <__pthread_mutex_lock@GLIBC_2.2.5+0x271>
    0.00 :   8e50b:  pause
    0.00 :   8e50d:  sub    $0x1,%eax
    0.00 :   8e510:  test   %eax,%eax
    0.00 :   8e512:  jg     8e50b <__pthread_mutex_lock@GLIBC_2.2.5+0x20b>
    0.00 :   8e514:  cmp    $0xf,%edx
    0.00 :   8e517:  jg     8e51b <__pthread_mutex_lock@GLIBC_2.2.5+0x21b>
    0.00 :   8e519:  add    %edx,%edx
    0.00 :   8e51b:  mov    (%rdi),%eax
    0.00 :   8e51d:  test   %eax,%eax
    0.00 :   8e51f:  jne    8e4fe <__pthread_mutex_lock@GLIBC_2.2.5+0x1fe>
    0.00 :   8e521:  mov    $0x1,%r8d
    0.00 :   8e527:  lock cmpxchg %r8d,(%rdi)
    0.00 :   8e52c:  jne    8e4fe <__pthread_mutex_lock@GLIBC_2.2.5+0x1fe>
    0.00 :   8e52e:  movswl 0x14(%rdi),%edx
    0.00 :   8e532:  mov    %ebx,%eax
    0.00 :   8e534:  mov    $0x8,%esi
    0.00 :   8e539:  sub    %edx,%eax
    0.00 :   8e53b:  mov    %edx,%ecx
    0.00 :   8e53d:  cltd
    0.00 :   8e53e:  idiv   %esi
    0.00 :   8e540:  add    %eax,%ecx
    0.00 :   8e542:  mov    %cx,0x14(%rdi)
    0.00 :   8e546:  jmp    8e48b <__pthread_mutex_lock@GLIBC_2.2.5+0x18b>
    0.00 :   8e54b:  mov    %fs:0x2d0,%edx
    0.00 :   8e553:  mov    0x10(%rdi),%eax
    0.00 :   8e556:  and    $0x7f,%eax
    0.00 :   8e559:  cmp    $0x2,%eax
    0.00 :   8e55c:  jne    8e5b7 <__pthread_mutex_lock@GLIBC_2.2.5+0x2b7>
    0.00 :   8e55e:  cmp    %edx,0x8(%rdi)
    0.00 :   8e561:  jne    8e332 <__pthread_mutex_lock@GLIBC_2.2.5+0x32>
    0.00 :   8e567:  mov    $0x23,%eax
    0.00 :   8e56c:  jmp    8e374 <__pthread_mutex_lock@GLIBC_2.2.5+0x74>
    0.00 :   8e571:  xor    %eax,%eax
    0.00 :   8e573:  mov    $0x1,%edx
    0.00 :   8e578:  lock cmpxchg %edx,(%rdi)
    0.00 :   8e57c:  je     8e52e <__pthread_mutex_lock@GLIBC_2.2.5+0x22e>
    0.00 :   8e57e:  mov    0x10(%rdi),%esi
    0.00 :   8e581:  mov    %rdi,0x8(%rsp)
    0.00 :   8e586:  and    $0x80,%esi
    0.00 :   8e58c:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8e591:  mov    0x8(%rsp),%rdi
    0.00 :   8e596:  jmp    8e52e <__pthread_mutex_lock@GLIBC_2.2.5+0x22e>
    0.00 :   8e598:  lea    0x111bd1(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e59f:  mov    $0x82,%edx
    0.00 :   8e5a4:  lea    0x109941(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e5ab:  lea    0x109965(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8e5b2:  call   35610 <__assert_fail>
    0.00 :   8e5b7:  lea    0x111bb2(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e5be:  mov    $0xac,%edx
    0.00 :   8e5c3:  lea    0x109922(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e5ca:  lea    0x10e1b7(%rip),%rdi        # 19c788 <aliasfile.0+0xd40>
    0.00 :   8e5d1:  call   35610 <__assert_fail>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   66.67 [nf_tables][16842]
   12.75 [nf_tables][1681b]
    7.95 [nf_tables][16839]
    6.57 [nf_tables][167d0]
    6.06 [nf_tables][167d9]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (17 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000167d0 <nft_immediate_eval>:
         : 6     nft_immediate_eval():
    6.57 :   167d0:  call   167d5 <nft_immediate_eval+0x5> // [nf_tables][167d0]
    0.00 :   167d5:  movzbl 0x18(%rdi),%edx
    6.06 :   167d9:  movzbl 0x19(%rdi),%ecx // [nf_tables][167d9]
    0.00 :   167dd:  mov    %rsi,%rax
    0.00 :   167e0:  lea    0x8(%rdi),%rsi
    0.00 :   167e4:  lea    (%rax,%rdx,4),%rax
    0.00 :   167e8:  test   $0x3,%cl
    0.00 :   167eb:  je     167fd <nft_immediate_eval+0x2d>
    0.00 :   167ed:  mov    %rcx,%rdx
    0.00 :   167f0:  and    $0xfc,%edx
    0.00 :   167f6:  movl   $0x0,(%rdx,%rax,1)
    0.00 :   167fd:  cmp    $0x8,%ecx
    0.00 :   16800:  jae    1681b <nft_immediate_eval+0x4b>
    0.00 :   16802:  test   $0x4,%cl
    0.00 :   16805:  jne    16847 <nft_immediate_eval+0x77>
    0.00 :   16807:  test   %ecx,%ecx
    0.00 :   16809:  je     16816 <nft_immediate_eval+0x46>
    0.00 :   1680b:  movzbl 0x8(%rdi),%edx
    0.00 :   1680f:  mov    %dl,(%rax)
    0.00 :   16811:  test   $0x2,%cl
    0.00 :   16814:  jne    16859 <nft_immediate_eval+0x89>
    0.00 :   16816:  jmp    1681b <nft_immediate_eval+0x4b>
   12.75 :   1681b:  mov    0x8(%rdi),%rdx // [nf_tables][1681b]
    0.00 :   1681f:  lea    0x8(%rax),%rdi
    0.00 :   16823:  and    $0xfffffffffffffff8,%rdi
    0.00 :   16827:  mov    %rdx,(%rax)
    0.00 :   1682a:  mov    -0x8(%rsi,%rcx,1),%rdx
    0.00 :   1682f:  mov    %rdx,-0x8(%rax,%rcx,1)
    0.00 :   16834:  sub    %rdi,%rax
    0.00 :   16837:  add    %eax,%ecx
    7.95 :   16839:  sub    %rax,%rsi // [nf_tables][16839]
    0.00 :   1683c:  shr    $0x3,%ecx
    0.00 :   1683f:  rep movsq %ds:(%rsi),%es:(%rdi)
   66.67 :   16842:  jmp    16847 <nft_immediate_eval+0x77> // [nf_tables][16842]
    0.00 :   16847:  mov    0x8(%rdi),%edx
    0.00 :   1684a:  mov    %edx,(%rax)
    0.00 :   1684c:  mov    -0x4(%rsi,%rcx,1),%edx
    0.00 :   16850:  mov    %edx,-0x4(%rax,%rcx,1)
    0.00 :   16854:  jmp    16859 <nft_immediate_eval+0x89>
    0.00 :   16859:  movzwl -0x2(%rsi,%rcx,1),%edx
    0.00 :   1685e:  mov    %dx,-0x2(%rax,%rcx,1)
    0.00 :   16863:  jmp    16868 <nft_immediate_eval+0x98>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   16.43 [virtio_net][3c80]
   14.64 [virtio_net][3cc2]
   12.42 [virtio_net][4181]
    7.72 [virtio_net][3f0d]
    7.43 [virtio_net][3d2b]
    7.28 [virtio_net][3f01]
    7.02 [virtio_net][3d25]
    5.43 [virtio_net][4169]
    5.17 [virtio_net][3efc]
    4.95 [virtio_net][3cfe]
    4.55 [virtio_net][3cdb]
    4.19 [virtio_net][3d58]
    2.79 [virtio_net][3c95]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (18 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003c80 <start_xmit>:
         : 6    start_xmit():
   16.43 :   3c80:   call   3c85 <start_xmit+0x5> // [virtio_net][3c80]
    0.00 :   3c85:   push   %r15
    0.00 :   3c87:   mov    %rdi,%r15
    0.00 :   3c8a:   push   %r14
    0.00 :   3c8c:   push   %r13
    0.00 :   3c8e:   push   %r12
    0.00 :   3c90:   push   %rbp
    0.00 :   3c91:   mov    %rsi,%rbp
    0.00 :   3c94:   push   %rbx
    2.79 :   3c95:   sub    $0x20,%rsp // [virtio_net][3c95]
    0.00 :   3c99:   movzwl 0x7c(%rdi),%eax
    0.00 :   3c9d:   mov    0x400(%rsi),%rcx
    0.00 :   3ca4:   mov    $0x0,%rdi
    0.00 :   3cab:   mov    %ax,0x1e(%rsp)
    0.00 :   3cb0:   imul   $0x458,%rax,%rbx
    0.00 :   3cb7:   lea    (%rax,%rax,4),%rax
    0.00 :   3cbb:   add    0x9d8(%rsi),%rbx
   14.64 :   3cc2:   shl    $0x6,%rax // [virtio_net][3cc2]
    0.00 :   3cc6:   mov    %rcx,0x8(%rsp)
    0.00 :   3ccb:   mov    %rax,(%rsp)
    0.00 :   3ccf:   call   3cd4 <start_xmit+0x54>
    0.00 :   3cd4:   mov    0x2d8(%rbx),%r13d
    4.55 :   3cdb:   mov    %gs:0x0(%rip),%r14b        # 3ce3 <start_xmit+0x63> // [virtio_net][3cdb]
    0.00 :   3ce3:   test   %r13d,%r13d
    0.00 :   3ce6:   jne    3f0a <start_xmit+0x28a>
    0.00 :   3cec:   xor    %esi,%esi
    0.00 :   3cee:   mov    %rbx,%rdi
    0.00 :   3cf1:   call   390 <free_old_xmit_skbs>
    0.00 :   3cf6:   mov    %r15,%rdi
    0.00 :   3cf9:   call   3cfe <start_xmit+0x7e>
    4.95 :   3cfe:   mov    0xc0(%r15),%eax // [virtio_net][3cfe]
    0.00 :   3d05:   mov    0xc8(%r15),%rdx
    0.00 :   3d0c:   testb  $0x2,0x3(%rdx,%rax,1)
    0.00 :   3d11:   jne    4050 <start_xmit+0x3d0>
    0.00 :   3d17:   mov    (%rbx),%rax
    0.00 :   3d1a:   mov    0x20(%rax),%rax
    0.00 :   3d1e:   mov    0x330(%rax),%r12
    7.02 :   3d25:   movzbl 0x4a(%r12),%eax // [virtio_net][3d25]
    7.43 :   3d2b:   mov    %eax,%r10d // [virtio_net][3d2b]
    0.00 :   3d2e:   mov    %eax,0x18(%rsp)
    0.00 :   3d32:   nopl   0x0(%rax,%rax,1)
    0.00 :   3d37:   movzbl 0x49(%r12),%ecx
    0.00 :   3d3d:   test   %cl,%cl
    0.00 :   3d3f:   jne    3f37 <start_xmit+0x2b7>
    0.00 :   3d45:   lea    0x28(%r15),%rax
    0.00 :   3d49:   xor    %ecx,%ecx
    0.00 :   3d4b:   xor    %esi,%esi
    0.00 :   3d4d:   movq   $0x0,(%rax)
    0.00 :   3d54:   mov    %si,0x8(%rax)
    4.19 :   3d58:   mov    0xc0(%r15),%edx // [virtio_net][3d58]
    0.00 :   3d5f:   add    0xc8(%r15),%rdx
    0.00 :   3d66:   cmpw   $0x0,0x4(%rdx)
    0.00 :   3d6b:   je     3da7 <start_xmit+0x127>
    0.00 :   3d6d:   mov    0x70(%r15),%esi
    0.00 :   3d71:   sub    0x74(%r15),%esi
    0.00 :   3d75:   mov    %si,0x2(%rax)
    0.00 :   3d79:   movzwl 0x4(%rdx),%esi
    0.00 :   3d7d:   mov    %si,0x4(%rax)
    0.00 :   3d81:   mov    0x18(%rdx),%esi
    0.00 :   3d84:   test   $0x1,%sil
    0.00 :   3d88:   je     403d <start_xmit+0x3bd>
    0.00 :   3d8e:   mov    $0x1,%edi
    0.00 :   3d93:   mov    %edi,%esi
    0.00 :   3d95:   mov    %dil,0x1(%rax)
    0.00 :   3d99:   or     $0xffffff80,%esi
    0.00 :   3d9c:   testb  $0x4,0x18(%rdx)
    0.00 :   3da0:   cmovne %esi,%edi
    0.00 :   3da3:   mov    %dil,0x1(%rax)
    0.00 :   3da7:   movzbl 0x80(%r15),%edx
    0.00 :   3daf:   and    $0x60,%edx
    0.00 :   3db2:   cmp    $0x60,%dl
    0.00 :   3db5:   jne    3de2 <start_xmit+0x162>
    0.00 :   3db7:   movb   $0x1,(%rax)
    0.00 :   3dba:   movzwl 0x88(%r15),%edx
    0.00 :   3dc2:   mov    0xd0(%r15),%rsi
    0.00 :   3dc9:   sub    0xc8(%r15),%rsi
    0.00 :   3dd0:   sub    %esi,%edx
    0.00 :   3dd2:   mov    %dx,0x6(%rax)
    0.00 :   3dd6:   movzwl 0x8a(%r15),%edx
    0.00 :   3dde:   mov    %dx,0x8(%rax)
    0.00 :   3de2:   cmpb   $0x0,0x38(%r12)
    0.00 :   3de8:   je     3df0 <start_xmit+0x170>
    0.00 :   3dea:   xor    %edx,%edx
    0.00 :   3dec:   mov    %dx,0xa(%rax)
    0.00 :   3df0:   mov    0xc0(%r15),%edx
    0.00 :   3df7:   mov    0xc8(%r15),%rsi
    0.00 :   3dfe:   mov    %rax,0x10(%rsp)
    0.00 :   3e03:   lea    0x8(%rbx),%r12
    0.00 :   3e07:   movzbl 0x2(%rsi,%rdx,1),%esi
    0.00 :   3e0c:   test   %cl,%cl
    0.00 :   3e0e:   jne    3fcf <start_xmit+0x34f>
    0.00 :   3e14:   add    $0x2,%esi
    0.00 :   3e17:   mov    %r12,%rdi
    0.00 :   3e1a:   call   3e1f <start_xmit+0x19f>
    0.00 :   3e1f:   mov    0x10(%rsp),%rax
    0.00 :   3e24:   mov    $0x80000000,%ecx
    0.00 :   3e29:   mov    %eax,%edx
    0.00 :   3e2b:   and    $0xfff,%edx
    0.00 :   3e31:   add    %rcx,%rax
    0.00 :   3e34:   jb     41df <start_xmit+0x55f>
    0.00 :   3e3a:   mov    $0xffffffff80000000,%rcx
    0.00 :   3e41:   sub    0x0(%rip),%rcx        # 3e48 <start_xmit+0x1c8>
    0.00 :   3e48:   add    %rcx,%rax
    0.00 :   3e4b:   mov    0x8(%rbx),%rcx
    0.00 :   3e4f:   shr    $0xc,%rax
    0.00 :   3e53:   shl    $0x6,%rax
    0.00 :   3e57:   add    0x0(%rip),%rax        # 3e5e <start_xmit+0x1de>
    0.00 :   3e5e:   and    $0x3,%ecx
    0.00 :   3e61:   test   $0x3,%al
    0.00 :   3e63:   jne    41c2 <start_xmit+0x542>
    0.00 :   3e69:   or     %rcx,%rax
    0.00 :   3e6c:   mov    %edx,0x10(%rbx)
    0.00 :   3e6f:   lea    0x28(%rbx),%rsi
    0.00 :   3e73:   xor    %edx,%edx
    0.00 :   3e75:   mov    %rax,0x8(%rbx)
    0.00 :   3e79:   mov    0x18(%rsp),%eax
    0.00 :   3e7d:   mov    %r15,%rdi
    0.00 :   3e80:   mov    %eax,0x14(%rbx)
    0.00 :   3e83:   mov    0x70(%r15),%ecx
    0.00 :   3e87:   call   3e8c <start_xmit+0x20c>
    0.00 :   3e8c:   mov    %eax,%edx
    0.00 :   3e8e:   test   %eax,%eax
    0.00 :   3e90:   js     418b <start_xmit+0x50b>
    0.00 :   3e96:   add    $0x1,%edx
    0.00 :   3e99:   mov    (%rbx),%rdi
    0.00 :   3e9c:   mov    $0xa20,%r8d
    0.00 :   3ea2:   mov    %r15,%rcx
    0.00 :   3ea5:   mov    %r12,%rsi
    0.00 :   3ea8:   call   3ead <start_xmit+0x22d>
    0.00 :   3ead:   mov    %eax,%edx
    0.00 :   3eaf:   test   %eax,%eax
    0.00 :   3eb1:   jne    418b <start_xmit+0x50b>
    0.00 :   3eb7:   test   %r13d,%r13d
    0.00 :   3eba:   je     405f <start_xmit+0x3df>
    0.00 :   3ec0:   mov    (%rbx),%rax
    0.00 :   3ec3:   cmpl   $0x12,0x2c(%rax)
    0.00 :   3ec7:   jbe    40c1 <start_xmit+0x441>
    0.00 :   3ecd:   test   %r14b,%r14b
    0.00 :   3ed0:   je     3ee5 <start_xmit+0x265>
    0.00 :   3ed2:   mov    0x8(%rsp),%rax
    0.00 :   3ed7:   mov    (%rsp),%rcx
    0.00 :   3edb:   testb  $0x3,0x90(%rax,%rcx,1)
    0.00 :   3ee3:   je     3ef5 <start_xmit+0x275>
    0.00 :   3ee5:   mov    (%rbx),%rdi
    0.00 :   3ee8:   call   3eed <start_xmit+0x26d>
    0.00 :   3eed:   test   %al,%al
    0.00 :   3eef:   jne    4169 <start_xmit+0x4e9>
    0.00 :   3ef5:   add    $0x20,%rsp
    0.00 :   3ef9:   xor    %eax,%eax
    0.00 :   3efb:   pop    %rbx
    5.17 :   3efc:   pop    %rbp // [virtio_net][3efc]
    0.00 :   3efd:   pop    %r12
    0.00 :   3eff:   pop    %r13
    7.28 :   3f01:   pop    %r14 // [virtio_net][3f01]
    0.00 :   3f03:   pop    %r15
    0.00 :   3f05:   jmp    3f0a <start_xmit+0x28a>
    0.00 :   3f0a:   mov    (%rbx),%rdi
    7.72 :   3f0d:   call   3f12 <start_xmit+0x292> // [virtio_net][3f0d]
    0.00 :   3f12:   xor    %esi,%esi
    0.00 :   3f14:   mov    %rbx,%rdi
    0.00 :   3f17:   call   390 <free_old_xmit_skbs>
    0.00 :   3f1c:   test   %r14b,%r14b
    0.00 :   3f1f:   jne    3cf6 <start_xmit+0x76>
    0.00 :   3f25:   mov    (%rbx),%rdi
    0.00 :   3f28:   call   3f2d <start_xmit+0x2ad>
    0.00 :   3f2d:   test   %al,%al
    0.00 :   3f2f:   jne    3cf6 <start_xmit+0x76>
    0.00 :   3f35:   jmp    3f0a <start_xmit+0x28a>
    0.00 :   3f37:   mov    0xd0(%r15),%rax
    0.00 :   3f3e:   test   $0x1,%al
    0.00 :   3f40:   jne    3d45 <start_xmit+0xc5>
    0.00 :   3f46:   mov    0xc8(%r15),%rdi
    0.00 :   3f4d:   testb  $0x1,0x7e(%r15)
    0.00 :   3f52:   je     3f72 <start_xmit+0x2f2>
    0.00 :   3f54:   mov    0xc0(%r15),%edx
    0.00 :   3f5b:   add    %rdi,%rdx
    0.00 :   3f5e:   mov    0x20(%rdx),%edx
    0.00 :   3f61:   movzwl %dx,%esi
    0.00 :   3f64:   sar    $0x10,%edx
    0.00 :   3f67:   sub    %edx,%esi
    0.00 :   3f69:   cmp    $0x1,%esi
    0.00 :   3f6c:   jne    3d45 <start_xmit+0xc5>
    0.00 :   3f72:   mov    %rax,%rdx
    0.00 :   3f75:   mov    0x18(%rsp),%esi
    0.00 :   3f79:   sub    %rdi,%rdx
    0.00 :   3f7c:   cmp    %esi,%edx
    0.00 :   3f7e:   jb     3d45 <start_xmit+0xc5>
    0.00 :   3f84:   movzbl %r10b,%edx
    0.00 :   3f88:   sub    %rdx,%rax
    0.00 :   3f8b:   jmp    3d4b <start_xmit+0xcb>
    0.00 :   3f90:   mov    0x10(%r12),%rdx
    0.00 :   3f95:   mov    %r15,%rcx
    0.00 :   3f98:   mov    0xd0(%r15),%r8
    0.00 :   3f9f:   mov    $0x0,%rsi
    0.00 :   3fa6:   mov    $0x0,%rdi
    0.00 :   3fad:   mov    %al,0x10(%rsp)
    0.00 :   3fb1:   call   3fb6 <start_xmit+0x336>
    0.00 :   3fb6:   movzbl 0x49(%r12),%ecx
    0.00 :   3fbc:   movzbl 0x10(%rsp),%r10d
    0.00 :   3fc2:   test   %cl,%cl
    0.00 :   3fc4:   je     3d45 <start_xmit+0xc5>
    0.00 :   3fca:   jmp    3f37 <start_xmit+0x2b7>
    0.00 :   3fcf:   add    $0x1,%esi
    0.00 :   3fd2:   mov    %r12,%rdi
    0.00 :   3fd5:   mov    %r10b,0x10(%rsp)
    0.00 :   3fda:   call   3fdf <start_xmit+0x35f>
    0.00 :   3fdf:   movzbl 0x10(%rsp),%r10d
    0.00 :   3fe5:   xor    %edx,%edx
    0.00 :   3fe7:   mov    %r12,%rsi
    0.00 :   3fea:   mov    0x18(%rsp),%ecx
    0.00 :   3fee:   sub    %r10,0xd0(%r15)
    0.00 :   3ff5:   mov    %r15,%rdi
    0.00 :   3ff8:   add    0x70(%r15),%ecx
    0.00 :   3ffc:   mov    %r10,0x10(%rsp)
    0.00 :   4001:   mov    %ecx,0x70(%r15)
    0.00 :   4005:   call   400a <start_xmit+0x38a>
    0.00 :   400a:   mov    %eax,%edx
    0.00 :   400c:   test   %eax,%eax
    0.00 :   400e:   js     418b <start_xmit+0x50b>
    0.00 :   4014:   mov    0x70(%r15),%eax
    0.00 :   4018:   mov    0x18(%rsp),%ecx
    0.00 :   401c:   mov    0x10(%rsp),%r10
    0.00 :   4021:   sub    %ecx,%eax
    0.00 :   4023:   cmp    0x74(%r15),%eax
    0.00 :   4027:   mov    %eax,0x70(%r15)
    0.00 :   402b:   jb     41ce <start_xmit+0x54e>
    0.00 :   4031:   add    %r10,0xd0(%r15)
    0.00 :   4038:   jmp    3e99 <start_xmit+0x219>
    0.00 :   403d:   and    $0x10,%esi
    0.00 :   4040:   je     4186 <start_xmit+0x506>
    0.00 :   4046:   mov    $0x4,%edi
    0.00 :   404b:   jmp    3d93 <start_xmit+0x113>
    0.00 :   4050:   xor    %esi,%esi
    0.00 :   4052:   mov    %r15,%rdi
    0.00 :   4055:   call   405a <start_xmit+0x3da>
    0.00 :   405a:   jmp    3d17 <start_xmit+0x97>
    0.00 :   405f:   mov    0x60(%r15),%rax
    0.00 :   4063:   test   %rax,%rax
    0.00 :   4066:   je     415c <start_xmit+0x4dc>
    0.00 :   406c:   mov    %r15,%rdi
    0.00 :   406f:   call   4074 <start_xmit+0x3f4>
    0.00 :   4074:   movq   $0x0,0x60(%r15)
    0.00 :   407c:   movq   $0x0,0x18(%r15)
    0.00 :   4084:   mov    0x68(%r15),%rdi
    0.00 :   4088:   cmp    $0x7,%rdi
    0.00 :   408c:   jbe    40ac <start_xmit+0x42c>
    0.00 :   408e:   and    $0xfffffffffffffff8,%rdi
    0.00 :   4092:   mov    $0xffffffff,%eax
    0.00 :   4097:   lock xadd %eax,(%rdi)
    0.00 :   409b:   cmp    $0x1,%eax
    0.00 :   409e:   je     41c4 <start_xmit+0x544>
    0.00 :   40a4:   test   %eax,%eax
    0.00 :   40a6:   jle    41d0 <start_xmit+0x550>
    0.00 :   40ac:   movq   $0x0,0x68(%r15)
    0.00 :   40b4:   mov    (%rbx),%rax
    0.00 :   40b7:   cmpl   $0x12,0x2c(%rax)
    0.00 :   40bb:   ja     3ecd <start_xmit+0x24d>
    0.00 :   40c1:   mov    (%rsp),%rax
    0.00 :   40c5:   add    0x400(%rbp),%rax
    0.00 :   40cc:   lock orb $0x1,0x90(%rax)
    0.00 :   40d4:   mov    (%rbx),%rdi
    0.00 :   40d7:   test   %r13d,%r13d
    0.00 :   40da:   je     4118 <start_xmit+0x498>
    0.00 :   40dc:   call   40e1 <start_xmit+0x461>
    0.00 :   40e1:   test   %al,%al
    0.00 :   40e3:   jne    3ecd <start_xmit+0x24d>
    0.00 :   40e9:   lea    0x2c0(%rbx),%rbp
    0.00 :   40f0:   mov    (%rbx),%r12
    0.00 :   40f3:   mov    %rbp,%rdi
    0.00 :   40f6:   call   40fb <start_xmit+0x47b>
    0.00 :   40fb:   test   %al,%al
    0.00 :   40fd:   je     3ecd <start_xmit+0x24d>
    0.00 :   4103:   mov    %r12,%rdi
    0.00 :   4106:   call   410b <start_xmit+0x48b>
    0.00 :   410b:   mov    %rbp,%rdi
    0.00 :   410e:   call   4113 <start_xmit+0x493>
    0.00 :   4113:   jmp    3ecd <start_xmit+0x24d>
    0.00 :   4118:   call   411d <start_xmit+0x49d>
    0.00 :   411d:   test   %al,%al
    0.00 :   411f:   jne    3ecd <start_xmit+0x24d>
    0.00 :   4125:   xor    %esi,%esi
    0.00 :   4127:   mov    %rbx,%rdi
    0.00 :   412a:   call   390 <free_old_xmit_skbs>
    0.00 :   412f:   mov    (%rbx),%rax
    0.00 :   4132:   cmpl   $0x12,0x2c(%rax)
    0.00 :   4136:   jbe    3ecd <start_xmit+0x24d>
    0.00 :   413c:   mov    (%rsp),%rax
    0.00 :   4140:   add    0x400(%rbp),%rax
    0.00 :   4147:   lock andb $0xfe,0x90(%rax)
    0.00 :   414f:   mov    (%rbx),%rdi
    0.00 :   4152:   call   4157 <start_xmit+0x4d7>
    0.00 :   4157:   jmp    3ecd <start_xmit+0x24d>
    0.00 :   415c:   cmpq   $0x0,0x18(%r15)
    0.00 :   4161:   je     4084 <start_xmit+0x404>
    0.00 :   4167:   ud2
    5.43 :   4169:   mov    (%rbx),%rdi // [virtio_net][4169]
    0.00 :   416c:   call   4171 <start_xmit+0x4f1>
    0.00 :   4171:   test   %al,%al
    0.00 :   4173:   je     3ef5 <start_xmit+0x275>
    0.00 :   4179:   addq   $0x1,0x2b0(%rbx)
   12.42 :   4181:   jmp    3ef5 <start_xmit+0x275> // [virtio_net][4181]
    0.00 :   4186:   mov    $0xffffffb9,%edx
    0.00 :   418b:   addq   $0x1,0x1c0(%rbp)
    0.00 :   4193:   mov    %edx,0x18(%rsp)
    0.00 :   4197:   call   419c <start_xmit+0x51c>
    0.00 :   419c:   mov    0x18(%rsp),%edx
    0.00 :   41a0:   test   %eax,%eax
    0.00 :   41a2:   jne    41a8 <start_xmit+0x528>
    0.00 :   41a8:   addq   $0x1,0x168(%rbp)
    0.00 :   41b0:   mov    $0x1,%esi
    0.00 :   41b5:   mov    %r15,%rdi
    0.00 :   41b8:   call   41bd <start_xmit+0x53d>
    0.00 :   41bd:   jmp    3ef5 <start_xmit+0x275>
    0.00 :   41c2:   ud2
    0.00 :   41c4:   call   41c9 <start_xmit+0x549>
    0.00 :   41c9:   jmp    40ac <start_xmit+0x42c>
    0.00 :   41ce:   ud2
    0.00 :   41d0:   mov    $0x3,%esi
    0.00 :   41d5:   call   41da <start_xmit+0x55a>
    0.00 :   41da:   jmp    40ac <start_xmit+0x42c>
    0.00 :   41df:   mov    0x0(%rip),%rcx        # 41e6 <start_xmit+0x566>
    0.00 :   41e6:   jmp    3e48 <start_xmit+0x1c8>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   21.96 libc.so.6[53f09]
   13.64 libc.so.6[54df2]
   11.03 libc.so.6[55bdf]
   10.65 libc.so.6[5555a]
    5.97 libc.so.6[54616]
    5.23 libc.so.6[53e90]
    5.08 libc.so.6[55a4e]
    4.76 libc.so.6[5671e]
    4.61 libc.so.6[53ebd]
    4.55 libc.so.6[55201]
    4.45 libc.so.6[55403]
    4.21 libc.so.6[54fc4]
    3.87 libc.so.6[557c7]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (19 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000053e90 <__GI___printf_fp_l>:
         : 6     __printf_fp_l():
    5.23 :   53e90:  endbr64 // libc.so.6[53e90]
    0.00 :   53e94:  push   %rbp
    0.00 :   53e95:  mov    %rsp,%rbp
    0.00 :   53e98:  push   %r15
    0.00 :   53e9a:  push   %r14
    0.00 :   53e9c:  push   %r13
    0.00 :   53e9e:  push   %r12
    0.00 :   53ea0:  push   %rbx
    0.00 :   53ea1:  mov    %rdi,%rbx
    0.00 :   53ea4:  mov    %rdx,%rdi
    0.00 :   53ea7:  sub    $0x128,%rsp
    0.00 :   53eae:  mov    %rdx,-0xb8(%rbp)
    0.00 :   53eb5:  mov    %rcx,%rdx
    0.00 :   53eb8:  movzbl 0xc(%rdi),%r14d
    4.61 :   53ebd:  mov    %rsi,-0xf8(%rbp) // libc.so.6[53ebd]
    0.00 :   53ec4:  mov    %fs:0x28,%rax
    0.00 :   53ecd:  mov    %rax,-0x38(%rbp)
    0.00 :   53ed1:  xor    %eax,%eax
    0.00 :   53ed3:  movzbl 0xd(%rdi),%eax
    0.00 :   53ed7:  movl   $0x0,-0xa4(%rbp)
    0.00 :   53ee1:  movl   $0x0,-0xa0(%rbp)
    0.00 :   53eeb:  mov    %eax,%ecx
    0.00 :   53eed:  shr    $0x2,%cl
    0.00 :   53ef0:  and    $0x1,%ecx
    0.00 :   53ef3:  mov    %ecx,-0xbc(%rbp)
    0.00 :   53ef9:  test   $0x1,%al
    0.00 :   53efb:  jne    541f0 <__GI___printf_fp_l+0x360>
    0.00 :   53f01:  mov    0x8(%rsi),%rcx
    0.00 :   53f05:  mov    0x38(%rcx),%rdi
   21.96 :   53f09:  mov    0x50(%rcx),%esi // libc.so.6[53f09]
    0.00 :   53f0c:  mov    %rdi,-0x110(%rbp)
    0.00 :   53f13:  mov    %esi,-0xc0(%rbp)
    0.00 :   53f19:  test   %r14b,%r14b
    0.00 :   53f1c:  js     540f8 <__GI___printf_fp_l+0x268>
    0.00 :   53f22:  movq   $0x0,-0xe8(%rbp)
    0.00 :   53f2d:  movl   $0x0,-0x108(%rbp)
    0.00 :   53f37:  movq   $0x0,-0x118(%rbp)
    0.00 :   53f42:  mov    (%rdx),%rdx
    0.00 :   53f45:  test   $0x10,%al
    0.00 :   53f47:  je     541b0 <__GI___printf_fp_l+0x320>
    0.00 :   53f4d:  movdqa (%rdx),%xmm2
    0.00 :   53f51:  movdqa %xmm2,%xmm1
    0.00 :   53f55:  movdqa %xmm2,%xmm0
    0.00 :   53f59:  movaps %xmm2,-0xd0(%rbp)
    0.00 :   53f60:  call   1795c0 <__unordtf2>
    0.00 :   53f65:  test   %rax,%rax
    0.00 :   53f68:  jne    54d92 <__GI___printf_fp_l+0xf02>
    0.00 :   53f6e:  movdqa -0xd0(%rbp),%xmm0
    0.00 :   53f76:  movdqa 0x14ccd2(%rip),%xmm1        # 1a0c50 <in6addr_any+0x1a0>
    0.00 :   53f7e:  pand   0x14ccba(%rip),%xmm0        # 1a0c40 <in6addr_any+0x190>
    0.00 :   53f86:  movaps %xmm0,-0xe0(%rbp)
    0.00 :   53f8d:  call   1795c0 <__unordtf2>
    0.00 :   53f92:  test   %rax,%rax
    0.00 :   53f95:  jne    54c00 <__GI___printf_fp_l+0xd70>
    0.00 :   53f9b:  movdqa 0x14ccad(%rip),%xmm1        # 1a0c50 <in6addr_any+0x1a0>
    0.00 :   53fa3:  movdqa -0xe0(%rbp),%xmm0
    0.00 :   53fab:  call   179b90 <__letf2>
    0.00 :   53fb0:  test   %rax,%rax
    0.00 :   53fb3:  jle    54c00 <__GI___printf_fp_l+0xd70>
    0.00 :   53fb9:  movaps -0xd0(%rbp),%xmm3
    0.00 :   53fc0:  movmskps %xmm3,%r12d
    0.00 :   53fc4:  and    $0x8,%r12d
    0.00 :   53fc8:  mov    -0xb8(%rbp),%rax
    0.00 :   53fcf:  mov    %r12d,-0xa4(%rbp)
    0.00 :   53fd6:  lea    0x142fa6(%rip),%rcx        # 196f83 <not_available+0xc6>
    0.00 :   53fdd:  lea    0x14d2d4(%rip),%r15        # 1a12b8 <default_rwlockattr+0x2c8>
    0.00 :   53fe4:  movslq 0x8(%rax),%rdx
    0.00 :   53fe8:  mov    0x17ee09(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   53fef:  mov    %fs:(%rax),%rax
    0.00 :   53ff3:  testb  $0x1,0x1(%rax,%rdx,2)
    0.00 :   53ff8:  lea    0x14307d(%rip),%rax        # 19707c <not_available+0x1bf>
    0.00 :   53fff:  cmovne %rax,%rcx
    0.00 :   54003:  lea    0x14d2ce(%rip),%rax        # 1a12d8 <default_rwlockattr+0x2e8>
    0.00 :   5400a:  cmovne %rax,%r15
    0.00 :   5400e:  mov    -0xb8(%rbp),%rax
    0.00 :   54015:  mov    0x4(%rax),%r13d
    0.00 :   54019:  mov    %r14d,%eax
    0.00 :   5401c:  shr    $0x5,%al
    0.00 :   5401f:  xor    $0x1,%eax
    0.00 :   54022:  and    $0x1,%eax
    0.00 :   54025:  test   %r12d,%r12d
    0.00 :   54028:  je     542e0 <__GI___printf_fp_l+0x450>
    0.00 :   5402e:  sub    $0x4,%r13d
    0.00 :   54032:  test   %r13d,%r13d
    0.00 :   54035:  setg   %r8b
    0.00 :   54039:  jle    54043 <__GI___printf_fp_l+0x1b3>
    0.00 :   5403b:  test   %al,%al
    0.00 :   5403d:  jne    54160 <__GI___printf_fp_l+0x2d0>
    0.00 :   54043:  mov    -0xbc(%rbp),%eax
    0.00 :   54049:  xor    %r12d,%r12d
    0.00 :   5404c:  test   %eax,%eax
    0.00 :   5404e:  je     54468 <__GI___printf_fp_l+0x5d8>
    0.00 :   54054:  mov    0xa0(%rbx),%rax
    0.00 :   5405b:  test   %rax,%rax
    0.00 :   5405e:  je     5616a <__GI___printf_fp_l+0x22da>
    0.00 :   54064:  mov    0x20(%rax),%rdx
    0.00 :   54068:  cmp    0x28(%rax),%rdx
    0.00 :   5406c:  jae    5616a <__GI___printf_fp_l+0x22da>
    0.00 :   54072:  lea    0x4(%rdx),%rcx
    0.00 :   54076:  add    $0x1,%r12d
    0.00 :   5407a:  mov    %rcx,0x20(%rax)
    0.00 :   5407e:  movl   $0x2d,(%rdx)
    0.00 :   54084:  mov    (%r15),%esi
    0.00 :   54087:  lea    0x3(%r12),%r14d
    0.00 :   5408c:  test   %rax,%rax
    0.00 :   5408f:  je     540d3 <__GI___printf_fp_l+0x243>
    0.00 :   54091:  mov    0x20(%rax),%rdx
    0.00 :   54095:  cmp    0x28(%rax),%rdx
    0.00 :   54099:  jae    540d3 <__GI___printf_fp_l+0x243>
    0.00 :   5409b:  lea    0x4(%rdx),%rcx
    0.00 :   5409f:  cmp    $0xffffffff,%esi
    0.00 :   540a2:  mov    %rcx,0x20(%rax)
    0.00 :   540a6:  sete   %al
    0.00 :   540a9:  mov    %esi,(%rdx)
    0.00 :   540ab:  test   %al,%al
    0.00 :   540ad:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   540b3:  add    $0x1,%r12d
    0.00 :   540b7:  cmp    %r14d,%r12d
    0.00 :   540ba:  je     5436c <__GI___printf_fp_l+0x4dc>
    0.00 :   540c0:  mov    0xa0(%rbx),%rax
    0.00 :   540c7:  add    $0x4,%r15
    0.00 :   540cb:  mov    (%r15),%esi
    0.00 :   540ce:  test   %rax,%rax
    0.00 :   540d1:  jne    54091 <__GI___printf_fp_l+0x201>
    0.00 :   540d3:  mov    %rbx,%rdi
    0.00 :   540d6:  mov    %r8b,-0xd0(%rbp)
    0.00 :   540dd:  call   7bc60 <__woverflow>
    0.00 :   540e2:  movzbl -0xd0(%rbp),%r8d
    0.00 :   540ea:  cmp    $0xffffffff,%eax
    0.00 :   540ed:  sete   %al
    0.00 :   540f0:  jmp    540ab <__GI___printf_fp_l+0x21b>
    0.00 :   540f2:  nopw   0x0(%rax,%rax,1)
    0.00 :   540f8:  mov    0x48(%rcx),%rdi
    0.00 :   540fc:  mov    %rdi,-0xe8(%rbp)
    0.00 :   54103:  movzbl (%rdi),%edi
    0.00 :   54106:  mov    %edi,%esi
    0.00 :   54108:  mov    %dil,-0xd0(%rbp)
    0.00 :   5410f:  lea    -0x1(%rsi),%edi
    0.00 :   54112:  cmp    $0x7d,%dil
    0.00 :   54116:  ja     53f22 <__GI___printf_fp_l+0x92>
    0.00 :   5411c:  mov    -0xbc(%rbp),%r9d
    0.00 :   54123:  test   %r9d,%r9d
    0.00 :   54126:  je     54d20 <__GI___printf_fp_l+0xe90>
    0.00 :   5412c:  movq   $0x0,-0x118(%rbp)
    0.00 :   54137:  mov    0x58(%rcx),%esi
    0.00 :   5413a:  xor    %ecx,%ecx
    0.00 :   5413c:  test   %esi,%esi
    0.00 :   5413e:  cmovne -0xe8(%rbp),%rcx
    0.00 :   54146:  mov    %esi,-0x108(%rbp)
    0.00 :   5414c:  mov    %rcx,-0xe8(%rbp)
    0.00 :   54153:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   54158:  nopl   0x0(%rax,%rax,1)
    0.00 :   54160:  mov    -0xbc(%rbp),%esi
    0.00 :   54166:  movslq %r13d,%r12
    0.00 :   54169:  test   %esi,%esi
    0.00 :   5416b:  je     54490 <__GI___printf_fp_l+0x600>
    0.00 :   54171:  mov    %r12,%rdx
    0.00 :   54174:  mov    $0x20,%esi
    0.00 :   54179:  mov    %rbx,%rdi
    0.00 :   5417c:  call   7a890 <_IO_wpadn>
    0.00 :   54181:  cmp    %r12,%rax
    0.00 :   54184:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   5418a:  mov    -0xa4(%rbp),%edx
    0.00 :   54190:  test   %edx,%edx
    0.00 :   54192:  je     54c9c <__GI___printf_fp_l+0xe0c>
    0.00 :   54198:  mov    %r13d,%r12d
    0.00 :   5419b:  mov    $0x1,%r8d
    0.00 :   541a1:  jmp    54054 <__GI___printf_fp_l+0x1c4>
    0.00 :   541a6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   541b0:  test   $0x1,%r14b
    0.00 :   541b4:  je     543d0 <__GI___printf_fp_l+0x540>
    0.00 :   541ba:  fldt   (%rdx)
    0.00 :   541bc:  fucomi %st(0),%st
    0.00 :   541be:  jp     562fd <__GI___printf_fp_l+0x246d>
    0.00 :   541c4:  fld    %st(0)
    0.00 :   541c6:  fabs
    0.00 :   541c8:  fldt   0x14c982(%rip)        # 1a0b50 <in6addr_any+0xa0>
    0.00 :   541ce:  fxch   %st(1)
    0.00 :   541d0:  fucomip %st(1),%st
    0.00 :   541d2:  fstp   %st(0)
    0.00 :   541d4:  jbe    544d0 <__GI___printf_fp_l+0x640>
    0.00 :   541da:  fxam
    0.00 :   541dc:  fnstsw %ax
    0.00 :   541de:  fstp   %st(0)
    0.00 :   541e0:  mov    %eax,%r12d
    0.00 :   541e3:  and    $0x200,%r12d
    0.00 :   541ea:  jmp    53fc8 <__GI___printf_fp_l+0x138>
    0.00 :   541ef:  nop
    0.00 :   541f0:  mov    -0xf8(%rbp),%rdi
    0.00 :   541f7:  mov    0x20(%rdi),%rcx
    0.00 :   541fb:  mov    0x48(%rcx),%rsi
    0.00 :   541ff:  cmpb   $0x0,(%rsi)
    0.00 :   54202:  mov    %rsi,-0x110(%rbp)
    0.00 :   54209:  jne    5421a <__GI___printf_fp_l+0x38a>
    0.00 :   5420b:  mov    0x8(%rdi),%rdi
    0.00 :   5420f:  mov    0x38(%rdi),%rdi
    0.00 :   54213:  mov    %rdi,-0x110(%rbp)
    0.00 :   5421a:  mov    0x190(%rcx),%edi
    0.00 :   54220:  mov    %edi,-0x108(%rbp)
    0.00 :   54226:  test   %edi,%edi
    0.00 :   54228:  jne    54260 <__GI___printf_fp_l+0x3d0>
    0.00 :   5422a:  mov    -0xf8(%rbp),%rdi
    0.00 :   54231:  mov    0x8(%rdi),%rdi
    0.00 :   54235:  mov    0x50(%rdi),%esi
    0.00 :   54238:  mov    %esi,-0xc0(%rbp)
    0.00 :   5423e:  test   %r14b,%r14b
    0.00 :   54241:  js     54275 <__GI___printf_fp_l+0x3e5>
    0.00 :   54243:  movq   $0x0,-0xe8(%rbp)
    0.00 :   5424e:  movq   $0x0,-0x118(%rbp)
    0.00 :   54259:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   5425e:  xchg   %ax,%ax
    0.00 :   54260:  test   %r14b,%r14b
    0.00 :   54263:  jns    54430 <__GI___printf_fp_l+0x5a0>
    0.00 :   54269:  mov    -0x108(%rbp),%edi
    0.00 :   5426f:  mov    %edi,-0xc0(%rbp)
    0.00 :   54275:  mov    0x58(%rcx),%rdi
    0.00 :   54279:  mov    %rdi,-0xe8(%rbp)
    0.00 :   54280:  movzbl (%rdi),%edi
    0.00 :   54283:  mov    %edi,%esi
    0.00 :   54285:  mov    %dil,-0xd0(%rbp)
    0.00 :   5428c:  lea    -0x1(%rsi),%edi
    0.00 :   5428f:  cmp    $0x7d,%dil
    0.00 :   54293:  ja     53f22 <__GI___printf_fp_l+0x92>
    0.00 :   54299:  mov    -0xbc(%rbp),%r10d
    0.00 :   542a0:  test   %r10d,%r10d
    0.00 :   542a3:  je     54d5c <__GI___printf_fp_l+0xecc>
    0.00 :   542a9:  mov    0x198(%rcx),%edi
    0.00 :   542af:  xor    %ecx,%ecx
    0.00 :   542b1:  movq   $0x0,-0x118(%rbp)
    0.00 :   542bc:  test   %edi,%edi
    0.00 :   542be:  cmovne -0xe8(%rbp),%rcx
    0.00 :   542c6:  mov    %edi,-0x108(%rbp)
    0.00 :   542cc:  mov    %rcx,-0xe8(%rbp)
    0.00 :   542d3:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   542d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   542e0:  test   $0x50,%r14b
    0.00 :   542e4:  jne    54410 <__GI___printf_fp_l+0x580>
    0.00 :   542ea:  sub    $0x3,%r13d
    0.00 :   542ee:  test   %r13d,%r13d
    0.00 :   542f1:  setg   %r8b
    0.00 :   542f5:  jle    542ff <__GI___printf_fp_l+0x46f>
    0.00 :   542f7:  test   %al,%al
    0.00 :   542f9:  jne    54160 <__GI___printf_fp_l+0x2d0>
    0.00 :   542ff:  test   $0x40,%r14b
    0.00 :   54303:  je     54c40 <__GI___printf_fp_l+0xdb0>
    0.00 :   54309:  mov    -0xbc(%rbp),%eax
    0.00 :   5430f:  test   %eax,%eax
    0.00 :   54311:  jne    54cb8 <__GI___printf_fp_l+0xe28>
    0.00 :   54317:  xor    %r15d,%r15d
    0.00 :   5431a:  mov    0x28(%rbx),%rax
    0.00 :   5431e:  cmp    0x30(%rbx),%rax
    0.00 :   54322:  jae    56865 <__GI___printf_fp_l+0x29d5>
    0.00 :   54328:  lea    0x1(%rax),%rdx
    0.00 :   5432c:  add    $0x1,%r15d
    0.00 :   54330:  mov    %rdx,0x28(%rbx)
    0.00 :   54334:  movb   $0x2b,(%rax)
    0.00 :   54337:  lea    0x3(%rcx),%r14
    0.00 :   5433b:  mov    %rcx,%r12
    0.00 :   5433e:  add    $0x1,%r12
    0.00 :   54342:  mov    0x28(%rbx),%rax
    0.00 :   54346:  movzbl -0x1(%r12),%edx
    0.00 :   5434c:  cmp    0x30(%rbx),%rax
    0.00 :   54350:  jae    54c60 <__GI___printf_fp_l+0xdd0>
    0.00 :   54356:  lea    0x1(%rax),%rsi
    0.00 :   5435a:  mov    %rsi,0x28(%rbx)
    0.00 :   5435e:  mov    %dl,(%rax)
    0.00 :   54360:  cmp    %r14,%r12
    0.00 :   54363:  jne    5433e <__GI___printf_fp_l+0x4ae>
    0.00 :   54365:  sub    %ecx,%r12d
    0.00 :   54368:  lea    (%r12,%r15,1),%r14d
    0.00 :   5436c:  mov    -0xb8(%rbp),%rax
    0.00 :   54373:  testb  $0x20,0xc(%rax)
    0.00 :   54377:  je     543ab <__GI___printf_fp_l+0x51b>
    0.00 :   54379:  test   %r8b,%r8b
    0.00 :   5437c:  je     543ab <__GI___printf_fp_l+0x51b>
    0.00 :   5437e:  mov    -0xbc(%rbp),%eax
    0.00 :   54384:  movslq %r13d,%r12
    0.00 :   54387:  mov    $0x20,%esi
    0.00 :   5438c:  mov    %rbx,%rdi
    0.00 :   5438f:  mov    %r12,%rdx
    0.00 :   54392:  test   %eax,%eax
    0.00 :   54394:  je     54bf0 <__GI___printf_fp_l+0xd60>
    0.00 :   5439a:  call   7a890 <_IO_wpadn>
    0.00 :   5439f:  cmp    %r12,%rax
    0.00 :   543a2:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   543a8:  add    %r13d,%r14d
    0.00 :   543ab:  mov    -0x38(%rbp),%rax
    0.00 :   543af:  sub    %fs:0x28,%rax
    0.00 :   543b8:  jne    56ac3 <__GI___printf_fp_l+0x2c33>
    0.00 :   543be:  lea    -0x28(%rbp),%rsp
    0.00 :   543c2:  mov    %r14d,%eax
    0.00 :   543c5:  pop    %rbx
    0.00 :   543c6:  pop    %r12
    0.00 :   543c8:  pop    %r13
    0.00 :   543ca:  pop    %r14
    0.00 :   543cc:  pop    %r15
    0.00 :   543ce:  pop    %rbp
    0.00 :   543cf:  ret
    0.00 :   543d0:  movsd  (%rdx),%xmm0
    0.00 :   543d4:  ucomisd %xmm0,%xmm0
    0.00 :   543d8:  jp     562ef <__GI___printf_fp_l+0x245f>
    0.00 :   543de:  movapd %xmm0,%xmm1
    0.00 :   543e2:  andpd  0x14c7a6(%rip),%xmm1        # 1a0b90 <in6addr_any+0xe0>
    0.00 :   543ea:  ucomisd 0x14cba6(%rip),%xmm1        # 1a0f98 <conversion_rate+0x20>
    0.00 :   543f2:  jbe    54bb8 <__GI___printf_fp_l+0xd28>
    0.00 :   543f8:  movmskpd %xmm0,%r12d
    0.00 :   543fd:  and    $0x1,%r12d
    0.00 :   54401:  jmp    53fc8 <__GI___printf_fp_l+0x138>
    0.00 :   54406:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54410:  sub    $0x4,%r13d
    0.00 :   54414:  test   %r13d,%r13d
    0.00 :   54417:  setg   %r8b
    0.00 :   5441b:  jg     542f7 <__GI___printf_fp_l+0x467>
    0.00 :   54421:  jmp    542ff <__GI___printf_fp_l+0x46f>
    0.00 :   54426:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54430:  mov    -0x108(%rbp),%esi
    0.00 :   54436:  movq   $0x0,-0xe8(%rbp)
    0.00 :   54441:  movl   $0x0,-0x108(%rbp)
    0.00 :   5444b:  mov    %esi,-0xc0(%rbp)
    0.00 :   54451:  movq   $0x0,-0x118(%rbp)
    0.00 :   5445c:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   54461:  nopl   0x0(%rax)
    0.00 :   54468:  xor    %r15d,%r15d
    0.00 :   5446b:  mov    0x28(%rbx),%rax
    0.00 :   5446f:  cmp    0x30(%rbx),%rax
    0.00 :   54473:  jae    565ce <__GI___printf_fp_l+0x273e>
    0.00 :   54479:  lea    0x1(%rax),%rdx
    0.00 :   5447d:  add    $0x1,%r15d
    0.00 :   54481:  mov    %rdx,0x28(%rbx)
    0.00 :   54485:  movb   $0x2d,(%rax)
    0.00 :   54488:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   5448d:  nopl   (%rax)
    0.00 :   54490:  mov    %r12,%rdx
    0.00 :   54493:  mov    $0x20,%esi
    0.00 :   54498:  mov    %rbx,%rdi
    0.00 :   5449b:  mov    %rcx,-0xd0(%rbp)
    0.00 :   544a2:  call   78be0 <_IO_padn>
    0.00 :   544a7:  cmp    %r12,%rax
    0.00 :   544aa:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   544b0:  mov    -0xa4(%rbp),%ecx
    0.00 :   544b6:  test   %ecx,%ecx
    0.00 :   544b8:  mov    -0xd0(%rbp),%rcx
    0.00 :   544bf:  je     54d69 <__GI___printf_fp_l+0xed9>
    0.00 :   544c5:  mov    %r13d,%r15d
    0.00 :   544c8:  mov    $0x1,%r8d
    0.00 :   544ce:  jmp    5446b <__GI___printf_fp_l+0x5db>
    0.00 :   544d0:  sub    $0x10,%rsp
    0.00 :   544d4:  lea    -0x60(%rbp),%r14
    0.00 :   544d8:  lea    -0xa4(%rbp),%rcx
    0.00 :   544df:  mov    $0x2,%esi
    0.00 :   544e4:  fstpt  (%rsp)
    0.00 :   544e7:  mov    %r14,%rdi
    0.00 :   544ea:  lea    -0x98(%rbp),%rdx
    0.00 :   544f1:  call   4f460 <__mpn_extract_long_double>
    0.00 :   544f6:  pop    %rdi
    0.00 :   544f7:  pop    %r8
    0.00 :   544f9:  mov    %eax,%r13d
    0.00 :   544fc:  mov    %rax,%r12
    0.00 :   544ff:  shl    $0x6,%r13d
    0.00 :   54503:  sub    $0x3f,%r13d
    0.00 :   54507:  mov    -0x98(%rbp),%ecx
    0.00 :   5450d:  mov    %rsp,%rsi
    0.00 :   54510:  mov    %r12,-0x88(%rbp)
    0.00 :   54517:  mov    %ecx,%eax
    0.00 :   54519:  neg    %eax
    0.00 :   5451b:  cmovs  %ecx,%eax
    0.00 :   5451e:  add    $0x3f,%eax
    0.00 :   54521:  sar    $0x6,%eax
    0.00 :   54524:  add    $0x4,%eax
    0.00 :   54527:  cltq
    0.00 :   54529:  lea    0x17(,%rax,8),%rax
    0.00 :   54531:  mov    %rax,%rdi
    0.00 :   54534:  mov    %rax,%rdx
    0.00 :   54537:  and    $0xfffffffffffff000,%rdi
    0.00 :   5453e:  and    $0xfffffffffffffff0,%rdx
    0.00 :   54542:  sub    %rdi,%rsi
    0.00 :   54545:  cmp    %rsi,%rsp
    0.00 :   54548:  je     5455f <__GI___printf_fp_l+0x6cf>
    0.00 :   5454a:  sub    $0x1000,%rsp
    0.00 :   54551:  orq    $0x0,0xff8(%rsp)
    0.00 :   5455a:  cmp    %rsi,%rsp
    0.00 :   5455d:  jne    5454a <__GI___printf_fp_l+0x6ba>
    0.00 :   5455f:  and    $0xfff,%edx
    0.00 :   54565:  sub    %rdx,%rsp
    0.00 :   54568:  test   %rdx,%rdx
    0.00 :   5456b:  jne    54dec <__GI___printf_fp_l+0xf5c>
    0.00 :   54571:  mov    %rax,%r8
    0.00 :   54574:  lea    0xf(%rsp),%rdi
    0.00 :   54579:  mov    %rsp,%rsi
    0.00 :   5457c:  mov    %rax,%rdx
    0.00 :   5457f:  and    $0xfffffffffffff000,%r8
    0.00 :   54586:  and    $0xfffffffffffffff0,%rdi
    0.00 :   5458a:  and    $0xfffffffffffffff0,%rdx
    0.00 :   5458e:  sub    %r8,%rsi
    0.00 :   54591:  mov    %rdi,-0x90(%rbp)
    0.00 :   54598:  cmp    %rsi,%rsp
    0.00 :   5459b:  je     545b2 <__GI___printf_fp_l+0x722>
    0.00 :   5459d:  sub    $0x1000,%rsp
    0.00 :   545a4:  orq    $0x0,0xff8(%rsp)
    0.00 :   545ad:  cmp    %rsi,%rsp
    0.00 :   545b0:  jne    5459d <__GI___printf_fp_l+0x70d>
    0.00 :   545b2:  and    $0xfff,%edx
    0.00 :   545b8:  sub    %rdx,%rsp
    0.00 :   545bb:  test   %rdx,%rdx
    0.00 :   545be:  je     545c6 <__GI___printf_fp_l+0x736>
    0.00 :   545c0:  orq    $0x0,-0x8(%rsp,%rdx,1)
    0.00 :   545c6:  lea    0xf(%rsp),%rdx
    0.00 :   545cb:  mov    %rsp,%rsi
    0.00 :   545ce:  and    $0xfffffffffffffff0,%rdx
    0.00 :   545d2:  mov    %rdx,-0x70(%rbp)
    0.00 :   545d6:  mov    %rax,%rdx
    0.00 :   545d9:  and    $0xfffffffffffff000,%rax
    0.00 :   545df:  sub    %rax,%rsi
    0.00 :   545e2:  and    $0xfffffffffffffff0,%rdx
    0.00 :   545e6:  cmp    %rsi,%rsp
    0.00 :   545e9:  je     54600 <__GI___printf_fp_l+0x770>
    0.00 :   545eb:  sub    $0x1000,%rsp
    0.00 :   545f2:  orq    $0x0,0xff8(%rsp)
    0.00 :   545fb:  cmp    %rsi,%rsp
    0.00 :   545fe:  jne    545eb <__GI___printf_fp_l+0x75b>
    0.00 :   54600:  mov    %rdx,%rax
    0.00 :   54603:  and    $0xfff,%eax
    0.00 :   54608:  sub    %rax,%rsp
    0.00 :   5460b:  test   %rax,%rax
    0.00 :   5460e:  je     54616 <__GI___printf_fp_l+0x786>
    0.00 :   54610:  orq    $0x0,-0x8(%rsp,%rax,1)
    5.97 :   54616:  lea    0xf(%rsp),%rax // libc.so.6[54616]
    0.00 :   5461b:  movq   $0x0,-0x78(%rbp)
    0.00 :   54623:  and    $0xfffffffffffffff0,%rax
    0.00 :   54627:  mov    %rax,-0x80(%rbp)
    0.00 :   5462b:  cmp    $0x2,%ecx
    0.00 :   5462e:  jle    5555a <__GI___printf_fp_l+0x16ca>
    0.00 :   54634:  lea    (%rcx,%r13,1),%eax
    0.00 :   54638:  test   %eax,%eax
    0.00 :   5463a:  lea    0x3f(%rax),%edx
    0.00 :   5463d:  cmovns %eax,%edx
    0.00 :   54640:  sar    $0x6,%edx
    0.00 :   54643:  test   $0x3f,%al
    0.00 :   54645:  jne    55ed1 <__GI___printf_fp_l+0x2041>
    0.00 :   5464b:  test   %r12,%r12
    0.00 :   5464e:  jle    56162 <__GI___printf_fp_l+0x22d2>
    0.00 :   54654:  movslq %edx,%r13
    0.00 :   54657:  mov    %r14,%rsi
    0.00 :   5465a:  mov    %ecx,-0xd0(%rbp)
    0.00 :   54660:  lea    0x0(,%r12,8),%rdx
    0.00 :   54668:  lea    (%rdi,%r13,8),%rdi
    0.00 :   5466c:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   54671:  mov    -0xd0(%rbp),%ecx
    0.00 :   54677:  add    %r13,%r12
    0.00 :   5467a:  mov    %r13,%rdx
    0.00 :   5467d:  mov    %r12,-0x88(%rbp)
    0.00 :   54684:  test   %rdx,%rdx
    0.00 :   54687:  jle    546a7 <__GI___printf_fp_l+0x817>
    0.00 :   54689:  mov    -0x90(%rbp),%rdi
    0.00 :   54690:  shl    $0x3,%rdx
    0.00 :   54694:  xor    %esi,%esi
    0.00 :   54696:  mov    %ecx,-0xd0(%rbp)
    0.00 :   5469c:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   546a1:  mov    -0xd0(%rbp),%ecx
    0.00 :   546a7:  mov    $0xc,%r15d
    0.00 :   546ad:  xor    %r13d,%r13d
    0.00 :   546b0:  xor    %r8d,%r8d
    0.00 :   546b3:  mov    -0x78(%rbp),%rdx
    0.00 :   546b7:  lea    0x137a1a(%rip),%r14        # 18c0d8 <_fpioconst_pow10+0x138>
    0.00 :   546be:  mov    %rbx,-0xd0(%rbp)
    0.00 :   546c5:  mov    %r13d,%ebx
    0.00 :   546c8:  mov    %r15d,%r13d
    0.00 :   546cb:  lea    -0x138(%r14),%r12
    0.00 :   546d2:  mov    %r8d,%r15d
    0.00 :   546d5:  jmp    5473e <__GI___printf_fp_l+0x8ae>
    0.00 :   546d7:  nopw   0x0(%rax,%rax,1)
    0.00 :   546e0:  mov    -0xb8(%rbp),%rax
    0.00 :   546e7:  testb  $0x10,0xd(%rax)
    0.00 :   546eb:  jne    54e50 <__GI___printf_fp_l+0xfc0>
    0.00 :   546f1:  mov    0x8(%r14),%rdx
    0.00 :   546f5:  mov    (%r14),%rax
    0.00 :   546f8:  lea    0x137a21(%rip),%rsi        # 18c120 <__tens>
    0.00 :   546ff:  mov    %rdx,-0x68(%rbp)
    0.00 :   54703:  lea    (%rsi,%rax,8),%rsi
    0.00 :   54707:  shl    $0x3,%rdx
    0.00 :   5470b:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   54710:  mov    -0x68(%rbp),%rdx
    0.00 :   54714:  cmp    %rdx,-0x88(%rbp)
    0.00 :   5471b:  jg     547a0 <__GI___printf_fp_l+0x910>
    0.00 :   54721:  je     555a0 <__GI___printf_fp_l+0x1710>
    0.00 :   54727:  mov    -0x78(%rbp),%rdx
    0.00 :   5472b:  sub    $0x1,%r13d
    0.00 :   5472f:  cmp    %r12,%r14
    0.00 :   54732:  je     547f2 <__GI___printf_fp_l+0x962>
    0.00 :   54738:  mov    -0x98(%rbp),%ecx
    0.00 :   5473e:  mov    -0x8(%r14),%eax
    0.00 :   54742:  sub    $0x18,%r14
    0.00 :   54746:  add    %ebx,%eax
    0.00 :   54748:  sub    $0x1,%eax
    0.00 :   5474b:  cmp    %ecx,%eax
    0.00 :   5474d:  jg     5472b <__GI___printf_fp_l+0x89b>
    0.00 :   5474f:  mov    -0x70(%rbp),%rdi
    0.00 :   54753:  test   %rdx,%rdx
    0.00 :   54756:  je     546e0 <__GI___printf_fp_l+0x850>
    0.00 :   54758:  mov    (%r14),%rcx
    0.00 :   5475b:  mov    0x8(%r14),%rax
    0.00 :   5475f:  lea    0x1379ba(%rip),%rsi        # 18c120 <__tens>
    0.00 :   54766:  lea    0x8(%rsi,%rcx,8),%rcx
    0.00 :   5476b:  mov    -0x80(%rbp),%rsi
    0.00 :   5476f:  lea    -0x1(%rax),%r8
    0.00 :   54773:  call   4e060 <__mpn_mul>
    0.00 :   54778:  mov    0x8(%r14),%rdx
    0.00 :   5477c:  add    -0x78(%rbp),%rdx
    0.00 :   54780:  test   %rax,%rax
    0.00 :   54783:  je     54e98 <__GI___printf_fp_l+0x1008>
    0.00 :   54789:  sub    $0x1,%rdx
    0.00 :   5478d:  mov    %rdx,-0x68(%rbp)
    0.00 :   54791:  cmp    %rdx,-0x88(%rbp)
    0.00 :   54798:  jle    54721 <__GI___printf_fp_l+0x891>
    0.00 :   5479a:  nopw   0x0(%rax,%rax,1)
    0.00 :   547a0:  mov    -0x70(%rbp),%rsi
    0.00 :   547a4:  mov    -0x80(%rbp),%rdi
    0.00 :   547a8:  mov    %rdx,-0x78(%rbp)
    0.00 :   547ac:  shl    $0x3,%rdx
    0.00 :   547b0:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   547b5:  mov    -0x78(%rbp),%rdx
    0.00 :   547b9:  mov    -0x80(%rbp),%rax
    0.00 :   547bd:  bsr    -0x8(%rax,%rdx,8),%rax
    0.00 :   547c3:  mov    %edx,%ecx
    0.00 :   547c5:  shl    $0x6,%ecx
    0.00 :   547c8:  lea    -0x81(%rcx),%r10d
    0.00 :   547cf:  mov    %r13d,%ecx
    0.00 :   547d2:  sub    $0x1,%r13d
    0.00 :   547d6:  mov    %r10d,%ebx
    0.00 :   547d9:  xor    $0x3f,%rax
    0.00 :   547dd:  sub    %eax,%ebx
    0.00 :   547df:  mov    $0x1,%eax
    0.00 :   547e4:  shl    %cl,%eax
    0.00 :   547e6:  or     %eax,%r15d
    0.00 :   547e9:  cmp    %r12,%r14
    0.00 :   547ec:  jne    54738 <__GI___printf_fp_l+0x8a8>
    0.00 :   547f2:  mov    %r15d,-0x98(%rbp)
    0.00 :   547f9:  mov    -0xd0(%rbp),%rbx
    0.00 :   54800:  test   %rdx,%rdx
    0.00 :   54803:  jle    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   54805:  mov    -0x80(%rbp),%rdi
    0.00 :   54809:  mov    -0x8(%rdi,%rdx,8),%rax
    0.00 :   5480e:  mov    (%rdi),%r8
    0.00 :   54811:  bsr    %rax,%rcx
    0.00 :   54815:  xor    $0x3f,%rcx
    0.00 :   54819:  mov    %ecx,%r11d
    0.00 :   5481c:  test   %r8,%r8
    0.00 :   5481f:  jne    56a06 <__GI___printf_fp_l+0x2b76>
    0.00 :   54825:  mov    -0x90(%rbp),%r9
    0.00 :   5482c:  mov    %rdi,%rsi
    0.00 :   5482f:  xor    %r13d,%r13d
    0.00 :   54832:  jmp    54851 <__GI___printf_fp_l+0x9c1>
    0.00 :   54834:  nopl   0x0(%rax)
    0.00 :   54838:  mov    0x8(%rsi),%rax
    0.00 :   5483c:  add    $0x8,%rsi
    0.00 :   54840:  add    $0x1,%r8
    0.00 :   54844:  add    $0x8,%r13
    0.00 :   54848:  test   %rax,%rax
    0.00 :   5484b:  jne    5609b <__GI___printf_fp_l+0x220b>
    0.00 :   54851:  cmpq   $0x0,(%r9,%r13,1)
    0.00 :   54856:  mov    %r8d,%r14d
    0.00 :   54859:  je     54838 <__GI___printf_fp_l+0x9a8>
    0.00 :   5485b:  test   %ecx,%ecx
    0.00 :   5485d:  jne    56405 <__GI___printf_fp_l+0x2575>
    0.00 :   54863:  test   %r8d,%r8d
    0.00 :   54866:  jne    560a7 <__GI___printf_fp_l+0x2217>
    0.00 :   5486c:  nopl   0x0(%rax)
    0.00 :   54870:  mov    -0xb8(%rbp),%rsi
    0.00 :   54877:  mov    0x17e56a(%rip),%rdx        # 1d2de8 <_DYNAMIC+0x268>
    0.00 :   5487e:  mov    0x4(%rsi),%eax
    0.00 :   54881:  movslq 0x8(%rsi),%rcx
    0.00 :   54885:  mov    (%rsi),%esi
    0.00 :   54887:  mov    %eax,-0x138(%rbp)
    0.00 :   5488d:  mov    %fs:(%rdx),%rdx
    0.00 :   54891:  mov    %rcx,%rax
    0.00 :   54894:  mov    %esi,-0xf0(%rbp)
    0.00 :   5489a:  mov    (%rdx,%rcx,4),%edi
    0.00 :   5489d:  mov    %edi,-0x13c(%rbp)
    0.00 :   548a3:  cmp    $0x65,%dil
    0.00 :   548a7:  je     55938 <__GI___printf_fp_l+0x1aa8>
    0.00 :   548ad:  cmpb   $0x66,-0x13c(%rbp)
    0.00 :   548b4:  je     55a4e <__GI___printf_fp_l+0x1bbe>
    0.00 :   548ba:  movl   $0x6,-0x130(%rbp)
    0.00 :   548c4:  mov    -0xf0(%rbp),%edi
    0.00 :   548ca:  test   %edi,%edi
    0.00 :   548cc:  js     548dc <__GI___printf_fp_l+0xa4c>
    0.00 :   548ce:  mov    $0x1,%edx
    0.00 :   548d3:  cmovne %edi,%edx
    0.00 :   548d6:  mov    %edx,-0x130(%rbp)
    0.00 :   548dc:  mov    -0xa0(%rbp),%r15d
    0.00 :   548e3:  mov    -0x98(%rbp),%edx
    0.00 :   548e9:  test   %r15d,%r15d
    0.00 :   548ec:  je     55ad3 <__GI___printf_fp_l+0x1c43>
    0.00 :   548f2:  cmp    $0x4,%edx
    0.00 :   548f5:  jg     55e75 <__GI___printf_fp_l+0x1fe5>
    0.00 :   548fb:  movl   $0x0,-0x100(%rbp)
    0.00 :   54905:  mov    -0x130(%rbp),%eax
    0.00 :   5490b:  mov    %eax,-0xe0(%rbp)
    0.00 :   54911:  movslq -0x130(%rbp),%rax
    0.00 :   54918:  add    $0x5,%rax
    0.00 :   5491c:  mov    %rax,-0x120(%rbp)
    0.00 :   54923:  mov    $0x66,%eax
    0.00 :   54928:  mov    %eax,-0x9c(%rbp)
    0.00 :   5492e:  mov    -0xb8(%rbp),%rax
    0.00 :   54935:  xor    %r13d,%r13d
    0.00 :   54938:  testb  $0x8,0xc(%rax)
    0.00 :   5493c:  mov    -0xe0(%rbp),%eax
    0.00 :   54942:  cmove  %r13d,%eax
    0.00 :   54946:  mov    %eax,-0xf0(%rbp)
    0.00 :   5494c:  cmpq   $0x0,-0xe8(%rbp)
    0.00 :   54954:  je     555c8 <__GI___printf_fp_l+0x1738>
    0.00 :   5495a:  mov    -0xe8(%rbp),%rax
    0.00 :   54961:  movzbl (%rax),%eax
    0.00 :   54964:  mov    %al,-0xd0(%rbp)
    0.00 :   5496a:  sub    $0x1,%eax
    0.00 :   5496d:  cmp    $0x7d,%al
    0.00 :   5496f:  ja     55ea4 <__GI___printf_fp_l+0x2014>
    0.00 :   54975:  mov    -0x100(%rbp),%edx
    0.00 :   5497b:  mov    -0xe8(%rbp),%rax
    0.00 :   54982:  xor    %r8d,%r8d
    0.00 :   54985:  jmp    549b4 <__GI___printf_fp_l+0xb24>
    0.00 :   54987:  nopw   0x0(%rax,%rax,1)
    0.00 :   54990:  movzbl 0x1(%rax),%esi
    0.00 :   54994:  add    $0x1,%rax
    0.00 :   54998:  lea    0x1(%r8),%edi
    0.00 :   5499c:  sub    %ecx,%edx
    0.00 :   5499e:  cmp    $0x7e,%sil
    0.00 :   549a2:  ja     56128 <__GI___printf_fp_l+0x2298>
    0.00 :   549a8:  test   %sil,%sil
    0.00 :   549ab:  je     56139 <__GI___printf_fp_l+0x22a9>
    0.00 :   549b1:  mov    %edi,%r8d
    0.00 :   549b4:  movsbl (%rax),%ecx
    0.00 :   549b7:  cmp    %edx,%ecx
    0.00 :   549b9:  jb     54990 <__GI___printf_fp_l+0xb00>
    0.00 :   549bb:  mov    %r8d,%eax
    0.00 :   549be:  mov    %r8d,-0x12c(%rbp)
    0.00 :   549c5:  add    $0x1,%eax
    0.00 :   549c8:  cltq
    0.00 :   549ca:  add    %rax,-0x120(%rbp)
    0.00 :   549d1:  mov    -0x120(%rbp),%rsi
    0.00 :   549d8:  movabs $0x3ffffffffffffffc,%rax
    0.00 :   549e2:  cmp    %rsi,%rax
    0.00 :   549e5:  jb     55e62 <__GI___printf_fp_l+0x1fd2>
    0.00 :   549eb:  movslq -0xe0(%rbp),%rax
    0.00 :   549f2:  mov    -0x120(%rbp),%rsi
    0.00 :   549f9:  cmp    %rax,%rsi
    0.00 :   549fc:  jb     55e62 <__GI___printf_fp_l+0x1fd2>
    0.00 :   54a02:  lea    0x8(,%rsi,4),%r12
    0.00 :   54a0a:  mov    %r12,%rdi
    0.00 :   54a0d:  call   87570 <__libc_alloca_cutoff>
    0.00 :   54a12:  cmp    $0x1000,%r12
    0.00 :   54a19:  jbe    54a23 <__GI___printf_fp_l+0xb93>
    0.00 :   54a1b:  test   %eax,%eax
    0.00 :   54a1d:  je     56358 <__GI___printf_fp_l+0x24c8>
    0.00 :   54a23:  add    $0x17,%r12
    0.00 :   54a27:  mov    %rsp,%rdx
    0.00 :   54a2a:  mov    %r12,%rax
    0.00 :   54a2d:  and    $0xfffffffffffff000,%r12
    0.00 :   54a34:  sub    %r12,%rdx
    0.00 :   54a37:  and    $0xfffffffffffffff0,%rax
    0.00 :   54a3b:  cmp    %rdx,%rsp
    0.00 :   54a3e:  je     54a55 <__GI___printf_fp_l+0xbc5>
    0.00 :   54a40:  sub    $0x1000,%rsp
    0.00 :   54a47:  orq    $0x0,0xff8(%rsp)
    0.00 :   54a50:  cmp    %rdx,%rsp
    0.00 :   54a53:  jne    54a40 <__GI___printf_fp_l+0xbb0>
    0.00 :   54a55:  and    $0xfff,%eax
    0.00 :   54a5a:  sub    %rax,%rsp
    0.00 :   54a5d:  test   %rax,%rax
    0.00 :   54a60:  je     54a68 <__GI___printf_fp_l+0xbd8>
    0.00 :   54a62:  orq    $0x0,-0x8(%rsp,%rax,1)
    0.00 :   54a68:  movl   $0x1,-0x140(%rbp)
    0.00 :   54a72:  lea    0xf(%rsp),%rax
    0.00 :   54a77:  movq   $0x0,-0x150(%rbp)
    0.00 :   54a82:  and    $0xfffffffffffffff0,%rax
    0.00 :   54a86:  mov    %rax,-0x128(%rbp)
    0.00 :   54a8d:  mov    -0x128(%rbp),%rax
    0.00 :   54a94:  mov    -0xa0(%rbp),%r14d
    0.00 :   54a9b:  lea    0x8(%rax),%r8
    0.00 :   54a9f:  test   %r14d,%r14d
    0.00 :   54aa2:  je     54ab1 <__GI___printf_fp_l+0xc21>
    0.00 :   54aa4:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   54aab:  je     5604b <__GI___printf_fp_l+0x21bb>
    0.00 :   54ab1:  movslq -0x100(%rbp),%rax
    0.00 :   54ab8:  test   %eax,%eax
    0.00 :   54aba:  jle    564f0 <__GI___printf_fp_l+0x2660>
    0.00 :   54ac0:  lea    -0xa0(%rbp),%r14
    0.00 :   54ac7:  mov    -0x128(%rbp),%rsi
    0.00 :   54ace:  mov    %r8,%r13
    0.00 :   54ad1:  mov    %r8,%r15
    0.00 :   54ad4:  mov    %r14,-0xd0(%rbp)
    0.00 :   54adb:  lea    0x8(%rsi,%rax,4),%r12
    0.00 :   54ae0:  mov    %r14,%rdi
    0.00 :   54ae3:  add    $0x4,%r13
    0.00 :   54ae7:  call   53a60 <hack_digit>
    0.00 :   54aec:  mov    %eax,-0x4(%r13)
    0.00 :   54af0:  cmp    %r12,%r13
    0.00 :   54af3:  jne    54ae0 <__GI___printf_fp_l+0xc50>
    0.00 :   54af5:  mov    -0x100(%rbp),%eax
    0.00 :   54afb:  mov    %r15,%r8
    0.00 :   54afe:  mov    %rax,%rdi
    0.00 :   54b01:  lea    (%r15,%rax,4),%rax
    0.00 :   54b05:  mov    %edi,-0x134(%rbp)
    0.00 :   54b0b:  mov    -0xb8(%rbp),%rdi
    0.00 :   54b12:  testb  $0x8,0xc(%rdi)
    0.00 :   54b16:  jne    54b28 <__GI___printf_fp_l+0xc98>
    0.00 :   54b18:  mov    -0xf0(%rbp),%r13d
    0.00 :   54b1f:  test   %r13d,%r13d
    0.00 :   54b22:  jle    55fe8 <__GI___printf_fp_l+0x2158>
    0.00 :   54b28:  mov    -0xc0(%rbp),%esi
    0.00 :   54b2e:  lea    0x4(%rax),%r15
    0.00 :   54b32:  mov    $0x1,%r13d
    0.00 :   54b38:  mov    %esi,(%rax)
    0.00 :   54b3a:  mov    -0xf0(%rbp),%r12d
    0.00 :   54b41:  mov    %rbx,-0x148(%rbp)
    0.00 :   54b48:  xor    %r14d,%r14d
    0.00 :   54b4b:  mov    %r13d,%ebx
    0.00 :   54b4e:  movl   $0x0,-0xfc(%rbp)
    0.00 :   54b58:  mov    %r12d,%r13d
    0.00 :   54b5b:  mov    %r8,%r12
    0.00 :   54b5e:  mov    %r13d,%esi
    0.00 :   54b61:  cmp    %r14d,%r13d
    0.00 :   54b64:  jg     54b81 <__GI___printf_fp_l+0xcf1>
    0.00 :   54b66:  cmp    %r14d,-0xe0(%rbp)
    0.00 :   54b6d:  jle    54eb9 <__GI___printf_fp_l+0x1029>
    0.00 :   54b73:  cmpq   $0x1,-0x88(%rbp)
    0.00 :   54b7b:  jle    54ea8 <__GI___printf_fp_l+0x1018>
    0.00 :   54b81:  mov    -0xd0(%rbp),%rdi
    0.00 :   54b88:  add    $0x1,%r14d
    0.00 :   54b8c:  add    $0x4,%r15
    0.00 :   54b90:  call   53a60 <hack_digit>
    0.00 :   54b95:  mov    %eax,-0x4(%r15)
    0.00 :   54b99:  cmp    $0x30,%eax
    0.00 :   54b9c:  jne    54ba6 <__GI___printf_fp_l+0xd16>
    0.00 :   54b9e:  test   %ebx,%ebx
    0.00 :   54ba0:  je     55398 <__GI___printf_fp_l+0x1508>
    0.00 :   54ba6:  mov    $0x1,%ebx
    0.00 :   54bab:  mov    %r13d,%esi
    0.00 :   54bae:  cmp    %r14d,%r13d
    0.00 :   54bb1:  jle    54b66 <__GI___printf_fp_l+0xcd6>
    0.00 :   54bb3:  jmp    54b81 <__GI___printf_fp_l+0xcf1>
    0.00 :   54bb5:  nopl   (%rax)
    0.00 :   54bb8:  lea    -0x60(%rbp),%r14
    0.00 :   54bbc:  lea    -0xa4(%rbp),%rcx
    0.00 :   54bc3:  mov    $0x2,%esi
    0.00 :   54bc8:  lea    -0x98(%rbp),%rdx
    0.00 :   54bcf:  mov    %r14,%rdi
    0.00 :   54bd2:  call   4f3d0 <__mpn_extract_double>
    0.00 :   54bd7:  mov    %eax,%r13d
    0.00 :   54bda:  mov    %rax,%r12
    0.00 :   54bdd:  shl    $0x6,%r13d
    0.00 :   54be1:  sub    $0x34,%r13d
    0.00 :   54be5:  jmp    54507 <__GI___printf_fp_l+0x677>
    0.00 :   54bea:  nopw   0x0(%rax,%rax,1)
    0.00 :   54bf0:  call   78be0 <_IO_padn>
    0.00 :   54bf5:  jmp    5439f <__GI___printf_fp_l+0x50f>
    0.00 :   54bfa:  nopw   0x0(%rax,%rax,1)
    0.00 :   54c00:  lea    -0x60(%rbp),%r14
    0.00 :   54c04:  movdqa -0xd0(%rbp),%xmm0
    0.00 :   54c0c:  lea    -0xa4(%rbp),%rcx
    0.00 :   54c13:  mov    $0x2,%esi
    0.00 :   54c18:  lea    -0x98(%rbp),%rdx
    0.00 :   54c1f:  mov    %r14,%rdi
    0.00 :   54c22:  call   4f5c0 <__mpn_extract_float128>
    0.00 :   54c27:  mov    %eax,%r13d
    0.00 :   54c2a:  mov    %rax,%r12
    0.00 :   54c2d:  shl    $0x6,%r13d
    0.00 :   54c31:  sub    $0x70,%r13d
    0.00 :   54c35:  jmp    54507 <__GI___printf_fp_l+0x677>
    0.00 :   54c3a:  nopw   0x0(%rax,%rax,1)
    0.00 :   54c40:  and    $0x10,%r14d
    0.00 :   54c44:  jne    54ced <__GI___printf_fp_l+0xe5d>
    0.00 :   54c4a:  mov    -0xbc(%rbp),%eax
    0.00 :   54c50:  test   %eax,%eax
    0.00 :   54c52:  jne    56961 <__GI___printf_fp_l+0x2ad1>
    0.00 :   54c58:  xor    %r15d,%r15d
    0.00 :   54c5b:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   54c60:  movzbl %dl,%esi
    0.00 :   54c63:  mov    %rbx,%rdi
    0.00 :   54c66:  mov    %rcx,-0xe0(%rbp)
    0.00 :   54c6d:  mov    %r8b,-0xd0(%rbp)
    0.00 :   54c74:  call   84a60 <__overflow>
    0.00 :   54c79:  movzbl -0xd0(%rbp),%r8d
    0.00 :   54c81:  mov    -0xe0(%rbp),%rcx
    0.00 :   54c88:  cmp    $0xffffffff,%eax
    0.00 :   54c8b:  jne    54360 <__GI___printf_fp_l+0x4d0>
    0.00 :   54c91:  mov    $0xffffffff,%r14d
    0.00 :   54c97:  jmp    543ab <__GI___printf_fp_l+0x51b>
    0.00 :   54c9c:  mov    -0xb8(%rbp),%rax
    0.00 :   54ca3:  movzbl 0xc(%rax),%eax
    0.00 :   54ca7:  test   $0x40,%al
    0.00 :   54ca9:  je     54df7 <__GI___printf_fp_l+0xf67>
    0.00 :   54caf:  mov    %r13d,%r12d
    0.00 :   54cb2:  mov    $0x1,%r8d
    0.00 :   54cb8:  mov    0xa0(%rbx),%rax
    0.00 :   54cbf:  test   %rax,%rax
    0.00 :   54cc2:  je     56625 <__GI___printf_fp_l+0x2795>
    0.00 :   54cc8:  mov    0x20(%rax),%rdx
    0.00 :   54ccc:  cmp    0x28(%rax),%rdx
    0.00 :   54cd0:  jae    56625 <__GI___printf_fp_l+0x2795>
    0.00 :   54cd6:  lea    0x4(%rdx),%rcx
    0.00 :   54cda:  add    $0x1,%r12d
    0.00 :   54cde:  mov    %rcx,0x20(%rax)
    0.00 :   54ce2:  movl   $0x2b,(%rdx)
    0.00 :   54ce8:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   54ced:  mov    -0xbc(%rbp),%eax
    0.00 :   54cf3:  xor    %r14d,%r14d
    0.00 :   54cf6:  test   %eax,%eax
    0.00 :   54cf8:  jne    54e0b <__GI___printf_fp_l+0xf7b>
    0.00 :   54cfe:  mov    0x28(%rbx),%rax
    0.00 :   54d02:  cmp    0x30(%rbx),%rax
    0.00 :   54d06:  jae    56a2a <__GI___printf_fp_l+0x2b9a>
    0.00 :   54d0c:  lea    0x1(%rax),%rsi
    0.00 :   54d10:  lea    0x1(%r14),%r15d
    0.00 :   54d14:  mov    %rsi,0x28(%rbx)
    0.00 :   54d18:  movb   $0x20,(%rax)
    0.00 :   54d1b:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   54d20:  mov    0x40(%rcx),%rsi
    0.00 :   54d24:  mov    %rsi,-0x118(%rbp)
    0.00 :   54d2b:  mov    -0x118(%rbp),%rsi
    0.00 :   54d32:  xor    %ecx,%ecx
    0.00 :   54d34:  cmpb   $0x0,(%rsi)
    0.00 :   54d37:  movzbl (%rsi),%esi
    0.00 :   54d3a:  cmovne -0xe8(%rbp),%rcx
    0.00 :   54d42:  neg    %sil
    0.00 :   54d45:  sbb    %edi,%edi
    0.00 :   54d47:  mov    %rcx,-0xe8(%rbp)
    0.00 :   54d4e:  and    $0xfffffffe,%edi
    0.00 :   54d51:  mov    %edi,-0x108(%rbp)
    0.00 :   54d57:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   54d5c:  mov    0x50(%rcx),%rdi
    0.00 :   54d60:  mov    %rdi,-0x118(%rbp)
    0.00 :   54d67:  jmp    54d2b <__GI___printf_fp_l+0xe9b>
    0.00 :   54d69:  mov    -0xb8(%rbp),%rax
    0.00 :   54d70:  movzbl 0xc(%rax),%eax
    0.00 :   54d74:  test   $0x40,%al
    0.00 :   54d76:  jne    54e40 <__GI___printf_fp_l+0xfb0>
    0.00 :   54d7c:  test   $0x10,%al
    0.00 :   54d7e:  jne    56732 <__GI___printf_fp_l+0x28a2>
    0.00 :   54d84:  mov    %r13d,%r15d
    0.00 :   54d87:  mov    $0x1,%r8d
    0.00 :   54d8d:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   54d92:  movaps -0xd0(%rbp),%xmm5
    0.00 :   54d99:  movmskps %xmm5,%r12d
    0.00 :   54d9d:  and    $0x8,%r12d
    0.00 :   54da1:  mov    -0xb8(%rbp),%rax
    0.00 :   54da8:  mov    %r12d,-0xa4(%rbp)
    0.00 :   54daf:  lea    0x1421d7(%rip),%rcx        # 196f8d <not_available+0xd0>
    0.00 :   54db6:  lea    0x14c52b(%rip),%r15        # 1a12e8 <default_rwlockattr+0x2f8>
    0.00 :   54dbd:  movslq 0x8(%rax),%rdx
    0.00 :   54dc1:  mov    0x17e030(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   54dc8:  mov    %fs:(%rax),%rax
    0.00 :   54dcc:  testb  $0x1,0x1(%rax,%rdx,2)
    0.00 :   54dd1:  lea    0x1422a0(%rip),%rax        # 197078 <not_available+0x1bb>
    0.00 :   54dd8:  cmovne %rax,%rcx
    0.00 :   54ddc:  lea    0x14c4e5(%rip),%rax        # 1a12c8 <default_rwlockattr+0x2d8>
    0.00 :   54de3:  cmovne %rax,%r15
    0.00 :   54de7:  jmp    5400e <__GI___printf_fp_l+0x17e>
    0.00 :   54dec:  orq    $0x0,-0x8(%rsp,%rdx,1)
   13.64 :   54df2:  jmp    54571 <__GI___printf_fp_l+0x6e1> // libc.so.6[54df2]
    0.00 :   54df7:  mov    %r13d,%r12d
    0.00 :   54dfa:  mov    $0x1,%r8d
    0.00 :   54e00:  mov    %r13d,%edx
    0.00 :   54e03:  test   $0x10,%al
    0.00 :   54e05:  je     56967 <__GI___printf_fp_l+0x2ad7>
    0.00 :   54e0b:  mov    0xa0(%rbx),%rax
    0.00 :   54e12:  test   %rax,%rax
    0.00 :   54e15:  je     56854 <__GI___printf_fp_l+0x29c4>
    0.00 :   54e1b:  mov    0x20(%rax),%rdx
    0.00 :   54e1f:  cmp    0x28(%rax),%rdx
    0.00 :   54e23:  jae    56854 <__GI___printf_fp_l+0x29c4>
    0.00 :   54e29:  lea    0x4(%rdx),%rcx
    0.00 :   54e2d:  add    $0x1,%r12d
    0.00 :   54e31:  mov    %rcx,0x20(%rax)
    0.00 :   54e35:  movl   $0x20,(%rdx)
    0.00 :   54e3b:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   54e40:  mov    %r13d,%r15d
    0.00 :   54e43:  mov    $0x1,%r8d
    0.00 :   54e49:  jmp    5431a <__GI___printf_fp_l+0x48a>
    0.00 :   54e4e:  xchg   %ax,%ax
    0.00 :   54e50:  mov    0x8(%r14),%rax
    0.00 :   54e54:  lea    0x1372c5(%rip),%rsi        # 18c120 <__tens>
    0.00 :   54e5b:  add    $0x8,%rdi
    0.00 :   54e5f:  lea    0x1(%rax),%rdx
    0.00 :   54e63:  mov    (%r14),%rax
    0.00 :   54e66:  mov    %rdx,-0x68(%rbp)
    0.00 :   54e6a:  shl    $0x3,%rdx
    0.00 :   54e6e:  lea    (%rsi,%rax,8),%rsi
    0.00 :   54e72:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   54e77:  mov    -0x70(%rbp),%rax
    0.00 :   54e7b:  movq   $0x0,(%rax)
    0.00 :   54e82:  mov    -0x68(%rbp),%rdx
    0.00 :   54e86:  addl   $0x40,-0x98(%rbp)
    0.00 :   54e8d:  jmp    54714 <__GI___printf_fp_l+0x884>
    0.00 :   54e92:  nopw   0x0(%rax,%rax,1)
    0.00 :   54e98:  sub    $0x2,%rdx
    0.00 :   54e9c:  mov    %rdx,-0x68(%rbp)
    0.00 :   54ea0:  jmp    54714 <__GI___printf_fp_l+0x884>
    0.00 :   54ea5:  nopl   (%rax)
    0.00 :   54ea8:  mov    -0x90(%rbp),%rax
    0.00 :   54eaf:  cmpq   $0x0,(%rax)
    0.00 :   54eb3:  jne    54b81 <__GI___printf_fp_l+0xcf1>
    0.00 :   54eb9:  mov    -0x148(%rbp),%rbx
    0.00 :   54ec0:  mov    %r12,%r8
    0.00 :   54ec3:  mov    -0x4(%r15),%r12d
    0.00 :   54ec7:  mov    -0xc0(%rbp),%eax
    0.00 :   54ecd:  cmp    %eax,%r12d
    0.00 :   54ed0:  jne    54ed6 <__GI___printf_fp_l+0x1046>
    0.00 :   54ed2:  mov    -0x8(%r15),%r12d
    0.00 :   54ed6:  mov    -0xd0(%rbp),%rdi
    0.00 :   54edd:  mov    %r8,-0x148(%rbp)
    0.00 :   54ee4:  mov    %esi,-0xe0(%rbp)
    0.00 :   54eea:  call   53a60 <hack_digit>
    0.00 :   54eef:  mov    -0xe0(%rbp),%esi
    0.00 :   54ef5:  mov    -0x148(%rbp),%r8
    0.00 :   54efc:  cmp    $0x30,%eax
    0.00 :   54eff:  mov    %eax,%edi
    0.00 :   54f01:  setne  %r9b
    0.00 :   54f05:  cmp    $0x35,%eax
    0.00 :   54f08:  setne  %al
    0.00 :   54f0b:  and    %al,%r9b
    0.00 :   54f0e:  jne    54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   54f10:  mov    -0x88(%rbp),%rax
    0.00 :   54f17:  cmp    $0x1,%rax
    0.00 :   54f1b:  je     56025 <__GI___printf_fp_l+0x2195>
    0.00 :   54f21:  cmpq   $0x0,-0x78(%rbp)
    0.00 :   54f26:  jne    54f4e <__GI___printf_fp_l+0x10be>
    0.00 :   54f28:  test   %rax,%rax
    0.00 :   54f2b:  je     54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   54f2d:  mov    -0x90(%rbp),%r10
    0.00 :   54f34:  jmp    54f46 <__GI___printf_fp_l+0x10b6>
    0.00 :   54f36:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54f40:  sub    $0x1,%rax
    0.00 :   54f44:  je     54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   54f46:  cmpq   $0x0,-0x8(%r10,%rax,8)
    0.00 :   54f4c:  je     54f40 <__GI___printf_fp_l+0x10b0>
    0.00 :   54f4e:  mov    $0x1,%r9d
    0.00 :   54f54:  fnstcw -0xa6(%rbp)
    0.00 :   54f5a:  movzwl -0xa6(%rbp),%eax
    0.00 :   54f61:  and    $0xc00,%ax
    0.00 :   54f65:  cmp    $0x800,%ax
    0.00 :   54f69:  je     55e07 <__GI___printf_fp_l+0x1f77>
    0.00 :   54f6f:  ja     553d0 <__GI___printf_fp_l+0x1540>
    0.00 :   54f75:  test   %ax,%ax
    0.00 :   54f78:  jne    553e0 <__GI___printf_fp_l+0x1550>
    0.00 :   54f7e:  cmp    $0x34,%edi
    0.00 :   54f81:  jle    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   54f83:  and    $0x1,%r12d
    0.00 :   54f87:  jne    55403 <__GI___printf_fp_l+0x1573>
    0.00 :   54f8d:  test   %r9b,%r9b
    0.00 :   54f90:  jne    55403 <__GI___printf_fp_l+0x1573>
    0.00 :   54f96:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54fa0:  cmp    %esi,%r14d
    0.00 :   54fa3:  jg     54fbd <__GI___printf_fp_l+0x112d>
    0.00 :   54fa5:  jmp    54fc4 <__GI___printf_fp_l+0x1134>
    0.00 :   54fa7:  nopw   0x0(%rax,%rax,1)
    0.00 :   54fb0:  sub    $0x1,%r14d
    0.00 :   54fb4:  sub    $0x4,%r15
    0.00 :   54fb8:  cmp    %esi,%r14d
    0.00 :   54fbb:  jle    54fc4 <__GI___printf_fp_l+0x1134>
    0.00 :   54fbd:  cmpl   $0x30,-0x4(%r15)
    0.00 :   54fc2:  je     54fb0 <__GI___printf_fp_l+0x1120>
    4.21 :   54fc4:  test   %r14d,%r14d // libc.so.6[54fc4]
    0.00 :   54fc7:  jne    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   54fc9:  mov    -0xb8(%rbp),%rax
    0.00 :   54fd0:  testb  $0x8,0xc(%rax)
    0.00 :   54fd4:  jne    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   54fd6:  mov    -0xc0(%rbp),%eax
    0.00 :   54fdc:  cmp    %eax,-0x4(%r15)
    0.00 :   54fe0:  jne    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   54fe2:  sub    $0x4,%r15
    0.00 :   54fe6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54ff0:  mov    -0xe8(%rbp),%rsi
    0.00 :   54ff7:  test   %rsi,%rsi
    0.00 :   54ffa:  je     55145 <__GI___printf_fp_l+0x12b5>
    0.00 :   55000:  mov    -0x134(%rbp),%edx
    0.00 :   55006:  mov    %edx,%r12d
    0.00 :   55009:  cmp    %edx,-0x100(%rbp)
    0.00 :   5500f:  je     55067 <__GI___printf_fp_l+0x11d7>
    0.00 :   55011:  movl   $0x0,-0x12c(%rbp)
    0.00 :   5501b:  movzbl (%rsi),%eax
    0.00 :   5501e:  mov    %al,-0xd0(%rbp)
    0.00 :   55024:  sub    $0x1,%eax
    0.00 :   55027:  cmp    $0x7d,%al
    0.00 :   55029:  ja     55145 <__GI___printf_fp_l+0x12b5>
    0.00 :   5502f:  mov    %rsi,%rax
    0.00 :   55032:  xor    %esi,%esi
    0.00 :   55034:  jmp    5505a <__GI___printf_fp_l+0x11ca>
    0.00 :   55036:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   55040:  movzbl 0x1(%rax),%ecx
    0.00 :   55044:  add    $0x1,%rax
    0.00 :   55048:  add    $0x1,%esi
    0.00 :   5504b:  sub    %edi,%edx
    0.00 :   5504d:  cmp    $0x7e,%cl
    0.00 :   55050:  ja     55061 <__GI___printf_fp_l+0x11d1>
    0.00 :   55052:  test   %cl,%cl
    0.00 :   55054:  je     565c0 <__GI___printf_fp_l+0x2730>
    0.00 :   5505a:  movsbl (%rax),%edi
    0.00 :   5505d:  cmp    %edx,%edi
    0.00 :   5505f:  jb     55040 <__GI___printf_fp_l+0x11b0>
    0.00 :   55061:  mov    %esi,-0x12c(%rbp)
    0.00 :   55067:  mov    -0x12c(%rbp),%edi
    0.00 :   5506d:  test   %edi,%edi
    0.00 :   5506f:  je     55145 <__GI___printf_fp_l+0x12b5>
    0.00 :   55075:  movslq -0x134(%rbp),%rax
    0.00 :   5507c:  movslq %edi,%r13
    0.00 :   5507f:  mov    %r15,%rdx
    0.00 :   55082:  mov    %r8,-0xd0(%rbp)
    0.00 :   55089:  lea    (%r8,%rax,4),%rsi
    0.00 :   5508d:  add    %r13,%rax
    0.00 :   55090:  lea    0x0(,%rax,4),%r14
    0.00 :   55098:  sub    %rsi,%rdx
    0.00 :   5509b:  lea    (%r8,%r14,1),%rdi
    0.00 :   5509f:  sar    $0x2,%rdx
    0.00 :   550a3:  call   b3c20 <wmemmove>
    0.00 :   550a8:  mov    -0xe8(%rbp),%rsi
    0.00 :   550af:  mov    -0xd0(%rbp),%r8
    0.00 :   550b6:  mov    -0x108(%rbp),%r10d
    0.00 :   550bd:  movsbl (%rsi),%edi
    0.00 :   550c0:  lea    -0x4(%r8,%r14,1),%r9
    0.00 :   550c5:  nopl   (%rax)
    0.00 :   550c8:  mov    %r12d,%eax
    0.00 :   550cb:  mov    %r9,%rdx
    0.00 :   550ce:  sub    %edi,%r12d
    0.00 :   550d1:  nopl   0x0(%rax)
    0.00 :   550d8:  lea    -0x1(%rax),%ecx
    0.00 :   550db:  sub    $0x4,%rdx
    0.00 :   550df:  mov    %rcx,%rax
    0.00 :   550e2:  mov    (%r8,%rcx,4),%ecx
    0.00 :   550e6:  mov    %ecx,0x4(%rdx)
    0.00 :   550e9:  cmp    %r12d,%eax
    0.00 :   550ec:  jne    550d8 <__GI___printf_fp_l+0x1248>
    0.00 :   550ee:  lea    -0x1(%rdi),%eax
    0.00 :   550f1:  mov    %rax,%rdx
    0.00 :   550f4:  neg    %rax
    0.00 :   550f7:  not    %rdx
    0.00 :   550fa:  lea    (%r9,%rdx,4),%rdx
    0.00 :   550fe:  lea    -0x8(%r9,%rax,4),%r9
    0.00 :   55103:  mov    %r10d,(%rdx)
    0.00 :   55106:  movzbl 0x1(%rsi),%eax
    0.00 :   5510a:  cmp    $0x7e,%al
    0.00 :   5510c:  ja     55128 <__GI___printf_fp_l+0x1298>
    0.00 :   5510e:  test   %al,%al
    0.00 :   55110:  je     553c8 <__GI___printf_fp_l+0x1538>
    0.00 :   55116:  add    $0x1,%rsi
    0.00 :   5511a:  movsbl %al,%edi
    0.00 :   5511d:  cmp    %r12d,%edi
    0.00 :   55120:  jb     550c8 <__GI___printf_fp_l+0x1238>
    0.00 :   55122:  nopw   0x0(%rax,%rax,1)
    0.00 :   55128:  lea    -0x1(%r12),%eax
    0.00 :   5512d:  sub    $0x4,%r9
    0.00 :   55131:  mov    %rax,%r12
    0.00 :   55134:  mov    (%r8,%rax,4),%eax
    0.00 :   55138:  mov    %eax,0x4(%r9)
    0.00 :   5513c:  cmp    %r9,%r8
    0.00 :   5513f:  jb     55128 <__GI___printf_fp_l+0x1298>
    0.00 :   55141:  lea    (%r15,%r13,4),%r15
    0.00 :   55145:  mov    -0x9c(%rbp),%edx
    0.00 :   5514b:  cmp    $0x66,%edx
    0.00 :   5514e:  je     551d0 <__GI___printf_fp_l+0x1340>
    0.00 :   55154:  mov    -0xa0(%rbp),%ecx
    0.00 :   5515a:  mov    -0x98(%rbp),%eax
    0.00 :   55160:  mov    $0x2b,%edi
    0.00 :   55165:  test   %ecx,%ecx
    0.00 :   55167:  jne    55a17 <__GI___printf_fp_l+0x1b87>
    0.00 :   5516d:  movd   %edx,%xmm0
    0.00 :   55171:  movd   %edi,%xmm4
    0.00 :   55175:  lea    0x8(%r15),%rsi
    0.00 :   55179:  punpckldq %xmm4,%xmm0
    0.00 :   5517d:  movq   %xmm0,(%r15)
    0.00 :   55182:  cmp    $0x9,%eax
    0.00 :   55185:  jle    55a3d <__GI___printf_fp_l+0x1bad>
    0.00 :   5518b:  mov    $0xa,%ecx
    0.00 :   55190:  lea    (%rcx,%rcx,4),%ecx
    0.00 :   55193:  add    %ecx,%ecx
    0.00 :   55195:  cmp    %eax,%ecx
    0.00 :   55197:  jle    55190 <__GI___printf_fp_l+0x1300>
    0.00 :   55199:  mov    $0xcccccccd,%r9d
    0.00 :   5519f:  nop
    0.00 :   551a0:  mov    %ecx,%ecx
    0.00 :   551a2:  cltd
    0.00 :   551a3:  add    $0x4,%rsi
    0.00 :   551a7:  mov    %rcx,%rdi
    0.00 :   551aa:  imul   %r9,%rcx
    0.00 :   551ae:  shr    $0x23,%rcx
    0.00 :   551b2:  idiv   %ecx
    0.00 :   551b4:  add    $0x30,%eax
    0.00 :   551b7:  mov    %eax,-0x4(%rsi)
    0.00 :   551ba:  mov    %edx,%eax
    0.00 :   551bc:  cmp    $0x6d,%edi
    0.00 :   551bf:  jg     551a0 <__GI___printf_fp_l+0x1310>
    0.00 :   551c1:  mov    %edx,-0x98(%rbp)
    0.00 :   551c7:  add    $0x30,%eax
    0.00 :   551ca:  lea    0x4(%rsi),%r15
    0.00 :   551ce:  mov    %eax,(%rsi)
    0.00 :   551d0:  mov    -0xb8(%rbp),%rax
    0.00 :   551d7:  mov    -0xa4(%rbp),%r14d
    0.00 :   551de:  mov    -0x138(%rbp),%edi
    0.00 :   551e4:  movzbl 0xc(%rax),%edx
    0.00 :   551e8:  mov    %r15,%rax
    0.00 :   551eb:  sub    %r8,%rax
    0.00 :   551ee:  mov    %rax,-0xe0(%rbp)
    0.00 :   551f5:  mov    %edx,%esi
    0.00 :   551f7:  sar    $0x2,%rax
    0.00 :   551fb:  and    $0x20,%esi
    0.00 :   551fe:  neg    %rax
    4.55 :   55201:  test   %r14d,%r14d // libc.so.6[55201]
    0.00 :   55204:  je     555e0 <__GI___printf_fp_l+0x1750>
    0.00 :   5520a:  lea    -0x1(%rdi,%rax,1),%eax
    0.00 :   5520e:  mov    %eax,-0xd0(%rbp)
    0.00 :   55214:  test   %sil,%sil
    0.00 :   55217:  jne    55828 <__GI___printf_fp_l+0x1998>
    0.00 :   5521d:  mov    -0xb8(%rbp),%rax
    0.00 :   55224:  mov    -0xd0(%rbp),%edx
    0.00 :   5522a:  mov    0x10(%rax),%esi
    0.00 :   5522d:  test   %edx,%edx
    0.00 :   5522f:  jle    55828 <__GI___printf_fp_l+0x1998>
    0.00 :   55235:  cmp    $0x30,%esi
    0.00 :   55238:  je     55828 <__GI___printf_fp_l+0x1998>
    0.00 :   5523e:  mov    -0xbc(%rbp),%edx
    0.00 :   55244:  mov    -0xd0(%rbp),%r12d
    0.00 :   5524b:  mov    %r8,-0xe8(%rbp)
    0.00 :   55252:  mov    %rbx,%rdi
    0.00 :   55255:  test   %edx,%edx
    0.00 :   55257:  mov    %r12,%rdx
    0.00 :   5525a:  je     563d6 <__GI___printf_fp_l+0x2546>
    0.00 :   55260:  call   7a890 <_IO_wpadn>
    0.00 :   55265:  mov    -0xe8(%rbp),%r8
    0.00 :   5526c:  cmp    %r12,%rax
    0.00 :   5526f:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   55275:  mov    -0xa4(%rbp),%eax
    0.00 :   5527b:  test   %eax,%eax
    0.00 :   5527d:  je     561a9 <__GI___printf_fp_l+0x2319>
    0.00 :   55283:  mov    -0xd0(%rbp),%r14d
    0.00 :   5528a:  mov    0xa0(%rbx),%rax
    0.00 :   55291:  test   %rax,%rax
    0.00 :   55294:  je     55f88 <__GI___printf_fp_l+0x20f8>
    0.00 :   5529a:  mov    0x20(%rax),%rdx
    0.00 :   5529e:  cmp    0x28(%rax),%rdx
    0.00 :   552a2:  jae    55f88 <__GI___printf_fp_l+0x20f8>
    0.00 :   552a8:  lea    0x4(%rdx),%rsi
    0.00 :   552ac:  add    $0x1,%r14d
    0.00 :   552b0:  mov    %rsi,0x20(%rax)
    0.00 :   552b4:  mov    -0xb8(%rbp),%rax
    0.00 :   552bb:  movl   $0x2d,(%rdx)
    0.00 :   552c1:  testb  $0x20,0xc(%rax)
    0.00 :   552c5:  je     55867 <__GI___printf_fp_l+0x19d7>
    0.00 :   552cb:  movq   $0x0,-0x120(%rbp)
    0.00 :   552d6:  xor    %edi,%edi
    0.00 :   552d8:  xor    %r11d,%r11d
    0.00 :   552db:  nopl   0x0(%rax,%rax,1)
    0.00 :   552e0:  mov    -0xb8(%rbp),%rax
    0.00 :   552e7:  mov    %r11,%r13
    0.00 :   552ea:  testb  $0x8,0xd(%rax)
    0.00 :   552ee:  jne    5639a <__GI___printf_fp_l+0x250a>
    0.00 :   552f4:  mov    -0xbc(%rbp),%r10d
    0.00 :   552fb:  test   %r10d,%r10d
    0.00 :   552fe:  jne    558ab <__GI___printf_fp_l+0x1a1b>
    0.00 :   55304:  sub    %r11,%rdi
    0.00 :   55307:  mov    %rdi,%r15
    0.00 :   5530a:  mov    %rdi,%r12
    0.00 :   5530d:  cmp    $0x14,%rdi
    0.00 :   55311:  jg     55e32 <__GI___printf_fp_l+0x1fa2>
    0.00 :   55317:  mov    %r11,%r12
    0.00 :   5531a:  test   %rdi,%rdi
    0.00 :   5531d:  je     554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   55323:  mov    %r14d,-0xe0(%rbp)
    0.00 :   5532a:  mov    %r11,%r14
    0.00 :   5532d:  jmp    55349 <__GI___printf_fp_l+0x14b9>
    0.00 :   5532f:  nop
    0.00 :   55330:  lea    0x1(%rax),%rcx
    0.00 :   55334:  mov    %rcx,0x28(%rbx)
    0.00 :   55338:  mov    %dl,(%rax)
    0.00 :   5533a:  mov    %r14,%rax
    0.00 :   5533d:  sub    %r12,%rax
    0.00 :   55340:  add    %r15,%rax
    0.00 :   55343:  je     55eb8 <__GI___printf_fp_l+0x2028>
    0.00 :   55349:  add    $0x1,%r12
    0.00 :   5534d:  mov    0x28(%rbx),%rax
    0.00 :   55351:  movzbl -0x1(%r12),%edx
    0.00 :   55357:  cmp    0x30(%rbx),%rax
    0.00 :   5535b:  jb     55330 <__GI___printf_fp_l+0x14a0>
    0.00 :   5535d:  movzbl %dl,%esi
    0.00 :   55360:  mov    %rbx,%rdi
    0.00 :   55363:  call   84a60 <__overflow>
    0.00 :   55368:  cmp    $0xffffffff,%eax
    0.00 :   5536b:  jne    5533a <__GI___printf_fp_l+0x14aa>
    0.00 :   5536d:  mov    -0x140(%rbp),%edi
    0.00 :   55373:  test   %edi,%edi
    0.00 :   55375:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   5537b:  mov    %r13,%rdi
    0.00 :   5537e:  call   26420 <free@plt>
    0.00 :   55383:  mov    -0x128(%rbp),%rdi
    0.00 :   5538a:  call   26420 <free@plt>
    0.00 :   5538f:  jmp    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   55394:  nopl   0x0(%rax)
    0.00 :   55398:  mov    -0xf0(%rbp),%eax
    0.00 :   5539e:  addl   $0x1,-0xe0(%rbp)
    0.00 :   553a5:  test   %eax,%eax
    0.00 :   553a7:  jle    54b5e <__GI___printf_fp_l+0xcce>
    0.00 :   553ad:  addl   $0x1,-0xfc(%rbp)
    0.00 :   553b4:  mov    -0xfc(%rbp),%esi
    0.00 :   553ba:  lea    (%rsi,%rax,1),%r13d
    0.00 :   553be:  jmp    54b5e <__GI___printf_fp_l+0xcce>
    0.00 :   553c3:  nopl   0x0(%rax,%rax,1)
    0.00 :   553c8:  movzbl (%rsi),%eax
    0.00 :   553cb:  jmp    5511a <__GI___printf_fp_l+0x128a>
    0.00 :   553d0:  cmp    $0xc00,%ax
    0.00 :   553d4:  je     54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   553da:  jmp    2690e <__GI___printf_fp_l.cold>
    0.00 :   553df:  nop
    0.00 :   553e0:  cmp    $0x400,%ax
    0.00 :   553e4:  jne    56ac8 <__GI___printf_fp_l+0x2c38>
    0.00 :   553ea:  mov    -0xa4(%rbp),%r10d
    0.00 :   553f1:  test   %r10d,%r10d
    0.00 :   553f4:  je     54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   553fa:  cmp    $0x34,%edi
    0.00 :   553fd:  jle    54f8d <__GI___printf_fp_l+0x10fd>
    4.45 :   55403:  mov    -0x4(%r15),%edi // libc.so.6[55403]
    0.00 :   55407:  mov    %r15,%rax
    0.00 :   5540a:  test   %r14d,%r14d
    0.00 :   5540d:  je     55980 <__GI___printf_fp_l+0x1af0>
    0.00 :   55413:  lea    -0x4(%r15),%rax
    0.00 :   55417:  xor    %esi,%esi
    0.00 :   55419:  cmp    $0x39,%edi
    0.00 :   5541c:  jne    55449 <__GI___printf_fp_l+0x15b9>
    0.00 :   5541e:  mov    -0xc0(%rbp),%edx
    0.00 :   55424:  cmp    %edi,%edx
    0.00 :   55426:  jne    55435 <__GI___printf_fp_l+0x15a5>
    0.00 :   55428:  jmp    55449 <__GI___printf_fp_l+0x15b9>
    0.00 :   5542a:  nopw   0x0(%rax,%rax,1)
    0.00 :   55430:  cmp    $0x39,%edi
    0.00 :   55433:  jne    55449 <__GI___printf_fp_l+0x15b9>
    0.00 :   55435:  movl   $0x30,(%rax)
    0.00 :   5543b:  mov    -0x4(%rax),%edi
    0.00 :   5543e:  sub    $0x4,%rax
    0.00 :   55442:  add    $0x1,%esi
    0.00 :   55445:  cmp    %edx,%edi
    0.00 :   55447:  jne    55430 <__GI___printf_fp_l+0x15a0>
    0.00 :   55449:  mov    -0xf0(%rbp),%edx
    0.00 :   5544f:  cmp    %edx,%esi
    0.00 :   55451:  jne    5546c <__GI___printf_fp_l+0x15dc>
    0.00 :   55453:  mov    -0xfc(%rbp),%ecx
    0.00 :   55459:  test   %ecx,%ecx
    0.00 :   5545b:  setg   %sil
    0.00 :   5545f:  cmp    $0x1,%sil
    0.00 :   55463:  adc    $0xffffffff,%ecx
    0.00 :   55466:  mov    %ecx,-0xfc(%rbp)
    0.00 :   5546c:  mov    -0xc0(%rbp),%esi
    0.00 :   55472:  cmp    %esi,%edi
    0.00 :   55474:  je     5655b <__GI___printf_fp_l+0x26cb>
    0.00 :   5547a:  add    $0x1,%edi
    0.00 :   5547d:  mov    %edi,(%rax)
    0.00 :   5547f:  mov    -0xfc(%rbp),%esi
    0.00 :   55485:  mov    -0xf0(%rbp),%edx
    0.00 :   5548b:  add    %edx,%esi
    0.00 :   5548d:  cmp    %edi,-0xc0(%rbp)
    0.00 :   55493:  je     55980 <__GI___printf_fp_l+0x1af0>
    0.00 :   55499:  cmp    %esi,%r14d
    0.00 :   5549c:  jg     54fbd <__GI___printf_fp_l+0x112d>
    0.00 :   554a2:  jmp    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   554a7:  nopw   0x0(%rax,%rax,1)
    0.00 :   554b0:  mov    0xd8(%rbx),%r15
    0.00 :   554b7:  lea    0x17a542(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   554be:  lea    0x17b2a3(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   554c5:  sub    %rdx,%rax
    0.00 :   554c8:  mov    %r15,%rcx
    0.00 :   554cb:  sub    %rdx,%rcx
    0.00 :   554ce:  cmp    %rax,%rcx
    0.00 :   554d1:  jae    568d6 <__GI___printf_fp_l+0x2a46>
    0.00 :   554d7:  mov    0x38(%r15),%rax
    0.00 :   554db:  mov    %r8,%r11
    0.00 :   554de:  mov    %r12,%rdx
    0.00 :   554e1:  mov    %r11,%rsi
    0.00 :   554e4:  mov    %rbx,%rdi
    0.00 :   554e7:  call   *%rax
    0.00 :   554e9:  cmp    %r12,%rax
    0.00 :   554ec:  jne    5536d <__GI___printf_fp_l+0x14dd>
    0.00 :   554f2:  add    %r12d,%r14d
    0.00 :   554f5:  cmpq   $0x0,-0x150(%rbp)
    0.00 :   554fd:  jne    56510 <__GI___printf_fp_l+0x2680>
    0.00 :   55503:  mov    -0xb8(%rbp),%rax
    0.00 :   5550a:  testb  $0x20,0xc(%rax)
    0.00 :   5550e:  je     543ab <__GI___printf_fp_l+0x51b>
    0.00 :   55514:  mov    -0xd0(%rbp),%esi
    0.00 :   5551a:  test   %esi,%esi
    0.00 :   5551c:  jle    543ab <__GI___printf_fp_l+0x51b>
    0.00 :   55522:  mov    -0xbc(%rbp),%r8d
    0.00 :   55529:  mov    %esi,%r12d
    0.00 :   5552c:  mov    %rbx,%rdi
    0.00 :   5552f:  mov    0x10(%rax),%esi
    0.00 :   55532:  mov    %r12,%rdx
    0.00 :   55535:  test   %r8d,%r8d
    0.00 :   55538:  je     5619f <__GI___printf_fp_l+0x230f>
    0.00 :   5553e:  call   7a890 <_IO_wpadn>
    0.00 :   55543:  cmp    %r12,%rax
    0.00 :   55546:  jne    5536d <__GI___printf_fp_l+0x14dd>
    0.00 :   5554c:  mov    -0xd0(%rbp),%eax
    0.00 :   55552:  add    %eax,%r14d
    0.00 :   55555:  jmp    543ab <__GI___printf_fp_l+0x51b>
   10.65 :   5555a:  test   %ecx,%ecx // libc.so.6[5555a]
    0.00 :   5555c:  js     55afb <__GI___printf_fp_l+0x1c6b>
    0.00 :   55562:  add    %r13d,%ecx
    0.00 :   55565:  mov    %r12,%rdx
    0.00 :   55568:  mov    %r14,%rsi
    0.00 :   5556b:  call   4def0 <__mpn_lshift>
    0.00 :   55570:  mov    %rax,%rcx
    0.00 :   55573:  mov    -0x88(%rbp),%rax
    0.00 :   5557a:  lea    0x1(%rax),%rdx
    0.00 :   5557e:  mov    %rdx,-0x88(%rbp)
    0.00 :   55585:  mov    -0x90(%rbp),%rdx
    0.00 :   5558c:  mov    %rcx,(%rdx,%rax,8)
    0.00 :   55590:  movl   $0x0,-0x98(%rbp)
    0.00 :   5559a:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   5559f:  nop
    0.00 :   555a0:  mov    -0x70(%rbp),%rsi
    0.00 :   555a4:  mov    -0x90(%rbp),%rdi
    0.00 :   555ab:  call   4d800 <__mpn_cmp>
    0.00 :   555b0:  test   %eax,%eax
    0.00 :   555b2:  js     54727 <__GI___printf_fp_l+0x897>
    0.00 :   555b8:  mov    -0x68(%rbp),%rdx
    0.00 :   555bc:  jmp    547a0 <__GI___printf_fp_l+0x910>
    0.00 :   555c1:  nopl   0x0(%rax)
    0.00 :   555c8:  movl   $0x0,-0x12c(%rbp)
    0.00 :   555d2:  jmp    549eb <__GI___printf_fp_l+0xb5b>
    0.00 :   555d7:  nopw   0x0(%rax,%rax,1)
    0.00 :   555e0:  test   $0x50,%dl
    0.00 :   555e3:  je     55e1c <__GI___printf_fp_l+0x1f8c>
    0.00 :   555e9:  lea    -0x1(%rdi,%rax,1),%eax
    0.00 :   555ed:  mov    %eax,-0xd0(%rbp)
    0.00 :   555f3:  test   %sil,%sil
    0.00 :   555f6:  jne    55615 <__GI___printf_fp_l+0x1785>
    0.00 :   555f8:  mov    -0xb8(%rbp),%rax
    0.00 :   555ff:  mov    0x10(%rax),%esi
    0.00 :   55602:  mov    -0xd0(%rbp),%eax
    0.00 :   55608:  test   %eax,%eax
    0.00 :   5560a:  jle    55615 <__GI___printf_fp_l+0x1785>
    0.00 :   5560c:  cmp    $0x30,%esi
    0.00 :   5560f:  jne    5523e <__GI___printf_fp_l+0x13ae>
    0.00 :   55615:  test   $0x40,%dl
    0.00 :   55618:  je     55f3f <__GI___printf_fp_l+0x20af>
    0.00 :   5561e:  mov    -0xbc(%rbp),%eax
    0.00 :   55624:  test   %eax,%eax
    0.00 :   55626:  jne    561c4 <__GI___printf_fp_l+0x2334>
    0.00 :   5562c:  xor    %r14d,%r14d
    0.00 :   5562f:  mov    0x28(%rbx),%rax
    0.00 :   55633:  cmp    0x30(%rbx),%rax
    0.00 :   55637:  jae    56a77 <__GI___printf_fp_l+0x2be7>
    0.00 :   5563d:  lea    0x1(%rax),%rdx
    0.00 :   55641:  add    $0x1,%r14d
    0.00 :   55645:  mov    %rdx,0x28(%rbx)
    0.00 :   55649:  movb   $0x2b,(%rax)
    0.00 :   5564c:  mov    -0xb8(%rbp),%rax
    0.00 :   55653:  testb  $0x20,0xc(%rax)
    0.00 :   55657:  jne    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55659:  mov    -0xb8(%rbp),%rax
    0.00 :   55660:  cmpl   $0x30,0x10(%rax)
    0.00 :   55664:  jne    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55666:  mov    -0xd0(%rbp),%esi
    0.00 :   5566c:  test   %esi,%esi
    0.00 :   5566e:  jg     56646 <__GI___printf_fp_l+0x27b6>
    0.00 :   55674:  nopl   0x0(%rax)
    0.00 :   55678:  mov    -0xb8(%rbp),%rax
    0.00 :   5567f:  testb  $0x8,0xd(%rax)
    0.00 :   55683:  je     556a7 <__GI___printf_fp_l+0x1817>
    0.00 :   55685:  mov    -0xf8(%rbp),%rax
    0.00 :   5568c:  mov    -0x120(%rbp),%rdi
    0.00 :   55693:  mov    (%rax),%rax
    0.00 :   55696:  mov    0xa0(%rax),%eax
    0.00 :   5569c:  imul   %rax,%rdi
    0.00 :   556a0:  mov    %rdi,-0x120(%rbp)
    0.00 :   556a7:  mov    -0x110(%rbp),%rdi
    0.00 :   556ae:  mov    %r8,-0xe8(%rbp)
    0.00 :   556b5:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   556ba:  mov    -0x118(%rbp),%rdi
    0.00 :   556c1:  mov    -0xe8(%rbp),%r8
    0.00 :   556c8:  mov    %rax,%r13
    0.00 :   556cb:  test   %rdi,%rdi
    0.00 :   556ce:  je     5611f <__GI___printf_fp_l+0x228f>
    0.00 :   556d4:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   556d9:  mov    -0xe8(%rbp),%r8
    0.00 :   556e0:  mov    %rax,%rdx
    0.00 :   556e3:  movslq -0x12c(%rbp),%rax
    0.00 :   556ea:  imul   %rdx,%rax
    0.00 :   556ee:  mov    -0x120(%rbp),%rsi
    0.00 :   556f5:  lea    0x2(%rsi,%r13,1),%r12
    0.00 :   556fa:  add    %rax,%r12
    0.00 :   556fd:  cmpq   $0x0,-0x150(%rbp)
    0.00 :   55705:  jne    56740 <__GI___printf_fp_l+0x28b0>
    0.00 :   5570b:  lea    0x17(%r12),%rax
    0.00 :   55710:  mov    %rsp,%rdi
    0.00 :   55713:  mov    %rax,%rsi
    0.00 :   55716:  and    $0xfffffffffffff000,%rax
    0.00 :   5571c:  sub    %rax,%rdi
    0.00 :   5571f:  and    $0xfffffffffffffff0,%rsi
    0.00 :   55723:  cmp    %rdi,%rsp
    0.00 :   55726:  je     5573d <__GI___printf_fp_l+0x18ad>
    0.00 :   55728:  sub    $0x1000,%rsp
    0.00 :   5572f:  orq    $0x0,0xff8(%rsp)
    0.00 :   55738:  cmp    %rdi,%rsp
    0.00 :   5573b:  jne    55728 <__GI___printf_fp_l+0x1898>
    0.00 :   5573d:  and    $0xfff,%esi
    0.00 :   55743:  sub    %rsi,%rsp
    0.00 :   55746:  test   %rsi,%rsi
    0.00 :   55749:  je     55751 <__GI___printf_fp_l+0x18c1>
    0.00 :   5574b:  orq    $0x0,-0x8(%rsp,%rsi,1)
    0.00 :   55751:  lea    0xf(%rsp),%r11
    0.00 :   55756:  and    $0xfffffffffffffff0,%r11
    0.00 :   5575a:  lea    (%r11,%r12,1),%rax
    0.00 :   5575e:  mov    %rax,-0x120(%rbp)
    0.00 :   55765:  cmp    %r15,%r8
    0.00 :   55768:  jae    56716 <__GI___printf_fp_l+0x2886>
    0.00 :   5576e:  mov    %r14d,-0xfc(%rbp)
    0.00 :   55775:  mov    %r11,%rdi
    0.00 :   55778:  mov    %r8,%r14
    0.00 :   5577b:  mov    -0x108(%rbp),%r12d
    0.00 :   55782:  mov    %r11,-0xf0(%rbp)
    0.00 :   55789:  mov    %rbx,-0x108(%rbp)
    0.00 :   55790:  mov    %r15,%rbx
    0.00 :   55793:  mov    -0xc0(%rbp),%r15d
    0.00 :   5579a:  mov    %rdx,-0xe8(%rbp)
    0.00 :   557a1:  mov    %r8,-0xf8(%rbp)
    0.00 :   557a8:  jmp    557c4 <__GI___printf_fp_l+0x1934>
    0.00 :   557aa:  nopw   0x0(%rax,%rax,1)
    0.00 :   557b0:  cmp    %edx,%r12d
    0.00 :   557b3:  je     55810 <__GI___printf_fp_l+0x1980>
    0.00 :   557b5:  mov    %dl,(%rdi)
    0.00 :   557b7:  add    $0x1,%rdi
    0.00 :   557bb:  add    $0x4,%r14
    0.00 :   557bf:  cmp    %rbx,%r14
    0.00 :   557c2:  jae    557e7 <__GI___printf_fp_l+0x1957>
    0.00 :   557c4:  mov    (%r14),%edx
    3.87 :   557c7:  cmp    %r15d,%edx // libc.so.6[557c7]
    0.00 :   557ca:  jne    557b0 <__GI___printf_fp_l+0x1920>
    0.00 :   557cc:  mov    -0x110(%rbp),%rsi
    0.00 :   557d3:  mov    %r13,%rdx
    0.00 :   557d6:  add    $0x4,%r14
    0.00 :   557da:  call   263d0 <*ABS*+0x9ec40@plt>
    0.00 :   557df:  mov    %rax,%rdi
    0.00 :   557e2:  cmp    %rbx,%r14
    0.00 :   557e5:  jb     557c4 <__GI___printf_fp_l+0x1934>
    0.00 :   557e7:  mov    %rbx,%r15
    0.00 :   557ea:  mov    -0xf0(%rbp),%r11
    0.00 :   557f1:  mov    -0xf8(%rbp),%r8
    0.00 :   557f8:  mov    -0xfc(%rbp),%r14d
    0.00 :   557ff:  mov    -0x108(%rbp),%rbx
    0.00 :   55806:  jmp    552e0 <__GI___printf_fp_l+0x1450>
    0.00 :   5580b:  nopl   0x0(%rax,%rax,1)
    0.00 :   55810:  mov    -0xe8(%rbp),%rdx
    0.00 :   55817:  mov    -0x118(%rbp),%rsi
    0.00 :   5581e:  call   263d0 <*ABS*+0x9ec40@plt>
    0.00 :   55823:  mov    %rax,%rdi
    0.00 :   55826:  jmp    557bb <__GI___printf_fp_l+0x192b>
    0.00 :   55828:  mov    -0xbc(%rbp),%eax
    0.00 :   5582e:  xor    %r14d,%r14d
    0.00 :   55831:  test   %eax,%eax
    0.00 :   55833:  jne    5528a <__GI___printf_fp_l+0x13fa>
    0.00 :   55839:  mov    0x28(%rbx),%rax
    0.00 :   5583d:  cmp    0x30(%rbx),%rax
    0.00 :   55841:  jae    5690e <__GI___printf_fp_l+0x2a7e>
    0.00 :   55847:  lea    0x1(%rax),%rdx
    0.00 :   5584b:  add    $0x1,%r14d
    0.00 :   5584f:  mov    %rdx,0x28(%rbx)
    0.00 :   55853:  movb   $0x2d,(%rax)
    0.00 :   55856:  mov    -0xb8(%rbp),%rax
    0.00 :   5585d:  testb  $0x20,0xc(%rax)
    0.00 :   55861:  jne    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55867:  mov    -0xb8(%rbp),%rax
    0.00 :   5586e:  cmpl   $0x30,0x10(%rax)
    0.00 :   55872:  jne    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   55874:  mov    -0xd0(%rbp),%r13d
    0.00 :   5587b:  test   %r13d,%r13d
    0.00 :   5587e:  jg     56636 <__GI___printf_fp_l+0x27a6>
    0.00 :   55884:  mov    -0xbc(%rbp),%r11d
    0.00 :   5588b:  test   %r11d,%r11d
    0.00 :   5588e:  je     55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55894:  mov    -0xb8(%rbp),%rax
    0.00 :   5589b:  testb  $0x8,0xd(%rax)
    0.00 :   5589f:  jne    5638a <__GI___printf_fp_l+0x24fa>
    0.00 :   558a5:  xor    %r11d,%r11d
    0.00 :   558a8:  xor    %r13d,%r13d
    0.00 :   558ab:  mov    -0xe0(%rbp),%rdx
    0.00 :   558b2:  sar    $0x2,%rdx
    0.00 :   558b6:  mov    %rdx,%r12
    0.00 :   558b9:  cmp    %r8,%r15
    0.00 :   558bc:  jne    554b0 <__GI___printf_fp_l+0x1620>
    0.00 :   558c2:  test   %rdx,%rdx
    0.00 :   558c5:  je     554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   558cb:  mov    %r14d,-0xe0(%rbp)
    0.00 :   558d2:  mov    %rdx,%r15
    0.00 :   558d5:  mov    %rbx,%r14
    0.00 :   558d8:  mov    %r8,%rbx
    0.00 :   558db:  jmp    55912 <__GI___printf_fp_l+0x1a82>
    0.00 :   558dd:  nopl   (%rax)
    0.00 :   558e0:  mov    0x20(%rax),%rdx
    0.00 :   558e4:  cmp    0x28(%rax),%rdx
    0.00 :   558e8:  jae    55925 <__GI___printf_fp_l+0x1a95>
    0.00 :   558ea:  lea    0x4(%rdx),%rcx
    0.00 :   558ee:  cmp    $0xffffffff,%esi
    0.00 :   558f1:  mov    %rcx,0x20(%rax)
    0.00 :   558f5:  sete   %al
    0.00 :   558f8:  mov    %esi,(%rdx)
    0.00 :   558fa:  test   %al,%al
    0.00 :   558fc:  jne    5536d <__GI___printf_fp_l+0x14dd>
    0.00 :   55902:  mov    %r12,%rax
    0.00 :   55905:  sub    $0x1,%rax
    0.00 :   55909:  je     56260 <__GI___printf_fp_l+0x23d0>
    0.00 :   5590f:  mov    %rax,%r12
    0.00 :   55912:  mov    0xa0(%r14),%rax
    0.00 :   55919:  add    $0x4,%rbx
    0.00 :   5591d:  mov    -0x4(%rbx),%esi
    0.00 :   55920:  test   %rax,%rax
    0.00 :   55923:  jne    558e0 <__GI___printf_fp_l+0x1a50>
    0.00 :   55925:  mov    %r14,%rdi
    0.00 :   55928:  call   7bc60 <__woverflow>
    0.00 :   5592d:  cmp    $0xffffffff,%eax
    0.00 :   55930:  sete   %al
    0.00 :   55933:  jmp    558fa <__GI___printf_fp_l+0x1a6a>
    0.00 :   55935:  nopl   (%rax)
    0.00 :   55938:  movslq %esi,%rax
    0.00 :   5593b:  mov    %ecx,-0x9c(%rbp)
    0.00 :   55941:  test   %eax,%eax
    0.00 :   55943:  js     55fce <__GI___printf_fp_l+0x213e>
    0.00 :   55949:  add    $0x8,%rax
    0.00 :   5594d:  mov    %rax,-0x120(%rbp)
    0.00 :   55954:  mov    -0xf0(%rbp),%eax
    0.00 :   5595a:  mov    $0x1,%r13d
    0.00 :   55960:  movl   $0x7fffffff,-0x130(%rbp)
    0.00 :   5596a:  movl   $0x1,-0x100(%rbp)
    0.00 :   55974:  mov    %eax,-0xe0(%rbp)
    0.00 :   5597a:  jmp    5494c <__GI___printf_fp_l+0xabc>
    0.00 :   5597f:  nop
    0.00 :   55980:  mov    -0xc0(%rbp),%edi
    0.00 :   55986:  cmp    %edi,-0x4(%rax)
    0.00 :   55989:  jne    559a7 <__GI___printf_fp_l+0x1b17>
    0.00 :   5598b:  sub    $0x4,%rax
    0.00 :   5598f:  jmp    559a7 <__GI___printf_fp_l+0x1b17>
    0.00 :   55991:  nopl   0x0(%rax)
    0.00 :   55998:  cmpl   $0x39,(%rax)
    0.00 :   5599b:  jne    5608a <__GI___printf_fp_l+0x21fa>
    0.00 :   559a1:  movl   $0x30,(%rax)
    0.00 :   559a7:  sub    $0x4,%rax
    0.00 :   559ab:  cmp    %r8,%rax
    0.00 :   559ae:  jae    55998 <__GI___printf_fp_l+0x1b08>
    0.00 :   559b0:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   559b7:  je     566d2 <__GI___printf_fp_l+0x2842>
    0.00 :   559bd:  mov    -0x128(%rbp),%rax
    0.00 :   559c4:  cmpl   $0x1,-0xa0(%rbp)
    0.00 :   559cb:  movl   $0x31,0x8(%rax)
    0.00 :   559d2:  sbb    %eax,%eax
    0.00 :   559d4:  and    $0x2,%eax
    0.00 :   559d7:  sub    $0x1,%eax
    0.00 :   559da:  add    %eax,-0x98(%rbp)
    0.00 :   559e0:  jne    559ec <__GI___printf_fp_l+0x1b5c>
    0.00 :   559e2:  movl   $0x0,-0xa0(%rbp)
    0.00 :   559ec:  mov    -0x134(%rbp),%eax
    0.00 :   559f2:  mov    -0x130(%rbp),%edi
    0.00 :   559f8:  add    %r14d,%eax
    0.00 :   559fb:  cmp    %edi,%eax
    0.00 :   559fd:  jle    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   55a03:  sub    %edi,%eax
    0.00 :   55a05:  movslq %eax,%rdi
    0.00 :   55a08:  sub    %eax,%r14d
    0.00 :   55a0b:  shl    $0x2,%rdi
    0.00 :   55a0f:  sub    %rdi,%r15
    0.00 :   55a12:  jmp    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   55a17:  mov    $0x2d,%edi
    0.00 :   55a1c:  cmp    $0x4,%eax
    0.00 :   55a1f:  jne    5516d <__GI___printf_fp_l+0x12dd>
    0.00 :   55a25:  cmpb   $0x67,-0x13c(%rbp)
    0.00 :   55a2c:  je     56acd <__GI___printf_fp_l+0x2c3d>
    0.00 :   55a32:  mov    %edx,(%r15)
    0.00 :   55a35:  movl   $0x2d,0x4(%r15)
    0.00 :   55a3d:  movl   $0x30,0x8(%r15)
    0.00 :   55a45:  lea    0xc(%r15),%rsi
    0.00 :   55a49:  jmp    551c7 <__GI___printf_fp_l+0x1337>
    5.08 :   55a4e:  movl   $0x66,-0x9c(%rbp) // libc.so.6[55a4e]
    0.00 :   55a58:  mov    -0xf0(%rbp),%eax
    0.00 :   55a5e:  movslq %eax,%rdx
    0.00 :   55a61:  test   %eax,%eax
    0.00 :   55a63:  jns    55a74 <__GI___printf_fp_l+0x1be4>
    0.00 :   55a65:  movl   $0x6,-0xf0(%rbp)
    0.00 :   55a6f:  mov    $0x6,%edx
    0.00 :   55a74:  mov    -0xa0(%rbp),%eax
    0.00 :   55a7a:  mov    %eax,-0x12c(%rbp)
    0.00 :   55a80:  test   %eax,%eax
    0.00 :   55a82:  jne    56152 <__GI___printf_fp_l+0x22c2>
    0.00 :   55a88:  movslq -0x98(%rbp),%rax
    0.00 :   55a8f:  cmpq   $0x0,-0xe8(%rbp)
    0.00 :   55a97:  movl   $0x7fffffff,-0x130(%rbp)
    0.00 :   55aa1:  mov    $0x1,%r13d
    0.00 :   55aa7:  lea    0x1(%rax),%edi
    0.00 :   55aaa:  lea    0x2(%rdx,%rax,1),%rax
    0.00 :   55aaf:  mov    %rax,-0x120(%rbp)
    0.00 :   55ab6:  mov    -0xf0(%rbp),%eax
    0.00 :   55abc:  mov    %edi,-0x100(%rbp)
    0.00 :   55ac2:  mov    %eax,-0xe0(%rbp)
    0.00 :   55ac8:  jne    5495a <__GI___printf_fp_l+0xaca>
    0.00 :   55ace:  jmp    549d1 <__GI___printf_fp_l+0xb41>
    0.00 :   55ad3:  cmp    %edx,-0x130(%rbp)
    0.00 :   55ad9:  jle    55e75 <__GI___printf_fp_l+0x1fe5>
    0.00 :   55adf:  mov    -0x130(%rbp),%edi
    0.00 :   55ae5:  lea    0x1(%rdx),%eax
    0.00 :   55ae8:  mov    %eax,-0x100(%rbp)
    0.00 :   55aee:  sub    %eax,%edi
    0.00 :   55af0:  mov    %edi,-0xe0(%rbp)
    0.00 :   55af6:  jmp    54911 <__GI___printf_fp_l+0xa81>
    0.00 :   55afb:  mov    %r12,%rdx
    0.00 :   55afe:  mov    %r13d,%ecx
    0.00 :   55b01:  mov    %r14,%rsi
    0.00 :   55b04:  mov    $0xc,%r15d
    0.00 :   55b0a:  call   4def0 <__mpn_lshift>
    0.00 :   55b0f:  lea    0x1365c2(%rip),%r12        # 18c0d8 <_fpioconst_pow10+0x138>
    0.00 :   55b16:  movl   $0x0,-0xd0(%rbp)
    0.00 :   55b20:  mov    %rax,%rcx
    0.00 :   55b23:  mov    -0x88(%rbp),%rax
    0.00 :   55b2a:  lea    0x1(%rax),%rdx
    0.00 :   55b2e:  mov    %rdx,-0x88(%rbp)
    0.00 :   55b35:  mov    -0x90(%rbp),%rdx
    0.00 :   55b3c:  mov    %rcx,(%rdx,%rax,8)
    0.00 :   55b40:  mov    -0x98(%rbp),%eax
    0.00 :   55b46:  movl   $0x1,-0xa0(%rbp)
    0.00 :   55b50:  neg    %eax
    0.00 :   55b52:  mov    %eax,-0x98(%rbp)
    0.00 :   55b58:  jmp    55bfb <__GI___printf_fp_l+0x1d6b>
    0.00 :   55b5d:  nopl   (%rax)
    0.00 :   55b60:  lea    0x8(%r11,%rcx,8),%r9
    0.00 :   55b65:  mov    %rax,%r8
    0.00 :   55b68:  mov    %rsi,%rcx
    0.00 :   55b6b:  mov    %r9,%rsi
    0.00 :   55b6e:  call   4e060 <__mpn_mul>
    0.00 :   55b73:  mov    -0x88(%rbp),%rcx
    0.00 :   55b7a:  mov    0x8(%r12),%rsi
    0.00 :   55b7f:  mov    -0x70(%rbp),%rdi
    0.00 :   55b83:  mov    -0x98(%rbp),%r11d
    0.00 :   55b8a:  add    %rcx,%rsi
    0.00 :   55b8d:  cmp    $0x1,%rax
    0.00 :   55b91:  sbb    $0x1,%rsi
    0.00 :   55b95:  mov    %r11d,%eax
    0.00 :   55b98:  lea    0x0(,%rsi,8),%r10
    0.00 :   55ba0:  mov    %rsi,-0x68(%rbp)
    0.00 :   55ba4:  mov    %rsi,%r13
    0.00 :   55ba7:  lea    -0x8(%rdi,%r10,1),%rdx
    0.00 :   55bac:  bsr    (%rdx),%r9
    0.00 :   55bb0:  sub    %rcx,%r13
    0.00 :   55bb3:  lea    0x3(%r11),%ecx
    0.00 :   55bb7:  add    $0x1,%r13
    0.00 :   55bbb:  shl    $0x6,%r13d
    0.00 :   55bbf:  xor    $0x3f,%r9
    0.00 :   55bc3:  sub    %r9d,%r13d
    0.00 :   55bc6:  mov    %r9d,%r14d
    0.00 :   55bc9:  sub    $0x1,%r13d
    0.00 :   55bcd:  cmp    %r13d,%ecx
    0.00 :   55bd0:  je     55d10 <__GI___printf_fp_l+0x1e80>
    0.00 :   55bd6:  lea    0x2(%r11),%edx
    0.00 :   55bda:  cmp    %edx,%r13d
    0.00 :   55bdd:  jle    55c58 <__GI___printf_fp_l+0x1dc8>
   11.03 :   55bdf:  lea    0x1363d2(%rip),%rdi        # 18bfb8 <_fpioconst_pow10+0x18> // libc.so.6[55bdf]
    0.00 :   55be6:  sub    $0x1,%r15d
    0.00 :   55bea:  cmp    %rdi,%r12
    0.00 :   55bed:  je     55d5a <__GI___printf_fp_l+0x1eca>
    0.00 :   55bf3:  test   %eax,%eax
    0.00 :   55bf5:  jle    55df6 <__GI___printf_fp_l+0x1f66>
    0.00 :   55bfb:  sub    $0x18,%r12
    0.00 :   55bff:  cmp    %eax,0x14(%r12)
    0.00 :   55c04:  jg     55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   55c06:  mov    0x8(%r12),%rsi
    0.00 :   55c0b:  mov    -0x70(%rbp),%rdi
    0.00 :   55c0f:  lea    0x13650a(%rip),%r11        # 18c120 <__tens>
    0.00 :   55c16:  mov    -0x88(%rbp),%rax
    0.00 :   55c1d:  mov    (%r12),%rcx
    0.00 :   55c21:  lea    -0x1(%rsi),%rdx
    0.00 :   55c25:  mov    -0x90(%rbp),%rsi
    0.00 :   55c2c:  cmp    %rdx,%rax
    0.00 :   55c2f:  jl     55b60 <__GI___printf_fp_l+0x1cd0>
    0.00 :   55c35:  mov    %rdx,%r8
    0.00 :   55c38:  lea    0x8(%r11,%rcx,8),%rcx
    0.00 :   55c3d:  mov    %rax,%rdx
    0.00 :   55c40:  call   4e060 <__mpn_mul>
    0.00 :   55c45:  jmp    55b73 <__GI___printf_fp_l+0x1ce3>
    0.00 :   55c4a:  mov    -0x70(%rbp),%rdi
    0.00 :   55c4e:  mov    -0x68(%rbp),%rsi
    0.00 :   55c52:  nopw   0x0(%rax,%rax,1)
    0.00 :   55c58:  mov    %r11d,%eax
    0.00 :   55c5b:  mov    $0x1,%edx
    0.00 :   55c60:  mov    %r15d,%ecx
    0.00 :   55c63:  sub    %r13d,%eax
    0.00 :   55c66:  shl    %cl,%edx
    0.00 :   55c68:  or     %edx,-0xd0(%rbp)
    0.00 :   55c6e:  mov    (%rdi),%rdx
    0.00 :   55c71:  sub    %eax,%r9d
    0.00 :   55c74:  test   %eax,%eax
    0.00 :   55c76:  mov    %eax,-0x98(%rbp)
    0.00 :   55c7c:  cmovs  %r9d,%r14d
    0.00 :   55c80:  test   %rdx,%rdx
    0.00 :   55c83:  jne    567f7 <__GI___printf_fp_l+0x2967>
    0.00 :   55c89:  lea    0x8(%rdi),%rdx
    0.00 :   55c8d:  mov    $0x1,%r10d
    0.00 :   55c93:  nopl   0x0(%rax,%rax,1)
    0.00 :   55c98:  mov    (%rdx),%rcx
    0.00 :   55c9b:  mov    %rdx,%r11
    0.00 :   55c9e:  mov    %r10,%r9
    0.00 :   55ca1:  add    $0x8,%rdx
    0.00 :   55ca5:  lea    0x1(%r10),%r10
    0.00 :   55ca9:  test   %rcx,%rcx
    0.00 :   55cac:  je     55c98 <__GI___printf_fp_l+0x1e08>
    0.00 :   55cae:  movslq %r9d,%r13
    0.00 :   55cb1:  cmp    $0x3f,%r14d
    0.00 :   55cb5:  je     56778 <__GI___printf_fp_l+0x28e8>
    0.00 :   55cbb:  mov    $0x3f,%eax
    0.00 :   55cc0:  tzcnt  %rcx,%rcx
    0.00 :   55cc5:  sub    %r14d,%eax
    0.00 :   55cc8:  cmp    %ecx,%eax
    0.00 :   55cca:  jle    567e4 <__GI___printf_fp_l+0x2954>
    0.00 :   55cd0:  lea    -0x1(%r9),%r13d
    0.00 :   55cd4:  mov    %eax,%ecx
    0.00 :   55cd6:  movslq %r13d,%r13
    0.00 :   55cd9:  sub    %r13,%rsi
    0.00 :   55cdc:  mov    %rsi,%rdx
    0.00 :   55cdf:  lea    -0x8(%rdi,%r9,8),%rsi
    0.00 :   55ce4:  mov    -0x90(%rbp),%rdi
    0.00 :   55ceb:  call   4f120 <__mpn_rshift>
    0.00 :   55cf0:  mov    -0x68(%rbp),%rax
    0.00 :   55cf4:  sub    %r13,%rax
    0.00 :   55cf7:  mov    %rax,-0x88(%rbp)
    0.00 :   55cfe:  mov    -0x98(%rbp),%eax
    0.00 :   55d04:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   55d09:  nopl   0x0(%rax)
    0.00 :   55d10:  cmp    $0x3c,%r9d
    0.00 :   55d14:  jg     5627a <__GI___printf_fp_l+0x23ea>
    0.00 :   55d1a:  mov    $0x3c,%ecx
    0.00 :   55d1f:  mov    $0xa,%eax
    0.00 :   55d24:  movq   $0x0,-0x50(%rbp)
    0.00 :   55d2c:  sub    %r9d,%ecx
    0.00 :   55d2f:  shl    %cl,%rax
    0.00 :   55d32:  lea    0x2(%r11),%ecx
    0.00 :   55d36:  mov    %rax,-0x48(%rbp)
    0.00 :   55d3a:  cmp    %ecx,%r13d
    0.00 :   55d3d:  jle    55c58 <__GI___printf_fp_l+0x1dc8>
    0.00 :   55d43:  cmp    %rax,(%rdx)
    0.00 :   55d46:  jb     55c58 <__GI___printf_fp_l+0x1dc8>
    0.00 :   55d4c:  je     56702 <__GI___printf_fp_l+0x2872>
    0.00 :   55d52:  mov    %r11d,%eax
    0.00 :   55d55:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   55d5a:  test   %eax,%eax
    0.00 :   55d5c:  jle    55df6 <__GI___printf_fp_l+0x1f66>
    0.00 :   55d62:  mov    -0x88(%rbp),%rdx
    0.00 :   55d69:  mov    -0x70(%rbp),%rdi
    0.00 :   55d6d:  mov    $0xa,%ecx
    0.00 :   55d72:  mov    -0x90(%rbp),%rsi
    0.00 :   55d79:  call   4e4c0 <__mpn_mul_1>
    0.00 :   55d7e:  mov    -0x88(%rbp),%rdi
    0.00 :   55d85:  mov    -0x70(%rbp),%rsi
    0.00 :   55d89:  xor    %r8d,%r8d
    0.00 :   55d8c:  mov    -0x98(%rbp),%eax
    0.00 :   55d92:  mov    $0x4,%edx
    0.00 :   55d97:  mov    %rdi,-0x68(%rbp)
    0.00 :   55d9b:  mov    %edx,%ecx
    0.00 :   55d9d:  tzcnt  (%rsi),%r8
    0.00 :   55da2:  cmp    %edx,%eax
    0.00 :   55da4:  cmovle %eax,%ecx
    0.00 :   55da7:  cmp    %r8d,%ecx
    0.00 :   55daa:  jle    5671e <__GI___printf_fp_l+0x288e>
    0.00 :   55db0:  mov    $0x40,%eax
    0.00 :   55db5:  mov    %rdi,%rdx
    0.00 :   55db8:  mov    -0x90(%rbp),%rdi
    0.00 :   55dbf:  sub    %ecx,%eax
    0.00 :   55dc1:  mov    %eax,%ecx
    0.00 :   55dc3:  call   4def0 <__mpn_lshift>
    0.00 :   55dc8:  test   %rax,%rax
    0.00 :   55dcb:  je     55de4 <__GI___printf_fp_l+0x1f54>
    0.00 :   55dcd:  mov    -0x68(%rbp),%rdx
    0.00 :   55dd1:  lea    0x1(%rdx),%rcx
    0.00 :   55dd5:  mov    %rcx,-0x68(%rbp)
    0.00 :   55dd9:  mov    -0x90(%rbp),%rcx
    0.00 :   55de0:  mov    %rax,(%rcx,%rdx,8)
    0.00 :   55de4:  mov    -0x68(%rbp),%rax
    0.00 :   55de8:  orl    $0x1,-0xd0(%rbp)
    0.00 :   55def:  mov    %rax,-0x88(%rbp)
    0.00 :   55df6:  mov    -0xd0(%rbp),%eax
    0.00 :   55dfc:  mov    %eax,-0x98(%rbp)
    0.00 :   55e02:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   55e07:  mov    -0xa4(%rbp),%r11d
    0.00 :   55e0e:  test   %r11d,%r11d
    0.00 :   55e11:  jne    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   55e17:  jmp    553fa <__GI___printf_fp_l+0x156a>
    0.00 :   55e1c:  add    %eax,%edi
    0.00 :   55e1e:  mov    %edi,-0xd0(%rbp)
    0.00 :   55e24:  test   %sil,%sil
    0.00 :   55e27:  je     555f8 <__GI___printf_fp_l+0x1768>
    0.00 :   55e2d:  jmp    55615 <__GI___printf_fp_l+0x1785>
    0.00 :   55e32:  mov    0xd8(%rbx),%r15
    0.00 :   55e39:  lea    0x179bc0(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   55e40:  lea    0x17a921(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   55e47:  sub    %rdx,%rax
    0.00 :   55e4a:  mov    %r15,%rcx
    0.00 :   55e4d:  sub    %rdx,%rcx
    0.00 :   55e50:  cmp    %rax,%rcx
    0.00 :   55e53:  jae    56934 <__GI___printf_fp_l+0x2aa4>
    0.00 :   55e59:  mov    0x38(%r15),%rax
    0.00 :   55e5d:  jmp    554de <__GI___printf_fp_l+0x164e>
    0.00 :   55e62:  mov    0x17cfa7(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   55e69:  movl   $0x22,%fs:(%rax)
    0.00 :   55e70:  jmp    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   55e75:  mov    -0x130(%rbp),%esi
    0.00 :   55e7b:  sub    $0x2,%eax
    0.00 :   55e7e:  movl   $0x1,-0x100(%rbp)
    0.00 :   55e88:  sub    $0x1,%esi
    0.00 :   55e8b:  movslq %esi,%rdx
    0.00 :   55e8e:  mov    %esi,-0xe0(%rbp)
    0.00 :   55e94:  lea    0x8(%rdx),%rdi
    0.00 :   55e98:  mov    %rdi,-0x120(%rbp)
    0.00 :   55e9f:  jmp    54928 <__GI___printf_fp_l+0xa98>
    0.00 :   55ea4:  movl   $0x0,-0x12c(%rbp)
    0.00 :   55eae:  mov    $0x1,%eax
    0.00 :   55eb3:  jmp    549ca <__GI___printf_fp_l+0xb3a>
    0.00 :   55eb8:  mov    %r14,%r11
    0.00 :   55ebb:  mov    -0xe0(%rbp),%r14d
    0.00 :   55ec2:  lea    (%r14,%r12,1),%eax
    0.00 :   55ec6:  sub    %r11d,%eax
    0.00 :   55ec9:  mov    %eax,%r14d
    0.00 :   55ecc:  jmp    554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   55ed1:  mov    %eax,%esi
    0.00 :   55ed3:  movslq %edx,%rdx
    0.00 :   55ed6:  sar    $0x1f,%esi
    0.00 :   55ed9:  lea    (%rdi,%rdx,8),%rdi
    0.00 :   55edd:  mov    %r12,%rdx
    0.00 :   55ee0:  shr    $0x1a,%esi
    0.00 :   55ee3:  lea    (%rax,%rsi,1),%ecx
    0.00 :   55ee6:  and    $0x3f,%ecx
    0.00 :   55ee9:  sub    %esi,%ecx
    0.00 :   55eeb:  mov    %r14,%rsi
    0.00 :   55eee:  call   4def0 <__mpn_lshift>
    0.00 :   55ef3:  mov    -0x98(%rbp),%ecx
    0.00 :   55ef9:  mov    -0x88(%rbp),%rsi
    0.00 :   55f00:  add    %ecx,%r13d
    0.00 :   55f03:  lea    0x3f(%r13),%edx
    0.00 :   55f07:  cmovns %r13d,%edx
    0.00 :   55f0b:  sar    $0x6,%edx
    0.00 :   55f0e:  movslq %edx,%rdx
    0.00 :   55f11:  add    %rdx,%rsi
    0.00 :   55f14:  mov    %rsi,-0x88(%rbp)
    0.00 :   55f1b:  test   %rax,%rax
    0.00 :   55f1e:  je     54684 <__GI___printf_fp_l+0x7f4>
    0.00 :   55f24:  lea    0x1(%rsi),%rdi
    0.00 :   55f28:  mov    %rdi,-0x88(%rbp)
    0.00 :   55f2f:  mov    -0x90(%rbp),%rdi
    0.00 :   55f36:  mov    %rax,(%rdi,%rsi,8)
    0.00 :   55f3a:  jmp    54684 <__GI___printf_fp_l+0x7f4>
    0.00 :   55f3f:  test   $0x10,%dl
    0.00 :   55f42:  je     55fc0 <__GI___printf_fp_l+0x2130>
    0.00 :   55f44:  mov    -0xbc(%rbp),%eax
    0.00 :   55f4a:  test   %eax,%eax
    0.00 :   55f4c:  jne    5668c <__GI___printf_fp_l+0x27fc>
    0.00 :   55f52:  xor    %r14d,%r14d
    0.00 :   55f55:  mov    0x28(%rbx),%rax
    0.00 :   55f59:  cmp    0x30(%rbx),%rax
    0.00 :   55f5d:  jae    56a94 <__GI___printf_fp_l+0x2c04>
    0.00 :   55f63:  lea    0x1(%rax),%rdx
    0.00 :   55f67:  add    $0x1,%r14d
    0.00 :   55f6b:  mov    %rdx,0x28(%rbx)
    0.00 :   55f6f:  movb   $0x20,(%rax)
    0.00 :   55f72:  mov    -0xb8(%rbp),%rax
    0.00 :   55f79:  testb  $0x20,0xc(%rax)
    0.00 :   55f7d:  je     55659 <__GI___printf_fp_l+0x17c9>
    0.00 :   55f83:  jmp    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55f88:  mov    %r8,-0xe8(%rbp)
    0.00 :   55f8f:  mov    $0x2d,%esi
    0.00 :   55f94:  mov    %rbx,%rdi
    0.00 :   55f97:  call   7bc60 <__woverflow>
    0.00 :   55f9c:  mov    -0xe8(%rbp),%r8
    0.00 :   55fa3:  cmp    $0xffffffff,%eax
    0.00 :   55fa6:  sete   %al
    0.00 :   55fa9:  test   %al,%al
    0.00 :   55fab:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   55fb1:  mov    -0xb8(%rbp),%rax
    0.00 :   55fb8:  add    $0x1,%r14d
    0.00 :   55fbc:  movzbl 0xc(%rax),%edx
    0.00 :   55fc0:  and    $0x20,%edx
    0.00 :   55fc3:  jne    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   55fc9:  jmp    55867 <__GI___printf_fp_l+0x19d7>
    0.00 :   55fce:  movq   $0xe,-0x120(%rbp)
    0.00 :   55fd9:  movl   $0x6,-0xf0(%rbp)
    0.00 :   55fe3:  jmp    55954 <__GI___printf_fp_l+0x1ac4>
    0.00 :   55fe8:  mov    -0xe0(%rbp),%r12d
    0.00 :   55fef:  test   %r12d,%r12d
    0.00 :   55ff2:  je     5660a <__GI___printf_fp_l+0x277a>
    0.00 :   55ff8:  cmpq   $0x1,-0x88(%rbp)
    0.00 :   56000:  jg     54b28 <__GI___printf_fp_l+0xc98>
    0.00 :   56006:  mov    -0x90(%rbp),%rdx
    0.00 :   5600d:  cmpq   $0x0,(%rdx)
    0.00 :   56011:  jne    54b28 <__GI___printf_fp_l+0xc98>
    0.00 :   56017:  mov    %rax,%r15
    0.00 :   5601a:  mov    $0x1,%r13d
    0.00 :   56020:  jmp    54b3a <__GI___printf_fp_l+0xcaa>
    0.00 :   56025:  mov    -0x90(%rbp),%r10
    0.00 :   5602c:  cmpq   $0x0,(%r10)
    0.00 :   56030:  je     54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   56036:  cmpq   $0x0,-0x78(%rbp)
    0.00 :   5603b:  jne    54f4e <__GI___printf_fp_l+0x10be>
    0.00 :   56041:  mov    $0x1,%eax
    0.00 :   56046:  jmp    54f46 <__GI___printf_fp_l+0x10b6>
    0.00 :   5604b:  mov    -0x128(%rbp),%rax
    0.00 :   56052:  mov    -0xc0(%rbp),%esi
    0.00 :   56058:  movl   $0x0,-0x134(%rbp)
    0.00 :   56062:  subl   $0x1,-0x98(%rbp)
    0.00 :   56069:  movl   $0x30,0x8(%rax)
    0.00 :   56070:  lea    0x10(%rax),%r15
    0.00 :   56074:  mov    %esi,0xc(%rax)
    0.00 :   56077:  lea    -0xa0(%rbp),%rax
    0.00 :   5607e:  mov    %rax,-0xd0(%rbp)
    0.00 :   56085:  jmp    54b3a <__GI___printf_fp_l+0xcaa>
    0.00 :   5608a:  cmp    %r8,%rax
    0.00 :   5608d:  jb     559b0 <__GI___printf_fp_l+0x1b20>
    0.00 :   56093:  addl   $0x1,(%rax)
    0.00 :   56096:  jmp    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   5609b:  add    $0x1,%r14d
    0.00 :   5609f:  test   %ecx,%ecx
    0.00 :   560a1:  jne    56537 <__GI___printf_fp_l+0x26a7>
    0.00 :   560a7:  movslq %r14d,%r14
    0.00 :   560aa:  sub    %r14,%rdx
    0.00 :   560ad:  test   %rdx,%rdx
    0.00 :   560b0:  jle    560d8 <__GI___printf_fp_l+0x2248>
    0.00 :   560b2:  lea    (%rdi,%r8,8),%rcx
    0.00 :   560b6:  xor    %eax,%eax
    0.00 :   560b8:  nopl   0x0(%rax,%rax,1)
    0.00 :   560c0:  mov    (%rcx,%rax,8),%rdx
    0.00 :   560c4:  mov    %rdx,(%rdi,%rax,8)
    0.00 :   560c8:  mov    -0x78(%rbp),%rdx
    0.00 :   560cc:  add    $0x1,%rax
    0.00 :   560d0:  sub    %r14,%rdx
    0.00 :   560d3:  cmp    %rax,%rdx
    0.00 :   560d6:  jg     560c0 <__GI___printf_fp_l+0x2230>
    0.00 :   560d8:  mov    %rdx,-0x78(%rbp)
    0.00 :   560dc:  mov    -0x88(%rbp),%rdx
    0.00 :   560e3:  sub    %r14,%rdx
    0.00 :   560e6:  test   %rdx,%rdx
    0.00 :   560e9:  jle    56113 <__GI___printf_fp_l+0x2283>
    0.00 :   560eb:  lea    (%r9,%r8,8),%rcx
    0.00 :   560ef:  xor    %eax,%eax
    0.00 :   560f1:  nopl   0x0(%rax)
    0.00 :   560f8:  mov    (%rcx,%rax,8),%rdx
    0.00 :   560fc:  mov    %rdx,(%r9,%rax,8)
    0.00 :   56100:  mov    -0x88(%rbp),%rdx
    0.00 :   56107:  add    $0x1,%rax
    0.00 :   5610b:  sub    %r14,%rdx
    0.00 :   5610e:  cmp    %rax,%rdx
    0.00 :   56111:  jg     560f8 <__GI___printf_fp_l+0x2268>
    0.00 :   56113:  mov    %rdx,-0x88(%rbp)
    0.00 :   5611a:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   5611f:  xor    %eax,%eax
    0.00 :   56121:  xor    %edx,%edx
    0.00 :   56123:  jmp    556ee <__GI___printf_fp_l+0x185e>
    0.00 :   56128:  lea    0x2(%r8),%eax
    0.00 :   5612c:  mov    %edi,-0x12c(%rbp)
    0.00 :   56132:  cltq
    0.00 :   56134:  jmp    549ca <__GI___printf_fp_l+0xb3a>
    0.00 :   56139:  lea    -0x1(%rdx),%eax
    0.00 :   5613c:  xor    %edx,%edx
    0.00 :   5613e:  div    %ecx
    0.00 :   56140:  add    %edi,%eax
    0.00 :   56142:  mov    %eax,-0x12c(%rbp)
    0.00 :   56148:  add    $0x1,%eax
    0.00 :   5614b:  cltq
    0.00 :   5614d:  jmp    549ca <__GI___printf_fp_l+0xb3a>
    0.00 :   56152:  lea    0x2(%rdx),%rax
    0.00 :   56156:  mov    %rax,-0x120(%rbp)
    0.00 :   5615d:  jmp    55954 <__GI___printf_fp_l+0x1ac4>
    0.00 :   56162:  movslq %edx,%r13
    0.00 :   56165:  jmp    54677 <__GI___printf_fp_l+0x7e7>
    0.00 :   5616a:  mov    %r8b,-0xd0(%rbp)
    0.00 :   56171:  mov    $0x2d,%esi
    0.00 :   56176:  mov    %rbx,%rdi
    0.00 :   56179:  call   7bc60 <__woverflow>
    0.00 :   5617e:  movzbl -0xd0(%rbp),%r8d
    0.00 :   56186:  cmp    $0xffffffff,%eax
    0.00 :   56189:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   5618f:  mov    0xa0(%rbx),%rax
    0.00 :   56196:  add    $0x1,%r12d
    0.00 :   5619a:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   5619f:  call   78be0 <_IO_padn>
    0.00 :   561a4:  jmp    55543 <__GI___printf_fp_l+0x16b3>
    0.00 :   561a9:  mov    -0xb8(%rbp),%rax
    0.00 :   561b0:  movzbl 0xc(%rax),%edx
    0.00 :   561b4:  test   $0x40,%dl
    0.00 :   561b7:  je     5667c <__GI___printf_fp_l+0x27ec>
    0.00 :   561bd:  mov    -0xd0(%rbp),%r14d
    0.00 :   561c4:  mov    0xa0(%rbx),%rax
    0.00 :   561cb:  test   %rax,%rax
    0.00 :   561ce:  je     56950 <__GI___printf_fp_l+0x2ac0>
    0.00 :   561d4:  mov    0x20(%rax),%rdx
    0.00 :   561d8:  cmp    0x28(%rax),%rdx
    0.00 :   561dc:  jae    56950 <__GI___printf_fp_l+0x2ac0>
    0.00 :   561e2:  lea    0x4(%rdx),%rsi
    0.00 :   561e6:  add    $0x1,%r14d
    0.00 :   561ea:  mov    %rsi,0x20(%rax)
    0.00 :   561ee:  mov    -0xb8(%rbp),%rax
    0.00 :   561f5:  movl   $0x2b,(%rdx)
    0.00 :   561fb:  testb  $0x20,0xc(%rax)
    0.00 :   561ff:  jne    55894 <__GI___printf_fp_l+0x1a04>
    0.00 :   56205:  mov    -0xb8(%rbp),%rax
    0.00 :   5620c:  cmpl   $0x30,0x10(%rax)
    0.00 :   56210:  jne    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   56216:  mov    -0xd0(%rbp),%ecx
    0.00 :   5621c:  test   %ecx,%ecx
    0.00 :   5621e:  jle    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   56224:  mov    -0xd0(%rbp),%r12d
    0.00 :   5622b:  mov    $0x30,%esi
    0.00 :   56230:  mov    %rbx,%rdi
    0.00 :   56233:  mov    %r8,-0xe8(%rbp)
    0.00 :   5623a:  mov    %r12,%rdx
    0.00 :   5623d:  call   7a890 <_IO_wpadn>
    0.00 :   56242:  mov    -0xe8(%rbp),%r8
    0.00 :   56249:  cmp    %rax,%r12
    0.00 :   5624c:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   56252:  mov    -0xd0(%rbp),%eax
    0.00 :   56258:  add    %eax,%r14d
    0.00 :   5625b:  jmp    55894 <__GI___printf_fp_l+0x1a04>
    0.00 :   56260:  mov    %r14,%rbx
    0.00 :   56263:  mov    -0xe0(%rbp),%r14d
    0.00 :   5626a:  lea    0x1(%r14,%r15,1),%r9d
    0.00 :   5626f:  sub    %r12d,%r9d
    0.00 :   56272:  mov    %r9d,%r14d
    0.00 :   56275:  jmp    554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   5627a:  lea    -0x50(%rbp),%rdi
    0.00 :   5627e:  mov    $0x40,%ecx
    0.00 :   56283:  movdqa 0x14aa75(%rip),%xmm0        # 1a0d00 <in6addr_any+0x250>
    0.00 :   5628b:  mov    $0x2,%edx
    0.00 :   56290:  sub    %r9d,%ecx
    0.00 :   56293:  mov    %rdi,%rsi
    0.00 :   56296:  mov    %r9,-0xe0(%rbp)
    0.00 :   5629d:  movaps %xmm0,-0x50(%rbp)
    0.00 :   562a1:  call   4def0 <__mpn_lshift>
    0.00 :   562a6:  mov    -0x98(%rbp),%r11d
    0.00 :   562ad:  mov    -0xe0(%rbp),%r9
    0.00 :   562b4:  lea    0x2(%r11),%edx
    0.00 :   562b8:  mov    %r11d,%eax
    0.00 :   562bb:  cmp    %r13d,%edx
    0.00 :   562be:  jge    55c4a <__GI___printf_fp_l+0x1dba>
    0.00 :   562c4:  lea    0x3(%r11),%edx
    0.00 :   562c8:  cmp    %r13d,%edx
    0.00 :   562cb:  jne    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   562d1:  mov    -0x68(%rbp),%rsi
    0.00 :   562d5:  mov    -0x70(%rbp),%rdi
    0.00 :   562d9:  mov    -0x48(%rbp),%rax
    0.00 :   562dd:  lea    0x0(,%rsi,8),%r10
    0.00 :   562e5:  lea    -0x8(%rdi,%r10,1),%rdx
    0.00 :   562ea:  jmp    55d43 <__GI___printf_fp_l+0x1eb3>
    0.00 :   562ef:  movmskpd %xmm0,%r12d
    0.00 :   562f4:  and    $0x1,%r12d
    0.00 :   562f8:  jmp    54da1 <__GI___printf_fp_l+0xf11>
    0.00 :   562fd:  fxam
    0.00 :   562ff:  fnstsw %ax
    0.00 :   56301:  fstp   %st(0)
    0.00 :   56303:  lea    0x140d6e(%rip),%rcx        # 197078 <not_available+0x1bb>
    0.00 :   5630a:  lea    0x14afb7(%rip),%r15        # 1a12c8 <default_rwlockattr+0x2d8>
    0.00 :   56311:  mov    %eax,%r12d
    0.00 :   56314:  mov    -0xb8(%rbp),%rax
    0.00 :   5631b:  and    $0x200,%r12d
    0.00 :   56322:  movslq 0x8(%rax),%rdx
    0.00 :   56326:  mov    0x17cacb(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   5632d:  mov    %r12d,-0xa4(%rbp)
    0.00 :   56334:  mov    %fs:(%rax),%rax
    0.00 :   56338:  testb  $0x1,0x1(%rax,%rdx,2)
    0.00 :   5633d:  lea    0x140c49(%rip),%rax        # 196f8d <not_available+0xd0>
    0.00 :   56344:  cmove  %rax,%rcx
    0.00 :   56348:  lea    0x14af99(%rip),%rax        # 1a12e8 <default_rwlockattr+0x2f8>
    0.00 :   5634f:  cmove  %rax,%r15
    0.00 :   56353:  jmp    5400e <__GI___printf_fp_l+0x17e>
    0.00 :   56358:  mov    %r12,%rdi
    0.00 :   5635b:  call   266c0 <malloc@plt>
    0.00 :   56360:  mov    %rax,-0x128(%rbp)
    0.00 :   56367:  test   %rax,%rax
    0.00 :   5636a:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56370:  movl   $0x0,-0x140(%rbp)
    0.00 :   5637a:  movq   $0x1,-0x150(%rbp)
    0.00 :   56385:  jmp    54a8d <__GI___printf_fp_l+0xbfd>
    0.00 :   5638a:  movq   $0x0,-0x120(%rbp)
    0.00 :   56395:  xor    %edi,%edi
    0.00 :   56397:  xor    %r11d,%r11d
    0.00 :   5639a:  mov    -0x120(%rbp),%r12
    0.00 :   563a1:  mov    %rdi,%rsi
    0.00 :   563a4:  mov    %r11,%rdi
    0.00 :   563a7:  mov    %r8,-0xf0(%rbp)
    0.00 :   563ae:  mov    %r11,-0xe8(%rbp)
    0.00 :   563b5:  mov    %r12,%rdx
    0.00 :   563b8:  call   53ba0 <_i18n_number_rewrite>
    0.00 :   563bd:  mov    -0xe8(%rbp),%r13
    0.00 :   563c4:  mov    -0xf0(%rbp),%r8
    0.00 :   563cb:  mov    %r12,%rdi
    0.00 :   563ce:  mov    %rax,%r11
    0.00 :   563d1:  jmp    552f4 <__GI___printf_fp_l+0x1464>
    0.00 :   563d6:  call   78be0 <_IO_padn>
    0.00 :   563db:  cmp    %r12,%rax
    0.00 :   563de:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   563e4:  mov    -0xa4(%rbp),%eax
    0.00 :   563ea:  mov    -0xe8(%rbp),%r8
    0.00 :   563f1:  test   %eax,%eax
    0.00 :   563f3:  je     567b4 <__GI___printf_fp_l+0x2924>
    0.00 :   563f9:  mov    -0xd0(%rbp),%r14d
    0.00 :   56400:  jmp    55839 <__GI___printf_fp_l+0x19a9>
    0.00 :   56405:  xor    %r8d,%r8d
    0.00 :   56408:  tzcnt  (%r9,%r13,1),%r8
    0.00 :   5640e:  mov    $0x40,%r15d
    0.00 :   56414:  sub    %ecx,%r15d
    0.00 :   56417:  test   %r14d,%r14d
    0.00 :   5641a:  jne    56489 <__GI___printf_fp_l+0x25f9>
    0.00 :   5641c:  xor    %r12d,%r12d
    0.00 :   5641f:  cmp    %r15d,%r8d
    0.00 :   56422:  jl     5687d <__GI___printf_fp_l+0x29ed>
    0.00 :   56428:  sub    %r12,%rdx
    0.00 :   5642b:  mov    %r15d,%ecx
    0.00 :   5642e:  add    $0x1,%r14d
    0.00 :   56432:  call   4f120 <__mpn_rshift>
    0.00 :   56437:  mov    -0x90(%rbp),%rdi
    0.00 :   5643e:  mov    %r15d,%ecx
    0.00 :   56441:  movslq %r14d,%r14
    0.00 :   56444:  mov    -0x88(%rbp),%rdx
    0.00 :   5644b:  sub    %r14,-0x78(%rbp)
    0.00 :   5644f:  lea    (%rdi,%r13,1),%rsi
    0.00 :   56453:  sub    %r12,%rdx
    0.00 :   56456:  call   4f120 <__mpn_rshift>
    0.00 :   5645b:  mov    -0x88(%rbp),%rdx
    0.00 :   56462:  mov    -0x90(%rbp),%rcx
    0.00 :   56469:  mov    %rdx,%rax
    0.00 :   5646c:  sub    %r12,%rax
    0.00 :   5646f:  cmpq   $0x0,-0x8(%rcx,%rax,8)
    0.00 :   56475:  jne    5647d <__GI___printf_fp_l+0x25ed>
    0.00 :   56477:  mov    %rdx,%rax
    0.00 :   5647a:  sub    %r14,%rax
    0.00 :   5647d:  mov    %rax,-0x88(%rbp)
    0.00 :   56484:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   56489:  movslq %r14d,%r12
    0.00 :   5648c:  cmp    %r15d,%r8d
    0.00 :   5648f:  jge    56428 <__GI___printf_fp_l+0x2598>
    0.00 :   56491:  sub    $0x1,%r14d
    0.00 :   56495:  sub    $0x8,%r13
    0.00 :   56499:  mov    %r15d,%ecx
    0.00 :   5649c:  movslq %r14d,%r14
    0.00 :   5649f:  lea    (%rdi,%r13,1),%rsi
    0.00 :   564a3:  sub    %r14,%rdx
    0.00 :   564a6:  call   4f120 <__mpn_rshift>
    0.00 :   564ab:  mov    -0x90(%rbp),%rdi
    0.00 :   564b2:  mov    %r15d,%ecx
    0.00 :   564b5:  sub    %r12,-0x78(%rbp)
    0.00 :   564b9:  mov    -0x88(%rbp),%rdx
    0.00 :   564c0:  lea    (%rdi,%r13,1),%rsi
    0.00 :   564c4:  sub    %r14,%rdx
    0.00 :   564c7:  call   4f120 <__mpn_rshift>
    0.00 :   564cc:  mov    -0x88(%rbp),%rdx
    0.00 :   564d3:  mov    -0x90(%rbp),%rcx
    0.00 :   564da:  mov    %rdx,%rax
    0.00 :   564dd:  sub    %r14,%rax
    0.00 :   564e0:  cmpq   $0x0,-0x8(%rcx,%rax,8)
    0.00 :   564e6:  jne    5647d <__GI___printf_fp_l+0x25ed>
    0.00 :   564e8:  mov    %rdx,%rax
    0.00 :   564eb:  sub    %r12,%rax
    0.00 :   564ee:  jmp    5647d <__GI___printf_fp_l+0x25ed>
    0.00 :   564f0:  lea    -0xa0(%rbp),%rdi
    0.00 :   564f7:  mov    %r8,%rax
    0.00 :   564fa:  movl   $0x0,-0x134(%rbp)
    0.00 :   56504:  mov    %rdi,-0xd0(%rbp)
    0.00 :   5650b:  jmp    54b0b <__GI___printf_fp_l+0xc7b>
    0.00 :   56510:  mov    %r13,%rdi
    0.00 :   56513:  xor    %r13d,%r13d
    0.00 :   56516:  call   26420 <free@plt>
    0.00 :   5651b:  mov    -0x128(%rbp),%rdi
    0.00 :   56522:  call   26420 <free@plt>
    0.00 :   56527:  movq   $0x0,-0x128(%rbp)
    0.00 :   56532:  jmp    55503 <__GI___printf_fp_l+0x1673>
    0.00 :   56537:  mov    (%r9,%r13,1),%r9
    0.00 :   5653b:  xor    %r8d,%r8d
    0.00 :   5653e:  tzcnt  %rax,%rax
    0.00 :   56543:  tzcnt  %r9,%r8
    0.00 :   56548:  cmp    %eax,%r8d
    0.00 :   5654b:  cmovg  %eax,%r8d
    0.00 :   5654f:  test   %r9,%r9
    0.00 :   56552:  cmove  %eax,%r8d
    0.00 :   56556:  jmp    5640e <__GI___printf_fp_l+0x257e>
    0.00 :   5655b:  cmpb   $0x67,-0x13c(%rbp)
    0.00 :   56562:  mov    (%rax),%edi
    0.00 :   56564:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   5656a:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   56571:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   56577:  mov    -0xb8(%rbp),%rsi
    0.00 :   5657e:  testb  $0x8,0xc(%rsi)
    0.00 :   56582:  je     5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   56588:  mov    -0x128(%rbp),%rsi
    0.00 :   5658f:  add    $0xc,%rsi
    0.00 :   56593:  cmp    %rsi,%rax
    0.00 :   56596:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   5659c:  mov    -0x128(%rbp),%rsi
    0.00 :   565a3:  cmpl   $0x30,0x8(%rsi)
    0.00 :   565a7:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   565ad:  subl   $0x1,-0xfc(%rbp)
    0.00 :   565b4:  jmp    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   565b9:  nopl   0x0(%rax)
    0.00 :   565c0:  lea    -0x1(%rdx),%eax
    0.00 :   565c3:  xor    %edx,%edx
    0.00 :   565c5:  div    %edi
    0.00 :   565c7:  add    %eax,%esi
    0.00 :   565c9:  jmp    55061 <__GI___printf_fp_l+0x11d1>
    0.00 :   565ce:  mov    %rcx,-0xe0(%rbp)
    0.00 :   565d5:  mov    $0x2d,%esi
    0.00 :   565da:  mov    %r8b,-0xd0(%rbp)
    0.00 :   565e1:  mov    %rbx,%rdi
    0.00 :   565e4:  call   84a60 <__overflow>
    0.00 :   565e9:  movzbl -0xd0(%rbp),%r8d
    0.00 :   565f1:  mov    -0xe0(%rbp),%rcx
    0.00 :   565f8:  cmp    $0xffffffff,%eax
    0.00 :   565fb:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56601:  add    $0x1,%r15d
    0.00 :   56605:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   5660a:  movl   $0x0,-0xfc(%rbp)
    0.00 :   56614:  mov    -0xf0(%rbp),%esi
    0.00 :   5661a:  xor    %r14d,%r14d
    0.00 :   5661d:  mov    %rax,%r15
    0.00 :   56620:  jmp    54ec3 <__GI___printf_fp_l+0x1033>
    0.00 :   56625:  mov    %r8b,-0xd0(%rbp)
    0.00 :   5662c:  mov    $0x2b,%esi
    0.00 :   56631:  jmp    56176 <__GI___printf_fp_l+0x22e6>
    0.00 :   56636:  mov    -0xbc(%rbp),%r12d
    0.00 :   5663d:  test   %r12d,%r12d
    0.00 :   56640:  jne    56224 <__GI___printf_fp_l+0x2394>
    0.00 :   56646:  mov    -0xd0(%rbp),%r12d
    0.00 :   5664d:  mov    $0x30,%esi
    0.00 :   56652:  mov    %rbx,%rdi
    0.00 :   56655:  mov    %r8,-0xe8(%rbp)
    0.00 :   5665c:  mov    %r12,%rdx
    0.00 :   5665f:  call   78be0 <_IO_padn>
    0.00 :   56664:  cmp    %rax,%r12
    0.00 :   56667:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   5666d:  mov    -0xe8(%rbp),%r8
    0.00 :   56674:  add    %r12d,%r14d
    0.00 :   56677:  jmp    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   5667c:  test   $0x10,%dl
    0.00 :   5667f:  je     567d8 <__GI___printf_fp_l+0x2948>
    0.00 :   56685:  mov    -0xd0(%rbp),%r14d
    0.00 :   5668c:  mov    0xa0(%rbx),%rax
    0.00 :   56693:  test   %rax,%rax
    0.00 :   56696:  je     56a66 <__GI___printf_fp_l+0x2bd6>
    0.00 :   5669c:  mov    0x20(%rax),%rdx
    0.00 :   566a0:  cmp    0x28(%rax),%rdx
    0.00 :   566a4:  jae    56a66 <__GI___printf_fp_l+0x2bd6>
    0.00 :   566aa:  lea    0x4(%rdx),%rsi
    0.00 :   566ae:  add    $0x1,%r14d
    0.00 :   566b2:  mov    %rsi,0x20(%rax)
    0.00 :   566b6:  mov    -0xb8(%rbp),%rax
    0.00 :   566bd:  movl   $0x20,(%rdx)
    0.00 :   566c3:  testb  $0x20,0xc(%rax)
    0.00 :   566c7:  je     56205 <__GI___printf_fp_l+0x2375>
    0.00 :   566cd:  jmp    55894 <__GI___printf_fp_l+0x1a04>
    0.00 :   566d2:  mov    -0x130(%rbp),%edi
    0.00 :   566d8:  mov    -0x128(%rbp),%rax
    0.00 :   566df:  cmp    %edi,-0x134(%rbp)
    0.00 :   566e5:  je     56979 <__GI___printf_fp_l+0x2ae9>
    0.00 :   566eb:  addl   $0x1,-0x134(%rbp)
    0.00 :   566f2:  lea    0x4(%rax),%r8
    0.00 :   566f6:  movl   $0x31,0x4(%rax)
    0.00 :   566fd:  jmp    559ec <__GI___printf_fp_l+0x1b5c>
    0.00 :   56702:  mov    -0x50(%rbp),%rax
    0.00 :   56706:  cmp    %rax,-0x10(%rdi,%r10,1)
    0.00 :   5670b:  jae    55d52 <__GI___printf_fp_l+0x1ec2>
    0.00 :   56711:  jmp    55c58 <__GI___printf_fp_l+0x1dc8>
    0.00 :   56716:  mov    %r11,%rdi
    0.00 :   56719:  jmp    552e0 <__GI___printf_fp_l+0x1450>
    4.76 :   5671e:  mov    %rdi,%rdx // libc.so.6[5671e]
    0.00 :   56721:  mov    -0x90(%rbp),%rdi
    0.00 :   56728:  call   4f120 <__mpn_rshift>
    0.00 :   5672d:  jmp    55de4 <__GI___printf_fp_l+0x1f54>
    0.00 :   56732:  mov    %r13d,%r14d
    0.00 :   56735:  mov    $0x1,%r8d
    0.00 :   5673b:  jmp    54cfe <__GI___printf_fp_l+0xe6e>
    0.00 :   56740:  mov    %r12,%rdi
    0.00 :   56743:  mov    %r8,-0xf0(%rbp)
    0.00 :   5674a:  mov    %rdx,-0xe8(%rbp)
    0.00 :   56751:  call   266c0 <malloc@plt>
    0.00 :   56756:  mov    -0xe8(%rbp),%rdx
    0.00 :   5675d:  mov    -0xf0(%rbp),%r8
    0.00 :   56764:  test   %rax,%rax
    0.00 :   56767:  mov    %rax,%r11
    0.00 :   5676a:  jne    5575a <__GI___printf_fp_l+0x18ca>
    0.00 :   56770:  jmp    55383 <__GI___printf_fp_l+0x14f3>
    0.00 :   56775:  nopl   (%rax)
    0.00 :   56778:  movslq %r9d,%r8
    0.00 :   5677b:  sub    %r8,%rsi
    0.00 :   5677e:  test   %rsi,%rsi
    0.00 :   56781:  jle    567a8 <__GI___printf_fp_l+0x2918>
    0.00 :   56783:  mov    -0x90(%rbp),%r10
    0.00 :   5678a:  lea    (%rdi,%r9,8),%rdi
    0.00 :   5678e:  xor    %edx,%edx
    0.00 :   56790:  mov    (%rdi,%rdx,8),%rcx
    0.00 :   56794:  mov    %rcx,(%r10,%rdx,8)
    0.00 :   56798:  mov    -0x68(%rbp),%rsi
    0.00 :   5679c:  add    $0x1,%rdx
    0.00 :   567a0:  sub    %r8,%rsi
    0.00 :   567a3:  cmp    %rdx,%rsi
    0.00 :   567a6:  jg     56790 <__GI___printf_fp_l+0x2900>
    0.00 :   567a8:  mov    %rsi,-0x88(%rbp)
    0.00 :   567af:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   567b4:  mov    -0xb8(%rbp),%rax
    0.00 :   567bb:  mov    -0xd0(%rbp),%r14d
    0.00 :   567c2:  movzbl 0xc(%rax),%edx
    0.00 :   567c6:  test   $0x40,%dl
    0.00 :   567c9:  jne    5562f <__GI___printf_fp_l+0x179f>
    0.00 :   567cf:  test   $0x10,%dl
    0.00 :   567d2:  jne    55f55 <__GI___printf_fp_l+0x20c5>
    0.00 :   567d8:  mov    -0xd0(%rbp),%r14d
    0.00 :   567df:  jmp    55fc0 <__GI___printf_fp_l+0x2130>
    0.00 :   567e4:  sub    %r13,%rsi
    0.00 :   567e7:  mov    %r11,%rdi
    0.00 :   567ea:  mov    %rsi,%rdx
    0.00 :   567ed:  mov    %eax,%ecx
    0.00 :   567ef:  mov    %rdi,%rsi
    0.00 :   567f2:  jmp    55ce4 <__GI___printf_fp_l+0x1e54>
    0.00 :   567f7:  cmp    $0x3f,%r14d
    0.00 :   567fb:  je     56ab8 <__GI___printf_fp_l+0x2c28>
    0.00 :   56801:  mov    $0x3f,%eax
    0.00 :   56806:  tzcnt  %rdx,%rdx
    0.00 :   5680b:  xor    %r13d,%r13d
    0.00 :   5680e:  sub    %r14d,%eax
    0.00 :   56811:  cmp    %edx,%eax
    0.00 :   56813:  jle    567ea <__GI___printf_fp_l+0x295a>
    0.00 :   56815:  mov    %rsi,%rdx
    0.00 :   56818:  mov    %rdi,%rsi
    0.00 :   5681b:  mov    -0x90(%rbp),%rdi
    0.00 :   56822:  lea    0x1(%r14),%ecx
    0.00 :   56826:  call   4def0 <__mpn_lshift>
    0.00 :   5682b:  mov    -0x90(%rbp),%rdx
    0.00 :   56832:  mov    %rax,%rcx
    0.00 :   56835:  mov    -0x68(%rbp),%rax
    0.00 :   56839:  add    $0x1,%rax
    0.00 :   5683d:  mov    %rax,-0x88(%rbp)
    0.00 :   56844:  mov    %rcx,-0x8(%rdx,%rax,8)
    0.00 :   56849:  mov    -0x98(%rbp),%eax
    0.00 :   5684f:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   56854:  mov    %r8b,-0xd0(%rbp)
    0.00 :   5685b:  mov    $0x20,%esi
    0.00 :   56860:  jmp    56176 <__GI___printf_fp_l+0x22e6>
    0.00 :   56865:  mov    %rcx,-0xe0(%rbp)
    0.00 :   5686c:  mov    $0x2b,%esi
    0.00 :   56871:  mov    %r8b,-0xd0(%rbp)
    0.00 :   56878:  jmp    565e1 <__GI___printf_fp_l+0x2751>
    0.00 :   5687d:  mov    %rdi,%rsi
    0.00 :   56880:  mov    %r11d,%ecx
    0.00 :   56883:  mov    %r11d,-0xd0(%rbp)
    0.00 :   5688a:  call   4def0 <__mpn_lshift>
    0.00 :   5688f:  mov    -0x90(%rbp),%rdi
    0.00 :   56896:  mov    -0xd0(%rbp),%ecx
    0.00 :   5689c:  mov    -0x88(%rbp),%rdx
    0.00 :   568a3:  mov    %rdi,%rsi
    0.00 :   568a6:  call   4def0 <__mpn_lshift>
    0.00 :   568ab:  test   %rax,%rax
    0.00 :   568ae:  je     54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   568b4:  mov    -0x88(%rbp),%rdx
    0.00 :   568bb:  lea    0x1(%rdx),%rcx
    0.00 :   568bf:  mov    %rcx,-0x88(%rbp)
    0.00 :   568c6:  mov    -0x90(%rbp),%rcx
    0.00 :   568cd:  mov    %rax,(%rcx,%rdx,8)
    0.00 :   568d1:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   568d6:  mov    %r8,-0xe8(%rbp)
    0.00 :   568dd:  mov    %r11,-0xe0(%rbp)
    0.00 :   568e4:  call   818e0 <_IO_vtable_check>
    0.00 :   568e9:  mov    -0xbc(%rbp),%r9d
    0.00 :   568f0:  mov    -0xe0(%rbp),%r11
    0.00 :   568f7:  mov    -0xe8(%rbp),%r8
    0.00 :   568fe:  mov    0x38(%r15),%rax
    0.00 :   56902:  test   %r9d,%r9d
    0.00 :   56905:  cmovne %r8,%r11
    0.00 :   56909:  jmp    554de <__GI___printf_fp_l+0x164e>
    0.00 :   5690e:  mov    %r8,-0xe8(%rbp)
    0.00 :   56915:  mov    $0x2d,%esi
    0.00 :   5691a:  mov    %rbx,%rdi
    0.00 :   5691d:  call   84a60 <__overflow>
    0.00 :   56922:  mov    -0xe8(%rbp),%r8
    0.00 :   56929:  cmp    $0xffffffff,%eax
    0.00 :   5692c:  sete   %al
    0.00 :   5692f:  jmp    55fa9 <__GI___printf_fp_l+0x2119>
    0.00 :   56934:  mov    %r11,-0xe0(%rbp)
    0.00 :   5693b:  call   818e0 <_IO_vtable_check>
    0.00 :   56940:  mov    0x38(%r15),%rax
    0.00 :   56944:  mov    -0xe0(%rbp),%r11
    0.00 :   5694b:  jmp    554de <__GI___printf_fp_l+0x164e>
    0.00 :   56950:  mov    %r8,-0xe8(%rbp)
    0.00 :   56957:  mov    $0x2b,%esi
    0.00 :   5695c:  jmp    55f94 <__GI___printf_fp_l+0x2104>
    0.00 :   56961:  mov    %r13d,%edx
    0.00 :   56964:  xor    %r13d,%r13d
    0.00 :   56967:  mov    %r13d,%r12d
    0.00 :   5696a:  mov    0xa0(%rbx),%rax
    0.00 :   56971:  mov    %edx,%r13d
    0.00 :   56974:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   56979:  mov    -0xc0(%rbp),%edi
    0.00 :   5697f:  movl   $0x31,(%rax)
    0.00 :   56985:  mov    %edi,0x4(%rax)
    0.00 :   56988:  mov    -0xb8(%rbp),%rax
    0.00 :   5698f:  testb  $0x8,0xc(%rax)
    0.00 :   56993:  jne    5699e <__GI___printf_fp_l+0x2b0e>
    0.00 :   56995:  test   %r14d,%r14d
    0.00 :   56998:  je     56a88 <__GI___printf_fp_l+0x2bf8>
    0.00 :   5699e:  movslq -0x134(%rbp),%rax
    0.00 :   569a5:  mov    -0x128(%rbp),%rcx
    0.00 :   569ac:  movl   $0x30,0x8(%rcx,%rax,4)
    0.00 :   569b4:  lea    0x1(%r14,%rax,1),%r14d
    0.00 :   569b9:  mov    -0xb8(%rbp),%rax
    0.00 :   569c0:  addl   $0x1,-0x98(%rbp)
    0.00 :   569c7:  mov    -0x128(%rbp),%r8
    0.00 :   569ce:  movslq 0x8(%rax),%rdi
    0.00 :   569d2:  mov    0x17c41f(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   569d9:  mov    %fs:(%rax),%rax
    0.00 :   569dd:  movl   $0x1,-0x134(%rbp)
    0.00 :   569e7:  movzwl (%rax,%rdi,2),%eax
    0.00 :   569eb:  and    $0x100,%ax
    0.00 :   569ef:  cmp    $0x1,%ax
    0.00 :   569f3:  sbb    %eax,%eax
    0.00 :   569f5:  and    $0x20,%eax
    0.00 :   569f8:  add    $0x45,%eax
    0.00 :   569fb:  mov    %eax,-0x9c(%rbp)
    0.00 :   56a01:  jmp    559ec <__GI___printf_fp_l+0x1b5c>
    0.00 :   56a06:  test   %rax,%rax
    0.00 :   56a09:  js     54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   56a0f:  mov    -0x90(%rbp),%rax
    0.00 :   56a16:  mov    %rdi,%rsi
    0.00 :   56a19:  xor    %r14d,%r14d
    0.00 :   56a1c:  xor    %r13d,%r13d
    0.00 :   56a1f:  mov    (%rax),%r9
    0.00 :   56a22:  mov    %r8,%rax
    0.00 :   56a25:  jmp    5653b <__GI___printf_fp_l+0x26ab>
    0.00 :   56a2a:  mov    $0x20,%esi
    0.00 :   56a2f:  mov    %rbx,%rdi
    0.00 :   56a32:  mov    %rcx,-0xe0(%rbp)
    0.00 :   56a39:  mov    %r8b,-0xd0(%rbp)
    0.00 :   56a40:  call   84a60 <__overflow>
    0.00 :   56a45:  movzbl -0xd0(%rbp),%r8d
    0.00 :   56a4d:  mov    -0xe0(%rbp),%rcx
    0.00 :   56a54:  cmp    $0xffffffff,%eax
    0.00 :   56a57:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56a5d:  lea    0x1(%r14),%r15d
    0.00 :   56a61:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   56a66:  mov    %r8,-0xe8(%rbp)
    0.00 :   56a6d:  mov    $0x20,%esi
    0.00 :   56a72:  jmp    55f94 <__GI___printf_fp_l+0x2104>
    0.00 :   56a77:  mov    %r8,-0xe8(%rbp)
    0.00 :   56a7e:  mov    $0x2b,%esi
    0.00 :   56a83:  jmp    5691a <__GI___printf_fp_l+0x2a8a>
    0.00 :   56a88:  mov    -0x130(%rbp),%r14d
    0.00 :   56a8f:  jmp    569b9 <__GI___printf_fp_l+0x2b29>
    0.00 :   56a94:  mov    %r8,-0xe8(%rbp)
    0.00 :   56a9b:  mov    $0x20,%esi
    0.00 :   56aa0:  jmp    5691a <__GI___printf_fp_l+0x2a8a>
    0.00 :   56aa5:  mov    -0x140(%rbp),%ebx
    0.00 :   56aab:  test   %ebx,%ebx
    0.00 :   56aad:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56ab3:  jmp    55383 <__GI___printf_fp_l+0x14f3>
    0.00 :   56ab8:  xor    %r8d,%r8d
    0.00 :   56abb:  xor    %r9d,%r9d
    0.00 :   56abe:  jmp    5677e <__GI___printf_fp_l+0x28ee>
    0.00 :   56ac3:  call   11ba20 <__stack_chk_fail>
    0.00 :   56ac8:  jmp    2690e <__GI___printf_fp_l.cold>
    0.00 :   56acd:  mov    %r8,%rdi
    0.00 :   56ad0:  mov    $0x6,%edx
    0.00 :   56ad5:  lea    0x14a81c(%rip),%rsi        # 1a12f8 <default_rwlockattr+0x308>
    0.00 :   56adc:  mov    %r8,-0xd0(%rbp)
    0.00 :   56ae3:  call   b3c10 <wmemcpy>
    0.00 :   56ae8:  mov    -0xc0(%rbp),%eax
    0.00 :   56aee:  mov    -0xd0(%rbp),%r8
    0.00 :   56af5:  mov    %eax,0x4(%r8)
    0.00 :   56af9:  lea    0x8(%r8),%rax
    0.00 :   56afd:  cmp    %rax,%r15
    0.00 :   56b00:  jae    56b0b <__GI___printf_fp_l+0x2c7b>
    0.00 :   56b02:  add    $0x14,%r15
    0.00 :   56b06:  jmp    551d0 <__GI___printf_fp_l+0x1340>
    0.00 :   56b0b:  mov    %r15,%rdx
    0.00 :   56b0e:  lea    0x18(%r8),%rdi
    0.00 :   56b12:  mov    $0x30,%esi
    0.00 :   56b17:  add    $0x10,%r15
    0.00 :   56b1b:  sub    %rax,%rdx
    0.00 :   56b1e:  sar    $0x2,%rdx
    0.00 :   56b22:  call   263e0 <*ABS*+0xb3c30@plt>
    0.00 :   56b27:  mov    -0xd0(%rbp),%r8
    0.00 :   56b2e:  jmp    551d0 <__GI___printf_fp_l+0x1340>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   50.40 [nf_tables][155e0]
   13.97 [nf_tables][155e5]
   11.56 [nf_tables][15695]
    6.77 [nf_tables][1566a]
    6.73 [nf_tables][155fd]
    5.74 [nf_tables][15691]
    4.84 [nf_tables][156b2]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (16 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000155e0 <nft_do_chain_inet>:
         : 6     nft_do_chain_inet():
   50.40 :   155e0:  call   155e5 <nft_do_chain_inet+0x5> // [nf_tables][155e0]
   13.97 :   155e5:  push   %rbx // [nf_tables][155e5]
    0.00 :   155e6:  mov    %rdi,%rbx
    0.00 :   155e9:  mov    %rsi,%rdi
    0.00 :   155ec:  sub    $0x30,%rsp
    0.00 :   155f0:  movzbl 0x1(%rdx),%eax
    0.00 :   155f4:  movq   $0x0,0x20(%rsp)
    6.73 :   155fd:  movq   $0x0,0x28(%rsp) // [nf_tables][155fd]
    0.00 :   15606:  mov    %rsi,0x10(%rsp)
    0.00 :   1560b:  mov    %rdx,0x18(%rsp)
    0.00 :   15610:  cmp    $0x2,%al
    0.00 :   15612:  je     1567e <nft_do_chain_inet+0x9e>
    0.00 :   15614:  cmp    $0xa,%al
    0.00 :   15616:  jne    15667 <nft_do_chain_inet+0x87>
    0.00 :   15618:  xor    %eax,%eax
    0.00 :   1561a:  lea    0x8(%rsp),%r8
    0.00 :   1561f:  lea    0x6(%rsp),%rcx
    0.00 :   15624:  mov    $0xffffffff,%edx
    0.00 :   15629:  lea    0xc(%rsp),%rsi
    0.00 :   1562e:  movl   $0x2,0x8(%rsp)
    0.00 :   15636:  movl   $0x0,0xc(%rsp)
    0.00 :   1563e:  mov    %ax,0x6(%rsp)
    0.00 :   15643:  call   15648 <nft_do_chain_inet+0x68>
    0.00 :   15648:  test   %eax,%eax
    0.00 :   1564a:  js     156b9 <nft_do_chain_inet+0xd9>
    0.00 :   1564c:  mov    %al,0x21(%rsp)
    0.00 :   15650:  mov    0xc(%rsp),%eax
    0.00 :   15654:  movb   $0x1,0x20(%rsp)
    0.00 :   15659:  mov    %eax,0x24(%rsp)
    0.00 :   1565d:  movzwl 0x6(%rsp),%eax
    0.00 :   15662:  mov    %ax,0x22(%rsp)
    0.00 :   15667:  mov    %rbx,%rsi
    6.77 :   1566a:  lea    0x10(%rsp),%rdi // [nf_tables][1566a]
    0.00 :   1566f:  call   15674 <nft_do_chain_inet+0x94>
    0.00 :   15674:  add    $0x30,%rsp
    0.00 :   15678:  pop    %rbx
    0.00 :   15679:  jmp    1567e <nft_do_chain_inet+0x9e>
    0.00 :   1567e:  movzwl 0xb8(%rsi),%eax
    0.00 :   15685:  add    0xc8(%rsi),%rax
    0.00 :   1568c:  movb   $0x1,0x20(%rsp)
    5.74 :   15691:  movzbl 0x9(%rax),%edx // [nf_tables][15691]
   11.56 :   15695:  mov    %dl,0x21(%rsp) // [nf_tables][15695]
    0.00 :   15699:  movzbl (%rax),%edx
    0.00 :   1569c:  and    $0xf,%edx
    0.00 :   1569f:  shl    $0x2,%edx
    0.00 :   156a2:  mov    %edx,0x24(%rsp)
    0.00 :   156a6:  movzwl 0x6(%rax),%eax
    0.00 :   156aa:  rol    $0x8,%ax
    0.00 :   156ae:  and    $0x1fff,%ax
    4.84 :   156b2:  mov    %ax,0x22(%rsp) // [nf_tables][156b2]
    0.00 :   156b7:  jmp    15667 <nft_do_chain_inet+0x87>
    0.00 :   156b9:  movq   $0x0,0x20(%rsp)
    0.00 :   156c2:  jmp    15667 <nft_do_chain_inet+0x87>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   27.37 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:397
   24.77 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:348
   23.78 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:400
   13.63 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:416
   10.45 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:370
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (5 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009210 <do_lookup_x>:
         : 6    do_lookup_x():
    0.00 :   9210:   push   %r15
    0.00 :   9212:   push   %r14
    0.00 :   9214:   push   %r13
    0.00 :   9216:   push   %r12
   24.77 :   9218:   mov    %esi,%r12d // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:348
    0.00 :   921b:   push   %rbp
    0.00 :   921c:   push   %rbx
    0.00 :   921d:   sub    $0x88,%rsp
    0.00 :   9224:   mov    0x8(%r9),%esi
    0.00 :   9228:   mov    %r8,0x18(%rsp)
    0.00 :   922d:   mov    0xc0(%rsp),%rbp
    0.00 :   9235:   mov    %rdi,0x8(%rsp)
    0.00 :   923a:   mov    0xd8(%rsp),%r8
    0.00 :   9242:   mov    %rsi,%r10
    0.00 :   9245:   mov    %rdx,0x20(%rsp)
    0.00 :   924a:   mov    %rcx,0x10(%rsp)
    0.00 :   924f:   mov    (%r9),%r13
    0.00 :   9252:   mov    %r12d,%r11d
    0.00 :   9255:   mov    0xe0(%rsp),%r9d
    0.00 :   925d:   mov    %r8,%r14
    0.00 :   9260:   shr    $0x6,%r11d
    0.00 :   9264:   mov    %r11d,%r8d
    0.00 :   9267:   and    $0x2,%r9d
    0.00 :   926b:   mov    %r12d,%r11d
    0.00 :   926e:   jmp    9306 <do_lookup_x+0xf6>
    0.00 :   9273:   nopl   0x0(%rax,%rax,1)
    0.00 :   9278:   mov    0x30c(%rbx),%edi
    0.00 :   927e:   test   %edi,%edi
    0.00 :   9280:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9282:   mov    0x70(%rbx),%rax
    0.00 :   9286:   movl   $0x0,0x74(%rsp)
    0.00 :   928e:   movq   $0x0,0x78(%rsp)
    0.00 :   9297:   mov    0x8(%rax),%rsi
    0.00 :   929b:   xor    %eax,%eax
    0.00 :   929d:   testb  $0x20,0x336(%rbx)
    0.00 :   92a4:   je     92ac <do_lookup_x+0x9c>
    0.00 :   92a6:   mov    (%rbx),%rax
    0.00 :   92a9:   add    %rax,%rsi
    0.00 :   92ac:   mov    0x68(%rbx),%rdx
    0.00 :   92b0:   add    0x8(%rdx),%rax
    0.00 :   92b4:   mov    0x318(%rbx),%rdx
    0.00 :   92bb:   mov    %rax,%r15
    0.00 :   92be:   test   %rdx,%rdx
    0.00 :   92c1:   je     93a8 <do_lookup_x+0x198>
    0.00 :   92c7:   mov    0x314(%rbx),%ecx
    0.00 :   92cd:   mov    %r8d,%eax
   27.37 :   92d0:   and    0x310(%rbx),%eax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:397
    0.00 :   92d6:   mov    (%rdx,%rax,8),%rax
   23.78 :   92da:   mov    %r11d,%edx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:400
    0.00 :   92dd:   shr    %cl,%edx
    0.00 :   92df:   mov    %edx,%ecx
    0.00 :   92e1:   mov    %rax,%rdx
    0.00 :   92e4:   shr    %cl,%rdx
    0.00 :   92e7:   mov    %r11d,%ecx
    0.00 :   92ea:   shr    %cl,%rax
    0.00 :   92ed:   and    %rax,%rdx
    0.00 :   92f0:   and    $0x1,%edx
    0.00 :   92f3:   jne    9508 <do_lookup_x+0x2f8>
    0.00 :   92f9:   add    $0x1,%rbp
    0.00 :   92fd:   cmp    %r10,%rbp
    0.00 :   9300:   jae    95e0 <do_lookup_x+0x3d0>
    0.00 :   9306:   mov    0x0(%r13,%rbp,8),%rax
    0.00 :   930b:   mov    0x28(%rax),%rbx
    0.00 :   930f:   cmp    %r14,%rbx
    0.00 :   9312:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9314:   test   %r9d,%r9d
    0.00 :   9317:   je     9322 <do_lookup_x+0x112>
    0.00 :   9319:   testb  $0x3,0x334(%rbx)
    0.00 :   9320:   je     92f9 <do_lookup_x+0xe9>
   10.45 :   9322:   testb  $0x4,0x336(%rbx) // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:370
    0.00 :   9329:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   932b:   testb  $0x8,0x2b72e(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9332:   je     9278 <do_lookup_x+0x68>
    0.00 :   9338:   mov    0x8(%rbx),%rdx
    0.00 :   933c:   mov    0x30(%rbx),%rcx
    0.00 :   9340:   cmpb   $0x0,(%rdx)
    0.00 :   9343:   je     9388 <do_lookup_x+0x178>
    0.00 :   9345:   mov    0x8(%rsp),%rsi
    0.00 :   934a:   lea    0x229ff(%rip),%rdi        # 2bd50 <__PRETTY_FUNCTION__.9+0x60>
    0.00 :   9351:   xor    %eax,%eax
    0.00 :   9353:   mov    %r9d,0x40(%rsp)
    0.00 :   9358:   mov    %r10,0x38(%rsp)
    0.00 :   935d:   mov    %r11d,0x30(%rsp)
    0.00 :   9362:   mov    %r8d,0x28(%rsp)
    0.00 :   9367:   call   d1d0 <_dl_debug_printf>
    0.00 :   936c:   mov    0x40(%rsp),%r9d
    0.00 :   9371:   mov    0x38(%rsp),%r10
    0.00 :   9376:   mov    0x30(%rsp),%r11d
    0.00 :   937b:   mov    0x28(%rsp),%r8d
    0.00 :   9380:   jmp    9278 <do_lookup_x+0x68>
    0.00 :   9385:   nopl   (%rax)
    0.00 :   9388:   mov    0x2b6a9(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   938f:   mov    (%rax),%rdx
    0.00 :   9392:   lea    0x20593(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   9399:   test   %rdx,%rdx
    0.00 :   939c:   cmove  %rax,%rdx
    0.00 :   93a0:   jmp    9345 <do_lookup_x+0x135>
    0.00 :   93a2:   nopw   0x0(%rax,%rax,1)
    0.00 :   93a8:   mov    0x20(%rsp),%rax
    0.00 :   93ad:   mov    $0xffffffff,%edx
    0.00 :   93b2:   mov    (%rax),%rax
    0.00 :   93b5:   cmp    %rdx,%rax
    0.00 :   93b8:   je     99fc <do_lookup_x+0x7ec>
    0.00 :   93be:   xor    %edx,%edx
    0.00 :   93c0:   div    %rdi
    0.00 :   93c3:   shl    $0x2,%rdx
    0.00 :   93c7:   mov    0x328(%rbx),%rax
    0.00 :   93ce:   mov    (%rax,%rdx,1),%eax
    0.00 :   93d1:   test   %eax,%eax
    0.00 :   93d3:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   93d9:   lea    0x78(%rsp),%rdi
    0.00 :   93de:   mov    %r13,0x30(%rsp)
    0.00 :   93e3:   lea    0x74(%rsp),%r12
    0.00 :   93e8:   mov    %rbp,0xc0(%rsp)
    0.00 :   93f0:   mov    %rdi,%r13
    0.00 :   93f3:   mov    %rsi,%rbp
    0.00 :   93f6:   mov    %r8d,0x28(%rsp)
    0.00 :   93fb:   mov    %r11d,0x38(%rsp)
    0.00 :   9400:   mov    %r14,0xd8(%rsp)
    0.00 :   9408:   mov    %r10,0x40(%rsp)
    0.00 :   940d:   mov    %r9d,0x48(%rsp)
    0.00 :   9412:   jmp    942b <do_lookup_x+0x21b>
    0.00 :   9414:   nopl   0x0(%rax)
    0.00 :   9418:   mov    0x320(%rbx),%rax
    0.00 :   941f:   mov    (%rax,%r14,4),%eax
    0.00 :   9423:   test   %eax,%eax
    0.00 :   9425:   je     9818 <do_lookup_x+0x608>
    0.00 :   942b:   sub    $0x8,%rsp
    0.00 :   942f:   mov    %eax,%r14d
    0.00 :   9432:   push   %r12
    0.00 :   9434:   lea    (%r14,%r14,2),%rdx
    0.00 :   9438:   push   %r13
    0.00 :   943a:   lea    0x0(%rbp,%rdx,8),%r9
    0.00 :   943f:   push   %rbx
    0.00 :   9440:   push   %r15
    0.00 :   9442:   push   %rax
    0.00 :   9443:   mov    0x110(%rsp),%r8d
    0.00 :   944b:   mov    0x100(%rsp),%ecx
    0.00 :   9452:   mov    0xf8(%rsp),%rdx
    0.00 :   945a:   mov    0x40(%rsp),%rsi
    0.00 :   945f:   mov    0x38(%rsp),%rdi
    0.00 :   9464:   call   9070 <check_match>
    0.00 :   9469:   add    $0x30,%rsp
    0.00 :   946d:   test   %rax,%rax
    0.00 :   9470:   je     9418 <do_lookup_x+0x208>
    0.00 :   9472:   mov    0x28(%rsp),%r8d
    0.00 :   9477:   mov    0x30(%rsp),%r13
    0.00 :   947c:   mov    %rax,%rcx
    0.00 :   947f:   mov    0x38(%rsp),%r11d
    0.00 :   9484:   mov    0xc0(%rsp),%rbp
    0.00 :   948c:   mov    0xd8(%rsp),%r14
    0.00 :   9494:   mov    0x40(%rsp),%r10
    0.00 :   9499:   mov    0x48(%rsp),%r9d
    0.00 :   949e:   xchg   %ax,%ax
    0.00 :   94a0:   movzbl 0x5(%rcx),%eax
    0.00 :   94a4:   mov    %eax,%edx
    0.00 :   94a6:   and    $0x3,%eax
    0.00 :   94a9:   sub    $0x1,%eax
    0.00 :   94ac:   and    $0x3,%edx
    0.00 :   94af:   cmp    $0x1,%eax
    0.00 :   94b2:   jbe    92f9 <do_lookup_x+0xe9>
    0.00 :   94b8:   cmpq   $0x0,0xe8(%rsp)
    0.00 :   94c1:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   94c3:   cmp    $0x3,%dl
    0.00 :   94c6:   je     95f8 <do_lookup_x+0x3e8>
    0.00 :   94cc:   movzbl 0x4(%rcx),%eax
    0.00 :   94d0:   shr    $0x4,%al
    0.00 :   94d3:   cmp    $0x2,%al
    0.00 :   94d5:   je     97e0 <do_lookup_x+0x5d0>
    0.00 :   94db:   cmp    $0xa,%al
    0.00 :   94dd:   je     9690 <do_lookup_x+0x480>
    0.00 :   94e3:   cmp    $0x1,%al
    0.00 :   94e5:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   94eb:   mov    0x18(%rsp),%rax
    0.00 :   94f0:   mov    %rcx,(%rax)
    0.00 :   94f3:   mov    %rbx,0x8(%rax)
    0.00 :   94f7:   mov    $0x1,%eax
    0.00 :   94fc:   jmp    95e2 <do_lookup_x+0x3d2>
    0.00 :   9501:   nopl   0x0(%rax)
    0.00 :   9508:   mov    %r11d,%eax
    0.00 :   950b:   xor    %edx,%edx
    0.00 :   950d:   div    %edi
    0.00 :   950f:   mov    0x320(%rbx),%rax
    0.00 :   9516:   mov    (%rax,%rdx,4),%eax
    0.00 :   9519:   test   %eax,%eax
    0.00 :   951b:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9521:   mov    0x328(%rbx),%rdx
    0.00 :   9528:   mov    %r13,0x30(%rsp)
    0.00 :   952d:   mov    %rsi,%r13
    0.00 :   9530:   mov    %rbp,0xc0(%rsp)
    0.00 :   9538:   mov    %r11d,%ebp
    0.00 :   953b:   lea    (%rdx,%rax,4),%r12
    0.00 :   953f:   lea    0x74(%rsp),%rax
    0.00 :   9544:   mov    %r8d,0x28(%rsp)
    0.00 :   9549:   mov    %r14,0xd8(%rsp)
    0.00 :   9551:   mov    %rax,%r14
    0.00 :   9554:   mov    %r10,0x38(%rsp)
    0.00 :   9559:   mov    %r9d,0x40(%rsp)
   13.63 :   955e:   jmp    956c <do_lookup_x+0x35c> // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:416
    0.00 :   9560:   add    $0x4,%r12
    0.00 :   9564:   test   $0x1,%al
    0.00 :   9566:   jne    9b63 <do_lookup_x+0x953>
    0.00 :   956c:   mov    (%r12),%eax
    0.00 :   9570:   mov    %eax,%edx
    0.00 :   9572:   xor    %ebp,%edx
    0.00 :   9574:   shr    %edx
    0.00 :   9576:   jne    9560 <do_lookup_x+0x350>
    0.00 :   9578:   sub    $0x8,%rsp
    0.00 :   957c:   mov    %r12,%rax
    0.00 :   957f:   sub    0x328(%rbx),%rax
    0.00 :   9586:   push   %r14
    0.00 :   9588:   sar    $0x2,%rax
    0.00 :   958c:   mov    %eax,%edx
    0.00 :   958e:   lea    (%rdx,%rdx,2),%rdx
    0.00 :   9592:   lea    0x88(%rsp),%rcx
    0.00 :   959a:   lea    0x0(%r13,%rdx,8),%r9
    0.00 :   959f:   push   %rcx
    0.00 :   95a0:   push   %rbx
    0.00 :   95a1:   push   %r15
    0.00 :   95a3:   push   %rax
    0.00 :   95a4:   mov    0x110(%rsp),%r8d
    0.00 :   95ac:   mov    0x100(%rsp),%ecx
    0.00 :   95b3:   mov    0xf8(%rsp),%rdx
    0.00 :   95bb:   mov    0x40(%rsp),%rsi
    0.00 :   95c0:   mov    0x38(%rsp),%rdi
    0.00 :   95c5:   call   9070 <check_match>
    0.00 :   95ca:   add    $0x30,%rsp
    0.00 :   95ce:   test   %rax,%rax
    0.00 :   95d1:   jne    9d69 <do_lookup_x+0xb59>
    0.00 :   95d7:   mov    (%r12),%eax
    0.00 :   95db:   jmp    9560 <do_lookup_x+0x350>
    0.00 :   95dd:   nopl   (%rax)
    0.00 :   95e0:   xor    %eax,%eax
    0.00 :   95e2:   add    $0x88,%rsp
    0.00 :   95e9:   pop    %rbx
    0.00 :   95ea:   pop    %rbp
    0.00 :   95eb:   pop    %r12
    0.00 :   95ed:   pop    %r13
    0.00 :   95ef:   pop    %r14
    0.00 :   95f1:   pop    %r15
    0.00 :   95f3:   ret
    0.00 :   95f4:   nopl   0x0(%rax)
    0.00 :   95f8:   mov    0xe8(%rsp),%rax
    0.00 :   9600:   testb  $0x3,0x334(%rax)
    0.00 :   9607:   jne    94cc <do_lookup_x+0x2bc>
    0.00 :   960d:   test   %r9d,%r9d
    0.00 :   9610:   jne    9b8f <do_lookup_x+0x97f>
    0.00 :   9616:   testb  $0x1,0xe0(%rsp)
    0.00 :   961e:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9624:   mov    0x10(%rsp),%rax
    0.00 :   9629:   cmpq   $0x0,0x8(%rax)
    0.00 :   962e:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9634:   cmpw   $0x0,0x6(%rax)
    0.00 :   9639:   jne    94cc <do_lookup_x+0x2bc>
    0.00 :   963f:   mov    0x8(%rbx),%rdx
    0.00 :   9643:   mov    0x8(%rsp),%rsi
    0.00 :   9648:   xor    %eax,%eax
    0.00 :   964a:   mov    %rcx,0x48(%rsp)
    0.00 :   964f:   lea    0x22772(%rip),%rdi        # 2bdc8 <__PRETTY_FUNCTION__.9+0xd8>
    0.00 :   9656:   mov    %r9d,0x40(%rsp)
    0.00 :   965b:   mov    %r10,0x38(%rsp)
    0.00 :   9660:   mov    %r11d,0x30(%rsp)
    0.00 :   9665:   mov    %r8d,0x28(%rsp)
    0.00 :   966a:   call   d480 <_dl_error_printf>
    0.00 :   966f:   mov    0x48(%rsp),%rcx
    0.00 :   9674:   mov    0x40(%rsp),%r9d
    0.00 :   9679:   mov    0x38(%rsp),%r10
    0.00 :   967e:   mov    0x30(%rsp),%r11d
    0.00 :   9683:   mov    0x28(%rsp),%r8d
    0.00 :   9688:   jmp    9bd8 <do_lookup_x+0x9c8>
    0.00 :   968d:   nopl   (%rax)
    0.00 :   9690:   mov    0x30(%rbx),%rax
    0.00 :   9694:   mov    %r15,0x48(%rsp)
    0.00 :   9699:   lea    0x2b960(%rip),%r15        # 35000 <_rtld_global>
    0.00 :   96a0:   mov    %r11d,%r12d
    0.00 :   96a3:   mov    %rcx,0x40(%rsp)
    0.00 :   96a8:   lea    0x0(,%rax,4),%rsi
    0.00 :   96b0:   mov    %rax,0x20(%rsp)
    0.00 :   96b5:   lea    (%rsi,%rax,1),%rbp
    0.00 :   96b9:   mov    %r9d,0x30(%rsp)
    0.00 :   96be:   shl    $0x5,%rbp
    0.00 :   96c2:   mov    %rsi,0x28(%rsp)
    0.00 :   96c7:   lea    0x28(%r15,%rbp,1),%rax
    0.00 :   96cc:   add    %r15,%rbp
    0.00 :   96cf:   mov    %rax,0x38(%rsp)
    0.00 :   96d4:   mov    %rax,%rdi
    0.00 :   96d7:   call   *0x2b31b(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   96dd:   mov    0x50(%rbp),%r11
    0.00 :   96e1:   mov    0x58(%rbp),%r14
    0.00 :   96e5:   mov    0x30(%rsp),%r9d
    0.00 :   96ea:   mov    0x40(%rsp),%rcx
    0.00 :   96ef:   test   %r11,%r11
    0.00 :   96f2:   je     9aba <do_lookup_x+0x8aa>
    0.00 :   96f8:   mov    %r12d,%eax
    0.00 :   96fb:   xor    %edx,%edx
    0.00 :   96fd:   lea    -0x2(%r14),%rdi
    0.00 :   9701:   mov    %r11,0x30(%rsp)
    0.00 :   9706:   mov    %rax,%r8
    0.00 :   9709:   mov    %rax,0x68(%rsp)
    0.00 :   970e:   div    %r14
    0.00 :   9711:   mov    %r9d,0x5c(%rsp)
    0.00 :   9716:   mov    %rbx,0x50(%rsp)
    0.00 :   971b:   mov    %r8,%rax
    0.00 :   971e:   mov    %r14,%rbx
    0.00 :   9721:   mov    %rdx,%rsi
    0.00 :   9724:   xor    %edx,%edx
    0.00 :   9726:   div    %rdi
    0.00 :   9729:   mov    %rsi,0x60(%rsp)
    0.00 :   972e:   mov    %r12d,%eax
    0.00 :   9731:   mov    %eax,%r13d
    0.00 :   9734:   lea    0x1(%rdx),%r15
    0.00 :   9738:   mov    %r15,%rdx
    0.00 :   973b:   mov    %r15,%r12
    0.00 :   973e:   mov    %rsi,%r15
    0.00 :   9741:   shl    $0x5,%rdx
    0.00 :   9745:   mov    %rdx,%r14
    0.00 :   9748:   mov    0x30(%rsp),%rax
    0.00 :   974d:   mov    %r15,%rbp
    0.00 :   9750:   shl    $0x5,%rbp
    0.00 :   9754:   add    %rax,%rbp
    0.00 :   9757:   mov    %r14,%rax
    0.00 :   975a:   mov    %r12,%r14
    0.00 :   975d:   mov    %rbx,%r12
    0.00 :   9760:   mov    %rax,%rbx
    0.00 :   9763:   jmp    9780 <do_lookup_x+0x570>
    0.00 :   9765:   nopl   (%rax)
    0.00 :   9768:   test   %rdi,%rdi
    0.00 :   976b:   je     9860 <do_lookup_x+0x650>
    0.00 :   9771:   add    %r14,%r15
    0.00 :   9774:   add    %rbx,%rbp
    0.00 :   9777:   cmp    %r12,%r15
    0.00 :   977a:   jae    99e0 <do_lookup_x+0x7d0>
    0.00 :   9780:   mov    0x8(%rbp),%rdi
    0.00 :   9784:   cmp    0x0(%rbp),%r13d
    0.00 :   9788:   jne    9768 <do_lookup_x+0x558>
    0.00 :   978a:   mov    0x8(%rsp),%rsi
    0.00 :   978f:   call   23430 <strcmp>
    0.00 :   9794:   test   %eax,%eax
    0.00 :   9796:   jne    9771 <do_lookup_x+0x561>
    0.00 :   9798:   mov    0x5c(%rsp),%r9d
    0.00 :   979d:   mov    0x40(%rsp),%rcx
    0.00 :   97a2:   mov    0x50(%rsp),%rbx
    0.00 :   97a7:   test   %r9d,%r9d
    0.00 :   97aa:   je     9d98 <do_lookup_x+0xb88>
    0.00 :   97b0:   movq   %rcx,%xmm0
    0.00 :   97b5:   movq   %rbx,%xmm2
    0.00 :   97ba:   punpcklqdq %xmm2,%xmm0
    0.00 :   97be:   mov    0x18(%rsp),%rax
    0.00 :   97c3:   mov    0x38(%rsp),%rdi
    0.00 :   97c8:   movups %xmm0,(%rax)
    0.00 :   97cb:   call   *0x2b21f(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   97d1:   jmp    94f7 <do_lookup_x+0x2e7>
    0.00 :   97d6:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   97e0:   mov    0x2b2ce(%rip),%eax        # 34ab4 <_rtld_global_ro+0x54>
    0.00 :   97e6:   test   %eax,%eax
    0.00 :   97e8:   je     94eb <do_lookup_x+0x2db>
    0.00 :   97ee:   mov    0x18(%rsp),%rax
    0.00 :   97f3:   cmpq   $0x0,(%rax)
    0.00 :   97f7:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   97fd:   movq   %rcx,%xmm0
    0.00 :   9802:   movq   %rbx,%xmm1
    0.00 :   9807:   punpcklqdq %xmm1,%xmm0
    0.00 :   980b:   movups %xmm0,(%rax)
    0.00 :   980e:   jmp    92f9 <do_lookup_x+0xe9>
    0.00 :   9813:   nopl   0x0(%rax,%rax,1)
    0.00 :   9818:   mov    0x28(%rsp),%r8d
    0.00 :   981d:   mov    0x30(%rsp),%r13
    0.00 :   9822:   mov    0x38(%rsp),%r11d
    0.00 :   9827:   mov    0xc0(%rsp),%rbp
    0.00 :   982f:   mov    0xd8(%rsp),%r14
    0.00 :   9837:   mov    0x40(%rsp),%r10
    0.00 :   983c:   mov    0x48(%rsp),%r9d
    0.00 :   9841:   cmpl   $0x1,0x74(%rsp)
    0.00 :   9846:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   984c:   mov    0x78(%rsp),%rcx
    0.00 :   9851:   test   %rcx,%rcx
    0.00 :   9854:   jne    94a0 <do_lookup_x+0x290>
    0.00 :   985a:   jmp    92f9 <do_lookup_x+0xe9>
    0.00 :   985f:   nop
    0.00 :   9860:   mov    0x28(%rsp),%rdi
    0.00 :   9865:   mov    0x20(%rsp),%rdx
    0.00 :   986a:   mov    %r14,%r15
    0.00 :   986d:   mov    %r12,%r14
    0.00 :   9870:   lea    (%r14,%r14,2),%rax
    0.00 :   9874:   mov    0x40(%rsp),%rcx
    0.00 :   9879:   mov    0x50(%rsp),%rbx
    0.00 :   987e:   mov    %r13d,%r12d
    0.00 :   9881:   add    %rdi,%rdx
    0.00 :   9884:   mov    0x30(%rsp),%r11
    0.00 :   9889:   mov    0x60(%rsp),%rsi
    0.00 :   988e:   lea    0x2b76b(%rip),%rdi        # 35000 <_rtld_global>
    0.00 :   9895:   shl    $0x5,%rdx
    0.00 :   9899:   mov    0x5c(%rsp),%r9d
    0.00 :   989e:   mov    0x60(%rdi,%rdx,1),%rdx
    0.00 :   98a3:   shl    $0x2,%rdx
    0.00 :   98a7:   cmp    %rax,%rdx
    0.00 :   98aa:   jae    9c00 <do_lookup_x+0x9f0>
    0.00 :   98b0:   mov    (%rcx),%edx
    0.00 :   98b2:   mov    0x48(%rsp),%rax
    0.00 :   98b7:   mov    %r15,%rdi
    0.00 :   98ba:   shl    $0x5,%rdi
    0.00 :   98be:   add    %rdx,%rax
    0.00 :   98c1:   mov    %rax,%rdx
    0.00 :   98c4:   test   %r9d,%r9d
    0.00 :   98c7:   je     9959 <do_lookup_x+0x749>
    0.00 :   98cd:   mov    %rsi,%rax
    0.00 :   98d0:   shl    $0x5,%rax
    0.00 :   98d4:   add    %r11,%rax
    0.00 :   98d7:   jmp    98ef <do_lookup_x+0x6df>
    0.00 :   98d9:   nopl   0x0(%rax)
    0.00 :   98e0:   add    %r15,%rsi
    0.00 :   98e3:   add    %rdi,%rax
    0.00 :   98e6:   cmp    %r14,%rsi
    0.00 :   98e9:   jae    99f4 <do_lookup_x+0x7e4>
    0.00 :   98ef:   cmpq   $0x0,0x8(%rax)
    0.00 :   98f4:   jne    98e0 <do_lookup_x+0x6d0>
    0.00 :   98f6:   mov    0x10(%rsp),%rsi
    0.00 :   98fb:   mov    %r12d,(%rax)
    0.00 :   98fe:   mov    %rdx,0x8(%rax)
    0.00 :   9902:   mov    %rsi,0x10(%rax)
    0.00 :   9906:   mov    0xe8(%rsp),%rsi
    0.00 :   990e:   mov    %rsi,0x18(%rax)
    0.00 :   9912:   mov    0x20(%rsp),%rsi
    0.00 :   9917:   mov    0x28(%rsp),%rax
    0.00 :   991c:   mov    %rcx,0x8(%rsp)
    0.00 :   9921:   mov    0x38(%rsp),%rdi
    0.00 :   9926:   add    %rsi,%rax
    0.00 :   9929:   lea    0x2b6d0(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   9930:   shl    $0x5,%rax
    0.00 :   9934:   addq   $0x1,0x60(%rsi,%rax,1)
    0.00 :   993a:   call   *0x2b0b0(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   9940:   mov    0x18(%rsp),%rax
    0.00 :   9945:   mov    0x8(%rsp),%rcx
    0.00 :   994a:   mov    %rbx,0x8(%rax)
    0.00 :   994e:   mov    %rcx,(%rax)
    0.00 :   9951:   jmp    94f7 <do_lookup_x+0x2e7>
    0.00 :   9956:   sub    %r14,%rsi
    0.00 :   9959:   mov    %rsi,%rax
    0.00 :   995c:   shl    $0x5,%rax
    0.00 :   9960:   add    %r11,%rax
    0.00 :   9963:   jmp    9973 <do_lookup_x+0x763>
    0.00 :   9965:   nopl   (%rax)
    0.00 :   9968:   add    %r15,%rsi
    0.00 :   996b:   add    %rdi,%rax
    0.00 :   996e:   cmp    %r14,%rsi
    0.00 :   9971:   jae    9956 <do_lookup_x+0x746>
    0.00 :   9973:   cmpq   $0x0,0x8(%rax)
    0.00 :   9978:   jne    9968 <do_lookup_x+0x758>
    0.00 :   997a:   mov    %r12d,(%rax)
    0.00 :   997d:   mov    %rdx,0x8(%rax)
    0.00 :   9981:   mov    %rcx,0x10(%rax)
    0.00 :   9985:   mov    %rbx,0x18(%rax)
    0.00 :   9989:   movzbl 0x334(%rbx),%eax
    0.00 :   9990:   and    $0x3,%eax
    0.00 :   9993:   cmp    $0x2,%al
    0.00 :   9995:   jne    9912 <do_lookup_x+0x702>
    0.00 :   999b:   cmpb   $0x0,0x337(%rbx)
    0.00 :   99a2:   jne    9912 <do_lookup_x+0x702>
    0.00 :   99a8:   testb  $0x8,0xd0(%rsp)
    0.00 :   99b0:   je     9da2 <do_lookup_x+0xb92>
    0.00 :   99b6:   cmpb   $0x0,0x338(%rbx)
    0.00 :   99bd:   jne    9912 <do_lookup_x+0x702>
    0.00 :   99c3:   testb  $0x4,0x2b096(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   99ca:   jne    9dd9 <do_lookup_x+0xbc9>
    0.00 :   99d0:   movb   $0x1,0x338(%rbx)
    0.00 :   99d7:   jmp    9912 <do_lookup_x+0x702>
    0.00 :   99dc:   nopl   0x0(%rax)
    0.00 :   99e0:   mov    %rbx,%rax
    0.00 :   99e3:   mov    %r12,%rbx
    0.00 :   99e6:   mov    %r14,%r12
    0.00 :   99e9:   sub    %rbx,%r15
    0.00 :   99ec:   mov    %rax,%r14
    0.00 :   99ef:   jmp    9748 <do_lookup_x+0x538>
    0.00 :   99f4:   sub    %r14,%rsi
    0.00 :   99f7:   jmp    98cd <do_lookup_x+0x6bd>
    0.00 :   99fc:   mov    0x8(%rsp),%rax
    0.00 :   9a01:   xor    %edx,%edx
    0.00 :   9a03:   movzbl (%rax),%ecx
    0.00 :   9a06:   test   %rcx,%rcx
    0.00 :   9a09:   je     9aad <do_lookup_x+0x89d>
    0.00 :   9a0f:   movzbl 0x1(%rax),%eax
    0.00 :   9a13:   test   %al,%al
    0.00 :   9a15:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a1b:   shl    $0x4,%rcx
    0.00 :   9a1f:   add    %rax,%rcx
    0.00 :   9a22:   mov    0x8(%rsp),%rax
    0.00 :   9a27:   movzbl 0x2(%rax),%eax
    0.00 :   9a2b:   test   %al,%al
    0.00 :   9a2d:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a33:   shl    $0x4,%rcx
    0.00 :   9a37:   add    %rax,%rcx
    0.00 :   9a3a:   mov    0x8(%rsp),%rax
    0.00 :   9a3f:   movzbl 0x3(%rax),%eax
    0.00 :   9a43:   test   %al,%al
    0.00 :   9a45:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a4b:   shl    $0x4,%rcx
    0.00 :   9a4f:   add    %rax,%rcx
    0.00 :   9a52:   mov    0x8(%rsp),%rax
    0.00 :   9a57:   movzbl 0x4(%rax),%eax
    0.00 :   9a5b:   test   %al,%al
    0.00 :   9a5d:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a63:   shl    $0x4,%rcx
    0.00 :   9a67:   add    %rcx,%rax
    0.00 :   9a6a:   mov    0x8(%rsp),%rcx
    0.00 :   9a6f:   lea    0x5(%rcx),%rdx
    0.00 :   9a73:   movzbl 0x5(%rcx),%ecx
    0.00 :   9a77:   test   %cl,%cl
    0.00 :   9a79:   je     9a9c <do_lookup_x+0x88c>
    0.00 :   9a7b:   shl    $0x4,%rax
    0.00 :   9a7f:   add    $0x1,%rdx
    0.00 :   9a83:   add    %rax,%rcx
    0.00 :   9a86:   mov    %rcx,%rax
    0.00 :   9a89:   shr    $0x18,%rax
    0.00 :   9a8d:   and    $0xf0,%eax
    0.00 :   9a92:   xor    %rcx,%rax
    0.00 :   9a95:   movzbl (%rdx),%ecx
    0.00 :   9a98:   test   %cl,%cl
    0.00 :   9a9a:   jne    9a7b <do_lookup_x+0x86b>
    0.00 :   9a9c:   and    $0xfffffff,%eax
    0.00 :   9aa1:   xor    %edx,%edx
    0.00 :   9aa3:   mov    %rax,%rcx
    0.00 :   9aa6:   div    %rdi
    0.00 :   9aa9:   shl    $0x2,%rdx
    0.00 :   9aad:   mov    0x20(%rsp),%rax
    0.00 :   9ab2:   mov    %rcx,(%rax)
    0.00 :   9ab5:   jmp    93c7 <do_lookup_x+0x1b7>
    0.00 :   9aba:   mov    %r9d,0x30(%rsp)
    0.00 :   9abf:   mov    $0x1f,%esi
    0.00 :   9ac4:   mov    $0x20,%edi
    0.00 :   9ac9:   mov    %rcx,0x8(%rsp)
    0.00 :   9ace:   call   *0x2af14(%rip)        # 349e8 <__rtld_calloc>
    0.00 :   9ad4:   mov    %rax,%r11
    0.00 :   9ad7:   test   %rax,%rax
    0.00 :   9ada:   je     9dfe <do_lookup_x+0xbee>
    0.00 :   9ae0:   mov    %rax,0x50(%rbp)
    0.00 :   9ae4:   mov    0x2aef5(%rip),%rax        # 349e0 <__rtld_free>
    0.00 :   9aeb:   mov    %r12d,%r8d
    0.00 :   9aee:   mov    $0x1f,%r14d
    0.00 :   9af4:   movq   $0x1f,0x58(%rbp)
    0.00 :   9afc:   mov    0x30(%rsp),%r9d
    0.00 :   9b01:   mov    %rax,0x68(%rbp)
    0.00 :   9b05:   mov    0x8(%rsp),%rcx
    0.00 :   9b0a:   movabs $0x842108421084211,%rax
    0.00 :   9b14:   mul    %r8
    0.00 :   9b17:   mov    %r8,%rax
    0.00 :   9b1a:   sub    %rdx,%rax
    0.00 :   9b1d:   shr    %rax
    0.00 :   9b20:   lea    (%rdx,%rax,1),%rsi
    0.00 :   9b24:   shr    $0x4,%rsi
    0.00 :   9b28:   mov    %rsi,%rax
    0.00 :   9b2b:   shl    $0x5,%rax
    0.00 :   9b2f:   sub    %rsi,%rax
    0.00 :   9b32:   mov    %r8,%rsi
    0.00 :   9b35:   sub    %rax,%rsi
    0.00 :   9b38:   movabs $0x469ee58469ee5847,%rax
    0.00 :   9b42:   imul   %r8
    0.00 :   9b45:   mov    %rdx,%rax
    0.00 :   9b48:   and    $0xfffffffffffffff8,%rdx
    0.00 :   9b4c:   sar    $0x3,%rax
    0.00 :   9b50:   sub    %rax,%rdx
    0.00 :   9b53:   lea    (%rax,%rdx,4),%rax
    0.00 :   9b57:   sub    %rax,%r8
    0.00 :   9b5a:   lea    0x1(%r8),%r15
    0.00 :   9b5e:   jmp    98b0 <do_lookup_x+0x6a0>
    0.00 :   9b63:   mov    %ebp,%r11d
    0.00 :   9b66:   mov    0x28(%rsp),%r8d
    0.00 :   9b6b:   mov    0x30(%rsp),%r13
    0.00 :   9b70:   mov    0xc0(%rsp),%rbp
    0.00 :   9b78:   mov    0xd8(%rsp),%r14
    0.00 :   9b80:   mov    0x38(%rsp),%r10
    0.00 :   9b85:   mov    0x40(%rsp),%r9d
    0.00 :   9b8a:   jmp    9841 <do_lookup_x+0x631>
    0.00 :   9b8f:   mov    0x8(%rbx),%rdx
    0.00 :   9b93:   mov    0x8(%rsp),%rsi
    0.00 :   9b98:   xor    %eax,%eax
    0.00 :   9b9a:   mov    %rcx,0x48(%rsp)
    0.00 :   9b9f:   lea    0x221d2(%rip),%rdi        # 2bd78 <__PRETTY_FUNCTION__.9+0x88>
    0.00 :   9ba6:   mov    %r9d,0x40(%rsp)
    0.00 :   9bab:   mov    %r10,0x38(%rsp)
    0.00 :   9bb0:   mov    %r11d,0x30(%rsp)
    0.00 :   9bb5:   mov    %r8d,0x28(%rsp)
    0.00 :   9bba:   call   d480 <_dl_error_printf>
    0.00 :   9bbf:   mov    0x28(%rsp),%r8d
    0.00 :   9bc4:   mov    0x30(%rsp),%r11d
    0.00 :   9bc9:   mov    0x38(%rsp),%r10
    0.00 :   9bce:   mov    0x40(%rsp),%r9d
    0.00 :   9bd3:   mov    0x48(%rsp),%rcx
    0.00 :   9bd8:   testb  $0x1,0x344(%rbx)
    0.00 :   9bdf:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9be5:   mov    0x8(%rbx),%rsi
    0.00 :   9be9:   mov    0x8(%rsp),%rdx
    0.00 :   9bee:   lea    0x22233(%rip),%rcx        # 2be28 <__PRETTY_FUNCTION__.9+0x138>
    0.00 :   9bf5:   xor    %edi,%edi
    0.00 :   9bf7:   call   1070 <_dl_signal_error@plt>
    0.00 :   9bfc:   nopl   0x0(%rax)
    0.00 :   9c00:   lea    0x1(%r14),%rdi
    0.00 :   9c04:   mov    %r11,0x50(%rsp)
    0.00 :   9c09:   call   aec0 <_dl_higher_prime_number>
    0.00 :   9c0e:   mov    $0x20,%edi
    0.00 :   9c13:   mov    %rax,%rbp
    0.00 :   9c16:   mov    %rax,%rsi
    0.00 :   9c19:   call   *0x2adc9(%rip)        # 349e8 <__rtld_calloc>
    0.00 :   9c1f:   mov    %rax,0x30(%rsp)
    0.00 :   9c24:   test   %rax,%rax
    0.00 :   9c27:   je     9dfe <do_lookup_x+0xbee>
    0.00 :   9c2d:   lea    -0x2(%rbp),%rax
    0.00 :   9c31:   mov    0x50(%rsp),%r11
    0.00 :   9c36:   mov    0x30(%rsp),%r10
    0.00 :   9c3b:   mov    0x40(%rsp),%rcx
    0.00 :   9c40:   mov    0x5c(%rsp),%r9d
    0.00 :   9c45:   mov    %rax,0x8(%rsp)
    0.00 :   9c4a:   mov    %r14,%rax
    0.00 :   9c4d:   shl    $0x5,%rax
    0.00 :   9c51:   test   %r14,%r14
    0.00 :   9c54:   mov    %r11,%rdi
    0.00 :   9c57:   lea    (%rax,%r11,1),%r15
    0.00 :   9c5b:   je     9cda <do_lookup_x+0xaca>
    0.00 :   9c5d:   nopl   (%rax)
    0.00 :   9c60:   mov    0x8(%rdi),%rax
    0.00 :   9c64:   test   %rax,%rax
    0.00 :   9c67:   je     9cd1 <do_lookup_x+0xac1>
    0.00 :   9c69:   mov    (%rdi),%r14d
    0.00 :   9c6c:   movq   %rax,%xmm0
    0.00 :   9c71:   xor    %edx,%edx
    0.00 :   9c73:   mov    0x18(%rdi),%r13
    0.00 :   9c77:   movhps 0x10(%rdi),%xmm0
    0.00 :   9c7b:   mov    %r14,%rax
    0.00 :   9c7e:   mov    %r14,%r8
    0.00 :   9c81:   div    %rbp
    0.00 :   9c84:   mov    %r14,%rax
    0.00 :   9c87:   mov    %rdx,%rsi
    0.00 :   9c8a:   xor    %edx,%edx
    0.00 :   9c8c:   divq   0x8(%rsp)
    0.00 :   9c91:   add    $0x1,%rdx
    0.00 :   9c95:   mov    %rdx,%r14
    0.00 :   9c98:   shl    $0x5,%r14
    0.00 :   9c9c:   mov    %rsi,%rax
    0.00 :   9c9f:   shl    $0x5,%rax
    0.00 :   9ca3:   add    %r10,%rax
    0.00 :   9ca6:   jmp    9cbf <do_lookup_x+0xaaf>
    0.00 :   9ca8:   nopl   0x0(%rax,%rax,1)
    0.00 :   9cb0:   add    %rdx,%rsi
    0.00 :   9cb3:   add    %r14,%rax
    0.00 :   9cb6:   cmp    %rbp,%rsi
    0.00 :   9cb9:   jae    9d50 <do_lookup_x+0xb40>
    0.00 :   9cbf:   cmpq   $0x0,0x8(%rax)
    0.00 :   9cc4:   jne    9cb0 <do_lookup_x+0xaa0>
    0.00 :   9cc6:   mov    %r8d,(%rax)
    0.00 :   9cc9:   mov    %r13,0x18(%rax)
    0.00 :   9ccd:   movups %xmm0,0x8(%rax)
    0.00 :   9cd1:   add    $0x20,%rdi
    0.00 :   9cd5:   cmp    %rdi,%r15
    0.00 :   9cd8:   jne    9c60 <do_lookup_x+0xa50>
    0.00 :   9cda:   mov    0x28(%rsp),%rax
    0.00 :   9cdf:   mov    0x20(%rsp),%rsi
    0.00 :   9ce4:   mov    %r11,%rdi
    0.00 :   9ce7:   mov    %rbp,%r14
    0.00 :   9cea:   mov    %r9d,0x50(%rsp)
    0.00 :   9cef:   lea    (%rax,%rsi,1),%r13
    0.00 :   9cf3:   lea    0x2b306(%rip),%rax        # 35000 <_rtld_global>
    0.00 :   9cfa:   mov    %rcx,0x40(%rsp)
    0.00 :   9cff:   shl    $0x5,%r13
    0.00 :   9d03:   add    %rax,%r13
    0.00 :   9d06:   call   *0x68(%r13)
    0.00 :   9d0a:   xor    %edx,%edx
    0.00 :   9d0c:   mov    0x30(%rsp),%r11
    0.00 :   9d11:   mov    %rbp,0x58(%r13)
    0.00 :   9d15:   mov    0x2acc4(%rip),%rax        # 349e0 <__rtld_free>
    0.00 :   9d1c:   mov    0x40(%rsp),%rcx
    0.00 :   9d21:   mov    %r11,0x50(%r13)
    0.00 :   9d25:   mov    0x50(%rsp),%r9d
    0.00 :   9d2a:   mov    %rax,0x68(%r13)
    0.00 :   9d2e:   mov    0x68(%rsp),%rax
    0.00 :   9d33:   div    %rbp
    0.00 :   9d36:   mov    0x68(%rsp),%rax
    0.00 :   9d3b:   mov    %rdx,%rsi
    0.00 :   9d3e:   xor    %edx,%edx
    0.00 :   9d40:   divq   0x8(%rsp)
    0.00 :   9d45:   lea    0x1(%rdx),%r15
    0.00 :   9d49:   jmp    98b0 <do_lookup_x+0x6a0>
    0.00 :   9d4e:   xchg   %ax,%ax
    0.00 :   9d50:   sub    %rbp,%rsi
    0.00 :   9d53:   jmp    9c9c <do_lookup_x+0xa8c>
    0.00 :   9d58:   mov    %rcx,%rax
    0.00 :   9d5b:   xor    %edx,%edx
    0.00 :   9d5d:   div    %rdi
    0.00 :   9d60:   shl    $0x2,%rdx
    0.00 :   9d64:   jmp    9aad <do_lookup_x+0x89d>
    0.00 :   9d69:   mov    %ebp,%r11d
    0.00 :   9d6c:   mov    0x28(%rsp),%r8d
    0.00 :   9d71:   mov    0x30(%rsp),%r13
    0.00 :   9d76:   mov    %rax,%rcx
    0.00 :   9d79:   mov    0xc0(%rsp),%rbp
    0.00 :   9d81:   mov    0xd8(%rsp),%r14
    0.00 :   9d89:   mov    0x38(%rsp),%r10
    0.00 :   9d8e:   mov    0x40(%rsp),%r9d
    0.00 :   9d93:   jmp    94a0 <do_lookup_x+0x290>
    0.00 :   9d98:   movdqu 0x10(%rbp),%xmm0
    0.00 :   9d9d:   jmp    97be <do_lookup_x+0x5ae>
    0.00 :   9da2:   testb  $0x4,0x2acb7(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9da9:   jne    9db7 <do_lookup_x+0xba7>
    0.00 :   9dab:   movb   $0x1,0x337(%rbx)
    0.00 :   9db2:   jmp    9912 <do_lookup_x+0x702>
    0.00 :   9db7:   mov    0x30(%rbx),%rdx
    0.00 :   9dbb:   mov    0x8(%rbx),%rsi
    0.00 :   9dbf:   xor    %eax,%eax
    0.00 :   9dc1:   mov    %rcx,0x8(%rsp)
    0.00 :   9dc6:   lea    0x2209b(%rip),%rdi        # 2be68 <__PRETTY_FUNCTION__.9+0x178>
    0.00 :   9dcd:   call   d1d0 <_dl_debug_printf>
    0.00 :   9dd2:   mov    0x8(%rsp),%rcx
    0.00 :   9dd7:   jmp    9dab <do_lookup_x+0xb9b>
    0.00 :   9dd9:   mov    0x30(%rbx),%rdx
    0.00 :   9ddd:   mov    0x8(%rbx),%rsi
    0.00 :   9de1:   xor    %eax,%eax
    0.00 :   9de3:   mov    %rcx,0x8(%rsp)
    0.00 :   9de8:   lea    0x22079(%rip),%rdi        # 2be68 <__PRETTY_FUNCTION__.9+0x178>
    0.00 :   9def:   call   d1d0 <_dl_debug_printf>
    0.00 :   9df4:   mov    0x8(%rsp),%rcx
    0.00 :   9df9:   jmp    99d0 <do_lookup_x+0x7c0>
    0.00 :   9dfe:   mov    0x38(%rsp),%rdi
    0.00 :   9e03:   call   *0x2abe7(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   9e09:   lea    0x1fe4d(%rip),%rdi        # 29c5d <_sys_errname+0x89d>
    0.00 :   9e10:   xor    %eax,%eax
    0.00 :   9e12:   call   d530 <_dl_fatal_printf>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   16.42 [nf_conntrack][3cc6]
   15.40 [nf_conntrack][3dcb]
   14.92 [nf_conntrack][3ca0]
    9.64 [nf_conntrack][3d88]
    8.54 [nf_conntrack][435d]
    8.01 [nf_conntrack][3e0d]
    7.16 [nf_conntrack][3ca7]
    6.77 [nf_conntrack][3f82]
    5.51 [nf_conntrack][3d3d]
    4.71 [nf_conntrack][41c9]
    2.93 [nf_conntrack][3ca5]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (15 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003ca0 <nf_conntrack_in>:
         : 6    nf_conntrack_in():
   14.92 :   3ca0:   call   3ca5 <nf_conntrack_in+0x5> // [nf_conntrack][3ca0]
    2.93 :   3ca5:   push   %r15 // [nf_conntrack][3ca5]
    7.16 :   3ca7:   push   %r14 // [nf_conntrack][3ca7]
    0.00 :   3ca9:   mov    %rdi,%r14
    0.00 :   3cac:   push   %r13
    0.00 :   3cae:   push   %r12
    0.00 :   3cb0:   push   %rbp
    0.00 :   3cb1:   mov    %rsi,%rbp
    0.00 :   3cb4:   push   %rbx
    0.00 :   3cb5:   sub    $0x50,%rsp
    0.00 :   3cb9:   mov    0x68(%rdi),%rbx
    0.00 :   3cbd:   mov    %gs:0x28,%rax
   16.42 :   3cc6:   mov    %rax,0x48(%rsp) // [nf_conntrack][3cc6]
    0.00 :   3ccb:   xor    %eax,%eax
    0.00 :   3ccd:   movb   $0x0,0x1b(%rsp)
    0.00 :   3cd2:   mov    %rbx,%rcx
    0.00 :   3cd5:   mov    %ebx,%eax
    0.00 :   3cd7:   mov    %rbx,0x8(%rsp)
    0.00 :   3cdc:   and    $0xfffffffffffffff8,%rcx
    0.00 :   3ce0:   and    $0x7,%eax
    0.00 :   3ce3:   mov    %rcx,0x10(%rsp)
    0.00 :   3ce8:   cmp    $0x7,%rbx
    0.00 :   3cec:   ja     4309 <nf_conntrack_in+0x669>
    0.00 :   3cf2:   mov    $0x1,%ebx
    0.00 :   3cf7:   cmp    $0x7,%eax
    0.00 :   3cfa:   je     3f8e <nf_conntrack_in+0x2ee>
    0.00 :   3d00:   movzbl 0x1(%rbp),%edx
    0.00 :   3d04:   movzwl 0xb8(%r14),%esi
    0.00 :   3d0c:   lea    0x1b(%rsp),%rcx
    0.00 :   3d11:   mov    %r14,%rdi
    0.00 :   3d14:   add    0xc8(%r14),%rsi
    0.00 :   3d1b:   sub    0xd0(%r14),%esi
    0.00 :   3d22:   call   930 <get_l4proto>
    0.00 :   3d27:   mov    %eax,0x4(%rsp)
    0.00 :   3d2b:   test   %eax,%eax
    0.00 :   3d2d:   jle    3f69 <nf_conntrack_in+0x2c9>
    0.00 :   3d33:   movzbl 0x1b(%rsp),%r8d
    0.00 :   3d39:   movzbl 0x1(%rbp),%edx
    5.51 :   3d3d:   cmp    $0x3a,%r8b // [nf_conntrack][3d3d]
    0.00 :   3d41:   sete   %al
    0.00 :   3d44:   cmp    $0x1,%r8b
    0.00 :   3d48:   je     3d4e <nf_conntrack_in+0xae>
    0.00 :   3d4e:   test   %al,%al
    0.00 :   3d50:   jne    3d56 <nf_conntrack_in+0xb6>
    0.00 :   3d56:   lea    0x20(%rsp),%rbx
    0.00 :   3d5b:   movzbl 0x1(%rbp),%ecx
    0.00 :   3d5f:   movzwl 0xb8(%r14),%esi
    0.00 :   3d67:   movq   $0x0,(%rbx)
    0.00 :   3d6e:   mov    %r14,%rdi
    0.00 :   3d71:   add    0xc8(%r14),%rsi
    0.00 :   3d78:   movq   $0x0,0x8(%rbx)
    0.00 :   3d80:   movq   $0x0,0x10(%rbx)
    9.64 :   3d88:   movq   $0x0,0x18(%rbx) // [nf_conntrack][3d88]
    0.00 :   3d90:   movq   $0x0,0x20(%rbx)
    0.00 :   3d98:   movl   $0x0,0x1c(%rsp)
    0.00 :   3da0:   push   %rbx
    0.00 :   3da1:   mov    0x20(%rbp),%r9
    0.00 :   3da5:   mov    0xc(%rsp),%edx
    0.00 :   3da9:   sub    0xd0(%r14),%esi
    0.00 :   3db0:   call   6b0 <nf_ct_get_tuple>
    0.00 :   3db5:   pop    %rcx
    0.00 :   3db6:   test   %al,%al
    0.00 :   3db8:   je     403e <nf_conntrack_in+0x39e>
    0.00 :   3dbe:   cmpq   $0x7,0x8(%rsp)
    0.00 :   3dc4:   movzbl 0x0(%rip),%eax        # 3dcb <nf_conntrack_in+0x12b>
   15.40 :   3dcb:   mov    $0x0,%r12 // [nf_conntrack][3dcb]
    0.00 :   3dd2:   jbe    3e01 <nf_conntrack_in+0x161>
    0.00 :   3dd4:   mov    0x10(%rsp),%rdi
    0.00 :   3dd9:   movzbl 0xf(%rdi),%eax
    0.00 :   3ddd:   lea    0xc(%rdi),%r12
    0.00 :   3de1:   testb  $0x1,0xe(%rdi)
    0.00 :   3de5:   je     3e01 <nf_conntrack_in+0x161>
    0.00 :   3de7:   mov    0xa8(%r14),%edx
    0.00 :   3dee:   movb   $0x0,0x1e(%rsp)
    0.00 :   3df3:   lea    0x1c(%rsp),%r12
    0.00 :   3df8:   mov    %al,0x1f(%rsp)
    0.00 :   3dfc:   mov    %dx,0x1c(%rsp)
    0.00 :   3e01:   xor    %r15d,%r15d
    0.00 :   3e04:   test   $0x1,%al
    0.00 :   3e06:   je     3e0d <nf_conntrack_in+0x16d>
    0.00 :   3e08:   movzwl (%r12),%r15d
    8.01 :   3e0d:   mov    0x20(%rbp),%rdx // [nf_conntrack][3e0d]
    0.00 :   3e11:   mov    %r15d,%esi
    0.00 :   3e14:   mov    %rbx,%rdi
    0.00 :   3e17:   call   3c0 <hash_conntrack_raw>
    0.00 :   3e1c:   mov    0x20(%rbp),%rdi
    0.00 :   3e20:   mov    %rbx,%rdx
    0.00 :   3e23:   mov    %r12,%rsi
    0.00 :   3e26:   mov    %eax,%ecx
    0.00 :   3e28:   mov    %eax,%r13d
    0.00 :   3e2b:   call   32c0 <__nf_conntrack_find_get>
    0.00 :   3e30:   test   %rax,%rax
    0.00 :   3e33:   je     40be <nf_conntrack_in+0x41e>
    0.00 :   3e39:   movzbl 0x37(%rax),%esi
    0.00 :   3e3d:   lea    0x0(,%rsi,8),%rdx
    0.00 :   3e45:   mov    %rsi,%rcx
    0.00 :   3e48:   sub    %rsi,%rdx
    0.00 :   3e4b:   mov    $0x3,%esi
    0.00 :   3e50:   shl    $0x3,%rdx
    0.00 :   3e54:   sub    %rdx,%rax
    0.00 :   3e57:   lea    -0x10(%rax),%r12
    0.00 :   3e5b:   cmp    $0x1,%cl
    0.00 :   3e5e:   je     3e78 <nf_conntrack_in+0x1d8>
    0.00 :   3e60:   mov    0x80(%r12),%rdx
    0.00 :   3e68:   and    $0x2,%edx
    0.00 :   3e6b:   je     409f <nf_conntrack_in+0x3ff>
    0.00 :   3e71:   nopl   0x0(%rax,%rax,1)
    0.00 :   3e76:   xor    %esi,%esi
    0.00 :   3e78:   movzbl 0x84(%r14),%ecx
    0.00 :   3e80:   mov    %r12,%rax
    0.00 :   3e83:   mov    %ecx,%edx
    0.00 :   3e85:   shr    $0x3,%dl
    0.00 :   3e88:   and    $0x1,%edx
    0.00 :   3e8b:   or     %rsi,%rax
    0.00 :   3e8e:   setne  %sil
    0.00 :   3e92:   and    $0xfffffff7,%ecx
    0.00 :   3e95:   mov    %rax,0x68(%r14)
    0.00 :   3e99:   or     %esi,%edx
    0.00 :   3e9b:   shl    $0x3,%edx
    0.00 :   3e9e:   or     %edx,%ecx
    0.00 :   3ea0:   mov    %cl,0x84(%r14)
    0.00 :   3ea7:   mov    %eax,%r12d
    0.00 :   3eaa:   mov    %rax,%r15
    0.00 :   3ead:   and    $0x7,%r12d
    0.00 :   3eb1:   and    $0xfffffffffffffff8,%r15
    0.00 :   3eb5:   cmp    $0x7,%rax
    0.00 :   3eb9:   jbe    3f6e <nf_conntrack_in+0x2ce>
    0.00 :   3ebf:   movzbl 0x46(%r15),%eax
    0.00 :   3ec4:   cmp    $0x2f,%al
    0.00 :   3ec6:   je     4186 <nf_conntrack_in+0x4e6>
    0.00 :   3ecc:   ja     3fdc <nf_conntrack_in+0x33c>
    0.00 :   3ed2:   cmp    $0x11,%al
    0.00 :   3ed4:   je     4169 <nf_conntrack_in+0x4c9>
    0.00 :   3eda:   ja     3fb7 <nf_conntrack_in+0x317>
    0.00 :   3ee0:   cmp    $0x1,%al
    0.00 :   3ee2:   je     4236 <nf_conntrack_in+0x596>
    0.00 :   3ee8:   cmp    $0x6,%al
    0.00 :   3eea:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   3ef0:   mov    0x4(%rsp),%edx
    0.00 :   3ef4:   mov    %rbp,%r8
    0.00 :   3ef7:   mov    %r12d,%ecx
    0.00 :   3efa:   mov    %r14,%rsi
    0.00 :   3efd:   mov    %r15,%rdi
    0.00 :   3f00:   call   3f05 <nf_conntrack_in+0x265>
    0.00 :   3f05:   mov    %eax,%r13d
    0.00 :   3f08:   test   %r13d,%r13d
    0.00 :   3f0b:   jg     435d <nf_conntrack_in+0x6bd>
    0.00 :   3f11:   nopl   0x0(%rax,%rax,1)
    0.00 :   3f16:   mov    $0xffffffff,%eax
    0.00 :   3f1b:   lock xadd %eax,(%r15)
    0.00 :   3f20:   cmp    $0x1,%eax
    0.00 :   3f23:   je     404c <nf_conntrack_in+0x3ac>
    0.00 :   3f29:   test   %eax,%eax
    0.00 :   3f2b:   jle    4148 <nf_conntrack_in+0x4a8>
    0.00 :   3f31:   movq   $0x0,0x68(%r14)
    0.00 :   3f39:   cmp    $0xfffffffc,%r13d
    0.00 :   3f3d:   jne    4066 <nf_conntrack_in+0x3c6>
    0.00 :   3f43:   movzbl 0x1b(%rsp),%r8d
    0.00 :   3f49:   jmp    3d5b <nf_conntrack_in+0xbb>
    0.00 :   3f4e:   mov    %r12,%rdx
    0.00 :   3f51:   mov    $0x0,%rsi
    0.00 :   3f58:   mov    $0x0,%rdi
    0.00 :   3f5f:   call   3f64 <nf_conntrack_in+0x2c4>
    0.00 :   3f64:   jmp    3e76 <nf_conntrack_in+0x1d6>
    0.00 :   3f69:   nopl   0x0(%rax,%rax,1)
    0.00 :   3f6e:   mov    0x20(%rbp),%rax
    0.00 :   3f72:   mov    0xb40(%rax),%rax
    0.00 :   3f79:   incl   %gs:0x4(%rax)
    0.00 :   3f7d:   mov    $0x1,%ebx
    6.77 :   3f82:   cmpq   $0x7,0x8(%rsp) // [nf_conntrack][3f82]
    0.00 :   3f88:   ja     42da <nf_conntrack_in+0x63a>
    0.00 :   3f8e:   mov    0x48(%rsp),%rax
    0.00 :   3f93:   sub    %gs:0x28,%rax
    0.00 :   3f9c:   jne    4374 <nf_conntrack_in+0x6d4>
    0.00 :   3fa2:   add    $0x50,%rsp
    0.00 :   3fa6:   mov    %ebx,%eax
    0.00 :   3fa8:   pop    %rbx
    0.00 :   3fa9:   pop    %rbp
    0.00 :   3faa:   pop    %r12
    0.00 :   3fac:   pop    %r13
    0.00 :   3fae:   pop    %r14
    0.00 :   3fb0:   pop    %r15
    0.00 :   3fb2:   jmp    3fb7 <nf_conntrack_in+0x317>
    0.00 :   3fb7:   cmp    $0x21,%al
    0.00 :   3fb9:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   3fbf:   mov    0x4(%rsp),%edx
    0.00 :   3fc3:   mov    %rbp,%r8
    0.00 :   3fc6:   mov    %r12d,%ecx
    0.00 :   3fc9:   mov    %r14,%rsi
    0.00 :   3fcc:   mov    %r15,%rdi
    0.00 :   3fcf:   call   3fd4 <nf_conntrack_in+0x334>
    0.00 :   3fd4:   mov    %eax,%r13d
    0.00 :   3fd7:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   3fdc:   cmp    $0x84,%al
    0.00 :   3fde:   je     424f <nf_conntrack_in+0x5af>
    0.00 :   3fe4:   cmp    $0x88,%al
    0.00 :   3fe6:   jne    4005 <nf_conntrack_in+0x365>
    0.00 :   3fe8:   mov    0x4(%rsp),%edx
    0.00 :   3fec:   mov    %rbp,%r8
    0.00 :   3fef:   mov    %r12d,%ecx
    0.00 :   3ff2:   mov    %r14,%rsi
    0.00 :   3ff5:   mov    %r15,%rdi
    0.00 :   3ff8:   call   3ffd <nf_conntrack_in+0x35d>
    0.00 :   3ffd:   mov    %eax,%r13d
    0.00 :   4000:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4005:   cmp    $0x3a,%al
    0.00 :   4007:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   400d:   mov    %rbp,%rcx
    0.00 :   4010:   mov    %r12d,%edx
    0.00 :   4013:   mov    %r14,%rsi
    0.00 :   4016:   mov    %r15,%rdi
    0.00 :   4019:   call   401e <nf_conntrack_in+0x37e>
    0.00 :   401e:   mov    %eax,%r13d
    0.00 :   4021:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4026:   mov    $0x0,%rsi
    0.00 :   402d:   mov    $0x0,%rdi
    0.00 :   4034:   call   4039 <nf_conntrack_in+0x399>
    0.00 :   4039:   jmp    3f16 <nf_conntrack_in+0x276>
    0.00 :   403e:   nopl   0x0(%rax,%rax,1)
    0.00 :   4043:   mov    0x68(%r14),%rax
    0.00 :   4047:   jmp    3ea7 <nf_conntrack_in+0x207>
    0.00 :   404c:   mov    %r15,%rdi
    0.00 :   404f:   call   4054 <nf_conntrack_in+0x3b4>
    0.00 :   4054:   movq   $0x0,0x68(%r14)
    0.00 :   405c:   cmp    $0xfffffffc,%r13d
    0.00 :   4060:   je     3f43 <nf_conntrack_in+0x2a3>
    0.00 :   4066:   mov    0x20(%rbp),%rax
    0.00 :   406a:   mov    0xb40(%rax),%rax
    0.00 :   4071:   incl   %gs:0x4(%rax)
    0.00 :   4075:   test   %r13d,%r13d
    0.00 :   4078:   jne    4089 <nf_conntrack_in+0x3e9>
    0.00 :   407a:   mov    0x20(%rbp),%rax
    0.00 :   407e:   mov    0xb40(%rax),%rax
    0.00 :   4085:   incl   %gs:0x14(%rax)
    0.00 :   4089:   mov    %r13d,%ebx
    0.00 :   408c:   neg    %ebx
    0.00 :   408e:   cmpq   $0x7,0x8(%rsp)
    0.00 :   4094:   jbe    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   409a:   jmp    42da <nf_conntrack_in+0x63a>
    0.00 :   409f:   mov    0x80(%r12),%rax
    0.00 :   40a7:   test   $0x1,%al
    0.00 :   40a9:   je     415a <nf_conntrack_in+0x4ba>
    0.00 :   40af:   nopl   0x0(%rax,%rax,1)
    0.00 :   40b4:   mov    $0x1,%esi
    0.00 :   40b9:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   40be:   xor    %esi,%esi
    0.00 :   40c0:   testb  $0x2,0x3(%r12)
    0.00 :   40c6:   je     40cd <nf_conntrack_in+0x42d>
    0.00 :   40c8:   movzwl (%r12),%esi
    0.00 :   40cd:   mov    0x20(%rbp),%rdi
    0.00 :   40d1:   cmp    %r15d,%esi
    0.00 :   40d4:   jne    426c <nf_conntrack_in+0x5cc>
    0.00 :   40da:   mov    0x10(%rsp),%rsi
    0.00 :   40df:   mov    %r13d,%r8d
    0.00 :   40e2:   mov    %r14,%rcx
    0.00 :   40e5:   mov    %rbx,%rdx
    0.00 :   40e8:   call   1fd0 <init_conntrack.constprop.0>
    0.00 :   40ed:   test   %rax,%rax
    0.00 :   40f0:   je     4043 <nf_conntrack_in+0x3a3>
    0.00 :   40f6:   cmp    $0xfffffffffffff000,%rax
    0.00 :   40fc:   jbe    3e39 <nf_conntrack_in+0x199>
    0.00 :   4102:   test   %eax,%eax
    0.00 :   4104:   jns    4043 <nf_conntrack_in+0x3a3>
    0.00 :   410a:   mov    0x20(%rbp),%rax
    0.00 :   410e:   mov    0xb40(%rax),%rax
    0.00 :   4115:   incl   %gs:0x14(%rax)
    0.00 :   4119:   xor    %ebx,%ebx
    0.00 :   411b:   cmpq   $0x7,0x8(%rsp)
    0.00 :   4121:   jbe    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   4127:   jmp    42da <nf_conntrack_in+0x63a>
    0.00 :   412c:   mov    $0x0,%rsi
    0.00 :   4133:   mov    $0x0,%rdi
    0.00 :   413a:   call   413f <nf_conntrack_in+0x49f>
    0.00 :   413f:   mov    0x68(%r14),%rax
    0.00 :   4143:   jmp    3ea7 <nf_conntrack_in+0x207>
    0.00 :   4148:   mov    $0x3,%esi
    0.00 :   414d:   mov    %r15,%rdi
    0.00 :   4150:   call   4155 <nf_conntrack_in+0x4b5>
    0.00 :   4155:   jmp    3f31 <nf_conntrack_in+0x291>
    0.00 :   415a:   nopl   0x0(%rax,%rax,1)
    0.00 :   415f:   mov    $0x2,%esi
    0.00 :   4164:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   4169:   mov    0x4(%rsp),%edx
    0.00 :   416d:   mov    %rbp,%r8
    0.00 :   4170:   mov    %r12d,%ecx
    0.00 :   4173:   mov    %r14,%rsi
    0.00 :   4176:   mov    %r15,%rdi
    0.00 :   4179:   call   417e <nf_conntrack_in+0x4de>
    0.00 :   417e:   mov    %eax,%r13d
    0.00 :   4181:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4186:   mov    0x4(%rsp),%edx
    0.00 :   418a:   mov    %rbp,%r8
    0.00 :   418d:   mov    %r12d,%ecx
    0.00 :   4190:   mov    %r14,%rsi
    0.00 :   4193:   mov    %r15,%rdi
    0.00 :   4196:   call   419b <nf_conntrack_in+0x4fb>
    0.00 :   419b:   mov    %eax,%r13d
    0.00 :   419e:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   41a3:   mov    0x88(%r15),%rax
    0.00 :   41aa:   mov    %r14,%rdx
    0.00 :   41ad:   mov    %r12d,%esi
    0.00 :   41b0:   mov    %r15,%rdi
    0.00 :   41b3:   mov    $0x1,%r8d
    0.00 :   41b9:   mov    $0x1,%ebx
    0.00 :   41be:   mov    0xb50(%rax),%ecx
    0.00 :   41c4:   call   41c9 <nf_conntrack_in+0x529>
    4.71 :   41c9:   cmp    $0x3,%r12d // [nf_conntrack][41c9]
    0.00 :   41cd:   jne    3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41d3:   lock btsq $0x1,0x80(%r15)
    0.00 :   41dd:   jb     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41e3:   mov    0x88(%r15),%rax
    0.00 :   41ea:   mov    0xb48(%rax),%rax
    0.00 :   41f1:   test   %rax,%rax
    0.00 :   41f4:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41fa:   mov    0xb0(%r15),%rdi
    0.00 :   4201:   test   %rdi,%rdi
    0.00 :   4204:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   420a:   movzbl 0x4(%rdi),%eax
    0.00 :   420e:   test   %al,%al
    0.00 :   4210:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   4216:   mov    0xc(%rdi),%edx
    0.00 :   4219:   add    %rdi,%rax
    0.00 :   421c:   test   %edx,%edx
    0.00 :   421e:   jne    4365 <nf_conntrack_in+0x6c5>
    0.00 :   4224:   test   %rax,%rax
    0.00 :   4227:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   422d:   lock orb $0x8,(%rax)
    0.00 :   4231:   jmp    3f82 <nf_conntrack_in+0x2e2>
    0.00 :   4236:   mov    %rbp,%rcx
    0.00 :   4239:   mov    %r12d,%edx
    0.00 :   423c:   mov    %r14,%rsi
    0.00 :   423f:   mov    %r15,%rdi
    0.00 :   4242:   call   4247 <nf_conntrack_in+0x5a7>
    0.00 :   4247:   mov    %eax,%r13d
    0.00 :   424a:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   424f:   mov    0x4(%rsp),%edx
    0.00 :   4253:   mov    %rbp,%r8
    0.00 :   4256:   mov    %r12d,%ecx
    0.00 :   4259:   mov    %r14,%rsi
    0.00 :   425c:   mov    %r15,%rdi
    0.00 :   425f:   call   4264 <nf_conntrack_in+0x5c4>
    0.00 :   4264:   mov    %eax,%r13d
    0.00 :   4267:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   426c:   mov    %rdi,%rdx
    0.00 :   426f:   mov    %rbx,%rdi
    0.00 :   4272:   call   3c0 <hash_conntrack_raw>
    0.00 :   4277:   mov    0x20(%rbp),%rdi
    0.00 :   427b:   mov    %rbx,%rdx
    0.00 :   427e:   mov    %r12,%rsi
    0.00 :   4281:   mov    %eax,%ecx
    0.00 :   4283:   call   32c0 <__nf_conntrack_find_get>
    0.00 :   4288:   test   %rax,%rax
    0.00 :   428b:   jne    3e39 <nf_conntrack_in+0x199>
    0.00 :   4291:   mov    0x20(%rbp),%rdi
    0.00 :   4295:   jmp    40da <nf_conntrack_in+0x43a>
    0.00 :   429a:   mov    $0x0,%rsi
    0.00 :   42a1:   mov    %r12,%rdx
    0.00 :   42a4:   mov    $0x0,%rdi
    0.00 :   42ab:   call   42b0 <nf_conntrack_in+0x610>
    0.00 :   42b0:   mov    $0x1,%esi
    0.00 :   42b5:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   42ba:   mov    $0x0,%rsi
    0.00 :   42c1:   mov    %r12,%rdx
    0.00 :   42c4:   mov    $0x0,%rdi
    0.00 :   42cb:   call   42d0 <nf_conntrack_in+0x630>
    0.00 :   42d0:   mov    $0x2,%esi
    0.00 :   42d5:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   42da:   mov    0x10(%rsp),%rcx
    0.00 :   42df:   mov    $0xffffffff,%eax
    0.00 :   42e4:   lock xadd %eax,(%rcx)
    0.00 :   42e8:   cmp    $0x1,%eax
    0.00 :   42eb:   je     434e <nf_conntrack_in+0x6ae>
    0.00 :   42ed:   test   %eax,%eax
    0.00 :   42ef:   jg     3f8e <nf_conntrack_in+0x2ee>
    0.00 :   42f5:   mov    0x10(%rsp),%rdi
    0.00 :   42fa:   mov    $0x3,%esi
    0.00 :   42ff:   call   4304 <nf_conntrack_in+0x664>
    0.00 :   4304:   jmp    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   4309:   mov    0x10(%rsp),%rbx
    0.00 :   430e:   mov    0x80(%rbx),%rdx
    0.00 :   4315:   and    $0x8,%dh
    0.00 :   4318:   je     4344 <nf_conntrack_in+0x6a4>
    0.00 :   431a:   cmp    $0x7,%eax
    0.00 :   431d:   je     4344 <nf_conntrack_in+0x6a4>
    0.00 :   431f:   movq   $0x0,0x68(%rdi)
    0.00 :   4327:   jmp    3d00 <nf_conntrack_in+0x60>
    0.00 :   432c:   mov    $0x0,%rsi
    0.00 :   4333:   mov    $0x0,%rdi
    0.00 :   433a:   call   433f <nf_conntrack_in+0x69f>
    0.00 :   433f:   jmp    3f6e <nf_conntrack_in+0x2ce>
    0.00 :   4344:   mov    $0x1,%ebx
    0.00 :   4349:   jmp    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   434e:   mov    0x10(%rsp),%rdi
    0.00 :   4353:   call   4358 <nf_conntrack_in+0x6b8>
    0.00 :   4358:   jmp    3f8e <nf_conntrack_in+0x2ee>
    8.54 :   435d:   mov    %r13d,%ebx // [nf_conntrack][435d]
    0.00 :   4360:   jmp    41c9 <nf_conntrack_in+0x529>
    0.00 :   4365:   mov    $0x4,%esi
    0.00 :   436a:   call   436f <nf_conntrack_in+0x6cf>
    0.00 :   436f:   jmp    4224 <nf_conntrack_in+0x584>
    0.00 :   4374:   call   4379 <nf_conntrack_in+0x6d9>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   33.48 [virtio_net][6481]
   21.82 [virtio_net][64b9]
   16.89 [virtio_net][65df]
    8.57 [virtio_net][6e1b]
    8.24 [virtio_net][6462]
    5.99 [virtio_net][6c02]
    5.01 [virtio_net][6178]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (13 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000006140 <receive_buf>:
         : 6    receive_buf():
    0.00 :   6140:   call   6145 <receive_buf+0x5>
    0.00 :   6145:   push   %r15
    0.00 :   6147:   push   %r14
    0.00 :   6149:   push   %r13
    0.00 :   614b:   mov    %ecx,%r13d
    0.00 :   614e:   push   %r12
    0.00 :   6150:   push   %rbp
    0.00 :   6151:   mov    %rsi,%rbp
    0.00 :   6154:   push   %rbx
    0.00 :   6155:   mov    %rdi,%rbx
    0.00 :   6158:   sub    $0xa0,%rsp
    0.00 :   615f:   mov    0x10(%rdi),%rax
    0.00 :   6163:   mov    %rdx,0x8(%rsp)
    0.00 :   6168:   mov    0xd8(%rsp),%r12
    0.00 :   6170:   mov    %rax,(%rsp)
    0.00 :   6174:   movzbl 0x4a(%rdi),%eax
    5.01 :   6178:   lea    0xe(%rax),%edx // [virtio_net][6178]
    0.00 :   617b:   cmp    %edx,%ecx
    0.00 :   617d:   jb     6a2a <receive_buf+0x8ea>
    0.00 :   6183:   cmpb   $0x0,0x38(%rdi)
    0.00 :   6187:   mov    %r9,%r14
    0.00 :   618a:   jne    645d <receive_buf+0x31d>
    0.00 :   6190:   cmpb   $0x0,0x33(%rdi)
    0.00 :   6194:   je     626a <receive_buf+0x12a>
    0.00 :   619a:   push   $0x0
    0.00 :   619c:   mov    %ecx,%r8d
    0.00 :   619f:   mov    $0x1000,%r9d
    0.00 :   61a5:   xor    %ecx,%ecx
    0.00 :   61a7:   push   $0x0
    0.00 :   61a9:   push   $0x1
    0.00 :   61ab:   mov    0x20(%rsp),%rdx
    0.00 :   61b0:   call   2170 <page_to_skb>
    0.00 :   61b5:   mov    %rax,%r14
    0.00 :   61b8:   movzbl 0x4a(%rbx),%eax
    0.00 :   61bc:   add    $0x18,%rsp
    0.00 :   61c0:   sub    %eax,%r13d
    0.00 :   61c3:   add    %r13,0x8(%r12)
    0.00 :   61c8:   test   %r14,%r14
    0.00 :   61cb:   je     6e71 <receive_buf+0xd31>
    0.00 :   61d1:   lea    0x28(%r14),%rdx
    0.00 :   61d5:   mov    (%rsp),%rax
    0.00 :   61d9:   testb  $0x80,0xec(%rax)
    0.00 :   61e0:   je     61ec <receive_buf+0xac>
    0.00 :   61e2:   cmpb   $0x0,0x3a(%rbx)
    0.00 :   61e6:   jne    69cc <receive_buf+0x88c>
    0.00 :   61ec:   movzbl 0x28(%r14),%edx
    0.00 :   61f1:   test   $0x2,%dl
    0.00 :   61f4:   je     620b <receive_buf+0xcb>
    0.00 :   61f6:   movzbl 0x80(%r14),%eax
    0.00 :   61fe:   and    $0xffffff9f,%eax
    0.00 :   6201:   or     $0x20,%eax
    0.00 :   6204:   mov    %al,0x80(%r14)
    0.00 :   620b:   movzbl 0x29(%r14),%eax
    0.00 :   6210:   test   %al,%al
    0.00 :   6212:   je     637f <receive_buf+0x23f>
    0.00 :   6218:   mov    %eax,%esi
    0.00 :   621a:   and    $0x7f,%esi
    0.00 :   621d:   cmp    $0x3,%esi
    0.00 :   6220:   je     6a14 <receive_buf+0x8d4>
    0.00 :   6226:   cmp    $0x4,%esi
    0.00 :   6229:   je     686d <receive_buf+0x72d>
    0.00 :   622f:   cmp    $0x1,%esi
    0.00 :   6232:   je     69b6 <receive_buf+0x876>
    0.00 :   6238:   call   623d <receive_buf+0xfd>
    0.00 :   623d:   test   %eax,%eax
    0.00 :   623f:   jne    6245 <receive_buf+0x105>
    0.00 :   6245:   mov    (%rsp),%rax
    0.00 :   6249:   mov    %r14,%rdi
    0.00 :   624c:   addq   $0x1,0x198(%rax)
    0.00 :   6254:   add    $0xa0,%rsp
    0.00 :   625b:   pop    %rbx
    0.00 :   625c:   pop    %rbp
    0.00 :   625d:   pop    %r12
    0.00 :   625f:   pop    %r13
    0.00 :   6261:   pop    %r14
    0.00 :   6263:   pop    %r15
    0.00 :   6265:   jmp    626a <receive_buf+0x12a>
    0.00 :   626a:   lea    0x40(%r8),%esi
    0.00 :   626e:   mov    0x8(%rsp),%rcx
    0.00 :   6273:   lea    (%rsi,%rax,1),%r11d
    0.00 :   6277:   mov    %esi,0x38(%rsp)
    0.00 :   627b:   lea    0x62d(%r11),%edx
    0.00 :   6282:   and    $0xffffffc0,%edx
    0.00 :   6285:   lea    0x140(%rdx),%edi
    0.00 :   628b:   mov    $0x80000000,%edx
    0.00 :   6290:   mov    %edi,0x10(%rsp)
    0.00 :   6294:   add    %rcx,%rdx
    0.00 :   6297:   jb     7b9b <receive_buf+0x1a5b>
    0.00 :   629d:   mov    $0xffffffff80000000,%rcx
    0.00 :   62a4:   sub    0x0(%rip),%rcx        # 62ab <receive_buf+0x16b>
    0.00 :   62ab:   add    %rcx,%rdx
    0.00 :   62ae:   shr    $0xc,%rdx
    0.00 :   62b2:   shl    $0x6,%rdx
    0.00 :   62b6:   add    0x0(%rip),%rdx        # 62bd <receive_buf+0x17d>
    0.00 :   62bd:   mov    0x8(%rdx),%rcx
    0.00 :   62c1:   mov    %rdx,0x30(%rsp)
    0.00 :   62c6:   test   $0x1,%cl
    0.00 :   62c9:   jne    6e63 <receive_buf+0xd23>
    0.00 :   62cf:   nopl   0x0(%rax,%rax,1)
    0.00 :   62d4:   mov    %r13d,%edx
    0.00 :   62d7:   sub    %eax,%edx
    0.00 :   62d9:   mov    %edx,%r10d
    0.00 :   62dc:   add    %r10,0x8(%r12)
    0.00 :   62e1:   cmp    $0x5ee,%edx
    0.00 :   62e7:   ja     6c0b <receive_buf+0xacb>
    0.00 :   62ed:   movq   $0x0,0x18(%rsp)
    0.00 :   62f6:   xor    %r13d,%r13d
    0.00 :   62f9:   xor    %r15d,%r15d
    0.00 :   62fc:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6300:   jne    6ebc <receive_buf+0xd7c>
    0.00 :   6306:   mov    0x10(%rsp),%esi
    0.00 :   630a:   mov    0x8(%rsp),%rdi
    0.00 :   630f:   mov    %edx,0x28(%rsp)
    0.00 :   6313:   mov    %r11d,0x20(%rsp)
    0.00 :   6318:   call   631d <receive_buf+0x1dd>
    0.00 :   631d:   mov    %rax,%r14
    0.00 :   6320:   test   %rax,%rax
    0.00 :   6323:   je     6c1c <receive_buf+0xadc>
    0.00 :   6329:   mov    0x20(%rsp),%r11d
    0.00 :   632e:   mov    0x28(%rsp),%esi
    0.00 :   6332:   mov    %r14,%rdi
    0.00 :   6335:   sub    %r15d,%r11d
    0.00 :   6338:   add    %r11d,0xbc(%r14)
    0.00 :   633f:   movslq %r11d,%rax
    0.00 :   6342:   add    %rax,0xd0(%r14)
    0.00 :   6349:   call   634e <receive_buf+0x20e>
    0.00 :   634e:   cmpq   $0x0,0x18(%rsp)
    0.00 :   6354:   lea    0x28(%r14),%rdx
    0.00 :   6358:   je     67d8 <receive_buf+0x698>
    0.00 :   635e:   test   %r13d,%r13d
    0.00 :   6361:   je     61d5 <receive_buf+0x95>
    0.00 :   6367:   mov    0xc0(%r14),%eax
    0.00 :   636e:   mov    0xc8(%r14),%rcx
    0.00 :   6375:   mov    %r13b,0x1(%rcx,%rax,1)
    0.00 :   637a:   jmp    61d5 <receive_buf+0x95>
    0.00 :   637f:   mov    0xd0(%r14),%rax
    0.00 :   6386:   sub    0xc8(%r14),%rax
    0.00 :   638d:   and    $0x1,%edx
    0.00 :   6390:   mov    %ax,0xba(%r14)
    0.00 :   6398:   je     6416 <receive_buf+0x2d6>
    0.00 :   639a:   xor    %r12d,%r12d
    0.00 :   639d:   xor    %r15d,%r15d
    0.00 :   63a0:   movzwl 0x30(%r14),%edx
    0.00 :   63a5:   mov    0x70(%r14),%ecx
    0.00 :   63a9:   movzwl 0x2e(%r14),%ebx
    0.00 :   63ae:   mov    0x74(%r14),%esi
    0.00 :   63b2:   lea    0x2(%rdx),%eax
    0.00 :   63b5:   mov    %ecx,%edi
    0.00 :   63b7:   cmp    %r15d,%eax
    0.00 :   63ba:   cmovb  %r15d,%eax
    0.00 :   63be:   sub    %esi,%edi
    0.00 :   63c0:   add    %ebx,%eax
    0.00 :   63c2:   cmp    %eax,%edi
    0.00 :   63c4:   jb     6e17 <receive_buf+0xcd7>
    0.00 :   63ca:   mov    %ebx,%esi
    0.00 :   63cc:   mov    %r14,%rdi
    0.00 :   63cf:   call   63d4 <receive_buf+0x294>
    0.00 :   63d4:   test   %al,%al
    0.00 :   63d6:   je     6238 <receive_buf+0xf8>
    0.00 :   63dc:   mov    0x70(%r14),%eax
    0.00 :   63e0:   mov    0x74(%r14),%esi
    0.00 :   63e4:   movzwl 0xb6(%r14),%ebx
    0.00 :   63ec:   add    0xc8(%r14),%rbx
    0.00 :   63f3:   mov    %eax,%edx
    0.00 :   63f5:   sub    0xd0(%r14),%rbx
    0.00 :   63fc:   add    %r15d,%ebx
    0.00 :   63ff:   sub    %esi,%edx
    0.00 :   6401:   cmp    %ebx,%edx
    0.00 :   6403:   jb     6e41 <receive_buf+0xd01>
    0.00 :   6409:   movzbl 0x29(%r14),%eax
    0.00 :   640e:   test   %al,%al
    0.00 :   6410:   jne    681f <receive_buf+0x6df>
    0.00 :   6416:   mov    0x0(%rbp),%rax
    0.00 :   641a:   mov    (%rsp),%rsi
    0.00 :   641e:   mov    %r14,%rdi
    0.00 :   6421:   mov    0x28(%rax),%eax
    0.00 :   6424:   shr    %eax
    0.00 :   6426:   add    $0x1,%eax
    0.00 :   6429:   mov    %ax,0x7c(%r14)
    0.00 :   642e:   call   6433 <receive_buf+0x2f3>
    0.00 :   6433:   mov    %ax,0xb4(%r14)
    0.00 :   643b:   nopl   0x0(%rax,%rax,1)
    0.00 :   6440:   add    $0xa0,%rsp
    0.00 :   6447:   lea    0x8(%rbp),%rdi
    0.00 :   644b:   mov    %r14,%rsi
    0.00 :   644e:   pop    %rbx
    0.00 :   644f:   pop    %rbp
    0.00 :   6450:   pop    %r12
    0.00 :   6452:   pop    %r13
    0.00 :   6454:   pop    %r14
    0.00 :   6456:   pop    %r15
    0.00 :   6458:   jmp    645d <receive_buf+0x31d>
    0.00 :   645d:   mov    0x8(%rsp),%rsi
    8.24 :   6462:   mov    $0x80000000,%edx // [virtio_net][6462]
    0.00 :   6467:   xor    %edi,%edi
    0.00 :   6469:   mov    %ecx,0x54(%rsp)
    0.00 :   646d:   mov    $0xffffffff80000000,%rcx
    0.00 :   6474:   mov    %r8,0x58(%rsp)
    0.00 :   6479:   add    %rsi,%rdx
    0.00 :   647c:   movzwl 0xa(%rsi),%r9d
   33.48 :   6481:   mov    0x0(%rip),%rsi        # 6488 <receive_buf+0x348> // [virtio_net][6481]
    0.00 :   6488:   setb   %dil
    0.00 :   648c:   sub    %rsi,%rcx
    0.00 :   648f:   test   %rdi,%rdi
    0.00 :   6492:   cmovne 0x0(%rip),%rcx        # 649a <receive_buf+0x35a>
    0.00 :   649a:   mov    0x0(%rip),%rdi        # 64a1 <receive_buf+0x361>
    0.00 :   64a1:   mov    %r9w,0x52(%rsp)
    0.00 :   64a7:   add    %rcx,%rdx
    0.00 :   64aa:   shr    $0xc,%rdx
    0.00 :   64ae:   shl    $0x6,%rdx
    0.00 :   64b2:   add    %rdi,%rdx
    0.00 :   64b5:   mov    0x8(%rdx),%rcx
   21.82 :   64b9:   mov    %rdx,%r10 // [virtio_net][64b9]
    0.00 :   64bc:   test   $0x1,%cl
    0.00 :   64bf:   jne    6eb3 <receive_buf+0xd73>
    0.00 :   64c5:   nopl   0x0(%rax,%rax,1)
    0.00 :   64ca:   mov    %r10,%rcx
    0.00 :   64cd:   mov    0x8(%rsp),%rdx
    0.00 :   64d2:   mov    %r8d,%r11d
    0.00 :   64d5:   sub    %rdi,%rcx
    0.00 :   64d8:   and    $0x3fffff,%r11d
    0.00 :   64df:   mov    %r13d,%edi
    0.00 :   64e2:   sar    $0x6,%rcx
    0.00 :   64e6:   sub    %eax,%edi
    0.00 :   64e8:   add    %rdi,0x8(%r12)
    0.00 :   64ed:   shl    $0xc,%rcx
    0.00 :   64f1:   add    %rsi,%rcx
    0.00 :   64f4:   mov    %r8,%rsi
    0.00 :   64f7:   sub    %rcx,%rdx
    0.00 :   64fa:   shr    $0x16,%rsi
    0.00 :   64fe:   mov    %edx,%r15d
    0.00 :   6501:   mov    %esi,%ecx
    0.00 :   6503:   cmp    %r13d,%r11d
    0.00 :   6506:   jb     6e9a <receive_buf+0xd5a>
    0.00 :   650c:   xor    %edi,%edi
    0.00 :   650e:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6512:   mov    $0x1,%eax
    0.00 :   6517:   jne    7020 <receive_buf+0xee0>
    0.00 :   651d:   push   %rcx
    0.00 :   651e:   mov    %r10,%rdx
    0.00 :   6521:   mov    %r11d,%r9d
    0.00 :   6524:   mov    %r13d,%r8d
    0.00 :   6527:   push   %rdi
    0.00 :   6528:   mov    %r15d,%ecx
    0.00 :   652b:   mov    %rbp,%rsi
    0.00 :   652e:   mov    %rbx,%rdi
    0.00 :   6531:   push   %rax
    0.00 :   6532:   mov    %r10,0x28(%rsp)
    0.00 :   6537:   call   2170 <page_to_skb>
    0.00 :   653c:   mov    0x28(%rsp),%r10
    0.00 :   6541:   add    $0x18,%rsp
    0.00 :   6545:   test   %rax,%rax
    0.00 :   6548:   mov    %rax,%r14
    0.00 :   654b:   je     6eab <receive_buf+0xd6b>
    0.00 :   6551:   movzwl 0x52(%rsp),%eax
    0.00 :   6556:   mov    %r14,%r15
    0.00 :   6559:   lea    0x54(%rsp),%rdx
    0.00 :   655e:   lea    -0x1(%rax),%r13d
    0.00 :   6562:   mov    %r13w,0x52(%rsp)
    0.00 :   6568:   test   %r13w,%r13w
    0.00 :   656c:   je     669d <receive_buf+0x55d>
    0.00 :   6572:   mov    %rdx,0x10(%rsp)
    0.00 :   6577:   mov    %rbx,0x20(%rsp)
    0.00 :   657c:   mov    %r13d,%ebx
    0.00 :   657f:   mov    0x0(%rbp),%rdi
    0.00 :   6583:   mov    0x10(%rsp),%rsi
    0.00 :   6588:   lea    0x58(%rsp),%rdx
    0.00 :   658d:   call   6592 <receive_buf+0x452>
    0.00 :   6592:   mov    %rax,%r13
    0.00 :   6595:   test   %rax,%rax
    0.00 :   6598:   je     6ace <receive_buf+0x98e>
    0.00 :   659e:   mov    0x54(%rsp),%eax
    0.00 :   65a2:   add    %rax,0x8(%r12)
    0.00 :   65a7:   mov    %rax,%rcx
    0.00 :   65aa:   mov    $0x80000000,%eax
    0.00 :   65af:   add    %r13,%rax
    0.00 :   65b2:   jb     7ab2 <receive_buf+0x1972>
    0.00 :   65b8:   mov    $0xffffffff80000000,%rsi
    0.00 :   65bf:   sub    0x0(%rip),%rsi        # 65c6 <receive_buf+0x486>
    0.00 :   65c6:   add    %rsi,%rax
    0.00 :   65c9:   mov    0x0(%rip),%rdx        # 65d0 <receive_buf+0x490>
    0.00 :   65d0:   shr    $0xc,%rax
    0.00 :   65d4:   shl    $0x6,%rax
    0.00 :   65d8:   add    %rdx,%rax
    0.00 :   65db:   mov    0x8(%rax),%rsi
   16.89 :   65df:   mov    %rax,%rbx // [virtio_net][65df]
    0.00 :   65e2:   test   $0x1,%sil
    0.00 :   65e6:   jne    6c02 <receive_buf+0xac2>
    0.00 :   65ec:   nopl   0x0(%rax,%rax,1)
    0.00 :   65f1:   mov    0x58(%rsp),%r8
    0.00 :   65f6:   mov    %r8d,%r9d
    0.00 :   65f9:   and    $0x3fffff,%r9d
    0.00 :   6600:   cmp    %ecx,%r9d
    0.00 :   6603:   jb     6b03 <receive_buf+0x9c3>
    0.00 :   6609:   mov    0xc0(%r15),%eax
    0.00 :   6610:   mov    0xc8(%r15),%rcx
    0.00 :   6617:   movzbl 0x2(%rcx,%rax,1),%esi
    0.00 :   661c:   cmp    $0x11,%esi
    0.00 :   661f:   je     6c3d <receive_buf+0xafd>
    0.00 :   6625:   mov    %rbx,%rax
    0.00 :   6628:   mov    %r13,%rcx
    0.00 :   662b:   sub    %rdx,%rax
    0.00 :   662e:   sar    $0x6,%rax
    0.00 :   6632:   shl    $0xc,%rax
    0.00 :   6636:   add    0x0(%rip),%rax        # 663d <receive_buf+0x4fd>
    0.00 :   663d:   sub    %rax,%rcx
    0.00 :   6640:   cmp    %r15,%r14
    0.00 :   6643:   je     6658 <receive_buf+0x518>
    0.00 :   6645:   mov    0x54(%rsp),%eax
    0.00 :   6649:   add    %r9d,0xd8(%r14)
    0.00 :   6650:   add    %eax,0x74(%r14)
    0.00 :   6654:   add    %eax,0x70(%r14)
    0.00 :   6658:   mov    0xc0(%r15),%eax
    0.00 :   665f:   add    0xc8(%r15),%rax
    0.00 :   6666:   testb  $0x1,(%rax)
    0.00 :   6669:   je     66ce <receive_buf+0x58e>
    0.00 :   666b:   cmpq   $0x0,0x28(%rax)
    0.00 :   6670:   je     66ce <receive_buf+0x58e>
    0.00 :   6672:   mov    0x54(%rsp),%r8d
    0.00 :   6677:   mov    %rbx,%rdx
    0.00 :   667a:   mov    %r15,%rdi
    0.00 :   667d:   call   6682 <receive_buf+0x542>
    0.00 :   6682:   movzwl 0x52(%rsp),%eax
    0.00 :   6687:   lea    -0x1(%rax),%ebx
    0.00 :   668a:   mov    %bx,0x52(%rsp)
    0.00 :   668f:   test   %bx,%bx
    0.00 :   6692:   jne    657f <receive_buf+0x43f>
    0.00 :   6698:   mov    0x20(%rsp),%rbx
    0.00 :   669d:   mov    0x1e8(%rbp),%rdx
    0.00 :   66a4:   mov    0x70(%r14),%eax
    0.00 :   66a8:   test   %rdx,%rdx
    0.00 :   66ab:   je     66be <receive_buf+0x57e>
    0.00 :   66ad:   mov    %rdx,%rcx
    0.00 :   66b0:   shl    $0x6,%rcx
    0.00 :   66b4:   sub    %rdx,%rcx
    0.00 :   66b7:   add    %rcx,%rax
    0.00 :   66ba:   shr    $0x6,%rax
    0.00 :   66be:   mov    %rax,0x1e8(%rbp)
    0.00 :   66c5:   lea    0x28(%r14),%rdx
    0.00 :   66c9:   jmp    61d5 <receive_buf+0x95>
    0.00 :   66ce:   test   %esi,%esi
    0.00 :   66d0:   je     6672 <receive_buf+0x532>
    0.00 :   66d2:   lea    -0x1(%rsi),%r13d
    0.00 :   66d6:   movslq %r13d,%rdx
    0.00 :   66d9:   shl    $0x4,%rdx
    0.00 :   66dd:   add    %rdx,%rax
    0.00 :   66e0:   cmp    0x30(%rax),%rbx
    0.00 :   66e4:   jne    6672 <receive_buf+0x532>
    0.00 :   66e6:   mov    0x38(%rax),%edx
    0.00 :   66e9:   add    0x3c(%rax),%edx
    0.00 :   66ec:   cmp    %ecx,%edx
    0.00 :   66ee:   jne    6672 <receive_buf+0x532>
    0.00 :   66f0:   mov    %rbx,%rdi
    0.00 :   66f3:   mov    %r9d,0x18(%rsp)
    0.00 :   66f8:   call   1ef0 <put_page>
    0.00 :   66fd:   mov    0x18(%rsp),%ecx
    0.00 :   6701:   mov    0x54(%rsp),%edx
    0.00 :   6705:   mov    %r13d,%esi
    0.00 :   6708:   mov    %r15,%rdi
    0.00 :   670b:   call   6710 <receive_buf+0x5d0>
    0.00 :   6710:   jmp    6682 <receive_buf+0x542>
    0.00 :   6715:   test   $0xfff,%eax
    0.00 :   671a:   jne    65f1 <receive_buf+0x4b1>
    0.00 :   6720:   mov    (%rax),%rsi
    0.00 :   6723:   test   $0x10000,%esi
    0.00 :   6729:   je     65f1 <receive_buf+0x4b1>
    0.00 :   672f:   mov    0x48(%rax),%rsi
    0.00 :   6733:   lea    -0x1(%rsi),%r10
    0.00 :   6737:   and    $0x1,%esi
    0.00 :   673a:   cmovne %r10,%rax
    0.00 :   673e:   mov    %rax,%rbx
    0.00 :   6741:   jmp    65f1 <receive_buf+0x4b1>
    0.00 :   6746:   movzbl 0x80(%r14),%r8d
    0.00 :   674e:   rol    $0x8,%ax
    0.00 :   6752:   mov    0x70(%r14),%ecx
    0.00 :   6756:   mov    $0x0,%rsi
    0.00 :   675d:   movzwl %ax,%edx
    0.00 :   6760:   mov    $0x0,%rdi
    0.00 :   6767:   and    $0x7,%r8d
    0.00 :   676b:   call   6770 <receive_buf+0x630>
    0.00 :   6770:   jmp    6440 <receive_buf+0x300>
    0.00 :   6775:   test   $0xfff,%edx
    0.00 :   677b:   jne    62d4 <receive_buf+0x194>
    0.00 :   6781:   mov    (%rdx),%rcx
    0.00 :   6784:   test   $0x10000,%ecx
    0.00 :   678a:   je     62d4 <receive_buf+0x194>
    0.00 :   6790:   mov    0x48(%rdx),%rcx
    0.00 :   6794:   lea    -0x1(%rcx),%rsi
    0.00 :   6798:   and    $0x1,%ecx
    0.00 :   679b:   cmovne %rsi,%rdx
    0.00 :   679f:   mov    %rdx,0x30(%rsp)
    0.00 :   67a4:   jmp    62d4 <receive_buf+0x194>
    0.00 :   67a9:   test   $0xfff,%edx
    0.00 :   67af:   jne    64ca <receive_buf+0x38a>
    0.00 :   67b5:   mov    (%rdx),%rcx
    0.00 :   67b8:   test   $0x10000,%ecx
    0.00 :   67be:   je     64ca <receive_buf+0x38a>
    0.00 :   67c4:   mov    0x48(%rdx),%rcx
    0.00 :   67c8:   lea    -0x1(%rcx),%r10
    0.00 :   67cc:   and    $0x1,%ecx
    0.00 :   67cf:   cmove  %rdx,%r10
    0.00 :   67d3:   jmp    64ca <receive_buf+0x38a>
    0.00 :   67d8:   mov    0x38(%rsp),%eax
    0.00 :   67dc:   mov    0x8(%rsp),%rsi
    0.00 :   67e1:   movzbl 0x4a(%rbx),%ecx
    0.00 :   67e5:   add    %rax,%rsi
    0.00 :   67e8:   cmp    $0x8,%ecx
    0.00 :   67eb:   jae    6d3d <receive_buf+0xbfd>
    0.00 :   67f1:   test   $0x4,%cl
    0.00 :   67f4:   jne    77fd <receive_buf+0x16bd>
    0.00 :   67fa:   test   %ecx,%ecx
    0.00 :   67fc:   je     635e <receive_buf+0x21e>
    0.00 :   6802:   movzbl (%rsi),%eax
    0.00 :   6805:   mov    %al,(%rdx)
    0.00 :   6807:   test   $0x2,%cl
    0.00 :   680a:   je     635e <receive_buf+0x21e>
    0.00 :   6810:   movzwl -0x2(%rcx,%rsi,1),%eax
    0.00 :   6815:   mov    %ax,-0x2(%rdx,%rcx,1)
    0.00 :   681a:   jmp    635e <receive_buf+0x21e>
    0.00 :   681f:   mov    0x70(%r14),%eax
    0.00 :   6823:   mov    %ebx,%edi
    0.00 :   6825:   movzwl 0x2c(%r14),%esi
    0.00 :   682a:   mov    0xc8(%r14),%rdx
    0.00 :   6831:   sub    %r15d,%edi
    0.00 :   6834:   test   $0x10000,%r12d
    0.00 :   683b:   mov    0xc0(%r14),%ecx
    0.00 :   6842:   cmovne %edi,%ebx
    0.00 :   6845:   movzwl %si,%edi
    0.00 :   6848:   sub    %ebx,%eax
    0.00 :   684a:   cmp    %eax,%edi
    0.00 :   684c:   jae    6416 <receive_buf+0x2d6>
    0.00 :   6852:   lea    (%rdx,%rcx,1),%rax
    0.00 :   6856:   or     $0x2,%r12d
    0.00 :   685a:   xor    %edx,%edx
    0.00 :   685c:   mov    %si,0x4(%rax)
    0.00 :   6860:   mov    %r12d,0x18(%rax)
    0.00 :   6864:   mov    %dx,0x6(%rax)
    0.00 :   6868:   jmp    6416 <receive_buf+0x2d6>
    0.00 :   686d:   mov    $0x6,%ecx
    0.00 :   6872:   mov    $0x14,%r15d
    0.00 :   6878:   mov    $0x10,%r12d
    0.00 :   687e:   mov    %r12d,%edi
    0.00 :   6881:   or     $0x4,%edi
    0.00 :   6884:   test   %al,%al
    0.00 :   6886:   cmovs  %edi,%r12d
    0.00 :   688a:   cmpw   $0x0,0x2c(%r14)
    0.00 :   6890:   je     6238 <receive_buf+0xf8>
    0.00 :   6896:   mov    0xd0(%r14),%rax
    0.00 :   689d:   sub    0xc8(%r14),%rax
    0.00 :   68a4:   and    $0x1,%edx
    0.00 :   68a7:   mov    %ax,0xba(%r14)
    0.00 :   68af:   jne    63a0 <receive_buf+0x260>
    0.00 :   68b5:   cmpw   $0x0,0xb8(%r14)
    0.00 :   68be:   je     6c95 <receive_buf+0xb55>
    0.00 :   68c4:   movq   $0x0,0x68(%rsp)
    0.00 :   68cd:   movl   $0x0,0x70(%rsp)
    0.00 :   68d5:   cmpw   $0x0,0xb4(%r14)
    0.00 :   68de:   je     6da3 <receive_buf+0xc63>
    0.00 :   68e4:   mov    %rbp,%rax
    0.00 :   68e7:   mov    %r12d,%ebx
    0.00 :   68ea:   mov    %r14,%rbp
    0.00 :   68ed:   mov    %ecx,0x8(%rsp)
    0.00 :   68f1:   lea    0x68(%rsp),%r13
    0.00 :   68f6:   and    $0x10000,%ebx
    0.00 :   68fc:   mov    %rax,%r14
    0.00 :   68ff:   jmp    6923 <receive_buf+0x7e3>
    0.00 :   6901:   test   %ebx,%ebx
    0.00 :   6903:   je     6c8d <receive_buf+0xb4d>
    0.00 :   6909:   cmpw   $0x8,0xb4(%rbp)
    0.00 :   6911:   jne    6c8d <receive_buf+0xb4d>
    0.00 :   6917:   mov    $0xffffdd86,%ecx
    0.00 :   691c:   mov    %cx,0xb4(%rbp)
    0.00 :   6923:   movq   $0x0,0x0(%r13)
    0.00 :   692b:   xor    %r9d,%r9d
    0.00 :   692e:   xor    %r8d,%r8d
    0.00 :   6931:   xor    %edi,%edi
    0.00 :   6933:   movl   $0x0,0x8(%r13)
    0.00 :   693b:   mov    %r13,%rcx
    0.00 :   693e:   mov    $0x0,%rdx
    0.00 :   6945:   mov    %rbp,%rsi
    0.00 :   6948:   push   $0x0
    0.00 :   694a:   push   $0x0
    0.00 :   694c:   push   $0x0
    0.00 :   694e:   call   6953 <receive_buf+0x813>
    0.00 :   6953:   add    $0x18,%rsp
    0.00 :   6957:   test   %al,%al
    0.00 :   6959:   je     6901 <receive_buf+0x7c1>
    0.00 :   695b:   mov    %r14,%rax
    0.00 :   695e:   mov    %rbp,%r14
    0.00 :   6961:   movzwl 0x68(%rsp),%ebx
    0.00 :   6966:   mov    0x8(%rsp),%ecx
    0.00 :   696a:   mov    %rax,%rbp
    0.00 :   696d:   mov    0x70(%r14),%eax
    0.00 :   6971:   mov    0x74(%r14),%edx
    0.00 :   6975:   add    %r15d,%ebx
    0.00 :   6978:   mov    %eax,%esi
    0.00 :   697a:   sub    %edx,%esi
    0.00 :   697c:   cmp    %ebx,%esi
    0.00 :   697e:   jb     7768 <receive_buf+0x1628>
    0.00 :   6984:   movzbl 0x72(%rsp),%eax
    0.00 :   6989:   cmp    %ecx,%eax
    0.00 :   698b:   jne    6238 <receive_buf+0xf8>
    0.00 :   6991:   mov    0xd0(%r14),%rax
    0.00 :   6998:   sub    0xc8(%r14),%rax
    0.00 :   699f:   add    0x68(%rsp),%ax
    0.00 :   69a4:   mov    %ax,0xb6(%r14)
    0.00 :   69ac:   movzbl 0x29(%r14),%eax
    0.00 :   69b1:   jmp    640e <receive_buf+0x2ce>
    0.00 :   69b6:   mov    $0x6,%ecx
    0.00 :   69bb:   mov    $0x14,%r15d
    0.00 :   69c1:   mov    $0x1,%r12d
    0.00 :   69c7:   jmp    687e <receive_buf+0x73e>
    0.00 :   69cc:   test   %rdx,%rdx
    0.00 :   69cf:   je     61ec <receive_buf+0xac>
    0.00 :   69d5:   movzwl 0x38(%r14),%eax
    0.00 :   69da:   cmp    $0x9,%ax
    0.00 :   69de:   ja     7267 <receive_buf+0x1127>
    0.00 :   69e4:   mov    $0x36c,%edx
    0.00 :   69e9:   bt     %rax,%rdx
    0.00 :   69ed:   setb   %cl
    0.00 :   69f0:   movzbl 0x81(%r14),%eax
    0.00 :   69f8:   mov    0x34(%r14),%edx
    0.00 :   69fc:   and    $0xfffffffc,%eax
    0.00 :   69ff:   mov    %edx,0x94(%r14)
    0.00 :   6a06:   or     %ecx,%eax
    0.00 :   6a08:   mov    %al,0x81(%r14)
    0.00 :   6a0f:   jmp    61ec <receive_buf+0xac>
    0.00 :   6a14:   mov    $0x11,%ecx
    0.00 :   6a19:   mov    $0x8,%r15d
    0.00 :   6a1f:   mov    $0x10000,%r12d
    0.00 :   6a25:   jmp    687e <receive_buf+0x73e>
    0.00 :   6a2a:   nopl   0x0(%rax,%rax,1)
    0.00 :   6a2f:   mov    (%rsp),%rax
    0.00 :   6a33:   addq   $0x1,0x180(%rax)
    0.00 :   6a3b:   cmpb   $0x0,0x38(%rbx)
    0.00 :   6a3f:   jne    6a7e <receive_buf+0x93e>
    0.00 :   6a41:   cmpb   $0x0,0x33(%rbx)
    0.00 :   6a45:   je     6a7e <receive_buf+0x93e>
    0.00 :   6a47:   mov    0x8(%rsp),%rax
    0.00 :   6a4c:   mov    0x28(%rax),%rax
    0.00 :   6a50:   test   %rax,%rax
    0.00 :   6a53:   je     748a <receive_buf+0x134a>
    0.00 :   6a59:   mov    %rax,%rdx
    0.00 :   6a5c:   mov    0x28(%rax),%rax
    0.00 :   6a60:   test   %rax,%rax
    0.00 :   6a63:   jne    6a59 <receive_buf+0x919>
    0.00 :   6a65:   mov    0x1e0(%rbp),%rax
    0.00 :   6a6c:   mov    %rax,0x28(%rdx)
    0.00 :   6a70:   mov    0x8(%rsp),%rax
    0.00 :   6a75:   mov    %rax,0x1e0(%rbp)
    0.00 :   6a7c:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   6a7e:   mov    0x8(%rsp),%rbx
    0.00 :   6a83:   mov    $0x80000000,%eax
    0.00 :   6a88:   add    %rax,%rbx
    0.00 :   6a8b:   mov    %rbx,%rax
    0.00 :   6a8e:   jb     7ba7 <receive_buf+0x1a67>
    0.00 :   6a94:   mov    $0xffffffff80000000,%rdx
    0.00 :   6a9b:   sub    0x0(%rip),%rdx        # 6aa2 <receive_buf+0x962>
    0.00 :   6aa2:   add    %rdx,%rax
    0.00 :   6aa5:   shr    $0xc,%rax
    0.00 :   6aa9:   shl    $0x6,%rax
    0.00 :   6aad:   add    0x0(%rip),%rax        # 6ab4 <receive_buf+0x974>
    0.00 :   6ab4:   mov    0x8(%rax),%rdx
    0.00 :   6ab8:   mov    %rax,%rdi
    0.00 :   6abb:   test   $0x1,%dl
    0.00 :   6abe:   jne    6d9a <receive_buf+0xc5a>
    0.00 :   6ac4:   nopl   0x0(%rax,%rax,1)
    0.00 :   6ac9:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6ace:   nopl   0x0(%rax,%rax,1)
    0.00 :   6ad3:   mov    (%rsp),%rax
    0.00 :   6ad7:   addq   $0x1,0x180(%rax)
    0.00 :   6adf:   addq   $0x1,0x10(%r12)
    0.00 :   6ae5:   mov    %r14,%rdi
    0.00 :   6ae8:   call   6aed <receive_buf+0x9ad>
    0.00 :   6aed:   add    $0xa0,%rsp
    0.00 :   6af4:   pop    %rbx
    0.00 :   6af5:   pop    %rbp
    0.00 :   6af6:   pop    %r12
    0.00 :   6af8:   pop    %r13
    0.00 :   6afa:   pop    %r14
    0.00 :   6afc:   pop    %r15
    0.00 :   6afe:   jmp    6b03 <receive_buf+0x9c3>
    0.00 :   6b03:   mov    %rbx,%r10
    0.00 :   6b06:   nopl   0x0(%rax,%rax,1)
    0.00 :   6b0b:   mov    (%rsp),%rax
    0.00 :   6b0f:   addq   $0x1,0x180(%rax)
    0.00 :   6b17:   mov    %r10,%rdi
    0.00 :   6b1a:   call   1ef0 <put_page>
    0.00 :   6b1f:   movzwl 0x52(%rsp),%eax
    0.00 :   6b24:   lea    -0x1(%rax),%r13d
    0.00 :   6b28:   mov    %r13w,0x52(%rsp)
    0.00 :   6b2e:   cmp    $0x1,%ax
    0.00 :   6b32:   jbe    6adf <receive_buf+0x99f>
    0.00 :   6b34:   lea    0x54(%rsp),%rdx
    0.00 :   6b39:   mov    $0x80000000,%ebx
    0.00 :   6b3e:   mov    %rdx,%r15
    0.00 :   6b41:   jmp    6ba1 <receive_buf+0xa61>
    0.00 :   6b43:   mov    0x54(%rsp),%edx
    0.00 :   6b47:   add    %rdx,0x8(%r12)
    0.00 :   6b4c:   add    %rbx,%rax
    0.00 :   6b4f:   jb     7aa6 <receive_buf+0x1966>
    0.00 :   6b55:   mov    $0xffffffff80000000,%rdx
    0.00 :   6b5c:   sub    0x0(%rip),%rdx        # 6b63 <receive_buf+0xa23>
    0.00 :   6b63:   add    %rdx,%rax
    0.00 :   6b66:   shr    $0xc,%rax
    0.00 :   6b6a:   shl    $0x6,%rax
    0.00 :   6b6e:   add    0x0(%rip),%rax        # 6b75 <receive_buf+0xa35>
    0.00 :   6b75:   mov    0x8(%rax),%rdx
    0.00 :   6b79:   mov    %rax,%rdi
    0.00 :   6b7c:   test   $0x1,%dl
    0.00 :   6b7f:   jne    6bfc <receive_buf+0xabc>
    0.00 :   6b81:   xchg   %ax,%ax
    0.00 :   6b83:   call   1ef0 <put_page>
    0.00 :   6b88:   movzwl 0x52(%rsp),%eax
    0.00 :   6b8d:   lea    -0x1(%rax),%r13d
    0.00 :   6b91:   mov    %r13w,0x52(%rsp)
    0.00 :   6b97:   cmp    $0x1,%ax
    0.00 :   6b9b:   jbe    6adf <receive_buf+0x99f>
    0.00 :   6ba1:   mov    0x0(%rbp),%rdi
    0.00 :   6ba5:   mov    %r15,%rsi
    0.00 :   6ba8:   call   6bad <receive_buf+0xa6d>
    0.00 :   6bad:   test   %rax,%rax
    0.00 :   6bb0:   jne    6b43 <receive_buf+0xa03>
    0.00 :   6bb2:   xchg   %ax,%ax
    0.00 :   6bb4:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6bb9:   mov    (%rsp),%rdx
    0.00 :   6bbd:   movzwl %r13w,%ecx
    0.00 :   6bc1:   mov    $0x0,%rsi
    0.00 :   6bc8:   mov    $0x0,%rdi
    0.00 :   6bcf:   call   6bd4 <receive_buf+0xa94>
    0.00 :   6bd4:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6bd9:   test   $0xfff,%eax
    0.00 :   6bde:   jne    6b83 <receive_buf+0xa43>
    0.00 :   6be0:   mov    (%rax),%rdx
    0.00 :   6be3:   test   $0x10000,%edx
    0.00 :   6be9:   je     6b83 <receive_buf+0xa43>
    0.00 :   6beb:   mov    0x48(%rax),%rdx
    0.00 :   6bef:   lea    -0x1(%rdx),%rdi
    0.00 :   6bf3:   and    $0x1,%edx
    0.00 :   6bf6:   cmove  %rax,%rdi
    0.00 :   6bfa:   jmp    6b83 <receive_buf+0xa43>
    0.00 :   6bfc:   lea    -0x1(%rdx),%rdi
    0.00 :   6c00:   jmp    6b83 <receive_buf+0xa43>
    5.99 :   6c02:   lea    -0x1(%rsi),%rbx // [virtio_net][6c02]
    0.00 :   6c06:   jmp    65f1 <receive_buf+0x4b1>
    0.00 :   6c0b:   nopl   0x0(%rax,%rax,1)
    0.00 :   6c10:   mov    (%rsp),%rax
    0.00 :   6c14:   addq   $0x1,0x180(%rax)
    0.00 :   6c1c:   addq   $0x1,0x10(%r12)
    0.00 :   6c22:   mov    0x30(%rsp),%rdi
    0.00 :   6c27:   add    $0xa0,%rsp
    0.00 :   6c2e:   pop    %rbx
    0.00 :   6c2f:   pop    %rbp
    0.00 :   6c30:   pop    %r12
    0.00 :   6c32:   pop    %r13
    0.00 :   6c34:   pop    %r14
    0.00 :   6c36:   pop    %r15
    0.00 :   6c38:   jmp    1ef0 <put_page>
    0.00 :   6c3d:   xor    %edx,%edx
    0.00 :   6c3f:   xor    %edi,%edi
    0.00 :   6c41:   mov    $0xffffffff,%ecx
    0.00 :   6c46:   mov    $0xa20,%esi
    0.00 :   6c4b:   mov    %r9d,0x18(%rsp)
    0.00 :   6c50:   call   6c55 <receive_buf+0xb15>
    0.00 :   6c55:   test   %rax,%rax
    0.00 :   6c58:   je     74c7 <receive_buf+0x1387>
    0.00 :   6c5e:   cmp    %r15,%r14
    0.00 :   6c61:   mov    0x18(%rsp),%r9d
    0.00 :   6c66:   je     71cd <receive_buf+0x108d>
    0.00 :   6c6c:   mov    %rax,(%r15)
    0.00 :   6c6f:   mov    0xd8(%rax),%edx
    0.00 :   6c75:   mov    %rax,%r15
    0.00 :   6c78:   xor    %esi,%esi
    0.00 :   6c7a:   add    %edx,0xd8(%r14)
    0.00 :   6c81:   mov    0x0(%rip),%rdx        # 6c88 <receive_buf+0xb48>
    0.00 :   6c88:   jmp    6625 <receive_buf+0x4e5>
    0.00 :   6c8d:   mov    %rbp,%r14
    0.00 :   6c90:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6c95:   mov    0x70(%r14),%eax
    0.00 :   6c99:   mov    0x74(%r14),%edx
    0.00 :   6c9d:   mov    %r15d,%ebx
    0.00 :   6ca0:   mov    %eax,%ecx
    0.00 :   6ca2:   sub    %edx,%ecx
    0.00 :   6ca4:   cmp    %r15d,%ecx
    0.00 :   6ca7:   jae    6823 <receive_buf+0x6e3>
    0.00 :   6cad:   cmp    %r15d,%eax
    0.00 :   6cb0:   jb     6238 <receive_buf+0xf8>
    0.00 :   6cb6:   sub    %eax,%edx
    0.00 :   6cb8:   mov    %r14,%rdi
    0.00 :   6cbb:   lea    (%rdx,%r15,1),%esi
    0.00 :   6cbf:   call   6cc4 <receive_buf+0xb84>
    0.00 :   6cc4:   test   %rax,%rax
    0.00 :   6cc7:   jne    6409 <receive_buf+0x2c9>
    0.00 :   6ccd:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6cd2:   mov    (%rsp),%rdx
    0.00 :   6cd6:   mov    $0x0,%rsi
    0.00 :   6cdd:   mov    $0x0,%rdi
    0.00 :   6ce4:   call   6ce9 <receive_buf+0xba9>
    0.00 :   6ce9:   jmp    6a2f <receive_buf+0x8ef>
    0.00 :   6cee:   mov    0x8(%rsp),%rax
    0.00 :   6cf3:   mov    (%rsp),%rdx
    0.00 :   6cf7:   movzwl %bx,%ecx
    0.00 :   6cfa:   mov    $0x0,%rsi
    0.00 :   6d01:   mov    $0x0,%rdi
    0.00 :   6d08:   movzwl 0xa(%rax),%r8d
    0.00 :   6d0d:   call   6d12 <receive_buf+0xbd2>
    0.00 :   6d12:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6d17:   mov    (%rsp),%rdx
    0.00 :   6d1b:   mov    $0x0,%rsi
    0.00 :   6d22:   mov    %rbx,0x8(%rsp)
    0.00 :   6d27:   mov    $0x0,%rdi
    0.00 :   6d2e:   call   6d33 <receive_buf+0xbf3>
    0.00 :   6d33:   mov    0x8(%rsp),%r10
    0.00 :   6d38:   jmp    6b0b <receive_buf+0x9cb>
    0.00 :   6d3d:   mov    (%rsi),%rax
    0.00 :   6d40:   lea    0x30(%r14),%rdi
    0.00 :   6d44:   and    $0xfffffffffffffff8,%rdi
    0.00 :   6d48:   mov    %rax,(%rdx)
    0.00 :   6d4b:   mov    -0x8(%rcx,%rsi,1),%rax
    0.00 :   6d50:   mov    %rax,-0x8(%rdx,%rcx,1)
    0.00 :   6d55:   mov    %rdx,%rax
    0.00 :   6d58:   sub    %rdi,%rax
    0.00 :   6d5b:   add    %eax,%ecx
    0.00 :   6d5d:   sub    %rax,%rsi
    0.00 :   6d60:   shr    $0x3,%ecx
    0.00 :   6d63:   rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   6d66:   jmp    635e <receive_buf+0x21e>
    0.00 :   6d6b:   test   $0xfff,%eax
    0.00 :   6d70:   jne    6c27 <receive_buf+0xae7>
    0.00 :   6d76:   mov    (%rax),%rdx
    0.00 :   6d79:   test   $0x10000,%edx
    0.00 :   6d7f:   je     6c27 <receive_buf+0xae7>
    0.00 :   6d85:   mov    0x48(%rax),%rax
    0.00 :   6d89:   test   $0x1,%al
    0.00 :   6d8b:   je     6c27 <receive_buf+0xae7>
    0.00 :   6d91:   lea    -0x1(%rax),%rdi
    0.00 :   6d95:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6d9a:   lea    -0x1(%rdx),%rdi
    0.00 :   6d9e:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6da3:   mov    0x10(%r14),%rax
    0.00 :   6da7:   mov    0x230(%rax),%rax
    0.00 :   6dae:   test   %rax,%rax
    0.00 :   6db1:   je     7461 <receive_buf+0x1321>
    0.00 :   6db7:   mov    0x28(%rax),%rax
    0.00 :   6dbb:   test   %rax,%rax
    0.00 :   6dbe:   je     7461 <receive_buf+0x1321>
    0.00 :   6dc4:   mov    %ecx,0x8(%rsp)
    0.00 :   6dc8:   mov    %r14,%rdi
    0.00 :   6dcb:   call   6dd0 <receive_buf+0xc90>
    0.00 :   6dd0:   mov    0x8(%rsp),%ecx
    0.00 :   6dd4:   test   %ax,%ax
    0.00 :   6dd7:   je     7449 <receive_buf+0x1309>
    0.00 :   6ddd:   movzbl 0x29(%r14),%edx
    0.00 :   6de2:   and    $0x7f,%dl
    0.00 :   6de5:   cmp    $0x3,%edx
    0.00 :   6de8:   je     7390 <receive_buf+0x1250>
    0.00 :   6dee:   cmp    $0x4,%edx
    0.00 :   6df1:   je     739a <receive_buf+0x125a>
    0.00 :   6df7:   cmp    $0x1,%edx
    0.00 :   6dfa:   jne    6238 <receive_buf+0xf8>
    0.00 :   6e00:   cmp    $0x8,%ax
    0.00 :   6e04:   jne    6238 <receive_buf+0xf8>
    0.00 :   6e0a:   mov    %ax,0xb4(%r14)
    0.00 :   6e12:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   6e17:   mov    %edx,0x8(%rsp)
    8.57 :   6e1b:   cmp    %eax,%ecx // [virtio_net][6e1b]
    0.00 :   6e1d:   jb     6238 <receive_buf+0xf8>
    0.00 :   6e23:   sub    %ecx,%esi
    0.00 :   6e25:   mov    %r14,%rdi
    0.00 :   6e28:   add    %eax,%esi
    0.00 :   6e2a:   call   6e2f <receive_buf+0xcef>
    0.00 :   6e2f:   mov    0x8(%rsp),%edx
    0.00 :   6e33:   test   %rax,%rax
    0.00 :   6e36:   jne    63ca <receive_buf+0x28a>
    0.00 :   6e3c:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6e41:   cmp    %ebx,%eax
    0.00 :   6e43:   jb     6238 <receive_buf+0xf8>
    0.00 :   6e49:   sub    %eax,%esi
    0.00 :   6e4b:   mov    %r14,%rdi
    0.00 :   6e4e:   add    %ebx,%esi
    0.00 :   6e50:   call   6e55 <receive_buf+0xd15>
    0.00 :   6e55:   test   %rax,%rax
    0.00 :   6e58:   jne    6409 <receive_buf+0x2c9>
    0.00 :   6e5e:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6e63:   lea    -0x1(%rcx),%rdi
    0.00 :   6e67:   mov    %rdi,0x30(%rsp)
    0.00 :   6e6c:   jmp    62d4 <receive_buf+0x194>
    0.00 :   6e71:   mov    0x8(%rsp),%rax
    0.00 :   6e76:   addq   $0x1,0x10(%r12)
    0.00 :   6e7c:   mov    0x28(%rax),%rax
    0.00 :   6e80:   test   %rax,%rax
    0.00 :   6e83:   je     748a <receive_buf+0x134a>
    0.00 :   6e89:   mov    %rax,%rdx
    0.00 :   6e8c:   mov    0x28(%rax),%rax
    0.00 :   6e90:   test   %rax,%rax
    0.00 :   6e93:   jne    6e89 <receive_buf+0xd49>
    0.00 :   6e95:   jmp    6a65 <receive_buf+0x925>
    0.00 :   6e9a:   nopl   0x0(%rax,%rax,1)
    0.00 :   6e9f:   mov    (%rsp),%rax
    0.00 :   6ea3:   addq   $0x1,0x180(%rax)
    0.00 :   6eab:   xor    %r14d,%r14d
    0.00 :   6eae:   jmp    6b17 <receive_buf+0x9d7>
    0.00 :   6eb3:   lea    -0x1(%rcx),%r10
    0.00 :   6eb7:   jmp    64ca <receive_buf+0x38a>
    0.00 :   6ebc:   mov    %edx,0x28(%rsp)
    0.00 :   6ec0:   mov    %r11d,0x20(%rsp)
    0.00 :   6ec5:   mov    %r8,0x48(%rsp)
    0.00 :   6eca:   mov    %r10,0x40(%rsp)
    0.00 :   6ecf:   call   6ed4 <receive_buf+0xd94>
    0.00 :   6ed4:   mov    0x198(%rbp),%rax
    0.00 :   6edb:   mov    0x20(%rsp),%r11d
    0.00 :   6ee0:   mov    0x28(%rsp),%edx
    0.00 :   6ee4:   test   %rax,%rax
    0.00 :   6ee7:   mov    %rax,0x18(%rsp)
    0.00 :   6eec:   je     74ab <receive_buf+0x136b>
    0.00 :   6ef2:   lea    0x68(%rsp),%r13
    0.00 :   6ef7:   xor    %eax,%eax
    0.00 :   6ef9:   mov    $0x7,%ecx
    0.00 :   6efe:   mov    0x38(%rsp),%esi
    0.00 :   6f02:   movq   $0x0,0x60(%rsp)
    0.00 :   6f0b:   mov    %r13,%rdi
    0.00 :   6f0e:   rep stos %rax,%es:(%rdi)
    0.00 :   6f11:   mov    0x8(%rsp),%rax
    0.00 :   6f16:   cmpb   $0x0,0x1(%rax,%rsi,1)
    0.00 :   6f1b:   jne    7010 <receive_buf+0xed0>
    0.00 :   6f21:   mov    0x48(%rsp),%r8
    0.00 :   6f26:   movzbl 0x4a(%rbx),%eax
    0.00 :   6f2a:   mov    0x40(%rsp),%r10
    0.00 :   6f2f:   cmp    $0xff,%r8d
    0.00 :   6f36:   ja     6f42 <receive_buf+0xe02>
    0.00 :   6f38:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6f3c:   jne    78db <receive_buf+0x179b>
    0.00 :   6f42:   movslq %r8d,%r8
    0.00 :   6f45:   mov    0x10(%rsp),%eax
    0.00 :   6f49:   mov    0x8(%rsp),%rdi
    0.00 :   6f4e:   movl   $0x0,0x9c(%rsp)
    0.00 :   6f59:   mov    %eax,0x98(%rsp)
    0.00 :   6f60:   lea    0x4c0(%rbp),%rax
    0.00 :   6f67:   mov    %rax,0x88(%rsp)
    0.00 :   6f6f:   movzbl 0x4a(%rbx),%eax
    0.00 :   6f73:   lea    0x40(%rdi,%rax,1),%rax
    0.00 :   6f78:   add    %rax,%r8
    0.00 :   6f7b:   mov    %rax,0x80(%rsp)
    0.00 :   6f83:   add    %r8,%r10
    0.00 :   6f86:   mov    %r8,0x68(%rsp)
    0.00 :   6f8b:   mov    %r10,0x70(%rsp)
    0.00 :   6f90:   mov    %r8,0x78(%rsp)
    0.00 :   6f95:   nopl   0x0(%rax,%rax,1)
    0.00 :   6f9a:   mov    0x18(%rsp),%rax
    0.00 :   6f9f:   mov    %r13,%rdi
    0.00 :   6fa2:   mov    %r8,0x28(%rsp)
    0.00 :   6fa7:   mov    %r11d,0x20(%rsp)
    0.00 :   6fac:   mov    0x30(%rax),%rdx
    0.00 :   6fb0:   lea    0x48(%rax),%rsi
    0.00 :   6fb4:   call   6fb9 <receive_buf+0xe79>
    0.00 :   6fb9:   mov    0x28(%rsp),%r8
    0.00 :   6fbe:   mov    0x20(%rsp),%r11d
    0.00 :   6fc3:   mov    %eax,%ecx
    0.00 :   6fc5:   nopl   0x0(%rax,%rax,1)
    0.00 :   6fca:   addq   $0x1,0x18(%r12)
    0.00 :   6fd0:   cmp    $0x2,%ecx
    0.00 :   6fd3:   je     7494 <receive_buf+0x1354>
    0.00 :   6fd9:   jbe    7203 <receive_buf+0x10c3>
    0.00 :   6fdf:   cmp    $0x3,%ecx
    0.00 :   6fe2:   je     750d <receive_buf+0x13cd>
    0.00 :   6fe8:   cmp    $0x4,%ecx
    0.00 :   6feb:   jne    77e2 <receive_buf+0x16a2>
    0.00 :   6ff1:   addq   $0x1,0x28(%r12)
    0.00 :   6ff7:   mov    0x18(%rsp),%rdx
    0.00 :   6ffc:   mov    %r13,%rsi
    0.00 :   6fff:   mov    (%rsp),%rdi
    0.00 :   7003:   call   7008 <receive_buf+0xec8>
    0.00 :   7008:   test   %eax,%eax
    0.00 :   700a:   je     79bf <receive_buf+0x187f>
    0.00 :   7010:   call   7015 <receive_buf+0xed5>
    0.00 :   7015:   addq   $0x1,0x30(%r12)
    0.00 :   701b:   jmp    6c1c <receive_buf+0xadc>
    0.00 :   7020:   mov    %r10,0x30(%rsp)
    0.00 :   7025:   mov    %edi,0x28(%rsp)
    0.00 :   7029:   mov    %r11d,0x18(%rsp)
    0.00 :   702e:   mov    %rsi,0x40(%rsp)
    0.00 :   7033:   mov    %rdx,0x48(%rsp)
    0.00 :   7038:   mov    %esi,0x20(%rsp)
    0.00 :   703c:   mov    %r9d,0x38(%rsp)
    0.00 :   7041:   call   7046 <receive_buf+0xf06>
    0.00 :   7046:   mov    0x198(%rbp),%rax
    0.00 :   704d:   mov    0x18(%rsp),%r11d
    0.00 :   7052:   mov    0x20(%rsp),%ecx
    0.00 :   7056:   mov    0x28(%rsp),%edi
    0.00 :   705a:   test   %rax,%rax
    0.00 :   705d:   mov    %rax,0x10(%rsp)
    0.00 :   7062:   mov    0x30(%rsp),%r10
    0.00 :   7067:   je     74cf <receive_buf+0x138f>
    0.00 :   706d:   lea    0x68(%rsp),%r13
    0.00 :   7072:   xor    %eax,%eax
    0.00 :   7074:   mov    $0x7,%ecx
    0.00 :   7079:   movq   $0x0,0x60(%rsp)
    0.00 :   7082:   mov    %r13,%rdi
    0.00 :   7085:   rep stos %rax,%es:(%rdi)
    0.00 :   7088:   mov    0x8(%rsp),%rax
    0.00 :   708d:   cmpb   $0x0,0x1(%rax)
    0.00 :   7091:   jne    71b3 <receive_buf+0x1073>
    0.00 :   7097:   mov    0x40(%rsp),%rsi
    0.00 :   709c:   mov    0x38(%rsp),%r9d
    0.00 :   70a1:   mov    $0x1000,%ecx
    0.00 :   70a6:   test   %esi,%esi
    0.00 :   70a8:   cmove  %r11d,%ecx
    0.00 :   70ac:   cmp    $0x1,%r9w
    0.00 :   70b1:   ja     7793 <receive_buf+0x1653>
    0.00 :   70b7:   cmpb   $0x0,0x32(%rbx)
    0.00 :   70bb:   mov    0x48(%rsp),%rdx
    0.00 :   70c0:   je     70ce <receive_buf+0xf8e>
    0.00 :   70c2:   cmp    $0xff,%esi
    0.00 :   70c8:   jbe    7793 <receive_buf+0x1653>
    0.00 :   70ce:   mov    %r10,0x18(%rsp)
    0.00 :   70d3:   movslq %edx,%rdx
    0.00 :   70d6:   movzbl 0x4a(%rbx),%edi
    0.00 :   70da:   mov    0x18(%rsp),%rax
    0.00 :   70df:   movl   $0x0,0x9c(%rsp)
    0.00 :   70ea:   sub    0x0(%rip),%rax        # 70f1 <receive_buf+0xfb1>
    0.00 :   70f1:   sar    $0x6,%rax
    0.00 :   70f5:   sub    %edi,%ecx
    0.00 :   70f7:   shl    $0xc,%rax
    0.00 :   70fb:   add    0x0(%rip),%rax        # 7102 <receive_buf+0xfc2>
    0.00 :   7102:   mov    %ecx,0x98(%rsp)
    0.00 :   7109:   lea    0x4c0(%rbp),%rcx
    0.00 :   7110:   mov    %rax,%rsi
    0.00 :   7113:   mov    %edi,%eax
    0.00 :   7115:   mov    %rcx,0x88(%rsp)
    0.00 :   711d:   mov    0x54(%rsp),%ecx
    0.00 :   7121:   or     $0xffffffffffffff00,%rax
    0.00 :   7127:   add    %rdx,%rax
    0.00 :   712a:   sub    %edi,%ecx
    0.00 :   712c:   add    %rsi,%rax
    0.00 :   712f:   lea    0x100(%rax),%rdx
    0.00 :   7136:   mov    %rax,0x80(%rsp)
    0.00 :   713e:   movslq %ecx,%rax
    0.00 :   7141:   add    %rdx,%rax
    0.00 :   7144:   mov    %rdx,0x68(%rsp)
    0.00 :   7149:   mov    %rax,0x70(%rsp)
    0.00 :   714e:   mov    %rdx,0x78(%rsp)
    0.00 :   7153:   nopl   0x0(%rax,%rax,1)
    0.00 :   7158:   mov    0x10(%rsp),%rax
    0.00 :   715d:   mov    %r13,%rdi
    0.00 :   7160:   mov    %r10,0x28(%rsp)
    0.00 :   7165:   mov    %r11d,0x20(%rsp)
    0.00 :   716a:   mov    0x30(%rax),%rdx
    0.00 :   716e:   lea    0x48(%rax),%rsi
    0.00 :   7172:   call   7177 <receive_buf+0x1037>
    0.00 :   7177:   mov    0x28(%rsp),%r10
    0.00 :   717c:   mov    0x20(%rsp),%r11d
    0.00 :   7181:   mov    %eax,%r15d
    0.00 :   7184:   nopl   0x0(%rax,%rax,1)
    0.00 :   7189:   addq   $0x1,0x18(%r12)
    0.00 :   718f:   cmp    $0x2,%r15d
    0.00 :   7193:   je     780e <receive_buf+0x16ce>
    0.00 :   7199:   ja     726e <receive_buf+0x112e>
    0.00 :   719f:   test   %r15d,%r15d
    0.00 :   71a2:   je     7701 <receive_buf+0x15c1>
    0.00 :   71a8:   cmp    %r10,0x18(%rsp)
    0.00 :   71ad:   jne    79cd <receive_buf+0x188d>
    0.00 :   71b3:   mov    %r10,0x8(%rsp)
    0.00 :   71b8:   call   71bd <receive_buf+0x107d>
    0.00 :   71bd:   addq   $0x1,0x30(%r12)
    0.00 :   71c3:   mov    0x8(%rsp),%r10
    0.00 :   71c8:   jmp    6eab <receive_buf+0xd6b>
    0.00 :   71cd:   mov    0xc0(%r14),%edx
    0.00 :   71d4:   mov    0xc8(%r14),%rcx
    0.00 :   71db:   mov    %rax,0x8(%rcx,%rdx,1)
    0.00 :   71e0:   jmp    6c6f <receive_buf+0xb2f>
    0.00 :   71e5:   cmp    $0x3,%ecx
    0.00 :   71e8:   je     7a4b <receive_buf+0x190b>
    0.00 :   71ee:   addq   $0x1,0x18(%r12)
    0.00 :   71f4:   cmp    $0x2,%ecx
    0.00 :   71f7:   je     7494 <receive_buf+0x1354>
    0.00 :   71fd:   ja     6fe8 <receive_buf+0xea8>
    0.00 :   7203:   test   %ecx,%ecx
    0.00 :   7205:   jne    7010 <receive_buf+0xed0>
    0.00 :   720b:   xor    %ecx,%ecx
    0.00 :   720d:   xchg   %ax,%ax
    0.00 :   720f:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7214:   mov    0x10(%rbx),%rsi
    0.00 :   7218:   mov    %gs:0x0(%rip),%eax        # 721f <receive_buf+0x10df>
    0.00 :   721f:   mov    %eax,%eax
    0.00 :   7221:   bt     %rax,0x0(%rip)        # 7229 <receive_buf+0x10e9>
    0.00 :   7229:   jae    7010 <receive_buf+0xed0>
    0.00 :   722f:   incl   %gs:0x0(%rip)        # 7236 <receive_buf+0x10f6>
    0.00 :   7236:   mov    0x0(%rip),%rax        # 723d <receive_buf+0x10fd>
    0.00 :   723d:   test   %rax,%rax
    0.00 :   7240:   je     7250 <receive_buf+0x1110>
    0.00 :   7242:   mov    0x8(%rax),%rdi
    0.00 :   7246:   mov    0x18(%rsp),%rdx
    0.00 :   724b:   call   7250 <receive_buf+0x1110>
    0.00 :   7250:   decl   %gs:0x0(%rip)        # 7257 <receive_buf+0x1117>
    0.00 :   7257:   jne    7010 <receive_buf+0xed0>
    0.00 :   725d:   call   7262 <receive_buf+0x1122>
    0.00 :   7262:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7267:   xor    %ecx,%ecx
    0.00 :   7269:   jmp    69f0 <receive_buf+0x8b0>
    0.00 :   726e:   cmp    $0x3,%r15d
    0.00 :   7272:   je     75eb <receive_buf+0x14ab>
    0.00 :   7278:   cmp    $0x4,%r15d
    0.00 :   727c:   jne    76e6 <receive_buf+0x15a6>
    0.00 :   7282:   addq   $0x1,0x28(%r12)
    0.00 :   7288:   mov    0x10(%rsp),%rdx
    0.00 :   728d:   mov    %r13,%rsi
    0.00 :   7290:   mov    (%rsp),%rdi
    0.00 :   7294:   mov    %r10,0x8(%rsp)
    0.00 :   7299:   call   729e <receive_buf+0x115e>
    0.00 :   729e:   mov    0x8(%rsp),%r10
    0.00 :   72a3:   test   %eax,%eax
    0.00 :   72a5:   je     79ab <receive_buf+0x186b>
    0.00 :   72ab:   cmp    %r10,0x18(%rsp)
    0.00 :   72b0:   je     71b3 <receive_buf+0x1073>
    0.00 :   72b6:   mov    0x18(%rsp),%rdi
    0.00 :   72bb:   call   1ef0 <put_page>
    0.00 :   72c0:   mov    0x8(%rsp),%r10
    0.00 :   72c5:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   72ca:   mov    %edx,%ecx
    0.00 :   72cc:   mov    (%rsp),%rdx
    0.00 :   72d0:   mov    $0x5ee,%r8d
    0.00 :   72d6:   mov    $0x0,%rsi
    0.00 :   72dd:   mov    $0x0,%rdi
    0.00 :   72e4:   call   72e9 <receive_buf+0x11a9>
    0.00 :   72e9:   jmp    6c10 <receive_buf+0xad0>
    0.00 :   72ee:   mov    (%rsp),%rdx
    0.00 :   72f2:   mov    %r13d,%ecx
    0.00 :   72f5:   mov    $0x0,%rsi
    0.00 :   72fc:   mov    $0x0,%rdi
    0.00 :   7303:   mov    %r10,0x8(%rsp)
    0.00 :   7308:   call   730d <receive_buf+0x11cd>
    0.00 :   730d:   mov    0x8(%rsp),%r10
    0.00 :   7312:   jmp    6e9f <receive_buf+0xd5f>
    0.00 :   7317:   mov    %r8,0x48(%rsp)
    0.00 :   731c:   mov    %r11d,0x40(%rsp)
    0.00 :   7321:   call   7326 <receive_buf+0x11e6>
    0.00 :   7326:   mov    %r13,%rdi
    0.00 :   7329:   mov    %rax,%r15
    0.00 :   732c:   mov    0x18(%rsp),%rax
    0.00 :   7331:   mov    0x30(%rax),%rdx
    0.00 :   7335:   lea    0x48(%rax),%rsi
    0.00 :   7339:   call   733e <receive_buf+0x11fe>
    0.00 :   733e:   mov    %eax,0x28(%rsp)
    0.00 :   7342:   mov    0x18(%rsp),%rax
    0.00 :   7347:   mov    0x20(%rax),%rdx
    0.00 :   734b:   mov    %rdx,0x20(%rsp)
    0.00 :   7350:   call   7355 <receive_buf+0x1215>
    0.00 :   7355:   mov    0x20(%rsp),%rdx
    0.00 :   735a:   mov    %eax,%eax
    0.00 :   735c:   add    0x0(,%rax,8),%rdx
    0.00 :   7364:   incq   (%rdx)
    0.00 :   7367:   mov    %rdx,0x20(%rsp)
    0.00 :   736c:   call   7371 <receive_buf+0x1231>
    0.00 :   7371:   mov    0x20(%rsp),%rdx
    0.00 :   7376:   sub    %r15,%rax
    0.00 :   7379:   add    %rax,0x8(%rdx)
    0.00 :   737d:   mov    0x28(%rsp),%ecx
    0.00 :   7381:   mov    0x40(%rsp),%r11d
    0.00 :   7386:   mov    0x48(%rsp),%r8
    0.00 :   738b:   jmp    6fc5 <receive_buf+0xe85>
    0.00 :   7390:   cmp    $0x8,%ax
    0.00 :   7394:   je     6e0a <receive_buf+0xcca>
    0.00 :   739a:   cmp    $0xdd86,%ax
    0.00 :   739e:   je     6e0a <receive_buf+0xcca>
    0.00 :   73a4:   jmp    6238 <receive_buf+0xf8>
    0.00 :   73a9:   cmp    $0x3,%r15d
    0.00 :   73ad:   je     79e8 <receive_buf+0x18a8>
    0.00 :   73b3:   addq   $0x1,0x18(%r12)
    0.00 :   73b9:   cmp    $0x2,%r15d
    0.00 :   73bd:   je     780e <receive_buf+0x16ce>
    0.00 :   73c3:   jbe    719f <receive_buf+0x105f>
    0.00 :   73c9:   jmp    7278 <receive_buf+0x1138>
    0.00 :   73ce:   mov    %r10,0x38(%rsp)
    0.00 :   73d3:   mov    %r11d,0x30(%rsp)
    0.00 :   73d8:   call   73dd <receive_buf+0x129d>
    0.00 :   73dd:   mov    %r13,%rdi
    0.00 :   73e0:   mov    %rax,0x28(%rsp)
    0.00 :   73e5:   mov    0x10(%rsp),%rax
    0.00 :   73ea:   mov    0x30(%rax),%rdx
    0.00 :   73ee:   lea    0x48(%rax),%rsi
    0.00 :   73f2:   call   73f7 <receive_buf+0x12b7>
    0.00 :   73f7:   mov    %eax,%r15d
    0.00 :   73fa:   mov    0x10(%rsp),%rax
    0.00 :   73ff:   mov    0x20(%rax),%rdx
    0.00 :   7403:   mov    %rdx,0x20(%rsp)
    0.00 :   7408:   call   740d <receive_buf+0x12cd>
    0.00 :   740d:   mov    0x20(%rsp),%rdx
    0.00 :   7412:   mov    %eax,%eax
    0.00 :   7414:   add    0x0(,%rax,8),%rdx
    0.00 :   741c:   incq   (%rdx)
    0.00 :   741f:   mov    %rdx,0x20(%rsp)
    0.00 :   7424:   call   7429 <receive_buf+0x12e9>
    0.00 :   7429:   mov    0x28(%rsp),%r8
    0.00 :   742e:   mov    0x20(%rsp),%rdx
    0.00 :   7433:   sub    %r8,%rax
    0.00 :   7436:   add    %rax,0x8(%rdx)
    0.00 :   743a:   mov    0x30(%rsp),%r11d
    0.00 :   743f:   mov    0x38(%rsp),%r10
    0.00 :   7444:   jmp    7184 <receive_buf+0x1044>
    0.00 :   7449:   cmpw   $0x0,0xb4(%r14)
    0.00 :   7452:   jne    68e4 <receive_buf+0x7a4>
    0.00 :   7458:   movzbl 0x29(%r14),%esi
    0.00 :   745d:   and    $0x7f,%sil
    0.00 :   7461:   cmp    $0x3,%esi
    0.00 :   7464:   je     7478 <receive_buf+0x1338>
    0.00 :   7466:   cmp    $0x4,%esi
    0.00 :   7469:   je     78c9 <receive_buf+0x1789>
    0.00 :   746f:   cmp    $0x1,%esi
    0.00 :   7472:   jne    68e4 <receive_buf+0x7a4>
    0.00 :   7478:   mov    $0x8,%edi
    0.00 :   747d:   mov    %di,0xb4(%r14)
    0.00 :   7485:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   748a:   mov    0x8(%rsp),%rdx
    0.00 :   748f:   jmp    6a65 <receive_buf+0x925>
    0.00 :   7494:   mov    0x68(%rsp),%r13
    0.00 :   7499:   mov    0x70(%rsp),%edx
    0.00 :   749d:   mov    %r8d,%r15d
    0.00 :   74a0:   sub    %r13d,%r15d
    0.00 :   74a3:   sub    %r13d,%edx
    0.00 :   74a6:   sub    0x78(%rsp),%r13d
    0.00 :   74ab:   mov    %edx,0x28(%rsp)
    0.00 :   74af:   mov    %r11d,0x20(%rsp)
    0.00 :   74b4:   call   74b9 <receive_buf+0x1379>
    0.00 :   74b9:   mov    0x28(%rsp),%edx
    0.00 :   74bd:   mov    0x20(%rsp),%r11d
    0.00 :   74c2:   jmp    6306 <receive_buf+0x1c6>
    0.00 :   74c7:   mov    %rbx,%r10
    0.00 :   74ca:   jmp    6b17 <receive_buf+0x9d7>
    0.00 :   74cf:   mov    %r10,0x30(%rsp)
    0.00 :   74d4:   mov    %edi,0x28(%rsp)
    0.00 :   74d8:   mov    %ecx,0x20(%rsp)
    0.00 :   74dc:   mov    %r11d,0x18(%rsp)
    0.00 :   74e1:   call   74e6 <receive_buf+0x13a6>
    0.00 :   74e6:   xor    %eax,%eax
    0.00 :   74e8:   mov    0x54(%rsp),%r13d
    0.00 :   74ed:   mov    0x28(%rsp),%edi
    0.00 :   74f1:   cmpq   $0x0,0x10(%rsp)
    0.00 :   74f7:   mov    0x30(%rsp),%r10
    0.00 :   74fc:   mov    0x20(%rsp),%ecx
    0.00 :   7500:   mov    0x18(%rsp),%r11d
    0.00 :   7505:   sete   %al
    0.00 :   7508:   jmp    651d <receive_buf+0x3dd>
    0.00 :   750d:   mov    0x88(%rsp),%rax
    0.00 :   7515:   addq   $0x1,0x20(%r12)
    0.00 :   751b:   cmpl   $0x3,0x10(%rax)
    0.00 :   751f:   je     7a8b <receive_buf+0x194b>
    0.00 :   7525:   mov    0x68(%rsp),%rsi
    0.00 :   752a:   mov    0x80(%rsp),%rbp
    0.00 :   7532:   xor    %ecx,%ecx
    0.00 :   7534:   mov    %rsi,%rdx
    0.00 :   7537:   mov    %rsi,%rax
    0.00 :   753a:   sub    0x78(%rsp),%rax
    0.00 :   753f:   sub    %rbp,%rdx
    0.00 :   7542:   test   %eax,%eax
    0.00 :   7544:   cmovs  %ecx,%eax
    0.00 :   7547:   mov    %edx,%ecx
    0.00 :   7549:   sub    %eax,%ecx
    0.00 :   754b:   cmp    $0x27,%ecx
    0.00 :   754e:   jbe    7010 <receive_buf+0xed0>
    0.00 :   7554:   mov    0x98(%rsp),%ecx
    0.00 :   755b:   lea    -0x140(%rbp,%rcx,1),%rcx
    0.00 :   7563:   cmp    0x70(%rsp),%rcx
    0.00 :   7568:   jb     7b7e <receive_buf+0x1a3e>
    0.00 :   756e:   mov    %rsi,0x0(%rbp)
    0.00 :   7572:   mov    0x70(%rsp),%rcx
    0.00 :   7577:   sub    $0x28,%edx
    0.00 :   757a:   mov    %dx,0xa(%rbp)
    0.00 :   757e:   sub    %rsi,%rcx
    0.00 :   7581:   mov    %eax,0xc(%rbp)
    0.00 :   7584:   mov    %cx,0x8(%rbp)
    0.00 :   7588:   mov    0x98(%rsp),%eax
    0.00 :   758f:   mov    %eax,0x20(%rbp)
    0.00 :   7592:   mov    0x9c(%rsp),%eax
    0.00 :   7599:   mov    %eax,0x24(%rbp)
    0.00 :   759c:   mov    0x88(%rsp),%rax
    0.00 :   75a4:   mov    0x10(%rax),%rax
    0.00 :   75a8:   mov    %rax,0x10(%rbp)
    0.00 :   75ac:   mov    %rbp,0x60(%rsp)
    0.00 :   75b1:   test   %rbp,%rbp
    0.00 :   75b4:   je     7010 <receive_buf+0xed0>
    0.00 :   75ba:   mov    (%rsp),%rdi
    0.00 :   75be:   xor    %ecx,%ecx
    0.00 :   75c0:   lea    0x60(%rsp),%rdx
    0.00 :   75c5:   mov    $0x1,%esi
    0.00 :   75ca:   call   740 <virtnet_xdp_xmit>
    0.00 :   75cf:   test   %eax,%eax
    0.00 :   75d1:   je     7b2c <receive_buf+0x19ec>
    0.00 :   75d7:   js     7b66 <receive_buf+0x1a26>
    0.00 :   75dd:   orl    $0x1,(%r14)
    0.00 :   75e1:   call   75e6 <receive_buf+0x14a6>
    0.00 :   75e6:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   75eb:   mov    0x88(%rsp),%rax
    0.00 :   75f3:   addq   $0x1,0x20(%r12)
    0.00 :   75f9:   cmpl   $0x3,0x10(%rax)
    0.00 :   75fd:   je     7a31 <receive_buf+0x18f1>
    0.00 :   7603:   mov    0x68(%rsp),%rsi
    0.00 :   7608:   mov    0x80(%rsp),%r13
    0.00 :   7610:   xor    %ecx,%ecx
    0.00 :   7612:   mov    %rsi,%rdx
    0.00 :   7615:   mov    %rsi,%rax
    0.00 :   7618:   sub    0x78(%rsp),%rax
    0.00 :   761d:   sub    %r13,%rdx
    0.00 :   7620:   test   %eax,%eax
    0.00 :   7622:   cmovs  %ecx,%eax
    0.00 :   7625:   mov    %edx,%ecx
    0.00 :   7627:   sub    %eax,%ecx
    0.00 :   7629:   cmp    $0x27,%ecx
    0.00 :   762c:   jbe    7aeb <receive_buf+0x19ab>
    0.00 :   7632:   mov    0x98(%rsp),%ecx
    0.00 :   7639:   lea    -0x140(%r13,%rcx,1),%rcx
    0.00 :   7641:   cmp    0x70(%rsp),%rcx
    0.00 :   7646:   jb     7ac9 <receive_buf+0x1989>
    0.00 :   764c:   mov    %rsi,0x0(%r13)
    0.00 :   7650:   mov    0x70(%rsp),%rcx
    0.00 :   7655:   sub    $0x28,%edx
    0.00 :   7658:   mov    %dx,0xa(%r13)
    0.00 :   765d:   sub    %rsi,%rcx
    0.00 :   7660:   mov    %eax,0xc(%r13)
    0.00 :   7664:   mov    %cx,0x8(%r13)
    0.00 :   7669:   mov    0x98(%rsp),%eax
    0.00 :   7670:   mov    %eax,0x20(%r13)
    0.00 :   7674:   mov    0x9c(%rsp),%eax
    0.00 :   767b:   mov    %eax,0x24(%r13)
    0.00 :   767f:   mov    0x88(%rsp),%rax
    0.00 :   7687:   mov    0x10(%rax),%rax
    0.00 :   768b:   mov    %rax,0x10(%r13)
    0.00 :   768f:   mov    %r13,0x60(%rsp)
    0.00 :   7694:   test   %r13,%r13
    0.00 :   7697:   je     7af3 <receive_buf+0x19b3>
    0.00 :   769d:   mov    (%rsp),%rdi
    0.00 :   76a1:   xor    %ecx,%ecx
    0.00 :   76a3:   lea    0x60(%rsp),%rdx
    0.00 :   76a8:   mov    $0x1,%esi
    0.00 :   76ad:   mov    %r10,0x8(%rsp)
    0.00 :   76b2:   call   740 <virtnet_xdp_xmit>
    0.00 :   76b7:   mov    0x8(%rsp),%r10
    0.00 :   76bc:   test   %eax,%eax
    0.00 :   76be:   je     7b17 <receive_buf+0x19d7>
    0.00 :   76c4:   js     7b39 <receive_buf+0x19f9>
    0.00 :   76ca:   orl    $0x1,(%r14)
    0.00 :   76ce:   cmp    %r10,0x18(%rsp)
    0.00 :   76d3:   je     75e1 <receive_buf+0x14a1>
    0.00 :   76d9:   mov    %r10,%rdi
    0.00 :   76dc:   call   1ef0 <put_page>
    0.00 :   76e1:   jmp    75e1 <receive_buf+0x14a1>
    0.00 :   76e6:   mov    0x10(%rbx),%rdi
    0.00 :   76ea:   mov    0x10(%rsp),%rsi
    0.00 :   76ef:   mov    %r15d,%edx
    0.00 :   76f2:   mov    %r10,0x8(%rsp)
    0.00 :   76f7:   call   76fc <receive_buf+0x15bc>
    0.00 :   76fc:   mov    0x8(%rsp),%r10
    0.00 :   7701:   mov    0x10(%rbx),%rsi
    0.00 :   7705:   xchg   %ax,%ax
    0.00 :   7707:   jmp    71a8 <receive_buf+0x1068>
    0.00 :   770c:   mov    %gs:0x0(%rip),%eax        # 7713 <receive_buf+0x15d3>
    0.00 :   7713:   mov    %eax,%eax
    0.00 :   7715:   bt     %rax,0x0(%rip)        # 771d <receive_buf+0x15dd>
    0.00 :   771d:   jae    71a8 <receive_buf+0x1068>
    0.00 :   7723:   incl   %gs:0x0(%rip)        # 772a <receive_buf+0x15ea>
    0.00 :   772a:   mov    0x0(%rip),%rax        # 7731 <receive_buf+0x15f1>
    0.00 :   7731:   test   %rax,%rax
    0.00 :   7734:   je     7751 <receive_buf+0x1611>
    0.00 :   7736:   mov    0x8(%rax),%rdi
    0.00 :   773a:   mov    0x10(%rsp),%rdx
    0.00 :   773f:   mov    %r15d,%ecx
    0.00 :   7742:   mov    %r10,0x8(%rsp)
    0.00 :   7747:   call   774c <receive_buf+0x160c>
    0.00 :   774c:   mov    0x8(%rsp),%r10
    0.00 :   7751:   decl   %gs:0x0(%rip)        # 7758 <receive_buf+0x1618>
    0.00 :   7758:   jne    71a8 <receive_buf+0x1068>
    0.00 :   775e:   call   7763 <receive_buf+0x1623>
    0.00 :   7763:   jmp    71a8 <receive_buf+0x1068>
    0.00 :   7768:   mov    %ecx,0x8(%rsp)
    0.00 :   776c:   cmp    %ebx,%eax
    0.00 :   776e:   jb     6238 <receive_buf+0xf8>
    0.00 :   7774:   sub    %eax,%edx
    0.00 :   7776:   mov    %r14,%rdi
    0.00 :   7779:   lea    (%rdx,%rbx,1),%esi
    0.00 :   777c:   call   7781 <receive_buf+0x1641>
    0.00 :   7781:   mov    0x8(%rsp),%ecx
    0.00 :   7785:   test   %rax,%rax
    0.00 :   7788:   jne    6984 <receive_buf+0x844>
    0.00 :   778e:   jmp    6238 <receive_buf+0xf8>
    0.00 :   7793:   mov    %r10,%rdx
    0.00 :   7796:   lea    0x54(%rsp),%r9
    0.00 :   779b:   mov    %r15d,%ecx
    0.00 :   779e:   mov    %rbp,%rdi
    0.00 :   77a1:   mov    $0x100,%r8d
    0.00 :   77a7:   lea    0x52(%rsp),%rsi
    0.00 :   77ac:   mov    %r10,0x20(%rsp)
    0.00 :   77b1:   mov    %r11d,0x28(%rsp)
    0.00 :   77b6:   call   1f80 <xdp_linearize_page>
    0.00 :   77bb:   mov    0x20(%rsp),%r10
    0.00 :   77c0:   test   %rax,%rax
    0.00 :   77c3:   mov    %rax,0x18(%rsp)
    0.00 :   77c8:   je     71b3 <receive_buf+0x1073>
    0.00 :   77ce:   mov    0x28(%rsp),%r11d
    0.00 :   77d3:   mov    $0x100,%edx
    0.00 :   77d8:   mov    $0x1000,%ecx
    0.00 :   77dd:   jmp    70d6 <receive_buf+0xf96>
    0.00 :   77e2:   mov    0x10(%rbx),%rdi
    0.00 :   77e6:   mov    0x18(%rsp),%rsi
    0.00 :   77eb:   mov    %ecx,%edx
    0.00 :   77ed:   mov    %ecx,(%rsp)
    0.00 :   77f0:   call   77f5 <receive_buf+0x16b5>
    0.00 :   77f5:   mov    (%rsp),%ecx
    0.00 :   77f8:   jmp    720d <receive_buf+0x10cd>
    0.00 :   77fd:   mov    (%rsi),%eax
    0.00 :   77ff:   mov    %eax,(%rdx)
    0.00 :   7801:   mov    -0x4(%rcx,%rsi,1),%eax
    0.00 :   7805:   mov    %eax,-0x4(%rdx,%rcx,1)
    0.00 :   7809:   jmp    635e <receive_buf+0x21e>
    0.00 :   780e:   mov    0x18(%rsp),%r8
    0.00 :   7813:   mov    0x68(%rsp),%rcx
    0.00 :   7818:   movzbl 0x4a(%rbx),%edx
    0.00 :   781c:   mov    %r8,%rax
    0.00 :   781f:   sub    0x0(%rip),%rax        # 7826 <receive_buf+0x16e6>
    0.00 :   7826:   mov    %rcx,%rsi
    0.00 :   7829:   mov    %rcx,%r13
    0.00 :   782c:   sar    $0x6,%rax
    0.00 :   7830:   sub    0x78(%rsp),%r13
    0.00 :   7835:   shl    $0xc,%rax
    0.00 :   7839:   add    0x0(%rip),%rax        # 7840 <receive_buf+0x1700>
    0.00 :   7840:   mov    %r13d,%edi
    0.00 :   7843:   sub    %rax,%rsi
    0.00 :   7846:   lea    (%rdx,%r13,1),%eax
    0.00 :   784a:   mov    %esi,%r15d
    0.00 :   784d:   sub    %eax,%r15d
    0.00 :   7850:   mov    0x70(%rsp),%rax
    0.00 :   7855:   sub    %rcx,%rax
    0.00 :   7858:   sub    0x80(%rsp),%rcx
    0.00 :   7860:   add    %r13d,%eax
    0.00 :   7863:   sub    %r13d,%ecx
    0.00 :   7866:   add    %edx,%eax
    0.00 :   7868:   mov    %eax,0x54(%rsp)
    0.00 :   786c:   cmp    %r10,%r8
    0.00 :   786f:   je     74cf <receive_buf+0x138f>
    0.00 :   7875:   mov    %r10,0x10(%rsp)
    0.00 :   787a:   mov    %ecx,0x8(%rsp)
    0.00 :   787e:   call   7883 <receive_buf+0x1743>
    0.00 :   7883:   mov    0x10(%rsp),%rdi
    0.00 :   7888:   call   1ef0 <put_page>
    0.00 :   788d:   mov    0x8(%rsp),%ecx
    0.00 :   7891:   mov    %rbp,%rsi
    0.00 :   7894:   mov    %rbx,%rdi
    0.00 :   7897:   mov    0x54(%rsp),%r8d
    0.00 :   789c:   mov    $0x1000,%r9d
    0.00 :   78a2:   push   %rcx
    0.00 :   78a3:   mov    %r15d,%ecx
    0.00 :   78a6:   push   %r13
    0.00 :   78a8:   push   $0x0
    0.00 :   78aa:   mov    0x30(%rsp),%rdx
    0.00 :   78af:   call   2170 <page_to_skb>
    0.00 :   78b4:   mov    %rax,%r14
    0.00 :   78b7:   add    $0x18,%rsp
    0.00 :   78bb:   test   %rax,%rax
    0.00 :   78be:   jne    61d1 <receive_buf+0x91>
    0.00 :   78c4:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   78c9:   mov    $0xffffdd86,%esi
    0.00 :   78ce:   mov    %si,0xb4(%r14)
    0.00 :   78d6:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   78db:   mov    0x30(%rsp),%rdi
    0.00 :   78e0:   mov    0x8(%rsp),%rcx
    0.00 :   78e5:   add    %eax,%edx
    0.00 :   78e7:   mov    $0x1,%r8d
    0.00 :   78ed:   lea    0x140(%rax),%r11d
    0.00 :   78f4:   mov    %edx,0x58(%rsp)
    0.00 :   78f8:   add    $0x76d,%eax
    0.00 :   78fd:   lea    0x58(%rsp),%r9
    0.00 :   7902:   mov    %rdi,%rsi
    0.00 :   7905:   sub    0x0(%rip),%rsi        # 790c <receive_buf+0x17cc>
    0.00 :   790c:   and    $0xffffffc0,%eax
    0.00 :   790f:   mov    %rdi,%rdx
    0.00 :   7912:   sar    $0x6,%rsi
    0.00 :   7916:   add    $0x140,%eax
    0.00 :   791b:   mov    %rbp,%rdi
    0.00 :   791e:   mov    %r10,0x28(%rsp)
    0.00 :   7923:   shl    $0xc,%rsi
    0.00 :   7927:   add    0x0(%rip),%rsi        # 792e <receive_buf+0x17ee>
    0.00 :   792e:   mov    %r8w,0x54(%rsp)
    0.00 :   7934:   mov    $0x140,%r8d
    0.00 :   793a:   sub    %rsi,%rcx
    0.00 :   793d:   mov    0x38(%rsp),%esi
    0.00 :   7941:   mov    %r11d,0x20(%rsp)
    0.00 :   7946:   mov    %eax,0x10(%rsp)
    0.00 :   794a:   add    %ecx,%esi
    0.00 :   794c:   mov    %esi,%ecx
    0.00 :   794e:   lea    0x54(%rsp),%rsi
    0.00 :   7953:   call   1f80 <xdp_linearize_page>
    0.00 :   7958:   mov    %rax,%r15
    0.00 :   795b:   test   %rax,%rax
    0.00 :   795e:   je     7010 <receive_buf+0xed0>
    0.00 :   7964:   sub    0x0(%rip),%rax        # 796b <receive_buf+0x182b>
    0.00 :   796b:   mov    0x30(%rsp),%rdi
    0.00 :   7970:   sar    $0x6,%rax
    0.00 :   7974:   shl    $0xc,%rax
    0.00 :   7978:   add    0x0(%rip),%rax        # 797f <receive_buf+0x183f>
    0.00 :   797f:   mov    %rax,0x8(%rsp)
    0.00 :   7984:   call   1ef0 <put_page>
    0.00 :   7989:   mov    $0x100,%r8d
    0.00 :   798f:   mov    0x28(%rsp),%r10
    0.00 :   7994:   mov    0x20(%rsp),%r11d
    0.00 :   7999:   mov    %r15,0x30(%rsp)
    0.00 :   799e:   movl   $0x140,0x38(%rsp)
    0.00 :   79a6:   jmp    6f45 <receive_buf+0xe05>
    0.00 :   79ab:   orl    $0x2,(%r14)
    0.00 :   79af:   cmp    %r10,0x18(%rsp)
    0.00 :   79b4:   je     75e1 <receive_buf+0x14a1>
    0.00 :   79ba:   jmp    76d9 <receive_buf+0x1599>
    0.00 :   79bf:   orl    $0x2,(%r14)
    0.00 :   79c3:   call   79c8 <receive_buf+0x1888>
    0.00 :   79c8:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   79cd:   mov    0x18(%rsp),%rdi
    0.00 :   79d2:   xor    %esi,%esi
    0.00 :   79d4:   mov    %r10,0x8(%rsp)
    0.00 :   79d9:   call   79de <receive_buf+0x189e>
    0.00 :   79de:   mov    0x8(%rsp),%r10
    0.00 :   79e3:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   79e8:   mov    0x88(%rsp),%rax
    0.00 :   79f0:   mov    (%rax),%rdx
    0.00 :   79f3:   testb  $0x8,0xc1(%rdx)
    0.00 :   79fa:   je     7abe <receive_buf+0x197e>
    0.00 :   7a00:   mov    %r11d,0x28(%rsp)
    0.00 :   7a05:   testb  $0x4,0xc8(%rdx)
    0.00 :   7a0c:   je     7abe <receive_buf+0x197e>
    0.00 :   7a12:   mov    %r13,%rdi
    0.00 :   7a15:   mov    %r10,0x20(%rsp)
    0.00 :   7a1a:   call   7a1f <receive_buf+0x18df>
    0.00 :   7a1f:   mov    0x28(%rsp),%r11d
    0.00 :   7a24:   mov    0x20(%rsp),%r10
    0.00 :   7a29:   mov    %eax,%r15d
    0.00 :   7a2c:   jmp    7189 <receive_buf+0x1049>
    0.00 :   7a31:   mov    %r13,%rdi
    0.00 :   7a34:   mov    %r10,0x8(%rsp)
    0.00 :   7a39:   call   7a3e <receive_buf+0x18fe>
    0.00 :   7a3e:   mov    0x8(%rsp),%r10
    0.00 :   7a43:   mov    %rax,%r13
    0.00 :   7a46:   jmp    768f <receive_buf+0x154f>
    0.00 :   7a4b:   mov    0x88(%rsp),%rax
    0.00 :   7a53:   mov    (%rax),%rdx
    0.00 :   7a56:   testb  $0x8,0xc1(%rdx)
    0.00 :   7a5d:   je     7a9b <receive_buf+0x195b>
    0.00 :   7a5f:   mov    %r8,0x28(%rsp)
    0.00 :   7a64:   mov    %r11d,0x20(%rsp)
    0.00 :   7a69:   testb  $0x4,0xc8(%rdx)
    0.00 :   7a70:   je     7a9b <receive_buf+0x195b>
    0.00 :   7a72:   mov    %r13,%rdi
    0.00 :   7a75:   call   7a7a <receive_buf+0x193a>
    0.00 :   7a7a:   mov    0x28(%rsp),%r8
    0.00 :   7a7f:   mov    0x20(%rsp),%r11d
    0.00 :   7a84:   mov    %eax,%ecx
    0.00 :   7a86:   jmp    6fca <receive_buf+0xe8a>
    0.00 :   7a8b:   mov    %r13,%rdi
    0.00 :   7a8e:   call   7a93 <receive_buf+0x1953>
    0.00 :   7a93:   mov    %rax,%rbp
    0.00 :   7a96:   jmp    75ac <receive_buf+0x146c>
    0.00 :   7a9b:   addq   $0x1,0x18(%r12)
    0.00 :   7aa1:   jmp    7515 <receive_buf+0x13d5>
    0.00 :   7aa6:   mov    0x0(%rip),%rdx        # 7aad <receive_buf+0x196d>
    0.00 :   7aad:   jmp    6b63 <receive_buf+0xa23>
    0.00 :   7ab2:   mov    0x0(%rip),%rsi        # 7ab9 <receive_buf+0x1979>
    0.00 :   7ab9:   jmp    65c6 <receive_buf+0x486>
    0.00 :   7abe:   addq   $0x1,0x18(%r12)
    0.00 :   7ac4:   jmp    75f3 <receive_buf+0x14b3>
    0.00 :   7ac9:   mov    $0x112,%edx
    0.00 :   7ace:   mov    $0x0,%rsi
    0.00 :   7ad5:   mov    %r10,0x8(%rsp)
    0.00 :   7ada:   mov    $0x0,%rdi
    0.00 :   7ae1:   call   7ae6 <receive_buf+0x19a6>
    0.00 :   7ae6:   mov    0x8(%rsp),%r10
    0.00 :   7aeb:   xor    %r9d,%r9d
    0.00 :   7aee:   mov    %r9,0x60(%rsp)
    0.00 :   7af3:   cmp    %r10,0x18(%rsp)
    0.00 :   7af8:   je     71b3 <receive_buf+0x1073>
    0.00 :   7afe:   mov    0x18(%rsp),%rdi
    0.00 :   7b03:   mov    %r10,0x8(%rsp)
    0.00 :   7b08:   call   1ef0 <put_page>
    0.00 :   7b0d:   mov    0x8(%rsp),%r10
    0.00 :   7b12:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   7b17:   mov    %r13,%rdi
    0.00 :   7b1a:   mov    %r10,(%rsp)
    0.00 :   7b1e:   call   7b23 <receive_buf+0x19e3>
    0.00 :   7b23:   mov    (%rsp),%r10
    0.00 :   7b27:   jmp    76ca <receive_buf+0x158a>
    0.00 :   7b2c:   mov    %rbp,%rdi
    0.00 :   7b2f:   call   7b34 <receive_buf+0x19f4>
    0.00 :   7b34:   jmp    75dd <receive_buf+0x149d>
    0.00 :   7b39:   mov    0x10(%rbx),%rdi
    0.00 :   7b3d:   mov    0x10(%rsp),%rsi
    0.00 :   7b42:   mov    $0x3,%edx
    0.00 :   7b47:   mov    %r10,0x8(%rsp)
    0.00 :   7b4c:   call   e00 <trace_xdp_exception>
    0.00 :   7b51:   mov    0x8(%rsp),%r10
    0.00 :   7b56:   cmp    %r10,0x18(%rsp)
    0.00 :   7b5b:   je     71b3 <receive_buf+0x1073>
    0.00 :   7b61:   jmp    72b6 <receive_buf+0x1176>
    0.00 :   7b66:   mov    0x10(%rbx),%rdi
    0.00 :   7b6a:   mov    0x18(%rsp),%rsi
    0.00 :   7b6f:   mov    $0x3,%edx
    0.00 :   7b74:   call   e00 <trace_xdp_exception>
    0.00 :   7b79:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7b7e:   mov    $0x112,%edx
    0.00 :   7b83:   mov    $0x0,%rsi
    0.00 :   7b8a:   mov    $0x0,%rdi
    0.00 :   7b91:   call   7b96 <receive_buf+0x1a56>
    0.00 :   7b96:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7b9b:   mov    0x0(%rip),%rcx        # 7ba2 <receive_buf+0x1a62>
    0.00 :   7ba2:   jmp    62ab <receive_buf+0x16b>
    0.00 :   7ba7:   mov    0x0(%rip),%rdx        # 7bae <receive_buf+0x1a6e>
    0.00 :   7bae:   jmp    6aa2 <receive_buf+0x962>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   14.45 libc.so.6[6c2fe]
   11.48 libc.so.6[6d418]
   10.99 libc.so.6[6c048]
   10.15 libc.so.6[6df9d]
    8.35 libc.so.6[6bda0]
    8.22 libc.so.6[6d453]
    8.13 libc.so.6[6c72f]
    7.86 libc.so.6[6c724]
    7.48 libc.so.6[6d268]
    6.48 libc.so.6[6bf3b]
    6.42 libc.so.6[6c2e8]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (13 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000006bda0 <__vfwprintf_internal>:
         : 6     __vfwprintf_internal():
    8.35 :   6bda0:  endbr64 // libc.so.6[6bda0]
    0.00 :   6bda4:  push   %r15
    0.00 :   6bda6:  push   %r14
    0.00 :   6bda8:  push   %r13
    0.00 :   6bdaa:  mov    %rdx,%r13
    0.00 :   6bdad:  push   %r12
    0.00 :   6bdaf:  push   %rbp
    0.00 :   6bdb0:  push   %rbx
    0.00 :   6bdb1:  mov    %rdi,%rbx
    0.00 :   6bdb4:  sub    $0x508,%rsp
    0.00 :   6bdbb:  mov    %rsi,0x8(%rsp)
    0.00 :   6bdc0:  mov    $0x1,%esi
    0.00 :   6bdc5:  mov    %ecx,0x44(%rsp)
    0.00 :   6bdc9:  mov    %fs:0x28,%rax
    0.00 :   6bdd2:  mov    %rax,0x4f8(%rsp)
    0.00 :   6bdda:  mov    0x16702f(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   6bde1:  mov    %fs:(%rax),%eax
    0.00 :   6bde4:  mov    %eax,0x64(%rsp)
    0.00 :   6bde8:  call   7e990 <_IO_fwide>
    0.00 :   6bded:  cmp    $0x1,%eax
    0.00 :   6bdf0:  jne    6e120 <__vfwprintf_internal+0x2380>
    0.00 :   6bdf6:  mov    (%rbx),%eax
    0.00 :   6bdf8:  test   $0x8,%al
    0.00 :   6bdfa:  jne    6e10c <__vfwprintf_internal+0x236c>
    0.00 :   6be00:  cmpq   $0x0,0x8(%rsp)
    0.00 :   6be06:  je     6e188 <__vfwprintf_internal+0x23e8>
    0.00 :   6be0c:  mov    $0x1,%esi
    0.00 :   6be11:  mov    %rbx,%rdi
    0.00 :   6be14:  call   7e990 <_IO_fwide>
    0.00 :   6be19:  mov    %eax,%ebp
    0.00 :   6be1b:  cmp    $0x1,%eax
    0.00 :   6be1e:  jne    6e120 <__vfwprintf_internal+0x2380>
    0.00 :   6be24:  mov    (%rbx),%r12d
    0.00 :   6be27:  test   $0x2,%r12b
    0.00 :   6be2b:  jne    6d278 <__vfwprintf_internal+0x14d8>
    0.00 :   6be31:  movdqu 0x0(%r13),%xmm1
    0.00 :   6be37:  mov    0x8(%rsp),%rdi
    0.00 :   6be3c:  mov    $0x25,%esi
    0.00 :   6be41:  movups %xmm1,0xf8(%rsp)
    0.00 :   6be49:  mov    0x10(%r13),%rax
    0.00 :   6be4d:  mov    %rax,0x108(%rsp)
    0.00 :   6be55:  call   b4eb0 <wcschrnul>
    0.00 :   6be5a:  and    $0x8000,%r12d
    0.00 :   6be61:  movb   $0x0,0x63(%rsp)
    0.00 :   6be66:  mov    %rax,0x48(%rsp)
    0.00 :   6be6b:  mov    %rax,0x90(%rsp)
    0.00 :   6be73:  mov    %rbx,0xd8(%rsp)
    0.00 :   6be7b:  je     6c090 <__vfwprintf_internal+0x2f0>
    0.00 :   6be81:  mov    0x8(%rsp),%rax
    0.00 :   6be86:  mov    0x48(%rsp),%rbp
    0.00 :   6be8b:  lea    0x163b6e(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   6be92:  mov    0xd8(%rbx),%r12
    0.00 :   6be99:  sub    %rax,%rbp
    0.00 :   6be9c:  lea    0x1648c5(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   6bea3:  sub    %rcx,%rax
    0.00 :   6bea6:  sar    $0x2,%rbp
    0.00 :   6beaa:  mov    %rax,0x10(%rsp)
    0.00 :   6beaf:  mov    %rax,%rsi
    0.00 :   6beb2:  mov    %r12,%rax
    0.00 :   6beb5:  sub    %rcx,%rax
    0.00 :   6beb8:  cmp    %rsi,%rax
    0.00 :   6bebb:  jae    6d700 <__vfwprintf_internal+0x1960>
    0.00 :   6bec1:  mov    0x8(%rsp),%rsi
    0.00 :   6bec6:  mov    %rbp,%rdx
    0.00 :   6bec9:  mov    %rbx,%rdi
    0.00 :   6becc:  call   *0x38(%r12)
    0.00 :   6bed1:  cmp    %rax,%rbp
    0.00 :   6bed4:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6beda:  movslq %ebp,%rdx
    0.00 :   6bedd:  mov    %rbp,%rax
    0.00 :   6bee0:  mov    %ebp,%r12d
    0.00 :   6bee3:  shr    $0x3f,%rax
    0.00 :   6bee7:  cmp    %rdx,%rbp
    0.00 :   6beea:  mov    $0x1,%edx
    0.00 :   6beef:  cmovne %edx,%eax
    0.00 :   6bef2:  test   %eax,%eax
    0.00 :   6bef4:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6befa:  test   %ebp,%ebp
    0.00 :   6befc:  js     6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6bf02:  mov    0x90(%rsp),%rbp
    0.00 :   6bf0a:  mov    0x0(%rbp),%r8d
    0.00 :   6bf0e:  test   %r8d,%r8d
    0.00 :   6bf11:  je     6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6bf17:  cmpq   $0x0,0x169a81(%rip)        # 1d59a0 <__printf_function_table>
    0.00 :   6bf1f:  jne    6d710 <__vfwprintf_internal+0x1970>
    0.00 :   6bf25:  cmpq   $0x0,0x169a63(%rip)        # 1d5990 <__printf_modifier_table>
    0.00 :   6bf2d:  jne    6d710 <__vfwprintf_internal+0x1970>
    0.00 :   6bf33:  cmpq   $0x0,0x16897d(%rip)        # 1d48b8 <__printf_va_arg_table>
    6.48 :   6bf3b:  movl   $0x0,0x70(%rsp) // libc.so.6[6bf3b]
    0.00 :   6bf43:  movl   $0x0,0x50(%rsp)
    0.00 :   6bf4b:  jne    6dd70 <__vfwprintf_internal+0x1fd0>
    0.00 :   6bf51:  movl   $0x0,0x74(%rsp)
    0.00 :   6bf59:  movq   $0xffffffffffffffff,0x58(%rsp)
    0.00 :   6bf62:  nopw   0x0(%rax,%rax,1)
    0.00 :   6bf68:  mov    0x4(%rbp),%r14d
    0.00 :   6bf6c:  lea    0x4(%rbp),%rax
    0.00 :   6bf70:  mov    %rax,0x90(%rsp)
    0.00 :   6bf78:  lea    -0x20(%r14),%eax
    0.00 :   6bf7c:  cmp    $0x5a,%eax
    0.00 :   6bf7f:  jbe    6c020 <__vfwprintf_internal+0x280>
    0.00 :   6bf85:  endbr64
    0.00 :   6bf89:  test   %r14d,%r14d
    0.00 :   6bf8c:  jne    6d930 <__vfwprintf_internal+0x1b90>
    0.00 :   6bf92:  mov    0x166e77(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   6bf99:  movl   $0x16,%fs:(%rax)
    0.00 :   6bfa0:  mov    $0xffffffff,%r12d
    0.00 :   6bfa6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6bfb0:  testl  $0x8000,(%rbx)
    0.00 :   6bfb6:  je     6bff0 <__vfwprintf_internal+0x250>
    0.00 :   6bfb8:  cmpb   $0x0,0x63(%rsp)
    0.00 :   6bfbd:  jne    6c0f0 <__vfwprintf_internal+0x350>
    0.00 :   6bfc3:  mov    0x4f8(%rsp),%rax
    0.00 :   6bfcb:  sub    %fs:0x28,%rax
    0.00 :   6bfd4:  jne    6e326 <__vfwprintf_internal+0x2586>
    0.00 :   6bfda:  add    $0x508,%rsp
    0.00 :   6bfe1:  mov    %r12d,%eax
    0.00 :   6bfe4:  pop    %rbx
    0.00 :   6bfe5:  pop    %rbp
    0.00 :   6bfe6:  pop    %r12
    0.00 :   6bfe8:  pop    %r13
    0.00 :   6bfea:  pop    %r14
    0.00 :   6bfec:  pop    %r15
    0.00 :   6bfee:  ret
    0.00 :   6bfef:  nop
    0.00 :   6bff0:  mov    0x88(%rbx),%rdi
    0.00 :   6bff7:  mov    0x4(%rdi),%eax
    0.00 :   6bffa:  sub    $0x1,%eax
    0.00 :   6bffd:  mov    %eax,0x4(%rdi)
    0.00 :   6c000:  jne    6bfb8 <__vfwprintf_internal+0x218>
    0.00 :   6c002:  movq   $0x0,0x8(%rdi)
    0.00 :   6c00a:  xchg   %eax,(%rdi)
    0.00 :   6c00c:  cmp    $0x1,%eax
    0.00 :   6c00f:  jle    6bfb8 <__vfwprintf_internal+0x218>
    0.00 :   6c011:  call   87f80 <__lll_lock_wake_private>
    0.00 :   6c016:  jmp    6bfb8 <__vfwprintf_internal+0x218>
    0.00 :   6c018:  nopl   0x0(%rax,%rax,1)
    0.00 :   6c020:  movl   $0x0,0x68(%rsp)
    0.00 :   6c028:  xor    %ecx,%ecx
    0.00 :   6c02a:  xor    %r9d,%r9d
    0.00 :   6c02d:  xor    %ebp,%ebp
    0.00 :   6c02f:  movl   $0x0,0x18(%rsp)
    0.00 :   6c037:  xor    %r10d,%r10d
    0.00 :   6c03a:  lea    0x12497f(%rip),%rsi        # 1909c0 <jump_table>
    0.00 :   6c041:  xor    %r8d,%r8d
    0.00 :   6c044:  movzbl (%rsi,%rax,1),%eax
   10.99 :   6c048:  lea    0x1248f1(%rip),%rsi        # 190940 <step0_jumps.9> // libc.so.6[6c048]
    0.00 :   6c04f:  movl   $0x0,0x28(%rsp)
    0.00 :   6c057:  mov    $0xffffffff,%r11d
    0.00 :   6c05d:  movl   $0x0,0x24(%rsp)
    0.00 :   6c065:  movslq (%rsi,%rax,4),%rax
    0.00 :   6c069:  lea    -0xeb(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c070:  movl   $0x0,0x38(%rsp)
    0.00 :   6c078:  movl   $0x0,0x40(%rsp)
    0.00 :   6c080:  add    %rsi,%rax
    0.00 :   6c083:  movl   $0x20,0x30(%rsp)
    0.00 :   6c08b:  jmp    *%rax
    0.00 :   6c08d:  nopl   (%rax)
    0.00 :   6c090:  mov    0x166ea9(%rip),%rax        # 1d2f40 <_IO_funlockfile@@GLIBC_2.2.5+0x17fd00>
    0.00 :   6c097:  lea    0xd0(%rsp),%rdi
    0.00 :   6c09f:  mov    %rax,0xd0(%rsp)
    0.00 :   6c0a7:  call   87df0 <__GI___libc_cleanup_push_defer>
    0.00 :   6c0ac:  mov    (%rbx),%eax
    0.00 :   6c0ae:  and    $0x8000,%eax
    0.00 :   6c0b3:  jne    6c0e4 <__vfwprintf_internal+0x344>
    0.00 :   6c0b5:  mov    %fs:0x10,%r12
    0.00 :   6c0be:  mov    0x88(%rbx),%rdi
    0.00 :   6c0c5:  cmp    %r12,0x8(%rdi)
    0.00 :   6c0c9:  je     6c0e0 <__vfwprintf_internal+0x340>
    0.00 :   6c0cb:  lock cmpxchg %ebp,(%rdi)
    0.00 :   6c0cf:  jne    6db84 <__vfwprintf_internal+0x1de4>
    0.00 :   6c0d5:  mov    0x88(%rbx),%rdi
    0.00 :   6c0dc:  mov    %r12,0x8(%rdi)
    0.00 :   6c0e0:  addl   $0x1,0x4(%rdi)
    0.00 :   6c0e4:  movb   $0x1,0x63(%rsp)
    0.00 :   6c0e9:  jmp    6be81 <__vfwprintf_internal+0xe1>
    0.00 :   6c0ee:  xchg   %ax,%ax
    0.00 :   6c0f0:  lea    0xd0(%rsp),%rdi
    0.00 :   6c0f8:  call   87e40 <__GI___libc_cleanup_pop_restore>
    0.00 :   6c0fd:  jmp    6bfc3 <__vfwprintf_internal+0x223>
    0.00 :   6c102:  nopw   0x0(%rax,%rax,1)
    0.00 :   6c108:  endbr64
    0.00 :   6c10c:  endbr64
    0.00 :   6c110:  testb  $0x1,0x44(%rsp)
    0.00 :   6c115:  jne    6e030 <__vfwprintf_internal+0x2290>
    0.00 :   6c11b:  mov    %r10d,%edx
    0.00 :   6c11e:  and    $0x1,%edx
    0.00 :   6c121:  mov    0x18(%rsp),%eax
    0.00 :   6c125:  movzbl %dl,%edx
    0.00 :   6c128:  shl    $0x2,%r9d
    0.00 :   6c12c:  movl   $0x0,0xbc(%rsp)
    0.00 :   6c137:  or     $0x4,%dh
    0.00 :   6c13a:  mov    %r11d,0xb0(%rsp)
    0.00 :   6c142:  mov    %eax,0xb4(%rsp)
    0.00 :   6c149:  lea    0x0(%rbp,%rbp,1),%eax
    0.00 :   6c14d:  or     %edx,%eax
    0.00 :   6c14f:  movzwl 0x40(%rsp),%edx
    0.00 :   6c154:  mov    %r14d,0xb8(%rsp)
    0.00 :   6c15c:  or     %r9d,%eax
    0.00 :   6c15f:  shl    $0x3,%edx
    0.00 :   6c162:  or     %edx,%eax
    0.00 :   6c164:  movzwl 0x38(%rsp),%edx
    0.00 :   6c169:  shl    $0x4,%edx
    0.00 :   6c16c:  or     %edx,%eax
    0.00 :   6c16e:  movzwl 0x24(%rsp),%edx
    0.00 :   6c173:  shl    $0x5,%edx
    0.00 :   6c176:  or     %edx,%eax
    0.00 :   6c178:  movzwl 0x28(%rsp),%edx
    0.00 :   6c17d:  shl    $0x6,%edx
    0.00 :   6c180:  or     %edx,%eax
    0.00 :   6c182:  mov    %r8d,%edx
    0.00 :   6c185:  shl    $0x7,%edx
    0.00 :   6c188:  or     %edx,%eax
    0.00 :   6c18a:  movzwl 0x68(%rsp),%edx
    0.00 :   6c18f:  shl    $0xb,%edx
    0.00 :   6c192:  or     %edx,%eax
    0.00 :   6c194:  mov    %ax,0xbc(%rsp)
    0.00 :   6c19c:  mov    0x30(%rsp),%eax
    0.00 :   6c1a0:  mov    %eax,0xc0(%rsp)
    0.00 :   6c1a7:  test   %r10d,%r10d
    0.00 :   6c1aa:  je     6d4e8 <__vfwprintf_internal+0x1748>
    0.00 :   6c1b0:  testb  $0x8,0x44(%rsp)
    0.00 :   6c1b5:  je     6daa0 <__vfwprintf_internal+0x1d00>
    0.00 :   6c1bb:  orb    $0x10,0xbd(%rsp)
    0.00 :   6c1c3:  mov    0x4(%r13),%edx
    0.00 :   6c1c7:  cmp    $0xaf,%edx
    0.00 :   6c1cd:  ja     6df82 <__vfwprintf_internal+0x21e2>
    0.00 :   6c1d3:  mov    %edx,%eax
    0.00 :   6c1d5:  add    $0x10,%edx
    0.00 :   6c1d8:  add    0x10(%r13),%rax
    0.00 :   6c1dc:  mov    %edx,0x4(%r13)
    0.00 :   6c1e0:  movdqa (%rax),%xmm2
    0.00 :   6c1e4:  movaps %xmm2,0xa0(%rsp)
    0.00 :   6c1ec:  jmp    6d511 <__vfwprintf_internal+0x1771>
    0.00 :   6c1f1:  nopl   0x0(%rax)
    0.00 :   6c1f8:  endbr64
    0.00 :   6c1fc:  endbr64
    0.00 :   6c200:  mov    0x90(%rsp),%rax
    0.00 :   6c208:  mov    0x4(%rax),%r14d
    0.00 :   6c20c:  lea    0x4(%rax),%rdx
    0.00 :   6c210:  lea    -0x292(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c217:  mov    %rdx,0x90(%rsp)
    0.00 :   6c21f:  lea    -0x20(%r14),%edx
    0.00 :   6c223:  cmp    $0x5a,%edx
    0.00 :   6c226:  ja     6cfe0 <__vfwprintf_internal+0x1240>
    0.00 :   6c22c:  lea    0x12478d(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6c233:  lea    -0x2b5(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c23a:  mov    $0x1,%r9d
    0.00 :   6c240:  xor    %r10d,%r10d
    0.00 :   6c243:  movzbl (%rax,%rdx,1),%edx
    0.00 :   6c247:  lea    0x1244f2(%rip),%rax        # 190740 <step4_jumps.5>
    0.00 :   6c24e:  movslq (%rax,%rdx,4),%rax
    0.00 :   6c252:  add    %rdi,%rax
    0.00 :   6c255:  jmp    *%rax
    0.00 :   6c257:  nopw   0x0(%rax,%rax,1)
    0.00 :   6c260:  endbr64
    0.00 :   6c264:  mov    0x18(%rsp),%ebp
    0.00 :   6c268:  mov    0x24(%rsp),%ecx
    0.00 :   6c26c:  sub    $0x1,%ebp
    0.00 :   6c26f:  test   %ecx,%ecx
    0.00 :   6c271:  je     6dbf0 <__vfwprintf_internal+0x1e50>
    0.00 :   6c277:  mov    0x0(%r13),%eax
    0.00 :   6c27b:  cmp    $0x2f,%eax
    0.00 :   6c27e:  ja     6d880 <__vfwprintf_internal+0x1ae0>
    0.00 :   6c284:  mov    %eax,%edx
    0.00 :   6c286:  add    $0x8,%eax
    0.00 :   6c289:  add    0x10(%r13),%rdx
    0.00 :   6c28d:  mov    %eax,0x0(%r13)
    0.00 :   6c291:  mov    0xa0(%rbx),%rax
    0.00 :   6c298:  mov    (%rdx),%esi
    0.00 :   6c29a:  test   %rax,%rax
    0.00 :   6c29d:  je     6df48 <__vfwprintf_internal+0x21a8>
    0.00 :   6c2a3:  mov    0x20(%rax),%rdx
    0.00 :   6c2a7:  cmp    0x28(%rax),%rdx
    0.00 :   6c2ab:  jae    6df48 <__vfwprintf_internal+0x21a8>
    0.00 :   6c2b1:  lea    0x4(%rdx),%rcx
    0.00 :   6c2b5:  mov    %rcx,0x20(%rax)
    0.00 :   6c2b9:  mov    %esi,(%rdx)
    0.00 :   6c2bb:  cmp    $0xffffffff,%esi
    0.00 :   6c2be:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6c2c4:  cmp    $0x7fffffff,%r12d
    0.00 :   6c2cb:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6c2d1:  mov    0x24(%rsp),%edx
    0.00 :   6c2d5:  add    $0x1,%r12d
    0.00 :   6c2d9:  test   %edx,%edx
    0.00 :   6c2db:  jne    6d898 <__vfwprintf_internal+0x1af8>
    0.00 :   6c2e1:  nopl   0x0(%rax)
    6.42 :   6c2e8:  mov    0x90(%rsp),%rax // libc.so.6[6c2e8]
    0.00 :   6c2f0:  mov    $0x25,%esi
    0.00 :   6c2f5:  addl   $0x1,0x50(%rsp)
    0.00 :   6c2fa:  lea    0x4(%rax),%r15
   14.45 :   6c2fe:  mov    %r15,%rdi // libc.so.6[6c2fe]
    0.00 :   6c301:  call   b4eb0 <wcschrnul>
    0.00 :   6c306:  lea    0x1636f3(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   6c30d:  mov    0x10(%rsp),%rcx
    0.00 :   6c312:  mov    %rax,%r14
    0.00 :   6c315:  mov    %rax,0x90(%rsp)
    0.00 :   6c31d:  mov    %rax,%rbp
    0.00 :   6c320:  mov    0xd8(%rbx),%rax
    0.00 :   6c327:  sub    %r15,%r14
    0.00 :   6c32a:  mov    %rax,%rdx
    0.00 :   6c32d:  sar    $0x2,%r14
    0.00 :   6c331:  sub    %rsi,%rdx
    0.00 :   6c334:  cmp    %rcx,%rdx
    0.00 :   6c337:  jae    6d488 <__vfwprintf_internal+0x16e8>
    0.00 :   6c33d:  mov    %r14,%rdx
    0.00 :   6c340:  mov    %r15,%rsi
    0.00 :   6c343:  mov    %rbx,%rdi
    0.00 :   6c346:  call   *0x38(%rax)
    0.00 :   6c349:  cmp    %rax,%r14
    0.00 :   6c34c:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6c352:  movslq %r12d,%rax
    0.00 :   6c355:  xor    %edx,%edx
    0.00 :   6c357:  add    %r14,%rax
    0.00 :   6c35a:  js     6e31c <__vfwprintf_internal+0x257c>
    0.00 :   6c360:  cmp    %r14,%rax
    0.00 :   6c363:  jb     6e31c <__vfwprintf_internal+0x257c>
    0.00 :   6c369:  movslq %eax,%rcx
    0.00 :   6c36c:  mov    %eax,%r12d
    0.00 :   6c36f:  cmp    %rcx,%rax
    0.00 :   6c372:  mov    $0x1,%ecx
    0.00 :   6c377:  cmovne %ecx,%edx
    0.00 :   6c37a:  test   %edx,%edx
    0.00 :   6c37c:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6c382:  test   %eax,%eax
    0.00 :   6c384:  js     6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6c38a:  mov    0x0(%rbp),%eax
    0.00 :   6c38d:  test   %eax,%eax
    0.00 :   6c38f:  jne    6bf68 <__vfwprintf_internal+0x1c8>
    0.00 :   6c395:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6c39a:  nopw   0x0(%rax,%rax,1)
    0.00 :   6c3a0:  endbr64
    0.00 :   6c3a4:  mov    0x90(%rsp),%rax
    0.00 :   6c3ac:  mov    0x4(%rax),%r14d
    0.00 :   6c3b0:  lea    0x4(%rax),%rdx
    0.00 :   6c3b4:  lea    -0x436(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c3bb:  mov    %rdx,0x90(%rsp)
    0.00 :   6c3c3:  lea    -0x20(%r14),%edx
    0.00 :   6c3c7:  cmp    $0x5a,%edx
    0.00 :   6c3ca:  ja     6da90 <__vfwprintf_internal+0x1cf0>
    0.00 :   6c3d0:  lea    0x1245e9(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6c3d7:  lea    0x124562(%rip),%rsi        # 190940 <step0_jumps.9>
    0.00 :   6c3de:  movl   $0x1,0x28(%rsp)
    0.00 :   6c3e6:  movzbl (%rax,%rdx,1),%eax
    0.00 :   6c3ea:  lea    -0x46c(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c3f1:  movslq (%rsi,%rax,4),%rax
    0.00 :   6c3f5:  add    %rdi,%rax
    0.00 :   6c3f8:  jmp    *%rax
    0.00 :   6c3fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   6c400:  endbr64
    0.00 :   6c404:  mov    0x0(%r13),%eax
    0.00 :   6c408:  cmp    $0x2f,%eax
    0.00 :   6c40b:  ja     6da78 <__vfwprintf_internal+0x1cd8>
    0.00 :   6c411:  mov    %eax,%edx
    0.00 :   6c413:  add    $0x8,%eax
    0.00 :   6c416:  add    0x10(%r13),%rdx
    0.00 :   6c41a:  mov    %eax,0x0(%r13)
    0.00 :   6c41e:  mov    (%rdx),%rbp
    0.00 :   6c421:  xor    $0x1,%r9d
    0.00 :   6c425:  test   %rbp,%rbp
    0.00 :   6c428:  jne    6ca1e <__vfwprintf_internal+0xc7e>
    0.00 :   6c42e:  cmp    $0xffffffff,%r11d
    0.00 :   6c432:  je     6dde7 <__vfwprintf_internal+0x2047>
    0.00 :   6c438:  xor    %eax,%eax
    0.00 :   6c43a:  xor    %r14d,%r14d
    0.00 :   6c43d:  lea    0x134ee4(%rip),%rbp        # 1a1328 <default_rwlockattr+0x338>
    0.00 :   6c444:  cmp    $0x5,%r11d
    0.00 :   6c448:  jg     6dde7 <__vfwprintf_internal+0x2047>
    0.00 :   6c44e:  xchg   %ax,%ax
    0.00 :   6c450:  mov    0x18(%rsp),%r15d
    0.00 :   6c455:  sub    %eax,%r15d
    0.00 :   6c458:  js     6dc60 <__vfwprintf_internal+0x1ec0>
    0.00 :   6c45e:  mov    0x24(%rsp),%edi
    0.00 :   6c462:  test   %edi,%edi
    0.00 :   6c464:  jne    6c46f <__vfwprintf_internal+0x6cf>
    0.00 :   6c466:  test   %r15d,%r15d
    0.00 :   6c469:  jne    6dfe2 <__vfwprintf_internal+0x2242>
    0.00 :   6c46f:  mov    0xd8(%rbx),%rax
    0.00 :   6c476:  lea    0x163583(%rip),%rdi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   6c47d:  mov    0x10(%rsp),%rsi
    0.00 :   6c482:  mov    %rax,%rdx
    0.00 :   6c485:  sub    %rdi,%rdx
    0.00 :   6c488:  cmp    %rsi,%rdx
    0.00 :   6c48b:  jae    6e0f8 <__vfwprintf_internal+0x2358>
    0.00 :   6c491:  mov    %r14,%rdx
    0.00 :   6c494:  mov    %rbp,%rsi
    0.00 :   6c497:  mov    %rbx,%rdi
    0.00 :   6c49a:  call   *0x38(%rax)
    0.00 :   6c49d:  cmp    %rax,%r14
    0.00 :   6c4a0:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6c4a6:  movslq %r12d,%rax
    0.00 :   6c4a9:  xor    %edx,%edx
    0.00 :   6c4ab:  add    %r14,%rax
    0.00 :   6c4ae:  js     6e349 <__vfwprintf_internal+0x25a9>
    0.00 :   6c4b4:  cmp    %r14,%rax
    0.00 :   6c4b7:  jb     6e349 <__vfwprintf_internal+0x25a9>
    0.00 :   6c4bd:  movslq %eax,%rbp
    0.00 :   6c4c0:  mov    $0x1,%ecx
    0.00 :   6c4c5:  mov    %eax,%r12d
    0.00 :   6c4c8:  cmp    %rbp,%rax
    0.00 :   6c4cb:  cmovne %ecx,%edx
    0.00 :   6c4ce:  test   %edx,%edx
    0.00 :   6c4d0:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6c4d6:  test   %eax,%eax
    0.00 :   6c4d8:  js     6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6c4de:  test   %r15d,%r15d
    0.00 :   6c4e1:  je     6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6c4e7:  mov    0x24(%rsp),%esi
    0.00 :   6c4eb:  test   %esi,%esi
    0.00 :   6c4ed:  je     6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6c4f3:  mov    %r15d,%r15d
    0.00 :   6c4f6:  mov    $0x20,%esi
    0.00 :   6c4fb:  mov    %rbx,%rdi
    0.00 :   6c4fe:  mov    %r15,%rdx
    0.00 :   6c501:  call   7a890 <_IO_wpadn>
    0.00 :   6c506:  cmp    %rax,%r15
    0.00 :   6c509:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6c50f:  lea    (%r15,%rbp,1),%rax
    0.00 :   6c513:  movslq %eax,%rdx
    0.00 :   6c516:  mov    %eax,%r12d
    0.00 :   6c519:  cmp    %rdx,%rax
    0.00 :   6c51c:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6c522:  test   %eax,%eax
    0.00 :   6c524:  jns    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6c52a:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6c52f:  nop
    0.00 :   6c530:  endbr64
    0.00 :   6c534:  test   %r9d,%r9d
    0.00 :   6c537:  jne    6c260 <__vfwprintf_internal+0x4c0>
    0.00 :   6c53d:  mov    0x18(%rsp),%ebp
    0.00 :   6c541:  mov    0x24(%rsp),%r8d
    0.00 :   6c546:  sub    $0x1,%ebp
    0.00 :   6c549:  test   %r8d,%r8d
    0.00 :   6c54c:  jne    6c598 <__vfwprintf_internal+0x7f8>
    0.00 :   6c54e:  test   %ebp,%ebp
    0.00 :   6c550:  jle    6c598 <__vfwprintf_internal+0x7f8>
    0.00 :   6c552:  movslq %ebp,%r14
    0.00 :   6c555:  mov    $0x20,%esi
    0.00 :   6c55a:  mov    %rbx,%rdi
    0.00 :   6c55d:  mov    %r14,%rdx
    0.00 :   6c560:  call   7a890 <_IO_wpadn>
    0.00 :   6c565:  cmp    %rax,%r14
    0.00 :   6c568:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6c56e:  xor    %eax,%eax
    0.00 :   6c570:  add    %ebp,%r12d
    0.00 :   6c573:  js     6e33f <__vfwprintf_internal+0x259f>
    0.00 :   6c579:  cmp    %ebp,%r12d
    0.00 :   6c57c:  jb     6e33f <__vfwprintf_internal+0x259f>
    0.00 :   6c582:  test   %eax,%eax
    0.00 :   6c584:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6c58a:  test   %r12d,%r12d
    0.00 :   6c58d:  js     6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6c593:  nopl   0x0(%rax,%rax,1)
    0.00 :   6c598:  mov    0x0(%r13),%eax
    0.00 :   6c59c:  cmp    $0x2f,%eax
    0.00 :   6c59f:  ja     6db08 <__vfwprintf_internal+0x1d68>
    0.00 :   6c5a5:  mov    %eax,%edx
    0.00 :   6c5a7:  add    $0x8,%eax
    0.00 :   6c5aa:  add    0x10(%r13),%rdx
    0.00 :   6c5ae:  mov    %eax,0x0(%r13)
    0.00 :   6c5b2:  movzbl (%rdx),%edi
    0.00 :   6c5b5:  call   b3d60 <btowc>
    0.00 :   6c5ba:  mov    0xa0(%rbx),%rdx
    0.00 :   6c5c1:  test   %rdx,%rdx
    0.00 :   6c5c4:  je     6e0d9 <__vfwprintf_internal+0x2339>
    0.00 :   6c5ca:  mov    0x20(%rdx),%rcx
    0.00 :   6c5ce:  cmp    0x28(%rdx),%rcx
    0.00 :   6c5d2:  jae    6e0d9 <__vfwprintf_internal+0x2339>
    0.00 :   6c5d8:  lea    0x4(%rcx),%rsi
    0.00 :   6c5dc:  mov    %rsi,0x20(%rdx)
    0.00 :   6c5e0:  mov    %eax,(%rcx)
    0.00 :   6c5e2:  cmp    $0xffffffff,%eax
    0.00 :   6c5e5:  jne    6c2c4 <__vfwprintf_internal+0x524>
    0.00 :   6c5eb:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6c5f0:  endbr64
    0.00 :   6c5f4:  mov    0x90(%rsp),%rax
    0.00 :   6c5fc:  mov    0x4(%rax),%r14d
    0.00 :   6c600:  lea    0x4(%rax),%rdx
    0.00 :   6c604:  mov    %rdx,0x90(%rsp)
    0.00 :   6c60c:  lea    -0x20(%r14),%eax
    0.00 :   6c610:  cmp    $0x5a,%eax
    0.00 :   6c613:  ja     6da60 <__vfwprintf_internal+0x1cc0>
    0.00 :   6c619:  lea    0x1243a0(%rip),%rsi        # 1909c0 <jump_table>
    0.00 :   6c620:  lea    -0x6a2(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c627:  movl   $0x1,0x38(%rsp)
    0.00 :   6c62f:  movzbl (%rsi,%rax,1),%eax
    0.00 :   6c633:  lea    0x124306(%rip),%rsi        # 190940 <step0_jumps.9>
    0.00 :   6c63a:  movslq (%rsi,%rax,4),%rax
    0.00 :   6c63e:  add    %rdi,%rax
    0.00 :   6c641:  jmp    *%rax
    0.00 :   6c643:  nopl   0x0(%rax,%rax,1)
    0.00 :   6c648:  endbr64
    0.00 :   6c64c:  mov    0x90(%rsp),%r15
    0.00 :   6c654:  mov    0x4(%r15),%r14d
    0.00 :   6c658:  lea    0x4(%r15),%rax
    0.00 :   6c65c:  mov    %rax,0x90(%rsp)
    0.00 :   6c664:  cmp    $0x2a,%r14d
    0.00 :   6c668:  je     6dd10 <__vfwprintf_internal+0x1f70>
    0.00 :   6c66e:  lea    -0x30(%r14),%eax
    0.00 :   6c672:  xor    %r11d,%r11d
    0.00 :   6c675:  cmp    $0x9,%eax
    0.00 :   6c678:  jbe    6db39 <__vfwprintf_internal+0x1d99>
    0.00 :   6c67e:  lea    -0x20(%r14),%eax
    0.00 :   6c682:  cmp    $0x5a,%eax
    0.00 :   6c685:  ja     6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c68b:  lea    0x12432e(%rip),%rdi        # 1909c0 <jump_table>
    0.00 :   6c692:  lea    -0x714(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c699:  movzbl (%rdi,%rax,1),%edx
    0.00 :   6c69d:  lea    0x12419c(%rip),%rax        # 190840 <step2_jumps.7>
    0.00 :   6c6a4:  movslq (%rax,%rdx,4),%rax
    0.00 :   6c6a8:  add    %rsi,%rax
    0.00 :   6c6ab:  jmp    *%rax
    0.00 :   6c6ad:  nopl   (%rax)
    0.00 :   6c6b0:  endbr64
    0.00 :   6c6b4:  lea    0x90(%rsp),%rdi
    0.00 :   6c6bc:  mov    %r8d,0x80(%rsp)
    0.00 :   6c6c4:  mov    %r9d,0x78(%rsp)
    0.00 :   6c6c9:  mov    %ecx,0x54(%rsp)
    0.00 :   6c6cd:  call   68d80 <read_int>
    0.00 :   6c6d2:  mov    0x54(%rsp),%ecx
    0.00 :   6c6d6:  mov    0x78(%rsp),%r9d
    0.00 :   6c6db:  cmp    $0xffffffff,%eax
    0.00 :   6c6de:  mov    %eax,0x18(%rsp)
    0.00 :   6c6e2:  mov    0x80(%rsp),%r8d
    0.00 :   6c6ea:  je     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6c6f0:  mov    0x90(%rsp),%rax
    0.00 :   6c6f8:  mov    (%rax),%r14d
    0.00 :   6c6fb:  cmp    $0x24,%r14d
    0.00 :   6c6ff:  je     6d930 <__vfwprintf_internal+0x1b90>
    0.00 :   6c705:  lea    -0x20(%r14),%eax
    0.00 :   6c709:  cmp    $0x5a,%eax
    0.00 :   6c70c:  ja     6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c712:  lea    0x1242a7(%rip),%rsi        # 1909c0 <jump_table>
    0.00 :   6c719:  lea    -0x79b(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c720:  movzbl (%rsi,%rax,1),%edx
    7.86 :   6c724:  lea    0x124195(%rip),%rax        # 1908c0 <step1_jumps.8> // libc.so.6[6c724]
    0.00 :   6c72b:  movslq (%rax,%rdx,4),%rax
    8.13 :   6c72f:  add    %rdi,%rax // libc.so.6[6c72f]
    0.00 :   6c732:  jmp    *%rax
    0.00 :   6c734:  nopl   0x0(%rax)
    0.00 :   6c738:  endbr64
    0.00 :   6c73c:  mov    0x90(%rsp),%r15
    0.00 :   6c744:  mov    0x4(%r15),%r14d
    0.00 :   6c748:  lea    0x4(%r15),%rax
    0.00 :   6c74c:  mov    %rax,0x90(%rsp)
    0.00 :   6c754:  mov    %rax,0xb0(%rsp)
    0.00 :   6c75c:  lea    -0x30(%r14),%eax
    0.00 :   6c760:  cmp    $0x9,%eax
    0.00 :   6c763:  jbe    6d8e8 <__vfwprintf_internal+0x1b48>
    0.00 :   6c769:  mov    0x0(%r13),%eax
    0.00 :   6c76d:  cmp    $0x2f,%eax
    0.00 :   6c770:  ja     6daf0 <__vfwprintf_internal+0x1d50>
    0.00 :   6c776:  mov    %eax,%edx
    0.00 :   6c778:  add    $0x8,%eax
    0.00 :   6c77b:  add    0x10(%r13),%rdx
    0.00 :   6c77f:  mov    %eax,0x0(%r13)
    0.00 :   6c783:  mov    0x4(%r15),%r14d
    0.00 :   6c787:  mov    (%rdx),%eax
    0.00 :   6c789:  mov    %eax,0x18(%rsp)
    0.00 :   6c78d:  test   %eax,%eax
    0.00 :   6c78f:  jns    6c7a7 <__vfwprintf_internal+0xa07>
    0.00 :   6c791:  neg    %eax
    0.00 :   6c793:  movl   $0x1,0x24(%rsp)
    0.00 :   6c79b:  mov    %eax,0x18(%rsp)
    0.00 :   6c79f:  movl   $0x20,0x30(%rsp)
    0.00 :   6c7a7:  lea    -0x20(%r14),%eax
    0.00 :   6c7ab:  cmp    $0x5a,%eax
    0.00 :   6c7ae:  ja     6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c7b4:  lea    0x124205(%rip),%rdi        # 1909c0 <jump_table>
    0.00 :   6c7bb:  lea    -0x83d(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c7c2:  movzbl (%rdi,%rax,1),%edx
    0.00 :   6c7c6:  lea    0x1240f3(%rip),%rax        # 1908c0 <step1_jumps.8>
    0.00 :   6c7cd:  movslq (%rax,%rdx,4),%rax
    0.00 :   6c7d1:  add    %rsi,%rax
    0.00 :   6c7d4:  jmp    *%rax
    0.00 :   6c7d6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6c7e0:  endbr64
    0.00 :   6c7e4:  mov    0x90(%rsp),%rax
    0.00 :   6c7ec:  mov    0x4(%rax),%r14d
    0.00 :   6c7f0:  lea    0x4(%rax),%rdx
    0.00 :   6c7f4:  lea    -0x876(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c7fb:  mov    %rdx,0x90(%rsp)
    0.00 :   6c803:  lea    -0x20(%r14),%edx
    0.00 :   6c807:  cmp    $0x5a,%edx
    0.00 :   6c80a:  ja     6dad0 <__vfwprintf_internal+0x1d30>
    0.00 :   6c810:  lea    0x1241a9(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6c817:  lea    0x124122(%rip),%rdi        # 190940 <step0_jumps.9>
    0.00 :   6c81e:  movl   $0x1,0x68(%rsp)
    0.00 :   6c826:  movzbl (%rax,%rdx,1),%eax
    0.00 :   6c82a:  lea    -0x8ac(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c831:  movslq (%rdi,%rax,4),%rax
    0.00 :   6c835:  add    %rsi,%rax
    0.00 :   6c838:  jmp    *%rax
    0.00 :   6c83a:  nopw   0x0(%rax,%rax,1)
    0.00 :   6c840:  endbr64
    0.00 :   6c844:  cmpq   $0xffffffffffffffff,0x58(%rsp)
    0.00 :   6c84a:  je     6dda0 <__vfwprintf_internal+0x2000>
    0.00 :   6c850:  mov    0x90(%rsp),%rax
    0.00 :   6c858:  mov    0x4(%rax),%r14d
    0.00 :   6c85c:  lea    0x4(%rax),%rdx
    0.00 :   6c860:  lea    -0x8e2(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c867:  mov    %rdx,0x90(%rsp)
    0.00 :   6c86f:  lea    -0x20(%r14),%edx
    0.00 :   6c873:  cmp    $0x5a,%edx
    0.00 :   6c876:  ja     6dac8 <__vfwprintf_internal+0x1d28>
    0.00 :   6c87c:  lea    0x12413d(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6c883:  lea    0x1240b6(%rip),%rdi        # 190940 <step0_jumps.9>
    0.00 :   6c88a:  mov    $0x1,%r8d
    0.00 :   6c890:  movzbl (%rax,%rdx,1),%eax
    0.00 :   6c894:  lea    -0x916(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c89b:  movslq (%rdi,%rax,4),%rax
    0.00 :   6c89f:  add    %rsi,%rax
    0.00 :   6c8a2:  jmp    *%rax
    0.00 :   6c8a4:  nopl   0x0(%rax)
    0.00 :   6c8a8:  endbr64
    0.00 :   6c8ac:  mov    0x24(%rsp),%edi
    0.00 :   6c8b0:  mov    $0x30,%eax
    0.00 :   6c8b5:  test   %edi,%edi
    0.00 :   6c8b7:  cmovne 0x30(%rsp),%eax
    0.00 :   6c8bc:  mov    %eax,0x30(%rsp)
    0.00 :   6c8c0:  mov    0x90(%rsp),%rax
    0.00 :   6c8c8:  mov    0x4(%rax),%r14d
    0.00 :   6c8cc:  lea    0x4(%rax),%rdx
    0.00 :   6c8d0:  mov    %rdx,0x90(%rsp)
    0.00 :   6c8d8:  lea    -0x20(%r14),%eax
    0.00 :   6c8dc:  cmp    $0x5a,%eax
    0.00 :   6c8df:  ja     6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c8e5:  lea    0x1240d4(%rip),%rsi        # 1909c0 <jump_table>
    0.00 :   6c8ec:  lea    0x12404d(%rip),%rdi        # 190940 <step0_jumps.9>
    0.00 :   6c8f3:  movzbl (%rsi,%rax,1),%eax
    0.00 :   6c8f7:  lea    -0x979(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c8fe:  movslq (%rdi,%rax,4),%rax
    0.00 :   6c902:  add    %rsi,%rax
    0.00 :   6c905:  jmp    *%rax
    0.00 :   6c907:  nopw   0x0(%rax,%rax,1)
    0.00 :   6c910:  endbr64
    0.00 :   6c914:  mov    0x90(%rsp),%rax
    0.00 :   6c91c:  mov    0x4(%rax),%r14d
    0.00 :   6c920:  lea    0x4(%rax),%rdx
    0.00 :   6c924:  lea    -0x9a6(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c92b:  mov    %rdx,0x90(%rsp)
    0.00 :   6c933:  lea    -0x20(%r14),%edx
    0.00 :   6c937:  cmp    $0x5a,%edx
    0.00 :   6c93a:  ja     6dae0 <__vfwprintf_internal+0x1d40>
    0.00 :   6c940:  lea    0x124079(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6c947:  lea    0x123ff2(%rip),%rsi        # 190940 <step0_jumps.9>
    0.00 :   6c94e:  movl   $0x1,0x40(%rsp)
    0.00 :   6c956:  movzbl (%rax,%rdx,1),%eax
    0.00 :   6c95a:  lea    -0x9dc(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c961:  movslq (%rsi,%rax,4),%rax
    0.00 :   6c965:  add    %rdi,%rax
    0.00 :   6c968:  jmp    *%rax
    0.00 :   6c96a:  nopw   0x0(%rax,%rax,1)
    0.00 :   6c970:  endbr64
    0.00 :   6c974:  mov    0x90(%rsp),%rax
    0.00 :   6c97c:  mov    0x4(%rax),%r14d
    0.00 :   6c980:  lea    0x4(%rax),%rdx
    0.00 :   6c984:  lea    -0xa06(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c98b:  mov    %rdx,0x90(%rsp)
    0.00 :   6c993:  lea    -0x20(%r14),%edx
    0.00 :   6c997:  cmp    $0x5a,%edx
    0.00 :   6c99a:  ja     6c9bc <__vfwprintf_internal+0xc1c>
    0.00 :   6c99c:  lea    0x12401d(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6c9a3:  lea    0x123f96(%rip),%rsi        # 190940 <step0_jumps.9>
    0.00 :   6c9aa:  movzbl (%rax,%rdx,1),%eax
    0.00 :   6c9ae:  lea    -0xa30(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6c9b5:  movslq (%rsi,%rax,4),%rax
    0.00 :   6c9b9:  add    %rdi,%rax
    0.00 :   6c9bc:  movl   $0x1,0x24(%rsp)
    0.00 :   6c9c4:  movl   $0x20,0x30(%rsp)
    0.00 :   6c9cc:  jmp    *%rax
    0.00 :   6c9ce:  xchg   %ax,%ax
    0.00 :   6c9d0:  endbr64
    0.00 :   6c9d4:  mov    0x40(%rsp),%r9d
    0.00 :   6c9d9:  mov    %r8d,0x78(%rsp)
    0.00 :   6c9de:  mov    %r11d,0x54(%rsp)
    0.00 :   6c9e3:  test   %r9d,%r9d
    0.00 :   6c9e6:  jne    6da30 <__vfwprintf_internal+0x1c90>
    0.00 :   6c9ec:  mov    0x64(%rsp),%edi
    0.00 :   6c9f0:  lea    0x110(%rsp),%rsi
    0.00 :   6c9f8:  mov    $0x3e8,%edx
    0.00 :   6c9fd:  call   9d370 <__strerror_r>
    0.00 :   6ca02:  mov    0x78(%rsp),%r8d
    0.00 :   6ca07:  mov    0x54(%rsp),%r11d
    0.00 :   6ca0c:  mov    %rax,%rbp
    0.00 :   6ca0f:  mov    $0x1,%r9d
    0.00 :   6ca15:  test   %rbp,%rbp
    0.00 :   6ca18:  je     6ddfe <__vfwprintf_internal+0x205e>
    0.00 :   6ca1e:  cmp    $0x53,%r14d
    0.00 :   6ca22:  je     6dba0 <__vfwprintf_internal+0x1e00>
    0.00 :   6ca28:  test   %r9b,%r9b
    0.00 :   6ca2b:  je     6dba0 <__vfwprintf_internal+0x1e00>
    0.00 :   6ca31:  mov    0x24(%rsp),%r8d
    0.00 :   6ca36:  mov    0x18(%rsp),%ecx
    0.00 :   6ca3a:  mov    %r12d,%r9d
    0.00 :   6ca3d:  mov    %r11d,%edx
    0.00 :   6ca40:  mov    %rbp,%rsi
    0.00 :   6ca43:  mov    %rbx,%rdi
    0.00 :   6ca46:  call   691a0 <outstring_converted_wide_string>
    0.00 :   6ca4b:  mov    %eax,%r12d
    0.00 :   6ca4e:  test   %eax,%eax
    0.00 :   6ca50:  jns    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6ca56:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6ca5b:  nopl   0x0(%rax,%rax,1)
    0.00 :   6ca60:  endbr64
    0.00 :   6ca64:  testb  $0x2,0x44(%rsp)
    0.00 :   6ca69:  je     6cac0 <__vfwprintf_internal+0xd20>
    0.00 :   6ca6b:  mov    0x70(%rsp),%r10d
    0.00 :   6ca70:  test   %r10d,%r10d
    0.00 :   6ca73:  jne    6cac0 <__vfwprintf_internal+0xd20>
    0.00 :   6ca75:  mov    0x8(%rsp),%r15
    0.00 :   6ca7a:  mov    %r9d,0x24(%rsp)
    0.00 :   6ca7f:  mov    %ecx,0x18(%rsp)
    0.00 :   6ca83:  mov    %r15,%rdi
    0.00 :   6ca86:  call   26650 <*ABS*+0xb36b0@plt>
    0.00 :   6ca8b:  mov    %r15,%rdi
    0.00 :   6ca8e:  lea    0x4(,%rax,4),%rsi
    0.00 :   6ca96:  call   11a410 <__readonly_area>
    0.00 :   6ca9b:  mov    0x18(%rsp),%ecx
    0.00 :   6ca9f:  mov    0x24(%rsp),%r9d
    0.00 :   6caa4:  test   %eax,%eax
    0.00 :   6caa6:  mov    %eax,0x70(%rsp)
    0.00 :   6caaa:  jns    6cac0 <__vfwprintf_internal+0xd20>
    0.00 :   6caac:  lea    0x12f62d(%rip),%rdi        # 19c0e0 <aliasfile.0+0x698>
    0.00 :   6cab3:  call   810e0 <__libc_fatal>
    0.00 :   6cab8:  nopl   0x0(%rax,%rax,1)
    0.00 :   6cac0:  mov    0x0(%r13),%eax
    0.00 :   6cac4:  cmp    $0x2f,%eax
    0.00 :   6cac7:  ja     6da18 <__vfwprintf_internal+0x1c78>
    0.00 :   6cacd:  mov    %eax,%edx
    0.00 :   6cacf:  add    $0x8,%eax
    0.00 :   6cad2:  add    0x10(%r13),%rdx
    0.00 :   6cad6:  mov    %eax,0x0(%r13)
    0.00 :   6cada:  mov    (%rdx),%rax
    0.00 :   6cadd:  test   %r9d,%r9d
    0.00 :   6cae0:  je     6dbe0 <__vfwprintf_internal+0x1e40>
    0.00 :   6cae6:  movslq %r12d,%rdx
    0.00 :   6cae9:  mov    %rdx,(%rax)
    0.00 :   6caec:  jmp    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6caf1:  nopl   0x0(%rax)
    0.00 :   6caf8:  endbr64
    0.00 :   6cafc:  mov    0x0(%r13),%eax
    0.00 :   6cb00:  cmp    $0x2f,%eax
    0.00 :   6cb03:  ja     6da00 <__vfwprintf_internal+0x1c60>
    0.00 :   6cb09:  mov    %eax,%edx
    0.00 :   6cb0b:  add    $0x8,%eax
    0.00 :   6cb0e:  add    0x10(%r13),%rdx
    0.00 :   6cb12:  mov    %eax,0x0(%r13)
    0.00 :   6cb16:  mov    (%rdx),%r10
    0.00 :   6cb19:  test   %r10,%r10
    0.00 :   6cb1c:  je     6dbb6 <__vfwprintf_internal+0x1e16>
    0.00 :   6cb22:  movl   $0x1,0x40(%rsp)
    0.00 :   6cb2a:  xor    %r8d,%r8d
    0.00 :   6cb2d:  xor    %r9d,%r9d
    0.00 :   6cb30:  mov    $0x78,%r14d
    0.00 :   6cb36:  movl   $0x10,0x54(%rsp)
    0.00 :   6cb3e:  jmp    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6cb40:  endbr64
    0.00 :   6cb44:  movl   $0x2,0x54(%rsp)
    0.00 :   6cb4c:  mov    0x0(%r13),%eax
    0.00 :   6cb50:  test   %r9d,%r9d
    0.00 :   6cb53:  je     6d2b8 <__vfwprintf_internal+0x1518>
    0.00 :   6cb59:  cmp    $0x2f,%eax
    0.00 :   6cb5c:  ja     6d578 <__vfwprintf_internal+0x17d8>
    0.00 :   6cb62:  mov    %eax,%edx
    0.00 :   6cb64:  add    $0x8,%eax
    0.00 :   6cb67:  add    0x10(%r13),%rdx
    0.00 :   6cb6b:  mov    %eax,0x0(%r13)
    0.00 :   6cb6f:  movl   $0x0,0x28(%rsp)
    0.00 :   6cb77:  mov    (%rdx),%r10
    0.00 :   6cb7a:  xor    %r9d,%r9d
    0.00 :   6cb7d:  movl   $0x0,0x38(%rsp)
    0.00 :   6cb85:  test   %r11d,%r11d
    0.00 :   6cb88:  js     6d268 <__vfwprintf_internal+0x14c8>
    0.00 :   6cb8e:  je     6d2f0 <__vfwprintf_internal+0x1550>
    0.00 :   6cb94:  movl   $0x20,0x30(%rsp)
    0.00 :   6cb9c:  movslq %r11d,%r15
    0.00 :   6cb9f:  lea    0x122b7a(%rip),%rax        # 18f720 <_itowa_upper_digits>
    0.00 :   6cba6:  cmp    $0x58,%r14d
    0.00 :   6cbaa:  lea    0x122c0f(%rip),%rdi        # 18f7c0 <_itowa_lower_digits>
    0.00 :   6cbb1:  cmove  %rax,%rdi
    0.00 :   6cbb5:  mov    0x54(%rsp),%eax
    0.00 :   6cbb9:  cmp    $0xa,%eax
    0.00 :   6cbbc:  je     6d418 <__vfwprintf_internal+0x1678>
    0.00 :   6cbc2:  cmp    $0x10,%eax
    0.00 :   6cbc5:  je     6d340 <__vfwprintf_internal+0x15a0>
    0.00 :   6cbcb:  cmp    $0x8,%eax
    0.00 :   6cbce:  lea    0x4f8(%rsp),%r11
    0.00 :   6cbd6:  mov    %r10,%rax
    0.00 :   6cbd9:  mov    %r11,%rbp
    0.00 :   6cbdc:  je     6cda0 <__vfwprintf_internal+0x1000>
    0.00 :   6cbe2:  mov    %rax,%rdx
    0.00 :   6cbe5:  sub    $0x4,%rbp
    0.00 :   6cbe9:  and    $0x1,%edx
    0.00 :   6cbec:  mov    (%rdi,%rdx,4),%edx
    0.00 :   6cbef:  mov    %edx,0x0(%rbp)
    0.00 :   6cbf2:  mov    %rax,%rdx
    0.00 :   6cbf5:  shr    %rax
    0.00 :   6cbf8:  cmp    $0x1,%rdx
    0.00 :   6cbfc:  ja     6cbe2 <__vfwprintf_internal+0xe42>
    0.00 :   6cbfe:  cmpq   $0x0,0x58(%rsp)
    0.00 :   6cc04:  je     6d0a8 <__vfwprintf_internal+0x1308>
    0.00 :   6cc0a:  test   %r8d,%r8d
    0.00 :   6cc0d:  je     6d0a8 <__vfwprintf_internal+0x1308>
    0.00 :   6cc13:  mov    0x74(%rsp),%r8d
    0.00 :   6cc18:  mov    0x58(%rsp),%rcx
    0.00 :   6cc1d:  mov    %r11,%rdx
    0.00 :   6cc20:  mov    %rbp,%rsi
    0.00 :   6cc23:  lea    0x110(%rsp),%rdi
    0.00 :   6cc2b:  mov    %r10,0x88(%rsp)
    0.00 :   6cc33:  mov    %r9d,0x80(%rsp)
    0.00 :   6cc3b:  mov    %r11,0x78(%rsp)
    0.00 :   6cc40:  call   68f10 <group_number>
    0.00 :   6cc45:  mov    0x88(%rsp),%r10
    0.00 :   6cc4d:  mov    0x78(%rsp),%r11
    0.00 :   6cc52:  mov    0x80(%rsp),%r9d
    0.00 :   6cc5a:  mov    %rax,%rbp
    0.00 :   6cc5d:  cmpl   $0xa,0x54(%rsp)
    0.00 :   6cc62:  jne    6d0a8 <__vfwprintf_internal+0x1308>
    0.00 :   6cc68:  mov    0x68(%rsp),%ecx
    0.00 :   6cc6c:  test   %ecx,%ecx
    0.00 :   6cc6e:  je     6d0a8 <__vfwprintf_internal+0x1308>
    0.00 :   6cc74:  mov    %r11,%rdx
    0.00 :   6cc77:  mov    %r11,%rsi
    0.00 :   6cc7a:  mov    %rbp,%rdi
    0.00 :   6cc7d:  mov    %r9d,0x78(%rsp)
    0.00 :   6cc82:  mov    %r10,0x80(%rsp)
    0.00 :   6cc8a:  mov    %r11,0x68(%rsp)
    0.00 :   6cc8f:  call   69020 <_i18n_number_rewrite>
    0.00 :   6cc94:  mov    0x68(%rsp),%rcx
    0.00 :   6cc99:  mov    $0x0,%edx
    0.00 :   6cc9e:  mov    0x78(%rsp),%r9d
    0.00 :   6cca3:  mov    %rax,%rbp
    0.00 :   6cca6:  mov    0x80(%rsp),%r10
    0.00 :   6ccae:  sub    %rax,%rcx
    0.00 :   6ccb1:  mov    %rcx,%rax
    0.00 :   6ccb4:  sar    $0x2,%rax
    0.00 :   6ccb8:  sub    %rax,%r15
    0.00 :   6ccbb:  cmovns %r15,%rdx
    0.00 :   6ccbf:  mov    %edx,%r11d
    0.00 :   6ccc2:  mov    0x24(%rsp),%eax
    0.00 :   6ccc6:  test   %eax,%eax
    0.00 :   6ccc8:  jne    6d0ea <__vfwprintf_internal+0x134a>
    0.00 :   6ccce:  mov    0x18(%rsp),%r8d
    0.00 :   6ccd3:  sar    $0x2,%rcx
    0.00 :   6ccd7:  mov    %rcx,%r15
    0.00 :   6ccda:  sub    %edx,%r8d
    0.00 :   6ccdd:  sub    %ecx,%r8d
    0.00 :   6cce0:  test   %r10,%r10
    0.00 :   6cce3:  setne  %r10b
    0.00 :   6cce7:  and    0x40(%rsp),%r10b
    0.00 :   6ccec:  jne    6d7d0 <__vfwprintf_internal+0x1a30>
    0.00 :   6ccf2:  mov    0x38(%rsp),%eax
    0.00 :   6ccf6:  or     %r9d,%eax
    0.00 :   6ccf9:  or     0x28(%rsp),%eax
    0.00 :   6ccfd:  jne    6d378 <__vfwprintf_internal+0x15d8>
    0.00 :   6cd03:  cmpl   $0x20,0x30(%rsp)
    0.00 :   6cd08:  je     6dd8f <__vfwprintf_internal+0x1fef>
    0.00 :   6cd0e:  test   %r10b,%r10b
    0.00 :   6cd11:  jne    6d620 <__vfwprintf_internal+0x1880>
    0.00 :   6cd17:  lea    (%r8,%r11,1),%r14d
    0.00 :   6cd1b:  test   %r14d,%r14d
    0.00 :   6cd1e:  jg     6d4a0 <__vfwprintf_internal+0x1700>
    0.00 :   6cd24:  mov    0xd8(%rbx),%r14
    0.00 :   6cd2b:  lea    0x162cce(%rip),%rdi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   6cd32:  mov    0x10(%rsp),%rsi
    0.00 :   6cd37:  mov    %r14,%rax
    0.00 :   6cd3a:  sub    %rdi,%rax
    0.00 :   6cd3d:  cmp    %rsi,%rax
    0.00 :   6cd40:  jae    6de78 <__vfwprintf_internal+0x20d8>
    0.00 :   6cd46:  mov    %r15,%rdx
    0.00 :   6cd49:  mov    %rbp,%rsi
    0.00 :   6cd4c:  mov    %rbx,%rdi
    0.00 :   6cd4f:  call   *0x38(%r14)
    0.00 :   6cd53:  cmp    %rax,%r15
    0.00 :   6cd56:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6cd5c:  movslq %r12d,%r12
    0.00 :   6cd5f:  xor    %eax,%eax
    0.00 :   6cd61:  add    %r12,%r15
    0.00 :   6cd64:  js     6e32b <__vfwprintf_internal+0x258b>
    0.00 :   6cd6a:  cmp    %r12,%r15
    0.00 :   6cd6d:  jb     6e32b <__vfwprintf_internal+0x258b>
    0.00 :   6cd73:  movslq %r15d,%rdx
    0.00 :   6cd76:  mov    %r15d,%r12d
    0.00 :   6cd79:  cmp    %rdx,%r15
    0.00 :   6cd7c:  mov    $0x1,%edx
    0.00 :   6cd81:  cmovne %edx,%eax
    0.00 :   6cd84:  test   %eax,%eax
    0.00 :   6cd86:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6cd8c:  test   %r15d,%r15d
    0.00 :   6cd8f:  jns    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6cd95:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6cd9a:  nopw   0x0(%rax,%rax,1)
    0.00 :   6cda0:  mov    %rax,%rdx
    0.00 :   6cda3:  sub    $0x4,%rbp
    0.00 :   6cda7:  and    $0x7,%edx
    0.00 :   6cdaa:  mov    (%rdi,%rdx,4),%edx
    0.00 :   6cdad:  mov    %edx,0x0(%rbp)
    0.00 :   6cdb0:  mov    %rax,%rdx
    0.00 :   6cdb3:  shr    $0x3,%rax
    0.00 :   6cdb7:  cmp    $0x7,%rdx
    0.00 :   6cdbb:  ja     6cda0 <__vfwprintf_internal+0x1000>
    0.00 :   6cdbd:  jmp    6cbfe <__vfwprintf_internal+0xe5e>
    0.00 :   6cdc2:  nopw   0x0(%rax,%rax,1)
    0.00 :   6cdc8:  endbr64
    0.00 :   6cdcc:  movl   $0x10,0x54(%rsp)
    0.00 :   6cdd4:  jmp    6cb4c <__vfwprintf_internal+0xdac>
    0.00 :   6cdd9:  nopl   0x0(%rax)
    0.00 :   6cde0:  endbr64
    0.00 :   6cde4:  movl   $0x8,0x54(%rsp)
    0.00 :   6cdec:  jmp    6cb4c <__vfwprintf_internal+0xdac>
    0.00 :   6cdf1:  nopl   0x0(%rax)
    0.00 :   6cdf8:  endbr64
    0.00 :   6cdfc:  mov    0x90(%rsp),%rax
    0.00 :   6ce04:  mov    0x4(%rax),%r14d
    0.00 :   6ce08:  lea    0x4(%rax),%rdx
    0.00 :   6ce0c:  lea    -0xe8e(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6ce13:  mov    %rdx,0x90(%rsp)
    0.00 :   6ce1b:  lea    -0x20(%r14),%edx
    0.00 :   6ce1f:  cmp    $0x5a,%edx
    0.00 :   6ce22:  ja     6d9f0 <__vfwprintf_internal+0x1c50>
    0.00 :   6ce28:  lea    0x123b91(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6ce2f:  lea    -0xeb1(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6ce36:  mov    $0x1,%r9d
    0.00 :   6ce3c:  mov    $0x1,%r10d
    0.00 :   6ce42:  movzbl (%rax,%rdx,1),%edx
    0.00 :   6ce46:  lea    0x1238f3(%rip),%rax        # 190740 <step4_jumps.5>
    0.00 :   6ce4d:  movslq (%rax,%rdx,4),%rax
    0.00 :   6ce51:  add    %rsi,%rax
    0.00 :   6ce54:  jmp    *%rax
    0.00 :   6ce56:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6ce60:  endbr64
    0.00 :   6ce64:  mov    0x90(%rsp),%rax
    0.00 :   6ce6c:  mov    0x4(%rax),%r14d
    0.00 :   6ce70:  lea    0x4(%rax),%rdx
    0.00 :   6ce74:  lea    -0xef6(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6ce7b:  mov    %rdx,0x90(%rsp)
    0.00 :   6ce83:  lea    -0x20(%r14),%edx
    0.00 :   6ce87:  cmp    $0x5a,%edx
    0.00 :   6ce8a:  ja     6d9e0 <__vfwprintf_internal+0x1c40>
    0.00 :   6ce90:  lea    0x123b29(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6ce97:  lea    -0xf19(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6ce9e:  mov    $0x1,%r9d
    0.00 :   6cea4:  movzbl (%rax,%rdx,1),%edx
    0.00 :   6cea8:  lea    0x123811(%rip),%rax        # 1906c0 <step3b_jumps.4>
    0.00 :   6ceaf:  movslq (%rax,%rdx,4),%rax
    0.00 :   6ceb3:  add    %rdi,%rax
    0.00 :   6ceb6:  jmp    *%rax
    0.00 :   6ceb8:  nopl   0x0(%rax,%rax,1)
    0.00 :   6cec0:  endbr64
    0.00 :   6cec4:  mov    0x90(%rsp),%rax
    0.00 :   6cecc:  mov    0x4(%rax),%r14d
    0.00 :   6ced0:  lea    0x4(%rax),%rdx
    0.00 :   6ced4:  lea    -0xf56(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6cedb:  mov    %rdx,0x90(%rsp)
    0.00 :   6cee3:  lea    -0x20(%r14),%edx
    0.00 :   6cee7:  cmp    $0x5a,%edx
    0.00 :   6ceea:  ja     6d9d0 <__vfwprintf_internal+0x1c30>
    0.00 :   6cef0:  lea    0x123ac9(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6cef7:  lea    -0xf79(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6cefe:  mov    $0x1,%ecx
    0.00 :   6cf03:  xor    %ebp,%ebp
    0.00 :   6cf05:  movzbl (%rax,%rdx,1),%edx
    0.00 :   6cf09:  lea    0x123830(%rip),%rax        # 190740 <step4_jumps.5>
    0.00 :   6cf10:  movslq (%rax,%rdx,4),%rax
    0.00 :   6cf14:  add    %rsi,%rax
    0.00 :   6cf17:  jmp    *%rax
    0.00 :   6cf19:  nopl   0x0(%rax)
    0.00 :   6cf20:  endbr64
    0.00 :   6cf24:  mov    0x90(%rsp),%rax
    0.00 :   6cf2c:  mov    0x4(%rax),%r14d
    0.00 :   6cf30:  lea    0x4(%rax),%rdx
    0.00 :   6cf34:  lea    -0xfb6(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6cf3b:  mov    %rdx,0x90(%rsp)
    0.00 :   6cf43:  lea    -0x20(%r14),%edx
    0.00 :   6cf47:  cmp    $0x5a,%edx
    0.00 :   6cf4a:  ja     6da50 <__vfwprintf_internal+0x1cb0>
    0.00 :   6cf50:  lea    0x123a69(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6cf57:  lea    -0xfd9(%rip),%rdi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6cf5e:  mov    $0x1,%ebp
    0.00 :   6cf63:  movzbl (%rax,%rdx,1),%edx
    0.00 :   6cf67:  lea    0x123852(%rip),%rax        # 1907c0 <step3a_jumps.6>
    0.00 :   6cf6e:  movslq (%rax,%rdx,4),%rax
    0.00 :   6cf72:  add    %rdi,%rax
    0.00 :   6cf75:  jmp    *%rax
    0.00 :   6cf77:  nopw   0x0(%rax,%rax,1)
    0.00 :   6cf80:  endbr64
    0.00 :   6cf84:  mov    0x90(%rsp),%rax
    0.00 :   6cf8c:  mov    0x4(%rax),%r14d
    0.00 :   6cf90:  lea    0x4(%rax),%rdx
    0.00 :   6cf94:  lea    -0x1016(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6cf9b:  mov    %rdx,0x90(%rsp)
    0.00 :   6cfa3:  lea    -0x20(%r14),%edx
    0.00 :   6cfa7:  cmp    $0x5a,%edx
    0.00 :   6cfaa:  ja     6cfe0 <__vfwprintf_internal+0x1240>
    0.00 :   6cfac:  lea    0x123a0d(%rip),%rax        # 1909c0 <jump_table>
    0.00 :   6cfb3:  lea    -0x1035(%rip),%rsi        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6cfba:  mov    $0x1,%r9d
    0.00 :   6cfc0:  xor    %r10d,%r10d
    0.00 :   6cfc3:  movzbl (%rax,%rdx,1),%edx
    0.00 :   6cfc7:  lea    0x123772(%rip),%rax        # 190740 <step4_jumps.5>
    0.00 :   6cfce:  movslq (%rax,%rdx,4),%rax
    0.00 :   6cfd2:  add    %rsi,%rax
    0.00 :   6cfd5:  jmp    *%rax
    0.00 :   6cfd7:  nopw   0x0(%rax,%rax,1)
    0.00 :   6cfe0:  mov    $0x1,%r9d
    0.00 :   6cfe6:  xor    %r10d,%r10d
    0.00 :   6cfe9:  jmp    *%rax
    0.00 :   6cfeb:  nopl   0x0(%rax,%rax,1)
    0.00 :   6cff0:  endbr64
    0.00 :   6cff4:  mov    0xa0(%rbx),%rax
    0.00 :   6cffb:  test   %rax,%rax
    0.00 :   6cffe:  je     6e03a <__vfwprintf_internal+0x229a>
    0.00 :   6d004:  mov    0x20(%rax),%rdx
    0.00 :   6d008:  cmp    0x28(%rax),%rdx
    0.00 :   6d00c:  jae    6e03a <__vfwprintf_internal+0x229a>
    0.00 :   6d012:  lea    0x4(%rdx),%rcx
    0.00 :   6d016:  mov    %rcx,0x20(%rax)
    0.00 :   6d01a:  movl   $0x25,(%rdx)
    0.00 :   6d020:  cmp    $0x7fffffff,%r12d
    0.00 :   6d027:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d02d:  add    $0x1,%r12d
    0.00 :   6d031:  jmp    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6d036:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6d040:  endbr64
    0.00 :   6d044:  movl   $0xa,0x54(%rsp)
    0.00 :   6d04c:  jmp    6cb4c <__vfwprintf_internal+0xdac>
    0.00 :   6d051:  nopl   0x0(%rax)
    0.00 :   6d058:  endbr64
    0.00 :   6d05c:  mov    0x0(%r13),%eax
    0.00 :   6d060:  test   %r9d,%r9d
    0.00 :   6d063:  jne    6d9a8 <__vfwprintf_internal+0x1c08>
    0.00 :   6d069:  test   %ecx,%ecx
    0.00 :   6d06b:  je     6df9b <__vfwprintf_internal+0x21fb>
    0.00 :   6d071:  cmp    $0x2f,%eax
    0.00 :   6d074:  ja     6e0bf <__vfwprintf_internal+0x231f>
    0.00 :   6d07a:  mov    %eax,%edx
    0.00 :   6d07c:  add    $0x8,%eax
    0.00 :   6d07f:  add    0x10(%r13),%rdx
    0.00 :   6d083:  mov    %eax,0x0(%r13)
    0.00 :   6d087:  movsbq (%rdx),%r10
    0.00 :   6d08b:  test   %r10,%r10
    0.00 :   6d08e:  js     6dc40 <__vfwprintf_internal+0x1ea0>
    0.00 :   6d094:  movl   $0xa,0x54(%rsp)
    0.00 :   6d09c:  xor    %r9d,%r9d
    0.00 :   6d09f:  jmp    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6d0a4:  nopl   0x0(%rax)
    0.00 :   6d0a8:  test   %r10,%r10
    0.00 :   6d0ab:  mov    %r11,%rcx
    0.00 :   6d0ae:  setne  %dl
    0.00 :   6d0b1:  sub    %rbp,%rcx
    0.00 :   6d0b4:  mov    %rcx,%rax
    0.00 :   6d0b7:  sar    $0x2,%rax
    0.00 :   6d0bb:  cmp    %r15,%rax
    0.00 :   6d0be:  jl     6d0c8 <__vfwprintf_internal+0x1328>
    0.00 :   6d0c0:  test   %dl,%dl
    0.00 :   6d0c2:  jne    6d5d0 <__vfwprintf_internal+0x1830>
    0.00 :   6d0c8:  mov    %rcx,%rax
    0.00 :   6d0cb:  mov    $0x0,%edx
    0.00 :   6d0d0:  sar    $0x2,%rax
    0.00 :   6d0d4:  sub    %rax,%r15
    0.00 :   6d0d7:  mov    0x24(%rsp),%eax
    0.00 :   6d0db:  cmovns %r15,%rdx
    0.00 :   6d0df:  mov    %edx,%r11d
    0.00 :   6d0e2:  test   %eax,%eax
    0.00 :   6d0e4:  je     6ccce <__vfwprintf_internal+0xf2e>
    0.00 :   6d0ea:  test   %r9d,%r9d
    0.00 :   6d0ed:  je     6d3d8 <__vfwprintf_internal+0x1638>
    0.00 :   6d0f3:  mov    0xa0(%rbx),%rax
    0.00 :   6d0fa:  test   %rax,%rax
    0.00 :   6d0fd:  je     6de82 <__vfwprintf_internal+0x20e2>
    0.00 :   6d103:  mov    0x20(%rax),%rsi
    0.00 :   6d107:  cmp    0x28(%rax),%rsi
    0.00 :   6d10b:  jae    6de82 <__vfwprintf_internal+0x20e2>
    0.00 :   6d111:  lea    0x4(%rsi),%rdi
    0.00 :   6d115:  mov    %rdi,0x20(%rax)
    0.00 :   6d119:  movl   $0x2d,(%rsi)
    0.00 :   6d11f:  cmp    $0x7fffffff,%r12d
    0.00 :   6d126:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d12c:  subl   $0x1,0x18(%rsp)
    0.00 :   6d131:  add    $0x1,%r12d
    0.00 :   6d135:  test   %r10,%r10
    0.00 :   6d138:  je     6d148 <__vfwprintf_internal+0x13a8>
    0.00 :   6d13a:  mov    0x40(%rsp),%r15d
    0.00 :   6d13f:  test   %r15d,%r15d
    0.00 :   6d142:  jne    6d7f0 <__vfwprintf_internal+0x1a50>
    0.00 :   6d148:  sar    $0x2,%rcx
    0.00 :   6d14c:  mov    0x18(%rsp),%r14d
    0.00 :   6d151:  lea    (%rcx,%rdx,1),%eax
    0.00 :   6d154:  mov    %rcx,%r15
    0.00 :   6d157:  sub    %eax,%r14d
    0.00 :   6d15a:  test   %r11d,%r11d
    0.00 :   6d15d:  jle    6d1b1 <__vfwprintf_internal+0x1411>
    0.00 :   6d15f:  movslq %r11d,%rdx
    0.00 :   6d162:  mov    $0x30,%esi
    0.00 :   6d167:  mov    %rbx,%rdi
    0.00 :   6d16a:  mov    %r11d,0x24(%rsp)
    0.00 :   6d16f:  mov    %rdx,0x18(%rsp)
    0.00 :   6d174:  call   7a890 <_IO_wpadn>
    0.00 :   6d179:  mov    0x18(%rsp),%rdx
    0.00 :   6d17e:  cmp    %rax,%rdx
    0.00 :   6d181:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d187:  mov    0x24(%rsp),%r11d
    0.00 :   6d18c:  xor    %eax,%eax
    0.00 :   6d18e:  add    %r11d,%r12d
    0.00 :   6d191:  js     6e371 <__vfwprintf_internal+0x25d1>
    0.00 :   6d197:  cmp    %edx,%r12d
    0.00 :   6d19a:  jb     6e371 <__vfwprintf_internal+0x25d1>
    0.00 :   6d1a0:  test   %eax,%eax
    0.00 :   6d1a2:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d1a8:  test   %r12d,%r12d
    0.00 :   6d1ab:  js     6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6d1b1:  mov    0xd8(%rbx),%rax
    0.00 :   6d1b8:  lea    0x162841(%rip),%rdi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   6d1bf:  mov    0x10(%rsp),%rsi
    0.00 :   6d1c4:  mov    %rax,%rdx
    0.00 :   6d1c7:  sub    %rdi,%rdx
    0.00 :   6d1ca:  cmp    %rsi,%rdx
    0.00 :   6d1cd:  jae    6de25 <__vfwprintf_internal+0x2085>
    0.00 :   6d1d3:  mov    %r15,%rdx
    0.00 :   6d1d6:  mov    %rbp,%rsi
    0.00 :   6d1d9:  mov    %rbx,%rdi
    0.00 :   6d1dc:  call   *0x38(%rax)
    0.00 :   6d1df:  cmp    %r15,%rax
    0.00 :   6d1e2:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d1e8:  movslq %r12d,%rax
    0.00 :   6d1eb:  xor    %edx,%edx
    0.00 :   6d1ed:  add    %r15,%rax
    0.00 :   6d1f0:  js     6e335 <__vfwprintf_internal+0x2595>
    0.00 :   6d1f6:  cmp    %r15,%rax
    0.00 :   6d1f9:  jb     6e335 <__vfwprintf_internal+0x2595>
    0.00 :   6d1ff:  movslq %eax,%rbp
    0.00 :   6d202:  mov    $0x1,%ecx
    0.00 :   6d207:  mov    %eax,%r12d
    0.00 :   6d20a:  cmp    %rbp,%rax
    0.00 :   6d20d:  cmovne %ecx,%edx
    0.00 :   6d210:  test   %edx,%edx
    0.00 :   6d212:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d218:  test   %eax,%eax
    0.00 :   6d21a:  js     6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6d220:  test   %r14d,%r14d
    0.00 :   6d223:  jle    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6d229:  mov    %r14,%rdx
    0.00 :   6d22c:  mov    $0x20,%esi
    0.00 :   6d231:  mov    %rbx,%rdi
    0.00 :   6d234:  call   7a890 <_IO_wpadn>
    0.00 :   6d239:  cmp    %rax,%r14
    0.00 :   6d23c:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d242:  add    %rbp,%r14
    0.00 :   6d245:  movslq %r14d,%rax
    0.00 :   6d248:  mov    %r14d,%r12d
    0.00 :   6d24b:  cmp    %rax,%r14
    0.00 :   6d24e:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d254:  test   %r14d,%r14d
    0.00 :   6d257:  jns    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6d25d:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6d262:  nopw   0x0(%rax,%rax,1)
    7.48 :   6d268:  mov    $0x1,%r15d // libc.so.6[6d268]
    0.00 :   6d26e:  jmp    6cb9f <__vfwprintf_internal+0xdff>
    0.00 :   6d273:  nopl   0x0(%rax,%rax,1)
    0.00 :   6d278:  mov    0x4f8(%rsp),%rax
    0.00 :   6d280:  sub    %fs:0x28,%rax
    0.00 :   6d289:  jne    6e326 <__vfwprintf_internal+0x2586>
    0.00 :   6d28f:  mov    0x44(%rsp),%ecx
    0.00 :   6d293:  mov    0x8(%rsp),%rsi
    0.00 :   6d298:  mov    %r13,%rdx
    0.00 :   6d29b:  mov    %rbx,%rdi
    0.00 :   6d29e:  add    $0x508,%rsp
    0.00 :   6d2a5:  pop    %rbx
    0.00 :   6d2a6:  pop    %rbp
    0.00 :   6d2a7:  pop    %r12
    0.00 :   6d2a9:  pop    %r13
    0.00 :   6d2ab:  pop    %r14
    0.00 :   6d2ad:  pop    %r15
    0.00 :   6d2af:  jmp    6e380 <buffered_vfprintf>
    0.00 :   6d2b4:  nopl   0x0(%rax)
    0.00 :   6d2b8:  test   %ecx,%ecx
    0.00 :   6d2ba:  je     6d590 <__vfwprintf_internal+0x17f0>
    0.00 :   6d2c0:  cmp    $0x2f,%eax
    0.00 :   6d2c3:  ja     6d990 <__vfwprintf_internal+0x1bf0>
    0.00 :   6d2c9:  mov    %eax,%edx
    0.00 :   6d2cb:  add    $0x8,%eax
    0.00 :   6d2ce:  add    0x10(%r13),%rdx
    0.00 :   6d2d2:  mov    %eax,0x0(%r13)
    0.00 :   6d2d6:  movl   $0x0,0x28(%rsp)
    0.00 :   6d2de:  movzbl (%rdx),%r10d
    0.00 :   6d2e2:  movl   $0x0,0x38(%rsp)
    0.00 :   6d2ea:  jmp    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6d2ef:  nop
    0.00 :   6d2f0:  test   %r10,%r10
    0.00 :   6d2f3:  jne    6d6e8 <__vfwprintf_internal+0x1948>
    0.00 :   6d2f9:  cmpl   $0x8,0x54(%rsp)
    0.00 :   6d2fe:  jne    6db20 <__vfwprintf_internal+0x1d80>
    0.00 :   6d304:  mov    0x40(%rsp),%esi
    0.00 :   6d308:  test   %esi,%esi
    0.00 :   6d30a:  je     6db20 <__vfwprintf_internal+0x1d80>
    0.00 :   6d310:  movl   $0x20,0x30(%rsp)
    0.00 :   6d318:  xor    %edx,%edx
    0.00 :   6d31a:  mov    $0x4,%ecx
    0.00 :   6d31f:  lea    0x4f4(%rsp),%rbp
    0.00 :   6d327:  movl   $0x30,0x4f4(%rsp)
    0.00 :   6d332:  jmp    6ccc2 <__vfwprintf_internal+0xf22>
    0.00 :   6d337:  nopw   0x0(%rax,%rax,1)
    0.00 :   6d340:  lea    0x4f8(%rsp),%r11
    0.00 :   6d348:  mov    %r10,%rax
    0.00 :   6d34b:  mov    %r11,%rbp
    0.00 :   6d34e:  xchg   %ax,%ax
    0.00 :   6d350:  mov    %rax,%rdx
    0.00 :   6d353:  sub    $0x4,%rbp
    0.00 :   6d357:  and    $0xf,%edx
    0.00 :   6d35a:  mov    (%rdi,%rdx,4),%edx
    0.00 :   6d35d:  mov    %edx,0x0(%rbp)
    0.00 :   6d360:  mov    %rax,%rdx
    0.00 :   6d363:  shr    $0x4,%rax
    0.00 :   6d367:  cmp    $0xf,%rdx
    0.00 :   6d36b:  ja     6d350 <__vfwprintf_internal+0x15b0>
    0.00 :   6d36d:  jmp    6cbfe <__vfwprintf_internal+0xe5e>
    0.00 :   6d372:  nopw   0x0(%rax,%rax,1)
    0.00 :   6d378:  sub    $0x1,%r8d
    0.00 :   6d37c:  cmpl   $0x20,0x30(%rsp)
    0.00 :   6d381:  je     6dd7e <__vfwprintf_internal+0x1fde>
    0.00 :   6d387:  test   %r9d,%r9d
    0.00 :   6d38a:  je     6d6a8 <__vfwprintf_internal+0x1908>
    0.00 :   6d390:  mov    0xa0(%rbx),%rax
    0.00 :   6d397:  test   %rax,%rax
    0.00 :   6d39a:  je     6de39 <__vfwprintf_internal+0x2099>
    0.00 :   6d3a0:  mov    0x20(%rax),%rdx
    0.00 :   6d3a4:  cmp    0x28(%rax),%rdx
    0.00 :   6d3a8:  jae    6de39 <__vfwprintf_internal+0x2099>
    0.00 :   6d3ae:  lea    0x4(%rdx),%rcx
    0.00 :   6d3b2:  mov    %rcx,0x20(%rax)
    0.00 :   6d3b6:  movl   $0x2d,(%rdx)
    0.00 :   6d3bc:  cmp    $0x7fffffff,%r12d
    0.00 :   6d3c3:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d3c9:  add    $0x1,%r12d
    0.00 :   6d3cd:  jmp    6cd0e <__vfwprintf_internal+0xf6e>
    0.00 :   6d3d2:  nopw   0x0(%rax,%rax,1)
    0.00 :   6d3d8:  mov    0x28(%rsp),%eax
    0.00 :   6d3dc:  test   %eax,%eax
    0.00 :   6d3de:  je     6d790 <__vfwprintf_internal+0x19f0>
    0.00 :   6d3e4:  mov    0xa0(%rbx),%rax
    0.00 :   6d3eb:  test   %rax,%rax
    0.00 :   6d3ee:  je     6e069 <__vfwprintf_internal+0x22c9>
    0.00 :   6d3f4:  mov    0x20(%rax),%rsi
    0.00 :   6d3f8:  cmp    0x28(%rax),%rsi
    0.00 :   6d3fc:  jae    6e069 <__vfwprintf_internal+0x22c9>
    0.00 :   6d402:  lea    0x4(%rsi),%rdi
    0.00 :   6d406:  mov    %rdi,0x20(%rax)
    0.00 :   6d40a:  movl   $0x2b,(%rsi)
    0.00 :   6d410:  jmp    6d11f <__vfwprintf_internal+0x137f>
    0.00 :   6d415:  nopl   (%rax)
   11.48 :   6d418:  mov    %r9d,0x78(%rsp) // libc.so.6[6d418]
    0.00 :   6d41d:  mov    %r10,%rcx
    0.00 :   6d420:  lea    0x4f8(%rsp),%r11
    0.00 :   6d428:  movabs $0xcccccccccccccccd,%rsi
    0.00 :   6d432:  mov    %r11,%rbp
    0.00 :   6d435:  nopl   (%rax)
    0.00 :   6d438:  mov    %rcx,%rax
    0.00 :   6d43b:  mov    %rcx,%r9
    0.00 :   6d43e:  sub    $0x4,%rbp
    0.00 :   6d442:  mul    %rsi
    0.00 :   6d445:  shr    $0x3,%rdx
    0.00 :   6d449:  lea    (%rdx,%rdx,4),%rax
    0.00 :   6d44d:  add    %rax,%rax
    0.00 :   6d450:  sub    %rax,%r9
    8.22 :   6d453:  mov    (%rdi,%r9,4),%eax // libc.so.6[6d453]
    0.00 :   6d457:  mov    %eax,0x0(%rbp)
    0.00 :   6d45a:  mov    %rcx,%rax
    0.00 :   6d45d:  mov    %rdx,%rcx
    0.00 :   6d460:  cmp    $0x9,%rax
    0.00 :   6d464:  ja     6d438 <__vfwprintf_internal+0x1698>
    0.00 :   6d466:  cmpq   $0x0,0x58(%rsp)
    0.00 :   6d46c:  mov    0x78(%rsp),%r9d
    0.00 :   6d471:  je     6cc5d <__vfwprintf_internal+0xebd>
    0.00 :   6d477:  test   %r8d,%r8d
    0.00 :   6d47a:  je     6cc5d <__vfwprintf_internal+0xebd>
    0.00 :   6d480:  jmp    6cc13 <__vfwprintf_internal+0xe73>
    0.00 :   6d485:  nopl   (%rax)
    0.00 :   6d488:  mov    %rax,0x18(%rsp)
    0.00 :   6d48d:  call   818e0 <_IO_vtable_check>
    0.00 :   6d492:  mov    0x18(%rsp),%rax
    0.00 :   6d497:  jmp    6c33d <__vfwprintf_internal+0x59d>
    0.00 :   6d49c:  nopl   0x0(%rax)
    0.00 :   6d4a0:  movslq %r14d,%rdx
    0.00 :   6d4a3:  mov    $0x30,%esi
    0.00 :   6d4a8:  mov    %rbx,%rdi
    0.00 :   6d4ab:  mov    %rdx,0x18(%rsp)
    0.00 :   6d4b0:  call   7a890 <_IO_wpadn>
    0.00 :   6d4b5:  mov    0x18(%rsp),%rdx
    0.00 :   6d4ba:  cmp    %rax,%rdx
    0.00 :   6d4bd:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d4c3:  add    %r14d,%r12d
    0.00 :   6d4c6:  js     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d4cc:  cmp    %r14d,%r12d
    0.00 :   6d4cf:  jb     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d4d5:  test   %r12d,%r12d
    0.00 :   6d4d8:  jns    6cd24 <__vfwprintf_internal+0xf84>
    0.00 :   6d4de:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6d4e3:  nopl   0x0(%rax,%rax,1)
    0.00 :   6d4e8:  mov    0x4(%r13),%eax
    0.00 :   6d4ec:  cmp    $0xaf,%eax
    0.00 :   6d4f1:  ja     6d978 <__vfwprintf_internal+0x1bd8>
    0.00 :   6d4f7:  mov    %eax,%edx
    0.00 :   6d4f9:  add    $0x10,%eax
    0.00 :   6d4fc:  add    0x10(%r13),%rdx
    0.00 :   6d500:  mov    %eax,0x4(%r13)
    0.00 :   6d504:  movsd  (%rdx),%xmm0
    0.00 :   6d508:  movsd  %xmm0,0xa0(%rsp)
    0.00 :   6d511:  lea    0xa0(%rsp),%rax
    0.00 :   6d519:  lea    0x98(%rsp),%rdx
    0.00 :   6d521:  mov    %rbx,%rdi
    0.00 :   6d524:  mov    %rax,0x98(%rsp)
    0.00 :   6d52c:  mov    0xb8(%rsp),%eax
    0.00 :   6d533:  lea    0xb0(%rsp),%rsi
    0.00 :   6d53b:  and    $0xffffffdf,%eax
    0.00 :   6d53e:  cmp    $0x41,%eax
    0.00 :   6d541:  jne    6db90 <__vfwprintf_internal+0x1df0>
    0.00 :   6d547:  call   56bb0 <__printf_fphex>
    0.00 :   6d54c:  test   %eax,%eax
    0.00 :   6d54e:  js     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d554:  add    %eax,%r12d
    0.00 :   6d557:  js     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d55d:  cmp    %eax,%r12d
    0.00 :   6d560:  jb     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d566:  test   %r12d,%r12d
    0.00 :   6d569:  jns    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6d56f:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6d574:  nopl   0x0(%rax)
    0.00 :   6d578:  mov    0x8(%r13),%rdx
    0.00 :   6d57c:  lea    0x8(%rdx),%rax
    0.00 :   6d580:  mov    %rax,0x8(%r13)
    0.00 :   6d584:  jmp    6cb6f <__vfwprintf_internal+0xdcf>
    0.00 :   6d589:  nopl   0x0(%rax)
    0.00 :   6d590:  test   %ebp,%ebp
    0.00 :   6d592:  jne    6d940 <__vfwprintf_internal+0x1ba0>
    0.00 :   6d598:  cmp    $0x2f,%eax
    0.00 :   6d59b:  ja     6df60 <__vfwprintf_internal+0x21c0>
    0.00 :   6d5a1:  mov    %eax,%edx
    0.00 :   6d5a3:  add    $0x8,%eax
    0.00 :   6d5a6:  add    0x10(%r13),%rdx
    0.00 :   6d5aa:  mov    %eax,0x0(%r13)
    0.00 :   6d5ae:  movl   $0x0,0x28(%rsp)
    0.00 :   6d5b6:  mov    (%rdx),%r10d
    0.00 :   6d5b9:  xor    %r9d,%r9d
    0.00 :   6d5bc:  movl   $0x0,0x38(%rsp)
    0.00 :   6d5c4:  jmp    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6d5c9:  nopl   0x0(%rax)
    0.00 :   6d5d0:  cmpl   $0x8,0x54(%rsp)
    0.00 :   6d5d5:  jne    6d0c8 <__vfwprintf_internal+0x1328>
    0.00 :   6d5db:  mov    0x40(%rsp),%edx
    0.00 :   6d5df:  test   %edx,%edx
    0.00 :   6d5e1:  je     6d0c8 <__vfwprintf_internal+0x1328>
    0.00 :   6d5e7:  lea    -0x4(%rbp),%rax
    0.00 :   6d5eb:  mov    %r11,%rcx
    0.00 :   6d5ee:  mov    $0x0,%edx
    0.00 :   6d5f3:  movl   $0x30,-0x4(%rbp)
    0.00 :   6d5fa:  sub    %rax,%rcx
    0.00 :   6d5fd:  mov    %rax,%rbp
    0.00 :   6d600:  mov    %rcx,%rsi
    0.00 :   6d603:  sar    $0x2,%rsi
    0.00 :   6d607:  sub    %rsi,%r15
    0.00 :   6d60a:  cmovns %r15,%rdx
    0.00 :   6d60e:  mov    %edx,%r11d
    0.00 :   6d611:  jmp    6ccc2 <__vfwprintf_internal+0xf22>
    0.00 :   6d616:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6d620:  mov    0x54(%rsp),%edi
    0.00 :   6d624:  mov    $0x10004,%eax
    0.00 :   6d629:  bt     %rdi,%rax
    0.00 :   6d62d:  jae    6cd17 <__vfwprintf_internal+0xf77>
    0.00 :   6d633:  mov    0xa0(%rbx),%rax
    0.00 :   6d63a:  test   %rax,%rax
    0.00 :   6d63d:  je     6e198 <__vfwprintf_internal+0x23f8>
    0.00 :   6d643:  mov    0x20(%rax),%rcx
    0.00 :   6d647:  mov    0x28(%rax),%rsi
    0.00 :   6d64b:  cmp    %rsi,%rcx
    0.00 :   6d64e:  jae    6e198 <__vfwprintf_internal+0x23f8>
    0.00 :   6d654:  lea    0x4(%rcx),%rdx
    0.00 :   6d658:  mov    %rdx,0x20(%rax)
    0.00 :   6d65c:  movl   $0x30,(%rcx)
    0.00 :   6d662:  cmp    $0x7fffffff,%r12d
    0.00 :   6d669:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d66f:  cmp    %rsi,%rdx
    0.00 :   6d672:  jae    6e1df <__vfwprintf_internal+0x243f>
    0.00 :   6d678:  lea    0x4(%rdx),%rcx
    0.00 :   6d67c:  mov    %rcx,0x20(%rax)
    0.00 :   6d680:  mov    %r14d,(%rdx)
    0.00 :   6d683:  cmp    $0xffffffff,%r14d
    0.00 :   6d687:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d68d:  cmp    $0x7ffffffe,%r12d
    0.00 :   6d694:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d69a:  add    $0x2,%r12d
    0.00 :   6d69e:  jmp    6cd17 <__vfwprintf_internal+0xf77>
    0.00 :   6d6a3:  nopl   0x0(%rax,%rax,1)
    0.00 :   6d6a8:  mov    0x28(%rsp),%eax
    0.00 :   6d6ac:  test   %eax,%eax
    0.00 :   6d6ae:  je     6dcd0 <__vfwprintf_internal+0x1f30>
    0.00 :   6d6b4:  mov    0xa0(%rbx),%rax
    0.00 :   6d6bb:  test   %rax,%rax
    0.00 :   6d6be:  je     6e087 <__vfwprintf_internal+0x22e7>
    0.00 :   6d6c4:  mov    0x20(%rax),%rdx
    0.00 :   6d6c8:  cmp    0x28(%rax),%rdx
    0.00 :   6d6cc:  jae    6e087 <__vfwprintf_internal+0x22e7>
    0.00 :   6d6d2:  lea    0x4(%rdx),%rcx
    0.00 :   6d6d6:  mov    %rcx,0x20(%rax)
    0.00 :   6d6da:  movl   $0x2b,(%rdx)
    0.00 :   6d6e0:  jmp    6d3bc <__vfwprintf_internal+0x161c>
    0.00 :   6d6e5:  nopl   (%rax)
    0.00 :   6d6e8:  movl   $0x20,0x30(%rsp)
    0.00 :   6d6f0:  xor    %r15d,%r15d
    0.00 :   6d6f3:  jmp    6cb9f <__vfwprintf_internal+0xdff>
    0.00 :   6d6f8:  nopl   0x0(%rax,%rax,1)
    0.00 :   6d700:  call   818e0 <_IO_vtable_check>
    0.00 :   6d705:  jmp    6bec1 <__vfwprintf_internal+0x121>
    0.00 :   6d70a:  nopw   0x0(%rax,%rax,1)
    0.00 :   6d710:  movl   $0x0,0x70(%rsp)
    0.00 :   6d718:  movl   $0x0,0x50(%rsp)
    0.00 :   6d720:  movq   $0xffffffffffffffff,0x58(%rsp)
    0.00 :   6d729:  sub    $0x8,%rsp
    0.00 :   6d72d:  mov    %r12d,%r9d
    0.00 :   6d730:  mov    %r13,%rcx
    0.00 :   6d733:  mov    0x4c(%rsp),%edi
    0.00 :   6d737:  push   %rdi
    0.00 :   6d738:  mov    %rbx,%rdi
    0.00 :   6d73b:  push   %rax
    0.00 :   6d73c:  push   0x70(%rsp)
    0.00 :   6d740:  mov    0x84(%rsp),%eax
    0.00 :   6d747:  push   %rax
    0.00 :   6d748:  lea    0x138(%rsp),%rax
    0.00 :   6d750:  push   %rax
    0.00 :   6d751:  push   0x78(%rsp)
    0.00 :   6d755:  mov    0x88(%rsp),%eax
    0.00 :   6d75c:  push   %rax
    0.00 :   6d75d:  mov    0xb0(%rsp),%edx
    0.00 :   6d764:  mov    0x48(%rsp),%rsi
    0.00 :   6d769:  lea    0x138(%rsp),%r8
    0.00 :   6d771:  call   695a0 <printf_positional>
    0.00 :   6d776:  add    $0x40,%rsp
    0.00 :   6d77a:  mov    %eax,%r12d
    0.00 :   6d77d:  testl  $0x8000,(%rbx)
    0.00 :   6d783:  jne    6bfb8 <__vfwprintf_internal+0x218>
    0.00 :   6d789:  jmp    6bff0 <__vfwprintf_internal+0x250>
    0.00 :   6d78e:  xchg   %ax,%ax
    0.00 :   6d790:  mov    0x38(%rsp),%eax
    0.00 :   6d794:  test   %eax,%eax
    0.00 :   6d796:  je     6d135 <__vfwprintf_internal+0x1395>
    0.00 :   6d79c:  mov    0xa0(%rbx),%rax
    0.00 :   6d7a3:  test   %rax,%rax
    0.00 :   6d7a6:  je     6e2b8 <__vfwprintf_internal+0x2518>
    0.00 :   6d7ac:  mov    0x20(%rax),%rsi
    0.00 :   6d7b0:  cmp    0x28(%rax),%rsi
    0.00 :   6d7b4:  jae    6e2b8 <__vfwprintf_internal+0x2518>
    0.00 :   6d7ba:  lea    0x4(%rsi),%rdi
    0.00 :   6d7be:  mov    %rdi,0x20(%rax)
    0.00 :   6d7c2:  movl   $0x20,(%rsi)
    0.00 :   6d7c8:  jmp    6d11f <__vfwprintf_internal+0x137f>
    0.00 :   6d7cd:  nopl   (%rax)
    0.00 :   6d7d0:  movzbl 0x54(%rsp),%ecx
    0.00 :   6d7d5:  mov    $0x10004,%eax
    0.00 :   6d7da:  lea    -0x2(%r8),%edx
    0.00 :   6d7de:  shr    %cl,%rax
    0.00 :   6d7e1:  test   $0x1,%al
    0.00 :   6d7e3:  cmovne %edx,%r8d
    0.00 :   6d7e7:  jmp    6ccf2 <__vfwprintf_internal+0xf52>
    0.00 :   6d7ec:  nopl   0x0(%rax)
    0.00 :   6d7f0:  mov    0x54(%rsp),%edi
    0.00 :   6d7f4:  mov    $0x10004,%eax
    0.00 :   6d7f9:  bt     %rdi,%rax
    0.00 :   6d7fd:  jae    6d148 <__vfwprintf_internal+0x13a8>
    0.00 :   6d803:  mov    0xa0(%rbx),%rax
    0.00 :   6d80a:  test   %rax,%rax
    0.00 :   6d80d:  je     6e229 <__vfwprintf_internal+0x2489>
    0.00 :   6d813:  mov    0x20(%rax),%rdi
    0.00 :   6d817:  mov    0x28(%rax),%r8
    0.00 :   6d81b:  cmp    %r8,%rdi
    0.00 :   6d81e:  jae    6e229 <__vfwprintf_internal+0x2489>
    0.00 :   6d824:  lea    0x4(%rdi),%rsi
    0.00 :   6d828:  mov    %rsi,0x20(%rax)
    0.00 :   6d82c:  movl   $0x30,(%rdi)
    0.00 :   6d832:  cmp    $0x7fffffff,%r12d
    0.00 :   6d839:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d83f:  cmp    %r8,%rsi
    0.00 :   6d842:  jae    6e27a <__vfwprintf_internal+0x24da>
    0.00 :   6d848:  lea    0x4(%rsi),%rdi
    0.00 :   6d84c:  mov    %rdi,0x20(%rax)
    0.00 :   6d850:  mov    %r14d,(%rsi)
    0.00 :   6d853:  cmp    $0xffffffff,%r14d
    0.00 :   6d857:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d85d:  cmp    $0x7ffffffe,%r12d
    0.00 :   6d864:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d86a:  subl   $0x2,0x18(%rsp)
    0.00 :   6d86f:  add    $0x2,%r12d
    0.00 :   6d873:  jmp    6d148 <__vfwprintf_internal+0x13a8>
    0.00 :   6d878:  nopl   0x0(%rax,%rax,1)
    0.00 :   6d880:  mov    0x8(%r13),%rdx
    0.00 :   6d884:  lea    0x8(%rdx),%rax
    0.00 :   6d888:  mov    %rax,0x8(%r13)
    0.00 :   6d88c:  jmp    6c291 <__vfwprintf_internal+0x4f1>
    0.00 :   6d891:  nopl   0x0(%rax)
    0.00 :   6d898:  test   %ebp,%ebp
    0.00 :   6d89a:  jle    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6d8a0:  movslq %ebp,%r14
    0.00 :   6d8a3:  mov    $0x20,%esi
    0.00 :   6d8a8:  mov    %rbx,%rdi
    0.00 :   6d8ab:  mov    %r14,%rdx
    0.00 :   6d8ae:  call   7a890 <_IO_wpadn>
    0.00 :   6d8b3:  cmp    %rax,%r14
    0.00 :   6d8b6:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d8bc:  add    %ebp,%r12d
    0.00 :   6d8bf:  js     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d8c1:  cmp    %ebp,%r12d
    0.00 :   6d8c4:  jae    6d566 <__vfwprintf_internal+0x17c6>
    0.00 :   6d8ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   6d8d0:  mov    0x165539(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   6d8d7:  movl   $0x4b,%fs:(%rax)
    0.00 :   6d8de:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6d8e3:  nopl   0x0(%rax,%rax,1)
    0.00 :   6d8e8:  lea    0xb0(%rsp),%rdi
    0.00 :   6d8f0:  mov    %r8d,0x78(%rsp)
    0.00 :   6d8f5:  mov    %r9d,0x54(%rsp)
    0.00 :   6d8fa:  mov    %ecx,0x18(%rsp)
    0.00 :   6d8fe:  call   68d80 <read_int>
    0.00 :   6d903:  mov    0x18(%rsp),%ecx
    0.00 :   6d907:  mov    0x54(%rsp),%r9d
    0.00 :   6d90c:  cmp    $0xffffffff,%eax
    0.00 :   6d90f:  mov    0x78(%rsp),%r8d
    0.00 :   6d914:  je     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6d916:  test   %eax,%eax
    0.00 :   6d918:  je     6c769 <__vfwprintf_internal+0x9c9>
    0.00 :   6d91e:  mov    0xb0(%rsp),%rax
    0.00 :   6d926:  cmpl   $0x24,(%rax)
    0.00 :   6d929:  jne    6c769 <__vfwprintf_internal+0x9c9>
    0.00 :   6d92f:  nop
    0.00 :   6d930:  mov    0x74(%rsp),%eax
    0.00 :   6d934:  jmp    6d729 <__vfwprintf_internal+0x1989>
    0.00 :   6d939:  nopl   0x0(%rax)
    0.00 :   6d940:  cmp    $0x2f,%eax
    0.00 :   6d943:  ja     6dfc1 <__vfwprintf_internal+0x2221>
    0.00 :   6d949:  mov    %eax,%edx
    0.00 :   6d94b:  add    $0x8,%eax
    0.00 :   6d94e:  add    0x10(%r13),%rdx
    0.00 :   6d952:  mov    %eax,0x0(%r13)
    0.00 :   6d956:  movl   $0x0,0x28(%rsp)
    0.00 :   6d95e:  movzwl (%rdx),%r10d
    0.00 :   6d962:  xor    %r9d,%r9d
    0.00 :   6d965:  movl   $0x0,0x38(%rsp)
    0.00 :   6d96d:  jmp    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6d972:  nopw   0x0(%rax,%rax,1)
    0.00 :   6d978:  mov    0x8(%r13),%rdx
    0.00 :   6d97c:  lea    0x8(%rdx),%rax
    0.00 :   6d980:  mov    %rax,0x8(%r13)
    0.00 :   6d984:  jmp    6d504 <__vfwprintf_internal+0x1764>
    0.00 :   6d989:  nopl   0x0(%rax)
    0.00 :   6d990:  mov    0x8(%r13),%rdx
    0.00 :   6d994:  lea    0x8(%rdx),%rax
    0.00 :   6d998:  mov    %rax,0x8(%r13)
    0.00 :   6d99c:  jmp    6d2d6 <__vfwprintf_internal+0x1536>
    0.00 :   6d9a1:  nopl   0x0(%rax)
    0.00 :   6d9a8:  cmp    $0x2f,%eax
    0.00 :   6d9ab:  ja     6df71 <__vfwprintf_internal+0x21d1>
    0.00 :   6d9b1:  mov    %eax,%edx
    0.00 :   6d9b3:  add    $0x8,%eax
    0.00 :   6d9b6:  add    0x10(%r13),%rdx
    0.00 :   6d9ba:  mov    %eax,0x0(%r13)
    0.00 :   6d9be:  mov    (%rdx),%r10
    0.00 :   6d9c1:  jmp    6d08b <__vfwprintf_internal+0x12eb>
    0.00 :   6d9c6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6d9d0:  mov    $0x1,%ecx
    0.00 :   6d9d5:  xor    %ebp,%ebp
    0.00 :   6d9d7:  jmp    *%rax
    0.00 :   6d9d9:  nopl   0x0(%rax)
    0.00 :   6d9e0:  mov    $0x1,%r9d
    0.00 :   6d9e6:  jmp    *%rax
    0.00 :   6d9e8:  nopl   0x0(%rax,%rax,1)
    0.00 :   6d9f0:  mov    $0x1,%r9d
    0.00 :   6d9f6:  mov    $0x1,%r10d
    0.00 :   6d9fc:  jmp    *%rax
    0.00 :   6d9fe:  xchg   %ax,%ax
    0.00 :   6da00:  mov    0x8(%r13),%rdx
    0.00 :   6da04:  lea    0x8(%rdx),%rax
    0.00 :   6da08:  mov    %rax,0x8(%r13)
    0.00 :   6da0c:  jmp    6cb16 <__vfwprintf_internal+0xd76>
    0.00 :   6da11:  nopl   0x0(%rax)
    0.00 :   6da18:  mov    0x8(%r13),%rdx
    0.00 :   6da1c:  lea    0x8(%rdx),%rax
    0.00 :   6da20:  mov    %rax,0x8(%r13)
    0.00 :   6da24:  jmp    6cada <__vfwprintf_internal+0xd3a>
    0.00 :   6da29:  nopl   0x0(%rax)
    0.00 :   6da30:  mov    0x64(%rsp),%edi
    0.00 :   6da34:  call   75e90 <__get_errname>
    0.00 :   6da39:  mov    0x54(%rsp),%r11d
    0.00 :   6da3e:  mov    0x78(%rsp),%r8d
    0.00 :   6da43:  mov    %rax,%rbp
    0.00 :   6da46:  jmp    6ca0f <__vfwprintf_internal+0xc6f>
    0.00 :   6da4b:  nopl   0x0(%rax,%rax,1)
    0.00 :   6da50:  mov    $0x1,%ebp
    0.00 :   6da55:  jmp    *%rax
    0.00 :   6da57:  nopw   0x0(%rax,%rax,1)
    0.00 :   6da60:  lea    -0x1ae2(%rip),%rax        # 6bf85 <__vfwprintf_internal+0x1e5>
    0.00 :   6da67:  movl   $0x1,0x38(%rsp)
    0.00 :   6da6f:  jmp    *%rax
    0.00 :   6da71:  nopl   0x0(%rax)
    0.00 :   6da78:  mov    0x8(%r13),%rdx
    0.00 :   6da7c:  lea    0x8(%rdx),%rax
    0.00 :   6da80:  mov    %rax,0x8(%r13)
    0.00 :   6da84:  jmp    6c41e <__vfwprintf_internal+0x67e>
    0.00 :   6da89:  nopl   0x0(%rax)
    0.00 :   6da90:  movl   $0x1,0x28(%rsp)
    0.00 :   6da98:  jmp    *%rax
    0.00 :   6da9a:  nopw   0x0(%rax,%rax,1)
    0.00 :   6daa0:  mov    0x8(%r13),%rax
    0.00 :   6daa4:  add    $0xf,%rax
    0.00 :   6daa8:  and    $0xfffffffffffffff0,%rax
    0.00 :   6daac:  lea    0x10(%rax),%rdx
    0.00 :   6dab0:  mov    %rdx,0x8(%r13)
    0.00 :   6dab4:  fldt   (%rax)
    0.00 :   6dab6:  fstpt  0xa0(%rsp)
    0.00 :   6dabd:  jmp    6d511 <__vfwprintf_internal+0x1771>
    0.00 :   6dac2:  nopw   0x0(%rax,%rax,1)
    0.00 :   6dac8:  mov    $0x1,%r8d
    0.00 :   6dace:  jmp    *%rax
    0.00 :   6dad0:  movl   $0x1,0x68(%rsp)
    0.00 :   6dad8:  jmp    *%rax
    0.00 :   6dada:  nopw   0x0(%rax,%rax,1)
    0.00 :   6dae0:  movl   $0x1,0x40(%rsp)
    0.00 :   6dae8:  jmp    *%rax
    0.00 :   6daea:  nopw   0x0(%rax,%rax,1)
    0.00 :   6daf0:  mov    0x8(%r13),%rdx
    0.00 :   6daf4:  lea    0x8(%rdx),%rax
    0.00 :   6daf8:  mov    %rax,0x8(%r13)
    0.00 :   6dafc:  jmp    6c787 <__vfwprintf_internal+0x9e7>
    0.00 :   6db01:  nopl   0x0(%rax)
    0.00 :   6db08:  mov    0x8(%r13),%rdx
    0.00 :   6db0c:  lea    0x8(%rdx),%rax
    0.00 :   6db10:  mov    %rax,0x8(%r13)
    0.00 :   6db14:  jmp    6c5b2 <__vfwprintf_internal+0x812>
    0.00 :   6db19:  nopl   0x0(%rax)
    0.00 :   6db20:  movl   $0x20,0x30(%rsp)
    0.00 :   6db28:  xor    %edx,%edx
    0.00 :   6db2a:  xor    %ecx,%ecx
    0.00 :   6db2c:  lea    0x4f8(%rsp),%rbp
    0.00 :   6db34:  jmp    6ccc2 <__vfwprintf_internal+0xf22>
    0.00 :   6db39:  lea    0x90(%rsp),%rdi
    0.00 :   6db41:  mov    %r8d,0x80(%rsp)
    0.00 :   6db49:  mov    %r9d,0x78(%rsp)
    0.00 :   6db4e:  mov    %ecx,0x54(%rsp)
    0.00 :   6db52:  call   68d80 <read_int>
    0.00 :   6db57:  mov    %eax,%r11d
    0.00 :   6db5a:  cmp    $0xffffffff,%eax
    0.00 :   6db5d:  je     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6db63:  mov    0x90(%rsp),%rax
    0.00 :   6db6b:  mov    0x80(%rsp),%r8d
    0.00 :   6db73:  mov    0x78(%rsp),%r9d
    0.00 :   6db78:  mov    0x54(%rsp),%ecx
    0.00 :   6db7c:  mov    (%rax),%r14d
    0.00 :   6db7f:  jmp    6c67e <__vfwprintf_internal+0x8de>
    0.00 :   6db84:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   6db89:  jmp    6c0d5 <__vfwprintf_internal+0x335>
    0.00 :   6db8e:  xchg   %ax,%ax
    0.00 :   6db90:  call   56b40 <__printf_fp>
    0.00 :   6db95:  jmp    6d54c <__vfwprintf_internal+0x17ac>
    0.00 :   6db9a:  nopw   0x0(%rax,%rax,1)
    0.00 :   6dba0:  cmp    $0xffffffff,%r11d
    0.00 :   6dba4:  jne    6dbc9 <__vfwprintf_internal+0x1e29>
    0.00 :   6dba6:  mov    %rbp,%rdi
    0.00 :   6dba9:  call   26650 <*ABS*+0xb36b0@plt>
    0.00 :   6dbae:  mov    %rax,%r14
    0.00 :   6dbb1:  jmp    6c450 <__vfwprintf_internal+0x6b0>
    0.00 :   6dbb6:  mov    $0x5,%eax
    0.00 :   6dbbb:  lea    0x133752(%rip),%rbp        # 1a1314 <default_rwlockattr+0x324>
    0.00 :   6dbc2:  cmp    %eax,%r11d
    0.00 :   6dbc5:  cmovl  %eax,%r11d
    0.00 :   6dbc9:  movslq %r11d,%rsi
    0.00 :   6dbcc:  mov    %rbp,%rdi
    0.00 :   6dbcf:  call   26670 <*ABS*+0xb4e30@plt>
    0.00 :   6dbd4:  mov    %rax,%r14
    0.00 :   6dbd7:  jmp    6c450 <__vfwprintf_internal+0x6b0>
    0.00 :   6dbdc:  nopl   0x0(%rax)
    0.00 :   6dbe0:  test   %ecx,%ecx
    0.00 :   6dbe2:  je     6dfd2 <__vfwprintf_internal+0x2232>
    0.00 :   6dbe8:  mov    %r12b,(%rax)
    0.00 :   6dbeb:  jmp    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6dbf0:  test   %ebp,%ebp
    0.00 :   6dbf2:  jle    6c277 <__vfwprintf_internal+0x4d7>
    0.00 :   6dbf8:  movslq %ebp,%r14
    0.00 :   6dbfb:  mov    $0x20,%esi
    0.00 :   6dc00:  mov    %rbx,%rdi
    0.00 :   6dc03:  mov    %r14,%rdx
    0.00 :   6dc06:  call   7a890 <_IO_wpadn>
    0.00 :   6dc0b:  cmp    %rax,%r14
    0.00 :   6dc0e:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6dc14:  xor    %eax,%eax
    0.00 :   6dc16:  add    %ebp,%r12d
    0.00 :   6dc19:  js     6e35d <__vfwprintf_internal+0x25bd>
    0.00 :   6dc1f:  cmp    %ebp,%r12d
    0.00 :   6dc22:  jb     6e35d <__vfwprintf_internal+0x25bd>
    0.00 :   6dc28:  test   %eax,%eax
    0.00 :   6dc2a:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6dc30:  test   %r12d,%r12d
    0.00 :   6dc33:  jns    6c277 <__vfwprintf_internal+0x4d7>
    0.00 :   6dc39:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6dc3e:  xchg   %ax,%ax
    0.00 :   6dc40:  movl   $0xa,0x54(%rsp)
    0.00 :   6dc48:  neg    %r10
    0.00 :   6dc4b:  mov    $0x1,%r9d
    0.00 :   6dc51:  jmp    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6dc56:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6dc60:  mov    0xd8(%rbx),%r15
    0.00 :   6dc67:  lea    0x161d92(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   6dc6e:  mov    0x10(%rsp),%rdi
    0.00 :   6dc73:  mov    %r15,%rax
    0.00 :   6dc76:  sub    %rsi,%rax
    0.00 :   6dc79:  cmp    %rdi,%rax
    0.00 :   6dc7c:  jae    6e305 <__vfwprintf_internal+0x2565>
    0.00 :   6dc82:  mov    %r14,%rdx
    0.00 :   6dc85:  mov    %rbp,%rsi
    0.00 :   6dc88:  mov    %rbx,%rdi
    0.00 :   6dc8b:  call   *0x38(%r15)
    0.00 :   6dc8f:  cmp    %rax,%r14
    0.00 :   6dc92:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6dc98:  movslq %r12d,%rax
    0.00 :   6dc9b:  xor    %edx,%edx
    0.00 :   6dc9d:  add    %r14,%rax
    0.00 :   6dca0:  js     6e367 <__vfwprintf_internal+0x25c7>
    0.00 :   6dca6:  cmp    %r14,%rax
    0.00 :   6dca9:  jb     6e367 <__vfwprintf_internal+0x25c7>
    0.00 :   6dcaf:  movslq %eax,%rcx
    0.00 :   6dcb2:  mov    %eax,%r12d
    0.00 :   6dcb5:  cmp    %rcx,%rax
    0.00 :   6dcb8:  mov    $0x1,%ecx
    0.00 :   6dcbd:  cmovne %ecx,%edx
    0.00 :   6dcc0:  test   %edx,%edx
    0.00 :   6dcc2:  je     6c522 <__vfwprintf_internal+0x782>
    0.00 :   6dcc8:  jmp    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6dccd:  nopl   (%rax)
    0.00 :   6dcd0:  mov    0x38(%rsp),%eax
    0.00 :   6dcd4:  test   %eax,%eax
    0.00 :   6dcd6:  je     6cd0e <__vfwprintf_internal+0xf6e>
    0.00 :   6dcdc:  mov    0xa0(%rbx),%rax
    0.00 :   6dce3:  test   %rax,%rax
    0.00 :   6dce6:  je     6e210 <__vfwprintf_internal+0x2470>
    0.00 :   6dcec:  mov    0x20(%rax),%rdx
    0.00 :   6dcf0:  cmp    0x28(%rax),%rdx
    0.00 :   6dcf4:  jae    6e210 <__vfwprintf_internal+0x2470>
    0.00 :   6dcfa:  lea    0x4(%rdx),%rcx
    0.00 :   6dcfe:  mov    %rcx,0x20(%rax)
    0.00 :   6dd02:  movl   $0x20,(%rdx)
    0.00 :   6dd08:  jmp    6d3bc <__vfwprintf_internal+0x161c>
    0.00 :   6dd0d:  nopl   (%rax)
    0.00 :   6dd10:  lea    0x8(%r15),%rax
    0.00 :   6dd14:  mov    %rax,0x90(%rsp)
    0.00 :   6dd1c:  mov    %rax,0xb0(%rsp)
    0.00 :   6dd24:  mov    0x8(%r15),%eax
    0.00 :   6dd28:  sub    $0x30,%eax
    0.00 :   6dd2b:  cmp    $0x9,%eax
    0.00 :   6dd2e:  jbe    6e12b <__vfwprintf_internal+0x238b>
    0.00 :   6dd34:  mov    0x0(%r13),%eax
    0.00 :   6dd38:  cmp    $0x2f,%eax
    0.00 :   6dd3b:  ja     6e058 <__vfwprintf_internal+0x22b8>
    0.00 :   6dd41:  mov    %eax,%edx
    0.00 :   6dd43:  add    $0x8,%eax
    0.00 :   6dd46:  add    0x10(%r13),%rdx
    0.00 :   6dd4a:  mov    %eax,0x0(%r13)
    0.00 :   6dd4e:  mov    (%rdx),%eax
    0.00 :   6dd50:  mov    $0xffffffff,%edx
    0.00 :   6dd55:  mov    0x8(%r15),%r14d
    0.00 :   6dd59:  test   %eax,%eax
    0.00 :   6dd5b:  cmovns %eax,%edx
    0.00 :   6dd5e:  mov    %edx,%r11d
    0.00 :   6dd61:  jmp    6c67e <__vfwprintf_internal+0x8de>
    0.00 :   6dd66:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   6dd70:  movq   $0xffffffffffffffff,0x58(%rsp)
    0.00 :   6dd79:  jmp    6d729 <__vfwprintf_internal+0x1989>
    0.00 :   6dd7e:  test   %r8d,%r8d
    0.00 :   6dd81:  jg     6dec8 <__vfwprintf_internal+0x2128>
    0.00 :   6dd87:  xor    %r8d,%r8d
    0.00 :   6dd8a:  jmp    6d387 <__vfwprintf_internal+0x15e7>
    0.00 :   6dd8f:  test   %r8d,%r8d
    0.00 :   6dd92:  jg     6dec8 <__vfwprintf_internal+0x2128>
    0.00 :   6dd98:  xor    %r8d,%r8d
    0.00 :   6dd9b:  jmp    6cd0e <__vfwprintf_internal+0xf6e>
    0.00 :   6dda0:  mov    0x1651c9(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
    0.00 :   6dda7:  mov    %fs:(%rax),%rax
    0.00 :   6ddab:  mov    0x8(%rax),%rax
    0.00 :   6ddaf:  mov    0x58(%rax),%esi
    0.00 :   6ddb2:  mov    0x48(%rax),%rax
    0.00 :   6ddb6:  movzbl (%rax),%edx
    0.00 :   6ddb9:  mov    %rax,0x58(%rsp)
    0.00 :   6ddbe:  mov    %esi,0x74(%rsp)
    0.00 :   6ddc2:  test   %dl,%dl
    0.00 :   6ddc4:  sete   %al
    0.00 :   6ddc7:  cmp    $0x7f,%dl
    0.00 :   6ddca:  sete   %dl
    0.00 :   6ddcd:  or     %dl,%al
    0.00 :   6ddcf:  jne    6ddd9 <__vfwprintf_internal+0x2039>
    0.00 :   6ddd1:  test   %esi,%esi
    0.00 :   6ddd3:  jne    6c850 <__vfwprintf_internal+0xab0>
    0.00 :   6ddd9:  movq   $0x0,0x58(%rsp)
    0.00 :   6dde2:  jmp    6c850 <__vfwprintf_internal+0xab0>
    0.00 :   6dde7:  mov    $0x6,%eax
    0.00 :   6ddec:  mov    $0x6,%r14d
    0.00 :   6ddf2:  lea    0x133907(%rip),%rbp        # 1a1700 <null>
    0.00 :   6ddf9:  jmp    6c450 <__vfwprintf_internal+0x6b0>
    0.00 :   6ddfe:  movslq 0x64(%rsp),%r10
    0.00 :   6de03:  movl   $0xa,0x54(%rsp)
    0.00 :   6de0b:  xor    %r9d,%r9d
    0.00 :   6de0e:  test   %r10d,%r10d
    0.00 :   6de11:  jns    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6de17:  neg    %r10
    0.00 :   6de1a:  mov    $0x1,%r9d
    0.00 :   6de20:  jmp    6cb85 <__vfwprintf_internal+0xde5>
    0.00 :   6de25:  mov    %rax,0x18(%rsp)
    0.00 :   6de2a:  call   818e0 <_IO_vtable_check>
    0.00 :   6de2f:  mov    0x18(%rsp),%rax
    0.00 :   6de34:  jmp    6d1d3 <__vfwprintf_internal+0x1433>
    0.00 :   6de39:  mov    %r10b,0x28(%rsp)
    0.00 :   6de3e:  mov    $0x2d,%esi
    0.00 :   6de43:  mov    %r8d,0x24(%rsp)
    0.00 :   6de48:  mov    %r11d,0x18(%rsp)
    0.00 :   6de4d:  mov    %rbx,%rdi
    0.00 :   6de50:  call   7bc60 <__woverflow>
    0.00 :   6de55:  mov    0x18(%rsp),%r11d
    0.00 :   6de5a:  mov    0x24(%rsp),%r8d
    0.00 :   6de5f:  cmp    $0xffffffff,%eax
    0.00 :   6de62:  movzbl 0x28(%rsp),%r10d
    0.00 :   6de68:  jne    6d3bc <__vfwprintf_internal+0x161c>
    0.00 :   6de6e:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6de73:  nopl   0x0(%rax,%rax,1)
    0.00 :   6de78:  call   818e0 <_IO_vtable_check>
    0.00 :   6de7d:  jmp    6cd46 <__vfwprintf_internal+0xfa6>
    0.00 :   6de82:  mov    %rdx,0x38(%rsp)
    0.00 :   6de87:  mov    $0x2d,%esi
    0.00 :   6de8c:  mov    %rcx,0x30(%rsp)
    0.00 :   6de91:  mov    %r10,0x28(%rsp)
    0.00 :   6de96:  mov    %r11d,0x24(%rsp)
    0.00 :   6de9b:  mov    %rbx,%rdi
    0.00 :   6de9e:  call   7bc60 <__woverflow>
    0.00 :   6dea3:  mov    0x24(%rsp),%r11d
    0.00 :   6dea8:  mov    0x28(%rsp),%r10
    0.00 :   6dead:  cmp    $0xffffffff,%eax
    0.00 :   6deb0:  mov    0x30(%rsp),%rcx
    0.00 :   6deb5:  mov    0x38(%rsp),%rdx
    0.00 :   6deba:  jne    6d11f <__vfwprintf_internal+0x137f>
    0.00 :   6dec0:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6dec5:  nopl   (%rax)
    0.00 :   6dec8:  movslq %r8d,%rdx
    0.00 :   6decb:  mov    $0x20,%esi
    0.00 :   6ded0:  mov    %rbx,%rdi
    0.00 :   6ded3:  mov    %r10b,0x68(%rsp)
    0.00 :   6ded8:  mov    %rdx,0x18(%rsp)
    0.00 :   6dedd:  mov    %r9d,0x40(%rsp)
    0.00 :   6dee2:  mov    %r11d,0x30(%rsp)
    0.00 :   6dee7:  mov    %r8d,0x24(%rsp)
    0.00 :   6deec:  call   7a890 <_IO_wpadn>
    0.00 :   6def1:  mov    0x18(%rsp),%rdx
    0.00 :   6def6:  cmp    %rax,%rdx
    0.00 :   6def9:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6deff:  mov    0x24(%rsp),%r8d
    0.00 :   6df04:  xor    %eax,%eax
    0.00 :   6df06:  mov    0x30(%rsp),%r11d
    0.00 :   6df0b:  mov    0x40(%rsp),%r9d
    0.00 :   6df10:  movzbl 0x68(%rsp),%r10d
    0.00 :   6df16:  add    %r12d,%r8d
    0.00 :   6df19:  js     6e353 <__vfwprintf_internal+0x25b3>
    0.00 :   6df1f:  cmp    %edx,%r8d
    0.00 :   6df22:  jb     6e353 <__vfwprintf_internal+0x25b3>
    0.00 :   6df28:  mov    %r8d,%r12d
    0.00 :   6df2b:  mov    %eax,%r8d
    0.00 :   6df2e:  test   %eax,%eax
    0.00 :   6df30:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6df36:  test   %r12d,%r12d
    0.00 :   6df39:  jns    6d387 <__vfwprintf_internal+0x15e7>
    0.00 :   6df3f:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6df44:  nopl   0x0(%rax)
    0.00 :   6df48:  mov    %rbx,%rdi
    0.00 :   6df4b:  call   7bc60 <__woverflow>
    0.00 :   6df50:  cmp    $0xffffffff,%eax
    0.00 :   6df53:  jne    6c2c4 <__vfwprintf_internal+0x524>
    0.00 :   6df59:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6df5e:  xchg   %ax,%ax
    0.00 :   6df60:  mov    0x8(%r13),%rdx
    0.00 :   6df64:  lea    0x8(%rdx),%rax
    0.00 :   6df68:  mov    %rax,0x8(%r13)
    0.00 :   6df6c:  jmp    6d5ae <__vfwprintf_internal+0x180e>
    0.00 :   6df71:  mov    0x8(%r13),%rdx
    0.00 :   6df75:  lea    0x8(%rdx),%rax
    0.00 :   6df79:  mov    %rax,0x8(%r13)
    0.00 :   6df7d:  jmp    6d9be <__vfwprintf_internal+0x1c1e>
    0.00 :   6df82:  mov    0x8(%r13),%rax
    0.00 :   6df86:  add    $0xf,%rax
    0.00 :   6df8a:  and    $0xfffffffffffffff0,%rax
    0.00 :   6df8e:  lea    0x10(%rax),%rdx
    0.00 :   6df92:  mov    %rdx,0x8(%r13)
    0.00 :   6df96:  jmp    6c1e0 <__vfwprintf_internal+0x440>
    0.00 :   6df9b:  test   %ebp,%ebp
   10.15 :   6df9d:  jne    6e0a0 <__vfwprintf_internal+0x2300> // libc.so.6[6df9d]
    0.00 :   6dfa3:  cmp    $0x2f,%eax
    0.00 :   6dfa6:  ja     6e2e7 <__vfwprintf_internal+0x2547>
    0.00 :   6dfac:  mov    %eax,%edx
    0.00 :   6dfae:  add    $0x8,%eax
    0.00 :   6dfb1:  add    0x10(%r13),%rdx
    0.00 :   6dfb5:  mov    %eax,0x0(%r13)
    0.00 :   6dfb9:  movslq (%rdx),%r10
    0.00 :   6dfbc:  jmp    6d08b <__vfwprintf_internal+0x12eb>
    0.00 :   6dfc1:  mov    0x8(%r13),%rdx
    0.00 :   6dfc5:  lea    0x8(%rdx),%rax
    0.00 :   6dfc9:  mov    %rax,0x8(%r13)
    0.00 :   6dfcd:  jmp    6d956 <__vfwprintf_internal+0x1bb6>
    0.00 :   6dfd2:  test   %ebp,%ebp
    0.00 :   6dfd4:  jne    6e0d0 <__vfwprintf_internal+0x2330>
    0.00 :   6dfda:  mov    %r12d,(%rax)
    0.00 :   6dfdd:  jmp    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6dfe2:  mov    %r15d,%edx
    0.00 :   6dfe5:  mov    $0x20,%esi
    0.00 :   6dfea:  mov    %rbx,%rdi
    0.00 :   6dfed:  mov    %rdx,0x18(%rsp)
    0.00 :   6dff2:  call   7a890 <_IO_wpadn>
    0.00 :   6dff7:  mov    0x18(%rsp),%rdx
    0.00 :   6dffc:  cmp    %rax,%rdx
    0.00 :   6dfff:  jne    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e005:  movslq %r12d,%rax
    0.00 :   6e008:  add    %rdx,%rax
    0.00 :   6e00b:  movslq %eax,%rdx
    0.00 :   6e00e:  mov    %eax,%r12d
    0.00 :   6e011:  cmp    %rdx,%rax
    0.00 :   6e014:  jne    6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6e01a:  test   %eax,%eax
    0.00 :   6e01c:  jns    6c46f <__vfwprintf_internal+0x6cf>
    0.00 :   6e022:  jmp    6bfb0 <__vfwprintf_internal+0x210>
    0.00 :   6e027:  nopw   0x0(%rax,%rax,1)
    0.00 :   6e030:  xor    %r10d,%r10d
    0.00 :   6e033:  xor    %edx,%edx
    0.00 :   6e035:  jmp    6c121 <__vfwprintf_internal+0x381>
    0.00 :   6e03a:  mov    $0x25,%esi
    0.00 :   6e03f:  mov    %rbx,%rdi
    0.00 :   6e042:  call   7bc60 <__woverflow>
    0.00 :   6e047:  cmp    $0xffffffff,%eax
    0.00 :   6e04a:  jne    6d020 <__vfwprintf_internal+0x1280>
    0.00 :   6e050:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e055:  nopl   (%rax)
    0.00 :   6e058:  mov    0x8(%r13),%rdx
    0.00 :   6e05c:  lea    0x8(%rdx),%rax
    0.00 :   6e060:  mov    %rax,0x8(%r13)
    0.00 :   6e064:  jmp    6dd4e <__vfwprintf_internal+0x1fae>
    0.00 :   6e069:  mov    %rdx,0x38(%rsp)
    0.00 :   6e06e:  mov    $0x2b,%esi
    0.00 :   6e073:  mov    %rcx,0x30(%rsp)
    0.00 :   6e078:  mov    %r10,0x28(%rsp)
    0.00 :   6e07d:  mov    %r11d,0x24(%rsp)
    0.00 :   6e082:  jmp    6de9b <__vfwprintf_internal+0x20fb>
    0.00 :   6e087:  mov    %r10b,0x28(%rsp)
    0.00 :   6e08c:  mov    $0x2b,%esi
    0.00 :   6e091:  mov    %r8d,0x24(%rsp)
    0.00 :   6e096:  mov    %r11d,0x18(%rsp)
    0.00 :   6e09b:  jmp    6de4d <__vfwprintf_internal+0x20ad>
    0.00 :   6e0a0:  cmp    $0x2f,%eax
    0.00 :   6e0a3:  ja     6e2d6 <__vfwprintf_internal+0x2536>
    0.00 :   6e0a9:  mov    %eax,%edx
    0.00 :   6e0ab:  add    $0x8,%eax
    0.00 :   6e0ae:  add    0x10(%r13),%rdx
    0.00 :   6e0b2:  mov    %eax,0x0(%r13)
    0.00 :   6e0b6:  movswq (%rdx),%r10
    0.00 :   6e0ba:  jmp    6d08b <__vfwprintf_internal+0x12eb>
    0.00 :   6e0bf:  mov    0x8(%r13),%rdx
    0.00 :   6e0c3:  lea    0x8(%rdx),%rax
    0.00 :   6e0c7:  mov    %rax,0x8(%r13)
    0.00 :   6e0cb:  jmp    6d087 <__vfwprintf_internal+0x12e7>
    0.00 :   6e0d0:  mov    %r12w,(%rax)
    0.00 :   6e0d4:  jmp    6c2e8 <__vfwprintf_internal+0x548>
    0.00 :   6e0d9:  mov    %eax,%esi
    0.00 :   6e0db:  mov    %rbx,%rdi
    0.00 :   6e0de:  call   7bc60 <__woverflow>
    0.00 :   6e0e3:  cmp    $0xffffffff,%eax
    0.00 :   6e0e6:  jne    6c2c4 <__vfwprintf_internal+0x524>
    0.00 :   6e0ec:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e0f1:  nopl   0x0(%rax)
    0.00 :   6e0f8:  mov    %rax,0x18(%rsp)
    0.00 :   6e0fd:  call   818e0 <_IO_vtable_check>
    0.00 :   6e102:  mov    0x18(%rsp),%rax
    0.00 :   6e107:  jmp    6c491 <__vfwprintf_internal+0x6f1>
    0.00 :   6e10c:  or     $0x20,%eax
    0.00 :   6e10f:  mov    %eax,(%rbx)
    0.00 :   6e111:  mov    0x164cf8(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   6e118:  movl   $0x9,%fs:(%rax)
    0.00 :   6e11f:  nop
    0.00 :   6e120:  mov    $0xffffffff,%r12d
    0.00 :   6e126:  jmp    6bfc3 <__vfwprintf_internal+0x223>
    0.00 :   6e12b:  lea    0xb0(%rsp),%rdi
    0.00 :   6e133:  mov    %r8d,0x80(%rsp)
    0.00 :   6e13b:  mov    %r9d,0x78(%rsp)
    0.00 :   6e140:  mov    %ecx,0x54(%rsp)
    0.00 :   6e144:  call   68d80 <read_int>
    0.00 :   6e149:  mov    0x54(%rsp),%ecx
    0.00 :   6e14d:  mov    0x78(%rsp),%r9d
    0.00 :   6e152:  cmp    $0xffffffff,%eax
    0.00 :   6e155:  mov    0x80(%rsp),%r8d
    0.00 :   6e15d:  je     6d8d0 <__vfwprintf_internal+0x1b30>
    0.00 :   6e163:  test   %eax,%eax
    0.00 :   6e165:  je     6dd34 <__vfwprintf_internal+0x1f94>
    0.00 :   6e16b:  mov    0xb0(%rsp),%rax
    0.00 :   6e173:  cmpl   $0x24,(%rax)
    0.00 :   6e176:  jne    6dd34 <__vfwprintf_internal+0x1f94>
    0.00 :   6e17c:  jmp    6d930 <__vfwprintf_internal+0x1b90>
    0.00 :   6e181:  nopl   0x0(%rax)
    0.00 :   6e188:  mov    0x164c81(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   6e18f:  movl   $0x16,%fs:(%rax)
    0.00 :   6e196:  jmp    6e120 <__vfwprintf_internal+0x2380>
    0.00 :   6e198:  mov    $0x30,%esi
    0.00 :   6e19d:  mov    %rbx,%rdi
    0.00 :   6e1a0:  mov    %r8d,0x24(%rsp)
    0.00 :   6e1a5:  mov    %r11d,0x18(%rsp)
    0.00 :   6e1aa:  call   7bc60 <__woverflow>
    0.00 :   6e1af:  mov    0x18(%rsp),%r11d
    0.00 :   6e1b4:  mov    0x24(%rsp),%r8d
    0.00 :   6e1b9:  cmp    $0xffffffff,%eax
    0.00 :   6e1bc:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e1c2:  cmp    $0x7fffffff,%r12d
    0.00 :   6e1c9:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e1cf:  mov    0xa0(%rbx),%rax
    0.00 :   6e1d6:  test   %rax,%rax
    0.00 :   6e1d9:  jne    6e2f8 <__vfwprintf_internal+0x2558>
    0.00 :   6e1df:  mov    %r14d,%esi
    0.00 :   6e1e2:  mov    %rbx,%rdi
    0.00 :   6e1e5:  mov    %r8d,0x24(%rsp)
    0.00 :   6e1ea:  mov    %r11d,0x18(%rsp)
    0.00 :   6e1ef:  call   7bc60 <__woverflow>
    0.00 :   6e1f4:  mov    0x18(%rsp),%r11d
    0.00 :   6e1f9:  mov    0x24(%rsp),%r8d
    0.00 :   6e1fe:  cmp    $0xffffffff,%eax
    0.00 :   6e201:  jne    6d68d <__vfwprintf_internal+0x18ed>
    0.00 :   6e207:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e20c:  nopl   0x0(%rax)
    0.00 :   6e210:  mov    %r10b,0x28(%rsp)
    0.00 :   6e215:  mov    $0x20,%esi
    0.00 :   6e21a:  mov    %r8d,0x24(%rsp)
    0.00 :   6e21f:  mov    %r11d,0x18(%rsp)
    0.00 :   6e224:  jmp    6de4d <__vfwprintf_internal+0x20ad>
    0.00 :   6e229:  mov    $0x30,%esi
    0.00 :   6e22e:  mov    %rbx,%rdi
    0.00 :   6e231:  mov    %rdx,0x30(%rsp)
    0.00 :   6e236:  mov    %rcx,0x28(%rsp)
    0.00 :   6e23b:  mov    %r11d,0x24(%rsp)
    0.00 :   6e240:  call   7bc60 <__woverflow>
    0.00 :   6e245:  mov    0x24(%rsp),%r11d
    0.00 :   6e24a:  mov    0x28(%rsp),%rcx
    0.00 :   6e24f:  cmp    $0xffffffff,%eax
    0.00 :   6e252:  mov    0x30(%rsp),%rdx
    0.00 :   6e257:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e25d:  cmp    $0x7fffffff,%r12d
    0.00 :   6e264:  je     6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e26a:  mov    0xa0(%rbx),%rax
    0.00 :   6e271:  test   %rax,%rax
    0.00 :   6e274:  jne    6e30f <__vfwprintf_internal+0x256f>
    0.00 :   6e27a:  mov    %r14d,%esi
    0.00 :   6e27d:  mov    %rbx,%rdi
    0.00 :   6e280:  mov    %rdx,0x30(%rsp)
    0.00 :   6e285:  mov    %rcx,0x28(%rsp)
    0.00 :   6e28a:  mov    %r11d,0x24(%rsp)
    0.00 :   6e28f:  call   7bc60 <__woverflow>
    0.00 :   6e294:  mov    0x24(%rsp),%r11d
    0.00 :   6e299:  mov    0x28(%rsp),%rcx
    0.00 :   6e29e:  cmp    $0xffffffff,%eax
    0.00 :   6e2a1:  mov    0x30(%rsp),%rdx
    0.00 :   6e2a6:  jne    6d85d <__vfwprintf_internal+0x1abd>
    0.00 :   6e2ac:  jmp    6bfa0 <__vfwprintf_internal+0x200>
    0.00 :   6e2b1:  nopl   0x0(%rax)
    0.00 :   6e2b8:  mov    %rdx,0x38(%rsp)
    0.00 :   6e2bd:  mov    $0x20,%esi
    0.00 :   6e2c2:  mov    %rcx,0x30(%rsp)
    0.00 :   6e2c7:  mov    %r10,0x28(%rsp)
    0.00 :   6e2cc:  mov    %r11d,0x24(%rsp)
    0.00 :   6e2d1:  jmp    6de9b <__vfwprintf_internal+0x20fb>
    0.00 :   6e2d6:  mov    0x8(%r13),%rdx
    0.00 :   6e2da:  lea    0x8(%rdx),%rax
    0.00 :   6e2de:  mov    %rax,0x8(%r13)
    0.00 :   6e2e2:  jmp    6e0b6 <__vfwprintf_internal+0x2316>
    0.00 :   6e2e7:  mov    0x8(%r13),%rdx
    0.00 :   6e2eb:  lea    0x8(%rdx),%rax
    0.00 :   6e2ef:  mov    %rax,0x8(%r13)
    0.00 :   6e2f3:  jmp    6dfb9 <__vfwprintf_internal+0x2219>
    0.00 :   6e2f8:  mov    0x20(%rax),%rdx
    0.00 :   6e2fc:  mov    0x28(%rax),%rsi
    0.00 :   6e300:  jmp    6d66f <__vfwprintf_internal+0x18cf>
    0.00 :   6e305:  call   818e0 <_IO_vtable_check>
    0.00 :   6e30a:  jmp    6dc82 <__vfwprintf_internal+0x1ee2>
    0.00 :   6e30f:  mov    0x20(%rax),%rsi
    0.00 :   6e313:  mov    0x28(%rax),%r8
    0.00 :   6e317:  jmp    6d83f <__vfwprintf_internal+0x1a9f>
    0.00 :   6e31c:  mov    $0x1,%edx
    0.00 :   6e321:  jmp    6c369 <__vfwprintf_internal+0x5c9>
    0.00 :   6e326:  call   11ba20 <__stack_chk_fail>
    0.00 :   6e32b:  mov    $0x1,%eax
    0.00 :   6e330:  jmp    6cd73 <__vfwprintf_internal+0xfd3>
    0.00 :   6e335:  mov    $0x1,%edx
    0.00 :   6e33a:  jmp    6d1ff <__vfwprintf_internal+0x145f>
    0.00 :   6e33f:  mov    $0x1,%eax
    0.00 :   6e344:  jmp    6c582 <__vfwprintf_internal+0x7e2>
    0.00 :   6e349:  mov    $0x1,%edx
    0.00 :   6e34e:  jmp    6c4bd <__vfwprintf_internal+0x71d>
    0.00 :   6e353:  mov    $0x1,%eax
    0.00 :   6e358:  jmp    6df28 <__vfwprintf_internal+0x2188>
    0.00 :   6e35d:  mov    $0x1,%eax
    0.00 :   6e362:  jmp    6dc28 <__vfwprintf_internal+0x1e88>
    0.00 :   6e367:  mov    $0x1,%edx
    0.00 :   6e36c:  jmp    6dcaf <__vfwprintf_internal+0x1f0f>
    0.00 :   6e371:  mov    $0x1,%eax
    0.00 :   6e376:  jmp    6d1a0 <__vfwprintf_internal+0x1400>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   35.42 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:156
   34.22 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:161
   30.35 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:182
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (3 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000023430 <strcmp>:
         : 6     strcmp():
    0.00 :   23430:  endbr64
    0.00 :   23434:  mov    %esi,%ecx
    0.00 :   23436:  mov    %edi,%eax
    0.00 :   23438:  and    $0x3f,%rcx
    0.00 :   2343c:  and    $0x3f,%rax
   35.42 :   23440:  cmp    $0x30,%ecx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:156
    0.00 :   23443:  ja     23490 <strcmp+0x60>
    0.00 :   23445:  cmp    $0x30,%eax
    0.00 :   23448:  ja     23490 <strcmp+0x60>
    0.00 :   2344a:  movlpd (%rdi),%xmm1
   34.22 :   2344e:  movlpd (%rsi),%xmm2 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:161
    0.00 :   23452:  movhpd 0x8(%rdi),%xmm1
    0.00 :   23457:  movhpd 0x8(%rsi),%xmm2
    0.00 :   2345c:  pxor   %xmm0,%xmm0
    0.00 :   23460:  pcmpeqb %xmm1,%xmm0
   30.35 :   23464:  pcmpeqb %xmm2,%xmm1 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:182
    0.00 :   23468:  psubb  %xmm0,%xmm1
    0.00 :   2346c:  pmovmskb %xmm1,%edx
    0.00 :   23470:  sub    $0xffff,%edx
    0.00 :   23476:  jne    24850 <strcmp+0x1420>
    0.00 :   2347c:  add    $0x10,%rsi
    0.00 :   23480:  add    $0x10,%rdi
    0.00 :   23484:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2348f:  nop
    0.00 :   23490:  and    $0xfffffffffffffff0,%rsi
    0.00 :   23494:  and    $0xfffffffffffffff0,%rdi
    0.00 :   23498:  mov    $0xffff,%edx
    0.00 :   2349d:  xor    %r8d,%r8d
    0.00 :   234a0:  and    $0xf,%ecx
    0.00 :   234a3:  and    $0xf,%eax
    0.00 :   234a6:  cmp    %eax,%ecx
    0.00 :   234a8:  je     234d0 <strcmp+0xa0>
    0.00 :   234aa:  ja     234b3 <strcmp+0x83>
    0.00 :   234ac:  mov    %edx,%r8d
    0.00 :   234af:  xchg   %eax,%ecx
    0.00 :   234b0:  xchg   %rsi,%rdi
    0.00 :   234b3:  lea    0xf(%rax),%r9
    0.00 :   234b7:  sub    %rcx,%r9
    0.00 :   234ba:  lea    0x5d57(%rip),%r10        # 29218 <debopts.5+0x2d8>
    0.00 :   234c1:  movslq (%r10,%r9,4),%r9
    0.00 :   234c5:  lea    (%r10,%r9,1),%r10
    0.00 :   234c9:  notrack jmp *%r10
    0.00 :   234cd:  nopl   (%rax)
    0.00 :   234d0:  movdqa (%rsi),%xmm1
    0.00 :   234d4:  pxor   %xmm0,%xmm0
    0.00 :   234d8:  pcmpeqb %xmm1,%xmm0
    0.00 :   234dc:  pcmpeqb (%rdi),%xmm1
    0.00 :   234e0:  psubb  %xmm0,%xmm1
    0.00 :   234e4:  pmovmskb %xmm1,%r9d
    0.00 :   234e9:  shr    %cl,%edx
    0.00 :   234eb:  shr    %cl,%r9d
    0.00 :   234ee:  sub    %r9d,%edx
    0.00 :   234f1:  jne    24835 <strcmp+0x1405>
    0.00 :   234f7:  mov    $0x10,%rcx
    0.00 :   234fe:  mov    $0x10,%r9
    0.00 :   23505:  pxor   %xmm0,%xmm0
    0.00 :   23509:  nopl   0x0(%rax)
    0.00 :   23510:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23515:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2351a:  pcmpeqb %xmm1,%xmm0
    0.00 :   2351e:  pcmpeqb %xmm2,%xmm1
    0.00 :   23522:  psubb  %xmm0,%xmm1
    0.00 :   23526:  pmovmskb %xmm1,%edx
    0.00 :   2352a:  sub    $0xffff,%edx
    0.00 :   23530:  jne    24830 <strcmp+0x1400>
    0.00 :   23536:  add    $0x10,%rcx
    0.00 :   2353a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2353f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23544:  pcmpeqb %xmm1,%xmm0
    0.00 :   23548:  pcmpeqb %xmm2,%xmm1
    0.00 :   2354c:  psubb  %xmm0,%xmm1
    0.00 :   23550:  pmovmskb %xmm1,%edx
    0.00 :   23554:  sub    $0xffff,%edx
    0.00 :   2355a:  jne    24830 <strcmp+0x1400>
    0.00 :   23560:  add    $0x10,%rcx
    0.00 :   23564:  jmp    23510 <strcmp+0xe0>
    0.00 :   23566:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   23570:  pxor   %xmm0,%xmm0
    0.00 :   23574:  movdqa (%rdi),%xmm2
    0.00 :   23578:  movdqa (%rsi),%xmm1
    0.00 :   2357c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23580:  pslldq $0xf,%xmm2
    0.00 :   23585:  pcmpeqb %xmm1,%xmm2
    0.00 :   23589:  psubb  %xmm0,%xmm2
    0.00 :   2358d:  pmovmskb %xmm2,%r9d
    0.00 :   23592:  shr    %cl,%edx
    0.00 :   23594:  shr    %cl,%r9d
    0.00 :   23597:  sub    %r9d,%edx
    0.00 :   2359a:  jne    24835 <strcmp+0x1405>
    0.00 :   235a0:  movdqa (%rdi),%xmm3
    0.00 :   235a4:  pxor   %xmm0,%xmm0
    0.00 :   235a8:  mov    $0x10,%rcx
    0.00 :   235af:  mov    $0x1,%r9d
    0.00 :   235b5:  lea    0x1(%rdi),%r10
    0.00 :   235b9:  and    $0xfff,%r10
    0.00 :   235c0:  sub    $0x1000,%r10
    0.00 :   235c7:  nopw   0x0(%rax,%rax,1)
    0.00 :   235d0:  add    $0x10,%r10
    0.00 :   235d4:  jg     23670 <strcmp+0x240>
    0.00 :   235da:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   235df:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   235e4:  movdqa %xmm2,%xmm4
    0.00 :   235e8:  psrldq $0x1,%xmm3
    0.00 :   235ed:  pslldq $0xf,%xmm2
    0.00 :   235f2:  por    %xmm3,%xmm2
    0.00 :   235f6:  pcmpeqb %xmm1,%xmm0
    0.00 :   235fa:  pcmpeqb %xmm2,%xmm1
    0.00 :   235fe:  psubb  %xmm0,%xmm1
    0.00 :   23602:  pmovmskb %xmm1,%edx
    0.00 :   23606:  sub    $0xffff,%edx
    0.00 :   2360c:  jne    24830 <strcmp+0x1400>
    0.00 :   23612:  add    $0x10,%rcx
    0.00 :   23616:  movdqa %xmm4,%xmm3
    0.00 :   2361a:  add    $0x10,%r10
    0.00 :   2361e:  jg     23670 <strcmp+0x240>
    0.00 :   23620:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23625:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2362a:  movdqa %xmm2,%xmm4
    0.00 :   2362e:  psrldq $0x1,%xmm3
    0.00 :   23633:  pslldq $0xf,%xmm2
    0.00 :   23638:  por    %xmm3,%xmm2
    0.00 :   2363c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23640:  pcmpeqb %xmm2,%xmm1
    0.00 :   23644:  psubb  %xmm0,%xmm1
    0.00 :   23648:  pmovmskb %xmm1,%edx
    0.00 :   2364c:  sub    $0xffff,%edx
    0.00 :   23652:  jne    24830 <strcmp+0x1400>
    0.00 :   23658:  add    $0x10,%rcx
    0.00 :   2365c:  movdqa %xmm4,%xmm3
    0.00 :   23660:  jmp    235d0 <strcmp+0x1a0>
    0.00 :   23665:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23670:  pcmpeqb %xmm3,%xmm0
    0.00 :   23674:  pmovmskb %xmm0,%edx
    0.00 :   23678:  test   $0xfffe,%edx
    0.00 :   2367e:  jne    23690 <strcmp+0x260>
    0.00 :   23680:  pxor   %xmm0,%xmm0
    0.00 :   23684:  sub    $0x1000,%r10
    0.00 :   2368b:  jmp    235da <strcmp+0x1aa>
    0.00 :   23690:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23695:  psrldq $0x1,%xmm0
    0.00 :   2369a:  psrldq $0x1,%xmm3
    0.00 :   2369f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   236a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   236af:  nop
    0.00 :   236b0:  pxor   %xmm0,%xmm0
    0.00 :   236b4:  movdqa (%rdi),%xmm2
    0.00 :   236b8:  movdqa (%rsi),%xmm1
    0.00 :   236bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   236c0:  pslldq $0xe,%xmm2
    0.00 :   236c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   236c9:  psubb  %xmm0,%xmm2
    0.00 :   236cd:  pmovmskb %xmm2,%r9d
    0.00 :   236d2:  shr    %cl,%edx
    0.00 :   236d4:  shr    %cl,%r9d
    0.00 :   236d7:  sub    %r9d,%edx
    0.00 :   236da:  jne    24835 <strcmp+0x1405>
    0.00 :   236e0:  movdqa (%rdi),%xmm3
    0.00 :   236e4:  pxor   %xmm0,%xmm0
    0.00 :   236e8:  mov    $0x10,%rcx
    0.00 :   236ef:  mov    $0x2,%r9d
    0.00 :   236f5:  lea    0x2(%rdi),%r10
    0.00 :   236f9:  and    $0xfff,%r10
    0.00 :   23700:  sub    $0x1000,%r10
    0.00 :   23707:  nopw   0x0(%rax,%rax,1)
    0.00 :   23710:  add    $0x10,%r10
    0.00 :   23714:  jg     237b0 <strcmp+0x380>
    0.00 :   2371a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2371f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23724:  movdqa %xmm2,%xmm4
    0.00 :   23728:  psrldq $0x2,%xmm3
    0.00 :   2372d:  pslldq $0xe,%xmm2
    0.00 :   23732:  por    %xmm3,%xmm2
    0.00 :   23736:  pcmpeqb %xmm1,%xmm0
    0.00 :   2373a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2373e:  psubb  %xmm0,%xmm1
    0.00 :   23742:  pmovmskb %xmm1,%edx
    0.00 :   23746:  sub    $0xffff,%edx
    0.00 :   2374c:  jne    24830 <strcmp+0x1400>
    0.00 :   23752:  add    $0x10,%rcx
    0.00 :   23756:  movdqa %xmm4,%xmm3
    0.00 :   2375a:  add    $0x10,%r10
    0.00 :   2375e:  jg     237b0 <strcmp+0x380>
    0.00 :   23760:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23765:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2376a:  movdqa %xmm2,%xmm4
    0.00 :   2376e:  psrldq $0x2,%xmm3
    0.00 :   23773:  pslldq $0xe,%xmm2
    0.00 :   23778:  por    %xmm3,%xmm2
    0.00 :   2377c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23780:  pcmpeqb %xmm2,%xmm1
    0.00 :   23784:  psubb  %xmm0,%xmm1
    0.00 :   23788:  pmovmskb %xmm1,%edx
    0.00 :   2378c:  sub    $0xffff,%edx
    0.00 :   23792:  jne    24830 <strcmp+0x1400>
    0.00 :   23798:  add    $0x10,%rcx
    0.00 :   2379c:  movdqa %xmm4,%xmm3
    0.00 :   237a0:  jmp    23710 <strcmp+0x2e0>
    0.00 :   237a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   237b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   237b4:  pmovmskb %xmm0,%edx
    0.00 :   237b8:  test   $0xfffc,%edx
    0.00 :   237be:  jne    237d0 <strcmp+0x3a0>
    0.00 :   237c0:  pxor   %xmm0,%xmm0
    0.00 :   237c4:  sub    $0x1000,%r10
    0.00 :   237cb:  jmp    2371a <strcmp+0x2ea>
    0.00 :   237d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   237d5:  psrldq $0x2,%xmm0
    0.00 :   237da:  psrldq $0x2,%xmm3
    0.00 :   237df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   237e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   237ef:  nop
    0.00 :   237f0:  pxor   %xmm0,%xmm0
    0.00 :   237f4:  movdqa (%rdi),%xmm2
    0.00 :   237f8:  movdqa (%rsi),%xmm1
    0.00 :   237fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23800:  pslldq $0xd,%xmm2
    0.00 :   23805:  pcmpeqb %xmm1,%xmm2
    0.00 :   23809:  psubb  %xmm0,%xmm2
    0.00 :   2380d:  pmovmskb %xmm2,%r9d
    0.00 :   23812:  shr    %cl,%edx
    0.00 :   23814:  shr    %cl,%r9d
    0.00 :   23817:  sub    %r9d,%edx
    0.00 :   2381a:  jne    24835 <strcmp+0x1405>
    0.00 :   23820:  movdqa (%rdi),%xmm3
    0.00 :   23824:  pxor   %xmm0,%xmm0
    0.00 :   23828:  mov    $0x10,%rcx
    0.00 :   2382f:  mov    $0x3,%r9d
    0.00 :   23835:  lea    0x3(%rdi),%r10
    0.00 :   23839:  and    $0xfff,%r10
    0.00 :   23840:  sub    $0x1000,%r10
    0.00 :   23847:  nopw   0x0(%rax,%rax,1)
    0.00 :   23850:  add    $0x10,%r10
    0.00 :   23854:  jg     238f0 <strcmp+0x4c0>
    0.00 :   2385a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2385f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23864:  movdqa %xmm2,%xmm4
    0.00 :   23868:  psrldq $0x3,%xmm3
    0.00 :   2386d:  pslldq $0xd,%xmm2
    0.00 :   23872:  por    %xmm3,%xmm2
    0.00 :   23876:  pcmpeqb %xmm1,%xmm0
    0.00 :   2387a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2387e:  psubb  %xmm0,%xmm1
    0.00 :   23882:  pmovmskb %xmm1,%edx
    0.00 :   23886:  sub    $0xffff,%edx
    0.00 :   2388c:  jne    24830 <strcmp+0x1400>
    0.00 :   23892:  add    $0x10,%rcx
    0.00 :   23896:  movdqa %xmm4,%xmm3
    0.00 :   2389a:  add    $0x10,%r10
    0.00 :   2389e:  jg     238f0 <strcmp+0x4c0>
    0.00 :   238a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   238a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   238aa:  movdqa %xmm2,%xmm4
    0.00 :   238ae:  psrldq $0x3,%xmm3
    0.00 :   238b3:  pslldq $0xd,%xmm2
    0.00 :   238b8:  por    %xmm3,%xmm2
    0.00 :   238bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   238c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   238c4:  psubb  %xmm0,%xmm1
    0.00 :   238c8:  pmovmskb %xmm1,%edx
    0.00 :   238cc:  sub    $0xffff,%edx
    0.00 :   238d2:  jne    24830 <strcmp+0x1400>
    0.00 :   238d8:  add    $0x10,%rcx
    0.00 :   238dc:  movdqa %xmm4,%xmm3
    0.00 :   238e0:  jmp    23850 <strcmp+0x420>
    0.00 :   238e5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   238f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   238f4:  pmovmskb %xmm0,%edx
    0.00 :   238f8:  test   $0xfff8,%edx
    0.00 :   238fe:  jne    23910 <strcmp+0x4e0>
    0.00 :   23900:  pxor   %xmm0,%xmm0
    0.00 :   23904:  sub    $0x1000,%r10
    0.00 :   2390b:  jmp    2385a <strcmp+0x42a>
    0.00 :   23910:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23915:  psrldq $0x3,%xmm0
    0.00 :   2391a:  psrldq $0x3,%xmm3
    0.00 :   2391f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23924:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2392f:  nop
    0.00 :   23930:  pxor   %xmm0,%xmm0
    0.00 :   23934:  movdqa (%rdi),%xmm2
    0.00 :   23938:  movdqa (%rsi),%xmm1
    0.00 :   2393c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23940:  pslldq $0xc,%xmm2
    0.00 :   23945:  pcmpeqb %xmm1,%xmm2
    0.00 :   23949:  psubb  %xmm0,%xmm2
    0.00 :   2394d:  pmovmskb %xmm2,%r9d
    0.00 :   23952:  shr    %cl,%edx
    0.00 :   23954:  shr    %cl,%r9d
    0.00 :   23957:  sub    %r9d,%edx
    0.00 :   2395a:  jne    24835 <strcmp+0x1405>
    0.00 :   23960:  movdqa (%rdi),%xmm3
    0.00 :   23964:  pxor   %xmm0,%xmm0
    0.00 :   23968:  mov    $0x10,%rcx
    0.00 :   2396f:  mov    $0x4,%r9d
    0.00 :   23975:  lea    0x4(%rdi),%r10
    0.00 :   23979:  and    $0xfff,%r10
    0.00 :   23980:  sub    $0x1000,%r10
    0.00 :   23987:  nopw   0x0(%rax,%rax,1)
    0.00 :   23990:  add    $0x10,%r10
    0.00 :   23994:  jg     23a30 <strcmp+0x600>
    0.00 :   2399a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2399f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   239a4:  movdqa %xmm2,%xmm4
    0.00 :   239a8:  psrldq $0x4,%xmm3
    0.00 :   239ad:  pslldq $0xc,%xmm2
    0.00 :   239b2:  por    %xmm3,%xmm2
    0.00 :   239b6:  pcmpeqb %xmm1,%xmm0
    0.00 :   239ba:  pcmpeqb %xmm2,%xmm1
    0.00 :   239be:  psubb  %xmm0,%xmm1
    0.00 :   239c2:  pmovmskb %xmm1,%edx
    0.00 :   239c6:  sub    $0xffff,%edx
    0.00 :   239cc:  jne    24830 <strcmp+0x1400>
    0.00 :   239d2:  add    $0x10,%rcx
    0.00 :   239d6:  movdqa %xmm4,%xmm3
    0.00 :   239da:  add    $0x10,%r10
    0.00 :   239de:  jg     23a30 <strcmp+0x600>
    0.00 :   239e0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   239e5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   239ea:  movdqa %xmm2,%xmm4
    0.00 :   239ee:  psrldq $0x4,%xmm3
    0.00 :   239f3:  pslldq $0xc,%xmm2
    0.00 :   239f8:  por    %xmm3,%xmm2
    0.00 :   239fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23a00:  pcmpeqb %xmm2,%xmm1
    0.00 :   23a04:  psubb  %xmm0,%xmm1
    0.00 :   23a08:  pmovmskb %xmm1,%edx
    0.00 :   23a0c:  sub    $0xffff,%edx
    0.00 :   23a12:  jne    24830 <strcmp+0x1400>
    0.00 :   23a18:  add    $0x10,%rcx
    0.00 :   23a1c:  movdqa %xmm4,%xmm3
    0.00 :   23a20:  jmp    23990 <strcmp+0x560>
    0.00 :   23a25:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23a30:  pcmpeqb %xmm3,%xmm0
    0.00 :   23a34:  pmovmskb %xmm0,%edx
    0.00 :   23a38:  test   $0xfff0,%edx
    0.00 :   23a3e:  jne    23a50 <strcmp+0x620>
    0.00 :   23a40:  pxor   %xmm0,%xmm0
    0.00 :   23a44:  sub    $0x1000,%r10
    0.00 :   23a4b:  jmp    2399a <strcmp+0x56a>
    0.00 :   23a50:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23a55:  psrldq $0x4,%xmm0
    0.00 :   23a5a:  psrldq $0x4,%xmm3
    0.00 :   23a5f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23a64:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23a6f:  nop
    0.00 :   23a70:  pxor   %xmm0,%xmm0
    0.00 :   23a74:  movdqa (%rdi),%xmm2
    0.00 :   23a78:  movdqa (%rsi),%xmm1
    0.00 :   23a7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23a80:  pslldq $0xb,%xmm2
    0.00 :   23a85:  pcmpeqb %xmm1,%xmm2
    0.00 :   23a89:  psubb  %xmm0,%xmm2
    0.00 :   23a8d:  pmovmskb %xmm2,%r9d
    0.00 :   23a92:  shr    %cl,%edx
    0.00 :   23a94:  shr    %cl,%r9d
    0.00 :   23a97:  sub    %r9d,%edx
    0.00 :   23a9a:  jne    24835 <strcmp+0x1405>
    0.00 :   23aa0:  movdqa (%rdi),%xmm3
    0.00 :   23aa4:  pxor   %xmm0,%xmm0
    0.00 :   23aa8:  mov    $0x10,%rcx
    0.00 :   23aaf:  mov    $0x5,%r9d
    0.00 :   23ab5:  lea    0x5(%rdi),%r10
    0.00 :   23ab9:  and    $0xfff,%r10
    0.00 :   23ac0:  sub    $0x1000,%r10
    0.00 :   23ac7:  nopw   0x0(%rax,%rax,1)
    0.00 :   23ad0:  add    $0x10,%r10
    0.00 :   23ad4:  jg     23b70 <strcmp+0x740>
    0.00 :   23ada:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23adf:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23ae4:  movdqa %xmm2,%xmm4
    0.00 :   23ae8:  psrldq $0x5,%xmm3
    0.00 :   23aed:  pslldq $0xb,%xmm2
    0.00 :   23af2:  por    %xmm3,%xmm2
    0.00 :   23af6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23afa:  pcmpeqb %xmm2,%xmm1
    0.00 :   23afe:  psubb  %xmm0,%xmm1
    0.00 :   23b02:  pmovmskb %xmm1,%edx
    0.00 :   23b06:  sub    $0xffff,%edx
    0.00 :   23b0c:  jne    24830 <strcmp+0x1400>
    0.00 :   23b12:  add    $0x10,%rcx
    0.00 :   23b16:  movdqa %xmm4,%xmm3
    0.00 :   23b1a:  add    $0x10,%r10
    0.00 :   23b1e:  jg     23b70 <strcmp+0x740>
    0.00 :   23b20:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23b25:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23b2a:  movdqa %xmm2,%xmm4
    0.00 :   23b2e:  psrldq $0x5,%xmm3
    0.00 :   23b33:  pslldq $0xb,%xmm2
    0.00 :   23b38:  por    %xmm3,%xmm2
    0.00 :   23b3c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23b40:  pcmpeqb %xmm2,%xmm1
    0.00 :   23b44:  psubb  %xmm0,%xmm1
    0.00 :   23b48:  pmovmskb %xmm1,%edx
    0.00 :   23b4c:  sub    $0xffff,%edx
    0.00 :   23b52:  jne    24830 <strcmp+0x1400>
    0.00 :   23b58:  add    $0x10,%rcx
    0.00 :   23b5c:  movdqa %xmm4,%xmm3
    0.00 :   23b60:  jmp    23ad0 <strcmp+0x6a0>
    0.00 :   23b65:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23b70:  pcmpeqb %xmm3,%xmm0
    0.00 :   23b74:  pmovmskb %xmm0,%edx
    0.00 :   23b78:  test   $0xffe0,%edx
    0.00 :   23b7e:  jne    23b90 <strcmp+0x760>
    0.00 :   23b80:  pxor   %xmm0,%xmm0
    0.00 :   23b84:  sub    $0x1000,%r10
    0.00 :   23b8b:  jmp    23ada <strcmp+0x6aa>
    0.00 :   23b90:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23b95:  psrldq $0x5,%xmm0
    0.00 :   23b9a:  psrldq $0x5,%xmm3
    0.00 :   23b9f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23ba4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23baf:  nop
    0.00 :   23bb0:  pxor   %xmm0,%xmm0
    0.00 :   23bb4:  movdqa (%rdi),%xmm2
    0.00 :   23bb8:  movdqa (%rsi),%xmm1
    0.00 :   23bbc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23bc0:  pslldq $0xa,%xmm2
    0.00 :   23bc5:  pcmpeqb %xmm1,%xmm2
    0.00 :   23bc9:  psubb  %xmm0,%xmm2
    0.00 :   23bcd:  pmovmskb %xmm2,%r9d
    0.00 :   23bd2:  shr    %cl,%edx
    0.00 :   23bd4:  shr    %cl,%r9d
    0.00 :   23bd7:  sub    %r9d,%edx
    0.00 :   23bda:  jne    24835 <strcmp+0x1405>
    0.00 :   23be0:  movdqa (%rdi),%xmm3
    0.00 :   23be4:  pxor   %xmm0,%xmm0
    0.00 :   23be8:  mov    $0x10,%rcx
    0.00 :   23bef:  mov    $0x6,%r9d
    0.00 :   23bf5:  lea    0x6(%rdi),%r10
    0.00 :   23bf9:  and    $0xfff,%r10
    0.00 :   23c00:  sub    $0x1000,%r10
    0.00 :   23c07:  nopw   0x0(%rax,%rax,1)
    0.00 :   23c10:  add    $0x10,%r10
    0.00 :   23c14:  jg     23cb0 <strcmp+0x880>
    0.00 :   23c1a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23c1f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23c24:  movdqa %xmm2,%xmm4
    0.00 :   23c28:  psrldq $0x6,%xmm3
    0.00 :   23c2d:  pslldq $0xa,%xmm2
    0.00 :   23c32:  por    %xmm3,%xmm2
    0.00 :   23c36:  pcmpeqb %xmm1,%xmm0
    0.00 :   23c3a:  pcmpeqb %xmm2,%xmm1
    0.00 :   23c3e:  psubb  %xmm0,%xmm1
    0.00 :   23c42:  pmovmskb %xmm1,%edx
    0.00 :   23c46:  sub    $0xffff,%edx
    0.00 :   23c4c:  jne    24830 <strcmp+0x1400>
    0.00 :   23c52:  add    $0x10,%rcx
    0.00 :   23c56:  movdqa %xmm4,%xmm3
    0.00 :   23c5a:  add    $0x10,%r10
    0.00 :   23c5e:  jg     23cb0 <strcmp+0x880>
    0.00 :   23c60:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23c65:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23c6a:  movdqa %xmm2,%xmm4
    0.00 :   23c6e:  psrldq $0x6,%xmm3
    0.00 :   23c73:  pslldq $0xa,%xmm2
    0.00 :   23c78:  por    %xmm3,%xmm2
    0.00 :   23c7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23c80:  pcmpeqb %xmm2,%xmm1
    0.00 :   23c84:  psubb  %xmm0,%xmm1
    0.00 :   23c88:  pmovmskb %xmm1,%edx
    0.00 :   23c8c:  sub    $0xffff,%edx
    0.00 :   23c92:  jne    24830 <strcmp+0x1400>
    0.00 :   23c98:  add    $0x10,%rcx
    0.00 :   23c9c:  movdqa %xmm4,%xmm3
    0.00 :   23ca0:  jmp    23c10 <strcmp+0x7e0>
    0.00 :   23ca5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23cb0:  pcmpeqb %xmm3,%xmm0
    0.00 :   23cb4:  pmovmskb %xmm0,%edx
    0.00 :   23cb8:  test   $0xffc0,%edx
    0.00 :   23cbe:  jne    23cd0 <strcmp+0x8a0>
    0.00 :   23cc0:  pxor   %xmm0,%xmm0
    0.00 :   23cc4:  sub    $0x1000,%r10
    0.00 :   23ccb:  jmp    23c1a <strcmp+0x7ea>
    0.00 :   23cd0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23cd5:  psrldq $0x6,%xmm0
    0.00 :   23cda:  psrldq $0x6,%xmm3
    0.00 :   23cdf:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23ce4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23cef:  nop
    0.00 :   23cf0:  pxor   %xmm0,%xmm0
    0.00 :   23cf4:  movdqa (%rdi),%xmm2
    0.00 :   23cf8:  movdqa (%rsi),%xmm1
    0.00 :   23cfc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23d00:  pslldq $0x9,%xmm2
    0.00 :   23d05:  pcmpeqb %xmm1,%xmm2
    0.00 :   23d09:  psubb  %xmm0,%xmm2
    0.00 :   23d0d:  pmovmskb %xmm2,%r9d
    0.00 :   23d12:  shr    %cl,%edx
    0.00 :   23d14:  shr    %cl,%r9d
    0.00 :   23d17:  sub    %r9d,%edx
    0.00 :   23d1a:  jne    24835 <strcmp+0x1405>
    0.00 :   23d20:  movdqa (%rdi),%xmm3
    0.00 :   23d24:  pxor   %xmm0,%xmm0
    0.00 :   23d28:  mov    $0x10,%rcx
    0.00 :   23d2f:  mov    $0x7,%r9d
    0.00 :   23d35:  lea    0x7(%rdi),%r10
    0.00 :   23d39:  and    $0xfff,%r10
    0.00 :   23d40:  sub    $0x1000,%r10
    0.00 :   23d47:  nopw   0x0(%rax,%rax,1)
    0.00 :   23d50:  add    $0x10,%r10
    0.00 :   23d54:  jg     23df0 <strcmp+0x9c0>
    0.00 :   23d5a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23d5f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23d64:  movdqa %xmm2,%xmm4
    0.00 :   23d68:  psrldq $0x7,%xmm3
    0.00 :   23d6d:  pslldq $0x9,%xmm2
    0.00 :   23d72:  por    %xmm3,%xmm2
    0.00 :   23d76:  pcmpeqb %xmm1,%xmm0
    0.00 :   23d7a:  pcmpeqb %xmm2,%xmm1
    0.00 :   23d7e:  psubb  %xmm0,%xmm1
    0.00 :   23d82:  pmovmskb %xmm1,%edx
    0.00 :   23d86:  sub    $0xffff,%edx
    0.00 :   23d8c:  jne    24830 <strcmp+0x1400>
    0.00 :   23d92:  add    $0x10,%rcx
    0.00 :   23d96:  movdqa %xmm4,%xmm3
    0.00 :   23d9a:  add    $0x10,%r10
    0.00 :   23d9e:  jg     23df0 <strcmp+0x9c0>
    0.00 :   23da0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23da5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23daa:  movdqa %xmm2,%xmm4
    0.00 :   23dae:  psrldq $0x7,%xmm3
    0.00 :   23db3:  pslldq $0x9,%xmm2
    0.00 :   23db8:  por    %xmm3,%xmm2
    0.00 :   23dbc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23dc0:  pcmpeqb %xmm2,%xmm1
    0.00 :   23dc4:  psubb  %xmm0,%xmm1
    0.00 :   23dc8:  pmovmskb %xmm1,%edx
    0.00 :   23dcc:  sub    $0xffff,%edx
    0.00 :   23dd2:  jne    24830 <strcmp+0x1400>
    0.00 :   23dd8:  add    $0x10,%rcx
    0.00 :   23ddc:  movdqa %xmm4,%xmm3
    0.00 :   23de0:  jmp    23d50 <strcmp+0x920>
    0.00 :   23de5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23df0:  pcmpeqb %xmm3,%xmm0
    0.00 :   23df4:  pmovmskb %xmm0,%edx
    0.00 :   23df8:  test   $0xff80,%edx
    0.00 :   23dfe:  jne    23e10 <strcmp+0x9e0>
    0.00 :   23e00:  pxor   %xmm0,%xmm0
    0.00 :   23e04:  sub    $0x1000,%r10
    0.00 :   23e0b:  jmp    23d5a <strcmp+0x92a>
    0.00 :   23e10:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23e15:  psrldq $0x7,%xmm0
    0.00 :   23e1a:  psrldq $0x7,%xmm3
    0.00 :   23e1f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23e24:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23e2f:  nop
    0.00 :   23e30:  pxor   %xmm0,%xmm0
    0.00 :   23e34:  movdqa (%rdi),%xmm2
    0.00 :   23e38:  movdqa (%rsi),%xmm1
    0.00 :   23e3c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23e40:  pslldq $0x8,%xmm2
    0.00 :   23e45:  pcmpeqb %xmm1,%xmm2
    0.00 :   23e49:  psubb  %xmm0,%xmm2
    0.00 :   23e4d:  pmovmskb %xmm2,%r9d
    0.00 :   23e52:  shr    %cl,%edx
    0.00 :   23e54:  shr    %cl,%r9d
    0.00 :   23e57:  sub    %r9d,%edx
    0.00 :   23e5a:  jne    24835 <strcmp+0x1405>
    0.00 :   23e60:  movdqa (%rdi),%xmm3
    0.00 :   23e64:  pxor   %xmm0,%xmm0
    0.00 :   23e68:  mov    $0x10,%rcx
    0.00 :   23e6f:  mov    $0x8,%r9d
    0.00 :   23e75:  lea    0x8(%rdi),%r10
    0.00 :   23e79:  and    $0xfff,%r10
    0.00 :   23e80:  sub    $0x1000,%r10
    0.00 :   23e87:  nopw   0x0(%rax,%rax,1)
    0.00 :   23e90:  add    $0x10,%r10
    0.00 :   23e94:  jg     23f30 <strcmp+0xb00>
    0.00 :   23e9a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23e9f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23ea4:  movdqa %xmm2,%xmm4
    0.00 :   23ea8:  psrldq $0x8,%xmm3
    0.00 :   23ead:  pslldq $0x8,%xmm2
    0.00 :   23eb2:  por    %xmm3,%xmm2
    0.00 :   23eb6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23eba:  pcmpeqb %xmm2,%xmm1
    0.00 :   23ebe:  psubb  %xmm0,%xmm1
    0.00 :   23ec2:  pmovmskb %xmm1,%edx
    0.00 :   23ec6:  sub    $0xffff,%edx
    0.00 :   23ecc:  jne    24830 <strcmp+0x1400>
    0.00 :   23ed2:  add    $0x10,%rcx
    0.00 :   23ed6:  movdqa %xmm4,%xmm3
    0.00 :   23eda:  add    $0x10,%r10
    0.00 :   23ede:  jg     23f30 <strcmp+0xb00>
    0.00 :   23ee0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23ee5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23eea:  movdqa %xmm2,%xmm4
    0.00 :   23eee:  psrldq $0x8,%xmm3
    0.00 :   23ef3:  pslldq $0x8,%xmm2
    0.00 :   23ef8:  por    %xmm3,%xmm2
    0.00 :   23efc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23f00:  pcmpeqb %xmm2,%xmm1
    0.00 :   23f04:  psubb  %xmm0,%xmm1
    0.00 :   23f08:  pmovmskb %xmm1,%edx
    0.00 :   23f0c:  sub    $0xffff,%edx
    0.00 :   23f12:  jne    24830 <strcmp+0x1400>
    0.00 :   23f18:  add    $0x10,%rcx
    0.00 :   23f1c:  movdqa %xmm4,%xmm3
    0.00 :   23f20:  jmp    23e90 <strcmp+0xa60>
    0.00 :   23f25:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23f30:  pcmpeqb %xmm3,%xmm0
    0.00 :   23f34:  pmovmskb %xmm0,%edx
    0.00 :   23f38:  test   $0xff00,%edx
    0.00 :   23f3e:  jne    23f50 <strcmp+0xb20>
    0.00 :   23f40:  pxor   %xmm0,%xmm0
    0.00 :   23f44:  sub    $0x1000,%r10
    0.00 :   23f4b:  jmp    23e9a <strcmp+0xa6a>
    0.00 :   23f50:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23f55:  psrldq $0x8,%xmm0
    0.00 :   23f5a:  psrldq $0x8,%xmm3
    0.00 :   23f5f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23f64:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23f6f:  nop
    0.00 :   23f70:  pxor   %xmm0,%xmm0
    0.00 :   23f74:  movdqa (%rdi),%xmm2
    0.00 :   23f78:  movdqa (%rsi),%xmm1
    0.00 :   23f7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23f80:  pslldq $0x7,%xmm2
    0.00 :   23f85:  pcmpeqb %xmm1,%xmm2
    0.00 :   23f89:  psubb  %xmm0,%xmm2
    0.00 :   23f8d:  pmovmskb %xmm2,%r9d
    0.00 :   23f92:  shr    %cl,%edx
    0.00 :   23f94:  shr    %cl,%r9d
    0.00 :   23f97:  sub    %r9d,%edx
    0.00 :   23f9a:  jne    24835 <strcmp+0x1405>
    0.00 :   23fa0:  movdqa (%rdi),%xmm3
    0.00 :   23fa4:  pxor   %xmm0,%xmm0
    0.00 :   23fa8:  mov    $0x10,%rcx
    0.00 :   23faf:  mov    $0x9,%r9d
    0.00 :   23fb5:  lea    0x9(%rdi),%r10
    0.00 :   23fb9:  and    $0xfff,%r10
    0.00 :   23fc0:  sub    $0x1000,%r10
    0.00 :   23fc7:  nopw   0x0(%rax,%rax,1)
    0.00 :   23fd0:  add    $0x10,%r10
    0.00 :   23fd4:  jg     24070 <strcmp+0xc40>
    0.00 :   23fda:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23fdf:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23fe4:  movdqa %xmm2,%xmm4
    0.00 :   23fe8:  psrldq $0x9,%xmm3
    0.00 :   23fed:  pslldq $0x7,%xmm2
    0.00 :   23ff2:  por    %xmm3,%xmm2
    0.00 :   23ff6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23ffa:  pcmpeqb %xmm2,%xmm1
    0.00 :   23ffe:  psubb  %xmm0,%xmm1
    0.00 :   24002:  pmovmskb %xmm1,%edx
    0.00 :   24006:  sub    $0xffff,%edx
    0.00 :   2400c:  jne    24830 <strcmp+0x1400>
    0.00 :   24012:  add    $0x10,%rcx
    0.00 :   24016:  movdqa %xmm4,%xmm3
    0.00 :   2401a:  add    $0x10,%r10
    0.00 :   2401e:  jg     24070 <strcmp+0xc40>
    0.00 :   24020:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24025:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2402a:  movdqa %xmm2,%xmm4
    0.00 :   2402e:  psrldq $0x9,%xmm3
    0.00 :   24033:  pslldq $0x7,%xmm2
    0.00 :   24038:  por    %xmm3,%xmm2
    0.00 :   2403c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24040:  pcmpeqb %xmm2,%xmm1
    0.00 :   24044:  psubb  %xmm0,%xmm1
    0.00 :   24048:  pmovmskb %xmm1,%edx
    0.00 :   2404c:  sub    $0xffff,%edx
    0.00 :   24052:  jne    24830 <strcmp+0x1400>
    0.00 :   24058:  add    $0x10,%rcx
    0.00 :   2405c:  movdqa %xmm4,%xmm3
    0.00 :   24060:  jmp    23fd0 <strcmp+0xba0>
    0.00 :   24065:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24070:  pcmpeqb %xmm3,%xmm0
    0.00 :   24074:  pmovmskb %xmm0,%edx
    0.00 :   24078:  test   $0xfe00,%edx
    0.00 :   2407e:  jne    24090 <strcmp+0xc60>
    0.00 :   24080:  pxor   %xmm0,%xmm0
    0.00 :   24084:  sub    $0x1000,%r10
    0.00 :   2408b:  jmp    23fda <strcmp+0xbaa>
    0.00 :   24090:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24095:  psrldq $0x9,%xmm0
    0.00 :   2409a:  psrldq $0x9,%xmm3
    0.00 :   2409f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   240a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   240af:  nop
    0.00 :   240b0:  pxor   %xmm0,%xmm0
    0.00 :   240b4:  movdqa (%rdi),%xmm2
    0.00 :   240b8:  movdqa (%rsi),%xmm1
    0.00 :   240bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   240c0:  pslldq $0x6,%xmm2
    0.00 :   240c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   240c9:  psubb  %xmm0,%xmm2
    0.00 :   240cd:  pmovmskb %xmm2,%r9d
    0.00 :   240d2:  shr    %cl,%edx
    0.00 :   240d4:  shr    %cl,%r9d
    0.00 :   240d7:  sub    %r9d,%edx
    0.00 :   240da:  jne    24835 <strcmp+0x1405>
    0.00 :   240e0:  movdqa (%rdi),%xmm3
    0.00 :   240e4:  pxor   %xmm0,%xmm0
    0.00 :   240e8:  mov    $0x10,%rcx
    0.00 :   240ef:  mov    $0xa,%r9d
    0.00 :   240f5:  lea    0xa(%rdi),%r10
    0.00 :   240f9:  and    $0xfff,%r10
    0.00 :   24100:  sub    $0x1000,%r10
    0.00 :   24107:  nopw   0x0(%rax,%rax,1)
    0.00 :   24110:  add    $0x10,%r10
    0.00 :   24114:  jg     241b0 <strcmp+0xd80>
    0.00 :   2411a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2411f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24124:  movdqa %xmm2,%xmm4
    0.00 :   24128:  psrldq $0xa,%xmm3
    0.00 :   2412d:  pslldq $0x6,%xmm2
    0.00 :   24132:  por    %xmm3,%xmm2
    0.00 :   24136:  pcmpeqb %xmm1,%xmm0
    0.00 :   2413a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2413e:  psubb  %xmm0,%xmm1
    0.00 :   24142:  pmovmskb %xmm1,%edx
    0.00 :   24146:  sub    $0xffff,%edx
    0.00 :   2414c:  jne    24830 <strcmp+0x1400>
    0.00 :   24152:  add    $0x10,%rcx
    0.00 :   24156:  movdqa %xmm4,%xmm3
    0.00 :   2415a:  add    $0x10,%r10
    0.00 :   2415e:  jg     241b0 <strcmp+0xd80>
    0.00 :   24160:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24165:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2416a:  movdqa %xmm2,%xmm4
    0.00 :   2416e:  psrldq $0xa,%xmm3
    0.00 :   24173:  pslldq $0x6,%xmm2
    0.00 :   24178:  por    %xmm3,%xmm2
    0.00 :   2417c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24180:  pcmpeqb %xmm2,%xmm1
    0.00 :   24184:  psubb  %xmm0,%xmm1
    0.00 :   24188:  pmovmskb %xmm1,%edx
    0.00 :   2418c:  sub    $0xffff,%edx
    0.00 :   24192:  jne    24830 <strcmp+0x1400>
    0.00 :   24198:  add    $0x10,%rcx
    0.00 :   2419c:  movdqa %xmm4,%xmm3
    0.00 :   241a0:  jmp    24110 <strcmp+0xce0>
    0.00 :   241a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   241b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   241b4:  pmovmskb %xmm0,%edx
    0.00 :   241b8:  test   $0xfc00,%edx
    0.00 :   241be:  jne    241d0 <strcmp+0xda0>
    0.00 :   241c0:  pxor   %xmm0,%xmm0
    0.00 :   241c4:  sub    $0x1000,%r10
    0.00 :   241cb:  jmp    2411a <strcmp+0xcea>
    0.00 :   241d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   241d5:  psrldq $0xa,%xmm0
    0.00 :   241da:  psrldq $0xa,%xmm3
    0.00 :   241df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   241e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   241ef:  nop
    0.00 :   241f0:  pxor   %xmm0,%xmm0
    0.00 :   241f4:  movdqa (%rdi),%xmm2
    0.00 :   241f8:  movdqa (%rsi),%xmm1
    0.00 :   241fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24200:  pslldq $0x5,%xmm2
    0.00 :   24205:  pcmpeqb %xmm1,%xmm2
    0.00 :   24209:  psubb  %xmm0,%xmm2
    0.00 :   2420d:  pmovmskb %xmm2,%r9d
    0.00 :   24212:  shr    %cl,%edx
    0.00 :   24214:  shr    %cl,%r9d
    0.00 :   24217:  sub    %r9d,%edx
    0.00 :   2421a:  jne    24835 <strcmp+0x1405>
    0.00 :   24220:  movdqa (%rdi),%xmm3
    0.00 :   24224:  pxor   %xmm0,%xmm0
    0.00 :   24228:  mov    $0x10,%rcx
    0.00 :   2422f:  mov    $0xb,%r9d
    0.00 :   24235:  lea    0xb(%rdi),%r10
    0.00 :   24239:  and    $0xfff,%r10
    0.00 :   24240:  sub    $0x1000,%r10
    0.00 :   24247:  nopw   0x0(%rax,%rax,1)
    0.00 :   24250:  add    $0x10,%r10
    0.00 :   24254:  jg     242f0 <strcmp+0xec0>
    0.00 :   2425a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2425f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24264:  movdqa %xmm2,%xmm4
    0.00 :   24268:  psrldq $0xb,%xmm3
    0.00 :   2426d:  pslldq $0x5,%xmm2
    0.00 :   24272:  por    %xmm3,%xmm2
    0.00 :   24276:  pcmpeqb %xmm1,%xmm0
    0.00 :   2427a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2427e:  psubb  %xmm0,%xmm1
    0.00 :   24282:  pmovmskb %xmm1,%edx
    0.00 :   24286:  sub    $0xffff,%edx
    0.00 :   2428c:  jne    24830 <strcmp+0x1400>
    0.00 :   24292:  add    $0x10,%rcx
    0.00 :   24296:  movdqa %xmm4,%xmm3
    0.00 :   2429a:  add    $0x10,%r10
    0.00 :   2429e:  jg     242f0 <strcmp+0xec0>
    0.00 :   242a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   242a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   242aa:  movdqa %xmm2,%xmm4
    0.00 :   242ae:  psrldq $0xb,%xmm3
    0.00 :   242b3:  pslldq $0x5,%xmm2
    0.00 :   242b8:  por    %xmm3,%xmm2
    0.00 :   242bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   242c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   242c4:  psubb  %xmm0,%xmm1
    0.00 :   242c8:  pmovmskb %xmm1,%edx
    0.00 :   242cc:  sub    $0xffff,%edx
    0.00 :   242d2:  jne    24830 <strcmp+0x1400>
    0.00 :   242d8:  add    $0x10,%rcx
    0.00 :   242dc:  movdqa %xmm4,%xmm3
    0.00 :   242e0:  jmp    24250 <strcmp+0xe20>
    0.00 :   242e5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   242f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   242f4:  pmovmskb %xmm0,%edx
    0.00 :   242f8:  test   $0xf800,%edx
    0.00 :   242fe:  jne    24310 <strcmp+0xee0>
    0.00 :   24300:  pxor   %xmm0,%xmm0
    0.00 :   24304:  sub    $0x1000,%r10
    0.00 :   2430b:  jmp    2425a <strcmp+0xe2a>
    0.00 :   24310:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24315:  psrldq $0xb,%xmm0
    0.00 :   2431a:  psrldq $0xb,%xmm3
    0.00 :   2431f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   24324:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2432f:  nop
    0.00 :   24330:  pxor   %xmm0,%xmm0
    0.00 :   24334:  movdqa (%rdi),%xmm2
    0.00 :   24338:  movdqa (%rsi),%xmm1
    0.00 :   2433c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24340:  pslldq $0x4,%xmm2
    0.00 :   24345:  pcmpeqb %xmm1,%xmm2
    0.00 :   24349:  psubb  %xmm0,%xmm2
    0.00 :   2434d:  pmovmskb %xmm2,%r9d
    0.00 :   24352:  shr    %cl,%edx
    0.00 :   24354:  shr    %cl,%r9d
    0.00 :   24357:  sub    %r9d,%edx
    0.00 :   2435a:  jne    24835 <strcmp+0x1405>
    0.00 :   24360:  movdqa (%rdi),%xmm3
    0.00 :   24364:  pxor   %xmm0,%xmm0
    0.00 :   24368:  mov    $0x10,%rcx
    0.00 :   2436f:  mov    $0xc,%r9d
    0.00 :   24375:  lea    0xc(%rdi),%r10
    0.00 :   24379:  and    $0xfff,%r10
    0.00 :   24380:  sub    $0x1000,%r10
    0.00 :   24387:  nopw   0x0(%rax,%rax,1)
    0.00 :   24390:  add    $0x10,%r10
    0.00 :   24394:  jg     24430 <strcmp+0x1000>
    0.00 :   2439a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2439f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   243a4:  movdqa %xmm2,%xmm4
    0.00 :   243a8:  psrldq $0xc,%xmm3
    0.00 :   243ad:  pslldq $0x4,%xmm2
    0.00 :   243b2:  por    %xmm3,%xmm2
    0.00 :   243b6:  pcmpeqb %xmm1,%xmm0
    0.00 :   243ba:  pcmpeqb %xmm2,%xmm1
    0.00 :   243be:  psubb  %xmm0,%xmm1
    0.00 :   243c2:  pmovmskb %xmm1,%edx
    0.00 :   243c6:  sub    $0xffff,%edx
    0.00 :   243cc:  jne    24830 <strcmp+0x1400>
    0.00 :   243d2:  add    $0x10,%rcx
    0.00 :   243d6:  movdqa %xmm4,%xmm3
    0.00 :   243da:  add    $0x10,%r10
    0.00 :   243de:  jg     24430 <strcmp+0x1000>
    0.00 :   243e0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   243e5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   243ea:  movdqa %xmm2,%xmm4
    0.00 :   243ee:  psrldq $0xc,%xmm3
    0.00 :   243f3:  pslldq $0x4,%xmm2
    0.00 :   243f8:  por    %xmm3,%xmm2
    0.00 :   243fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24400:  pcmpeqb %xmm2,%xmm1
    0.00 :   24404:  psubb  %xmm0,%xmm1
    0.00 :   24408:  pmovmskb %xmm1,%edx
    0.00 :   2440c:  sub    $0xffff,%edx
    0.00 :   24412:  jne    24830 <strcmp+0x1400>
    0.00 :   24418:  add    $0x10,%rcx
    0.00 :   2441c:  movdqa %xmm4,%xmm3
    0.00 :   24420:  jmp    24390 <strcmp+0xf60>
    0.00 :   24425:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24430:  pcmpeqb %xmm3,%xmm0
    0.00 :   24434:  pmovmskb %xmm0,%edx
    0.00 :   24438:  test   $0xf000,%edx
    0.00 :   2443e:  jne    24450 <strcmp+0x1020>
    0.00 :   24440:  pxor   %xmm0,%xmm0
    0.00 :   24444:  sub    $0x1000,%r10
    0.00 :   2444b:  jmp    2439a <strcmp+0xf6a>
    0.00 :   24450:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24455:  psrldq $0xc,%xmm0
    0.00 :   2445a:  psrldq $0xc,%xmm3
    0.00 :   2445f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   24464:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2446f:  nop
    0.00 :   24470:  pxor   %xmm0,%xmm0
    0.00 :   24474:  movdqa (%rdi),%xmm2
    0.00 :   24478:  movdqa (%rsi),%xmm1
    0.00 :   2447c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24480:  pslldq $0x3,%xmm2
    0.00 :   24485:  pcmpeqb %xmm1,%xmm2
    0.00 :   24489:  psubb  %xmm0,%xmm2
    0.00 :   2448d:  pmovmskb %xmm2,%r9d
    0.00 :   24492:  shr    %cl,%edx
    0.00 :   24494:  shr    %cl,%r9d
    0.00 :   24497:  sub    %r9d,%edx
    0.00 :   2449a:  jne    24835 <strcmp+0x1405>
    0.00 :   244a0:  movdqa (%rdi),%xmm3
    0.00 :   244a4:  pxor   %xmm0,%xmm0
    0.00 :   244a8:  mov    $0x10,%rcx
    0.00 :   244af:  mov    $0xd,%r9d
    0.00 :   244b5:  lea    0xd(%rdi),%r10
    0.00 :   244b9:  and    $0xfff,%r10
    0.00 :   244c0:  sub    $0x1000,%r10
    0.00 :   244c7:  nopw   0x0(%rax,%rax,1)
    0.00 :   244d0:  add    $0x10,%r10
    0.00 :   244d4:  jg     24570 <strcmp+0x1140>
    0.00 :   244da:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   244df:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   244e4:  movdqa %xmm2,%xmm4
    0.00 :   244e8:  psrldq $0xd,%xmm3
    0.00 :   244ed:  pslldq $0x3,%xmm2
    0.00 :   244f2:  por    %xmm3,%xmm2
    0.00 :   244f6:  pcmpeqb %xmm1,%xmm0
    0.00 :   244fa:  pcmpeqb %xmm2,%xmm1
    0.00 :   244fe:  psubb  %xmm0,%xmm1
    0.00 :   24502:  pmovmskb %xmm1,%edx
    0.00 :   24506:  sub    $0xffff,%edx
    0.00 :   2450c:  jne    24830 <strcmp+0x1400>
    0.00 :   24512:  add    $0x10,%rcx
    0.00 :   24516:  movdqa %xmm4,%xmm3
    0.00 :   2451a:  add    $0x10,%r10
    0.00 :   2451e:  jg     24570 <strcmp+0x1140>
    0.00 :   24520:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24525:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2452a:  movdqa %xmm2,%xmm4
    0.00 :   2452e:  psrldq $0xd,%xmm3
    0.00 :   24533:  pslldq $0x3,%xmm2
    0.00 :   24538:  por    %xmm3,%xmm2
    0.00 :   2453c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24540:  pcmpeqb %xmm2,%xmm1
    0.00 :   24544:  psubb  %xmm0,%xmm1
    0.00 :   24548:  pmovmskb %xmm1,%edx
    0.00 :   2454c:  sub    $0xffff,%edx
    0.00 :   24552:  jne    24830 <strcmp+0x1400>
    0.00 :   24558:  add    $0x10,%rcx
    0.00 :   2455c:  movdqa %xmm4,%xmm3
    0.00 :   24560:  jmp    244d0 <strcmp+0x10a0>
    0.00 :   24565:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24570:  pcmpeqb %xmm3,%xmm0
    0.00 :   24574:  pmovmskb %xmm0,%edx
    0.00 :   24578:  test   $0xe000,%edx
    0.00 :   2457e:  jne    24590 <strcmp+0x1160>
    0.00 :   24580:  pxor   %xmm0,%xmm0
    0.00 :   24584:  sub    $0x1000,%r10
    0.00 :   2458b:  jmp    244da <strcmp+0x10aa>
    0.00 :   24590:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24595:  psrldq $0xd,%xmm0
    0.00 :   2459a:  psrldq $0xd,%xmm3
    0.00 :   2459f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   245a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   245af:  nop
    0.00 :   245b0:  pxor   %xmm0,%xmm0
    0.00 :   245b4:  movdqa (%rdi),%xmm2
    0.00 :   245b8:  movdqa (%rsi),%xmm1
    0.00 :   245bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   245c0:  pslldq $0x2,%xmm2
    0.00 :   245c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   245c9:  psubb  %xmm0,%xmm2
    0.00 :   245cd:  pmovmskb %xmm2,%r9d
    0.00 :   245d2:  shr    %cl,%edx
    0.00 :   245d4:  shr    %cl,%r9d
    0.00 :   245d7:  sub    %r9d,%edx
    0.00 :   245da:  jne    24835 <strcmp+0x1405>
    0.00 :   245e0:  movdqa (%rdi),%xmm3
    0.00 :   245e4:  pxor   %xmm0,%xmm0
    0.00 :   245e8:  mov    $0x10,%rcx
    0.00 :   245ef:  mov    $0xe,%r9d
    0.00 :   245f5:  lea    0xe(%rdi),%r10
    0.00 :   245f9:  and    $0xfff,%r10
    0.00 :   24600:  sub    $0x1000,%r10
    0.00 :   24607:  nopw   0x0(%rax,%rax,1)
    0.00 :   24610:  add    $0x10,%r10
    0.00 :   24614:  jg     246b0 <strcmp+0x1280>
    0.00 :   2461a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2461f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24624:  movdqa %xmm2,%xmm4
    0.00 :   24628:  psrldq $0xe,%xmm3
    0.00 :   2462d:  pslldq $0x2,%xmm2
    0.00 :   24632:  por    %xmm3,%xmm2
    0.00 :   24636:  pcmpeqb %xmm1,%xmm0
    0.00 :   2463a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2463e:  psubb  %xmm0,%xmm1
    0.00 :   24642:  pmovmskb %xmm1,%edx
    0.00 :   24646:  sub    $0xffff,%edx
    0.00 :   2464c:  jne    24830 <strcmp+0x1400>
    0.00 :   24652:  add    $0x10,%rcx
    0.00 :   24656:  movdqa %xmm4,%xmm3
    0.00 :   2465a:  add    $0x10,%r10
    0.00 :   2465e:  jg     246b0 <strcmp+0x1280>
    0.00 :   24660:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24665:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2466a:  movdqa %xmm2,%xmm4
    0.00 :   2466e:  psrldq $0xe,%xmm3
    0.00 :   24673:  pslldq $0x2,%xmm2
    0.00 :   24678:  por    %xmm3,%xmm2
    0.00 :   2467c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24680:  pcmpeqb %xmm2,%xmm1
    0.00 :   24684:  psubb  %xmm0,%xmm1
    0.00 :   24688:  pmovmskb %xmm1,%edx
    0.00 :   2468c:  sub    $0xffff,%edx
    0.00 :   24692:  jne    24830 <strcmp+0x1400>
    0.00 :   24698:  add    $0x10,%rcx
    0.00 :   2469c:  movdqa %xmm4,%xmm3
    0.00 :   246a0:  jmp    24610 <strcmp+0x11e0>
    0.00 :   246a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   246b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   246b4:  pmovmskb %xmm0,%edx
    0.00 :   246b8:  test   $0xc000,%edx
    0.00 :   246be:  jne    246d0 <strcmp+0x12a0>
    0.00 :   246c0:  pxor   %xmm0,%xmm0
    0.00 :   246c4:  sub    $0x1000,%r10
    0.00 :   246cb:  jmp    2461a <strcmp+0x11ea>
    0.00 :   246d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   246d5:  psrldq $0xe,%xmm0
    0.00 :   246da:  psrldq $0xe,%xmm3
    0.00 :   246df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   246e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   246ef:  nop
    0.00 :   246f0:  pxor   %xmm0,%xmm0
    0.00 :   246f4:  movdqa (%rdi),%xmm2
    0.00 :   246f8:  movdqa (%rsi),%xmm1
    0.00 :   246fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24700:  pslldq $0x1,%xmm2
    0.00 :   24705:  pcmpeqb %xmm1,%xmm2
    0.00 :   24709:  psubb  %xmm0,%xmm2
    0.00 :   2470d:  pmovmskb %xmm2,%r9d
    0.00 :   24712:  shr    %cl,%edx
    0.00 :   24714:  shr    %cl,%r9d
    0.00 :   24717:  sub    %r9d,%edx
    0.00 :   2471a:  jne    24835 <strcmp+0x1405>
    0.00 :   24720:  movdqa (%rdi),%xmm3
    0.00 :   24724:  pxor   %xmm0,%xmm0
    0.00 :   24728:  mov    $0x10,%rcx
    0.00 :   2472f:  mov    $0xf,%r9d
    0.00 :   24735:  lea    0xf(%rdi),%r10
    0.00 :   24739:  and    $0xfff,%r10
    0.00 :   24740:  sub    $0x1000,%r10
    0.00 :   24747:  nopw   0x0(%rax,%rax,1)
    0.00 :   24750:  add    $0x10,%r10
    0.00 :   24754:  jg     247f0 <strcmp+0x13c0>
    0.00 :   2475a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2475f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24764:  movdqa %xmm2,%xmm4
    0.00 :   24768:  psrldq $0xf,%xmm3
    0.00 :   2476d:  pslldq $0x1,%xmm2
    0.00 :   24772:  por    %xmm3,%xmm2
    0.00 :   24776:  pcmpeqb %xmm1,%xmm0
    0.00 :   2477a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2477e:  psubb  %xmm0,%xmm1
    0.00 :   24782:  pmovmskb %xmm1,%edx
    0.00 :   24786:  sub    $0xffff,%edx
    0.00 :   2478c:  jne    24830 <strcmp+0x1400>
    0.00 :   24792:  add    $0x10,%rcx
    0.00 :   24796:  movdqa %xmm4,%xmm3
    0.00 :   2479a:  add    $0x10,%r10
    0.00 :   2479e:  jg     247f0 <strcmp+0x13c0>
    0.00 :   247a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   247a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   247aa:  movdqa %xmm2,%xmm4
    0.00 :   247ae:  psrldq $0xf,%xmm3
    0.00 :   247b3:  pslldq $0x1,%xmm2
    0.00 :   247b8:  por    %xmm3,%xmm2
    0.00 :   247bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   247c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   247c4:  psubb  %xmm0,%xmm1
    0.00 :   247c8:  pmovmskb %xmm1,%edx
    0.00 :   247cc:  sub    $0xffff,%edx
    0.00 :   247d2:  jne    24830 <strcmp+0x1400>
    0.00 :   247d4:  add    $0x10,%rcx
    0.00 :   247d8:  movdqa %xmm4,%xmm3
    0.00 :   247dc:  jmp    24750 <strcmp+0x1320>
    0.00 :   247e1:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   247ec:  nopl   0x0(%rax)
    0.00 :   247f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   247f4:  pmovmskb %xmm0,%edx
    0.00 :   247f8:  test   $0x8000,%edx
    0.00 :   247fe:  jne    24810 <strcmp+0x13e0>
    0.00 :   24800:  pxor   %xmm0,%xmm0
    0.00 :   24804:  sub    $0x1000,%r10
    0.00 :   2480b:  jmp    2475a <strcmp+0x132a>
    0.00 :   24810:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24815:  psrldq $0xf,%xmm3
    0.00 :   2481a:  psrldq $0xf,%xmm0
    0.00 :   2481f:  nop
    0.00 :   24820:  pcmpeqb %xmm3,%xmm1
    0.00 :   24824:  psubb  %xmm0,%xmm1
    0.00 :   24828:  pmovmskb %xmm1,%edx
    0.00 :   2482c:  not    %edx
    0.00 :   2482e:  xchg   %ax,%ax
    0.00 :   24830:  lea    -0x10(%r9,%rcx,1),%rax
    0.00 :   24835:  lea    (%rdi,%rax,1),%rdi
    0.00 :   24839:  lea    (%rsi,%rcx,1),%rsi
    0.00 :   2483d:  test   %r8d,%r8d
    0.00 :   24840:  je     24850 <strcmp+0x1420>
    0.00 :   24842:  xchg   %rsi,%rdi
    0.00 :   24845:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24850:  bsf    %rdx,%rdx
    0.00 :   24854:  movzbl (%rsi,%rdx,1),%ecx
    0.00 :   24858:  movzbl (%rdi,%rdx,1),%eax
    0.00 :   2485c:  sub    %ecx,%eax
    0.00 :   2485e:  ret
    0.00 :   2485f:  xor    %eax,%eax
    0.00 :   24861:  ret
    0.00 :   24862:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2486d:  nopl   (%rax)
    0.00 :   24870:  movzbl (%rsi),%ecx
    0.00 :   24873:  movzbl (%rdi),%eax
    0.00 :   24876:  sub    %ecx,%eax
    0.00 :   24878:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   32.65 libc.so.6[10dc7a]
   32.50 libc.so.6[10dc74]
   18.23 libc.so.6[10dc00]
    9.74 libc.so.6[10dc6c]
    6.89 libc.so.6[10dc0b]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (12 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000010dc00 <__recv>:
         : 6      __libc_recv():
   18.23 :   10dc00: endbr64 // libc.so.6[10dc00]
    0.00 :   10dc04: cmpb   $0x0,0xcd9ed(%rip)        # 1db5f8 <__libc_single_threaded>
    6.89 :   10dc0b: mov    %ecx,%r10d // libc.so.6[10dc0b]
    0.00 :   10dc0e: je     10dc30 <__recv+0x30>
    0.00 :   10dc10: xor    %r9d,%r9d
    0.00 :   10dc13: xor    %r8d,%r8d
    0.00 :   10dc16: mov    $0x2d,%eax
    0.00 :   10dc1b: syscall
    0.00 :   10dc1d: cmp    $0xfffffffffffff000,%rax
    0.00 :   10dc23: ja     10dc90 <__recv+0x90>
    0.00 :   10dc25: ret
    0.00 :   10dc26: cs nopw 0x0(%rax,%rax,1)
    0.00 :   10dc30: push   %rbp
    0.00 :   10dc31: sub    $0x20,%rsp
    0.00 :   10dc35: mov    %rdx,0x10(%rsp)
    0.00 :   10dc3a: mov    %rsi,0x8(%rsp)
    0.00 :   10dc3f: mov    %edi,(%rsp)
    0.00 :   10dc42: mov    %ecx,0x1c(%rsp)
    0.00 :   10dc46: call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   10dc4b: mov    0x1c(%rsp),%r10d
    0.00 :   10dc50: mov    (%rsp),%edi
    0.00 :   10dc53: xor    %r9d,%r9d
    0.00 :   10dc56: mov    %eax,%ebp
    0.00 :   10dc58: mov    0x10(%rsp),%rdx
    0.00 :   10dc5d: mov    0x8(%rsp),%rsi
    0.00 :   10dc62: xor    %r8d,%r8d
    0.00 :   10dc65: mov    $0x2d,%eax
    0.00 :   10dc6a: syscall
    9.74 :   10dc6c: cmp    $0xfffffffffffff000,%rax // libc.so.6[10dc6c]
    0.00 :   10dc72: ja     10dca8 <__recv+0xa8>
   32.50 :   10dc74: mov    %ebp,%edi // libc.so.6[10dc74]
    0.00 :   10dc76: mov    %rax,(%rsp)
   32.65 :   10dc7a: call   87640 <__GI___pthread_disable_asynccancel> // libc.so.6[10dc7a]
    0.00 :   10dc7f: mov    (%rsp),%rax
    0.00 :   10dc83: add    $0x20,%rsp
    0.00 :   10dc87: pop    %rbp
    0.00 :   10dc88: ret
    0.00 :   10dc89: nopl   0x0(%rax)
    0.00 :   10dc90: mov    0xc5179(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dc97: neg    %eax
    0.00 :   10dc99: mov    %eax,%fs:(%rdx)
    0.00 :   10dc9c: mov    $0xffffffffffffffff,%rax
    0.00 :   10dca3: ret
    0.00 :   10dca4: nopl   0x0(%rax)
    0.00 :   10dca8: mov    0xc5161(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dcaf: neg    %eax
    0.00 :   10dcb1: mov    %eax,%fs:(%rdx)
    0.00 :   10dcb4: mov    $0xffffffffffffffff,%rax
    0.00 :   10dcbb: jmp    10dc74 <__recv+0x74>

Sorted summary for file [vdso]
----------------------------------------------

   75.92 [vdso][780]
   10.21 [vdso][781]
    8.29 [vdso][7a1]
    5.58 [vdso][830]
 Percent |	Source code & Disassembly of [vdso] for cycles (12 samples, percent: local period)
--------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000780 <__vdso_gettimeofday@@LINUX_2.6>:
   75.92 :   780:    push   %rbp // [vdso][780]
   10.21 :   781:    mov    %rdi,%r10 // [vdso][781]
    0.00 :   784:    mov    %rsi,%r11
    0.00 :   787:    mov    %rsp,%rbp
    0.00 :   78a:    push   %r12
    0.00 :   78c:    lea    -0x4713(%rip),%r12        # ffffffffffffc080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb430>
    0.00 :   793:    push   %rbx
    0.00 :   794:    test   %rdi,%rdi
    0.00 :   797:    je     830 <__vdso_gettimeofday@@LINUX_2.6+0xb0>
    0.00 :   79d:    mov    (%r12),%ebx
    8.29 :   7a1:    test   $0x1,%bl // [vdso][7a1]
    0.00 :   7a4:    jne    86e <__vdso_gettimeofday@@LINUX_2.6+0xee>
    0.00 :   7aa:    mov    -0x472c(%rip),%edi        # ffffffffffffc084 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb434>
    0.00 :   7b0:    call   6b0 <LINUX_2.6@@LINUX_2.6+0x6b0>
    0.00 :   7b5:    mov    %rax,%rdx
    0.00 :   7b8:    test   %rax,%rax
    0.00 :   7bb:    js     881 <__vdso_gettimeofday@@LINUX_2.6+0x101>
    0.00 :   7c1:    mov    -0x4740(%rip),%rcx        # ffffffffffffc088 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb438>
    0.00 :   7c8:    mov    -0x4727(%rip),%rax        # ffffffffffffc0a8 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb458>
    0.00 :   7cf:    mov    -0x473d(%rip),%esi        # ffffffffffffc098 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb448>
    0.00 :   7d5:    cmp    %rdx,%rcx
    0.00 :   7d8:    jae    7e4 <__vdso_gettimeofday@@LINUX_2.6+0x64>
    0.00 :   7da:    sub    %rcx,%rdx
    0.00 :   7dd:    imul   %rsi,%rdx
    0.00 :   7e1:    add    %rdx,%rax
    0.00 :   7e4:    mov    -0x474e(%rip),%ecx        # ffffffffffffc09c <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb44c>
    0.00 :   7ea:    mov    -0x4751(%rip),%rsi        # ffffffffffffc0a0 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb450>
    0.00 :   7f1:    mov    (%r12),%edx
    0.00 :   7f5:    cmp    %edx,%ebx
    0.00 :   7f7:    jne    79d <__vdso_gettimeofday@@LINUX_2.6+0x1d>
    0.00 :   7f9:    shr    %cl,%rax
    0.00 :   7fc:    cmp    $0x3b9ac9ff,%rax
    0.00 :   802:    jbe    81a <__vdso_gettimeofday@@LINUX_2.6+0x9a>
    0.00 :   804:    xor    %edx,%edx
    0.00 :   806:    sub    $0x3b9aca00,%rax
    0.00 :   80c:    add    $0x1,%edx
    0.00 :   80f:    cmp    $0x3b9ac9ff,%rax
    0.00 :   815:    ja     806 <__vdso_gettimeofday@@LINUX_2.6+0x86>
    0.00 :   817:    add    %rdx,%rsi
    0.00 :   81a:    mov    %eax,%eax
    0.00 :   81c:    mov    %rsi,(%r10)
    0.00 :   81f:    imul   $0x10624dd3,%rax,%rax
    0.00 :   826:    shr    $0x26,%rax
    0.00 :   82a:    mov    %eax,%eax
    0.00 :   82c:    mov    %rax,0x8(%r10)
    5.58 :   830:    test   %r11,%r11 // [vdso][830]
    0.00 :   833:    jne    83d <__vdso_gettimeofday@@LINUX_2.6+0xbd>
    0.00 :   835:    xor    %eax,%eax
    0.00 :   837:    pop    %rbx
    0.00 :   838:    pop    %r12
    0.00 :   83a:    pop    %rbp
    0.00 :   83b:    ret
    0.00 :   83c:    int3
    0.00 :   83d:    lea    -0x47c4(%rip),%rdx        # ffffffffffffc080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb430>
    0.00 :   844:    lea    -0x17cb(%rip),%rax        # fffffffffffff080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe430>
    0.00 :   84b:    cmpl   $0x7fffffff,-0x47d1(%rip)        # ffffffffffffc084 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb434>
    0.00 :   855:    cmovne %rdx,%rax
    0.00 :   859:    mov    0xe0(%rax),%edx
    0.00 :   85f:    mov    %edx,(%r11)
    0.00 :   862:    mov    0xe4(%rax),%eax
    0.00 :   868:    mov    %eax,0x4(%r11)
    0.00 :   86c:    jmp    835 <__vdso_gettimeofday@@LINUX_2.6+0xb5>
    0.00 :   86e:    cmpl   $0x7fffffff,-0x47f4(%rip)        # ffffffffffffc084 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb434>
    0.00 :   878:    je     890 <__vdso_gettimeofday@@LINUX_2.6+0x110>
    0.00 :   87a:    pause
    0.00 :   87c:    jmp    79d <__vdso_gettimeofday@@LINUX_2.6+0x1d>
    0.00 :   881:    mov    $0x60,%eax
    0.00 :   886:    mov    %r10,%rdi
    0.00 :   889:    mov    %r11,%rsi
    0.00 :   88c:    syscall
    0.00 :   88e:    jmp    837 <__vdso_gettimeofday@@LINUX_2.6+0xb7>
    0.00 :   890:    lea    -0x1817(%rip),%r12        # fffffffffffff080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe430>
    0.00 :   897:    mov    (%r12),%ebx
    0.00 :   89b:    test   $0x1,%bl
    0.00 :   89e:    jne    925 <__vdso_gettimeofday@@LINUX_2.6+0x1a5>
    0.00 :   8a4:    mov    -0x1826(%rip),%edi        # fffffffffffff084 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe434>
    0.00 :   8aa:    call   6b0 <LINUX_2.6@@LINUX_2.6+0x6b0>
    0.00 :   8af:    mov    %rax,%rdx
    0.00 :   8b2:    test   %rax,%rax
    0.00 :   8b5:    js     881 <__vdso_gettimeofday@@LINUX_2.6+0x101>
    0.00 :   8b7:    mov    -0x1836(%rip),%rsi        # fffffffffffff088 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe438>
    0.00 :   8be:    mov    -0x181d(%rip),%rax        # fffffffffffff0a8 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe458>
    0.00 :   8c5:    mov    -0x1833(%rip),%ecx        # fffffffffffff098 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe448>
    0.00 :   8cb:    cmp    %rdx,%rsi
    0.00 :   8ce:    jae    8da <__vdso_gettimeofday@@LINUX_2.6+0x15a>
    0.00 :   8d0:    sub    %rsi,%rdx
    0.00 :   8d3:    imul   %rcx,%rdx
    0.00 :   8d7:    add    %rdx,%rax
    0.00 :   8da:    mov    -0x1844(%rip),%ecx        # fffffffffffff09c <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe44c>
    0.00 :   8e0:    mov    -0x1847(%rip),%rdi        # fffffffffffff0a0 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe450>
    0.00 :   8e7:    mov    (%r12),%edx
    0.00 :   8eb:    cmp    %ebx,%edx
    0.00 :   8ed:    jne    897 <__vdso_gettimeofday@@LINUX_2.6+0x117>
    0.00 :   8ef:    shr    %cl,%rax
    0.00 :   8f2:    add    -0x4851(%rip),%rax        # ffffffffffffc0a8 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb458>
    0.00 :   8f9:    add    -0x4860(%rip),%rdi        # ffffffffffffc0a0 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb450>
    0.00 :   900:    xor    %edx,%edx
    0.00 :   902:    cmp    $0x3b9ac9ff,%rax
    0.00 :   908:    jbe    91b <__vdso_gettimeofday@@LINUX_2.6+0x19b>
    0.00 :   90a:    sub    $0x3b9aca00,%rax
    0.00 :   910:    add    $0x1,%edx
    0.00 :   913:    cmp    $0x3b9ac9ff,%rax
    0.00 :   919:    ja     90a <__vdso_gettimeofday@@LINUX_2.6+0x18a>
    0.00 :   91b:    mov    %edx,%esi
    0.00 :   91d:    add    %rdi,%rsi
    0.00 :   920:    jmp    81a <__vdso_gettimeofday@@LINUX_2.6+0x9a>
    0.00 :   925:    pause
    0.00 :   927:    jmp    897 <__vdso_gettimeofday@@LINUX_2.6+0x117>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   38.27 libc.so.6[d2008]
   28.21 libc.so.6[d1ffe]
    9.56 libc.so.6[d1fd4]
    8.95 libc.so.6[d1fe5]
    8.00 libc.so.6[d200c]
    7.02 libc.so.6[d1fa0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (11 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000d1fa0 <clock_nanosleep@@GLIBC_2.17>:
         : 6     __clock_nanosleep():
    7.02 :   d1fa0:  endbr64 // libc.so.6[d1fa0]
    0.00 :   d1fa4:  cmp    $0x3,%edi
    0.00 :   d1fa7:  je     d2020 <clock_nanosleep@@GLIBC_2.17+0x80>
    0.00 :   d1fa9:  cmp    $0x2,%edi
    0.00 :   d1fac:  mov    $0xfffffffa,%eax
    0.00 :   d1fb1:  mov    %rcx,%r10
    0.00 :   d1fb4:  cmove  %eax,%edi
    0.00 :   d1fb7:  cmpb   $0x0,0x10963a(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   d1fbe:  je     d1fd0 <clock_nanosleep@@GLIBC_2.17+0x30>
    0.00 :   d1fc0:  mov    $0xe6,%eax
    0.00 :   d1fc5:  syscall
    0.00 :   d1fc7:  neg    %eax
    0.00 :   d1fc9:  ret
    0.00 :   d1fca:  nopw   0x0(%rax,%rax,1)
    0.00 :   d1fd0:  sub    $0x28,%rsp
    9.56 :   d1fd4:  mov    %rdx,0x10(%rsp) // libc.so.6[d1fd4]
    0.00 :   d1fd9:  mov    %esi,0xc(%rsp)
    0.00 :   d1fdd:  mov    %edi,(%rsp)
    0.00 :   d1fe0:  mov    %rcx,0x18(%rsp)
    8.95 :   d1fe5:  call   875c0 <__GI___pthread_enable_asynccancel> // libc.so.6[d1fe5]
    0.00 :   d1fea:  mov    0x18(%rsp),%r10
    0.00 :   d1fef:  mov    0x10(%rsp),%rdx
    0.00 :   d1ff4:  mov    %eax,%r8d
    0.00 :   d1ff7:  mov    0xc(%rsp),%esi
    0.00 :   d1ffb:  mov    (%rsp),%edi
   28.21 :   d1ffe:  mov    $0xe6,%eax // libc.so.6[d1ffe]
    0.00 :   d2003:  syscall
    0.00 :   d2005:  mov    %r8d,%edi
   38.27 :   d2008:  mov    %rax,(%rsp) // libc.so.6[d2008]
    8.00 :   d200c:  call   87640 <__GI___pthread_disable_asynccancel> // libc.so.6[d200c]
    0.00 :   d2011:  mov    (%rsp),%rax
    0.00 :   d2015:  add    $0x28,%rsp
    0.00 :   d2019:  neg    %eax
    0.00 :   d201b:  ret
    0.00 :   d201c:  nopl   0x0(%rax)
    0.00 :   d2020:  mov    $0x16,%eax
    0.00 :   d2025:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/arch/x86/kvm/kvm.ko.xz
----------------------------------------------

   72.20 [kvm][1d40c]
   27.80 [kvm][1d400]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/arch/x86/kvm/kvm.ko.xz for cycles (10 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001d400 <pvclock_gtod_notify>:
         : 6     pvclock_gtod_notify():
   27.80 :   1d400:  call   1d405 <pvclock_gtod_notify+0x5> // [kvm][1d400]
    0.00 :   1d405:  addl   $0x1,0x0(%rip)        # 1d40c <pvclock_gtod_notify+0xc>
   72.20 :   1d40c:  mov    %rdx,%rax // [kvm][1d40c]
    0.00 :   1d40f:  mov    (%rdx),%rdx
    0.00 :   1d412:  mov    0x50(%rdx),%edx
    0.00 :   1d415:  mov    %edx,0x0(%rip)        # 1d41b <pvclock_gtod_notify+0x1b>
    0.00 :   1d41b:  mov    0x10(%rax),%rdx
    0.00 :   1d41f:  mov    %rdx,0x0(%rip)        # 1d426 <pvclock_gtod_notify+0x26>
    0.00 :   1d426:  mov    0x8(%rax),%rdx
    0.00 :   1d42a:  mov    %rdx,0x0(%rip)        # 1d431 <pvclock_gtod_notify+0x31>
    0.00 :   1d431:  mov    0x18(%rax),%edx
    0.00 :   1d434:  mov    %edx,0x0(%rip)        # 1d43a <pvclock_gtod_notify+0x3a>
    0.00 :   1d43a:  mov    0x1c(%rax),%edx
    0.00 :   1d43d:  mov    %edx,0x0(%rip)        # 1d443 <pvclock_gtod_notify+0x43>
    0.00 :   1d443:  mov    0x20(%rax),%rdx
    0.00 :   1d447:  mov    %rdx,0x0(%rip)        # 1d44e <pvclock_gtod_notify+0x4e>
    0.00 :   1d44e:  mov    0x28(%rax),%rdx
    0.00 :   1d452:  mov    %rdx,0x0(%rip)        # 1d459 <pvclock_gtod_notify+0x59>
    0.00 :   1d459:  mov    0x38(%rax),%rdx
    0.00 :   1d45d:  mov    0x50(%rdx),%edx
    0.00 :   1d460:  mov    %edx,0x0(%rip)        # 1d466 <pvclock_gtod_notify+0x66>
    0.00 :   1d466:  mov    0x48(%rax),%rdx
    0.00 :   1d46a:  mov    %rdx,0x0(%rip)        # 1d471 <pvclock_gtod_notify+0x71>
    0.00 :   1d471:  mov    0x40(%rax),%rdx
    0.00 :   1d475:  mov    %rdx,0x0(%rip)        # 1d47c <pvclock_gtod_notify+0x7c>
    0.00 :   1d47c:  mov    0x50(%rax),%rdx
    0.00 :   1d480:  mov    %rdx,0x0(%rip)        # 1d487 <pvclock_gtod_notify+0x87>
    0.00 :   1d487:  mov    0x58(%rax),%rdx
    0.00 :   1d48b:  mov    %rdx,0x0(%rip)        # 1d492 <pvclock_gtod_notify+0x92>
    0.00 :   1d492:  mov    0x60(%rax),%rdx
    0.00 :   1d496:  mov    %rdx,0x0(%rip)        # 1d49d <pvclock_gtod_notify+0x9d>
    0.00 :   1d49d:  mov    0x70(%rax),%rdx
    0.00 :   1d4a1:  mov    0x98(%rax),%rax
    0.00 :   1d4a8:  mov    %rdx,0x0(%rip)        # 1d4af <pvclock_gtod_notify+0xaf>
    0.00 :   1d4af:  mov    %rax,0x0(%rip)        # 1d4b6 <pvclock_gtod_notify+0xb6>
    0.00 :   1d4b6:  mov    0x0(%rip),%eax        # 1d4bc <pvclock_gtod_notify+0xbc>
    0.00 :   1d4bc:  addl   $0x1,0x0(%rip)        # 1d4c3 <pvclock_gtod_notify+0xc3>
    0.00 :   1d4c3:  and    $0xfffffffd,%eax
    0.00 :   1d4c6:  cmp    $0x1,%eax
    0.00 :   1d4c9:  je     1d4d5 <pvclock_gtod_notify+0xd5>
    0.00 :   1d4cb:  mov    0x0(%rip),%eax        # 1d4d1 <pvclock_gtod_notify+0xd1>
    0.00 :   1d4d1:  test   %eax,%eax
    0.00 :   1d4d3:  jne    1d4dc <pvclock_gtod_notify+0xdc>
    0.00 :   1d4d5:  xor    %eax,%eax
    0.00 :   1d4d7:  jmp    1d4dc <pvclock_gtod_notify+0xdc>
    0.00 :   1d4dc:  mov    $0x0,%rdi
    0.00 :   1d4e3:  call   1d4e8 <pvclock_gtod_notify+0xe8>
    0.00 :   1d4e8:  xor    %eax,%eax
    0.00 :   1d4ea:  jmp    1d4ef <pvclock_gtod_notify+0xef>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   78.67 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:776
   21.33 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:876
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (3 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009e20 <_dl_lookup_symbol_x>:
         : 6    _dl_lookup_symbol_x():
    0.00 :   9e20:   endbr64
    0.00 :   9e24:   push   %r15
    0.00 :   9e26:   push   %r14
    0.00 :   9e28:   push   %r13
    0.00 :   9e2a:   mov    %rsi,%r13
    0.00 :   9e2d:   push   %r12
    0.00 :   9e2f:   mov    %r8,%r12
    0.00 :   9e32:   push   %rbp
    0.00 :   9e33:   mov    %rdx,%rbp
    0.00 :   9e36:   push   %rbx
    0.00 :   9e37:   mov    %rdi,%rbx
    0.00 :   9e3a:   sub    $0x88,%rsp
    0.00 :   9e41:   mov    %rcx,0x10(%rsp)
    0.00 :   9e46:   mov    %r9d,0x38(%rsp)
    0.00 :   9e4b:   movzbl (%rbx),%eax
    0.00 :   9e4e:   test   %eax,%eax
    0.00 :   9e50:   je     a0c8 <_dl_lookup_symbol_x+0x2a8>
    0.00 :   9e56:   mov    %rbx,%rcx
    0.00 :   9e59:   mov    $0x1505,%r14d
    0.00 :   9e5f:   nop
    0.00 :   9e60:   movzbl 0x1(%rcx),%edx
    0.00 :   9e64:   test   %edx,%edx
    0.00 :   9e66:   je     a0b0 <_dl_lookup_symbol_x+0x290>
    0.00 :   9e6c:   imul   $0x441,%r14d,%r14d
    0.00 :   9e73:   add    %eax,%edx
    0.00 :   9e75:   add    $0x2,%rcx
    0.00 :   9e79:   shl    $0x5,%eax
    0.00 :   9e7c:   add    %edx,%eax
    0.00 :   9e7e:   add    %eax,%r14d
    0.00 :   9e81:   movzbl (%rcx),%eax
    0.00 :   9e84:   test   %eax,%eax
    0.00 :   9e86:   jne    9e60 <_dl_lookup_symbol_x+0x40>
    0.00 :   9e88:   mov    $0xffffffff,%eax
    0.00 :   9e8d:   pxor   %xmm1,%xmm1
    0.00 :   9e91:   addq   $0x1,0x2bbff(%rip)        # 35a98 <_rtld_global+0xa98>
    0.00 :   9e99:   mov    %rax,0x48(%rsp)
    0.00 :   9e9e:   movaps %xmm1,0x50(%rsp)
    0.00 :   9ea3:   test   %r12,%r12
    0.00 :   9ea6:   je     9eb6 <_dl_lookup_symbol_x+0x96>
    0.00 :   9ea8:   testb  $0x2,0xc0(%rsp)
    0.00 :   9eb0:   jne    a626 <_dl_lookup_symbol_x+0x806>
    0.00 :   9eb6:   cmpq   $0x0,0xc8(%rsp)
    0.00 :   9ebf:   mov    0x10(%rsp),%rax
    0.00 :   9ec4:   mov    (%rax),%r9
    0.00 :   9ec7:   jne    a0d8 <_dl_lookup_symbol_x+0x2b8>
    0.00 :   9ecd:   test   %r9,%r9
    0.00 :   9ed0:   je     a107 <_dl_lookup_symbol_x+0x2e7>
    0.00 :   9ed6:   xor    %edx,%edx
    0.00 :   9ed8:   mov    0x10(%rsp),%r15
    0.00 :   9edd:   lea    0x50(%rsp),%rsi
    0.00 :   9ee2:   lea    0x48(%rsp),%rdi
    0.00 :   9ee7:   mov    %rdx,%rax
    0.00 :   9eea:   mov    %rsi,0x8(%rsp)
    0.00 :   9eef:   mov    %rbp,%rsi
    0.00 :   9ef2:   mov    %rdi,(%rsp)
    0.00 :   9ef6:   mov    %r15,%rbp
    0.00 :   9ef9:   mov    %rsi,%r15
    0.00 :   9efc:   mov    %rdx,0x18(%rsp)
    0.00 :   9f01:   jmp    9f17 <_dl_lookup_symbol_x+0xf7>
    0.00 :   9f03:   nopl   0x0(%rax,%rax,1)
    0.00 :   9f08:   mov    0x8(%rbp),%r9
    0.00 :   9f0c:   add    $0x8,%rbp
    0.00 :   9f10:   xor    %eax,%eax
    0.00 :   9f12:   test   %r9,%r9
    0.00 :   9f15:   je     9f50 <_dl_lookup_symbol_x+0x130>
    0.00 :   9f17:   mov    (%r15),%rcx
    0.00 :   9f1a:   push   %r13
    0.00 :   9f1c:   mov    0x40(%rsp),%esi
    0.00 :   9f20:   push   %rsi
    0.00 :   9f21:   mov    %r14d,%esi
    0.00 :   9f24:   push   0xd8(%rsp)
   40.71 :   9f2b:   mov    0xd8(%rsp),%edi // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:776
    0.00 :   9f32:   push   %rdi
    0.00 :   9f33:   mov    %rbx,%rdi
    0.00 :   9f36:   push   %r12
    0.00 :   9f38:   push   %rax
    0.00 :   9f39:   mov    0x38(%rsp),%r8
   37.96 :   9f3e:   mov    0x30(%rsp),%rdx
    0.00 :   9f43:   call   9210 <do_lookup_x>
    0.00 :   9f48:   add    $0x30,%rsp
    0.00 :   9f4c:   test   %eax,%eax
    0.00 :   9f4e:   je     9f08 <_dl_lookup_symbol_x+0xe8>
    0.00 :   9f50:   mov    (%r15),%rcx
    0.00 :   9f53:   mov    0x50(%rsp),%rdi
    0.00 :   9f58:   mov    %r15,%rbp
    0.00 :   9f5b:   mov    0x18(%rsp),%rdx
    0.00 :   9f60:   mov    %rcx,%rax
    0.00 :   9f63:   test   %rdi,%rdi
    0.00 :   9f66:   je     a10b <_dl_lookup_symbol_x+0x2eb>
    0.00 :   9f6c:   test   %rcx,%rcx
    0.00 :   9f6f:   je     9f7c <_dl_lookup_symbol_x+0x15c>
    0.00 :   9f71:   movzbl 0x5(%rcx),%eax
    0.00 :   9f75:   and    $0x3,%eax
    0.00 :   9f78:   cmp    $0x3,%al
    0.00 :   9f7a:   je     9fd8 <_dl_lookup_symbol_x+0x1b8>
    0.00 :   9f7c:   mov    0x58(%rsp),%r15
    0.00 :   9f81:   xor    %r9d,%r9d
    0.00 :   9f84:   movzbl 0x334(%r15),%eax
    0.00 :   9f8c:   and    $0x3,%eax
    0.00 :   9f8f:   cmp    $0x2,%al
    0.00 :   9f91:   je     a230 <_dl_lookup_symbol_x+0x410>
    0.00 :   9f97:   mov    0x50(%rsp),%r10
    0.00 :   9f9c:   mov    0x3fc(%r15),%esi
    0.00 :   9fa3:   test   %esi,%esi
    0.00 :   9fa5:   je     a220 <_dl_lookup_symbol_x+0x400>
    0.00 :   9fab:   testb  $0x4,0x2aaae(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9fb2:   jne    a1a0 <_dl_lookup_symbol_x+0x380>
    0.00 :   9fb8:   mov    %r10,0x0(%rbp)
    0.00 :   9fbc:   add    $0x88,%rsp
   21.33 :   9fc3:   mov    %r15,%rax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:876
    0.00 :   9fc6:   pop    %rbx
    0.00 :   9fc7:   pop    %rbp
    0.00 :   9fc8:   pop    %r12
    0.00 :   9fca:   pop    %r13
    0.00 :   9fcc:   pop    %r14
    0.00 :   9fce:   pop    %r15
    0.00 :   9fd0:   ret
    0.00 :   9fd1:   nopl   0x0(%rax)
    0.00 :   9fd8:   cmpl   $0x1,0x38(%rsp)
    0.00 :   9fdd:   je     a3c8 <_dl_lookup_symbol_x+0x5a8>
    0.00 :   9fe3:   mov    0x10(%rsp),%r15
    0.00 :   9fe8:   pxor   %xmm0,%xmm0
    0.00 :   9fec:   lea    0x60(%rsp),%rax
    0.00 :   9ff1:   movaps %xmm0,0x60(%rsp)
    0.00 :   9ff6:   mov    (%r15),%r9
    0.00 :   9ff9:   mov    %rax,0x8(%rsp)
    0.00 :   9ffe:   test   %r9,%r9
    0.00 :   a001:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a007:   mov    %r14d,0x18(%rsp)
    0.00 :   a00c:   mov    %r15,%r14
    0.00 :   a00f:   mov    0xc8(%rsp),%r15
    0.00 :   a017:   mov    %r13,0x20(%rsp)
    0.00 :   a01c:   mov    0xc0(%rsp),%r13d
    0.00 :   a024:   jmp    a043 <_dl_lookup_symbol_x+0x223>
    0.00 :   a026:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   a030:   mov    0x8(%r14),%r9
    0.00 :   a034:   add    $0x8,%r14
    0.00 :   a038:   test   %r9,%r9
    0.00 :   a03b:   je     a06c <_dl_lookup_symbol_x+0x24c>
    0.00 :   a03d:   mov    0x0(%rbp),%rcx
    0.00 :   a041:   xor    %edx,%edx
    0.00 :   a043:   push   $0x0
    0.00 :   a045:   mov    %rbx,%rdi
    0.00 :   a048:   push   $0x1
    0.00 :   a04a:   push   %r15
    0.00 :   a04c:   push   %r13
    0.00 :   a04e:   push   %r12
    0.00 :   a050:   push   %rdx
    0.00 :   a051:   mov    0x38(%rsp),%r8
    0.00 :   a056:   mov    0x30(%rsp),%rdx
    0.00 :   a05b:   mov    0x48(%rsp),%esi
    0.00 :   a05f:   call   9210 <do_lookup_x>
    0.00 :   a064:   add    $0x30,%rsp
    0.00 :   a068:   test   %eax,%eax
    0.00 :   a06a:   je     a030 <_dl_lookup_symbol_x+0x210>
    0.00 :   a06c:   cmpq   $0x0,0x60(%rsp)
    0.00 :   a072:   mov    0x20(%rsp),%r13
    0.00 :   a077:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a07d:   cmp    %r13,0x68(%rsp)
    0.00 :   a082:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a088:   movq   0x0(%rbp),%xmm0
    0.00 :   a08d:   movq   %r13,%xmm2
    0.00 :   a092:   mov    %r13,%r15
    0.00 :   a095:   punpcklqdq %xmm2,%xmm0
    0.00 :   a099:   movaps %xmm0,0x50(%rsp)
    0.00 :   a09e:   mov    $0x1,%r9d
    0.00 :   a0a4:   jmp    9f84 <_dl_lookup_symbol_x+0x164>
    0.00 :   a0a9:   nopl   0x0(%rax)
    0.00 :   a0b0:   add    %r14d,%eax
    0.00 :   a0b3:   mov    %r14d,%esi
    0.00 :   a0b6:   shl    $0x5,%esi
    0.00 :   a0b9:   lea    (%rax,%rsi,1),%r14d
    0.00 :   a0bd:   jmp    9e88 <_dl_lookup_symbol_x+0x68>
    0.00 :   a0c2:   nopw   0x0(%rax,%rax,1)
    0.00 :   a0c8:   mov    $0x1505,%r14d
    0.00 :   a0ce:   jmp    9e88 <_dl_lookup_symbol_x+0x68>
    0.00 :   a0d3:   nopl   0x0(%rax,%rax,1)
    0.00 :   a0d8:   mov    (%r9),%rax
    0.00 :   a0db:   mov    0xc8(%rsp),%rdi
    0.00 :   a0e3:   xor    %edx,%edx
    0.00 :   a0e5:   cmp    %rdi,(%rax)
    0.00 :   a0e8:   je     9ed8 <_dl_lookup_symbol_x+0xb8>
    0.00 :   a0ee:   mov    %rdi,%rcx
    0.00 :   a0f1:   nopl   0x0(%rax)
    0.00 :   a0f8:   add    $0x1,%rdx
    0.00 :   a0fc:   cmp    %rcx,(%rax,%rdx,8)
    0.00 :   a100:   jne    a0f8 <_dl_lookup_symbol_x+0x2d8>
    0.00 :   a102:   jmp    9ed8 <_dl_lookup_symbol_x+0xb8>
    0.00 :   a107:   mov    0x0(%rbp),%rax
    0.00 :   a10b:   test   %rax,%rax
    0.00 :   a10e:   je     a11b <_dl_lookup_symbol_x+0x2fb>
    0.00 :   a110:   movzbl 0x4(%rax),%eax
    0.00 :   a114:   shr    $0x4,%al
    0.00 :   a117:   cmp    $0x2,%al
    0.00 :   a119:   je     a191 <_dl_lookup_symbol_x+0x371>
    0.00 :   a11b:   testb  $0x1,0x2a93f(%rip)        # 34a61 <_rtld_global_ro+0x1>
    0.00 :   a122:   jne    a191 <_dl_lookup_symbol_x+0x371>
    0.00 :   a124:   test   %r13,%r13
    0.00 :   a127:   je     a44d <_dl_lookup_symbol_x+0x62d>
    0.00 :   a12d:   mov    0x8(%r13),%rsi
    0.00 :   a131:   lea    0x20ae1(%rip),%r8        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a138:   mov    %r8,%r9
    0.00 :   a13b:   movzbl (%rsi),%eax
    0.00 :   a13e:   test   %r12,%r12
    0.00 :   a141:   je     a157 <_dl_lookup_symbol_x+0x337>
    0.00 :   a143:   mov    (%r12),%r9
    0.00 :   a147:   lea    0x1fb1e(%rip),%r8        # 29c6c <_sys_errname+0x8ac>
    0.00 :   a14e:   test   %r9,%r9
    0.00 :   a151:   je     a498 <_dl_lookup_symbol_x+0x678>
    0.00 :   a157:   test   %al,%al
    0.00 :   a159:   je     a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a15f:   lea    0x60(%rsp),%r12
    0.00 :   a164:   mov    %rbx,%rcx
    0.00 :   a167:   lea    0x1fb1a(%rip),%rdx        # 29c88 <_sys_errname+0x8c8>
    0.00 :   a16e:   xor    %eax,%eax
    0.00 :   a170:   mov    %r12,%rdi
    0.00 :   a173:   call   3450 <_dl_exception_create_format>
    0.00 :   a178:   xor    %edi,%edi
    0.00 :   a17a:   lea    0x1fb20(%rip),%rdx        # 29ca1 <_sys_errname+0x8e1>
    0.00 :   a181:   mov    %r12,%rsi
    0.00 :   a184:   call   18e20 <_dl_signal_cexception>
    0.00 :   a189:   mov    %r12,%rdi
    0.00 :   a18c:   call   38c0 <_dl_exception_free>
    0.00 :   a191:   xor    %r10d,%r10d
    0.00 :   a194:   xor    %r15d,%r15d
    0.00 :   a197:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a19c:   nopl   0x0(%rax)
    0.00 :   a1a0:   mov    0x8(%r15),%rcx
    0.00 :   a1a4:   test   %r9d,%r9d
    0.00 :   a1a7:   lea    0x1fac9(%rip),%rax        # 29c77 <_sys_errname+0x8b7>
    0.00 :   a1ae:   mov    0x8(%r13),%rsi
    0.00 :   a1b2:   lea    0x1fac8(%rip),%r9        # 29c81 <_sys_errname+0x8c1>
    0.00 :   a1b9:   mov    0x30(%r15),%r8
    0.00 :   a1bd:   cmovne %rax,%r9
    0.00 :   a1c1:   cmpb   $0x0,(%rcx)
    0.00 :   a1c4:   je     a40b <_dl_lookup_symbol_x+0x5eb>
    0.00 :   a1ca:   cmpb   $0x0,(%rsi)
    0.00 :   a1cd:   mov    0x30(%r13),%rdx
    0.00 :   a1d1:   je     a3ee <_dl_lookup_symbol_x+0x5ce>
    0.00 :   a1d7:   mov    %r10,(%rsp)
    0.00 :   a1db:   sub    $0x8,%rsp
    0.00 :   a1df:   xor    %eax,%eax
    0.00 :   a1e1:   lea    0x21df8(%rip),%rdi        # 2bfe0 <__PRETTY_FUNCTION__.9+0x2f0>
    0.00 :   a1e8:   push   %rbx
    0.00 :   a1e9:   call   d1d0 <_dl_debug_printf>
    0.00 :   a1ee:   test   %r12,%r12
    0.00 :   a1f1:   pop    %rdx
    0.00 :   a1f2:   pop    %rcx
    0.00 :   a1f3:   mov    (%rsp),%r10
    0.00 :   a1f7:   je     a432 <_dl_lookup_symbol_x+0x612>
    0.00 :   a1fd:   mov    (%r12),%rsi
    0.00 :   a201:   lea    0x1faad(%rip),%rdi        # 29cb5 <_sys_errname+0x8f5>
    0.00 :   a208:   xor    %eax,%eax
    0.00 :   a20a:   call   d280 <_dl_debug_printf_c>
    0.00 :   a20f:   mov    (%rsp),%r10
    0.00 :   a213:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a218:   nopl   0x0(%rax,%rax,1)
    0.00 :   a220:   movl   $0x1,0x3fc(%r15)
    0.00 :   a22b:   jmp    9fab <_dl_lookup_symbol_x+0x18b>
    0.00 :   a230:   testb  $0x1,0xc0(%rsp)
    0.00 :   a238:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a23e:   cmp    %r15,%r13
    0.00 :   a241:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a247:   cmpb   $0x0,0x337(%r15)
    0.00 :   a24f:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a255:   mov    0xc0(%rsp),%eax
    0.00 :   a25c:   and    $0x8,%eax
    0.00 :   a25f:   mov    %eax,(%rsp)
    0.00 :   a262:   je     a272 <_dl_lookup_symbol_x+0x452>
    0.00 :   a264:   cmpb   $0x0,0x338(%r15)
    0.00 :   a26c:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a272:   mov    0x3f0(%r13),%rax
    0.00 :   a279:   mov    %rax,0x18(%rsp)
    0.00 :   a27e:   mov    0x3e8(%r13),%r8
    0.00 :   a285:   test   %r8,%r8
    0.00 :   a288:   je     a2ac <_dl_lookup_symbol_x+0x48c>
    0.00 :   a28a:   mov    (%r8),%rax
    0.00 :   a28d:   test   %rax,%rax
    0.00 :   a290:   je     a2ac <_dl_lookup_symbol_x+0x48c>
    0.00 :   a292:   xor    %edx,%edx
    0.00 :   a294:   cmp    %r15,%rax
    0.00 :   a297:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a29d:   lea    0x1(%rdx),%eax
    0.00 :   a2a0:   mov    %rax,%rdx
    0.00 :   a2a3:   mov    (%r8,%rax,8),%rax
    0.00 :   a2a7:   test   %rax,%rax
    0.00 :   a2aa:   jne    a294 <_dl_lookup_symbol_x+0x474>
    0.00 :   a2ac:   mov    0x18(%rsp),%rdi
    0.00 :   a2b1:   mov    %rdi,%rax
    0.00 :   a2b4:   test   %rdi,%rdi
    0.00 :   a2b7:   je     a4a4 <_dl_lookup_symbol_x+0x684>
    0.00 :   a2bd:   mov    (%rdi),%r14d
    0.00 :   a2c0:   test   %r14d,%r14d
    0.00 :   a2c3:   je     a2df <_dl_lookup_symbol_x+0x4bf>
    0.00 :   a2c5:   mov    %r14d,%edx
    0.00 :   a2c8:   lea    (%rdi,%rdx,8),%rdx
    0.00 :   a2cc:   cmp    %r15,0x8(%rax)
    0.00 :   a2d0:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a2d6:   add    $0x8,%rax
    0.00 :   a2da:   cmp    %rax,%rdx
    0.00 :   a2dd:   jne    a2cc <_dl_lookup_symbol_x+0x4ac>
    0.00 :   a2df:   mov    0x498(%r15),%rax
    0.00 :   a2e6:   mov    %rax,0x20(%rsp)
    0.00 :   a2eb:   mov    0xc0(%rsp),%eax
    0.00 :   a2f2:   and    $0x4,%eax
    0.00 :   a2f5:   mov    %eax,0x8(%rsp)
    0.00 :   a2f9:   jne    a555 <_dl_lookup_symbol_x+0x735>
    0.00 :   a2ff:   lea    0x2b702(%rip),%rdi        # 35a08 <_rtld_global+0xa08>
    0.00 :   a306:   mov    %r9d,0x28(%rsp)
    0.00 :   a30b:   mov    %rdi,0x18(%rsp)
    0.00 :   a310:   call   *0x2a6e2(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   a316:   mov    0x18(%rsp),%rdi
    0.00 :   a31b:   mov    0x28(%rsp),%r9d
    0.00 :   a320:   mov    %r15,%rcx
    0.00 :   a323:   mov    0x30(%r13),%rdx
    0.00 :   a327:   lea    0x2acd2(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   a32e:   lea    (%rdx,%rdx,4),%rax
    0.00 :   a332:   shl    $0x5,%rax
    0.00 :   a336:   mov    (%rsi,%rax,1),%rax
    0.00 :   a33a:   test   %rax,%rax
    0.00 :   a33d:   jne    a355 <_dl_lookup_symbol_x+0x535>
    0.00 :   a33f:   jmp    a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a344:   nopl   0x0(%rax)
    0.00 :   a348:   mov    0x18(%rax),%rax
    0.00 :   a34c:   test   %rax,%rax
    0.00 :   a34f:   je     a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a355:   cmp    %rcx,%rax
    0.00 :   a358:   jne    a348 <_dl_lookup_symbol_x+0x528>
    0.00 :   a35a:   test   %rax,%rax
    0.00 :   a35d:   je     a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a363:   mov    0x20(%rsp),%rax
    0.00 :   a368:   cmp    0x498(%rcx),%rax
    0.00 :   a36f:   jne    a4ac <_dl_lookup_symbol_x+0x68c>
    0.00 :   a375:   cmpb   $0x0,0x337(%rcx)
    0.00 :   a37c:   mov    %r14d,0x38(%rsp)
    0.00 :   a381:   mov    %rdx,%r8
    0.00 :   a384:   mov    %rcx,%r14
    0.00 :   a387:   mov    %rdi,0x18(%rsp)
    0.00 :   a38c:   je     a4f1 <_dl_lookup_symbol_x+0x6d1>
    0.00 :   a392:   mov    %r9d,(%rsp)
    0.00 :   a396:   mov    0x18(%rsp),%rdi
    0.00 :   a39b:   call   *0x2a64f(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a3a1:   cmpl   $0x0,0x8(%rsp)
    0.00 :   a3a6:   mov    (%rsp),%r9d
    0.00 :   a3aa:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a3b0:   movl   $0x1,%fs:0x1c
    0.00 :   a3bc:   jmp    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a3c1:   nopl   0x0(%rax)
    0.00 :   a3c8:   mov    %rcx,%r10
    0.00 :   a3cb:   cmp    %r13,0x58(%rsp)
    0.00 :   a3d0:   je     a490 <_dl_lookup_symbol_x+0x670>
    0.00 :   a3d6:   mov    %r10,0x50(%rsp)
    0.00 :   a3db:   mov    %r13,0x58(%rsp)
    0.00 :   a3e0:   mov    $0x1,%r9d
    0.00 :   a3e6:   mov    %r13,%r15
    0.00 :   a3e9:   jmp    9f9c <_dl_lookup_symbol_x+0x17c>
    0.00 :   a3ee:   mov    0x2a643(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a3f5:   mov    (%rax),%rsi
    0.00 :   a3f8:   lea    0x1f52d(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a3ff:   test   %rsi,%rsi
    0.00 :   a402:   cmove  %rax,%rsi
    0.00 :   a406:   jmp    a1d7 <_dl_lookup_symbol_x+0x3b7>
    0.00 :   a40b:   mov    0x2a626(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a412:   mov    (%rax),%rcx
    0.00 :   a415:   lea    0x1f510(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a41c:   test   %rcx,%rcx
    0.00 :   a41f:   cmove  %rax,%rcx
    0.00 :   a423:   jmp    a1ca <_dl_lookup_symbol_x+0x3aa>
    0.00 :   a428:   mov    0x58(%rsp),%r15
    0.00 :   a42d:   jmp    a09e <_dl_lookup_symbol_x+0x27e>
    0.00 :   a432:   lea    0x207df(%rip),%rdi        # 2ac18 <__PRETTY_FUNCTION__.2+0x53d>
    0.00 :   a439:   xor    %eax,%eax
    0.00 :   a43b:   mov    %r10,(%rsp)
    0.00 :   a43f:   call   d280 <_dl_debug_printf_c>
    0.00 :   a444:   mov    (%rsp),%r10
    0.00 :   a448:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a44d:   lea    0x207c5(%rip),%r8        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a454:   mov    %r8,%r9
    0.00 :   a457:   test   %r12,%r12
    0.00 :   a45a:   je     a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a45c:   mov    (%r12),%r9
    0.00 :   a460:   lea    0x1f805(%rip),%r8        # 29c6c <_sys_errname+0x8ac>
    0.00 :   a467:   test   %r9,%r9
    0.00 :   a46a:   jne    a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a46c:   lea    0x207a6(%rip),%r9        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a473:   mov    0x2a5be(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a47a:   mov    (%rax),%rsi
    0.00 :   a47d:   lea    0x1f4a8(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a484:   test   %rsi,%rsi
    0.00 :   a487:   cmove  %rax,%rsi
    0.00 :   a48b:   jmp    a15f <_dl_lookup_symbol_x+0x33f>
    0.00 :   a490:   mov    %rdi,%r10
    0.00 :   a493:   jmp    a3e0 <_dl_lookup_symbol_x+0x5c0>
    0.00 :   a498:   lea    0x2077a(%rip),%r9        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a49f:   jmp    a157 <_dl_lookup_symbol_x+0x337>
    0.00 :   a4a4:   xor    %r14d,%r14d
    0.00 :   a4a7:   jmp    a2df <_dl_lookup_symbol_x+0x4bf>
    0.00 :   a4ac:   mov    %r9d,(%rsp)
    0.00 :   a4b0:   call   *0x2a53a(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a4b6:   mov    0x8(%rsp),%eax
    0.00 :   a4ba:   mov    (%rsp),%r9d
    0.00 :   a4be:   test   %eax,%eax
    0.00 :   a4c0:   je     9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a4c6:   or     $0xffffffff,%r14d
    0.00 :   a4ca:   movl   $0x1,%fs:0x1c
    0.00 :   a4d6:   add    $0x1,%r14d
    0.00 :   a4da:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a4e0:   mov    0x3b0(%r13),%rax
    0.00 :   a4e7:   mov    %rax,0x10(%rsp)
    0.00 :   a4ec:   jmp    9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a4f1:   cmpl   $0x0,(%rsp)
    0.00 :   a4f5:   je     a645 <_dl_lookup_symbol_x+0x825>
    0.00 :   a4fb:   cmpb   $0x0,0x338(%rcx)
    0.00 :   a502:   jne    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a508:   movzbl 0x334(%r13),%eax
    0.00 :   a510:   and    $0x3,%eax
    0.00 :   a513:   cmp    $0x2,%al
    0.00 :   a515:   je     a6a1 <_dl_lookup_symbol_x+0x881>
    0.00 :   a51b:   testb  $0x4,0x2a53e(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a522:   jne    a65d <_dl_lookup_symbol_x+0x83d>
    0.00 :   a528:   movb   $0x1,0x338(%r14)
    0.00 :   a530:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a535:   call   *0x2a4b5(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a53b:   mov    0x8(%rsp),%edi
    0.00 :   a53f:   test   %edi,%edi
    0.00 :   a541:   je     9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a547:   movl   $0x1,%fs:0x1c
    0.00 :   a553:   jmp    a4e0 <_dl_lookup_symbol_x+0x6c0>
    0.00 :   a555:   xor    %eax,%eax
    0.00 :   a557:   xchg   %eax,%fs:0x1c
    0.00 :   a55f:   cmp    $0x2,%eax
    0.00 :   a562:   jne    a585 <_dl_lookup_symbol_x+0x765>
    0.00 :   a564:   xor    %r10d,%r10d
    0.00 :   a567:   mov    $0x1,%edx
    0.00 :   a56c:   mov    $0x81,%esi
    0.00 :   a571:   mov    %fs:0x10,%rax
    0.00 :   a57a:   lea    0x1c(%rax),%rdi
    0.00 :   a57e:   mov    $0xca,%eax
    0.00 :   a583:   syscall
    0.00 :   a585:   lea    0x2b47c(%rip),%rdi        # 35a08 <_rtld_global+0xa08>
    0.00 :   a58c:   mov    %r9d,0x3c(%rsp)
    0.00 :   a591:   mov    %r8,0x30(%rsp)
    0.00 :   a596:   mov    %rdi,0x28(%rsp)
    0.00 :   a59b:   call   *0x2a457(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   a5a1:   mov    0x3e8(%r13),%rax
    0.00 :   a5a8:   mov    0x30(%rsp),%r8
    0.00 :   a5ad:   mov    %r15,%rdx
    0.00 :   a5b0:   cmp    %r8,%rax
    0.00 :   a5b3:   mov    0x28(%rsp),%rdi
    0.00 :   a5b8:   mov    0x3c(%rsp),%r9d
    0.00 :   a5bd:   mov    %rdx,%rcx
    0.00 :   a5c0:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5c6:   test   %rax,%rax
    0.00 :   a5c9:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5cf:   mov    (%rax),%rsi
    0.00 :   a5d2:   test   %rsi,%rsi
    0.00 :   a5d5:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5db:   xor    %r10d,%r10d
    0.00 :   a5de:   jmp    a5f4 <_dl_lookup_symbol_x+0x7d4>
    0.00 :   a5e0:   lea    0x1(%r10),%esi
    0.00 :   a5e4:   mov    %rsi,%r10
    0.00 :   a5e7:   mov    (%rax,%rsi,8),%rsi
    0.00 :   a5eb:   test   %rsi,%rsi
    0.00 :   a5ee:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5f4:   cmp    %rsi,%rdx
    0.00 :   a5f7:   jne    a5e0 <_dl_lookup_symbol_x+0x7c0>
    0.00 :   a5f9:   mov    0x498(%rdx),%rax
    0.00 :   a600:   mov    0x20(%rsp),%rsi
    0.00 :   a605:   mov    %r9d,(%rsp)
    0.00 :   a609:   cmp    %rsi,%rax
    0.00 :   a60c:   setne  %al
    0.00 :   a60f:   movzbl %al,%eax
    0.00 :   a612:   neg    %eax
    0.00 :   a614:   mov    %eax,%r14d
    0.00 :   a617:   call   *0x2a3d3(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a61d:   mov    (%rsp),%r9d
    0.00 :   a621:   jmp    a4ca <_dl_lookup_symbol_x+0x6aa>
    0.00 :   a626:   lea    0x20823(%rip),%rcx        # 2ae50 <__PRETTY_FUNCTION__.2>
    0.00 :   a62d:   mov    $0x2fe,%edx
    0.00 :   a632:   lea    0x1f618(%rip),%rsi        # 29c51 <_sys_errname+0x891>
    0.00 :   a639:   lea    0x21860(%rip),%rdi        # 2bea0 <__PRETTY_FUNCTION__.9+0x1b0>
    0.00 :   a640:   call   19f20 <__GI___assert_fail>
    0.00 :   a645:   movzbl 0x334(%r13),%eax
    0.00 :   a64d:   and    $0x3,%eax
    0.00 :   a650:   cmp    $0x2,%al
    0.00 :   a652:   je     a6a1 <_dl_lookup_symbol_x+0x881>
    0.00 :   a654:   testb  $0x4,0x2a405(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a65b:   je     a694 <_dl_lookup_symbol_x+0x874>
    0.00 :   a65d:   mov    0x8(%r13),%rcx
    0.00 :   a661:   mov    0x30(%r14),%rdx
    0.00 :   a665:   mov    %r9d,0x38(%rsp)
    0.00 :   a66a:   mov    0x8(%r14),%rsi
    0.00 :   a66e:   cmpb   $0x0,(%rcx)
    0.00 :   a671:   jne    a851 <_dl_lookup_symbol_x+0xa31>
    0.00 :   a677:   lea    0x2185a(%rip),%rdi        # 2bed8 <__PRETTY_FUNCTION__.9+0x1e8>
    0.00 :   a67e:   xor    %eax,%eax
    0.00 :   a680:   call   d1d0 <_dl_debug_printf>
    0.00 :   a685:   mov    0x38(%rsp),%r9d
    0.00 :   a68a:   cmpl   $0x0,(%rsp)
    0.00 :   a68e:   jne    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a694:   movb   $0x1,0x337(%r14)
    0.00 :   a69c:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a6a1:   mov    0x3f8(%r13),%eax
    0.00 :   a6a8:   cmp    %eax,0x38(%rsp)
    0.00 :   a6ac:   jae    a73e <_dl_lookup_symbol_x+0x91e>
    0.00 :   a6b2:   mov    0x38(%rsp),%edx
    0.00 :   a6b6:   mov    0x3f0(%r13),%rax
    0.00 :   a6bd:   mov    %rdx,%rdi
    0.00 :   a6c0:   mov    %r14,0x8(%rax,%rdx,8)
    0.00 :   a6c5:   mov    0x3f0(%r13),%rdx
    0.00 :   a6cc:   lea    0x1(%rdi),%eax
    0.00 :   a6cf:   mov    %eax,(%rdx)
    0.00 :   a6d1:   testb  $0x40,0x2a388(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a6d8:   je     a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a6de:   mov    0x8(%r13),%rcx
    0.00 :   a6e2:   mov    0x30(%r13),%r8
    0.00 :   a6e6:   cmpb   $0x0,(%rcx)
    0.00 :   a6e9:   jne    a6fe <_dl_lookup_symbol_x+0x8de>
    0.00 :   a6eb:   mov    0x2a346(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a6f2:   mov    (%rax),%rcx
    0.00 :   a6f5:   test   %rcx,%rcx
    0.00 :   a6f8:   je     a7c4 <_dl_lookup_symbol_x+0x9a4>
    0.00 :   a6fe:   mov    0x8(%r14),%rsi
    0.00 :   a702:   mov    0x30(%r14),%rdx
    0.00 :   a706:   cmpb   $0x0,(%rsi)
    0.00 :   a709:   jne    a71a <_dl_lookup_symbol_x+0x8fa>
    0.00 :   a70b:   mov    0x2a326(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a712:   mov    (%rax),%rsi
    0.00 :   a715:   test   %rsi,%rsi
    0.00 :   a718:   je     a735 <_dl_lookup_symbol_x+0x915>
    0.00 :   a71a:   lea    0x2187f(%rip),%rdi        # 2bfa0 <__PRETTY_FUNCTION__.9+0x2b0>
    0.00 :   a721:   xor    %eax,%eax
    0.00 :   a723:   mov    %r9d,(%rsp)
    0.00 :   a727:   call   d1d0 <_dl_debug_printf>
    0.00 :   a72c:   mov    (%rsp),%r9d
    0.00 :   a730:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a735:   lea    0x1f1f0(%rip),%rsi        # 2992c <_sys_errname+0x56c>
    0.00 :   a73c:   jmp    a71a <_dl_lookup_symbol_x+0x8fa>
    0.00 :   a73e:   movl   $0xa,0x10(%rsp)
    0.00 :   a746:   test   %eax,%eax
    0.00 :   a748:   je     a750 <_dl_lookup_symbol_x+0x930>
    0.00 :   a74a:   add    %eax,%eax
    0.00 :   a74c:   mov    %eax,0x10(%rsp)
    0.00 :   a750:   mov    0x10(%rsp),%eax
    0.00 :   a754:   mov    %r9d,0x20(%rsp)
    0.00 :   a759:   lea    0x8(,%rax,8),%rdi
    0.00 :   a761:   call   *0x2a271(%rip)        # 349d8 <__rtld_malloc>
    0.00 :   a767:   mov    0x20(%rsp),%r9d
    0.00 :   a76c:   test   %rax,%rax
    0.00 :   a76f:   mov    %rax,%rcx
    0.00 :   a772:   je     a80d <_dl_lookup_symbol_x+0x9ed>
    0.00 :   a778:   mov    0x38(%rsp),%r8d
    0.00 :   a77d:   test   %r8d,%r8d
    0.00 :   a780:   jne    a7d0 <_dl_lookup_symbol_x+0x9b0>
    0.00 :   a782:   mov    0x38(%rsp),%eax
    0.00 :   a786:   mov    %r14,0x8(%rcx,%r8,8)
    0.00 :   a78b:   add    $0x1,%eax
    0.00 :   a78e:   mov    %eax,(%rcx)
    0.00 :   a790:   mov    0x3f0(%r13),%rdi
    0.00 :   a797:   mov    0x10(%rsp),%eax
    0.00 :   a79b:   mov    %rcx,0x3f0(%r13)
    0.00 :   a7a2:   mov    %eax,0x3f8(%r13)
    0.00 :   a7a9:   test   %rdi,%rdi
    0.00 :   a7ac:   je     a6d1 <_dl_lookup_symbol_x+0x8b1>
    0.00 :   a7b2:   mov    %r9d,(%rsp)
    0.00 :   a7b6:   call   10a80 <_dl_scope_free>
    0.00 :   a7bb:   mov    (%rsp),%r9d
    0.00 :   a7bf:   jmp    a6d1 <_dl_lookup_symbol_x+0x8b1>
    0.00 :   a7c4:   lea    0x1f161(%rip),%rcx        # 2992c <_sys_errname+0x56c>
    0.00 :   a7cb:   jmp    a6fe <_dl_lookup_symbol_x+0x8de>
    0.00 :   a7d0:   mov    0x3f0(%r13),%rax
    0.00 :   a7d7:   lea    0x8(%rcx),%rdi
    0.00 :   a7db:   mov    %r9d,0x28(%rsp)
    0.00 :   a7e0:   lea    0x0(,%r8,8),%rdx
    0.00 :   a7e8:   mov    %rcx,0x20(%rsp)
    0.00 :   a7ed:   lea    0x8(%rax),%rsi
    0.00 :   a7f1:   mov    %r8,(%rsp)
    0.00 :   a7f5:   call   22660 <memcpy>
    0.00 :   a7fa:   mov    0x28(%rsp),%r9d
    0.00 :   a7ff:   mov    0x20(%rsp),%rcx
    0.00 :   a804:   mov    (%rsp),%r8
    0.00 :   a808:   jmp    a782 <_dl_lookup_symbol_x+0x962>
    0.00 :   a80d:   testb  $0x4,0x2a24c(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a814:   je     a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a81a:   cmpb   $0x0,0x337(%r14)
    0.00 :   a822:   jne    a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a828:   cmpl   $0x0,(%rsp)
    0.00 :   a82c:   jne    a8a3 <_dl_lookup_symbol_x+0xa83>
    0.00 :   a82e:   mov    0x30(%r14),%rdx
    0.00 :   a832:   mov    0x8(%r14),%rsi
    0.00 :   a836:   xor    %eax,%eax
    0.00 :   a838:   mov    %r9d,(%rsp)
    0.00 :   a83c:   lea    0x2171d(%rip),%rdi        # 2bf60 <__PRETTY_FUNCTION__.9+0x270>
    0.00 :   a843:   call   d1d0 <_dl_debug_printf>
    0.00 :   a848:   mov    (%rsp),%r9d
    0.00 :   a84c:   jmp    a694 <_dl_lookup_symbol_x+0x874>
    0.00 :   a851:   lea    0x216c8(%rip),%rdi        # 2bf20 <__PRETTY_FUNCTION__.9+0x230>
    0.00 :   a858:   xor    %eax,%eax
    0.00 :   a85a:   call   d1d0 <_dl_debug_printf>
    0.00 :   a85f:   mov    0x38(%rsp),%r9d
    0.00 :   a864:   jmp    a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a869:   mov    0x3f0(%r13),%rax
    0.00 :   a870:   test   %rax,%rax
    0.00 :   a873:   je     a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a879:   mov    (%rax),%esi
    0.00 :   a87b:   cmp    %rax,0x18(%rsp)
    0.00 :   a880:   je     a8e4 <_dl_lookup_symbol_x+0xac4>
    0.00 :   a882:   test   %esi,%esi
    0.00 :   a884:   je     a8dc <_dl_lookup_symbol_x+0xabc>
    0.00 :   a886:   mov    %esi,%r10d
    0.00 :   a889:   lea    (%rax,%r10,8),%r10
    0.00 :   a88d:   jmp    a898 <_dl_lookup_symbol_x+0xa78>
    0.00 :   a88f:   add    $0x8,%rax
    0.00 :   a893:   cmp    %r10,%rax
    0.00 :   a896:   je     a8d4 <_dl_lookup_symbol_x+0xab4>
    0.00 :   a898:   cmp    %rdx,0x8(%rax)
    0.00 :   a89c:   jne    a88f <_dl_lookup_symbol_x+0xa6f>
    0.00 :   a89e:   jmp    a5f9 <_dl_lookup_symbol_x+0x7d9>
    0.00 :   a8a3:   cmpb   $0x0,0x338(%r14)
    0.00 :   a8ab:   jne    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a8b1:   mov    0x30(%r14),%rdx
    0.00 :   a8b5:   mov    0x8(%r14),%rsi
    0.00 :   a8b9:   xor    %eax,%eax
    0.00 :   a8bb:   mov    %r9d,(%rsp)
    0.00 :   a8bf:   lea    0x2169a(%rip),%rdi        # 2bf60 <__PRETTY_FUNCTION__.9+0x270>
    0.00 :   a8c6:   call   d1d0 <_dl_debug_printf>
    0.00 :   a8cb:   mov    (%rsp),%r9d
    0.00 :   a8cf:   jmp    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a8d4:   mov    %esi,%r14d
    0.00 :   a8d7:   jmp    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8dc:   xor    %r14d,%r14d
    0.00 :   a8df:   jmp    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8e4:   cmp    %esi,%r14d
    0.00 :   a8e7:   jae    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8ed:   mov    0x18(%rsp),%r11
    0.00 :   a8f2:   mov    %r14d,%eax
    0.00 :   a8f5:   lea    (%r11,%rax,8),%rax
    0.00 :   a8f9:   jmp    a908 <_dl_lookup_symbol_x+0xae8>
    0.00 :   a8fb:   add    $0x1,%r14d
    0.00 :   a8ff:   cmp    %esi,%r14d
    0.00 :   a902:   je     a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a908:   add    $0x8,%rax
    0.00 :   a90c:   cmp    %rdx,(%rax)
    0.00 :   a90f:   jne    a8fb <_dl_lookup_symbol_x+0xadb>
    0.00 :   a911:   jmp    a5f9 <_dl_lookup_symbol_x+0x7d9>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   61.48 libc.so.6[87659]
   30.04 libc.so.6[87640]
    8.48 libc.so.6[87671]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (9 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000087640 <__GI___pthread_disable_asynccancel>:
         : 6     __GI___pthread_disable_asynccancel():
   30.04 :   87640:  endbr64 // libc.so.6[87640]
    0.00 :   87644:  and    $0x2,%edi
    0.00 :   87647:  je     87650 <__GI___pthread_disable_asynccancel+0x10>
    0.00 :   87649:  ret
    0.00 :   8764a:  nopw   0x0(%rax,%rax,1)
    0.00 :   87650:  mov    %fs:0x10,%rax
   61.48 :   87659:  mov    0x308(%rax),%edx // libc.so.6[87659]
    0.00 :   8765f:  lea    0x308(%rax),%rdi
    0.00 :   87666:  mov    %edx,%ecx
    0.00 :   87668:  mov    %edx,%eax
    0.00 :   8766a:  and    $0xfffffffd,%ecx
    0.00 :   8766d:  lock cmpxchg %ecx,(%rdi)
    8.48 :   87671:  jne    876bc <__GI___pthread_disable_asynccancel+0x7c> // libc.so.6[87671]
    0.00 :   87673:  and    $0xc,%edx
    0.00 :   87676:  cmp    $0x4,%edx
    0.00 :   87679:  jne    87649 <__GI___pthread_disable_asynccancel+0x9>
    0.00 :   8767b:  mov    $0xca,%r8d
    0.00 :   87681:  xor    %r10d,%r10d
    0.00 :   87684:  mov    %ecx,%edx
    0.00 :   87686:  mov    $0x80,%esi
    0.00 :   8768b:  mov    %r8d,%eax
    0.00 :   8768e:  syscall
    0.00 :   87690:  cmp    $0xfffffffffffff000,%rax
    0.00 :   87696:  ja     876a5 <__GI___pthread_disable_asynccancel+0x65>
    0.00 :   87698:  mov    (%rdi),%ecx
    0.00 :   8769a:  mov    %ecx,%eax
    0.00 :   8769c:  and    $0xc,%eax
    0.00 :   8769f:  cmp    $0x4,%eax
    0.00 :   876a2:  je     87681 <__GI___pthread_disable_asynccancel+0x41>
    0.00 :   876a4:  ret
    0.00 :   876a5:  cmp    $0xfffffff5,%eax
    0.00 :   876a8:  je     87698 <__GI___pthread_disable_asynccancel+0x58>
    0.00 :   876aa:  cmp    $0xfffffffc,%eax
    0.00 :   876ad:  je     87698 <__GI___pthread_disable_asynccancel+0x58>
    0.00 :   876af:  push   %rax
    0.00 :   876b0:  lea    0x114f39(%rip),%rdi        # 19c5f0 <aliasfile.0+0xba8>
    0.00 :   876b7:  call   810e0 <__libc_fatal>
    0.00 :   876bc:  mov    %eax,%edx
    0.00 :   876be:  jmp    87666 <__GI___pthread_disable_asynccancel+0x26>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   72.04 [nf_tables][19c40]
   14.36 [nf_tables][19c6d]
   13.60 [nf_tables][19c45]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (8 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000019c40 <nft_lookup_eval>:
         : 6     nft_lookup_eval():
   72.04 :   19c40:  call   19c45 <nft_lookup_eval+0x5> // [nf_tables][19c40]
   13.60 :   19c45:  push   %r14 // [nf_tables][19c45]
    0.00 :   19c47:  push   %r13
    0.00 :   19c49:  mov    %rdx,%r13
    0.00 :   19c4c:  push   %r12
    0.00 :   19c4e:  push   %rbp
    0.00 :   19c4f:  mov    %rsi,%rbp
    0.00 :   19c52:  push   %rbx
    0.00 :   19c53:  mov    %rdi,%rbx
    0.00 :   19c56:  sub    $0x8,%rsp
    0.00 :   19c5a:  mov    0x8(%rdx),%rax
    0.00 :   19c5e:  mov    0x8(%rdi),%r14
    0.00 :   19c62:  mov    %rsp,%rcx
    0.00 :   19c65:  movq   $0x0,(%rsp)
   14.36 :   19c6d:  mov    0x20(%rax),%r12 // [nf_tables][19c6d]
    0.00 :   19c71:  movzbl 0x10(%rdi),%eax
    0.00 :   19c75:  mov    %r12,%rdi
    0.00 :   19c78:  lea    (%rsi,%rax,4),%rdx
    0.00 :   19c7c:  mov    %r14,%rsi
    0.00 :   19c7f:  call   19c84 <nft_lookup_eval+0x44>
    0.00 :   19c84:  cmp    0x12(%rbx),%al
    0.00 :   19c87:  je     19d5e <nft_lookup_eval+0x11e>
    0.00 :   19c8d:  mov    (%rsp),%r12
    0.00 :   19c91:  test   %r12,%r12
    0.00 :   19c94:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19c96:  testb  $0x8,0xc8(%r14)
    0.00 :   19c9e:  jne    19cff <nft_lookup_eval+0xbf>
    0.00 :   19ca0:  movzbl 0x8(%r12),%eax
    0.00 :   19ca6:  test   %al,%al
    0.00 :   19ca8:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19caa:  add    %rax,%r12
    0.00 :   19cad:  cmpb   $0x0,(%r12)
    0.00 :   19cb2:  lea    0x8(%r12),%rbx
    0.00 :   19cb7:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19cb9:  xor    %r14d,%r14d
    0.00 :   19cbc:  jmp    19cd4 <nft_lookup_eval+0x94>
    0.00 :   19cbe:  mov    (%rbx),%rax
    0.00 :   19cc1:  mov    0x10(%rax),%eax
    0.00 :   19cc4:  add    %eax,%r14d
    0.00 :   19cc7:  add    %rax,%rbx
    0.00 :   19cca:  movzbl (%r12),%eax
    0.00 :   19ccf:  cmp    %eax,%r14d
    0.00 :   19cd2:  jae    19cee <nft_lookup_eval+0xae>
    0.00 :   19cd4:  mov    (%rbx),%rax
    0.00 :   19cd7:  mov    %r13,%rdx
    0.00 :   19cda:  mov    %rbp,%rsi
    0.00 :   19cdd:  mov    %rbx,%rdi
    0.00 :   19ce0:  mov    (%rax),%rax
    0.00 :   19ce3:  call   19ce8 <nft_lookup_eval+0xa8>
    0.00 :   19ce8:  cmpl   $0xfffffffe,0x0(%rbp)
    0.00 :   19cec:  jne    19cbe <nft_lookup_eval+0x7e>
    0.00 :   19cee:  add    $0x8,%rsp
    0.00 :   19cf2:  pop    %rbx
    0.00 :   19cf3:  pop    %rbp
    0.00 :   19cf4:  pop    %r12
    0.00 :   19cf6:  pop    %r13
    0.00 :   19cf8:  pop    %r14
    0.00 :   19cfa:  jmp    19cff <nft_lookup_eval+0xbf>
    0.00 :   19cff:  movzbl 0x3(%r12),%esi
    0.00 :   19d05:  movzbl 0x11(%rbx),%edx
    0.00 :   19d09:  movzbl 0xcb(%r14),%eax
    0.00 :   19d11:  add    %r12,%rsi
    0.00 :   19d14:  lea    0x0(%rbp,%rdx,4),%rdx
    0.00 :   19d19:  test   $0x3,%al
    0.00 :   19d1b:  je     19d2d <nft_lookup_eval+0xed>
    0.00 :   19d1d:  mov    %rax,%rcx
    0.00 :   19d20:  and    $0xfc,%ecx
    0.00 :   19d26:  movl   $0x0,(%rcx,%rdx,1)
    0.00 :   19d2d:  cmp    $0x8,%eax
    0.00 :   19d30:  jae    19d85 <nft_lookup_eval+0x145>
    0.00 :   19d32:  test   $0x4,%al
    0.00 :   19d34:  jne    19dc3 <nft_lookup_eval+0x183>
    0.00 :   19d3a:  test   %eax,%eax
    0.00 :   19d3c:  je     19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d42:  movzbl (%rsi),%ecx
    0.00 :   19d45:  mov    %cl,(%rdx)
    0.00 :   19d47:  test   $0x2,%al
    0.00 :   19d49:  je     19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d4f:  movzwl -0x2(%rsi,%rax,1),%ecx
    0.00 :   19d54:  mov    %cx,-0x2(%rdx,%rax,1)
    0.00 :   19d59:  jmp    19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d5e:  mov    %r12,%rdi
    0.00 :   19d61:  mov    %r14,%rsi
    0.00 :   19d64:  call   19d69 <nft_lookup_eval+0x129>
    0.00 :   19d69:  mov    %rax,(%rsp)
    0.00 :   19d6d:  mov    %rax,%r12
    0.00 :   19d70:  test   %rax,%rax
    0.00 :   19d73:  jne    19c96 <nft_lookup_eval+0x56>
    0.00 :   19d79:  movl   $0xfffffffe,0x0(%rbp)
    0.00 :   19d80:  jmp    19cee <nft_lookup_eval+0xae>
    0.00 :   19d85:  mov    (%rsi),%rcx
    0.00 :   19d88:  lea    0x8(%rdx),%rdi
    0.00 :   19d8c:  and    $0xfffffffffffffff8,%rdi
    0.00 :   19d90:  mov    %rcx,(%rdx)
    0.00 :   19d93:  mov    -0x8(%rsi,%rax,1),%rcx
    0.00 :   19d98:  mov    %rcx,-0x8(%rdx,%rax,1)
    0.00 :   19d9d:  sub    %rdi,%rdx
    0.00 :   19da0:  lea    (%rax,%rdx,1),%ecx
    0.00 :   19da3:  sub    %rdx,%rsi
    0.00 :   19da6:  mov    %ecx,%eax
    0.00 :   19da8:  shr    $0x3,%eax
    0.00 :   19dab:  mov    %eax,%ecx
    0.00 :   19dad:  rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   19db0:  movzbl 0x8(%r12),%eax
    0.00 :   19db6:  test   %al,%al
    0.00 :   19db8:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19dbe:  jmp    19caa <nft_lookup_eval+0x6a>
    0.00 :   19dc3:  mov    (%rsi),%ecx
    0.00 :   19dc5:  mov    %ecx,(%rdx)
    0.00 :   19dc7:  mov    -0x4(%rsi,%rax,1),%ecx
    0.00 :   19dcb:  mov    %ecx,-0x4(%rdx,%rax,1)
    0.00 :   19dcf:  jmp    19ca0 <nft_lookup_eval+0x60>

Sorted summary for file /usr/lib64/libcrypto.so.3.0.8
----------------------------------------------

   37.15 libcrypto.so.3.0.8[e60aa]
   32.08 libcrypto.so.3.0.8[e622e]
   30.77 libcrypto.so.3.0.8[e6264]
 Percent |	Source code & Disassembly of /usr/lib64/libcrypto.so.3.0.8 for cycles (3 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000e5f80 <BN_div@@OPENSSL_3.0.0>:
    0.00 :   e5f80:  endbr64
    0.00 :   e5f84:  push   %r15
    0.00 :   e5f86:  mov    %rdx,%r15
    0.00 :   e5f89:  push   %r14
    0.00 :   e5f8b:  push   %r13
    0.00 :   e5f8d:  push   %r12
    0.00 :   e5f8f:  push   %rbp
    0.00 :   e5f90:  mov    %rcx,%rbp
    0.00 :   e5f93:  push   %rbx
    0.00 :   e5f94:  sub    $0x68,%rsp
    0.00 :   e5f98:  mov    %rdi,0x10(%rsp)
    0.00 :   e5f9d:  mov    %rcx,%rdi
    0.00 :   e5fa0:  mov    %rsi,0x18(%rsp)
    0.00 :   e5fa5:  mov    %r8,(%rsp)
    0.00 :   e5fa9:  call   e34f0 <BN_is_zero@@OPENSSL_3.0.0>
    0.00 :   e5fae:  test   %eax,%eax
    0.00 :   e5fb0:  jne    e6458 <BN_div@@OPENSSL_3.0.0+0x4d8>
    0.00 :   e5fb6:  movslq 0x8(%rbp),%rdx
    0.00 :   e5fba:  mov    0x0(%rbp),%rax
    0.00 :   e5fbe:  cmpq   $0x0,-0x8(%rax,%rdx,8)
    0.00 :   e5fc4:  je     e6420 <BN_div@@OPENSSL_3.0.0+0x4a0>
    0.00 :   e5fca:  mov    (%rsp),%rdi
    0.00 :   e5fce:  call   e4030 <BN_CTX_start@@OPENSSL_3.0.0>
    0.00 :   e5fd3:  mov    0x10(%rsp),%rax
    0.00 :   e5fd8:  mov    %rax,0x28(%rsp)
    0.00 :   e5fdd:  test   %rax,%rax
    0.00 :   e5fe0:  je     e6490 <BN_div@@OPENSSL_3.0.0+0x510>
    0.00 :   e5fe6:  mov    (%rsp),%rbx
    0.00 :   e5fea:  mov    %rbx,%rdi
    0.00 :   e5fed:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e5ff2:  mov    %rbx,%rdi
    0.00 :   e5ff5:  mov    %rax,0x8(%rsp)
    0.00 :   e5ffa:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e5fff:  mov    %rbx,%rdi
    0.00 :   e6002:  mov    %rax,0x20(%rsp)
    0.00 :   e6007:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e600c:  mov    %rax,%r14
    0.00 :   e600f:  test   %rax,%rax
    0.00 :   e6012:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e6018:  mov    %rbp,%rsi
    0.00 :   e601b:  mov    %rax,%rdi
    0.00 :   e601e:  call   e4bd0 <BN_copy@@OPENSSL_3.0.0>
    0.00 :   e6023:  test   %rax,%rax
    0.00 :   e6026:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e602c:  movslq 0x8(%r14),%r11
    0.00 :   e6030:  mov    (%r14),%r12
    0.00 :   e6033:  lea    0x0(,%r11,8),%rbx
    0.00 :   e603b:  mov    %r11,%r13
    0.00 :   e603e:  mov    -0x8(%r12,%rbx,1),%rdi
    0.00 :   e6043:  add    %r12,%rbx
    0.00 :   e6046:  call   e22d0 <BN_num_bits_word@@OPENSSL_3.0.0>
    0.00 :   e604b:  xor    %esi,%esi
    0.00 :   e604d:  mov    %eax,%r9d
    0.00 :   e6050:  mov    $0x40,%eax
    0.00 :   e6055:  sub    %r9d,%eax
    0.00 :   e6058:  mov    %eax,%r10d
    0.00 :   e605b:  mov    %r9d,%eax
    0.00 :   e605e:  sar    $0x1f,%eax
    0.00 :   e6061:  shr    $0x1a,%eax
    0.00 :   e6064:  lea    (%r9,%rax,1),%edi
    0.00 :   e6068:  and    $0x3f,%r9d
    0.00 :   e606c:  and    $0x3f,%edi
    0.00 :   e606f:  sub    %eax,%edi
    0.00 :   e6071:  movslq %edi,%rdi
    0.00 :   e6074:  neg    %rdi
    0.00 :   e6077:  mov    %rdi,%rax
    0.00 :   e607a:  shr    $0x8,%rax
    0.00 :   e607e:  or     %rax,%rdi
    0.00 :   e6081:  test   %r13d,%r13d
    0.00 :   e6084:  jle    e60ba <BN_div@@OPENSSL_3.0.0+0x13a>
    0.00 :   e6086:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   e6090:  mov    (%r12),%rdx
    0.00 :   e6094:  mov    %r10d,%ecx
    0.00 :   e6097:  add    $0x8,%r12
    0.00 :   e609b:  mov    %rdx,%rax
    0.00 :   e609e:  shl    %cl,%rax
    0.00 :   e60a1:  mov    %r9d,%ecx
    0.00 :   e60a4:  or     %rsi,%rax
    0.00 :   e60a7:  shr    %cl,%rdx
   37.15 :   e60aa:  mov    %rdx,%rsi // libcrypto.so.3.0.8[e60aa]
    0.00 :   e60ad:  mov    %rax,-0x8(%r12)
    0.00 :   e60b2:  and    %rdi,%rsi
    0.00 :   e60b5:  cmp    %rbx,%r12
    0.00 :   e60b8:  jne    e6090 <BN_div@@OPENSSL_3.0.0+0x110>
    0.00 :   e60ba:  mov    0x20(%rsp),%rdi
    0.00 :   e60bf:  mov    %r10d,%edx
    0.00 :   e60c2:  mov    %r15,%rsi
    0.00 :   e60c5:  mov    %r10d,0x48(%rsp)
    0.00 :   e60ca:  movl   $0x0,0x10(%r14)
    0.00 :   e60d2:  call   e5d30 <BN_rshift1@@OPENSSL_3.0.0+0x100>
    0.00 :   e60d7:  mov    0x48(%rsp),%r10d
    0.00 :   e60dc:  test   %eax,%eax
    0.00 :   e60de:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e60e4:  mov    0x20(%rsp),%rax
    0.00 :   e60e9:  mov    0x8(%r14),%r9d
    0.00 :   e60ed:  movslq 0x8(%rax),%rcx
    0.00 :   e60f1:  cmp    %ecx,%r9d
    0.00 :   e60f4:  jge    e6539 <BN_div@@OPENSSL_3.0.0+0x5b9>
    0.00 :   e60fa:  mov    %ecx,%edx
    0.00 :   e60fc:  sub    %r9d,%edx
    0.00 :   e60ff:  movslq %edx,%rax
    0.00 :   e6102:  lea    0x0(,%rax,8),%r8
    0.00 :   e610a:  mov    0x20(%rsp),%rax
    0.00 :   e610f:  movslq %r9d,%r12
    0.00 :   e6112:  xor    %r13d,%r13d
    0.00 :   e6115:  shl    $0x3,%r12
    0.00 :   e6119:  mov    (%rax),%r11
    0.00 :   e611c:  mov    (%r14),%rax
    0.00 :   e611f:  mov    -0x8(%rax,%r12,1),%rbx
    0.00 :   e6124:  cmp    $0x1,%r9d
    0.00 :   e6128:  je     e612f <BN_div@@OPENSSL_3.0.0+0x1af>
    0.00 :   e612a:  mov    -0x10(%rax,%r12,1),%r13
    0.00 :   e612f:  mov    0x28(%rsp),%rax
    0.00 :   e6134:  cmp    %edx,0xc(%rax)
    0.00 :   e6137:  jl     e63ab <BN_div@@OPENSSL_3.0.0+0x42b>
    0.00 :   e613d:  mov    0x10(%r15),%eax
    0.00 :   e6141:  mov    0x28(%rsp),%rsi
    0.00 :   e6146:  mov    %eax,0x58(%rsp)
    0.00 :   e614a:  xor    0x10(%rbp),%eax
    0.00 :   e614d:  mov    %eax,0x10(%rsi)
    0.00 :   e6150:  mov    (%rsi),%rax
    0.00 :   e6153:  mov    %edx,0x8(%rsi)
    0.00 :   e6156:  mov    0x8(%rsp),%rsi
    0.00 :   e615b:  mov    %rax,0x28(%rsp)
    0.00 :   e6160:  lea    0x1(%r9),%eax
    0.00 :   e6164:  mov    %eax,0x4c(%rsp)
    0.00 :   e6168:  cmp    0xc(%rsi),%eax
    0.00 :   e616b:  jg     e65cc <BN_div@@OPENSSL_3.0.0+0x64c>
    0.00 :   e6171:  mov    0x28(%rsp),%rax
    0.00 :   e6176:  movslq %edx,%rdx
    0.00 :   e6179:  lea    -0x8(%r11,%rcx,8),%r15
    0.00 :   e617e:  lea    (%r11,%r8,1),%rbp
    0.00 :   e6182:  neg    %rdx
    0.00 :   e6185:  mov    %r10d,0x5c(%rsp)
    0.00 :   e618a:  mov    %r14,%r10
    0.00 :   e618d:  add    %r8,%rax
    0.00 :   e6190:  mov    %rax,%r8
    0.00 :   e6193:  lea    (%r15,%rdx,8),%rax
    0.00 :   e6197:  mov    %rax,0x50(%rsp)
    0.00 :   e619c:  nopl   0x0(%rax)
    0.00 :   e61a0:  mov    (%r15),%rdx
    0.00 :   e61a3:  mov    -0x8(%r15),%rax
    0.00 :   e61a7:  mov    $0xffffffffffffffff,%r14
    0.00 :   e61ae:  cmp    %rdx,%rbx
    0.00 :   e61b1:  jne    e64a8 <BN_div@@OPENSSL_3.0.0+0x528>
    0.00 :   e61b7:  mov    0x8(%rsp),%rax
    0.00 :   e61bc:  mov    (%r10),%rsi
    0.00 :   e61bf:  sub    $0x8,%rbp
    0.00 :   e61c3:  mov    (%rax),%rdi
    0.00 :   e61c6:  lea    (%rdi,%r12,1),%r11
    0.00 :   e61ca:  test   %r9d,%r9d
    0.00 :   e61cd:  jle    e6520 <BN_div@@OPENSSL_3.0.0+0x5a0>
    0.00 :   e61d3:  mov    %r9d,%edx
    0.00 :   e61d6:  mov    %r14,%rcx
    0.00 :   e61d9:  mov    %r8,0x40(%rsp)
    0.00 :   e61de:  mov    %r10,0x38(%rsp)
    0.00 :   e61e3:  mov    %r11,0x30(%rsp)
    0.00 :   e61e8:  mov    %r9d,0x48(%rsp)
    0.00 :   e61ed:  mov    %rdi,0x28(%rsp)
    0.00 :   e61f2:  call   d9410 <BIO_sock_should_retry@@OPENSSL_3.0.0+0xbd0>
    0.00 :   e61f7:  mov    0x30(%rsp),%r11
    0.00 :   e61fc:  mov    0x28(%rsp),%rdi
    0.00 :   e6201:  mov    0x48(%rsp),%r9d
    0.00 :   e6206:  mov    0x38(%rsp),%r10
    0.00 :   e620b:  mov    %rax,(%r11)
    0.00 :   e620e:  mov    0x40(%rsp),%r8
    0.00 :   e6213:  mov    0x4c(%rsp),%ecx
    0.00 :   e6217:  xor    %edx,%edx
    0.00 :   e6219:  sub    %rax,%rax
    0.00 :   e621c:  jmp    e6220 <BN_div@@OPENSSL_3.0.0+0x2a0>
    0.00 :   e621e:  xchg   %ax,%ax
    0.00 :   e6220:  mov    0x0(%rbp,%rdx,8),%rax
    0.00 :   e6225:  sbb    (%rdi,%rdx,8),%rax
    0.00 :   e6229:  mov    %rax,0x0(%rbp,%rdx,8)
   32.08 :   e622e:  lea    0x1(%rdx),%rdx // libcrypto.so.3.0.8[e622e]
    0.00 :   e6232:  dec    %ecx
    0.00 :   e6234:  jne    e6220 <BN_div@@OPENSSL_3.0.0+0x2a0>
    0.00 :   e6236:  sbb    %rax,%rax
    0.00 :   e6239:  and    $0x1,%eax
    0.00 :   e623c:  mov    %rax,%rcx
    0.00 :   e623f:  sub    %rax,%r14
    0.00 :   e6242:  neg    %rcx
    0.00 :   e6245:  test   %r9d,%r9d
    0.00 :   e6248:  jle    e6658 <BN_div@@OPENSSL_3.0.0+0x6d8>
    0.00 :   e624e:  mov    0x8(%rsp),%rax
    0.00 :   e6253:  mov    (%r10),%rdi
    0.00 :   e6256:  mov    (%rax),%rsi
    0.00 :   e6259:  xor    %eax,%eax
    0.00 :   e625b:  nopl   0x0(%rax,%rax,1)
    0.00 :   e6260:  mov    (%rdi,%rax,1),%rdx
   30.77 :   e6264:  and    %rcx,%rdx // libcrypto.so.3.0.8[e6264]
    0.00 :   e6267:  mov    %rdx,(%rsi,%rax,1)
    0.00 :   e626b:  add    $0x8,%rax
    0.00 :   e626f:  cmp    %r12,%rax
    0.00 :   e6272:  jne    e6260 <BN_div@@OPENSSL_3.0.0+0x2e0>
    0.00 :   e6274:  mov    %r9d,%ecx
    0.00 :   e6277:  xor    %eax,%eax
    0.00 :   e6279:  sub    %rdx,%rdx
    0.00 :   e627c:  jmp    e6280 <BN_div@@OPENSSL_3.0.0+0x300>
    0.00 :   e627e:  xchg   %ax,%ax
    0.00 :   e6280:  mov    0x0(%rbp,%rax,8),%rdx
    0.00 :   e6285:  adc    (%rsi,%rax,8),%rdx
    0.00 :   e6289:  mov    %rdx,0x0(%rbp,%rax,8)
    0.00 :   e628e:  lea    0x1(%rax),%rax
    0.00 :   e6292:  dec    %ecx
    0.00 :   e6294:  jne    e6280 <BN_div@@OPENSSL_3.0.0+0x300>
    0.00 :   e6296:  sbb    %rdx,%rdx
    0.00 :   e6299:  mov    %rdx,%rax
    0.00 :   e629c:  and    $0x1,%eax
    0.00 :   e629f:  sub    $0x8,%r8
    0.00 :   e62a3:  add    %rax,(%r15)
    0.00 :   e62a6:  sub    $0x8,%r15
    0.00 :   e62aa:  mov    %r14,(%r8)
    0.00 :   e62ad:  cmp    %r15,0x50(%rsp)
    0.00 :   e62b2:  jne    e61a0 <BN_div@@OPENSSL_3.0.0+0x220>
    0.00 :   e62b8:  mov    0x20(%rsp),%rax
    0.00 :   e62bd:  mov    0x58(%rsp),%ebx
    0.00 :   e62c1:  cmpq   $0x0,0x18(%rsp)
    0.00 :   e62c7:  mov    0x5c(%rsp),%r10d
    0.00 :   e62cc:  mov    %ebx,0x10(%rax)
    0.00 :   e62cf:  mov    %r9d,0x8(%rax)
    0.00 :   e62d3:  je     e6621 <BN_div@@OPENSSL_3.0.0+0x6a1>
    0.00 :   e62d9:  mov    0x20(%rsp),%rsi
    0.00 :   e62de:  mov    0x18(%rsp),%rdi
    0.00 :   e62e3:  mov    %r10d,%edx
    0.00 :   e62e6:  call   e5e70 <BN_rshift1@@OPENSSL_3.0.0+0x240>
    0.00 :   e62eb:  test   %eax,%eax
    0.00 :   e62ed:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e62f3:  mov    (%rsp),%rdi
    0.00 :   e62f7:  call   e2180 <BN_CTX_end@@OPENSSL_3.0.0>
    0.00 :   e62fc:  cmpq   $0x0,0x10(%rsp)
    0.00 :   e6302:  je     e6352 <BN_div@@OPENSSL_3.0.0+0x3d2>
    0.00 :   e6304:  mov    0x10(%rsp),%rbx
    0.00 :   e6309:  mov    0x8(%rbx),%eax
    0.00 :   e630c:  test   %eax,%eax
    0.00 :   e630e:  jle    e665f <BN_div@@OPENSSL_3.0.0+0x6df>
    0.00 :   e6314:  mov    0x10(%rsp),%rbx
    0.00 :   e6319:  movslq %eax,%rdx
    0.00 :   e631c:  mov    (%rbx),%rcx
    0.00 :   e631f:  lea    (%rcx,%rdx,8),%rdx
    0.00 :   e6323:  jmp    e632d <BN_div@@OPENSSL_3.0.0+0x3ad>
    0.00 :   e6325:  nopl   (%rax)
    0.00 :   e6328:  sub    $0x1,%eax
    0.00 :   e632b:  je     e6337 <BN_div@@OPENSSL_3.0.0+0x3b7>
    0.00 :   e632d:  sub    $0x8,%rdx
    0.00 :   e6331:  cmpq   $0x0,(%rdx)
    0.00 :   e6335:  je     e6328 <BN_div@@OPENSSL_3.0.0+0x3a8>
    0.00 :   e6337:  mov    0x10(%rsp),%rbx
    0.00 :   e633c:  mov    %eax,0x8(%rbx)
    0.00 :   e633f:  test   %eax,%eax
    0.00 :   e6341:  jne    e634a <BN_div@@OPENSSL_3.0.0+0x3ca>
    0.00 :   e6343:  movl   $0x0,0x10(%rbx)
    0.00 :   e634a:  cmpq   $0x0,0x18(%rsp)
    0.00 :   e6350:  je     e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e6352:  mov    0x18(%rsp),%rax
    0.00 :   e6357:  mov    0x8(%rax),%eax
    0.00 :   e635a:  test   %eax,%eax
    0.00 :   e635c:  jle    e6387 <BN_div@@OPENSSL_3.0.0+0x407>
    0.00 :   e635e:  mov    0x18(%rsp),%rbx
    0.00 :   e6363:  movslq %eax,%rdx
    0.00 :   e6366:  mov    (%rbx),%rcx
    0.00 :   e6369:  lea    (%rcx,%rdx,8),%rdx
    0.00 :   e636d:  jmp    e6375 <BN_div@@OPENSSL_3.0.0+0x3f5>
    0.00 :   e636f:  nop
    0.00 :   e6370:  sub    $0x1,%eax
    0.00 :   e6373:  je     e637f <BN_div@@OPENSSL_3.0.0+0x3ff>
    0.00 :   e6375:  sub    $0x8,%rdx
    0.00 :   e6379:  cmpq   $0x0,(%rdx)
    0.00 :   e637d:  je     e6370 <BN_div@@OPENSSL_3.0.0+0x3f0>
    0.00 :   e637f:  mov    0x18(%rsp),%rbx
    0.00 :   e6384:  mov    %eax,0x8(%rbx)
    0.00 :   e6387:  test   %eax,%eax
    0.00 :   e6389:  jne    e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e638b:  mov    0x18(%rsp),%rax
    0.00 :   e6390:  movl   $0x0,0x10(%rax)
    0.00 :   e6397:  add    $0x68,%rsp
    0.00 :   e639b:  mov    $0x1,%eax
    0.00 :   e63a0:  pop    %rbx
    0.00 :   e63a1:  pop    %rbp
    0.00 :   e63a2:  pop    %r12
    0.00 :   e63a4:  pop    %r13
    0.00 :   e63a6:  pop    %r14
    0.00 :   e63a8:  pop    %r15
    0.00 :   e63aa:  ret
    0.00 :   e63ab:  mov    0x28(%rsp),%rdi
    0.00 :   e63b0:  mov    %edx,%esi
    0.00 :   e63b2:  mov    %r8,0x50(%rsp)
    0.00 :   e63b7:  mov    %r10d,0x4c(%rsp)
    0.00 :   e63bc:  mov    %r11,0x40(%rsp)
    0.00 :   e63c1:  mov    %ecx,0x38(%rsp)
    0.00 :   e63c5:  mov    %r9d,0x30(%rsp)
    0.00 :   e63ca:  mov    %edx,0x48(%rsp)
    0.00 :   e63ce:  call   e47e0 <BN_secure_new@@OPENSSL_3.0.0+0x20>
    0.00 :   e63d3:  mov    0x48(%rsp),%edx
    0.00 :   e63d7:  mov    0x30(%rsp),%r9d
    0.00 :   e63dc:  test   %rax,%rax
    0.00 :   e63df:  movslq 0x38(%rsp),%rcx
    0.00 :   e63e4:  mov    0x40(%rsp),%r11
    0.00 :   e63e9:  mov    0x4c(%rsp),%r10d
    0.00 :   e63ee:  mov    0x50(%rsp),%r8
    0.00 :   e63f3:  jne    e613d <BN_div@@OPENSSL_3.0.0+0x1bd>
    0.00 :   e63f9:  nopl   0x0(%rax)
    0.00 :   e6400:  mov    (%rsp),%rdi
    0.00 :   e6404:  call   e2180 <BN_CTX_end@@OPENSSL_3.0.0>
    0.00 :   e6409:  add    $0x68,%rsp
    0.00 :   e640d:  xor    %eax,%eax
    0.00 :   e640f:  pop    %rbx
    0.00 :   e6410:  pop    %rbp
    0.00 :   e6411:  pop    %r12
    0.00 :   e6413:  pop    %r13
    0.00 :   e6415:  pop    %r14
    0.00 :   e6417:  pop    %r15
    0.00 :   e6419:  ret
    0.00 :   e641a:  nopw   0x0(%rax,%rax,1)
    0.00 :   e6420:  call   16c9e0 <ERR_new@@OPENSSL_3.0.0>
    0.00 :   e6425:  lea    0x2265fb(%rip),%rdx        # 30ca27 <RC4_options@@OPENSSL_3.0.0+0x28877>
    0.00 :   e642c:  mov    $0xe1,%esi
    0.00 :   e6431:  lea    0x2266f1(%rip),%rdi        # 30cb29 <RC4_options@@OPENSSL_3.0.0+0x28979>
    0.00 :   e6438:  call   16da40 <ERR_set_debug@@OPENSSL_3.0.0>
    0.00 :   e643d:  xor    %edx,%edx
    0.00 :   e643f:  mov    $0x6b,%esi
    0.00 :   e6444:  xor    %eax,%eax
    0.00 :   e6446:  mov    $0x3,%edi
    0.00 :   e644b:  call   16cda0 <ERR_set_error@@OPENSSL_3.0.0>
    0.00 :   e6450:  jmp    e6409 <BN_div@@OPENSSL_3.0.0+0x489>
    0.00 :   e6452:  nopw   0x0(%rax,%rax,1)
    0.00 :   e6458:  call   16c9e0 <ERR_new@@OPENSSL_3.0.0>
    0.00 :   e645d:  lea    0x2265c3(%rip),%rdx        # 30ca27 <RC4_options@@OPENSSL_3.0.0+0x28877>
    0.00 :   e6464:  mov    $0xd7,%esi
    0.00 :   e6469:  lea    0x2266b9(%rip),%rdi        # 30cb29 <RC4_options@@OPENSSL_3.0.0+0x28979>
    0.00 :   e6470:  call   16da40 <ERR_set_debug@@OPENSSL_3.0.0>
    0.00 :   e6475:  xor    %edx,%edx
    0.00 :   e6477:  mov    $0x67,%esi
    0.00 :   e647c:  xor    %eax,%eax
    0.00 :   e647e:  mov    $0x3,%edi
    0.00 :   e6483:  call   16cda0 <ERR_set_error@@OPENSSL_3.0.0>
    0.00 :   e6488:  jmp    e6409 <BN_div@@OPENSSL_3.0.0+0x489>
    0.00 :   e648d:  nopl   (%rax)
    0.00 :   e6490:  mov    (%rsp),%rdi
    0.00 :   e6494:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e6499:  mov    %rax,0x28(%rsp)
    0.00 :   e649e:  jmp    e5fe6 <BN_div@@OPENSSL_3.0.0+0x66>
    0.00 :   e64a3:  nopl   0x0(%rax,%rax,1)
    0.00 :   e64a8:  xor    %edi,%edi
    0.00 :   e64aa:  cmp    %rbp,%r15
    0.00 :   e64ad:  je     e64b3 <BN_div@@OPENSSL_3.0.0+0x533>
    0.00 :   e64af:  mov    -0x10(%r15),%rdi
    0.00 :   e64b3:  div    %rbx
    0.00 :   e64b6:  mov    %rax,%rsi
    0.00 :   e64b9:  mov    %rax,%r14
    0.00 :   e64bc:  mov    %r13,%rax
    0.00 :   e64bf:  mov    %rdx,%rcx
    0.00 :   e64c2:  mul    %rsi
    0.00 :   e64c5:  mov    %rdx,%r11
    0.00 :   e64c8:  cmp    %rcx,%rdx
    0.00 :   e64cb:  jb     e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64d1:  cmp    %rdx,%rcx
    0.00 :   e64d4:  jne    e64df <BN_div@@OPENSSL_3.0.0+0x55f>
    0.00 :   e64d6:  cmp    %rax,%rdi
    0.00 :   e64d9:  jae    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64df:  add    %rbx,%rcx
    0.00 :   e64e2:  lea    -0x1(%rsi),%r14
    0.00 :   e64e6:  mov    %r11,%rdx
    0.00 :   e64e9:  jae    e6508 <BN_div@@OPENSSL_3.0.0+0x588>
    0.00 :   e64eb:  jmp    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64f0:  jne    e64fb <BN_div@@OPENSSL_3.0.0+0x57b>
    0.00 :   e64f2:  cmp    %rax,%rdi
    0.00 :   e64f5:  jae    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64fb:  sub    $0x1,%r14
    0.00 :   e64ff:  add    %rbx,%rcx
    0.00 :   e6502:  jb     e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e6508:  cmp    %r13,%rax
    0.00 :   e650b:  sbb    $0x0,%rdx
    0.00 :   e650f:  sub    %r13,%rax
    0.00 :   e6512:  cmp    %rcx,%rdx
    0.00 :   e6515:  jae    e64f0 <BN_div@@OPENSSL_3.0.0+0x570>
    0.00 :   e6517:  jmp    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e651c:  nopl   0x0(%rax)
    0.00 :   e6520:  xor    %eax,%eax
    0.00 :   e6522:  cmpl   $0x1,0x4c(%rsp)
    0.00 :   e6527:  movq   $0x0,(%r11)
    0.00 :   e652e:  jne    e629f <BN_div@@OPENSSL_3.0.0+0x31f>
    0.00 :   e6534:  jmp    e6213 <BN_div@@OPENSSL_3.0.0+0x293>
    0.00 :   e6539:  mov    0x20(%rsp),%rax
    0.00 :   e653e:  lea    0x1(%r9),%ebx
    0.00 :   e6542:  cmp    0xc(%rax),%ebx
    0.00 :   e6545:  jg     e6595 <BN_div@@OPENSSL_3.0.0+0x615>
    0.00 :   e6547:  mov    0x20(%rsp),%r13
    0.00 :   e654c:  mov    %r9d,%edx
    0.00 :   e654f:  xor    %esi,%esi
    0.00 :   e6551:  mov    %r10d,0x30(%rsp)
    0.00 :   e6556:  sub    %ecx,%edx
    0.00 :   e6558:  mov    %r9d,0x48(%rsp)
    0.00 :   e655d:  mov    0x0(%r13),%rax
    0.00 :   e6561:  add    $0x1,%edx
    0.00 :   e6564:  movslq %edx,%rdx
    0.00 :   e6567:  shl    $0x3,%rdx
    0.00 :   e656b:  lea    (%rax,%rcx,8),%rdi
    0.00 :   e656f:  call   ad950 <memset@plt>
    0.00 :   e6574:  mov    %ebx,0x8(%r13)
    0.00 :   e6578:  mov    0x48(%rsp),%r9d
    0.00 :   e657d:  movslq %ebx,%rcx
    0.00 :   e6580:  mov    0x30(%rsp),%r10d
    0.00 :   e6585:  mov    $0x8,%r8d
    0.00 :   e658b:  mov    $0x1,%edx
    0.00 :   e6590:  jmp    e610a <BN_div@@OPENSSL_3.0.0+0x18a>
    0.00 :   e6595:  mov    0x20(%rsp),%rdi
    0.00 :   e659a:  mov    %ebx,%esi
    0.00 :   e659c:  mov    %r10d,0x38(%rsp)
    0.00 :   e65a1:  mov    %ecx,0x30(%rsp)
    0.00 :   e65a5:  mov    %r9d,0x48(%rsp)
    0.00 :   e65aa:  call   e47e0 <BN_secure_new@@OPENSSL_3.0.0+0x20>
    0.00 :   e65af:  mov    0x48(%rsp),%r9d
    0.00 :   e65b4:  movslq 0x30(%rsp),%rcx
    0.00 :   e65b9:  test   %rax,%rax
    0.00 :   e65bc:  mov    0x38(%rsp),%r10d
    0.00 :   e65c1:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e65c7:  jmp    e6547 <BN_div@@OPENSSL_3.0.0+0x5c7>
    0.00 :   e65cc:  mov    0x4c(%rsp),%esi
    0.00 :   e65d0:  mov    0x8(%rsp),%rdi
    0.00 :   e65d5:  mov    %edx,0x5c(%rsp)
    0.00 :   e65d9:  mov    %r8,0x50(%rsp)
    0.00 :   e65de:  mov    %r10d,0x40(%rsp)
    0.00 :   e65e3:  mov    %r11,0x38(%rsp)
    0.00 :   e65e8:  mov    %ecx,0x30(%rsp)
    0.00 :   e65ec:  mov    %r9d,0x48(%rsp)
    0.00 :   e65f1:  call   e47e0 <BN_secure_new@@OPENSSL_3.0.0+0x20>
    0.00 :   e65f6:  mov    0x48(%rsp),%r9d
    0.00 :   e65fb:  movslq 0x30(%rsp),%rcx
    0.00 :   e6600:  test   %rax,%rax
    0.00 :   e6603:  mov    0x38(%rsp),%r11
    0.00 :   e6608:  mov    0x40(%rsp),%r10d
    0.00 :   e660d:  mov    0x50(%rsp),%r8
    0.00 :   e6612:  mov    0x5c(%rsp),%edx
    0.00 :   e6616:  jne    e6171 <BN_div@@OPENSSL_3.0.0+0x1f1>
    0.00 :   e661c:  jmp    e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e6621:  mov    (%rsp),%rdi
    0.00 :   e6625:  call   e2180 <BN_CTX_end@@OPENSSL_3.0.0>
    0.00 :   e662a:  cmpq   $0x0,0x10(%rsp)
    0.00 :   e6630:  je     e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e6636:  mov    0x10(%rsp),%rbx
    0.00 :   e663b:  mov    0x8(%rbx),%eax
    0.00 :   e663e:  test   %eax,%eax
    0.00 :   e6640:  jg     e6314 <BN_div@@OPENSSL_3.0.0+0x394>
    0.00 :   e6646:  jne    e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e664c:  movl   $0x0,0x10(%rbx)
    0.00 :   e6653:  jmp    e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e6658:  xor    %eax,%eax
    0.00 :   e665a:  jmp    e629f <BN_div@@OPENSSL_3.0.0+0x31f>
    0.00 :   e665f:  jne    e6352 <BN_div@@OPENSSL_3.0.0+0x3d2>
    0.00 :   e6665:  movl   $0x0,0x10(%rbx)
    0.00 :   e666c:  jmp    e6352 <BN_div@@OPENSSL_3.0.0+0x3d2>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   54.91 libc.so.6[15334a]
   19.12 libc.so.6[153280]
   14.96 libc.so.6[1532c7]
   11.01 libc.so.6[153295]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (8 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000153280 <__memset_avx2_unaligned_erms>:
         : 6      __memset_avx2_unaligned_erms():
   19.12 :   153280: endbr64 // libc.so.6[153280]
    0.00 :   153284: vmovd  %esi,%xmm0
    0.00 :   153288: mov    %rdi,%rax
    0.00 :   15328b: cmp    $0x20,%rdx
    0.00 :   15328f: jb     153360 <__memset_avx2_unaligned_erms+0xe0>
   11.01 :   153295: vpbroadcastb %xmm0,%ymm0 // libc.so.6[153295]
    0.00 :   15329a: cmp    $0x40,%rdx
    0.00 :   15329e: ja     1532c0 <__memset_avx2_unaligned_erms+0x40>
    0.00 :   1532a0: vmovdqu %ymm0,(%rdi)
    0.00 :   1532a4: vmovdqu %ymm0,-0x20(%rdi,%rdx,1)
    0.00 :   1532aa: vzeroupper
    0.00 :   1532ad: ret
    0.00 :   1532ae: xchg   %ax,%ax
    0.00 :   1532b0: vmovdqu %ymm0,-0x40(%rdi)
    0.00 :   1532b5: vmovdqu %ymm0,-0x20(%rdi)
    0.00 :   1532ba: vzeroupper
    0.00 :   1532bd: ret
    0.00 :   1532be: xchg   %ax,%ax
    0.00 :   1532c0: cmp    0x80129(%rip),%rdx        # 1d33f0 <__x86_rep_stosb_threshold>
   14.96 :   1532c7: ja     153340 <__memset_avx2_unaligned_erms+0xc0> // libc.so.6[1532c7]
    0.00 :   1532c9: vmovdqu %ymm0,(%rdi)
    0.00 :   1532cd: vmovdqu %ymm0,0x20(%rdi)
    0.00 :   1532d2: add    %rdx,%rdi
    0.00 :   1532d5: cmp    $0x80,%rdx
    0.00 :   1532dc: jbe    1532b0 <__memset_avx2_unaligned_erms+0x30>
    0.00 :   1532de: vmovdqu %ymm0,0x40(%rax)
    0.00 :   1532e3: vmovdqu %ymm0,0x60(%rax)
    0.00 :   1532e8: add    $0xffffffffffffff80,%rdi
    0.00 :   1532ec: cmp    $0x100,%rdx
    0.00 :   1532f3: jbe    153320 <__memset_avx2_unaligned_erms+0xa0>
    0.00 :   1532f5: lea    0x80(%rax),%rdx
    0.00 :   1532fc: and    $0xffffffffffffffc0,%rdx
    0.00 :   153300: vmovdqa %ymm0,(%rdx)
    0.00 :   153304: vmovdqa %ymm0,0x20(%rdx)
    0.00 :   153309: vmovdqa %ymm0,0x40(%rdx)
    0.00 :   15330e: vmovdqa %ymm0,0x60(%rdx)
    0.00 :   153313: sub    $0xffffffffffffff80,%rdx
    0.00 :   153317: cmp    %rdi,%rdx
    0.00 :   15331a: jb     153300 <__memset_avx2_unaligned_erms+0x80>
    0.00 :   15331c: nopl   0x0(%rax)
    0.00 :   153320: vmovdqu %ymm0,(%rdi)
    0.00 :   153324: vmovdqu %ymm0,0x20(%rdi)
    0.00 :   153329: vmovdqu %ymm0,0x40(%rdi)
    0.00 :   15332e: vmovdqu %ymm0,0x60(%rdi)
    0.00 :   153333: vzeroupper
    0.00 :   153336: ret
    0.00 :   153337: nopw   0x0(%rax,%rax,1)
    0.00 :   153340: movzbl %sil,%eax
    0.00 :   153344: mov    %rdx,%rcx
    0.00 :   153347: mov    %rdi,%rdx
   54.91 :   15334a: rep stos %al,%es:(%rdi) // libc.so.6[15334a]
    0.00 :   15334c: mov    %rdx,%rax
    0.00 :   15334f: vzeroupper
    0.00 :   153352: ret
    0.00 :   153353: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15335e: xchg   %ax,%ax
    0.00 :   153360: vpbroadcastb %xmm0,%xmm0
    0.00 :   153365: cmp    $0x10,%edx
    0.00 :   153368: jge    153380 <__memset_avx2_unaligned_erms+0x100>
    0.00 :   15336a: cmp    $0x8,%edx
    0.00 :   15336d: jge    153390 <__memset_avx2_unaligned_erms+0x110>
    0.00 :   15336f: cmp    $0x4,%edx
    0.00 :   153372: jge    1533a0 <__memset_avx2_unaligned_erms+0x120>
    0.00 :   153374: cmp    $0x1,%edx
    0.00 :   153377: jg     1533b0 <__memset_avx2_unaligned_erms+0x130>
    0.00 :   153379: jl     15337e <__memset_avx2_unaligned_erms+0xfe>
    0.00 :   15337b: mov    %sil,(%rdi)
    0.00 :   15337e: ret
    0.00 :   15337f: nop
    0.00 :   153380: vmovdqu %xmm0,(%rdi)
    0.00 :   153384: vmovdqu %xmm0,-0x10(%rdi,%rdx,1)
    0.00 :   15338a: ret
    0.00 :   15338b: nopl   0x0(%rax,%rax,1)
    0.00 :   153390: vmovq  %xmm0,(%rdi)
    0.00 :   153394: vmovq  %xmm0,-0x8(%rdi,%rdx,1)
    0.00 :   15339a: ret
    0.00 :   15339b: nopl   0x0(%rax,%rax,1)
    0.00 :   1533a0: vmovd  %xmm0,(%rdi)
    0.00 :   1533a4: vmovd  %xmm0,-0x4(%rdi,%rdx,1)
    0.00 :   1533aa: ret
    0.00 :   1533ab: nopl   0x0(%rax,%rax,1)
    0.00 :   1533b0: mov    %sil,(%rdi)
    0.00 :   1533b3: mov    %sil,0x1(%rdi)
    0.00 :   1533b7: mov    %sil,-0x1(%rdi,%rdx,1)
    0.00 :   1533bc: ret

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   53.18 dbt2-driver[409cea]
   13.69 dbt2-driver[409cc1]
   12.92 dbt2-driver[409ce1]
   11.39 dbt2-driver[409cdd]
    8.81 dbt2-driver[409cc0]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000409cc0 <pcg_output_xsl_rr_128_64>:
         : 6      pcg_output_xsl_rr_128_64():
    8.81 :   409cc0: push   %rbp // dbt2-driver[409cc0]
   13.69 :   409cc1: mov    %rsp,%rbp // dbt2-driver[409cc1]
    0.00 :   409cc4: sub    $0x10,%rsp
    0.00 :   409cc8: mov    %rdi,%rax
    0.00 :   409ccb: mov    %rsi,%rcx
    0.00 :   409cce: mov    %rcx,%rdx
    0.00 :   409cd1: mov    %rax,-0x10(%rbp)
    0.00 :   409cd5: mov    %rdx,-0x8(%rbp)
    0.00 :   409cd9: mov    -0x10(%rbp),%rax
   11.39 :   409cdd: mov    -0x8(%rbp),%rdx // dbt2-driver[409cdd]
   12.92 :   409ce1: mov    %rdx,%rax // dbt2-driver[409ce1]
    0.00 :   409ce4: xor    %edx,%edx
    0.00 :   409ce6: shr    $0x3a,%rax
   53.18 :   409cea: mov    %eax,%ecx // dbt2-driver[409cea]
    0.00 :   409cec: mov    -0x10(%rbp),%rax
    0.00 :   409cf0: mov    -0x8(%rbp),%rdx
    0.00 :   409cf4: mov    %rdx,%rax
    0.00 :   409cf7: xor    %edx,%edx
    0.00 :   409cf9: mov    %rax,%rdx
    0.00 :   409cfc: mov    -0x10(%rbp),%rax
    0.00 :   409d00: xor    %rdx,%rax
    0.00 :   409d03: mov    %ecx,%esi
    0.00 :   409d05: mov    %rax,%rdi
    0.00 :   409d08: call   409afd <pcg_rotr_64>
    0.00 :   409d0d: leave
    0.00 :   409d0e: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   36.52 [nf_tables][1f6aa]
   29.88 [nf_tables][1f610]
   16.87 [nf_tables][1f697]
   16.73 [nf_tables][1f642]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (7 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001f610 <nft_hash_lookup_fast>:
         : 6     nft_hash_lookup_fast():
   29.88 :   1f610:  call   1f615 <nft_hash_lookup_fast+0x5> // [nf_tables][1f610]
    0.00 :   1f615:  mov    %rsi,%r9
    0.00 :   1f618:  mov    %rcx,%r8
    0.00 :   1f61b:  movzbl 0xc20(%rdi),%ecx
    0.00 :   1f622:  mov    $0x1,%esi
    0.00 :   1f627:  mov    0xf0(%r9),%eax
    0.00 :   1f62e:  shl    %cl,%esi
    0.00 :   1f630:  mov    (%rdx),%ecx
    0.00 :   1f632:  lea    -0x2152410d(%rax),%edx
    0.00 :   1f638:  mov    %edx,%eax
    0.00 :   1f63a:  lea    (%rcx,%rdx,1),%edi
    0.00 :   1f63d:  rol    $0xe,%eax
    0.00 :   1f640:  neg    %eax
   16.73 :   1f642:  mov    %eax,%r10d // [nf_tables][1f642]
    0.00 :   1f645:  xor    %eax,%edi
    0.00 :   1f647:  rol    $0xb,%r10d
    0.00 :   1f64b:  sub    %r10d,%edi
    0.00 :   1f64e:  mov    %edi,%r10d
    0.00 :   1f651:  xor    %edi,%edx
    0.00 :   1f653:  ror    $0x7,%r10d
    0.00 :   1f657:  sub    %r10d,%edx
    0.00 :   1f65a:  mov    %edx,%r10d
    0.00 :   1f65d:  xor    %edx,%eax
    0.00 :   1f65f:  rol    $0x10,%r10d
    0.00 :   1f663:  sub    %r10d,%eax
    0.00 :   1f666:  mov    %eax,%r10d
    0.00 :   1f669:  xor    %eax,%edi
    0.00 :   1f66b:  rol    $0x4,%r10d
    0.00 :   1f66f:  sub    %r10d,%edi
    0.00 :   1f672:  xor    %edi,%edx
    0.00 :   1f674:  rol    $0xe,%edi
    0.00 :   1f677:  sub    %edi,%edx
    0.00 :   1f679:  xor    %edx,%eax
    0.00 :   1f67b:  ror    $0x8,%edx
    0.00 :   1f67e:  sub    %edx,%eax
    0.00 :   1f680:  mov    0xf4(%r9),%edx
    0.00 :   1f687:  imul   %rdx,%rax
    0.00 :   1f68b:  shr    $0x20,%rax
    0.00 :   1f68f:  mov    0xf8(%r9,%rax,8),%rax
   16.87 :   1f697:  test   %rax,%rax // [nf_tables][1f697]
    0.00 :   1f69a:  jne    1f6a6 <nft_hash_lookup_fast+0x96>
    0.00 :   1f69c:  jmp    1f6cd <nft_hash_lookup_fast+0xbd>
    0.00 :   1f69e:  mov    (%rax),%rax
    0.00 :   1f6a1:  test   %rax,%rax
    0.00 :   1f6a4:  je     1f6c8 <nft_hash_lookup_fast+0xb8>
    0.00 :   1f6a6:  movzbl 0x11(%rax),%edx
   36.52 :   1f6aa:  lea    0x10(%rax),%rdi // [nf_tables][1f6aa]
    0.00 :   1f6ae:  cmp    0x10(%rax,%rdx,1),%ecx
    0.00 :   1f6b2:  jne    1f69e <nft_hash_lookup_fast+0x8e>
    0.00 :   1f6b4:  mov    %esi,%edx
    0.00 :   1f6b6:  and    0x10(%rax),%dl
    0.00 :   1f6b9:  jne    1f69e <nft_hash_lookup_fast+0x8e>
    0.00 :   1f6bb:  mov    %rdi,(%r8)
    0.00 :   1f6be:  mov    $0x1,%eax
    0.00 :   1f6c3:  jmp    1f6c8 <nft_hash_lookup_fast+0xb8>
    0.00 :   1f6c8:  jmp    1f6cd <nft_hash_lookup_fast+0xbd>
    0.00 :   1f6cd:  xor    %eax,%eax
    0.00 :   1f6cf:  jmp    1f6d4 <nft_hash_lookup_fast+0xc4>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   86.87 [nf_nat][2da0]
   13.13 [nf_nat][2e40]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (7 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002da0 <nf_nat_ipv4_local_fn>:
         : 6    nf_nat_ipv4_local_fn():
   86.87 :   2da0:   call   2da5 <nf_nat_ipv4_local_fn+0x5> // [nf_nat][2da0]
    0.00 :   2da5:   push   %rbp
    0.00 :   2da6:   push   %rbx
    0.00 :   2da7:   mov    %rsi,%rbx
    0.00 :   2daa:   mov    0x68(%rsi),%rsi
    0.00 :   2dae:   cmp    $0x7,%rsi
    0.00 :   2db2:   jbe    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2db8:   mov    %rdx,%rbp
    0.00 :   2dbb:   mov    %esi,%edx
    0.00 :   2dbd:   mov    $0x12,%eax
    0.00 :   2dc2:   and    $0x7,%edx
    0.00 :   2dc5:   bt     %rdx,%rax
    0.00 :   2dc9:   jae    2de0 <nf_nat_ipv4_local_fn+0x40>
    0.00 :   2dcb:   movzwl 0xb8(%rbx),%eax
    0.00 :   2dd2:   mov    0xc8(%rbx),%rcx
    0.00 :   2dd9:   cmpb   $0x1,0x9(%rcx,%rax,1)
    0.00 :   2dde:   je     2df7 <nf_nat_ipv4_local_fn+0x57>
    0.00 :   2de0:   mov    %rbp,%rdx
    0.00 :   2de3:   mov    %rbx,%rsi
    0.00 :   2de6:   call   2deb <nf_nat_ipv4_local_fn+0x4b>
    0.00 :   2deb:   cmp    $0x1,%eax
    0.00 :   2dee:   je     2e0f <nf_nat_ipv4_local_fn+0x6f>
    0.00 :   2df0:   pop    %rbx
    0.00 :   2df1:   pop    %rbp
    0.00 :   2df2:   jmp    2df7 <nf_nat_ipv4_local_fn+0x57>
    0.00 :   2df7:   movzbl 0x0(%rbp),%ecx
    0.00 :   2dfb:   and    $0xfffffffffffffff8,%rsi
    0.00 :   2dff:   mov    %rbx,%rdi
    0.00 :   2e02:   call   2e07 <nf_nat_ipv4_local_fn+0x67>
    0.00 :   2e07:   mov    %eax,%edx
    0.00 :   2e09:   xor    %eax,%eax
    0.00 :   2e0b:   test   %edx,%edx
    0.00 :   2e0d:   je     2df0 <nf_nat_ipv4_local_fn+0x50>
    0.00 :   2e0f:   mov    0x68(%rbx),%rax
    0.00 :   2e13:   mov    %eax,%edx
    0.00 :   2e15:   mov    %rax,%rcx
    0.00 :   2e18:   and    $0x7,%edx
    0.00 :   2e1b:   and    $0xfffffffffffffff8,%rcx
    0.00 :   2e1f:   cmp    $0x7,%rax
    0.00 :   2e23:   jbe    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e25:   xor    %eax,%eax
    0.00 :   2e27:   cmp    $0x2,%edx
    0.00 :   2e2a:   seta   %sil
    0.00 :   2e2e:   setbe  %al
    0.00 :   2e31:   movzbl %sil,%esi
    0.00 :   2e35:   lea    0x0(,%rsi,8),%rdx
    0.00 :   2e3d:   sub    %rsi,%rdx
   13.13 :   2e40:   lea    (%rcx,%rdx,8),%rsi // [nf_nat][2e40]
    0.00 :   2e44:   lea    0x0(,%rax,8),%rdx
    0.00 :   2e4c:   sub    %rax,%rdx
    0.00 :   2e4f:   lea    (%rcx,%rdx,8),%rax
    0.00 :   2e53:   mov    0x20(%rax),%ecx
    0.00 :   2e56:   cmp    %ecx,0x34(%rsi)
    0.00 :   2e59:   jne    2e73 <nf_nat_ipv4_local_fn+0xd3>
    0.00 :   2e5b:   testb  $0x4,0x3c(%rbx)
    0.00 :   2e5f:   jne    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e61:   cmpb   $0x1,0x46(%rsi)
    0.00 :   2e65:   jne    2e93 <nf_nat_ipv4_local_fn+0xf3>
    0.00 :   2e67:   mov    $0x1,%eax
    0.00 :   2e6c:   pop    %rbx
    0.00 :   2e6d:   pop    %rbp
    0.00 :   2e6e:   jmp    2e73 <nf_nat_ipv4_local_fn+0xd3>
    0.00 :   2e73:   mov    0x18(%rbp),%rsi
    0.00 :   2e77:   mov    0x20(%rbp),%rdi
    0.00 :   2e7b:   xor    %ecx,%ecx
    0.00 :   2e7d:   mov    %rbx,%rdx
    0.00 :   2e80:   call   2e85 <nf_nat_ipv4_local_fn+0xe5>
    0.00 :   2e85:   test   %eax,%eax
    0.00 :   2e87:   jns    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e89:   neg    %eax
    0.00 :   2e8b:   shl    $0x10,%eax
    0.00 :   2e8e:   jmp    2df0 <nf_nat_ipv4_local_fn+0x50>
    0.00 :   2e93:   movzwl 0x30(%rax),%eax
    0.00 :   2e97:   cmp    %ax,0x44(%rsi)
    0.00 :   2e9b:   je     2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e9d:   mov    0x20(%rbp),%rdi
    0.00 :   2ea1:   mov    $0x2,%edx
    0.00 :   2ea6:   mov    %rbx,%rsi
    0.00 :   2ea9:   call   2c40 <nf_xfrm_me_harder>
    0.00 :   2eae:   test   %eax,%eax
    0.00 :   2eb0:   jns    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2eb2:   jmp    2e89 <nf_nat_ipv4_local_fn+0xe9>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   55.67 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/x86_64/dl-machine.h:407
   44.33 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/x86_64/dl-machine.h:488
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (2 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000000e290 <_dl_relocate_object>:
         : 6     _dl_relocate_object():
    0.00 :    e290:   endbr64
    0.00 :    e294:   push   %rbp
    0.00 :    e295:   mov    %rsp,%rbp
    0.00 :    e298:   push   %r15
    0.00 :    e29a:   mov    %rdi,%r15
    0.00 :    e29d:   push   %r14
    0.00 :    e29f:   push   %r13
    0.00 :    e2a1:   mov    %edx,%r13d
    0.00 :    e2a4:   push   %r12
    0.00 :    e2a6:   mov    %ecx,%r12d
    0.00 :    e2a9:   push   %rbx
    0.00 :    e2aa:   xor    %ebx,%ebx
    0.00 :    e2ac:   sub    $0xd8,%rsp
    0.00 :    e2b3:   and    $0x8000000,%edx
    0.00 :    e2b9:   mov    %rsi,-0xb0(%rbp)
    0.00 :    e2c0:   jne    e318 <_dl_relocate_object+0x88>
    0.00 :    e2c2:   mov    0x26b10(%rip),%ecx        # 34dd8 <_rtld_global_ro+0x378>
    0.00 :    e2c8:   mov    0x26b01(%rip),%rax        # 34dd0 <_rtld_global_ro+0x370>
    0.00 :    e2cf:   test   %ecx,%ecx
    0.00 :    e2d1:   je     e318 <_dl_relocate_object+0x88>
    0.00 :    e2d3:   xor    %edx,%edx
    0.00 :    e2d5:   mov    $0x1,%edi
    0.00 :    e2da:   mov    $0x1,%esi
    0.00 :    e2df:   jmp    e301 <_dl_relocate_object+0x71>
    0.00 :    e2e1:   nopl   0x0(%rax)
    0.00 :    e2e8:   mov    $0x1,%r12d
    0.00 :    e2ee:   cmpq   $0x0,0x20(%rax)
    0.00 :    e2f3:   mov    0x40(%rax),%rax
    0.00 :    e2f7:   cmovne %esi,%ebx
    0.00 :    e2fa:   add    $0x1,%edx
    0.00 :    e2fd:   cmp    %edx,%ecx
    0.00 :    e2ff:   je     e318 <_dl_relocate_object+0x88>
    0.00 :    e301:   cmpq   $0x0,0x28(%rax)
    0.00 :    e306:   jne    e2e8 <_dl_relocate_object+0x58>
    0.00 :    e308:   cmpq   $0x0,0x30(%rax)
    0.00 :    e30d:   cmovne %edi,%r12d
    0.00 :    e311:   jmp    e2ee <_dl_relocate_object+0x5e>
    0.00 :    e313:   nopl   0x0(%rax,%rax,1)
    0.00 :    e318:   testb  $0x8,0x334(%r15)
    0.00 :    e320:   jne    e706 <_dl_relocate_object+0x476>
    0.00 :    e326:   mov    0x26734(%rip),%eax        # 34a60 <_rtld_global_ro>
    0.00 :    e32c:   and    $0x20,%eax
    0.00 :    e32f:   test   %r12d,%r12d
    0.00 :    e332:   je     e718 <_dl_relocate_object+0x488>
    0.00 :    e338:   mov    %r13d,%r10d
    0.00 :    e33b:   and    $0x1,%r10d
    0.00 :    e33f:   test   %eax,%eax
    0.00 :    e341:   jne    fd10 <_dl_relocate_object+0x1a80>
    0.00 :    e347:   mov    0xf0(%r15),%rax
    0.00 :    e34e:   mov    %rax,-0xe0(%rbp)
    0.00 :    e355:   test   %rax,%rax
    0.00 :    e358:   jne    fd53 <_dl_relocate_object+0x1ac3>
    0.00 :    e35e:   cmpq   $0x0,0xf8(%r15)
    0.00 :    e366:   je     e3bb <_dl_relocate_object+0x12b>
    0.00 :    e368:   test   %r10d,%r10d
    0.00 :    e36b:   je     e3bb <_dl_relocate_object+0x12b>
    0.00 :    e36d:   mov    0x58(%r15),%rax
    0.00 :    e371:   mov    0x8(%rax),%rax
    0.00 :    e375:   testb  $0x20,0x336(%r15)
    0.00 :    e37d:   je     e382 <_dl_relocate_object+0xf2>
    0.00 :    e37f:   add    (%r15),%rax
    0.00 :    e382:   mov    0x8(%rax),%rdx
    0.00 :    e386:   test   %rdx,%rdx
    0.00 :    e389:   jne    f398 <_dl_relocate_object+0x1108>
    0.00 :    e38f:   mov    %r15,0x8(%rax)
    0.00 :    e393:   test   %r12d,%r12d
    0.00 :    e396:   jne    1025c <_dl_relocate_object+0x1fcc>
    0.00 :    e39c:   cmpq   $0x0,0x2686c(%rip)        # 34c10 <_rtld_global_ro+0x1b0>
    0.00 :    e3a4:   jne    f3b2 <_dl_relocate_object+0x1122>
    0.00 :    e3aa:   lea    0x43ef(%rip),%rsi        # 127a0 <_dl_runtime_resolve_fxsave>
    0.00 :    e3b1:   mov    %rsi,0x10(%rax)
    0.00 :    e3b5:   mov    $0x1,%r10d
    0.00 :    e3bb:   movzbl 0x336(%r15),%ecx
    0.00 :    e3c3:   lea    0x276e6(%rip),%rax        # 35ab0 <_rtld_global+0xab0>
    0.00 :    e3ca:   mov    (%r15),%r14
    0.00 :    e3cd:   mov    %ecx,%edi
    0.00 :    e3cf:   and    $0x20,%edi
    0.00 :    e3d2:   cmp    %rax,%r15
    0.00 :    e3d5:   je     e470 <_dl_relocate_object+0x1e0>
    0.00 :    e3db:   mov    0x160(%r15),%rax
    0.00 :    e3e2:   test   %rax,%rax
    0.00 :    e3e5:   je     e470 <_dl_relocate_object+0x1e0>
    0.00 :    e3eb:   mov    0x8(%rax),%rax
    0.00 :    e3ef:   test   %dil,%dil
    0.00 :    e3f2:   lea    (%rax,%r14,1),%rdx
    0.00 :    e3f6:   cmove  %rax,%rdx
    0.00 :    e3fa:   mov    0x158(%r15),%rax
    0.00 :    e401:   mov    0x8(%rax),%rsi
    0.00 :    e405:   add    %rdx,%rsi
    0.00 :    e408:   cmp    %rsi,%rdx
    0.00 :    e40b:   jae    e470 <_dl_relocate_object+0x1e0>
    0.00 :    e40d:   xor    %edi,%edi
    0.00 :    e40f:   jmp    e42b <_dl_relocate_object+0x19b>
    0.00 :    e411:   nopl   0x0(%rax)
    0.00 :    e418:   add    %r14,%rax
    0.00 :    e41b:   add    $0x8,%rdx
    0.00 :    e41f:   add    %r14,(%rax)
    0.00 :    e422:   lea    0x8(%rax),%rdi
    0.00 :    e426:   cmp    %rsi,%rdx
    0.00 :    e429:   jae    e460 <_dl_relocate_object+0x1d0>
    0.00 :    e42b:   mov    (%rdx),%rax
    0.00 :    e42e:   test   $0x1,%al
    0.00 :    e430:   je     e418 <_dl_relocate_object+0x188>
    0.00 :    e432:   shr    %rax
    0.00 :    e435:   mov    %rdi,%rcx
    0.00 :    e438:   je     e450 <_dl_relocate_object+0x1c0>
    0.00 :    e43a:   nopw   0x0(%rax,%rax,1)
    0.00 :    e440:   test   $0x1,%al
    0.00 :    e442:   je     e447 <_dl_relocate_object+0x1b7>
    0.00 :    e444:   add    %r14,(%rcx)
    0.00 :    e447:   add    $0x8,%rcx
    0.00 :    e44b:   shr    %rax
    0.00 :    e44e:   jne    e440 <_dl_relocate_object+0x1b0>
    0.00 :    e450:   add    $0x8,%rdx
    0.00 :    e454:   add    $0x1f8,%rdi
    0.00 :    e45b:   cmp    %rsi,%rdx
    0.00 :    e45e:   jb     e42b <_dl_relocate_object+0x19b>
    0.00 :    e460:   movzbl 0x336(%r15),%ecx
    0.00 :    e468:   mov    (%r15),%r14
    0.00 :    e46b:   mov    %ecx,%edi
    0.00 :    e46d:   and    $0x20,%edi
    0.00 :    e470:   mov    0x78(%r15),%rax
    0.00 :    e474:   pxor   %xmm0,%xmm0
    0.00 :    e478:   movaps %xmm0,-0x70(%rbp)
    0.00 :    e47c:   movaps %xmm0,-0x60(%rbp)
    0.00 :    e480:   movaps %xmm0,-0x50(%rbp)
    0.00 :    e484:   movaps %xmm0,-0x40(%rbp)
    0.00 :    e488:   test   %rax,%rax
    0.00 :    e48b:   je     f338 <_dl_relocate_object+0x10a8>
    0.00 :    e491:   mov    0x8(%rax),%rax
    0.00 :    e495:   xor    %esi,%esi
    0.00 :    e497:   test   %rax,%rax
    0.00 :    e49a:   je     e4d8 <_dl_relocate_object+0x248>
    0.00 :    e49c:   lea    (%rax,%r14,1),%rdx
    0.00 :    e4a0:   test   %dil,%dil
    0.00 :    e4a3:   cmovne %rdx,%rax
    0.00 :    e4a7:   mov    0x80(%r15),%rdx
    0.00 :    e4ae:   mov    0x8(%rdx),%rsi
    0.00 :    e4b2:   movq   %rax,%xmm0
    0.00 :    e4b7:   mov    0x1a0(%r15),%rdx
    0.00 :    e4be:   movq   %rsi,%xmm6
    0.00 :    e4c3:   punpcklqdq %xmm6,%xmm0
    0.00 :    e4c7:   movaps %xmm0,-0x70(%rbp)
    0.00 :    e4cb:   test   %rdx,%rdx
    0.00 :    e4ce:   je     e4d8 <_dl_relocate_object+0x248>
    0.00 :    e4d0:   mov    0x8(%rdx),%rdx
    0.00 :    e4d4:   mov    %rdx,-0x60(%rbp)
    0.00 :    e4d8:   cmpq   $0x0,0xe0(%r15)
    0.00 :    e4e0:   je     e547 <_dl_relocate_object+0x2b7>
    0.00 :    e4e2:   mov    0xf8(%r15),%rdx
    0.00 :    e4e9:   test   %dil,%dil
    0.00 :    e4ec:   mov    0x50(%r15),%rdi
    0.00 :    e4f0:   mov    0x8(%rdx),%rdx
    0.00 :    e4f4:   mov    0x8(%rdi),%rdi
    0.00 :    e4f8:   lea    (%rdx,%r14,1),%r8
    0.00 :    e4fc:   movq   %rdi,%xmm5
    0.00 :    e501:   cmovne %r8,%rdx
    0.00 :    e505:   test   %rax,%rax
    0.00 :    e508:   cmove  %rdx,%rax
    0.00 :    e50c:   movq   %rdx,%xmm0
    0.00 :    e511:   lea    (%rdi,%rdx,1),%r9
    0.00 :    e515:   punpcklqdq %xmm5,%xmm0
    0.00 :    e519:   lea    (%rax,%rsi,1),%r8
    0.00 :    e51d:   mov    %rax,-0x70(%rbp)
    0.00 :    e521:   cmp    %r9,%r8
    0.00 :    e524:   jne    e531 <_dl_relocate_object+0x2a1>
    0.00 :    e526:   sub    %rdi,%rsi
    0.00 :    e529:   mov    %rsi,-0x68(%rbp)
    0.00 :    e52d:   lea    (%rsi,%rax,1),%r8
    0.00 :    e531:   test   %r10d,%r10d
    0.00 :    e534:   jne    e53f <_dl_relocate_object+0x2af>
    0.00 :    e536:   cmp    %r8,%rdx
    0.00 :    e539:   je     f3d4 <_dl_relocate_object+0x1144>
    0.00 :    e53f:   mov    %r10d,-0x38(%rbp)
    0.00 :    e543:   movaps %xmm0,-0x50(%rbp)
    0.00 :    e547:   lea    -0x30(%rbp),%rax
    0.00 :    e54b:   mov    %bl,-0xb5(%rbp)
    0.00 :    e551:   mov    %r15,%r11
    0.00 :    e554:   mov    %r14,%r15
    0.00 :    e557:   mov    %rax,-0xd8(%rbp)
    0.00 :    e55e:   and    $0x2000000,%r13d
    0.00 :    e565:   mov    %r12d,-0xe4(%rbp)
    0.00 :    e56c:   mov    %r13d,-0xb4(%rbp)
    0.00 :    e573:   lea    -0x70(%rbp),%r13
    0.00 :    e577:   mov    0x10(%r13),%rdx
    0.00 :    e57b:   mov    0x0(%r13),%rax
    0.00 :    e57f:   mov    0x8(%r13),%rdi
    0.00 :    e583:   lea    (%rdx,%rdx,2),%rdx
    0.00 :    e587:   lea    (%rax,%rdx,8),%rbx
    0.00 :    e58b:   mov    0x70(%r11),%rdx
    0.00 :    e58f:   add    %rax,%rdi
    0.00 :    e592:   and    $0x20,%ecx
    0.00 :    e595:   mov    %rdi,-0x98(%rbp)
    0.00 :    e59c:   mov    0x8(%rdx),%rsi
    0.00 :    e5a0:   lea    (%rsi,%r15,1),%rdx
    0.00 :    e5a4:   cmove  %rsi,%rdx
    0.00 :    e5a8:   mov    %rdx,-0x88(%rbp)
    0.00 :    e5af:   mov    0x18(%r13),%edx
    0.00 :    e5b3:   test   %edx,%edx
    0.00 :    e5b5:   je     e8f0 <_dl_relocate_object+0x660>
    0.00 :    e5bb:   xor    %r10d,%r10d
    0.00 :    e5be:   xor    %r14d,%r14d
    0.00 :    e5c1:   cmp    %rdi,%rbx
    0.00 :    e5c4:   jae    e698 <_dl_relocate_object+0x408>
    0.00 :    e5ca:   mov    %r13,-0x90(%rbp)
    0.00 :    e5d1:   mov    %r11,%r13
    0.00 :    e5d4:   mov    %r10,%r11
    0.00 :    e5d7:   mov    -0x98(%rbp),%r10
    0.00 :    e5de:   jmp    e60d <_dl_relocate_object+0x37d>
    0.00 :    e5e0:   mov    (%rbx),%r12
    0.00 :    e5e3:   add    %r15,%r12
    0.00 :    e5e6:   cmp    $0x7,%rax
    0.00 :    e5ea:   jne    e780 <_dl_relocate_object+0x4f0>
    0.00 :    e5f0:   mov    0x410(%r13),%rax
    0.00 :    e5f7:   test   %rax,%rax
    0.00 :    e5fa:   jne    e8d8 <_dl_relocate_object+0x648>
    0.00 :    e600:   add    %r15,(%r12)
    0.00 :    e604:   add    $0x18,%rbx
    0.00 :    e608:   cmp    %r10,%rbx
    0.00 :    e60b:   jae    e62b <_dl_relocate_object+0x39b>
    0.00 :    e60d:   mov    0x8(%rbx),%rcx
    0.00 :    e611:   mov    %ecx,%eax
    0.00 :    e613:   cmp    $0x25,%ecx
    0.00 :    e616:   jne    e5e0 <_dl_relocate_object+0x350>
    0.00 :    e618:   test   %r14,%r14
    0.00 :    e61b:   mov    %rbx,%r11
    0.00 :    e61e:   cmove  %rbx,%r14
    0.00 :    e622:   add    $0x18,%rbx
    0.00 :    e626:   cmp    %r10,%rbx
    0.00 :    e629:   jb     e60d <_dl_relocate_object+0x37d>
    0.00 :    e62b:   mov    %r11,%r10
    0.00 :    e62e:   mov    %r13,%r11
    0.00 :    e631:   mov    -0x90(%rbp),%r13
    0.00 :    e638:   test   %r14,%r14
    0.00 :    e63b:   je     e698 <_dl_relocate_object+0x408>
    0.00 :    e63d:   cmp    %r14,%r10
    0.00 :    e640:   jb     e698 <_dl_relocate_object+0x408>
    0.00 :    e642:   mov    %r13,-0x88(%rbp)
    0.00 :    e649:   mov    %r11,%r12
    0.00 :    e64c:   mov    %r10,%r13
    0.00 :    e64f:   jmp    e661 <_dl_relocate_object+0x3d1>
    0.00 :    e651:   nopl   0x0(%rax)
    0.00 :    e658:   add    $0x18,%r14
    0.00 :    e65c:   cmp    %r14,%r13
    0.00 :    e65f:   jb     e68e <_dl_relocate_object+0x3fe>
    0.00 :    e661:   cmpl   $0x25,0x8(%r14)
    0.00 :    e666:   jne    e658 <_dl_relocate_object+0x3c8>
    0.00 :    e668:   mov    (%r14),%rbx
    0.00 :    e66b:   mov    -0xb4(%rbp),%edi
    0.00 :    e671:   mov    0x10(%r14),%rax
    0.00 :    e675:   add    (%r12),%rax
    0.00 :    e679:   add    %r15,%rbx
    0.00 :    e67c:   test   %edi,%edi
    0.00 :    e67e:   jne    e682 <_dl_relocate_object+0x3f2>
    0.00 :    e680:   call   *%rax
    0.00 :    e682:   add    $0x18,%r14
    0.00 :    e686:   mov    %rax,(%rbx)
    0.00 :    e689:   cmp    %r14,%r13
    0.00 :    e68c:   jae    e661 <_dl_relocate_object+0x3d1>
    0.00 :    e68e:   mov    -0x88(%rbp),%r13
    0.00 :    e695:   mov    %r12,%r11
    0.00 :    e698:   mov    -0xd8(%rbp),%rax
    0.00 :    e69f:   add    $0x20,%r13
    0.00 :    e6a3:   cmp    %rax,%r13
    0.00 :    e6a6:   je     e6c0 <_dl_relocate_object+0x430>
    0.00 :    e6a8:   mov    (%r11),%r15
    0.00 :    e6ab:   movzbl 0x336(%r11),%ecx
    0.00 :    e6b3:   jmp    e577 <_dl_relocate_object+0x2e7>
    0.00 :    e6b8:   nopl   0x0(%rax,%rax,1)
    0.00 :    e6c0:   mov    -0xe4(%rbp),%r12d
    0.00 :    e6c7:   movzbl -0xb5(%rbp),%ebx
    0.00 :    e6ce:   mov    %r11,%r15
    0.00 :    e6d1:   test   %r12d,%r12d
    0.00 :    e6d4:   jne    f2c0 <_dl_relocate_object+0x1030>
    0.00 :    e6da:   test   %bl,%bl
    0.00 :    e6dc:   jne    f2c0 <_dl_relocate_object+0x1030>
    0.00 :    e6e2:   orb    $0x8,0x334(%r15)
    0.00 :    e6ea:   cmpq   $0x0,-0xe0(%rbp)
    0.00 :    e6f2:   jne    fed2 <_dl_relocate_object+0x1c42>
    0.00 :    e6f8:   cmpq   $0x0,0x490(%r15)
    0.00 :    e700:   jne    f360 <_dl_relocate_object+0x10d0>
    0.00 :    e706:   lea    -0x28(%rbp),%rsp
    0.00 :    e70a:   pop    %rbx
    0.00 :    e70b:   pop    %r12
    0.00 :    e70d:   pop    %r13
    0.00 :    e70f:   pop    %r14
    0.00 :    e711:   pop    %r15
    0.00 :    e713:   pop    %rbp
    0.00 :    e714:   ret
    0.00 :    e715:   nopl   (%rax)
    0.00 :    e718:   cmpq   $0x0,0x100(%r15)
    0.00 :    e720:   je     e338 <_dl_relocate_object+0xa8>
    0.00 :    e726:   test   %eax,%eax
    0.00 :    e728:   jne    103cd <_dl_relocate_object+0x213d>
    0.00 :    e72e:   mov    0xf0(%r15),%rax
    0.00 :    e735:   xor    %r10d,%r10d
    0.00 :    e738:   mov    %rax,-0xe0(%rbp)
    0.00 :    e73f:   test   %rax,%rax
    0.00 :    e742:   je     e3bb <_dl_relocate_object+0x12b>
    0.00 :    e748:   movzwl 0x2d0(%r15),%edx
    0.00 :    e750:   mov    0x2c0(%r15),%rsi
    0.00 :    e757:   lea    0x0(,%rdx,8),%rax
    0.00 :    e75f:   mov    %rsi,%rcx
    0.00 :    e762:   sub    %rdx,%rax
    0.00 :    e765:   lea    (%rsi,%rax,8),%rax
    0.00 :    e769:   cmp    %rax,%rsi
    0.00 :    e76c:   jb     fd7d <_dl_relocate_object+0x1aed>
    0.00 :    e772:   xor    %eax,%eax
    0.00 :    e774:   mov    %rax,-0xe0(%rbp)
    0.00 :    e77b:   jmp    e3bb <_dl_relocate_object+0x12b>
    0.00 :    e780:   cmp    $0x24,%rax
    0.00 :    e784:   jne    fbf0 <_dl_relocate_object+0x1960>
    0.00 :    e78a:   mov    0x70(%r13),%rax
    0.00 :    e78e:   shr    $0x20,%rcx
    0.00 :    e792:   xor    %edx,%edx
    0.00 :    e794:   mov    0x8(%rax),%rsi
    0.00 :    e798:   testb  $0x20,0x336(%r13)
    0.00 :    e7a0:   je     e7a9 <_dl_relocate_object+0x519>
    0.00 :    e7a2:   mov    0x0(%r13),%rdx
    0.00 :    e7a6:   add    %rdx,%rsi
    0.00 :    e7a9:   lea    (%rcx,%rcx,1),%rax
    0.00 :    e7ad:   mov    0x1e8(%r13),%r8
    0.00 :    e7b4:   add    %rax,%rcx
    0.00 :    e7b7:   lea    (%rsi,%rcx,8),%rdi
    0.00 :    e7bb:   mov    %rdi,-0x88(%rbp)
    0.00 :    e7c2:   test   %r8,%r8
    0.00 :    e7c5:   je     e7e5 <_dl_relocate_object+0x555>
    0.00 :    e7c7:   add    %rdx,%rax
    0.00 :    e7ca:   add    0x8(%r8),%rax
    0.00 :    e7ce:   movzwl (%rax),%eax
    0.00 :    e7d1:   and    $0x7fff,%eax
    0.00 :    e7d6:   lea    (%rax,%rax,2),%rcx
    0.00 :    e7da:   mov    0x300(%r13),%rax
    0.00 :    e7e1:   lea    (%rax,%rcx,8),%r8
    0.00 :    e7e5:   mov    -0x88(%rbp),%rsi
    0.00 :    e7ec:   mov    %rsi,-0x78(%rbp)
    0.00 :    e7f0:   movzbl 0x4(%rsi),%eax
    0.00 :    e7f4:   mov    %eax,%edi
    0.00 :    e7f6:   shr    $0x4,%dil
    0.00 :    e7fa:   je     f158 <_dl_relocate_object+0xec8>
    0.00 :    e800:   movzbl 0x5(%rsi),%ecx
    0.00 :    e804:   and    $0x3,%ecx
    0.00 :    e807:   sub    $0x1,%ecx
    0.00 :    e80a:   cmp    $0x1,%ecx
    0.00 :    e80d:   jbe    f158 <_dl_relocate_object+0xec8>
    0.00 :    e813:   cmp    0x428(%r13),%rsi
    0.00 :    e81a:   je     1006d <_dl_relocate_object+0x1ddd>
    0.00 :    e820:   mov    -0x88(%rbp),%rdi
    0.00 :    e827:   mov    0x68(%r13),%rax
    0.00 :    e82b:   movl   $0x1,0x430(%r13)
    0.00 :    e836:   add    0x8(%rax),%rdx
    0.00 :    e83a:   mov    (%rdi),%eax
    0.00 :    e83c:   mov    %rdi,0x428(%r13)
    0.00 :    e843:   lea    (%rdx,%rax,1),%rdi
    0.00 :    e847:   test   %r8,%r8
    0.00 :    e84a:   je     e858 <_dl_relocate_object+0x5c8>
    0.00 :    e84c:   mov    0x8(%r8),%eax
    0.00 :    e850:   test   %eax,%eax
    0.00 :    e852:   je     f390 <_dl_relocate_object+0x1100>
    0.00 :    e858:   mov    %r11,-0xa0(%rbp)
    0.00 :    e85f:   mov    -0xb0(%rbp),%rcx
    0.00 :    e866:   lea    -0x78(%rbp),%rdx
    0.00 :    e86a:   mov    %r13,%rsi
    0.00 :    e86d:   mov    %r10,-0x98(%rbp)
    0.00 :    e874:   mov    $0x1,%r9d
    0.00 :    e87a:   push   $0x0
    0.00 :    e87c:   push   $0x9
    0.00 :    e87e:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    e883:   mov    -0x78(%rbp),%rdx
    0.00 :    e887:   movq   %rax,%xmm0
    0.00 :    e88c:   mov    %rax,%r9
    0.00 :    e88f:   movq   %rdx,%xmm6
    0.00 :    e894:   punpcklqdq %xmm6,%xmm0
    0.00 :    e898:   movups %xmm0,0x438(%r13)
    0.00 :    e8a0:   pop    %r10
    0.00 :    e8a2:   pop    %r11
    0.00 :    e8a4:   mov    -0x98(%rbp),%r10
    0.00 :    e8ab:   mov    -0xa0(%rbp),%r11
    0.00 :    e8b2:   test   %rdx,%rdx
    0.00 :    e8b5:   jne    f3e0 <_dl_relocate_object+0x1150>
    0.00 :    e8bb:   mov    0x10(%rbx),%rax
    0.00 :    e8bf:   mov    %rax,0x8(%r12)
    0.00 :    e8c4:   lea    0x61f5(%rip),%rax        # 14ac0 <_dl_tlsdesc_undefweak>
    0.00 :    e8cb:   mov    %rax,(%r12)
    0.00 :    e8cf:   jmp    e604 <_dl_relocate_object+0x374>
    0.00 :    e8d4:   nopl   0x0(%rax)
    0.00 :    e8d8:   mov    %r12,%rdx
    0.00 :    e8db:   sub    0x418(%r13),%rdx
    0.00 :    e8e2:   lea    (%rax,%rdx,2),%rax
    0.00 :    e8e6:   mov    %rax,(%r12)
    0.00 :    e8ea:   jmp    e604 <_dl_relocate_object+0x374>
    0.00 :    e8ef:   nop
    0.00 :    e8f0:   lea    0x271b9(%rip),%rsi        # 35ab0 <_rtld_global+0xab0>
    0.00 :    e8f7:   cmp    %rsi,%r11
    0.00 :    e8fa:   je     e934 <_dl_relocate_object+0x6a4>
    0.00 :    e8fc:   cmp    %rbx,%rax
    0.00 :    e8ff:   jae    e934 <_dl_relocate_object+0x6a4>
    0.00 :    e901:   nopl   0x0(%rax)
    0.00 :    e908:   mov    (%rax),%rcx
    0.00 :    e90b:   mov    0x8(%rax),%edx
    0.00 :    e90e:   add    %r15,%rcx
    0.00 :    e911:   cmp    $0x26,%rdx
    0.00 :    e915:   je     e921 <_dl_relocate_object+0x691>
    0.00 :    e917:   cmp    $0x8,%rdx
    0.00 :    e91b:   jne    103dc <_dl_relocate_object+0x214c>
   44.33 :    e921:   mov    0x10(%rax),%rdx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/x86_64/dl-machine.h:488
    0.00 :    e925:   add    $0x18,%rax
    0.00 :    e929:   add    %r15,%rdx
    0.00 :    e92c:   mov    %rdx,(%rcx)
    0.00 :    e92f:   cmp    %rbx,%rax
    0.00 :    e932:   jb     e908 <_dl_relocate_object+0x678>
    0.00 :    e934:   mov    0x1e8(%r11),%r10
    0.00 :    e93b:   test   %r10,%r10
    0.00 :    e93e:   je     f3f0 <_dl_relocate_object+0x1160>
    0.00 :    e944:   mov    0x8(%r10),%rax
    0.00 :    e948:   mov    %rax,-0xa0(%rbp)
    0.00 :    e94f:   testb  $0x20,0x336(%r11)
    0.00 :    e957:   jne    f348 <_dl_relocate_object+0x10b8>
    0.00 :    e95d:   mov    -0x98(%rbp),%rax
    0.00 :    e964:   cmp    %rax,%rbx
    0.00 :    e967:   jae    e698 <_dl_relocate_object+0x408>
    0.00 :    e96d:   xor    %r10d,%r10d
    0.00 :    e970:   mov    %r13,-0xf0(%rbp)
    0.00 :    e977:   movq   $0x0,-0xd0(%rbp)
    0.00 :    e982:   mov    %r10,-0xc8(%rbp)
    0.00 :    e989:   mov    %r15,-0xa8(%rbp)
    0.00 :    e990:   mov    %r11,%r15
    0.00 :    e993:   nopl   0x0(%rax,%rax,1)
    0.00 :    e998:   mov    0x8(%rbx),%r14
    0.00 :    e99c:   mov    -0xa0(%rbp),%rax
    0.00 :    e9a3:   mov    -0x88(%rbp),%rsi
    0.00 :    e9aa:   mov    %r14,%rdx
    0.00 :    e9ad:   mov    %r14d,%r13d
    0.00 :    e9b0:   shr    $0x20,%rdx
    0.00 :    e9b4:   movzwl (%rax,%rdx,2),%eax
    0.00 :    e9b8:   lea    (%rdx,%rdx,2),%rdx
    0.00 :    e9bc:   lea    (%rsi,%rdx,8),%r12
    0.00 :    e9c0:   mov    -0xa8(%rbp),%rsi
    0.00 :    e9c7:   add    (%rbx),%rsi
    0.00 :    e9ca:   and    $0x7fff,%eax
    0.00 :    e9cf:   mov    %r12,-0x80(%rbp)
    0.00 :    e9d3:   lea    (%rax,%rax,2),%rdx
    0.00 :    e9d7:   mov    0x300(%r15),%rax
    0.00 :    e9de:   mov    %rsi,-0x90(%rbp)
    0.00 :    e9e5:   lea    (%rax,%rdx,8),%r10
    0.00 :    e9e9:   cmp    $0x25,%r14d
    0.00 :    e9ed:   je     f090 <_dl_relocate_object+0xe00>
    0.00 :    e9f3:   mov    %r12,-0x78(%rbp)
    0.00 :    e9f7:   cmp    $0x8,%r13
    0.00 :    e9fb:   je     f0b8 <_dl_relocate_object+0xe28>
    0.00 :    ea01:   cmp    $0x26,%r13
    0.00 :    ea05:   je     f0b8 <_dl_relocate_object+0xe28>
    0.00 :    ea0b:   test   %r13,%r13
    0.00 :    ea0e:   je     eb6e <_dl_relocate_object+0x8de>
    0.00 :    ea14:   movzbl 0x4(%r12),%eax
    0.00 :    ea1a:   mov    %eax,%esi
    0.00 :    ea1c:   shr    $0x4,%sil
    0.00 :    ea20:   je     f070 <_dl_relocate_object+0xde0>
    0.00 :    ea26:   movzbl 0x5(%r12),%edx
    0.00 :    ea2c:   and    $0x3,%edx
    0.00 :    ea2f:   sub    $0x1,%edx
    0.00 :    ea32:   cmp    $0x1,%edx
    0.00 :    ea35:   jbe    f070 <_dl_relocate_object+0xde0>
    0.00 :    ea3b:   lea    -0x5(%r13),%rax
    0.00 :    ea3f:   cmp    0x428(%r15),%r12
    0.00 :    ea46:   je     f100 <_dl_relocate_object+0xe70>
    0.00 :    ea4c:   xor    %r9d,%r9d
    0.00 :    ea4f:   cmp    $0x1f,%rax
    0.00 :    ea53:   ja     ea72 <_dl_relocate_object+0x7e2>
    0.00 :    ea55:   lea    0x197c4(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    ea5c:   movzbl -0x5(%rax,%r13,1),%r9d
    0.00 :    ea62:   lea    0x19797(%rip),%rax        # 28200 <CSWTCH.89>
    0.00 :    ea69:   or     -0x5(%rax,%r13,1),%r9b
    0.00 :    ea6e:   movsbl %r9b,%r9d
    0.00 :    ea72:   mov    0x68(%r15),%rax
    0.00 :    ea76:   mov    (%r12),%edi
    0.00 :    ea7a:   mov    %r9d,0x430(%r15)
    0.00 :    ea81:   mov    %r12,0x428(%r15)
    0.00 :    ea88:   mov    0x8(%rax),%rdx
    0.00 :    ea8c:   xor    %eax,%eax
    0.00 :    ea8e:   testb  $0x20,0x336(%r15)
    0.00 :    ea96:   je     ea9b <_dl_relocate_object+0x80b>
    0.00 :    ea98:   mov    (%r15),%rax
    0.00 :    ea9b:   add    %rdx,%rdi
    0.00 :    ea9e:   xor    %r8d,%r8d
    0.00 :    eaa1:   add    %rax,%rdi
    0.00 :    eaa4:   test   %r10,%r10
    0.00 :    eaa7:   je     eab3 <_dl_relocate_object+0x823>
    0.00 :    eaa9:   mov    0x8(%r10),%esi
    0.00 :    eaad:   test   %esi,%esi
    0.00 :    eaaf:   cmovne %r10,%r8
    0.00 :    eab3:   mov    %r10,-0xc0(%rbp)
    0.00 :    eaba:   mov    -0xb0(%rbp),%rcx
    0.00 :    eac1:   lea    -0x78(%rbp),%rdx
    0.00 :    eac5:   mov    %r15,%rsi
    0.00 :    eac8:   push   $0x0
    0.00 :    eaca:   push   $0x9
    0.00 :    eacc:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    ead1:   mov    -0x78(%rbp),%rdx
    0.00 :    ead5:   mov    -0xc0(%rbp),%r10
    0.00 :    eadc:   movq   %rax,%xmm0
    0.00 :    eae1:   mov    %rax,%r11
    0.00 :    eae4:   movq   %rdx,%xmm1
    0.00 :    eae9:   punpcklqdq %xmm1,%xmm0
    0.00 :    eaed:   movups %xmm0,0x438(%r15)
    0.00 :    eaf5:   pop    %rax
    0.00 :    eaf6:   pop    %rcx
    0.00 :    eaf7:   xor    %r9d,%r9d
    0.00 :    eafa:   test   %rdx,%rdx
    0.00 :    eafd:   je     eb38 <_dl_relocate_object+0x8a8>
    0.00 :    eaff:   movzwl 0x6(%rdx),%ecx
    0.00 :    eb03:   movzbl 0x4(%rdx),%eax
    0.00 :    eb07:   cmp    $0xfff1,%cx
    0.00 :    eb0b:   je     f084 <_dl_relocate_object+0xdf4>
    0.00 :    eb11:   mov    (%r11),%r9
    0.00 :    eb14:   and    $0xf,%eax
    0.00 :    eb17:   add    0x8(%rdx),%r9
    0.00 :    eb1b:   cmp    $0xa,%al
    0.00 :    eb1d:   sete   %dl
    0.00 :    eb20:   test   %cx,%cx
    0.00 :    eb23:   setne  %al
    0.00 :    eb26:   test   %al,%dl
    0.00 :    eb28:   je     eb38 <_dl_relocate_object+0x8a8>
    0.00 :    eb2a:   mov    -0xb4(%rbp),%eax
    0.00 :    eb30:   test   %eax,%eax
    0.00 :    eb32:   je     f1e8 <_dl_relocate_object+0xf58>
    0.00 :    eb38:   cmp    $0x25,%r13
    0.00 :    eb3c:   ja     f2b0 <_dl_relocate_object+0x1020>
    0.00 :    eb42:   lea    0x19577(%rip),%rdi        # 280c0 <primes.0+0x80>
    0.00 :    eb49:   movslq (%rdi,%r13,4),%rax
    0.00 :    eb4d:   add    %rdi,%rax
    0.00 :    eb50:   notrack jmp *%rax
    0.00 :    eb53:   add    0x10(%rbx),%r9
   55.67 :    eb57:   mov    -0x90(%rbp),%rax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/x86_64/dl-machine.h:407
    0.00 :    eb5e:   mov    %r9,(%rax)
    0.00 :    eb61:   mov    0x8(%rbx),%eax
    0.00 :    eb64:   cmp    $0x7,%rax
    0.00 :    eb68:   je     edc8 <_dl_relocate_object+0xb38>
    0.00 :    eb6e:   mov    -0x98(%rbp),%rax
    0.00 :    eb75:   add    $0x18,%rbx
    0.00 :    eb79:   cmp    %rax,%rbx
    0.00 :    eb7c:   jb     e998 <_dl_relocate_object+0x708>
    0.00 :    eb82:   mov    -0xc8(%rbp),%r10
    0.00 :    eb89:   mov    %r15,%r11
    0.00 :    eb8c:   mov    -0xf0(%rbp),%r13
    0.00 :    eb93:   mov    -0xa8(%rbp),%r15
    0.00 :    eb9a:   test   %r10,%r10
    0.00 :    eb9d:   je     e698 <_dl_relocate_object+0x408>
    0.00 :    eba3:   mov    -0xd0(%rbp),%rax
    0.00 :    ebaa:   cmp    %r10,%rax
    0.00 :    ebad:   jb     e698 <_dl_relocate_object+0x408>
    0.00 :    ebb3:   mov    %r13,-0x98(%rbp)
    0.00 :    ebba:   mov    %r10,%rbx
    0.00 :    ebbd:   mov    %rax,%r13
    0.00 :    ebc0:   mov    %r11,%r12
    0.00 :    ebc3:   jmp    ebd5 <_dl_relocate_object+0x945>
    0.00 :    ebc5:   nopl   (%rax)
    0.00 :    ebc8:   add    $0x18,%rbx
    0.00 :    ebcc:   cmp    %rbx,%r13
    0.00 :    ebcf:   jb     ed35 <_dl_relocate_object+0xaa5>
    0.00 :    ebd5:   mov    0x8(%rbx),%rax
    0.00 :    ebd9:   cmp    $0x25,%eax
    0.00 :    ebdc:   jne    ebc8 <_dl_relocate_object+0x938>
    0.00 :    ebde:   mov    -0xa0(%rbp),%rdi
    0.00 :    ebe5:   shr    $0x20,%rax
    0.00 :    ebe9:   mov    (%rbx),%r14
    0.00 :    ebec:   mov    0x300(%r12),%rcx
    0.00 :    ebf4:   movzwl (%rdi,%rax,2),%esi
    0.00 :    ebf8:   mov    -0x88(%rbp),%rdi
    0.00 :    ebff:   lea    (%rax,%rax,2),%rax
    0.00 :    ec03:   add    %r15,%r14
    0.00 :    ec06:   lea    (%rdi,%rax,8),%r10
    0.00 :    ec0a:   mov    %r10,-0x78(%rbp)
    0.00 :    ec0e:   movzbl 0x4(%r10),%eax
    0.00 :    ec13:   mov    %eax,%edi
    0.00 :    ec15:   shr    $0x4,%dil
    0.00 :    ec19:   je     f0d8 <_dl_relocate_object+0xe48>
    0.00 :    ec1f:   movzbl 0x5(%r10),%edx
    0.00 :    ec24:   and    $0x3,%edx
    0.00 :    ec27:   sub    $0x1,%edx
    0.00 :    ec2a:   cmp    $0x1,%edx
    0.00 :    ec2d:   jbe    f0d8 <_dl_relocate_object+0xe48>
    0.00 :    ec33:   cmp    0x428(%r12),%r10
    0.00 :    ec3b:   je     fca2 <_dl_relocate_object+0x1a12>
    0.00 :    ec41:   mov    0x68(%r12),%rax
    0.00 :    ec46:   mov    (%r10),%edi
    0.00 :    ec49:   mov    %r10,0x428(%r12)
    0.00 :    ec51:   xor    %edx,%edx
    0.00 :    ec53:   movl   $0x0,0x430(%r12)
    0.00 :    ec5f:   mov    0x8(%rax),%r9
    0.00 :    ec63:   testb  $0x20,0x336(%r12)
    0.00 :    ec6c:   je     ec72 <_dl_relocate_object+0x9e2>
    0.00 :    ec6e:   mov    (%r12),%rdx
    0.00 :    ec72:   mov    %rsi,%rax
    0.00 :    ec75:   add    %r9,%rdi
    0.00 :    ec78:   and    $0x7fff,%eax
    0.00 :    ec7d:   add    %rdx,%rdi
    0.00 :    ec80:   lea    (%rax,%rax,2),%rax
    0.00 :    ec84:   lea    (%rcx,%rax,8),%r8
    0.00 :    ec88:   test   %r8,%r8
    0.00 :    ec8b:   je     ec99 <_dl_relocate_object+0xa09>
    0.00 :    ec8d:   mov    0x8(%r8),%r11d
    0.00 :    ec91:   test   %r11d,%r11d
    0.00 :    ec94:   jne    ec99 <_dl_relocate_object+0xa09>
    0.00 :    ec96:   xor    %r8d,%r8d
    0.00 :    ec99:   mov    %r10,-0x90(%rbp)
    0.00 :    eca0:   mov    -0xb0(%rbp),%rcx
    0.00 :    eca7:   xor    %r9d,%r9d
    0.00 :    ecaa:   mov    %r12,%rsi
    0.00 :    ecad:   push   $0x0
    0.00 :    ecaf:   lea    -0x78(%rbp),%rdx
    0.00 :    ecb3:   push   $0x9
    0.00 :    ecb5:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    ecba:   mov    -0x78(%rbp),%rdx
    0.00 :    ecbe:   mov    -0x90(%rbp),%r10
    0.00 :    ecc5:   movq   %rax,%xmm0
    0.00 :    ecca:   mov    %rax,%rcx
    0.00 :    eccd:   movq   %rdx,%xmm3
    0.00 :    ecd2:   punpcklqdq %xmm3,%xmm0
    0.00 :    ecd6:   movups %xmm0,0x438(%r12)
    0.00 :    ecdf:   pop    %r8
    0.00 :    ece1:   pop    %r9
    0.00 :    ece3:   test   %rdx,%rdx
    0.00 :    ece6:   je     ed11 <_dl_relocate_object+0xa81>
    0.00 :    ece8:   movzwl 0x6(%rdx),%esi
    0.00 :    ecec:   movzbl 0x4(%rdx),%eax
    0.00 :    ecf0:   cmp    $0xfff1,%si
    0.00 :    ecf4:   je     f0ec <_dl_relocate_object+0xe5c>
    0.00 :    ecfa:   mov    (%rcx),%r11
    0.00 :    ecfd:   and    $0xf,%eax
    0.00 :    ed00:   mov    0x8(%rdx),%r9
    0.00 :    ed04:   cmp    $0xa,%al
    0.00 :    ed06:   jne    ed11 <_dl_relocate_object+0xa81>
    0.00 :    ed08:   test   %si,%si
    0.00 :    ed0b:   jne    fbff <_dl_relocate_object+0x196f>
    0.00 :    ed11:   mov    -0xb4(%rbp),%esi
    0.00 :    ed17:   mov    0x10(%rbx),%rax
    0.00 :    ed1b:   add    (%r12),%rax
    0.00 :    ed1f:   test   %esi,%esi
    0.00 :    ed21:   jne    ed25 <_dl_relocate_object+0xa95>
    0.00 :    ed23:   call   *%rax
    0.00 :    ed25:   add    $0x18,%rbx
    0.00 :    ed29:   mov    %rax,(%r14)
    0.00 :    ed2c:   cmp    %rbx,%r13
    0.00 :    ed2f:   jae    ebd5 <_dl_relocate_object+0x945>
    0.00 :    ed35:   mov    -0x98(%rbp),%r13
    0.00 :    ed3c:   mov    %r12,%r11
    0.00 :    ed3f:   jmp    e698 <_dl_relocate_object+0x408>
    0.00 :    ed44:   mov    -0x78(%rbp),%rax
    0.00 :    ed48:   mov    0x10(%rax),%r9
    0.00 :    ed4c:   mov    -0x90(%rbp),%rax
    0.00 :    ed53:   add    0x10(%rbx),%r9
    0.00 :    ed57:   mov    %r9d,(%rax)
    0.00 :    ed5a:   mov    $0xffffffff,%eax
    0.00 :    ed5f:   cmp    %r9,%rax
    0.00 :    ed62:   jae    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    ed68:   lea    0x1d651(%rip),%rdi        # 2c3c0 <__PRETTY_FUNCTION__.0+0x120>
    0.00 :    ed6f:   mov    0x68(%r15),%rax
    0.00 :    ed73:   mov    0x8(%rax),%rax
    0.00 :    ed77:   testb  $0x20,0x336(%r15)
    0.00 :    ed7f:   je     ed84 <_dl_relocate_object+0xaf4>
    0.00 :    ed81:   add    (%r15),%rax
    0.00 :    ed84:   mov    (%r12),%edx
    0.00 :    ed88:   mov    %r10,-0xc0(%rbp)
    0.00 :    ed8f:   add    %rax,%rdx
    0.00 :    ed92:   mov    0x25c9f(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    ed99:   mov    (%rax),%rsi
    0.00 :    ed9c:   lea    0x1afa6(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    eda3:   test   %rsi,%rsi
    0.00 :    eda6:   cmove  %rax,%rsi
    0.00 :    edaa:   xor    %eax,%eax
    0.00 :    edac:   call   d480 <_dl_error_printf>
    0.00 :    edb1:   mov    0x8(%rbx),%eax
    0.00 :    edb4:   mov    -0xc0(%rbp),%r10
    0.00 :    edbb:   cmp    $0x7,%rax
    0.00 :    edbf:   jne    eb6e <_dl_relocate_object+0x8de>
    0.00 :    edc5:   nopl   (%rax)
    0.00 :    edc8:   mov    0x2600a(%rip),%edi        # 34dd8 <_rtld_global_ro+0x378>
    0.00 :    edce:   test   %edi,%edi
    0.00 :    edd0:   je     eb6e <_dl_relocate_object+0x8de>
    0.00 :    edd6:   mov    -0x80(%rbp),%rdx
    0.00 :    edda:   movzbl 0x4(%rdx),%eax
    0.00 :    edde:   shr    $0x4,%al
    0.00 :    ede1:   je     f0f8 <_dl_relocate_object+0xe68>
    0.00 :    ede7:   movzbl 0x5(%rdx),%eax
    0.00 :    edeb:   and    $0x3,%eax
    0.00 :    edee:   sub    $0x1,%eax
    0.00 :    edf1:   cmp    $0x1,%eax
    0.00 :    edf4:   jbe    f0f8 <_dl_relocate_object+0xe68>
    0.00 :    edfa:   cmp    0x428(%r15),%rdx
    0.00 :    ee01:   je     fcd3 <_dl_relocate_object+0x1a43>
    0.00 :    ee07:   mov    0x68(%r15),%rax
    0.00 :    ee0b:   mov    (%rdx),%edi
    0.00 :    ee0d:   mov    %rdx,0x428(%r15)
    0.00 :    ee14:   movl   $0x1,0x430(%r15)
    0.00 :    ee1f:   mov    0x8(%rax),%rdx
    0.00 :    ee23:   xor    %eax,%eax
    0.00 :    ee25:   testb  $0x20,0x336(%r15)
    0.00 :    ee2d:   je     ee32 <_dl_relocate_object+0xba2>
    0.00 :    ee2f:   mov    (%r15),%rax
    0.00 :    ee32:   add    %rdx,%rdi
    0.00 :    ee35:   add    %rax,%rdi
    0.00 :    ee38:   test   %r10,%r10
    0.00 :    ee3b:   je     ee48 <_dl_relocate_object+0xbb8>
    0.00 :    ee3d:   mov    0x8(%r10),%esi
    0.00 :    ee41:   test   %esi,%esi
    0.00 :    ee43:   jne    ee48 <_dl_relocate_object+0xbb8>
    0.00 :    ee45:   xor    %r10d,%r10d
    0.00 :    ee48:   push   $0x0
    0.00 :    ee4a:   mov    -0xb0(%rbp),%rcx
    0.00 :    ee51:   lea    -0x80(%rbp),%rdx
    0.00 :    ee55:   mov    %r10,%r8
    0.00 :    ee58:   push   $0x9
    0.00 :    ee5a:   mov    $0x1,%r9d
    0.00 :    ee60:   mov    %r15,%rsi
    0.00 :    ee63:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    ee68:   mov    -0x80(%rbp),%rdx
    0.00 :    ee6c:   movq   %rax,%xmm0
    0.00 :    ee71:   mov    %rax,%r8
    0.00 :    ee74:   movq   %rdx,%xmm4
    0.00 :    ee79:   punpcklqdq %xmm4,%xmm0
    0.00 :    ee7d:   movups %xmm0,0x438(%r15)
    0.00 :    ee85:   pop    %rax
    0.00 :    ee86:   pop    %rcx
    0.00 :    ee87:   test   %rdx,%rdx
    0.00 :    ee8a:   je     eb6e <_dl_relocate_object+0x8de>
    0.00 :    ee90:   mov    -0x90(%rbp),%rcx
    0.00 :    ee97:   xor    %esi,%esi
    0.00 :    ee99:   mov    %r15,%rdi
    0.00 :    ee9c:   call   177f0 <_dl_audit_symbind>
    0.00 :    eea1:   jmp    eb6e <_dl_relocate_object+0x8de>
    0.00 :    eea6:   test   %r11,%r11
    0.00 :    eea9:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    eeaf:   mov    0x478(%r11),%rax
    0.00 :    eeb6:   mov    -0x90(%rbp),%rdi
    0.00 :    eebd:   mov    %rax,(%rdi)
    0.00 :    eec0:   mov    0x8(%rbx),%eax
    0.00 :    eec3:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    eec8:   mov    -0x78(%rbp),%rax
    0.00 :    eecc:   test   %rax,%rax
    0.00 :    eecf:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    eed5:   mov    0x470(%r11),%rdx
    0.00 :    eedc:   lea    0x1(%rdx),%rcx
    0.00 :    eee0:   cmp    $0x1,%rcx
    0.00 :    eee4:   jbe    101e7 <_dl_relocate_object+0x1f57>
    0.00 :    eeea:   mov    0x8(%rax),%rax
    0.00 :    eeee:   mov    -0x90(%rbp),%rdi
    0.00 :    eef5:   sub    %rdx,%rax
    0.00 :    eef8:   add    0x10(%rbx),%rax
    0.00 :    eefc:   mov    %rax,(%rdi)
    0.00 :    eeff:   mov    0x8(%rbx),%eax
    0.00 :    ef02:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    ef07:   mov    -0x78(%rbp),%rdx
    0.00 :    ef0b:   test   %rdx,%rdx
    0.00 :    ef0e:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    ef14:   mov    -0x90(%rbp),%rsi
    0.00 :    ef1b:   mov    0x10(%rbx),%rax
    0.00 :    ef1f:   add    0x8(%rdx),%rax
    0.00 :    ef23:   mov    %rax,(%rsi)
    0.00 :    ef26:   mov    0x8(%rbx),%eax
    0.00 :    ef29:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    ef2e:   mov    -0xb4(%rbp),%r8d
    0.00 :    ef35:   mov    0x10(%rbx),%rax
    0.00 :    ef39:   add    (%r15),%rax
    0.00 :    ef3c:   test   %r8d,%r8d
    0.00 :    ef3f:   jne    ef51 <_dl_relocate_object+0xcc1>
    0.00 :    ef41:   mov    %r10,-0xc0(%rbp)
    0.00 :    ef48:   call   *%rax
    0.00 :    ef4a:   mov    -0xc0(%rbp),%r10
    0.00 :    ef51:   mov    -0x90(%rbp),%rsi
    0.00 :    ef58:   mov    %rax,(%rsi)
    0.00 :    ef5b:   jmp    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    ef60:   mov    -0x78(%rbp),%rdx
    0.00 :    ef64:   test   %rdx,%rdx
    0.00 :    ef67:   je     fafc <_dl_relocate_object+0x186c>
    0.00 :    ef6d:   mov    0x470(%r11),%rcx
    0.00 :    ef74:   cmp    $0xffffffffffffffff,%rcx
    0.00 :    ef78:   je     ff70 <_dl_relocate_object+0x1ce0>
    0.00 :    ef7e:   test   %rcx,%rcx
    0.00 :    ef81:   je     1021b <_dl_relocate_object+0x1f8b>
    0.00 :    ef87:   mov    0x10(%rbx),%rax
    0.00 :    ef8b:   mov    -0x90(%rbp),%rsi
    0.00 :    ef92:   add    0x8(%rdx),%rax
    0.00 :    ef96:   sub    %rcx,%rax
    0.00 :    ef99:   mov    %rax,0x8(%rsi)
    0.00 :    ef9d:   lea    0x5b0c(%rip),%rax        # 14ab0 <_dl_tlsdesc_return>
    0.00 :    efa4:   mov    %rax,(%rsi)
    0.00 :    efa7:   jmp    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    efac:   mov    -0x78(%rbp),%rdx
    0.00 :    efb0:   mov    -0x90(%rbp),%rsi
    0.00 :    efb7:   mov    0x10(%rbx),%rax
    0.00 :    efbb:   add    0x10(%rdx),%rax
    0.00 :    efbf:   mov    %rax,(%rsi)
    0.00 :    efc2:   mov    0x8(%rbx),%eax
    0.00 :    efc5:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    efca:   mov    -0x78(%rbp),%r13
    0.00 :    efce:   test   %r13,%r13
    0.00 :    efd1:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    efd7:   mov    0x10(%r12),%rdx
    0.00 :    efdc:   mov    0x10(%r13),%rax
    0.00 :    efe0:   mov    %r9,%rsi
    0.00 :    efe3:   mov    %r10,-0xc0(%rbp)
    0.00 :    efea:   mov    -0x90(%rbp),%rdi
    0.00 :    eff1:   cmp    %rax,%rdx
    0.00 :    eff4:   cmova  %rax,%rdx
    0.00 :    eff8:   call   22660 <memcpy>
    0.00 :    effd:   mov    0x10(%r13),%rdx
    0.00 :    f001:   mov    0x10(%r12),%rax
    0.00 :    f006:   mov    -0xc0(%rbp),%r10
    0.00 :    f00d:   cmp    %rdx,%rax
    0.00 :    f010:   jb     f02b <_dl_relocate_object+0xd9b>
    0.00 :    f012:   cmp    %rax,%rdx
    0.00 :    f015:   jae    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    f01b:   mov    0x25a82(%rip),%r9d        # 34aa4 <_rtld_global_ro+0x44>
    0.00 :    f022:   test   %r9d,%r9d
    0.00 :    f025:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    f02b:   lea    0x1d40e(%rip),%rdi        # 2c440 <__PRETTY_FUNCTION__.0+0x1a0>
    0.00 :    f032:   jmp    ed6f <_dl_relocate_object+0xadf>
    0.00 :    f037:   nopw   0x0(%rax,%rax,1)
    0.00 :    f040:   mov    0x10(%rbx),%rax
    0.00 :    f044:   mov    -0x90(%rbp),%rdi
    0.00 :    f04b:   sub    %rdi,%rax
    0.00 :    f04e:   add    %r9,%rax
    0.00 :    f051:   movslq %eax,%rdx
    0.00 :    f054:   mov    %eax,(%rdi)
    0.00 :    f056:   cmp    %rdx,%rax
    0.00 :    f059:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    f05f:   lea    0x1d39a(%rip),%rdi        # 2c400 <__PRETTY_FUNCTION__.0+0x160>
    0.00 :    f066:   jmp    ed6f <_dl_relocate_object+0xadf>
    0.00 :    f06b:   nopl   0x0(%rax,%rax,1)
    0.00 :    f070:   mov    %r12,%rdx
    0.00 :    f073:   mov    %r15,%r11
    0.00 :    f076:   movzwl 0x6(%rdx),%ecx
    0.00 :    f07a:   cmp    $0xfff1,%cx
    0.00 :    f07e:   jne    eb11 <_dl_relocate_object+0x881>
    0.00 :    f084:   xor    %r9d,%r9d
    0.00 :    f087:   jmp    eb14 <_dl_relocate_object+0x884>
    0.00 :    f08c:   nopl   0x0(%rax)
    0.00 :    f090:   mov    -0xc8(%rbp),%rax
    0.00 :    f097:   mov    %rbx,-0xd0(%rbp)
    0.00 :    f09e:   test   %rax,%rax
    0.00 :    f0a1:   cmove  %rbx,%rax
    0.00 :    f0a5:   mov    %rax,-0xc8(%rbp)
    0.00 :    f0ac:   jmp    eb6e <_dl_relocate_object+0x8de>
    0.00 :    f0b1:   nopl   0x0(%rax)
    0.00 :    f0b8:   mov    -0x90(%rbp),%rdi
    0.00 :    f0bf:   mov    0x10(%rbx),%rax
    0.00 :    f0c3:   add    (%r15),%rax
    0.00 :    f0c6:   mov    %rax,(%rdi)
    0.00 :    f0c9:   mov    0x8(%rbx),%eax
    0.00 :    f0cc:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    f0d1:   nopl   0x0(%rax)
    0.00 :    f0d8:   mov    %r10,%rdx
    0.00 :    f0db:   mov    %r12,%rcx
    0.00 :    f0de:   movzwl 0x6(%rdx),%esi
    0.00 :    f0e2:   cmp    $0xfff1,%si
    0.00 :    f0e6:   jne    ecfa <_dl_relocate_object+0xa6a>
    0.00 :    f0ec:   xor    %r11d,%r11d
    0.00 :    f0ef:   jmp    ecfd <_dl_relocate_object+0xa6d>
    0.00 :    f0f4:   nopl   0x0(%rax)
    0.00 :    f0f8:   mov    %r15,%r8
    0.00 :    f0fb:   jmp    ee90 <_dl_relocate_object+0xc00>
    0.00 :    f100:   mov    0x430(%r15),%edx
    0.00 :    f107:   cmp    $0x1f,%rax
    0.00 :    f10b:   ja     f380 <_dl_relocate_object+0x10f0>
    0.00 :    f111:   lea    0x19108(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    f118:   lea    0x190e1(%rip),%rcx        # 28200 <CSWTCH.89>
    0.00 :    f11f:   movzbl -0x5(%rax,%r13,1),%eax
    0.00 :    f125:   or     -0x5(%rcx,%r13,1),%al
    0.00 :    f12a:   movsbl %al,%eax
    0.00 :    f12d:   cmp    %edx,%eax
    0.00 :    f12f:   jne    ea55 <_dl_relocate_object+0x7c5>
    0.00 :    f135:   mov    0x440(%r15),%rdx
    0.00 :    f13c:   addq   $0x1,0x2695c(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    f144:   mov    0x438(%r15),%r11
    0.00 :    f14b:   mov    %rdx,-0x78(%rbp)
    0.00 :    f14f:   jmp    eaf7 <_dl_relocate_object+0x867>
    0.00 :    f154:   nopl   0x0(%rax)
    0.00 :    f158:   mov    -0x88(%rbp),%rdx
    0.00 :    f15f:   mov    %r13,%r9
    0.00 :    f162:   movzwl 0x6(%rdx),%ecx
    0.00 :    f166:   cmp    $0xfff1,%cx
    0.00 :    f16a:   je     ffab <_dl_relocate_object+0x1d1b>
    0.00 :    f170:   mov    (%r9),%rdi
    0.00 :    f173:   mov    %rdi,-0xa0(%rbp)
    0.00 :    f17a:   and    $0xf,%eax
    0.00 :    f17d:   mov    0x8(%rdx),%rdi
    0.00 :    f181:   cmp    $0xa,%al
    0.00 :    f183:   sete   %dl
    0.00 :    f186:   test   %cx,%cx
    0.00 :    f189:   mov    %rdi,-0x98(%rbp)
    0.00 :    f190:   setne  %al
    0.00 :    f193:   test   %al,%dl
    0.00 :    f195:   je     f1a7 <_dl_relocate_object+0xf17>
    0.00 :    f197:   mov    -0xb4(%rbp),%r8d
    0.00 :    f19e:   test   %r8d,%r8d
    0.00 :    f1a1:   je     1009a <_dl_relocate_object+0x1e0a>
    0.00 :    f1a7:   mov    0x470(%r9),%rax
    0.00 :    f1ae:   cmp    $0xffffffffffffffff,%rax
    0.00 :    f1b2:   je     1036b <_dl_relocate_object+0x20db>
    0.00 :    f1b8:   test   %rax,%rax
    0.00 :    f1bb:   je     ff1c <_dl_relocate_object+0x1c8c>
    0.00 :    f1c1:   mov    -0x78(%rbp),%rcx
    0.00 :    f1c5:   mov    0x10(%rbx),%rdx
    0.00 :    f1c9:   add    0x8(%rcx),%rdx
    0.00 :    f1cd:   sub    %rax,%rdx
    0.00 :    f1d0:   lea    0x58d9(%rip),%rax        # 14ab0 <_dl_tlsdesc_return>
    0.00 :    f1d7:   mov    %rdx,0x8(%r12)
    0.00 :    f1dc:   mov    %rax,(%r12)
    0.00 :    f1e0:   jmp    e604 <_dl_relocate_object+0x374>
    0.00 :    f1e5:   nopl   (%rax)
    0.00 :    f1e8:   cmp    %r11,%r15
    0.00 :    f1eb:   je     f27a <_dl_relocate_object+0xfea>
    0.00 :    f1f1:   movzbl 0x334(%r11),%eax
    0.00 :    f1f9:   test   $0x8,%al
    0.00 :    f1fb:   jne    f27a <_dl_relocate_object+0xfea>
    0.00 :    f1fd:   mov    0x68(%r15),%rdx
    0.00 :    f201:   mov    0x8(%rdx),%rdx
    0.00 :    f205:   testb  $0x20,0x336(%r15)
    0.00 :    f20d:   je     f212 <_dl_relocate_object+0xf82>
    0.00 :    f20f:   add    (%r15),%rdx
    0.00 :    f212:   mov    (%r12),%ecx
    0.00 :    f216:   lea    (%rdx,%rcx,1),%r8
    0.00 :    f21a:   mov    0x25817(%rip),%rcx        # 34a38 <_dl_argv>
    0.00 :    f221:   mov    0x8(%r15),%rdx
    0.00 :    f225:   mov    (%rcx),%rsi
    0.00 :    f228:   test   $0x3,%al
    0.00 :    f22a:   je     1046f <_dl_relocate_object+0x21df>
    0.00 :    f230:   test   %rsi,%rsi
    0.00 :    f233:   lea    0x1ab0f(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    f23a:   mov    0x8(%r11),%rcx
    0.00 :    f23e:   lea    0x1d2cb(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :    f245:   cmove  %rax,%rsi
    0.00 :    f249:   xor    %eax,%eax
    0.00 :    f24b:   mov    %r9,-0x100(%rbp)
    0.00 :    f252:   mov    %r10,-0xf8(%rbp)
    0.00 :    f259:   mov    %r11,-0xc0(%rbp)
    0.00 :    f260:   call   d480 <_dl_error_printf>
    0.00 :    f265:   mov    -0x100(%rbp),%r9
    0.00 :    f26c:   mov    -0xf8(%rbp),%r10
    0.00 :    f273:   mov    -0xc0(%rbp),%r11
    0.00 :    f27a:   mov    %r10,-0xf8(%rbp)
    0.00 :    f281:   mov    %r11,-0xc0(%rbp)
    0.00 :    f288:   call   *%r9
    0.00 :    f28b:   mov    -0xf8(%rbp),%r10
    0.00 :    f292:   mov    -0xc0(%rbp),%r11
    0.00 :    f299:   mov    %rax,%r9
    0.00 :    f29c:   cmp    $0x25,%r13
    0.00 :    f2a0:   jbe    eb42 <_dl_relocate_object+0x8b2>
    0.00 :    f2a6:   cs nopw 0x0(%rax,%rax,1)
    0.00 :    f2b0:   xor    %edx,%edx
    0.00 :    f2b2:   mov    %r14d,%esi
    0.00 :    f2b5:   mov    %r15,%rdi
    0.00 :    f2b8:   call   e1b0 <_dl_reloc_bad_type>
    0.00 :    f2bd:   nopl   (%rax)
    0.00 :    f2c0:   mov    0x50(%r15),%rax
    0.00 :    f2c4:   test   %rax,%rax
    0.00 :    f2c7:   je     e6e2 <_dl_relocate_object+0x452>
    0.00 :    f2cd:   mov    0xe0(%r15),%rdx
    0.00 :    f2d4:   xor    %ecx,%ecx
    0.00 :    f2d6:   mov    0x8(%rax),%rax
    0.00 :    f2da:   mov    $0x20,%edi
    0.00 :    f2df:   cmpq   $0x7,0x8(%rdx)
    0.00 :    f2e4:   sete   %cl
    0.00 :    f2e7:   xor    %edx,%edx
    0.00 :    f2e9:   lea    0x10(,%rcx,8),%rcx
    0.00 :    f2f1:   div    %rcx
    0.00 :    f2f4:   mov    %rax,%rsi
    0.00 :    f2f7:   call   *0x256eb(%rip)        # 349e8 <__rtld_calloc>
    0.00 :    f2fd:   mov    %rax,0x358(%r15)
    0.00 :    f304:   test   %rax,%rax
    0.00 :    f307:   jne    e6e2 <_dl_relocate_object+0x452>
    0.00 :    f30d:   mov    0x25724(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    f314:   mov    0x8(%r15),%rdx
    0.00 :    f318:   mov    (%rax),%rsi
    0.00 :    f31b:   test   %rsi,%rsi
    0.00 :    f31e:   je     10494 <_dl_relocate_object+0x2204>
    0.00 :    f324:   lea    0x1d275(%rip),%rdi        # 2c5a0 <__PRETTY_FUNCTION__.0+0x300>
    0.00 :    f32b:   xor    %eax,%eax
    0.00 :    f32d:   call   d530 <_dl_fatal_printf>
    0.00 :    f332:   nopw   0x0(%rax,%rax,1)
    0.00 :    f338:   xor    %esi,%esi
    0.00 :    f33a:   xor    %eax,%eax
    0.00 :    f33c:   jmp    e4d8 <_dl_relocate_object+0x248>
    0.00 :    f341:   nopl   0x0(%rax)
    0.00 :    f348:   mov    (%r11),%rdi
    0.00 :    f34b:   add    %rdi,%rax
    0.00 :    f34e:   mov    %rax,-0xa0(%rbp)
    0.00 :    f355:   jmp    e95d <_dl_relocate_object+0x6cd>
    0.00 :    f35a:   nopw   0x0(%rax,%rax,1)
    0.00 :    f360:   mov    %r15,%rdi
    0.00 :    f363:   call   e140 <_dl_protect_relro>
    0.00 :    f368:   lea    -0x28(%rbp),%rsp
    0.00 :    f36c:   pop    %rbx
    0.00 :    f36d:   pop    %r12
    0.00 :    f36f:   pop    %r13
    0.00 :    f371:   pop    %r14
    0.00 :    f373:   pop    %r15
    0.00 :    f375:   pop    %rbp
    0.00 :    f376:   ret
    0.00 :    f377:   nopw   0x0(%rax,%rax,1)
    0.00 :    f380:   xor    %r9d,%r9d
    0.00 :    f383:   test   %edx,%edx
    0.00 :    f385:   jne    ea72 <_dl_relocate_object+0x7e2>
    0.00 :    f38b:   jmp    f135 <_dl_relocate_object+0xea5>
    0.00 :    f390:   xor    %r8d,%r8d
    0.00 :    f393:   jmp    e858 <_dl_relocate_object+0x5c8>
    0.00 :    f398:   add    (%r15),%rdx
    0.00 :    f39b:   mov    %rdx,0x410(%r15)
    0.00 :    f3a2:   lea    0x18(%rax),%rdx
    0.00 :    f3a6:   mov    %rdx,0x418(%r15)
    0.00 :    f3ad:   jmp    e38f <_dl_relocate_object+0xff>
    0.00 :    f3b2:   testb  $0x2,0x2579b(%rip)        # 34b54 <_rtld_global_ro+0xf4>
    0.00 :    f3b9:   lea    0x3460(%rip),%rdx        # 12820 <_dl_runtime_resolve_xsave>
    0.00 :    f3c0:   lea    0x3529(%rip),%rcx        # 128f0 <_dl_runtime_resolve_xsavec>
    0.00 :    f3c7:   cmovne %rcx,%rdx
    0.00 :    f3cb:   mov    %rdx,0x10(%rax)
    0.00 :    f3cf:   jmp    e3b5 <_dl_relocate_object+0x125>
    0.00 :    f3d4:   add    %rsi,%rdi
    0.00 :    f3d7:   mov    %rdi,-0x68(%rbp)
    0.00 :    f3db:   jmp    e547 <_dl_relocate_object+0x2b7>
    0.00 :    f3e0:   movzbl 0x4(%rdx),%eax
    0.00 :    f3e4:   jmp    f162 <_dl_relocate_object+0xed2>
    0.00 :    f3e9:   nopl   0x0(%rax)
    0.00 :    f3f0:   mov    -0x98(%rbp),%rax
    0.00 :    f3f7:   movq   $0x0,-0xc0(%rbp)
    0.00 :    f402:   cmp    %rax,%rbx
    0.00 :    f405:   jae    e698 <_dl_relocate_object+0x408>
    0.00 :    f40b:   mov    %r10,-0xa8(%rbp)
    0.00 :    f412:   mov    %r13,-0xc8(%rbp)
    0.00 :    f419:   mov    %r15,-0x90(%rbp)
    0.00 :    f420:   mov    %r11,%r15
    0.00 :    f423:   nopl   0x0(%rax,%rax,1)
    0.00 :    f428:   mov    0x8(%rbx),%r14
    0.00 :    f42c:   mov    -0x88(%rbp),%rdi
    0.00 :    f433:   mov    -0x90(%rbp),%r10
    0.00 :    f43a:   add    (%rbx),%r10
    0.00 :    f43d:   mov    %r14,%rax
    0.00 :    f440:   mov    %r14d,%r13d
    0.00 :    f443:   shr    $0x20,%rax
    0.00 :    f447:   lea    (%rax,%rax,2),%rax
    0.00 :    f44b:   lea    (%rdi,%rax,8),%r12
    0.00 :    f44f:   mov    %r12,-0x80(%rbp)
    0.00 :    f453:   cmp    $0x25,%r14d
    0.00 :    f457:   je     fa50 <_dl_relocate_object+0x17c0>
    0.00 :    f45d:   mov    %r12,-0x78(%rbp)
    0.00 :    f461:   cmp    $0x8,%r13
    0.00 :    f465:   je     fa78 <_dl_relocate_object+0x17e8>
    0.00 :    f46b:   cmp    $0x26,%r13
    0.00 :    f46f:   je     fa78 <_dl_relocate_object+0x17e8>
    0.00 :    f475:   test   %r13,%r13
    0.00 :    f478:   je     f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f47e:   movzbl 0x4(%r12),%eax
    0.00 :    f484:   mov    %eax,%edi
    0.00 :    f486:   shr    $0x4,%dil
    0.00 :    f48a:   je     fa30 <_dl_relocate_object+0x17a0>
    0.00 :    f490:   movzbl 0x5(%r12),%edx
    0.00 :    f496:   and    $0x3,%edx
    0.00 :    f499:   sub    $0x1,%edx
    0.00 :    f49c:   cmp    $0x1,%edx
    0.00 :    f49f:   jbe    fa30 <_dl_relocate_object+0x17a0>
    0.00 :    f4a5:   lea    -0x5(%r13),%rax
    0.00 :    f4a9:   cmp    0x428(%r15),%r12
    0.00 :    f4b0:   je     faa8 <_dl_relocate_object+0x1818>
    0.00 :    f4b6:   xor    %r9d,%r9d
    0.00 :    f4b9:   cmp    $0x1f,%rax
    0.00 :    f4bd:   ja     f4dc <_dl_relocate_object+0x124c>
    0.00 :    f4bf:   lea    0x18d5a(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    f4c6:   movzbl -0x5(%rax,%r13,1),%r9d
    0.00 :    f4cc:   lea    0x18d2d(%rip),%rax        # 28200 <CSWTCH.89>
    0.00 :    f4d3:   or     -0x5(%rax,%r13,1),%r9b
    0.00 :    f4d8:   movsbl %r9b,%r9d
    0.00 :    f4dc:   mov    0x68(%r15),%rax
    0.00 :    f4e0:   mov    (%r12),%edi
    0.00 :    f4e4:   mov    %r9d,0x430(%r15)
    0.00 :    f4eb:   mov    %r12,0x428(%r15)
    0.00 :    f4f2:   mov    0x8(%rax),%rcx
    0.00 :    f4f6:   xor    %eax,%eax
    0.00 :    f4f8:   testb  $0x20,0x336(%r15)
    0.00 :    f500:   je     f505 <_dl_relocate_object+0x1275>
    0.00 :    f502:   mov    (%r15),%rax
    0.00 :    f505:   mov    %r10,-0xa0(%rbp)
    0.00 :    f50c:   add    %rcx,%rdi
    0.00 :    f50f:   xor    %r8d,%r8d
    0.00 :    f512:   mov    %r15,%rsi
    0.00 :    f515:   push   $0x0
    0.00 :    f517:   mov    -0xb0(%rbp),%rcx
    0.00 :    f51e:   lea    -0x78(%rbp),%rdx
    0.00 :    f522:   add    %rax,%rdi
    0.00 :    f525:   push   $0x9
    0.00 :    f527:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    f52c:   mov    -0x78(%rbp),%rdx
    0.00 :    f530:   mov    -0xa0(%rbp),%r10
    0.00 :    f537:   movq   %rax,%xmm0
    0.00 :    f53c:   mov    %rax,%r11
    0.00 :    f53f:   movq   %rdx,%xmm2
    0.00 :    f544:   punpcklqdq %xmm2,%xmm0
    0.00 :    f548:   movups %xmm0,0x438(%r15)
    0.00 :    f550:   pop    %rax
    0.00 :    f551:   pop    %rcx
    0.00 :    f552:   xor    %r9d,%r9d
    0.00 :    f555:   test   %rdx,%rdx
    0.00 :    f558:   je     f593 <_dl_relocate_object+0x1303>
    0.00 :    f55a:   movzwl 0x6(%rdx),%ecx
    0.00 :    f55e:   movzbl 0x4(%rdx),%eax
    0.00 :    f562:   cmp    $0xfff1,%cx
    0.00 :    f566:   je     fa44 <_dl_relocate_object+0x17b4>
    0.00 :    f56c:   mov    (%r11),%r9
    0.00 :    f56f:   and    $0xf,%eax
    0.00 :    f572:   add    0x8(%rdx),%r9
    0.00 :    f576:   cmp    $0xa,%al
    0.00 :    f578:   sete   %dl
    0.00 :    f57b:   test   %cx,%cx
    0.00 :    f57e:   setne  %al
    0.00 :    f581:   test   %al,%dl
    0.00 :    f583:   je     f593 <_dl_relocate_object+0x1303>
    0.00 :    f585:   mov    -0xb4(%rbp),%eax
    0.00 :    f58b:   test   %eax,%eax
    0.00 :    f58d:   je     fb1d <_dl_relocate_object+0x188d>
    0.00 :    f593:   cmp    $0x25,%r13
    0.00 :    f597:   ja     fbe0 <_dl_relocate_object+0x1950>
    0.00 :    f59d:   lea    0x18bb4(%rip),%rsi        # 28158 <primes.0+0x118>
    0.00 :    f5a4:   movslq (%rsi,%r13,4),%rax
    0.00 :    f5a8:   add    %rsi,%rax
    0.00 :    f5ab:   notrack jmp *%rax
    0.00 :    f5ae:   add    0x10(%rbx),%r9
    0.00 :    f5b2:   mov    %r9,(%r10)
    0.00 :    f5b5:   mov    0x8(%rbx),%eax
    0.00 :    f5b8:   cmp    $0x7,%rax
    0.00 :    f5bc:   je     f7f0 <_dl_relocate_object+0x1560>
    0.00 :    f5c2:   mov    -0x98(%rbp),%rax
    0.00 :    f5c9:   add    $0x18,%rbx
    0.00 :    f5cd:   cmp    %rax,%rbx
    0.00 :    f5d0:   jb     f428 <_dl_relocate_object+0x1198>
    0.00 :    f5d6:   mov    -0xa8(%rbp),%r10
    0.00 :    f5dd:   mov    %r15,%r11
    0.00 :    f5e0:   mov    -0xc8(%rbp),%r13
    0.00 :    f5e7:   mov    -0x90(%rbp),%r15
    0.00 :    f5ee:   test   %r10,%r10
    0.00 :    f5f1:   je     e698 <_dl_relocate_object+0x408>
    0.00 :    f5f7:   mov    -0xc0(%rbp),%rax
    0.00 :    f5fe:   cmp    %r10,%rax
    0.00 :    f601:   jb     e698 <_dl_relocate_object+0x408>
    0.00 :    f607:   mov    %r13,-0x98(%rbp)
    0.00 :    f60e:   mov    %r10,%rbx
    0.00 :    f611:   mov    %rax,%r13
    0.00 :    f614:   mov    %r11,%r12
    0.00 :    f617:   jmp    f62d <_dl_relocate_object+0x139d>
    0.00 :    f619:   nopl   0x0(%rax)
    0.00 :    f620:   add    $0x18,%rbx
    0.00 :    f624:   cmp    %rbx,%r13
    0.00 :    f627:   jb     ed35 <_dl_relocate_object+0xaa5>
    0.00 :    f62d:   mov    0x8(%rbx),%rax
    0.00 :    f631:   cmp    $0x25,%eax
    0.00 :    f634:   jne    f620 <_dl_relocate_object+0x1390>
    0.00 :    f636:   mov    -0x88(%rbp),%rsi
    0.00 :    f63d:   shr    $0x20,%rax
    0.00 :    f641:   mov    (%rbx),%r14
    0.00 :    f644:   lea    (%rax,%rax,2),%rax
    0.00 :    f648:   lea    (%rsi,%rax,8),%r10
    0.00 :    f64c:   add    %r15,%r14
    0.00 :    f64f:   mov    %r10,-0x78(%rbp)
    0.00 :    f653:   movzbl 0x4(%r10),%eax
    0.00 :    f658:   mov    %eax,%esi
    0.00 :    f65a:   shr    $0x4,%sil
    0.00 :    f65e:   je     fa90 <_dl_relocate_object+0x1800>
    0.00 :    f664:   movzbl 0x5(%r10),%edx
    0.00 :    f669:   and    $0x3,%edx
    0.00 :    f66c:   sub    $0x1,%edx
    0.00 :    f66f:   cmp    $0x1,%edx
    0.00 :    f672:   jbe    fa90 <_dl_relocate_object+0x1800>
    0.00 :    f678:   cmp    0x428(%r12),%r10
    0.00 :    f680:   je     10188 <_dl_relocate_object+0x1ef8>
    0.00 :    f686:   mov    0x68(%r12),%rax
    0.00 :    f68b:   mov    (%r10),%edi
    0.00 :    f68e:   mov    %r10,0x428(%r12)
    0.00 :    f696:   movl   $0x0,0x430(%r12)
    0.00 :    f6a2:   mov    0x8(%rax),%rcx
    0.00 :    f6a6:   xor    %eax,%eax
    0.00 :    f6a8:   testb  $0x20,0x336(%r12)
    0.00 :    f6b1:   je     f6b7 <_dl_relocate_object+0x1427>
    0.00 :    f6b3:   mov    (%r12),%rax
    0.00 :    f6b7:   mov    %r10,-0x90(%rbp)
    0.00 :    f6be:   add    %rcx,%rdi
    0.00 :    f6c1:   xor    %r8d,%r8d
    0.00 :    f6c4:   xor    %r9d,%r9d
    0.00 :    f6c7:   push   $0x0
    0.00 :    f6c9:   mov    -0xb0(%rbp),%rcx
    0.00 :    f6d0:   lea    -0x78(%rbp),%rdx
    0.00 :    f6d4:   add    %rax,%rdi
    0.00 :    f6d7:   push   $0x9
    0.00 :    f6d9:   mov    %r12,%rsi
    0.00 :    f6dc:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    f6e1:   mov    -0x78(%rbp),%rdx
    0.00 :    f6e5:   mov    -0x90(%rbp),%r10
    0.00 :    f6ec:   movq   %rax,%xmm0
    0.00 :    f6f1:   mov    %rax,%rcx
    0.00 :    f6f4:   movq   %rdx,%xmm7
    0.00 :    f6f9:   punpcklqdq %xmm7,%xmm0
    0.00 :    f6fd:   movups %xmm0,0x438(%r12)
    0.00 :    f706:   pop    %rdi
    0.00 :    f707:   pop    %r8
    0.00 :    f709:   test   %rdx,%rdx
    0.00 :    f70c:   je     f737 <_dl_relocate_object+0x14a7>
    0.00 :    f70e:   movzbl 0x4(%rdx),%eax
    0.00 :    f712:   movzwl 0x6(%rdx),%esi
    0.00 :    f716:   cmp    $0xfff1,%si
    0.00 :    f71a:   je     ffbb <_dl_relocate_object+0x1d2b>
    0.00 :    f720:   mov    (%rcx),%r9
    0.00 :    f723:   and    $0xf,%eax
    0.00 :    f726:   mov    0x8(%rdx),%r11
    0.00 :    f72a:   cmp    $0xa,%al
    0.00 :    f72c:   jne    f737 <_dl_relocate_object+0x14a7>
    0.00 :    f72e:   test   %si,%si
    0.00 :    f731:   jne    ffc3 <_dl_relocate_object+0x1d33>
    0.00 :    f737:   mov    -0xb4(%rbp),%edx
    0.00 :    f73d:   mov    0x10(%rbx),%rax
    0.00 :    f741:   add    (%r12),%rax
    0.00 :    f745:   test   %edx,%edx
    0.00 :    f747:   jne    f74b <_dl_relocate_object+0x14bb>
    0.00 :    f749:   call   *%rax
    0.00 :    f74b:   mov    %rax,(%r14)
    0.00 :    f74e:   jmp    f620 <_dl_relocate_object+0x1390>
    0.00 :    f753:   mov    -0x78(%rbp),%rax
    0.00 :    f757:   mov    0x10(%rax),%r9
    0.00 :    f75b:   add    0x10(%rbx),%r9
    0.00 :    f75f:   mov    $0xffffffff,%eax
    0.00 :    f764:   mov    %r9d,(%r10)
    0.00 :    f767:   cmp    %r9,%rax
    0.00 :    f76a:   jae    f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f770:   lea    0x1cc49(%rip),%rdi        # 2c3c0 <__PRETTY_FUNCTION__.0+0x120>
    0.00 :    f777:   mov    0x68(%r15),%rax
    0.00 :    f77b:   mov    0x8(%rax),%rax
    0.00 :    f77f:   testb  $0x20,0x336(%r15)
    0.00 :    f787:   je     f78c <_dl_relocate_object+0x14fc>
    0.00 :    f789:   add    (%r15),%rax
    0.00 :    f78c:   mov    (%r12),%edx
    0.00 :    f790:   mov    %r10,-0xa0(%rbp)
    0.00 :    f797:   add    %rax,%rdx
    0.00 :    f79a:   mov    0x25297(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    f7a1:   mov    (%rax),%rsi
    0.00 :    f7a4:   lea    0x1a59e(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    f7ab:   test   %rsi,%rsi
    0.00 :    f7ae:   cmove  %rax,%rsi
    0.00 :    f7b2:   xor    %eax,%eax
    0.00 :    f7b4:   call   d480 <_dl_error_printf>
    0.00 :    f7b9:   mov    0x8(%rbx),%eax
    0.00 :    f7bc:   mov    -0xa0(%rbp),%r10
    0.00 :    f7c3:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    f7c8:   test   %r11,%r11
    0.00 :    f7cb:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f7d1:   mov    0x478(%r11),%rax
    0.00 :    f7d8:   mov    %rax,(%r10)
    0.00 :    f7db:   mov    0x8(%rbx),%eax
    0.00 :    f7de:   cmp    $0x7,%rax
    0.00 :    f7e2:   jne    f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f7e8:   nopl   0x0(%rax,%rax,1)
    0.00 :    f7f0:   mov    0x255e1(%rip),%r12d        # 34dd8 <_rtld_global_ro+0x378>
    0.00 :    f7f7:   test   %r12d,%r12d
    0.00 :    f7fa:   je     f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f800:   mov    -0x80(%rbp),%rdx
    0.00 :    f804:   movzbl 0x4(%rdx),%eax
    0.00 :    f808:   shr    $0x4,%al
    0.00 :    f80b:   je     faa0 <_dl_relocate_object+0x1810>
    0.00 :    f811:   movzbl 0x5(%rdx),%eax
    0.00 :    f815:   and    $0x3,%eax
    0.00 :    f818:   sub    $0x1,%eax
    0.00 :    f81b:   cmp    $0x1,%eax
    0.00 :    f81e:   jbe    faa0 <_dl_relocate_object+0x1810>
    0.00 :    f824:   cmp    0x428(%r15),%rdx
    0.00 :    f82b:   je     101ba <_dl_relocate_object+0x1f2a>
    0.00 :    f831:   mov    0x68(%r15),%rax
    0.00 :    f835:   mov    (%rdx),%edi
    0.00 :    f837:   mov    %rdx,0x428(%r15)
    0.00 :    f83e:   movl   $0x1,0x430(%r15)
    0.00 :    f849:   mov    0x8(%rax),%rcx
    0.00 :    f84d:   xor    %eax,%eax
    0.00 :    f84f:   testb  $0x20,0x336(%r15)
    0.00 :    f857:   je     f85c <_dl_relocate_object+0x15cc>
    0.00 :    f859:   mov    (%r15),%rax
    0.00 :    f85c:   mov    %r10,-0xa0(%rbp)
    0.00 :    f863:   add    %rcx,%rdi
    0.00 :    f866:   xor    %r8d,%r8d
    0.00 :    f869:   mov    %r15,%rsi
    0.00 :    f86c:   push   $0x0
    0.00 :    f86e:   mov    -0xb0(%rbp),%rcx
    0.00 :    f875:   lea    -0x80(%rbp),%rdx
    0.00 :    f879:   add    %rax,%rdi
    0.00 :    f87c:   push   $0x9
    0.00 :    f87e:   mov    $0x1,%r9d
    0.00 :    f884:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    f889:   mov    -0x80(%rbp),%rdx
    0.00 :    f88d:   movq   %rax,%xmm0
    0.00 :    f892:   mov    %rax,%r8
    0.00 :    f895:   movq   %rdx,%xmm7
    0.00 :    f89a:   punpcklqdq %xmm7,%xmm0
    0.00 :    f89e:   movups %xmm0,0x438(%r15)
    0.00 :    f8a6:   pop    %r10
    0.00 :    f8a8:   pop    %r11
    0.00 :    f8aa:   mov    -0xa0(%rbp),%r10
    0.00 :    f8b1:   test   %rdx,%rdx
    0.00 :    f8b4:   je     f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f8ba:   mov    %r10,%rcx
    0.00 :    f8bd:   xor    %esi,%esi
    0.00 :    f8bf:   mov    %r15,%rdi
    0.00 :    f8c2:   call   177f0 <_dl_audit_symbind>
    0.00 :    f8c7:   jmp    f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f8cc:   mov    -0xb4(%rbp),%r13d
    0.00 :    f8d3:   mov    0x10(%rbx),%rax
    0.00 :    f8d7:   add    (%r15),%rax
    0.00 :    f8da:   test   %r13d,%r13d
    0.00 :    f8dd:   jne    f8ef <_dl_relocate_object+0x165f>
    0.00 :    f8df:   mov    %r10,-0xa0(%rbp)
    0.00 :    f8e6:   call   *%rax
    0.00 :    f8e8:   mov    -0xa0(%rbp),%r10
    0.00 :    f8ef:   mov    %rax,(%r10)
    0.00 :    f8f2:   jmp    f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f8f7:   mov    -0x78(%rbp),%rcx
    0.00 :    f8fb:   test   %rcx,%rcx
    0.00 :    f8fe:   je     feb8 <_dl_relocate_object+0x1c28>
    0.00 :    f904:   mov    0x470(%r11),%rdx
    0.00 :    f90b:   cmp    $0xffffffffffffffff,%rdx
    0.00 :    f90f:   je     102b5 <_dl_relocate_object+0x2025>
    0.00 :    f915:   test   %rdx,%rdx
    0.00 :    f918:   je     1031d <_dl_relocate_object+0x208d>
    0.00 :    f91e:   mov    0x10(%rbx),%rax
    0.00 :    f922:   add    0x8(%rcx),%rax
    0.00 :    f926:   sub    %rdx,%rax
    0.00 :    f929:   mov    %rax,0x8(%r10)
    0.00 :    f92d:   lea    0x517c(%rip),%rax        # 14ab0 <_dl_tlsdesc_return>
    0.00 :    f934:   jmp    f8ef <_dl_relocate_object+0x165f>
    0.00 :    f936:   mov    -0x78(%rbp),%rdx
    0.00 :    f93a:   mov    0x10(%rbx),%rax
    0.00 :    f93e:   add    0x10(%rdx),%rax
    0.00 :    f942:   mov    %rax,(%r10)
    0.00 :    f945:   mov    0x8(%rbx),%eax
    0.00 :    f948:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    f94d:   mov    -0x78(%rbp),%r13
    0.00 :    f951:   test   %r13,%r13
    0.00 :    f954:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f95a:   mov    0x10(%r12),%rax
    0.00 :    f95f:   mov    0x10(%r13),%rdx
    0.00 :    f963:   mov    %r10,%rdi
    0.00 :    f966:   mov    %r9,%rsi
    0.00 :    f969:   cmp    %rdx,%rax
    0.00 :    f96c:   cmovbe %rax,%rdx
    0.00 :    f970:   call   22660 <memcpy>
    0.00 :    f975:   mov    0x10(%r13),%rdx
    0.00 :    f979:   mov    %rax,%r10
    0.00 :    f97c:   mov    0x10(%r12),%rax
    0.00 :    f981:   cmp    %rdx,%rax
    0.00 :    f984:   jb     f99f <_dl_relocate_object+0x170f>
    0.00 :    f986:   cmp    %rax,%rdx
    0.00 :    f989:   jae    f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f98f:   mov    0x2510e(%rip),%r14d        # 34aa4 <_rtld_global_ro+0x44>
    0.00 :    f996:   test   %r14d,%r14d
    0.00 :    f999:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f99f:   lea    0x1ca9a(%rip),%rdi        # 2c440 <__PRETTY_FUNCTION__.0+0x1a0>
    0.00 :    f9a6:   jmp    f777 <_dl_relocate_object+0x14e7>
    0.00 :    f9ab:   nopl   0x0(%rax,%rax,1)
    0.00 :    f9b0:   mov    -0x78(%rbp),%rax
    0.00 :    f9b4:   test   %rax,%rax
    0.00 :    f9b7:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f9bd:   mov    0x470(%r11),%rdx
    0.00 :    f9c4:   lea    0x1(%rdx),%rcx
    0.00 :    f9c8:   cmp    $0x1,%rcx
    0.00 :    f9cc:   jbe    102e9 <_dl_relocate_object+0x2059>
    0.00 :    f9d2:   mov    0x8(%rax),%rax
    0.00 :    f9d6:   sub    %rdx,%rax
    0.00 :    f9d9:   add    0x10(%rbx),%rax
    0.00 :    f9dd:   mov    %rax,(%r10)
    0.00 :    f9e0:   mov    0x8(%rbx),%eax
    0.00 :    f9e3:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    f9e8:   mov    -0x78(%rbp),%rdx
    0.00 :    f9ec:   test   %rdx,%rdx
    0.00 :    f9ef:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f9f5:   mov    0x10(%rbx),%rax
    0.00 :    f9f9:   add    0x8(%rdx),%rax
    0.00 :    f9fd:   mov    %rax,(%r10)
    0.00 :    fa00:   mov    0x8(%rbx),%eax
    0.00 :    fa03:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    fa08:   mov    0x10(%rbx),%rax
    0.00 :    fa0c:   sub    %r10,%rax
    0.00 :    fa0f:   add    %r9,%rax
    0.00 :    fa12:   movslq %eax,%rdx
    0.00 :    fa15:   mov    %eax,(%r10)
    0.00 :    fa18:   cmp    %rdx,%rax
    0.00 :    fa1b:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    fa21:   lea    0x1c9d8(%rip),%rdi        # 2c400 <__PRETTY_FUNCTION__.0+0x160>
    0.00 :    fa28:   jmp    f777 <_dl_relocate_object+0x14e7>
    0.00 :    fa2d:   nopl   (%rax)
    0.00 :    fa30:   mov    %r12,%rdx
    0.00 :    fa33:   mov    %r15,%r11
    0.00 :    fa36:   movzwl 0x6(%rdx),%ecx
    0.00 :    fa3a:   cmp    $0xfff1,%cx
    0.00 :    fa3e:   jne    f56c <_dl_relocate_object+0x12dc>
    0.00 :    fa44:   xor    %r9d,%r9d
    0.00 :    fa47:   jmp    f56f <_dl_relocate_object+0x12df>
    0.00 :    fa4c:   nopl   0x0(%rax)
    0.00 :    fa50:   mov    -0xa8(%rbp),%rax
    0.00 :    fa57:   mov    %rbx,-0xc0(%rbp)
    0.00 :    fa5e:   test   %rax,%rax
    0.00 :    fa61:   cmove  %rbx,%rax
    0.00 :    fa65:   mov    %rax,-0xa8(%rbp)
    0.00 :    fa6c:   jmp    f5c2 <_dl_relocate_object+0x1332>
    0.00 :    fa71:   nopl   0x0(%rax)
    0.00 :    fa78:   mov    0x10(%rbx),%rax
    0.00 :    fa7c:   add    (%r15),%rax
    0.00 :    fa7f:   mov    %rax,(%r10)
    0.00 :    fa82:   mov    0x8(%rbx),%eax
    0.00 :    fa85:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    fa8a:   nopw   0x0(%rax,%rax,1)
    0.00 :    fa90:   mov    %r12,%rcx
    0.00 :    fa93:   mov    %r10,%rdx
    0.00 :    fa96:   jmp    f712 <_dl_relocate_object+0x1482>
    0.00 :    fa9b:   nopl   0x0(%rax,%rax,1)
    0.00 :    faa0:   mov    %r15,%r8
    0.00 :    faa3:   jmp    f8ba <_dl_relocate_object+0x162a>
    0.00 :    faa8:   mov    0x430(%r15),%edx
    0.00 :    faaf:   cmp    $0x1f,%rax
    0.00 :    fab3:   ja     fd00 <_dl_relocate_object+0x1a70>
    0.00 :    fab9:   lea    0x18760(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    fac0:   lea    0x18739(%rip),%rcx        # 28200 <CSWTCH.89>
    0.00 :    fac7:   movzbl -0x5(%rax,%r13,1),%eax
    0.00 :    facd:   or     -0x5(%rcx,%r13,1),%al
    0.00 :    fad2:   movsbl %al,%eax
    0.00 :    fad5:   cmp    %edx,%eax
    0.00 :    fad7:   jne    f4bf <_dl_relocate_object+0x122f>
    0.00 :    fadd:   mov    0x440(%r15),%rdx
    0.00 :    fae4:   addq   $0x1,0x25fb4(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    faec:   mov    0x438(%r15),%r11
    0.00 :    faf3:   mov    %rdx,-0x78(%rbp)
    0.00 :    faf7:   jmp    f552 <_dl_relocate_object+0x12c2>
    0.00 :    fafc:   mov    0x10(%rbx),%rax
    0.00 :    fb00:   mov    -0x90(%rbp),%rsi
    0.00 :    fb07:   mov    %rax,0x8(%rsi)
    0.00 :    fb0b:   lea    0x4fae(%rip),%rax        # 14ac0 <_dl_tlsdesc_undefweak>
    0.00 :    fb12:   mov    %rax,(%rsi)
    0.00 :    fb15:   mov    0x8(%rbx),%eax
    0.00 :    fb18:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    fb1d:   cmp    %r11,%r15
    0.00 :    fb20:   je     fbaf <_dl_relocate_object+0x191f>
    0.00 :    fb26:   movzbl 0x334(%r11),%eax
    0.00 :    fb2e:   test   $0x8,%al
    0.00 :    fb30:   jne    fbaf <_dl_relocate_object+0x191f>
    0.00 :    fb32:   mov    0x68(%r15),%rdx
    0.00 :    fb36:   mov    0x8(%rdx),%rdx
    0.00 :    fb3a:   testb  $0x20,0x336(%r15)
    0.00 :    fb42:   je     fb47 <_dl_relocate_object+0x18b7>
    0.00 :    fb44:   add    (%r15),%rdx
    0.00 :    fb47:   mov    (%r12),%ecx
    0.00 :    fb4b:   lea    (%rdx,%rcx,1),%r8
    0.00 :    fb4f:   mov    0x24ee2(%rip),%rcx        # 34a38 <_dl_argv>
    0.00 :    fb56:   mov    0x8(%r15),%rdx
    0.00 :    fb5a:   mov    (%rcx),%rsi
    0.00 :    fb5d:   test   $0x3,%al
    0.00 :    fb5f:   je     1041f <_dl_relocate_object+0x218f>
    0.00 :    fb65:   test   %rsi,%rsi
    0.00 :    fb68:   lea    0x1a1da(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    fb6f:   mov    0x8(%r11),%rcx
    0.00 :    fb73:   lea    0x1c996(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :    fb7a:   cmove  %rax,%rsi
    0.00 :    fb7e:   xor    %eax,%eax
    0.00 :    fb80:   mov    %r9,-0xf0(%rbp)
    0.00 :    fb87:   mov    %r10,-0xd0(%rbp)
    0.00 :    fb8e:   mov    %r11,-0xa0(%rbp)
    0.00 :    fb95:   call   d480 <_dl_error_printf>
    0.00 :    fb9a:   mov    -0xf0(%rbp),%r9
    0.00 :    fba1:   mov    -0xd0(%rbp),%r10
    0.00 :    fba8:   mov    -0xa0(%rbp),%r11
    0.00 :    fbaf:   mov    %r10,-0xd0(%rbp)
    0.00 :    fbb6:   mov    %r11,-0xa0(%rbp)
    0.00 :    fbbd:   call   *%r9
    0.00 :    fbc0:   mov    -0xd0(%rbp),%r10
    0.00 :    fbc7:   mov    -0xa0(%rbp),%r11
    0.00 :    fbce:   mov    %rax,%r9
    0.00 :    fbd1:   cmp    $0x25,%r13
    0.00 :    fbd5:   jbe    f59d <_dl_relocate_object+0x130d>
    0.00 :    fbdb:   nopl   0x0(%rax,%rax,1)
    0.00 :    fbe0:   xor    %edx,%edx
    0.00 :    fbe2:   mov    %r14d,%esi
    0.00 :    fbe5:   mov    %r15,%rdi
    0.00 :    fbe8:   call   e1b0 <_dl_reloc_bad_type>
    0.00 :    fbed:   nopl   (%rax)
    0.00 :    fbf0:   mov    $0x1,%edx
    0.00 :    fbf5:   mov    %ecx,%esi
    0.00 :    fbf7:   mov    %r13,%rdi
    0.00 :    fbfa:   call   e1b0 <_dl_reloc_bad_type>
    0.00 :    fbff:   mov    -0xb4(%rbp),%edi
    0.00 :    fc05:   test   %edi,%edi
    0.00 :    fc07:   jne    1035e <_dl_relocate_object+0x20ce>
    0.00 :    fc0d:   cmp    %rcx,%r12
    0.00 :    fc10:   je     fc8f <_dl_relocate_object+0x19ff>
    0.00 :    fc12:   movzbl 0x334(%rcx),%eax
    0.00 :    fc19:   test   $0x8,%al
    0.00 :    fc1b:   jne    fc8f <_dl_relocate_object+0x19ff>
    0.00 :    fc1d:   mov    0x68(%r12),%rdx
    0.00 :    fc22:   mov    0x8(%rdx),%rdx
    0.00 :    fc26:   testb  $0x20,0x336(%r12)
    0.00 :    fc2f:   je     fc35 <_dl_relocate_object+0x19a5>
    0.00 :    fc31:   add    (%r12),%rdx
    0.00 :    fc35:   mov    (%r10),%esi
    0.00 :    fc38:   lea    (%rdx,%rsi,1),%r8
    0.00 :    fc3c:   mov    0x24df5(%rip),%rsi        # 34a38 <_dl_argv>
    0.00 :    fc43:   mov    0x8(%r12),%rdx
    0.00 :    fc48:   mov    (%rsi),%rsi
    0.00 :    fc4b:   test   $0x3,%al
    0.00 :    fc4d:   je     1041f <_dl_relocate_object+0x218f>
    0.00 :    fc53:   test   %rsi,%rsi
    0.00 :    fc56:   lea    0x1a0ec(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    fc5d:   mov    0x8(%rcx),%rcx
    0.00 :    fc61:   lea    0x1c8a8(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :    fc68:   cmove  %rax,%rsi
    0.00 :    fc6c:   xor    %eax,%eax
    0.00 :    fc6e:   mov    %r9,-0xa8(%rbp)
    0.00 :    fc75:   mov    %r11,-0x90(%rbp)
    0.00 :    fc7c:   call   d480 <_dl_error_printf>
    0.00 :    fc81:   mov    -0xa8(%rbp),%r9
    0.00 :    fc88:   mov    -0x90(%rbp),%r11
    0.00 :    fc8f:   add    %r11,%r9
    0.00 :    fc92:   call   *%r9
    0.00 :    fc95:   mov    0x10(%rbx),%rax
    0.00 :    fc99:   add    (%r12),%rax
    0.00 :    fc9d:   jmp    ed23 <_dl_relocate_object+0xa93>
    0.00 :    fca2:   mov    0x430(%r12),%eax
    0.00 :    fcaa:   test   %eax,%eax
    0.00 :    fcac:   jne    ec41 <_dl_relocate_object+0x9b1>
    0.00 :    fcb2:   mov    0x440(%r12),%rdx
    0.00 :    fcba:   addq   $0x1,0x25dde(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    fcc2:   mov    0x438(%r12),%rcx
    0.00 :    fcca:   mov    %rdx,-0x78(%rbp)
    0.00 :    fcce:   jmp    ece3 <_dl_relocate_object+0xa53>
    0.00 :    fcd3:   cmpl   $0x1,0x430(%r15)
    0.00 :    fcdb:   jne    ee07 <_dl_relocate_object+0xb77>
    0.00 :    fce1:   mov    0x440(%r15),%rdx
    0.00 :    fce8:   addq   $0x1,0x25db0(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    fcf0:   mov    0x438(%r15),%r8
    0.00 :    fcf7:   mov    %rdx,-0x80(%rbp)
    0.00 :    fcfb:   jmp    ee87 <_dl_relocate_object+0xbf7>
    0.00 :    fd00:   xor    %r9d,%r9d
    0.00 :    fd03:   test   %edx,%edx
    0.00 :    fd05:   jne    f4dc <_dl_relocate_object+0x124c>
    0.00 :    fd0b:   jmp    fadd <_dl_relocate_object+0x184d>
    0.00 :    fd10:   test   %r10d,%r10d
    0.00 :    fd13:   lea    0x1aeff(%rip),%rdx        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :    fd1a:   lea    0x1a197(%rip),%rax        # 29eb8 <_sys_errname+0xaf8>
    0.00 :    fd21:   cmovne %rax,%rdx
    0.00 :    fd25:   mov    0x8(%r15),%rsi
    0.00 :    fd29:   cmpb   $0x0,(%rsi)
    0.00 :    fd2c:   je     feff <_dl_relocate_object+0x1c6f>
    0.00 :    fd32:   lea    0x1a187(%rip),%rdi        # 29ec0 <_sys_errname+0xb00>
    0.00 :    fd39:   xor    %eax,%eax
    0.00 :    fd3b:   mov    %r10d,-0x88(%rbp)
    0.00 :    fd42:   call   d1d0 <_dl_debug_printf>
    0.00 :    fd47:   mov    -0x88(%rbp),%r10d
    0.00 :    fd4e:   jmp    e347 <_dl_relocate_object+0xb7>
    0.00 :    fd53:   movzwl 0x2d0(%r15),%edx
    0.00 :    fd5b:   mov    0x2c0(%r15),%rsi
    0.00 :    fd62:   lea    0x0(,%rdx,8),%rax
    0.00 :    fd6a:   mov    %rsi,%rcx
    0.00 :    fd6d:   sub    %rdx,%rax
    0.00 :    fd70:   lea    (%rsi,%rax,8),%rax
    0.00 :    fd74:   cmp    %rax,%rsi
    0.00 :    fd77:   jae    103bd <_dl_relocate_object+0x212d>
    0.00 :    fd7d:   xor    %eax,%eax
    0.00 :    fd7f:   mov    %bl,-0x90(%rbp)
    0.00 :    fd85:   movabs $0x2ffffffff,%r14
    0.00 :    fd8f:   mov    %r13d,-0x98(%rbp)
    0.00 :    fd96:   mov    %rax,%rbx
    0.00 :    fd99:   mov    %r15,%r13
    0.00 :    fd9c:   mov    %r12d,-0xa0(%rbp)
    0.00 :    fda3:   mov    %rcx,%r12
    0.00 :    fda6:   mov    %r10d,-0x88(%rbp)
    0.00 :    fdad:   jmp    fdcc <_dl_relocate_object+0x1b3c>
    0.00 :    fdaf:   nop
    0.00 :    fdb0:   lea    0x0(,%rdx,8),%rax
    0.00 :    fdb8:   add    $0x38,%r12
    0.00 :    fdbc:   sub    %rdx,%rax
    0.00 :    fdbf:   lea    (%rsi,%rax,8),%rax
    0.00 :    fdc3:   cmp    %rax,%r12
    0.00 :    fdc6:   jae    fe8d <_dl_relocate_object+0x1bfd>
    0.00 :    fdcc:   mov    (%r12),%rax
    0.00 :    fdd0:   and    %r14,%rax
    0.00 :    fdd3:   cmp    $0x1,%rax
    0.00 :    fdd7:   jne    fdb0 <_dl_relocate_object+0x1b20>
    0.00 :    fdd9:   mov    %rsp,%rax
    0.00 :    fddc:   cmp    %rax,%rsp
    0.00 :    fddf:   je     fdf6 <_dl_relocate_object+0x1b66>
    0.00 :    fde1:   sub    $0x1000,%rsp
    0.00 :    fde8:   orq    $0x0,0xff8(%rsp)
    0.00 :    fdf1:   cmp    %rax,%rsp
    0.00 :    fdf4:   jne    fde1 <_dl_relocate_object+0x1b51>
    0.00 :    fdf6:   sub    $0x30,%rsp
    0.00 :    fdfa:   orq    $0x0,0x28(%rsp)
    0.00 :    fe00:   mov    0x24c71(%rip),%rdx        # 34a78 <_rtld_global_ro+0x18>
    0.00 :    fe07:   mov    0x10(%r12),%rsi
    0.00 :    fe0c:   mov    %rdx,%rax
    0.00 :    fe0f:   neg    %rax
    0.00 :    fe12:   mov    %rsi,%rdi
    0.00 :    fe15:   lea    -0x1(%rsi,%rdx,1),%rsi
    0.00 :    fe1a:   add    0x28(%r12),%rsi
    0.00 :    fe1f:   and    %rax,%rdi
    0.00 :    fe22:   and    %rax,%rsi
    0.00 :    fe25:   mov    0x4(%r12),%eax
    0.00 :    fe2a:   lea    0xf(%rsp),%r9
    0.00 :    fe2f:   sub    %rdi,%rsi
    0.00 :    fe32:   add    0x0(%r13),%rdi
    0.00 :    fe36:   mov    %eax,%edx
    0.00 :    fe38:   and    $0xfffffffffffffff0,%r9
    0.00 :    fe3c:   shr    $0x2,%edx
    0.00 :    fe3f:   mov    %rsi,0x8(%r9)
    0.00 :    fe43:   mov    %r9,%r15
    0.00 :    fe46:   mov    %rdi,(%r9)
    0.00 :    fe49:   and    $0x1,%edx
    0.00 :    fe4c:   test   $0x2,%al
    0.00 :    fe4e:   je     fe53 <_dl_relocate_object+0x1bc3>
    0.00 :    fe50:   or     $0x2,%edx
    0.00 :    fe53:   mov    %edx,0x10(%r15)
    0.00 :    fe57:   test   $0x1,%al
    0.00 :    fe59:   je     fe62 <_dl_relocate_object+0x1bd2>
    0.00 :    fe5b:   or     $0x4,%edx
    0.00 :    fe5e:   mov    %edx,0x10(%r15)
    0.00 :    fe62:   or     $0x2,%edx
    0.00 :    fe65:   call   21bb0 <__GI___mprotect>
    0.00 :    fe6a:   test   %eax,%eax
    0.00 :    fe6c:   js     10413 <_dl_relocate_object+0x2183>
    0.00 :    fe72:   mov    %rbx,0x18(%r15)
    0.00 :    fe76:   mov    0x2c0(%r13),%rsi
    0.00 :    fe7d:   mov    %r15,%rbx
    0.00 :    fe80:   movzwl 0x2d0(%r13),%edx
    0.00 :    fe88:   jmp    fdb0 <_dl_relocate_object+0x1b20>
    0.00 :    fe8d:   mov    %rbx,-0xe0(%rbp)
    0.00 :    fe94:   mov    %r13,%r15
    0.00 :    fe97:   mov    -0x88(%rbp),%r10d
    0.00 :    fe9e:   movzbl -0x90(%rbp),%ebx
    0.00 :    fea5:   mov    -0x98(%rbp),%r13d
    0.00 :    feac:   mov    -0xa0(%rbp),%r12d
    0.00 :    feb3:   jmp    e35e <_dl_relocate_object+0xce>
    0.00 :    feb8:   mov    0x10(%rbx),%rax
    0.00 :    febc:   mov    %rax,0x8(%r10)
    0.00 :    fec0:   lea    0x4bf9(%rip),%rax        # 14ac0 <_dl_tlsdesc_undefweak>
    0.00 :    fec7:   mov    %rax,(%r10)
    0.00 :    feca:   mov    0x8(%rbx),%eax
    0.00 :    fecd:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    fed2:   mov    -0xe0(%rbp),%rbx
    0.00 :    fed9:   mov    0x10(%rbx),%edx
    0.00 :    fedc:   mov    0x8(%rbx),%rsi
    0.00 :    fee0:   mov    (%rbx),%rdi
    0.00 :    fee3:   call   21bb0 <__GI___mprotect>
    0.00 :    fee8:   test   %eax,%eax
    0.00 :    feea:   js     103fb <_dl_relocate_object+0x216b>
    0.00 :    fef0:   mov    0x18(%rbx),%rbx
    0.00 :    fef4:   test   %rbx,%rbx
    0.00 :    fef7:   je     e6f8 <_dl_relocate_object+0x468>
    0.00 :    fefd:   jmp    fed9 <_dl_relocate_object+0x1c49>
    0.00 :    feff:   mov    0x24b32(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    ff06:   mov    (%rax),%rsi
    0.00 :    ff09:   lea    0x19a1c(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :    ff10:   test   %rsi,%rsi
    0.00 :    ff13:   cmove  %rax,%rsi
    0.00 :    ff17:   jmp    fd32 <_dl_relocate_object+0x1aa2>
    0.00 :    ff1c:   mov    %r9,%rdi
    0.00 :    ff1f:   mov    $0x1,%esi
    0.00 :    ff24:   mov    %r11,-0xa0(%rbp)
    0.00 :    ff2b:   mov    %r10,-0x98(%rbp)
    0.00 :    ff32:   mov    %r9,-0x88(%rbp)
    0.00 :    ff39:   call   dfe0 <_dl_try_allocate_static_tls>
    0.00 :    ff3e:   mov    -0x88(%rbp),%r9
    0.00 :    ff45:   mov    -0x98(%rbp),%r10
    0.00 :    ff4c:   test   %eax,%eax
    0.00 :    ff4e:   mov    -0xa0(%rbp),%r11
    0.00 :    ff55:   jne    1036b <_dl_relocate_object+0x20db>
    0.00 :    ff5b:   mov    0x470(%r9),%rax
    0.00 :    ff62:   jmp    f1c1 <_dl_relocate_object+0xf31>
    0.00 :    ff67:   nopw   0x0(%rax,%rax,1)
    0.00 :    ff70:   mov    0x10(%rbx),%rsi
    0.00 :    ff74:   mov    %r11,%rdi
    0.00 :    ff77:   add    0x8(%rdx),%rsi
    0.00 :    ff7b:   mov    %r10,-0xc0(%rbp)
    0.00 :    ff82:   call   14780 <_dl_make_tlsdesc_dynamic>
    0.00 :    ff87:   mov    -0x90(%rbp),%rdi
    0.00 :    ff8e:   mov    -0xc0(%rbp),%r10
    0.00 :    ff95:   mov    %rax,0x8(%rdi)
    0.00 :    ff99:   lea    0x4b40(%rip),%rax        # 14ae0 <_dl_tlsdesc_dynamic>
    0.00 :    ffa0:   mov    %rax,(%rdi)
    0.00 :    ffa3:   mov    0x8(%rbx),%eax
    0.00 :    ffa6:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    ffab:   movq   $0x0,-0xa0(%rbp)
    0.00 :    ffb6:   jmp    f17a <_dl_relocate_object+0xeea>
    0.00 :    ffbb:   xor    %r9d,%r9d
    0.00 :    ffbe:   jmp    f723 <_dl_relocate_object+0x1493>
    0.00 :    ffc3:   mov    -0xb4(%rbp),%esi
    0.00 :    ffc9:   test   %esi,%esi
    0.00 :    ffcb:   jne    103b0 <_dl_relocate_object+0x2120>
    0.00 :    ffd1:   cmp    %rcx,%r12
    0.00 :    ffd4:   je     1005a <_dl_relocate_object+0x1dca>
    0.00 :    ffda:   movzbl 0x334(%rcx),%edi
    0.00 :    ffe1:   test   $0x8,%dil
    0.00 :    ffe5:   jne    1005a <_dl_relocate_object+0x1dca>
    0.00 :    ffe7:   mov    0x68(%r12),%rax
    0.00 :    ffec:   mov    0x8(%rax),%rax
    0.00 :    fff0:   testb  $0x20,0x336(%r12)
    0.00 :    fff9:   je     ffff <_dl_relocate_object+0x1d6f>
    0.00 :    fffb:   add    (%r12),%rax
    0.00 :    ffff:   mov    (%r10),%edx
    0.00 :   10002:  and    $0x3,%edi
    0.00 :   10005:  lea    (%rax,%rdx,1),%r8
    0.00 :   10009:  mov    0x24a28(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   10010:  mov    0x8(%r12),%rdx
    0.00 :   10015:  mov    (%rax),%rsi
    0.00 :   10018:  je     1043b <_dl_relocate_object+0x21ab>
    0.00 :   1001e:  test   %rsi,%rsi
    0.00 :   10021:  lea    0x19d21(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :   10028:  mov    0x8(%rcx),%rcx
    0.00 :   1002c:  lea    0x1c4dd(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :   10033:  cmove  %rax,%rsi
    0.00 :   10037:  xor    %eax,%eax
    0.00 :   10039:  mov    %r11,-0xa0(%rbp)
    0.00 :   10040:  mov    %r9,-0x90(%rbp)
    0.00 :   10047:  call   d480 <_dl_error_printf>
    0.00 :   1004c:  mov    -0xa0(%rbp),%r11
    0.00 :   10053:  mov    -0x90(%rbp),%r9
    0.00 :   1005a:  add    %r9,%r11
    0.00 :   1005d:  call   *%r11
    0.00 :   10060:  mov    0x10(%rbx),%rax
    0.00 :   10064:  add    (%r12),%rax
    0.00 :   10068:  jmp    f749 <_dl_relocate_object+0x14b9>
    0.00 :   1006d:  cmpl   $0x1,0x430(%r13)
    0.00 :   10075:  jne    e820 <_dl_relocate_object+0x590>
    0.00 :   1007b:  mov    0x440(%r13),%rdx
    0.00 :   10082:  addq   $0x1,0x25a16(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :   1008a:  mov    0x438(%r13),%r9
    0.00 :   10091:  mov    %rdx,-0x78(%rbp)
    0.00 :   10095:  jmp    e8b2 <_dl_relocate_object+0x622>
    0.00 :   1009a:  cmp    %r9,%r13
    0.00 :   1009d:  je     10135 <_dl_relocate_object+0x1ea5>
    0.00 :   100a3:  movzbl 0x334(%r9),%eax
    0.00 :   100ab:  test   $0x8,%al
    0.00 :   100ad:  jne    10135 <_dl_relocate_object+0x1ea5>
    0.00 :   100b3:  mov    0x68(%r13),%rdx
    0.00 :   100b7:  mov    0x8(%rdx),%r8
    0.00 :   100bb:  testb  $0x20,0x336(%r13)
    0.00 :   100c3:  je     100c9 <_dl_relocate_object+0x1e39>
    0.00 :   100c5:  add    0x0(%r13),%r8
    0.00 :   100c9:  mov    -0x88(%rbp),%rsi
    0.00 :   100d0:  mov    0x24961(%rip),%rcx        # 34a38 <_dl_argv>
    0.00 :   100d7:  mov    (%rsi),%edx
    0.00 :   100d9:  mov    (%rcx),%rsi
    0.00 :   100dc:  add    %rdx,%r8
    0.00 :   100df:  mov    0x8(%r13),%rdx
    0.00 :   100e3:  test   $0x3,%al
    0.00 :   100e5:  je     1041f <_dl_relocate_object+0x218f>
    0.00 :   100eb:  test   %rsi,%rsi
    0.00 :   100ee:  lea    0x19c54(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :   100f5:  mov    0x8(%r9),%rcx
    0.00 :   100f9:  lea    0x1c410(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :   10100:  cmove  %rax,%rsi
    0.00 :   10104:  xor    %eax,%eax
    0.00 :   10106:  mov    %r11,-0xc0(%rbp)
    0.00 :   1010d:  mov    %r10,-0xa8(%rbp)
    0.00 :   10114:  mov    %r9,-0x88(%rbp)
    0.00 :   1011b:  call   d480 <_dl_error_printf>
    0.00 :   10120:  mov    -0xc0(%rbp),%r11
    0.00 :   10127:  mov    -0xa8(%rbp),%r10
    0.00 :   1012e:  mov    -0x88(%rbp),%r9
    0.00 :   10135:  mov    -0x98(%rbp),%rax
    0.00 :   1013c:  mov    -0xa0(%rbp),%rsi
    0.00 :   10143:  mov    %r11,-0xc0(%rbp)
    0.00 :   1014a:  mov    %r10,-0xa8(%rbp)
    0.00 :   10151:  mov    %r9,-0x88(%rbp)
    0.00 :   10158:  add    %rsi,%rax
    0.00 :   1015b:  call   *%rax
    0.00 :   1015d:  cmpq   $0x0,-0x78(%rbp)
    0.00 :   10162:  mov    -0x88(%rbp),%r9
    0.00 :   10169:  mov    -0xa8(%rbp),%r10
    0.00 :   10170:  mov    -0xc0(%rbp),%r11
    0.00 :   10177:  je     e8bb <_dl_relocate_object+0x62b>
    0.00 :   1017d:  jmp    f1a7 <_dl_relocate_object+0xf17>
    0.00 :   10182:  nopw   0x0(%rax,%rax,1)
    0.00 :   10188:  mov    0x430(%r12),%r9d
    0.00 :   10190:  test   %r9d,%r9d
    0.00 :   10193:  jne    f686 <_dl_relocate_object+0x13f6>
    0.00 :   10199:  mov    0x440(%r12),%rdx
    0.00 :   101a1:  addq   $0x1,0x258f7(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :   101a9:  mov    0x438(%r12),%rcx
    0.00 :   101b1:  mov    %rdx,-0x78(%rbp)
    0.00 :   101b5:  jmp    f709 <_dl_relocate_object+0x1479>
    0.00 :   101ba:  cmpl   $0x1,0x430(%r15)
    0.00 :   101c2:  jne    f831 <_dl_relocate_object+0x15a1>
    0.00 :   101c8:  mov    0x440(%r15),%rdx
    0.00 :   101cf:  addq   $0x1,0x258c9(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :   101d7:  mov    0x438(%r15),%r8
    0.00 :   101de:  mov    %rdx,-0x80(%rbp)
    0.00 :   101e2:  jmp    f8b1 <_dl_relocate_object+0x1621>
    0.00 :   101e7:  mov    %r11,%rdi
    0.00 :   101ea:  mov    %r10,-0xf8(%rbp)
    0.00 :   101f1:  mov    %r11,-0xc0(%rbp)
    0.00 :   101f8:  call   e100 <_dl_allocate_static_tls>
    0.00 :   101fd:  mov    -0xc0(%rbp),%r11
    0.00 :   10204:  mov    -0x78(%rbp),%rax
    0.00 :   10208:  mov    -0xf8(%rbp),%r10
    0.00 :   1020f:  mov    0x470(%r11),%rdx
    0.00 :   10216:  jmp    eeea <_dl_relocate_object+0xc5a>
    0.00 :   1021b:  mov    %r11,%rdi
    0.00 :   1021e:  mov    $0x1,%esi
    0.00 :   10223:  mov    %r10,-0xf8(%rbp)
    0.00 :   1022a:  mov    %r11,-0xc0(%rbp)
    0.00 :   10231:  call   dfe0 <_dl_try_allocate_static_tls>
    0.00 :   10236:  mov    -0x78(%rbp),%rdx
    0.00 :   1023a:  mov    -0xc0(%rbp),%r11
    0.00 :   10241:  test   %eax,%eax
    0.00 :   10243:  mov    -0xf8(%rbp),%r10
    0.00 :   1024a:  jne    ff70 <_dl_relocate_object+0x1ce0>
    0.00 :   10250:  mov    0x470(%r11),%rcx
    0.00 :   10257:  jmp    ef87 <_dl_relocate_object+0xcf7>
    0.00 :   1025c:  lea    0x1668d(%rip),%rdx        # 268f0 <_dl_runtime_profile_avx512>
    0.00 :   10263:  testb  $0x1,0x248b0(%rip)        # 34b1a <_rtld_global_ro+0xba>
    0.00 :   1026a:  jne    10285 <_dl_relocate_object+0x1ff5>
    0.00 :   1026c:  testb  $0x10,0x2488c(%rip)        # 34aff <_rtld_global_ro+0x9f>
    0.00 :   10273:  lea    0x2396(%rip),%rdx        # 12610 <_dl_runtime_profile_sse>
    0.00 :   1027a:  lea    0x16a6f(%rip),%rcx        # 26cf0 <_dl_runtime_profile_avx>
    0.00 :   10281:  cmovne %rcx,%rdx
    0.00 :   10285:  mov    0x24a8c(%rip),%rdi        # 34d18 <_rtld_global_ro+0x2b8>
    0.00 :   1028c:  mov    %rdx,0x10(%rax)
    0.00 :   10290:  test   %rdi,%rdi
    0.00 :   10293:  je     e3b5 <_dl_relocate_object+0x125>
    0.00 :   10299:  mov    %r15,%rsi
    0.00 :   1029c:  call   ae50 <_dl_name_match_p>
    0.00 :   102a1:  test   %eax,%eax
    0.00 :   102a3:  je     e3b5 <_dl_relocate_object+0x125>
    0.00 :   102a9:  mov    %r15,0x257e0(%rip)        # 35a90 <_rtld_global+0xa90>
    0.00 :   102b0:  jmp    e3b5 <_dl_relocate_object+0x125>
    0.00 :   102b5:  mov    0x10(%rbx),%rsi
    0.00 :   102b9:  mov    %r11,%rdi
    0.00 :   102bc:  add    0x8(%rcx),%rsi
    0.00 :   102c0:  mov    %r10,-0xa0(%rbp)
    0.00 :   102c7:  call   14780 <_dl_make_tlsdesc_dynamic>
    0.00 :   102cc:  mov    -0xa0(%rbp),%r10
    0.00 :   102d3:  mov    %rax,0x8(%r10)
    0.00 :   102d7:  lea    0x4802(%rip),%rax        # 14ae0 <_dl_tlsdesc_dynamic>
    0.00 :   102de:  mov    %rax,(%r10)
    0.00 :   102e1:  mov    0x8(%rbx),%eax
    0.00 :   102e4:  jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :   102e9:  mov    %r11,%rdi
    0.00 :   102ec:  mov    %r10,-0xd0(%rbp)
    0.00 :   102f3:  mov    %r11,-0xa0(%rbp)
    0.00 :   102fa:  call   e100 <_dl_allocate_static_tls>
    0.00 :   102ff:  mov    -0xa0(%rbp),%r11
    0.00 :   10306:  mov    -0x78(%rbp),%rax
    0.00 :   1030a:  mov    -0xd0(%rbp),%r10
    0.00 :   10311:  mov    0x470(%r11),%rdx
    0.00 :   10318:  jmp    f9d2 <_dl_relocate_object+0x1742>
    0.00 :   1031d:  mov    %r11,%rdi
    0.00 :   10320:  mov    $0x1,%esi
    0.00 :   10325:  mov    %r10,-0xd0(%rbp)
    0.00 :   1032c:  mov    %r11,-0xa0(%rbp)
    0.00 :   10333:  call   dfe0 <_dl_try_allocate_static_tls>
    0.00 :   10338:  mov    -0x78(%rbp),%rcx
    0.00 :   1033c:  mov    -0xa0(%rbp),%r11
    0.00 :   10343:  test   %eax,%eax
    0.00 :   10345:  mov    -0xd0(%rbp),%r10
    0.00 :   1034c:  jne    102b5 <_dl_relocate_object+0x2025>
    0.00 :   10352:  mov    0x470(%r11),%rdx
    0.00 :   10359:  jmp    f91e <_dl_relocate_object+0x168e>
    0.00 :   1035e:  mov    0x10(%rbx),%rax
    0.00 :   10362:  add    (%r12),%rax
    0.00 :   10366:  jmp    ed25 <_dl_relocate_object+0xa95>
    0.00 :   1036b:  mov    -0x78(%rbp),%rax
    0.00 :   1036f:  mov    0x10(%rbx),%rsi
    0.00 :   10373:  mov    %r9,%rdi
    0.00 :   10376:  mov    %r11,-0x98(%rbp)
    0.00 :   1037d:  mov    %r10,-0x88(%rbp)
    0.00 :   10384:  add    0x8(%rax),%rsi
    0.00 :   10388:  call   14780 <_dl_make_tlsdesc_dynamic>
    0.00 :   1038d:  mov    -0x88(%rbp),%r10
    0.00 :   10394:  mov    -0x98(%rbp),%r11
    0.00 :   1039b:  mov    %rax,0x8(%r12)
    0.00 :   103a0:  lea    0x4739(%rip),%rax        # 14ae0 <_dl_tlsdesc_dynamic>
    0.00 :   103a7:  mov    %rax,(%r12)
    0.00 :   103ab:  jmp    e604 <_dl_relocate_object+0x374>
    0.00 :   103b0:  mov    (%r12),%rax
    0.00 :   103b4:  add    0x10(%rbx),%rax
    0.00 :   103b8:  jmp    f74b <_dl_relocate_object+0x14bb>
    0.00 :   103bd:  movq   $0x0,-0xe0(%rbp)
    0.00 :   103c8:  jmp    e35e <_dl_relocate_object+0xce>
    0.00 :   103cd:  xor    %r10d,%r10d
    0.00 :   103d0:  lea    0x1a842(%rip),%rdx        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   103d7:  jmp    fd25 <_dl_relocate_object+0x1a95>
    0.00 :   103dc:  lea    0x1ab4d(%rip),%rcx        # 2af30 <__PRETTY_FUNCTION__.1>
    0.00 :   103e3:  mov    $0x1e7,%edx
    0.00 :   103e8:  lea    0x1c159(%rip),%rsi        # 2c548 <__PRETTY_FUNCTION__.0+0x2a8>
    0.00 :   103ef:  lea    0x1c172(%rip),%rdi        # 2c568 <__PRETTY_FUNCTION__.0+0x2c8>
    0.00 :   103f6:  call   19f20 <__GI___assert_fail>
    0.00 :   103fb:  lea    0x1bf96(%rip),%rcx        # 2c398 <__PRETTY_FUNCTION__.0+0xf8>
    0.00 :   10402:  mov    0x8(%r15),%rsi
    0.00 :   10406:  mov    0x25e74(%rip),%edi        # 36280 <rtld_errno>
    0.00 :   1040c:  xor    %edx,%edx
    0.00 :   1040e:  call   1070 <_dl_signal_error@plt>
    0.00 :   10413:  mov    %r13,%r15
    0.00 :   10416:  lea    0x1bf4b(%rip),%rcx        # 2c368 <__PRETTY_FUNCTION__.0+0xc8>
    0.00 :   1041d:  jmp    10402 <_dl_relocate_object+0x2172>
    0.00 :   1041f:  mov    %rdx,%rdi
    0.00 :   10422:  test   %rsi,%rsi
    0.00 :   10425:  je     1045d <_dl_relocate_object+0x21cd>
    0.00 :   10427:  mov    %rdi,%rcx
    0.00 :   1042a:  mov    %r8,%rdx
    0.00 :   1042d:  lea    0x1c05c(%rip),%rdi        # 2c490 <__PRETTY_FUNCTION__.0+0x1f0>
    0.00 :   10434:  xor    %eax,%eax
    0.00 :   10436:  call   d530 <_dl_fatal_printf>
    0.00 :   1043b:  mov    %rsi,%rdi
    0.00 :   1043e:  mov    %rdx,%r9
    0.00 :   10441:  test   %rsi,%rsi
    0.00 :   10444:  je     10466 <_dl_relocate_object+0x21d6>
    0.00 :   10446:  mov    %rdi,%rsi
    0.00 :   10449:  mov    %r9,%rcx
    0.00 :   1044c:  mov    %r8,%rdx
    0.00 :   1044f:  xor    %eax,%eax
    0.00 :   10451:  lea    0x1c038(%rip),%rdi        # 2c490 <__PRETTY_FUNCTION__.0+0x1f0>
    0.00 :   10458:  call   d530 <_dl_fatal_printf>
    0.00 :   1045d:  lea    0x198e5(%rip),%rsi        # 29d49 <_sys_errname+0x989>
    0.00 :   10464:  jmp    10427 <_dl_relocate_object+0x2197>
    0.00 :   10466:  lea    0x198dc(%rip),%rdi        # 29d49 <_sys_errname+0x989>
    0.00 :   1046d:  jmp    10446 <_dl_relocate_object+0x21b6>
    0.00 :   1046f:  mov    %rdx,%rax
    0.00 :   10472:  test   %rsi,%rsi
    0.00 :   10475:  je     1048b <_dl_relocate_object+0x21fb>
    0.00 :   10477:  mov    %rax,%rcx
    0.00 :   1047a:  mov    %r8,%rdx
    0.00 :   1047d:  lea    0x1c00c(%rip),%rdi        # 2c490 <__PRETTY_FUNCTION__.0+0x1f0>
    0.00 :   10484:  xor    %eax,%eax
    0.00 :   10486:  call   d530 <_dl_fatal_printf>
    0.00 :   1048b:  lea    0x198b7(%rip),%rsi        # 29d49 <_sys_errname+0x989>
    0.00 :   10492:  jmp    10477 <_dl_relocate_object+0x21e7>
    0.00 :   10494:  lea    0x198ae(%rip),%rsi        # 29d49 <_sys_errname+0x989>
    0.00 :   1049b:  jmp    f324 <_dl_relocate_object+0x1094>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   43.86 [nf_tables][1b810]
   36.66 [nf_tables][1bb5b]
   19.48 [nf_tables][1ba13]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (6 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001b810 <nft_meta_get_eval>:
         : 6     nft_meta_get_eval():
   43.86 :   1b810:  call   1b815 <nft_meta_get_eval+0x5> // [nf_tables][1b810]
    0.00 :   1b815:  push   %rbp
    0.00 :   1b816:  push   %rbx
    0.00 :   1b817:  movzbl 0xa(%rdi),%ebp
    0.00 :   1b81b:  mov    %rsi,%rbx
    0.00 :   1b81e:  movzbl 0x8(%rdi),%edi
    0.00 :   1b822:  mov    (%rdx),%r8
    0.00 :   1b825:  lea    (%rsi,%rbp,4),%rcx
    0.00 :   1b829:  cmp    $0x13,%dil
    0.00 :   1b82d:  je     1ba3f <nft_meta_get_eval+0x22f>
    0.00 :   1b833:  ja     1b8f9 <nft_meta_get_eval+0xe9>
    0.00 :   1b839:  cmp    $0xb,%dil
    0.00 :   1b83d:  ja     1b8c4 <nft_meta_get_eval+0xb4>
    0.00 :   1b843:  cmp    $0x9,%dil
    0.00 :   1b847:  ja     1ba2a <nft_meta_get_eval+0x21a>
    0.00 :   1b84d:  cmp    $0x2,%dil
    0.00 :   1b851:  je     1ba18 <nft_meta_get_eval+0x208>
    0.00 :   1b857:  jbe    1bb09 <nft_meta_get_eval+0x2f9>
    0.00 :   1b85d:  cmp    $0x3,%dil
    0.00 :   1b861:  jne    1b877 <nft_meta_get_eval+0x67>
    0.00 :   1b863:  mov    0xa8(%r8),%eax
    0.00 :   1b86a:  movslq %ebp,%rbp
    0.00 :   1b86d:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1b870:  pop    %rbx
    0.00 :   1b871:  pop    %rbp
    0.00 :   1b872:  jmp    1b877 <nft_meta_get_eval+0x67>
    0.00 :   1b877:  cmp    $0x8,%dil
    0.00 :   1b87b:  je     1ba87 <nft_meta_get_eval+0x277>
    0.00 :   1b881:  cmp    $0x9,%dil
    0.00 :   1b885:  je     1bac3 <nft_meta_get_eval+0x2b3>
    0.00 :   1b88b:  cmp    $0x6,%dil
    0.00 :   1b88f:  je     1bb5b <nft_meta_get_eval+0x34b>
    0.00 :   1b895:  cmp    $0x7,%dil
    0.00 :   1b899:  jne    1bb37 <nft_meta_get_eval+0x327>
    0.00 :   1b89f:  mov    0x8(%rdx),%rax
    0.00 :   1b8a3:  mov    0x10(%rax),%rax
    0.00 :   1b8a7:  test   %rax,%rax
    0.00 :   1b8aa:  mov    $0x0,%rsi
    0.00 :   1b8b1:  pop    %rbx
    0.00 :   1b8b2:  mov    $0x10,%edx
    0.00 :   1b8b7:  cmovne %rax,%rsi
    0.00 :   1b8bb:  mov    %rcx,%rdi
    0.00 :   1b8be:  pop    %rbp
    0.00 :   1b8bf:  jmp    1b8c4 <nft_meta_get_eval+0xb4>
    0.00 :   1b8c4:  cmp    $0xf,%dil
    0.00 :   1b8c8:  je     1b9ff <nft_meta_get_eval+0x1ef>
    0.00 :   1b8ce:  jbe    1b92c <nft_meta_get_eval+0x11c>
    0.00 :   1b8d0:  cmp    $0x10,%dil
    0.00 :   1b8d4:  jne    1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1b8da:  testb  $0x1,0x10(%rdx)
    0.00 :   1b8de:  je     1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b8e4:  movzbl 0x11(%rdx),%eax
    0.00 :   1b8e8:  movslq %ebp,%rbp
    0.00 :   1b8eb:  movl   $0x0,(%rsi,%rbp,4)
    0.00 :   1b8f2:  mov    %al,(%rcx)
    0.00 :   1b8f4:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b8f9:  cmp    $0x19,%dil
    0.00 :   1b8fd:  je     1ba5f <nft_meta_get_eval+0x24f>
    0.00 :   1b903:  jbe    1b94e <nft_meta_get_eval+0x13e>
    0.00 :   1b905:  cmp    $0x21,%dil
    0.00 :   1b909:  je     1b9bd <nft_meta_get_eval+0x1ad>
    0.00 :   1b90f:  jbe    1bad5 <nft_meta_get_eval+0x2c5>
    0.00 :   1b915:  cmp    $0x22,%dil
    0.00 :   1b919:  jne    1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1b91f:  pop    %rbx
    0.00 :   1b920:  mov    %rdx,%rsi
    0.00 :   1b923:  mov    %rcx,%rdi
    0.00 :   1b926:  pop    %rbp
    0.00 :   1b927:  jmp    1b7b0 <nft_meta_get_eval_sdifname>
    0.00 :   1b92c:  cmp    $0xd,%dil
    0.00 :   1b930:  je     1b9d4 <nft_meta_get_eval+0x1c4>
    0.00 :   1b936:  cmp    $0xe,%dil
    0.00 :   1b93a:  jne    1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1b93c:  mov    0xa4(%r8),%eax
    0.00 :   1b943:  movslq %ebp,%rbp
    0.00 :   1b946:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1b949:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b94e:  cmp    $0x17,%dil
    0.00 :   1b952:  je     1b9ea <nft_meta_get_eval+0x1da>
    0.00 :   1b958:  cmp    $0x18,%dil
    0.00 :   1b95c:  jne    1b96e <nft_meta_get_eval+0x15e>
    0.00 :   1b95e:  call   1b963 <nft_meta_get_eval+0x153>
    0.00 :   1b963:  movslq %ebp,%rbp
    0.00 :   1b966:  mov    %eax,(%rbx,%rbp,4)
    0.00 :   1b969:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b96e:  cmp    $0x14,%dil
    0.00 :   1b972:  jne    1b986 <nft_meta_get_eval+0x176>
    0.00 :   1b974:  mov    %gs:0x0(%rip),%eax        # 1b97b <nft_meta_get_eval+0x16b>
    0.00 :   1b97b:  movslq %ebp,%rbp
    0.00 :   1b97e:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1b981:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b986:  cmp    $0x15,%dil
    0.00 :   1b98a:  je     1baad <nft_meta_get_eval+0x29d>
    0.00 :   1b990:  mov    0x8(%rdx),%rax
    0.00 :   1b994:  mov    0x10(%rax),%rax
    0.00 :   1b998:  test   %rax,%rax
    0.00 :   1b99b:  je     1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b99d:  mov    0x12c(%rax),%eax
    0.00 :   1b9a3:  movslq %ebp,%rbp
    0.00 :   1b9a6:  mov    %eax,(%rbx,%rbp,4)
    0.00 :   1b9a9:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9ae:  ud2
    0.00 :   1b9b0:  movl   $0xfffffffe,(%rbx)
    0.00 :   1b9b6:  pop    %rbx
    0.00 :   1b9b7:  pop    %rbp
    0.00 :   1b9b8:  jmp    1b9bd <nft_meta_get_eval+0x1ad>
    0.00 :   1b9bd:  mov    0x8(%rdx),%rsi
    0.00 :   1b9c1:  mov    %r8,%rdi
    0.00 :   1b9c4:  call   1b5d0 <nft_meta_get_eval_sdif.isra.0>
    0.00 :   1b9c9:  movslq %ebp,%rbp
    0.00 :   1b9cc:  mov    %eax,(%rbx,%rbp,4)
    0.00 :   1b9cf:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9d4:  mov    0x58(%r8),%rdi
    0.00 :   1b9d8:  mov    %rcx,%rsi
    0.00 :   1b9db:  call   1b610 <nft_meta_get_eval_rtclassid.isra.0>
    0.00 :   1b9e0:  test   %al,%al
    0.00 :   1b9e2:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9e8:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b9ea:  mov    %rdx,%rsi
    0.00 :   1b9ed:  mov    %rcx,%rdi
    0.00 :   1b9f0:  call   1ab60 <nft_meta_get_eval_cgroup>
    0.00 :   1b9f5:  test   %al,%al
    0.00 :   1b9f7:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9fd:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b9ff:  mov    0x8(%rdx),%rax
    0.00 :   1ba03:  movslq %ebp,%rbp
    0.00 :   1ba06:  movzbl 0x1(%rax),%eax
    0.00 :   1ba0a:  movl   $0x0,(%rsi,%rbp,4)
    0.00 :   1ba11:  mov    %al,(%rcx)
   19.48 :   1ba13:  jmp    1b870 <nft_meta_get_eval+0x60> // [nf_tables][1ba13]
    0.00 :   1ba18:  mov    0x8c(%r8),%eax
    0.00 :   1ba1f:  movslq %ebp,%rbp
    0.00 :   1ba22:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1ba25:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba2a:  mov    %rcx,%rsi
    0.00 :   1ba2d:  call   1ad30 <nft_meta_get_eval_skugid>
    0.00 :   1ba32:  test   %al,%al
    0.00 :   1ba34:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba3a:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1ba3f:  movzbl 0x80(%r8),%eax
    0.00 :   1ba47:  and    $0x7,%eax
    0.00 :   1ba4a:  cmp    $0x5,%al
    0.00 :   1ba4c:  je     1ba6b <nft_meta_get_eval+0x25b>
    0.00 :   1ba4e:  movslq %ebp,%rbp
    0.00 :   1ba51:  movl   $0x0,(%rbx,%rbp,4)
    0.00 :   1ba58:  mov    %al,(%rcx)
    0.00 :   1ba5a:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba5f:  movzbl 0x7f(%r8),%eax
    0.00 :   1ba64:  shr    %al
    0.00 :   1ba66:  and    $0x1,%eax
    0.00 :   1ba69:  jmp    1ba4e <nft_meta_get_eval+0x23e>
    0.00 :   1ba6b:  mov    0x8(%rdx),%rsi
    0.00 :   1ba6f:  mov    %r8,%rdi
    0.00 :   1ba72:  mov    %rcx,%rdx
    0.00 :   1ba75:  call   1b690 <nft_meta_get_eval_pkttype_lo.isra.0>
    0.00 :   1ba7a:  test   %al,%al
    0.00 :   1ba7c:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba82:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1ba87:  mov    0x10(%r8),%rax
    0.00 :   1ba8b:  test   %rax,%rax
    0.00 :   1ba8e:  je     1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1ba94:  movzwl 0x128(%rax),%eax
    0.00 :   1ba9b:  movslq %ebp,%rbp
    0.00 :   1ba9e:  movl   $0x0,(%rbx,%rbp,4)
    0.00 :   1baa5:  mov    %ax,(%rcx)
    0.00 :   1baa8:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1baad:  mov    0x8(%rdx),%rax
    0.00 :   1bab1:  mov    0x8(%rax),%rax
    0.00 :   1bab5:  test   %rax,%rax
    0.00 :   1bab8:  jne    1b99d <nft_meta_get_eval+0x18d>
    0.00 :   1babe:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1bac3:  mov    0x8(%rdx),%rax
    0.00 :   1bac7:  mov    0x10(%rax),%rax
    0.00 :   1bacb:  test   %rax,%rax
    0.00 :   1bace:  jne    1ba94 <nft_meta_get_eval+0x284>
    0.00 :   1bad0:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1bad5:  cmp    $0x1b,%dil
    0.00 :   1bad9:  ja     1baf4 <nft_meta_get_eval+0x2e4>
    0.00 :   1badb:  mov    0x8(%rdx),%rdx
    0.00 :   1badf:  mov    %rcx,%rsi
    0.00 :   1bae2:  call   1b630 <nft_meta_get_eval_kind.isra.0>
    0.00 :   1bae7:  test   %al,%al
    0.00 :   1bae9:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1baef:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1baf4:  lea    -0x1e(%rdi),%eax
    0.00 :   1baf7:  cmp    $0x2,%al
    0.00 :   1baf9:  ja     1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1baff:  pop    %rbx
    0.00 :   1bb00:  mov    %rcx,%rsi
    0.00 :   1bb03:  pop    %rbp
    0.00 :   1bb04:  jmp    1ae00 <nft_meta_get_eval_time>
    0.00 :   1bb09:  test   %dil,%dil
    0.00 :   1bb0c:  je     1bb28 <nft_meta_get_eval+0x318>
    0.00 :   1bb0e:  movzwl 0xb4(%r8),%eax
    0.00 :   1bb16:  movslq %ebp,%rbp
    0.00 :   1bb19:  movl   $0x0,(%rsi,%rbp,4)
    0.00 :   1bb20:  mov    %ax,(%rcx)
    0.00 :   1bb23:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1bb28:  mov    0x70(%r8),%eax
    0.00 :   1bb2c:  movslq %ebp,%rbp
    0.00 :   1bb2f:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1bb32:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1bb37:  cmp    $0x4,%dil
    0.00 :   1bb3b:  je     1bb68 <nft_meta_get_eval+0x358>
    0.00 :   1bb3d:  mov    0x8(%rdx),%rax
    0.00 :   1bb41:  mov    0x10(%rax),%rdx
    0.00 :   1bb45:  xor    %eax,%eax
    0.00 :   1bb47:  test   %rdx,%rdx
    0.00 :   1bb4a:  je     1b9c9 <nft_meta_get_eval+0x1b9>
    0.00 :   1bb50:  mov    0xd8(%rdx),%eax
    0.00 :   1bb56:  jmp    1b9c9 <nft_meta_get_eval+0x1b9>
   36.66 :   1bb5b:  mov    0x8(%rdx),%rax // [nf_tables][1bb5b]
    0.00 :   1bb5f:  mov    0x8(%rax),%rax
    0.00 :   1bb63:  jmp    1b8a7 <nft_meta_get_eval+0x97>
    0.00 :   1bb68:  mov    0x8(%rdx),%rax
    0.00 :   1bb6c:  mov    0x8(%rax),%rdx
    0.00 :   1bb70:  xor    %eax,%eax
    0.00 :   1bb72:  test   %rdx,%rdx
    0.00 :   1bb75:  jne    1bb50 <nft_meta_get_eval+0x340>
    0.00 :   1bb77:  jmp    1b9c9 <nft_meta_get_eval+0x1b9>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   44.13 [virtio_net][22d3]
   16.31 [virtio_net][2347]
   15.30 [virtio_net][238e]
   12.92 [virtio_net][236f]
   11.34 [virtio_net][22d8]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (5 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002170 <page_to_skb>:
         : 6    page_to_skb():
    0.00 :   2170:   call   2175 <page_to_skb+0x5>
    0.00 :   2175:   push   %r15
    0.00 :   2177:   mov    %rdi,%r11
    0.00 :   217a:   push   %r14
    0.00 :   217c:   mov    %rdx,%r14
    0.00 :   217f:   push   %r13
    0.00 :   2181:   mov    %ecx,%r13d
    0.00 :   2184:   push   %r12
    0.00 :   2186:   mov    %rsi,%r12
    0.00 :   2189:   push   %rbp
    0.00 :   218a:   mov    %r14,%rbp
    0.00 :   218d:   push   %rbx
    0.00 :   218e:   sub    $0x28,%rsp
    0.00 :   2192:   sub    0x0(%rip),%rbp        # 2199 <page_to_skb+0x29>
    0.00 :   2199:   mov    0x60(%rsp),%eax
    0.00 :   219d:   sar    $0x6,%rbp
    0.00 :   21a1:   mov    0x70(%rsp),%edx
    0.00 :   21a5:   shl    $0xc,%rbp
    0.00 :   21a9:   add    0x0(%rip),%rbp        # 21b0 <page_to_skb+0x40>
    0.00 :   21b0:   mov    %eax,(%rsp)
    0.00 :   21b3:   mov    %ecx,%eax
    0.00 :   21b5:   add    %rax,%rbp
    0.00 :   21b8:   movzbl 0x4a(%rdi),%eax
    0.00 :   21bc:   cmpb   $0x0,0x38(%rdi)
    0.00 :   21c0:   mov    %al,0x7(%rsp)
    0.00 :   21c4:   je     24bb <page_to_skb+0x34b>
    0.00 :   21ca:   movzbl %al,%r10d
    0.00 :   21ce:   mov    %eax,%ecx
    0.00 :   21d0:   test   %edx,%edx
    0.00 :   21d2:   mov    $0x1000,%esi
    0.00 :   21d7:   cmovne %esi,%r9d
    0.00 :   21db:   sub    %eax,%r8d
    0.00 :   21de:   lea    (%rdx,%r8,1),%eax
    0.00 :   21e2:   mov    %r8d,%r15d
    0.00 :   21e5:   add    %ecx,%eax
    0.00 :   21e7:   mov    %r9d,%esi
    0.00 :   21ea:   sub    %eax,%esi
    0.00 :   21ec:   cmp    $0x13f,%esi
    0.00 :   21f2:   jle    2333 <page_to_skb+0x1c3>
    0.00 :   21f8:   cmp    $0x80,%r8d
    0.00 :   21ff:   jbe    2333 <page_to_skb+0x1c3>
    0.00 :   2205:   mov    %edx,%r13d
    0.00 :   2208:   mov    %rbp,%rdi
    0.00 :   220b:   mov    %r9d,%esi
    0.00 :   220e:   mov    %ecx,0x8(%rsp)
    0.00 :   2212:   sub    %r13,%rdi
    0.00 :   2215:   mov    %edx,0x70(%rsp)
    0.00 :   2219:   call   221e <page_to_skb+0xae>
    0.00 :   221e:   mov    %rax,%rbx
    0.00 :   2221:   test   %rax,%rax
    0.00 :   2224:   je     257d <page_to_skb+0x40d>
    0.00 :   222a:   mov    0x8(%rsp),%ecx
    0.00 :   222e:   mov    0x70(%rsp),%edx
    0.00 :   2232:   mov    %r15d,%esi
    0.00 :   2235:   mov    %rbx,%rdi
    0.00 :   2238:   lea    (%rcx,%r13,1),%eax
    0.00 :   223c:   add    %ecx,%edx
    0.00 :   223e:   add    %edx,0xbc(%rbx)
    0.00 :   2244:   cltq
    0.00 :   2246:   add    %rax,0xd0(%rbx)
    0.00 :   224d:   call   2252 <page_to_skb+0xe2>
    0.00 :   2252:   mov    0x28(%r14),%rcx
    0.00 :   2256:   test   %rcx,%rcx
    0.00 :   2259:   je     24e0 <page_to_skb+0x370>
    0.00 :   225f:   mov    0x28(%rcx),%rax
    0.00 :   2263:   mov    %rcx,%rdx
    0.00 :   2266:   test   %rax,%rax
    0.00 :   2269:   je     2277 <page_to_skb+0x107>
    0.00 :   226b:   mov    %rax,%rdx
    0.00 :   226e:   mov    0x28(%rax),%rax
    0.00 :   2272:   test   %rax,%rax
    0.00 :   2275:   jne    226b <page_to_skb+0xfb>
    0.00 :   2277:   mov    0x1e0(%r12),%rax
    0.00 :   227f:   cmpb   $0x0,(%rsp)
    0.00 :   2283:   mov    %rax,0x28(%rdx)
    0.00 :   2287:   mov    %rcx,0x1e0(%r12)
    0.00 :   228f:   je     22e0 <page_to_skb+0x170>
    0.00 :   2291:   xor    %r14d,%r14d
    0.00 :   2294:   movzbl 0x7(%rsp),%r12d
    0.00 :   229a:   lea    0x28(%rbx),%r13
    0.00 :   229e:   cmp    $0x30,%r12b
    0.00 :   22a2:   ja     2586 <page_to_skb+0x416>
    0.00 :   22a8:   cmp    $0x8,%r12d
    0.00 :   22ac:   jae    2541 <page_to_skb+0x3d1>
    0.00 :   22b2:   test   $0x4,%r12b
    0.00 :   22b6:   jne    25bc <page_to_skb+0x44c>
    0.00 :   22bc:   test   %r12d,%r12d
    0.00 :   22bf:   je     22d3 <page_to_skb+0x163>
    0.00 :   22c1:   movzbl 0x0(%rbp),%eax
    0.00 :   22c5:   mov    %al,0x0(%r13)
    0.00 :   22c9:   test   $0x2,%r12b
    0.00 :   22cd:   jne    25f4 <page_to_skb+0x484>
   44.13 :   22d3:   test   %r14,%r14 // [virtio_net][22d3]
    0.00 :   22d6:   je     22e0 <page_to_skb+0x170>
   11.34 :   22d8:   mov    %r14,%rdi // [virtio_net][22d8]
    0.00 :   22db:   call   1ef0 <put_page>
    0.00 :   22e0:   mov    0x68(%rsp),%eax
    0.00 :   22e4:   test   %eax,%eax
    0.00 :   22e6:   je     231d <page_to_skb+0x1ad>
    0.00 :   22e8:   mov    0x70(%rbx),%eax
    0.00 :   22eb:   sub    0x68(%rsp),%eax
    0.00 :   22ef:   mov    %eax,0x70(%rbx)
    0.00 :   22f2:   cmp    0x74(%rbx),%eax
    0.00 :   22f5:   jb     2584 <page_to_skb+0x414>
    0.00 :   22fb:   mov    0x68(%rsp),%eax
    0.00 :   22ff:   mov    0xc8(%rbx),%rdx
    0.00 :   2306:   add    %rax,0xd0(%rbx)
    0.00 :   230d:   movzbl 0x68(%rsp),%edi
    0.00 :   2312:   mov    0xc0(%rbx),%eax
    0.00 :   2318:   mov    %dil,0x1(%rdx,%rax,1)
    0.00 :   231d:   add    $0x28,%rsp
    0.00 :   2321:   mov    %rbx,%rax
    0.00 :   2324:   pop    %rbx
    0.00 :   2325:   pop    %rbp
    0.00 :   2326:   pop    %r12
    0.00 :   2328:   pop    %r13
    0.00 :   232a:   pop    %r14
    0.00 :   232c:   pop    %r15
    0.00 :   232e:   jmp    2333 <page_to_skb+0x1c3>
    0.00 :   2333:   lea    0x8(%r12),%rdi
    0.00 :   2338:   mov    $0xa20,%edx
    0.00 :   233d:   mov    $0x80,%esi
    0.00 :   2342:   mov    %r9d,0x20(%rsp)
   16.31 :   2347:   mov    %r11,0x18(%rsp) // [virtio_net][2347]
    0.00 :   234c:   mov    %r10,0x10(%rsp)
    0.00 :   2351:   mov    %ecx,0x8(%rsp)
    0.00 :   2355:   call   235a <page_to_skb+0x1ea>
    0.00 :   235a:   mov    %rax,%rbx
    0.00 :   235d:   test   %rax,%rax
    0.00 :   2360:   je     257d <page_to_skb+0x40d>
    0.00 :   2366:   mov    0x74(%rbx),%edx
    0.00 :   2369:   xor    %eax,%eax
    0.00 :   236b:   mov    0x8(%rsp),%ecx
   12.92 :   236f:   mov    0x10(%rsp),%r10 // [virtio_net][236f]
    0.00 :   2374:   mov    0x18(%rsp),%r11
    0.00 :   2379:   test   %edx,%edx
    0.00 :   237b:   mov    0x20(%rsp),%r9d
    0.00 :   2380:   jne    238e <page_to_skb+0x21e>
    0.00 :   2382:   mov    0xc0(%rbx),%eax
    0.00 :   2388:   sub    0xbc(%rbx),%eax
   15.30 :   238e:   lea    (%rcx,%r13,1),%edi // [virtio_net][238e]
    0.00 :   2392:   lea    0x0(%rbp,%r10,1),%rdx
    0.00 :   2397:   mov    %r9d,0x18(%rsp)
    0.00 :   239c:   mov    %edi,0x10(%rsp)
    0.00 :   23a0:   mov    %rdx,0x8(%rsp)
    0.00 :   23a5:   cmp    %r15d,%eax
    0.00 :   23a8:   jae    24ef <page_to_skb+0x37f>
    0.00 :   23ae:   mov    0x68(%rsp),%eax
    0.00 :   23b2:   mov    %rbx,%rdi
    0.00 :   23b5:   mov    %r11,0x20(%rsp)
    0.00 :   23ba:   lea    0xe(%rax),%r13d
    0.00 :   23be:   mov    %r13d,%esi
    0.00 :   23c1:   sub    %r13d,%r15d
    0.00 :   23c4:   call   23c9 <page_to_skb+0x259>
    0.00 :   23c9:   mov    0x8(%rsp),%rsi
    0.00 :   23ce:   mov    %r13d,%edx
    0.00 :   23d1:   mov    %rax,%rdi
    0.00 :   23d4:   call   23d9 <page_to_skb+0x269>
    0.00 :   23d9:   mov    0x10(%rsp),%ecx
    0.00 :   23dd:   mov    0x20(%rsp),%r11
    0.00 :   23e2:   mov    0x18(%rsp),%r9d
    0.00 :   23e7:   add    %r13d,%ecx
    0.00 :   23ea:   cmpb   $0x0,0x38(%r11)
    0.00 :   23ef:   jne    24cb <page_to_skb+0x35b>
    0.00 :   23f5:   cmp    $0x11000,%r15d
    0.00 :   23fc:   ja     2573 <page_to_skb+0x403>
    0.00 :   2402:   cmp    $0xfff,%ecx
    0.00 :   2408:   ja     2530 <page_to_skb+0x3c0>
    0.00 :   240e:   test   %r15d,%r15d
    0.00 :   2411:   je     247b <page_to_skb+0x30b>
    0.00 :   2413:   mov    %rbp,0x8(%rsp)
    0.00 :   2418:   mov    $0x1000,%r13d
    0.00 :   241e:   mov    %rbx,%rbp
    0.00 :   2421:   mov    %r9d,%ebx
    0.00 :   2424:   mov    %r12,0x10(%rsp)
    0.00 :   2429:   mov    %r14,%r12
    0.00 :   242c:   mov    %r15d,%r14d
    0.00 :   242f:   mov    %r13d,%r15d
    0.00 :   2432:   mov    0xc8(%rbp),%rdi
    0.00 :   2439:   mov    %r12,%rdx
    0.00 :   243c:   mov    %ebx,%r9d
    0.00 :   243f:   sub    %ecx,%r15d
    0.00 :   2442:   mov    0xc0(%rbp),%esi
    0.00 :   2448:   cmp    %r14d,%r15d
    0.00 :   244b:   cmova  %r14d,%r15d
    0.00 :   244f:   movzbl 0x2(%rdi,%rsi,1),%esi
    0.00 :   2454:   mov    %rbp,%rdi
    0.00 :   2457:   mov    %r15d,%r8d
    0.00 :   245a:   call   245f <page_to_skb+0x2ef>
    0.00 :   245f:   mov    0x28(%r12),%r12
    0.00 :   2464:   xor    %ecx,%ecx
    0.00 :   2466:   sub    %r15d,%r14d
    0.00 :   2469:   jne    242f <page_to_skb+0x2bf>
    0.00 :   246b:   mov    %rbp,%rbx
    0.00 :   246e:   mov    %r12,%r14
    0.00 :   2471:   mov    0x8(%rsp),%rbp
    0.00 :   2476:   mov    0x10(%rsp),%r12
    0.00 :   247b:   test   %r14,%r14
    0.00 :   247e:   je     24e0 <page_to_skb+0x370>
    0.00 :   2480:   mov    0x28(%r14),%rax
    0.00 :   2484:   mov    %r14,%rdx
    0.00 :   2487:   test   %rax,%rax
    0.00 :   248a:   je     2498 <page_to_skb+0x328>
    0.00 :   248c:   mov    %rax,%rdx
    0.00 :   248f:   mov    0x28(%rax),%rax
    0.00 :   2493:   test   %rax,%rax
    0.00 :   2496:   jne    248c <page_to_skb+0x31c>
    0.00 :   2498:   mov    0x1e0(%r12),%rax
    0.00 :   24a0:   cmpb   $0x0,(%rsp)
    0.00 :   24a4:   mov    %rax,0x28(%rdx)
    0.00 :   24a8:   mov    %r14,0x1e0(%r12)
    0.00 :   24b0:   jne    2291 <page_to_skb+0x121>
    0.00 :   24b6:   jmp    22e0 <page_to_skb+0x170>
    0.00 :   24bb:   mov    $0x20,%r10d
    0.00 :   24c1:   mov    $0x20,%ecx
    0.00 :   24c6:   jmp    21d0 <page_to_skb+0x60>
    0.00 :   24cb:   test   %r15d,%r15d
    0.00 :   24ce:   je     2532 <page_to_skb+0x3c2>
    0.00 :   24d0:   mov    %r15d,%r8d
    0.00 :   24d3:   mov    %r14,%rdx
    0.00 :   24d6:   xor    %esi,%esi
    0.00 :   24d8:   mov    %rbx,%rdi
    0.00 :   24db:   call   24e0 <page_to_skb+0x370>
    0.00 :   24e0:   cmpb   $0x0,(%rsp)
    0.00 :   24e4:   je     22e0 <page_to_skb+0x170>
    0.00 :   24ea:   jmp    2291 <page_to_skb+0x121>
    0.00 :   24ef:   mov    %r15d,%esi
    0.00 :   24f2:   mov    %rbx,%rdi
    0.00 :   24f5:   mov    %r11,0x18(%rsp)
    0.00 :   24fa:   call   24ff <page_to_skb+0x38f>
    0.00 :   24ff:   mov    0x8(%rsp),%rsi
    0.00 :   2504:   mov    %r15d,%edx
    0.00 :   2507:   mov    %rax,%rdi
    0.00 :   250a:   call   250f <page_to_skb+0x39f>
    0.00 :   250f:   mov    0x18(%rsp),%r11
    0.00 :   2514:   cmpb   $0x0,0x38(%r11)
    0.00 :   2519:   jne    2532 <page_to_skb+0x3c2>
    0.00 :   251b:   mov    0x10(%rsp),%r8d
    0.00 :   2520:   add    %r15d,%r8d
    0.00 :   2523:   cmp    $0xfff,%r8d
    0.00 :   252a:   jbe    247b <page_to_skb+0x30b>
    0.00 :   2530:   ud2
    0.00 :   2532:   cmpb   $0x0,(%rsp)
    0.00 :   2536:   je     22d3 <page_to_skb+0x163>
    0.00 :   253c:   jmp    2294 <page_to_skb+0x124>
    0.00 :   2541:   mov    0x0(%rbp),%rax
    0.00 :   2545:   lea    0x8(%r13),%rdi
    0.00 :   2549:   mov    %rbp,%rsi
    0.00 :   254c:   and    $0xfffffffffffffff8,%rdi
    0.00 :   2550:   mov    %rax,0x0(%r13)
    0.00 :   2554:   mov    -0x8(%rbp,%r12,1),%rax
    0.00 :   2559:   mov    %rax,-0x8(%r13,%r12,1)
    0.00 :   255e:   sub    %rdi,%r13
    0.00 :   2561:   lea    (%r12,%r13,1),%ecx
    0.00 :   2565:   sub    %r13,%rsi
    0.00 :   2568:   shr    $0x3,%ecx
    0.00 :   256b:   rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   256e:   jmp    22d3 <page_to_skb+0x163>
    0.00 :   2573:   xchg   %ax,%ax
    0.00 :   2575:   mov    %rbx,%rdi
    0.00 :   2578:   call   257d <page_to_skb+0x40d>
    0.00 :   257d:   xor    %ebx,%ebx
    0.00 :   257f:   jmp    231d <page_to_skb+0x1ad>
    0.00 :   2584:   ud2
    0.00 :   2586:   cmpb   $0x0,0x0(%rip)        # 258d <page_to_skb+0x41d>
    0.00 :   258d:   jne    22a8 <page_to_skb+0x138>
    0.00 :   2593:   mov    $0x30,%ecx
    0.00 :   2598:   mov    $0x0,%rdx
    0.00 :   259f:   mov    %r12,%rsi
    0.00 :   25a2:   mov    $0x0,%rdi
    0.00 :   25a9:   movb   $0x1,0x0(%rip)        # 25b0 <page_to_skb+0x440>
    0.00 :   25b0:   call   25b5 <page_to_skb+0x445>
    0.00 :   25b5:   ud2
    0.00 :   25b7:   jmp    22a8 <page_to_skb+0x138>
    0.00 :   25bc:   mov    0x0(%rbp),%eax
    0.00 :   25bf:   mov    %eax,0x0(%r13)
    0.00 :   25c3:   mov    -0x4(%rbp,%r12,1),%eax
    0.00 :   25c8:   mov    %eax,-0x4(%r13,%r12,1)
    0.00 :   25cd:   jmp    22d3 <page_to_skb+0x163>
    0.00 :   25d2:   call   25d7 <page_to_skb+0x467>
    0.00 :   25d7:   test   %eax,%eax
    0.00 :   25d9:   je     2575 <page_to_skb+0x405>
    0.00 :   25db:   mov    0x10(%rbx),%rdx
    0.00 :   25df:   mov    $0x0,%rsi
    0.00 :   25e6:   mov    $0x0,%rdi
    0.00 :   25ed:   call   25f2 <page_to_skb+0x482>
    0.00 :   25f2:   jmp    2575 <page_to_skb+0x405>
    0.00 :   25f4:   movzwl -0x2(%rbp,%r12,1),%eax
    0.00 :   25fa:   mov    %ax,-0x2(%r13,%r12,1)
    0.00 :   2600:   jmp    22d3 <page_to_skb+0x163>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   57.50 [virtio_net][7bc0]
   18.38 [virtio_net][7cba]
   12.38 [virtio_net][7e2c]
   11.73 [virtio_net][7e4f]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (6 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000007bc0 <virtnet_poll>:
         : 6    virtnet_poll():
   57.50 :   7bc0:   call   7bc5 <virtnet_poll+0x5> // [virtio_net][7bc0]
    0.00 :   7bc5:   push   %r15
    0.00 :   7bc7:   push   %r14
    0.00 :   7bc9:   lea    -0x8(%rdi),%r14
    0.00 :   7bcd:   push   %r13
    0.00 :   7bcf:   push   %r12
    0.00 :   7bd1:   push   %rbp
    0.00 :   7bd2:   push   %rbx
    0.00 :   7bd3:   mov    %rdi,%rbx
    0.00 :   7bd6:   sub    $0x68,%rsp
    0.00 :   7bda:   mov    -0x8(%rdi),%r9
    0.00 :   7bde:   mov    %esi,0x8(%rsp)
    0.00 :   7be2:   mov    0x20(%r9),%rax
    0.00 :   7be6:   movl   $0x0,0x18(%rsp)
    0.00 :   7bee:   mov    0x330(%rax),%r15
    0.00 :   7bf5:   mov    0x28(%r9),%eax
    0.00 :   7bf9:   shr    %eax
    0.00 :   7bfb:   mov    %r15,%rbp
    0.00 :   7bfe:   mov    %eax,%edx
    0.00 :   7c00:   imul   $0x458,%rdx,%r13
    0.00 :   7c07:   add    0x18(%r15),%r13
    0.00 :   7c0b:   mov    0x2d8(%r13),%edi
    0.00 :   7c12:   test   %edi,%edi
    0.00 :   7c14:   je     7cc5 <virtnet_poll+0x105>
    0.00 :   7c1a:   movzwl 0x2e(%r15),%ecx
    0.00 :   7c1f:   movzwl 0x30(%r15),%edi
    0.00 :   7c24:   mov    %ecx,%esi
    0.00 :   7c26:   sub    %edi,%esi
    0.00 :   7c28:   cmp    %esi,%eax
    0.00 :   7c2a:   jl     7c34 <virtnet_poll+0x74>
    0.00 :   7c2c:   cmp    %ecx,%eax
    0.00 :   7c2e:   jl     7cc5 <virtnet_poll+0x105>
    0.00 :   7c34:   mov    0x10(%r15),%rax
    0.00 :   7c38:   lea    (%rdx,%rdx,4),%rbp
    0.00 :   7c3c:   shl    $0x6,%rbp
    0.00 :   7c40:   add    0x400(%rax),%rbp
    0.00 :   7c47:   lea    0x80(%rbp),%r12
    0.00 :   7c4e:   mov    %r12,%rdi
    0.00 :   7c51:   call   7c56 <virtnet_poll+0x96>
    0.00 :   7c56:   test   %eax,%eax
    0.00 :   7c58:   je     7cb6 <virtnet_poll+0xf6>
    0.00 :   7c5a:   call   7c5f <virtnet_poll+0x9f>
    0.00 :   7c5f:   mov    %eax,0x84(%rbp)
    0.00 :   7c65:   cmpb   $0x0,0x450(%r13)
    0.00 :   7c6d:   jne    7ca4 <virtnet_poll+0xe4>
    0.00 :   7c6f:   mov    0x0(%r13),%rdi
    0.00 :   7c73:   call   7c78 <virtnet_poll+0xb8>
    0.00 :   7c78:   mov    %r13,%rdi
    0.00 :   7c7b:   mov    $0x1,%esi
    0.00 :   7c80:   call   390 <free_old_xmit_skbs>
    0.00 :   7c85:   mov    0x0(%r13),%rdi
    0.00 :   7c89:   call   7c8e <virtnet_poll+0xce>
    0.00 :   7c8e:   test   %al,%al
    0.00 :   7c90:   je     7c6f <virtnet_poll+0xaf>
    0.00 :   7c92:   mov    0x0(%r13),%rax
    0.00 :   7c96:   cmpl   $0x12,0x2c(%rax)
    0.00 :   7c9a:   jbe    7ca4 <virtnet_poll+0xe4>
    0.00 :   7c9c:   mov    %rbp,%rdi
    0.00 :   7c9f:   call   7ca4 <virtnet_poll+0xe4>
    0.00 :   7ca4:   movl   $0xffffffff,0x84(%rbp)
    0.00 :   7cae:   mov    %r12,%rdi
    0.00 :   7cb1:   call   7cb6 <virtnet_poll+0xf6>
    0.00 :   7cb6:   mov    -0x8(%rbx),%r9
   18.38 :   7cba:   mov    0x20(%r9),%rax // [virtio_net][7cba]
    0.00 :   7cbe:   mov    0x330(%rax),%rbp
    0.00 :   7cc5:   lea    0x28(%rsp),%r12
    0.00 :   7cca:   xor    %eax,%eax
    0.00 :   7ccc:   mov    $0x8,%ecx
    0.00 :   7cd1:   cmpb   $0x0,0x33(%rbp)
    0.00 :   7cd5:   mov    %r12,%rdi
    0.00 :   7cd8:   movl   $0x0,0x1c(%rsp)
    0.00 :   7ce0:   movslq 0x8(%rsp),%r13
    0.00 :   7ce5:   rep stos %rax,%es:(%rdi)
    0.00 :   7ce8:   je     7d7e <virtnet_poll+0x1be>
    0.00 :   7cee:   cmpb   $0x0,0x38(%rbp)
    0.00 :   7cf2:   jne    7d7e <virtnet_poll+0x1be>
    0.00 :   7cf8:   lea    0x1c(%rsp),%rcx
    0.00 :   7cfd:   mov    %rcx,(%rsp)
    0.00 :   7d01:   test   %r13d,%r13d
    0.00 :   7d04:   jne    7d40 <virtnet_poll+0x180>
    0.00 :   7d06:   jmp    80c4 <virtnet_poll+0x504>
    0.00 :   7d0b:   push   %r12
    0.00 :   7d0d:   mov    0x24(%rsp),%ecx
    0.00 :   7d11:   xor    %r8d,%r8d
    0.00 :   7d14:   mov    %r14,%rsi
    0.00 :   7d17:   mov    %rbp,%rdi
    0.00 :   7d1a:   lea    0x20(%rsp),%r9
    0.00 :   7d1f:   call   6140 <receive_buf>
    0.00 :   7d24:   mov    0x30(%rsp),%rax
    0.00 :   7d29:   lea    0x1(%rax),%r8
    0.00 :   7d2d:   mov    %r8,0x30(%rsp)
    0.00 :   7d32:   pop    %rcx
    0.00 :   7d33:   cmp    %r13,%r8
    0.00 :   7d36:   jae    800e <virtnet_poll+0x44e>
    0.00 :   7d3c:   mov    -0x8(%rbx),%r9
    0.00 :   7d40:   mov    (%rsp),%rsi
    0.00 :   7d44:   mov    %r9,%rdi
    0.00 :   7d47:   call   7d4c <virtnet_poll+0x18c>
    0.00 :   7d4c:   mov    %rax,%rdx
    0.00 :   7d4f:   test   %rax,%rax
    0.00 :   7d52:   jne    7d0b <virtnet_poll+0x14b>
    0.00 :   7d54:   mov    0x18(%rsp),%eax
    0.00 :   7d58:   mov    0x28(%rsp),%r8
    0.00 :   7d5d:   mov    -0x8(%rbx),%r9
    0.00 :   7d61:   mov    %eax,%edi
    0.00 :   7d63:   and    $0x1,%eax
    0.00 :   7d66:   mov    %r8d,0xc(%rsp)
    0.00 :   7d6b:   mov    %r8d,%r12d
    0.00 :   7d6e:   and    $0x2,%edi
    0.00 :   7d71:   mov    %eax,0x14(%rsp)
    0.00 :   7d75:   mov    %edi,0x10(%rsp)
    0.00 :   7d79:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   7d7e:   movq   $0x0,0x20(%rsp)
    0.00 :   7d87:   lea    0x1c(%rsp),%rax
    0.00 :   7d8c:   mov    %rax,(%rsp)
    0.00 :   7d90:   test   %r13,%r13
    0.00 :   7d93:   jne    7dd1 <virtnet_poll+0x211>
    0.00 :   7d95:   jmp    8081 <virtnet_poll+0x4c1>
    0.00 :   7d9a:   push   %r12
    0.00 :   7d9c:   mov    0x28(%rsp),%r8
    0.00 :   7da1:   mov    %r14,%rsi
    0.00 :   7da4:   mov    %rbp,%rdi
    0.00 :   7da7:   mov    0x24(%rsp),%ecx
    0.00 :   7dab:   lea    0x20(%rsp),%r9
    0.00 :   7db0:   call   6140 <receive_buf>
    0.00 :   7db5:   mov    0x30(%rsp),%rax
    0.00 :   7dba:   mov    -0x8(%rbx),%r9
    0.00 :   7dbe:   lea    0x1(%rax),%r8
    0.00 :   7dc2:   mov    %r8,0x30(%rsp)
    0.00 :   7dc7:   pop    %rsi
    0.00 :   7dc8:   cmp    %r13,%r8
    0.00 :   7dcb:   jae    7ea0 <virtnet_poll+0x2e0>
    0.00 :   7dd1:   mov    (%rsp),%rsi
    0.00 :   7dd5:   lea    0x20(%rsp),%rdx
    0.00 :   7dda:   mov    %r9,%rdi
    0.00 :   7ddd:   call   7de2 <virtnet_poll+0x222>
    0.00 :   7de2:   mov    %rax,%rdx
    0.00 :   7de5:   test   %rax,%rax
    0.00 :   7de8:   jne    7d9a <virtnet_poll+0x1da>
    0.00 :   7dea:   mov    0x18(%rsp),%eax
    0.00 :   7dee:   mov    0x28(%rsp),%r8
    0.00 :   7df3:   mov    -0x8(%rbx),%r9
    0.00 :   7df7:   mov    %eax,%ecx
    0.00 :   7df9:   and    $0x1,%eax
    0.00 :   7dfc:   mov    %r8d,0xc(%rsp)
    0.00 :   7e01:   mov    %r8d,%r12d
    0.00 :   7e04:   and    $0x2,%ecx
    0.00 :   7e07:   mov    %eax,0x14(%rsp)
    0.00 :   7e0b:   mov    %ecx,0x10(%rsp)
    0.00 :   7e0f:   mov    %r9,%rdi
    0.00 :   7e12:   mov    %r8,(%rsp)
    0.00 :   7e16:   mov    0x2c(%r9),%r13d
    0.00 :   7e1a:   call   7e1f <virtnet_poll+0x25f>
    0.00 :   7e1f:   mov    0x8(%rsp),%ecx
    0.00 :   7e23:   mov    (%rsp),%r8
    0.00 :   7e27:   cmp    %eax,%ecx
    0.00 :   7e29:   cmovbe %ecx,%eax
   12.38 :   7e2c:   shr    %eax // [virtio_net][7e2c]
    0.00 :   7e2e:   cmp    %r13d,%eax
    0.00 :   7e31:   jb     7ec1 <virtnet_poll+0x301>
    0.00 :   7e37:   add    %r8,0x198(%rbx)
    0.00 :   7e3e:   lea    0x198(%rbx),%rcx
    0.00 :   7e45:   mov    $0x0,%rax
    0.00 :   7e4c:   mov    (%rax),%rdx
   11.73 :   7e4f:   add    $0x28,%rax // [virtio_net][7e4f]
    0.00 :   7e53:   mov    0x28(%rsp,%rdx,1),%rsi
    0.00 :   7e58:   add    %rsi,(%rcx,%rdx,1)
    0.00 :   7e5c:   cmp    $0x0,%rax
    0.00 :   7e62:   jne    7e4c <virtnet_poll+0x28c>
    0.00 :   7e64:   mov    0x10(%rsp),%edx
    0.00 :   7e68:   test   %edx,%edx
    0.00 :   7e6a:   jne    7ff7 <virtnet_poll+0x437>
    0.00 :   7e70:   mov    0x8(%rsp),%ecx
    0.00 :   7e74:   cmp    %ecx,0xc(%rsp)
    0.00 :   7e78:   jb     7fa3 <virtnet_poll+0x3e3>
    0.00 :   7e7e:   mov    0x14(%rsp),%eax
    0.00 :   7e82:   test   %eax,%eax
    0.00 :   7e84:   jne    7f12 <virtnet_poll+0x352>
    0.00 :   7e8a:   add    $0x68,%rsp
    0.00 :   7e8e:   mov    %r12d,%eax
    0.00 :   7e91:   pop    %rbx
    0.00 :   7e92:   pop    %rbp
    0.00 :   7e93:   pop    %r12
    0.00 :   7e95:   pop    %r13
    0.00 :   7e97:   pop    %r14
    0.00 :   7e99:   pop    %r15
    0.00 :   7e9b:   jmp    7ea0 <virtnet_poll+0x2e0>
    0.00 :   7ea0:   mov    0x18(%rsp),%eax
    0.00 :   7ea4:   mov    %r8d,0xc(%rsp)
    0.00 :   7ea9:   mov    %r8d,%r12d
    0.00 :   7eac:   mov    %eax,%edi
    0.00 :   7eae:   and    $0x1,%eax
    0.00 :   7eb1:   and    $0x2,%edi
    0.00 :   7eb4:   mov    %eax,0x14(%rsp)
    0.00 :   7eb8:   mov    %edi,0x10(%rsp)
    0.00 :   7ebc:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   7ec1:   mov    $0xa20,%edx
    0.00 :   7ec6:   mov    %r14,%rsi
    0.00 :   7ec9:   mov    %rbp,%rdi
    0.00 :   7ecc:   call   4fc0 <try_fill_recv>
    0.00 :   7ed1:   mov    (%rsp),%r8
    0.00 :   7ed5:   test   %al,%al
    0.00 :   7ed7:   jne    7e37 <virtnet_poll+0x277>
    0.00 :   7edd:   lea    0xac(%rbp),%r14
    0.00 :   7ee4:   mov    %r14,%rdi
    0.00 :   7ee7:   call   7eec <virtnet_poll+0x32c>
    0.00 :   7eec:   cmpb   $0x0,0xa8(%rbp)
    0.00 :   7ef3:   mov    (%rsp),%r8
    0.00 :   7ef7:   jne    80a4 <virtnet_poll+0x4e4>
    0.00 :   7efd:   mov    %r14,%rdi
    0.00 :   7f00:   mov    %r8,(%rsp)
    0.00 :   7f04:   call   7f09 <virtnet_poll+0x349>
    0.00 :   7f09:   mov    (%rsp),%r8
    0.00 :   7f0d:   jmp    7e37 <virtnet_poll+0x277>
    0.00 :   7f12:   call   7f17 <virtnet_poll+0x357>
    0.00 :   7f17:   movzwl 0x2e(%r15),%ebx
    0.00 :   7f1c:   cmp    %ebx,0x0(%rip)        # 7f22 <virtnet_poll+0x362>
    0.00 :   7f22:   mov    %eax,%ebp
    0.00 :   7f24:   jae    8050 <virtnet_poll+0x490>
    0.00 :   7f2a:   movzwl 0x30(%r15),%eax
    0.00 :   7f2f:   sub    %eax,%ebx
    0.00 :   7f31:   lea    0x0(%rbp,%rbx,1),%ebx
    0.00 :   7f35:   imul   $0x458,%rbx,%rbx
    0.00 :   7f3c:   add    0x18(%r15),%rbx
    0.00 :   7f40:   mov    (%rbx),%rdi
    0.00 :   7f43:   call   7f48 <virtnet_poll+0x388>
    0.00 :   7f48:   test   %al,%al
    0.00 :   7f4a:   jne    8033 <virtnet_poll+0x473>
    0.00 :   7f50:   mov    0x10(%r15),%rax
    0.00 :   7f54:   mov    0x18(%r15),%rcx
    0.00 :   7f58:   mov    0x400(%rax),%rdx
    0.00 :   7f5f:   movzwl 0x2e(%r15),%eax
    0.00 :   7f64:   cmp    %eax,0x0(%rip)        # 7f6a <virtnet_poll+0x3aa>
    0.00 :   7f6a:   jb     7e8a <virtnet_poll+0x2ca>
    0.00 :   7f70:   sub    %rcx,%rbx
    0.00 :   7f73:   sar    $0x3,%rbx
    0.00 :   7f77:   imul   $0x70586723,%ebx,%eax
    0.00 :   7f7d:   lea    (%rax,%rax,4),%rax
    0.00 :   7f81:   shl    $0x6,%rax
    0.00 :   7f85:   add    %rax,%rdx
    0.00 :   7f88:   movl   $0xffffffff,0x84(%rdx)
    0.00 :   7f92:   lea    0x80(%rdx),%rdi
    0.00 :   7f99:   call   7f9e <virtnet_poll+0x3de>
    0.00 :   7f9e:   jmp    7e8a <virtnet_poll+0x2ca>
    0.00 :   7fa3:   mov    -0x8(%rbx),%r13
    0.00 :   7fa7:   mov    %r13,%rdi
    0.00 :   7faa:   call   7faf <virtnet_poll+0x3ef>
    0.00 :   7faf:   mov    %r12d,%esi
    0.00 :   7fb2:   mov    %rbx,%rdi
    0.00 :   7fb5:   mov    %eax,%ebp
    0.00 :   7fb7:   call   7fbc <virtnet_poll+0x3fc>
    0.00 :   7fbc:   test   %al,%al
    0.00 :   7fbe:   je     8001 <virtnet_poll+0x441>
    0.00 :   7fc0:   mov    %ebp,%esi
    0.00 :   7fc2:   mov    %r13,%rdi
    0.00 :   7fc5:   call   7fca <virtnet_poll+0x40a>
    0.00 :   7fca:   test   %al,%al
    0.00 :   7fcc:   je     7e7e <virtnet_poll+0x2be>
    0.00 :   7fd2:   mov    %rbx,%rdi
    0.00 :   7fd5:   call   7fda <virtnet_poll+0x41a>
    0.00 :   7fda:   test   %al,%al
    0.00 :   7fdc:   je     7e7e <virtnet_poll+0x2be>
    0.00 :   7fe2:   mov    %r13,%rdi
    0.00 :   7fe5:   call   7fea <virtnet_poll+0x42a>
    0.00 :   7fea:   mov    %rbx,%rdi
    0.00 :   7fed:   call   7ff2 <virtnet_poll+0x432>
    0.00 :   7ff2:   jmp    7e7e <virtnet_poll+0x2be>
    0.00 :   7ff7:   call   7ffc <virtnet_poll+0x43c>
    0.00 :   7ffc:   jmp    7e70 <virtnet_poll+0x2b0>
    0.00 :   8001:   mov    %r13,%rdi
    0.00 :   8004:   call   8009 <virtnet_poll+0x449>
    0.00 :   8009:   jmp    7e7e <virtnet_poll+0x2be>
    0.00 :   800e:   mov    0x18(%rsp),%eax
    0.00 :   8012:   mov    -0x8(%rbx),%r9
    0.00 :   8016:   mov    %r8d,0xc(%rsp)
    0.00 :   801b:   mov    %r8d,%r12d
    0.00 :   801e:   mov    %eax,%ecx
    0.00 :   8020:   and    $0x1,%eax
    0.00 :   8023:   and    $0x2,%ecx
    0.00 :   8026:   mov    %eax,0x14(%rsp)
    0.00 :   802a:   mov    %ecx,0x10(%rsp)
    0.00 :   802e:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   8033:   mov    (%rbx),%rdi
    0.00 :   8036:   call   803b <virtnet_poll+0x47b>
    0.00 :   803b:   test   %al,%al
    0.00 :   803d:   je     7f50 <virtnet_poll+0x390>
    0.00 :   8043:   addq   $0x1,0x2b0(%rbx)
    0.00 :   804b:   jmp    7f50 <virtnet_poll+0x390>
    0.00 :   8050:   cltd
    0.00 :   8051:   idiv   %ebx
    0.00 :   8053:   mov    0x10(%r15),%rax
    0.00 :   8057:   lea    (%rdx,%rdx,4),%r13
    0.00 :   805b:   mov    %rdx,%rbx
    0.00 :   805e:   shl    $0x6,%r13
    0.00 :   8062:   add    0x400(%rax),%r13
    0.00 :   8069:   lea    0x80(%r13),%rdi
    0.00 :   8070:   call   8075 <virtnet_poll+0x4b5>
    0.00 :   8075:   mov    %ebp,0x84(%r13)
    0.00 :   807c:   jmp    7f35 <virtnet_poll+0x375>
    0.00 :   8081:   movl   $0x0,0x14(%rsp)
    0.00 :   8089:   xor    %r8d,%r8d
    0.00 :   808c:   xor    %r12d,%r12d
    0.00 :   808f:   movl   $0x0,0x10(%rsp)
    0.00 :   8097:   movl   $0x0,0xc(%rsp)
    0.00 :   809f:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   80a4:   mov    0x0(%rip),%rsi        # 80ab <virtnet_poll+0x4eb>
    0.00 :   80ab:   lea    0x50(%rbp),%rdx
    0.00 :   80af:   xor    %ecx,%ecx
    0.00 :   80b1:   mov    $0x2000,%edi
    0.00 :   80b6:   call   80bb <virtnet_poll+0x4fb>
    0.00 :   80bb:   mov    (%rsp),%r8
    0.00 :   80bf:   jmp    7efd <virtnet_poll+0x33d>
    0.00 :   80c4:   movl   $0x0,0xc(%rsp)
    0.00 :   80cc:   xor    %r12d,%r12d
    0.00 :   80cf:   xor    %r8d,%r8d
    0.00 :   80d2:   movl   $0x0,0x14(%rsp)
    0.00 :   80da:   movl   $0x0,0x10(%rsp)
    0.00 :   80e2:   jmp    7e0f <virtnet_poll+0x24f>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   64.66 libc.so.6[77740]
   18.43 libc.so.6[7777e]
   16.91 libc.so.6[777c2]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (6 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000077740 <_IO_fflush>:
         : 6     __GI__IO_fflush():
   64.66 :   77740:  endbr64 // libc.so.6[77740]
    0.00 :   77744:  test   %rdi,%rdi
    0.00 :   77747:  je     777f8 <_IO_fflush+0xb8>
    0.00 :   7774d:  push   %rbp
    0.00 :   7774e:  push   %rbx
    0.00 :   7774f:  mov    %rdi,%rbx
    0.00 :   77752:  sub    $0x18,%rsp
    0.00 :   77756:  mov    (%rdi),%eax
    0.00 :   77758:  and    $0x8000,%eax
    0.00 :   7775d:  jne    77793 <_IO_fflush+0x53>
    0.00 :   7775f:  mov    %fs:0x10,%rbp
    0.00 :   77768:  mov    0x88(%rdi),%rdi
    0.00 :   7776f:  cmp    %rbp,0x8(%rdi)
    0.00 :   77773:  je     7778f <_IO_fflush+0x4f>
    0.00 :   77775:  mov    $0x1,%edx
    0.00 :   7777a:  lock cmpxchg %edx,(%rdi)
   18.43 :   7777e:  jne    77810 <_IO_fflush+0xd0> // libc.so.6[7777e]
    0.00 :   77784:  mov    0x88(%rbx),%rdi
    0.00 :   7778b:  mov    %rbp,0x8(%rdi)
    0.00 :   7778f:  addl   $0x1,0x4(%rdi)
    0.00 :   77793:  mov    0xd8(%rbx),%rbp
    0.00 :   7779a:  lea    0x15825f(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   777a1:  lea    0x158fc0(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   777a8:  sub    %rdx,%rax
    0.00 :   777ab:  mov    %rbp,%rcx
    0.00 :   777ae:  sub    %rdx,%rcx
    0.00 :   777b1:  cmp    %rax,%rcx
    0.00 :   777b4:  jae    77800 <_IO_fflush+0xc0>
    0.00 :   777b6:  mov    %rbx,%rdi
    0.00 :   777b9:  call   *0x60(%rbp)
    0.00 :   777bc:  testl  $0x8000,(%rbx)
   16.91 :   777c2:  jne    777e7 <_IO_fflush+0xa7> // libc.so.6[777c2]
    0.00 :   777c4:  mov    0x88(%rbx),%rdi
    0.00 :   777cb:  mov    0x4(%rdi),%esi
    0.00 :   777ce:  lea    -0x1(%rsi),%edx
    0.00 :   777d1:  mov    %edx,0x4(%rdi)
    0.00 :   777d4:  test   %edx,%edx
    0.00 :   777d6:  jne    777e7 <_IO_fflush+0xa7>
    0.00 :   777d8:  movq   $0x0,0x8(%rdi)
    0.00 :   777e0:  xchg   %edx,(%rdi)
    0.00 :   777e2:  cmp    $0x1,%edx
    0.00 :   777e5:  jg     77820 <_IO_fflush+0xe0>
    0.00 :   777e7:  neg    %eax
    0.00 :   777e9:  sbb    %eax,%eax
    0.00 :   777eb:  add    $0x18,%rsp
    0.00 :   777ef:  pop    %rbx
    0.00 :   777f0:  pop    %rbp
    0.00 :   777f1:  ret
    0.00 :   777f2:  nopw   0x0(%rax,%rax,1)
    0.00 :   777f8:  jmp    85b70 <_IO_flush_all>
    0.00 :   777fd:  nopl   (%rax)
    0.00 :   77800:  call   818e0 <_IO_vtable_check>
    0.00 :   77805:  jmp    777b6 <_IO_fflush+0x76>
    0.00 :   77807:  nopw   0x0(%rax,%rax,1)
    0.00 :   77810:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   77815:  jmp    77784 <_IO_fflush+0x44>
    0.00 :   7781a:  nopw   0x0(%rax,%rax,1)
    0.00 :   77820:  mov    %eax,0xc(%rsp)
    0.00 :   77824:  call   87f80 <__lll_lock_wake_private>
    0.00 :   77829:  mov    0xc(%rsp),%eax
    0.00 :   7782d:  jmp    777e7 <_IO_fflush+0xa7>
    0.00 :   7782f:  endbr64
    0.00 :   77833:  mov    %rax,%rbp
    0.00 :   77836:  jmp    2694c <__GI__IO_fflush.cold>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nft_ct.ko.xz
----------------------------------------------

   43.17 [nft_ct][1210]
   37.35 [nft_ct][12bf]
   19.48 [nft_ct][12b7]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nft_ct.ko.xz for cycles (6 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001210 <nft_ct_get_eval>:
         : 6    nft_ct_get_eval():
   43.17 :   1210:   call   1215 <nft_ct_get_eval+0x5> // [nft_ct][1210]
    0.00 :   1215:   push   %r13
    0.00 :   1217:   push   %r12
    0.00 :   1219:   push   %rbp
    0.00 :   121a:   mov    %rsi,%rbp
    0.00 :   121d:   push   %rbx
    0.00 :   121e:   mov    (%rdx),%rax
    0.00 :   1221:   movzbl 0xb(%rdi),%r12d
    0.00 :   1226:   mov    0x68(%rax),%rdx
    0.00 :   122a:   movzbl 0x8(%rdi),%eax
    0.00 :   122e:   mov    %edx,%ecx
    0.00 :   1230:   and    $0x7,%ecx
    0.00 :   1233:   test   %al,%al
    0.00 :   1235:   jne    1260 <nft_ct_get_eval+0x50>
    0.00 :   1237:   cmp    $0x7,%rdx
    0.00 :   123b:   ja     12b0 <nft_ct_get_eval+0xa0>
    0.00 :   123d:   cmp    $0x7,%ecx
    0.00 :   1240:   mov    $0x1,%eax
    0.00 :   1245:   mov    $0x40,%edx
    0.00 :   124a:   cmove  %edx,%eax
    0.00 :   124d:   movslq %r12d,%r12
    0.00 :   1250:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   1255:   pop    %rbx
    0.00 :   1256:   pop    %rbp
    0.00 :   1257:   pop    %r12
    0.00 :   1259:   pop    %r13
    0.00 :   125b:   jmp    1260 <nft_ct_get_eval+0x50>
    0.00 :   1260:   cmp    $0x7,%rdx
    0.00 :   1264:   jbe    1336 <nft_ct_get_eval+0x126>
    0.00 :   126a:   lea    0x0(%rbp,%r12,4),%r13
    0.00 :   126f:   and    $0xfffffffffffffff8,%rdx
    0.00 :   1273:   cmp    $0x7,%al
    0.00 :   1275:   je     145a <nft_ct_get_eval+0x24a>
    0.00 :   127b:   jbe    12d3 <nft_ct_get_eval+0xc3>
    0.00 :   127d:   mov    %rdi,%rbx
    0.00 :   1280:   cmp    $0x10,%al
    0.00 :   1282:   je     1486 <nft_ct_get_eval+0x276>
    0.00 :   1288:   jbe    1363 <nft_ct_get_eval+0x153>
    0.00 :   128e:   cmp    $0x11,%al
    0.00 :   1290:   je     1403 <nft_ct_get_eval+0x1f3>
    0.00 :   1296:   cmp    $0x17,%al
    0.00 :   1298:   jne    16b8 <nft_ct_get_eval+0x4a8>
    0.00 :   129e:   mov    %rdx,%rdi
    0.00 :   12a1:   movslq %r12d,%r12
    0.00 :   12a4:   call   12a9 <nft_ct_get_eval+0x99>
    0.00 :   12a9:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   12ae:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   12b0:   mov    %ecx,%eax
    0.00 :   12b2:   mov    $0xaaaaaaab,%edx
   19.48 :   12b7:   imul   %rdx,%rax // [nft_ct][12b7]
    0.00 :   12bb:   shr    $0x21,%rax
   37.35 :   12bf:   lea    (%rax,%rax,2),%eax // [nft_ct][12bf]
    0.00 :   12c2:   sub    %eax,%ecx
    0.00 :   12c4:   mov    $0x1,%eax
    0.00 :   12c9:   add    $0x1,%ecx
    0.00 :   12cc:   shl    %cl,%eax
    0.00 :   12ce:   jmp    124d <nft_ct_get_eval+0x3d>
    0.00 :   12d3:   cmp    $0x4,%al
    0.00 :   12d5:   je     1473 <nft_ct_get_eval+0x263>
    0.00 :   12db:   jbe    1348 <nft_ct_get_eval+0x138>
    0.00 :   12dd:   cmp    $0x5,%al
    0.00 :   12df:   je     13da <nft_ct_get_eval+0x1ca>
    0.00 :   12e5:   mov    0xa0(%rdx),%rax
    0.00 :   12ec:   test   %rax,%rax
    0.00 :   12ef:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   12f1:   mov    0xb0(%rax),%rdi
    0.00 :   12f8:   test   %rdi,%rdi
    0.00 :   12fb:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   12fd:   movzbl (%rdi),%eax
    0.00 :   1300:   test   %al,%al
    0.00 :   1302:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   1304:   mov    0xc(%rdi),%ecx
    0.00 :   1307:   add    %rdi,%rax
    0.00 :   130a:   test   %ecx,%ecx
    0.00 :   130c:   jne    1735 <nft_ct_get_eval+0x525>
    0.00 :   1312:   test   %rax,%rax
    0.00 :   1315:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   1317:   mov    (%rax),%rax
    0.00 :   131a:   test   %rax,%rax
    0.00 :   131d:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   131f:   pop    %rbx
    0.00 :   1320:   mov    %r13,%rdi
    0.00 :   1323:   pop    %rbp
    0.00 :   1324:   mov    $0x10,%edx
    0.00 :   1329:   pop    %r12
    0.00 :   132b:   lea    0x10(%rax),%rsi
    0.00 :   132f:   pop    %r13
    0.00 :   1331:   jmp    1336 <nft_ct_get_eval+0x126>
    0.00 :   1336:   movl   $0xfffffffe,0x0(%rbp)
    0.00 :   133d:   pop    %rbx
    0.00 :   133e:   pop    %rbp
    0.00 :   133f:   pop    %r12
    0.00 :   1341:   pop    %r13
    0.00 :   1343:   jmp    1348 <nft_ct_get_eval+0x138>
    0.00 :   1348:   cmp    $0x2,%al
    0.00 :   134a:   je     1446 <nft_ct_get_eval+0x236>
    0.00 :   1350:   cmp    $0x3,%al
    0.00 :   1352:   jne    142d <nft_ct_get_eval+0x21d>
    0.00 :   1358:   mov    0xa8(%rdx),%eax
    0.00 :   135e:   jmp    124d <nft_ct_get_eval+0x3d>
    0.00 :   1363:   cmp    $0xd,%al
    0.00 :   1365:   je     1526 <nft_ct_get_eval+0x316>
    0.00 :   136b:   jbe    13b9 <nft_ct_get_eval+0x1a9>
    0.00 :   136d:   mov    0xb0(%rdx),%rdi
    0.00 :   1374:   test   %rdi,%rdi
    0.00 :   1377:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   137d:   movzbl 0x3(%rdi),%eax
    0.00 :   1381:   test   %al,%al
    0.00 :   1383:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   1389:   mov    0xc(%rdi),%edx
    0.00 :   138c:   add    %rdi,%rax
    0.00 :   138f:   test   %edx,%edx
    0.00 :   1391:   jne    1726 <nft_ct_get_eval+0x516>
    0.00 :   1397:   test   %rax,%rax
    0.00 :   139a:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   13a0:   movzbl 0x9(%rbx),%edx
    0.00 :   13a4:   movzbl 0x8(%rbx),%esi
    0.00 :   13a8:   mov    %rax,%rdi
    0.00 :   13ab:   call   fd0 <nft_ct_get_eval_counter>
    0.00 :   13b0:   mov    %rax,0x0(%r13)
    0.00 :   13b4:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   13b9:   cmp    $0xa,%al
    0.00 :   13bb:   jne    14ed <nft_ct_get_eval+0x2dd>
    0.00 :   13c1:   movzbl 0x46(%rdx),%eax
    0.00 :   13c5:   movslq %r12d,%r12
    0.00 :   13c8:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   13d1:   mov    %al,0x0(%r13)
    0.00 :   13d5:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   13da:   mov    0x8(%rdx),%edi
    0.00 :   13dd:   mov    0x0(%rip),%rax        # 13e4 <nft_ct_get_eval+0x1d4>
    0.00 :   13e4:   movslq %r12d,%r12
    0.00 :   13e7:   sub    %eax,%edi
    0.00 :   13e9:   mov    $0x0,%eax
    0.00 :   13ee:   cmovs  %eax,%edi
    0.00 :   13f1:   movslq %edi,%rdi
    0.00 :   13f4:   call   13f9 <nft_ct_get_eval+0x1e9>
    0.00 :   13f9:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   13fe:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1403:   movzbl 0x9(%rdi),%eax
    0.00 :   1407:   cmp    $0x1,%al
    0.00 :   1409:   jbe    15fc <nft_ct_get_eval+0x3ec>
    0.00 :   140f:   movzwl 0xc(%rdx),%ecx
    0.00 :   1413:   movslq %r12d,%r12
    0.00 :   1416:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   141f:   mov    %cx,0x0(%r13)
    0.00 :   1424:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1429:   xor    %eax,%eax
    0.00 :   142b:   jmp    13b0 <nft_ct_get_eval+0x1a0>
    0.00 :   142d:   movslq %r12d,%r12
    0.00 :   1430:   cmp    $0x2,%ecx
    0.00 :   1433:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   143c:   seta   0x0(%r13)
    0.00 :   1441:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1446:   mov    0x80(%rdx),%rax
    0.00 :   144d:   movslq %r12d,%r12
    0.00 :   1450:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   1455:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   145a:   movzwl 0x32(%rdx),%eax
    0.00 :   145e:   movslq %r12d,%r12
    0.00 :   1461:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   146a:   mov    %al,0x0(%r13)
    0.00 :   146e:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1473:   mov    0xac(%rdx),%eax
    0.00 :   1479:   movslq %r12d,%r12
    0.00 :   147c:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   1481:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1486:   mov    0xb0(%rdx),%rdi
    0.00 :   148d:   test   %rdi,%rdi
    0.00 :   1490:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   1492:   movzbl 0x3(%rdi),%ebp
    0.00 :   1496:   test   %bpl,%bpl
    0.00 :   1499:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   149b:   mov    0xc(%rdi),%eax
    0.00 :   149e:   add    %rdi,%rbp
    0.00 :   14a1:   test   %eax,%eax
    0.00 :   14a3:   jne    1714 <nft_ct_get_eval+0x504>
    0.00 :   14a9:   test   %rbp,%rbp
    0.00 :   14ac:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   14b2:   movzbl 0x9(%rbx),%r12d
    0.00 :   14b7:   mov    $0xe,%esi
    0.00 :   14bc:   mov    %rbp,%rdi
    0.00 :   14bf:   mov    %r12d,%edx
    0.00 :   14c2:   call   fd0 <nft_ct_get_eval_counter>
    0.00 :   14c7:   mov    %r12d,%edx
    0.00 :   14ca:   mov    $0xf,%esi
    0.00 :   14cf:   mov    %rbp,%rdi
    0.00 :   14d2:   mov    %rax,%rbx
    0.00 :   14d5:   call   fd0 <nft_ct_get_eval_counter>
    0.00 :   14da:   test   %rbx,%rbx
    0.00 :   14dd:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   14e3:   xor    %edx,%edx
    0.00 :   14e5:   div    %rbx
    0.00 :   14e8:   jmp    13b0 <nft_ct_get_eval+0x1a0>
    0.00 :   14ed:   movzbl 0x9(%rdi),%ecx
    0.00 :   14f1:   movzbl %cl,%esi
    0.00 :   14f4:   cmp    $0xb,%al
    0.00 :   14f6:   je     16ee <nft_ct_get_eval+0x4de>
    0.00 :   14fc:   cmp    $0xc,%al
    0.00 :   14fe:   jne    155f <nft_ct_get_eval+0x34f>
    0.00 :   1500:   lea    0x0(,%rsi,8),%rax
    0.00 :   1508:   movslq %r12d,%r12
    0.00 :   150b:   sub    %rsi,%rax
    0.00 :   150e:   movzwl 0x44(%rdx,%rax,8),%eax
    0.00 :   1513:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   151c:   mov    %ax,0x0(%r13)
    0.00 :   1521:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1526:   mov    0xb0(%rdx),%rax
    0.00 :   152d:   test   %rax,%rax
    0.00 :   1530:   je     15e7 <nft_ct_get_eval+0x3d7>
    0.00 :   1536:   movzbl 0x6(%rax),%edx
    0.00 :   153a:   test   %dl,%dl
    0.00 :   153c:   je     15e7 <nft_ct_get_eval+0x3d7>
    0.00 :   1542:   add    %rdx,%rax
    0.00 :   1545:   je     15e7 <nft_ct_get_eval+0x3d7>
    0.00 :   154b:   mov    (%rax),%rdx
    0.00 :   154e:   mov    %rdx,0x0(%r13)
    0.00 :   1552:   mov    0x8(%rax),%rax
    0.00 :   1556:   mov    %rax,0x8(%r13)
    0.00 :   155a:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   155f:   cmp    $0x8,%al
    0.00 :   1561:   je     1640 <nft_ct_get_eval+0x430>
    0.00 :   1567:   cmp    $0x9,%al
    0.00 :   1569:   jne    1255 <nft_ct_get_eval+0x45>
    0.00 :   156f:   cmpw   $0x2,0x32(%rdx)
    0.00 :   1574:   mov    $0x4,%eax
    0.00 :   1579:   mov    $0x10,%esi
    0.00 :   157e:   cmove  %rax,%rsi
    0.00 :   1582:   lea    0x0(,%rcx,8),%rax
    0.00 :   158a:   sub    %rcx,%rax
    0.00 :   158d:   lea    0x34(%rdx,%rax,8),%rdx
    0.00 :   1592:   mov    %esi,%eax
    0.00 :   1594:   cmp    $0x8,%esi
    0.00 :   1597:   jb     1610 <nft_ct_get_eval+0x400>
    0.00 :   1599:   mov    (%rdx),%rax
    0.00 :   159c:   lea    0x8(%r13),%rdi
    0.00 :   15a0:   mov    %rdx,%rcx
    0.00 :   15a3:   and    $0xfffffffffffffff8,%rdi
    0.00 :   15a7:   mov    %rax,0x0(%r13)
    0.00 :   15ab:   mov    -0x8(%rsi,%rdx,1),%rax
    0.00 :   15b0:   mov    %rax,-0x8(%r13,%rsi,1)
    0.00 :   15b5:   mov    %r13,%rax
    0.00 :   15b8:   sub    %rdi,%rax
    0.00 :   15bb:   sub    %rax,%rcx
    0.00 :   15be:   add    %esi,%eax
    0.00 :   15c0:   and    $0xfffffff8,%eax
    0.00 :   15c3:   cmp    $0x8,%eax
    0.00 :   15c6:   jb     1255 <nft_ct_get_eval+0x45>
    0.00 :   15cc:   and    $0xfffffff8,%eax
    0.00 :   15cf:   xor    %edx,%edx
    0.00 :   15d1:   mov    %edx,%esi
    0.00 :   15d3:   add    $0x8,%edx
    0.00 :   15d6:   mov    (%rcx,%rsi,1),%r8
    0.00 :   15da:   mov    %r8,(%rdi,%rsi,1)
    0.00 :   15de:   cmp    %eax,%edx
    0.00 :   15e0:   jb     15d1 <nft_ct_get_eval+0x3c1>
    0.00 :   15e2:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   15e7:   movq   $0x0,0x0(%r13)
    0.00 :   15ef:   movq   $0x0,0x8(%r13)
    0.00 :   15f7:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   15fc:   movzbl 0xf(%rdx),%esi
    0.00 :   1600:   xor    %ecx,%ecx
    0.00 :   1602:   bt     %eax,%esi
    0.00 :   1605:   jae    1413 <nft_ct_get_eval+0x203>
    0.00 :   160b:   jmp    140f <nft_ct_get_eval+0x1ff>
    0.00 :   1610:   and    $0x4,%esi
    0.00 :   1613:   jne    1741 <nft_ct_get_eval+0x531>
    0.00 :   1619:   test   %eax,%eax
    0.00 :   161b:   je     1255 <nft_ct_get_eval+0x45>
    0.00 :   1621:   movzbl (%rdx),%ecx
    0.00 :   1624:   mov    %cl,0x0(%r13)
    0.00 :   1628:   test   $0x2,%al
    0.00 :   162a:   je     1255 <nft_ct_get_eval+0x45>
    0.00 :   1630:   movzwl -0x2(%rdx,%rax,1),%edx
    0.00 :   1635:   mov    %dx,-0x2(%r13,%rax,1)
    0.00 :   163b:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1640:   cmpw   $0x2,0x32(%rdx)
    0.00 :   1645:   mov    $0x4,%eax
    0.00 :   164a:   mov    $0x10,%esi
    0.00 :   164f:   cmove  %rax,%rsi
    0.00 :   1653:   lea    0x0(,%rcx,8),%rax
    0.00 :   165b:   sub    %rcx,%rax
    0.00 :   165e:   lea    0x20(%rdx,%rax,8),%rdx
    0.00 :   1663:   mov    %esi,%eax
    0.00 :   1665:   cmp    $0x8,%esi
    0.00 :   1668:   jb     1610 <nft_ct_get_eval+0x400>
    0.00 :   166a:   mov    (%rdx),%rax
    0.00 :   166d:   lea    0x8(%r13),%rdi
    0.00 :   1671:   mov    %rdx,%rcx
    0.00 :   1674:   and    $0xfffffffffffffff8,%rdi
    0.00 :   1678:   mov    %rax,0x0(%r13)
    0.00 :   167c:   mov    -0x8(%rsi,%rdx,1),%rax
    0.00 :   1681:   mov    %rax,-0x8(%r13,%rsi,1)
    0.00 :   1686:   mov    %r13,%rax
    0.00 :   1689:   sub    %rdi,%rax
    0.00 :   168c:   sub    %rax,%rcx
    0.00 :   168f:   add    %esi,%eax
    0.00 :   1691:   and    $0xfffffff8,%eax
    0.00 :   1694:   cmp    $0x8,%eax
    0.00 :   1697:   jb     1255 <nft_ct_get_eval+0x45>
    0.00 :   169d:   and    $0xfffffff8,%eax
    0.00 :   16a0:   xor    %edx,%edx
    0.00 :   16a2:   mov    %edx,%esi
    0.00 :   16a4:   add    $0x8,%edx
    0.00 :   16a7:   mov    (%rcx,%rsi,1),%r8
    0.00 :   16ab:   mov    %r8,(%rdi,%rsi,1)
    0.00 :   16af:   cmp    %eax,%edx
    0.00 :   16b1:   jb     16a2 <nft_ct_get_eval+0x492>
    0.00 :   16b3:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   16b8:   movzbl 0x9(%rdi),%esi
    0.00 :   16bc:   cmp    $0x13,%al
    0.00 :   16be:   jne    1755 <nft_ct_get_eval+0x545>
    0.00 :   16c4:   cmpw   $0x2,0x32(%rdx)
    0.00 :   16c9:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   16cf:   movslq %esi,%rsi
    0.00 :   16d2:   movslq %r12d,%r12
    0.00 :   16d5:   lea    0x0(,%rsi,8),%rax
    0.00 :   16dd:   sub    %rsi,%rax
    0.00 :   16e0:   mov    0x20(%rdx,%rax,8),%eax
    0.00 :   16e4:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   16e9:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   16ee:   lea    0x0(,%rsi,8),%rax
    0.00 :   16f6:   movslq %r12d,%r12
    0.00 :   16f9:   sub    %rsi,%rax
    0.00 :   16fc:   movzwl 0x30(%rdx,%rax,8),%eax
    0.00 :   1701:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   170a:   mov    %ax,0x0(%r13)
    0.00 :   170f:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1714:   mov    $0x3,%esi
    0.00 :   1719:   call   171e <nft_ct_get_eval+0x50e>
    0.00 :   171e:   mov    %rax,%rbp
    0.00 :   1721:   jmp    14a9 <nft_ct_get_eval+0x299>
    0.00 :   1726:   mov    $0x3,%esi
    0.00 :   172b:   call   1730 <nft_ct_get_eval+0x520>
    0.00 :   1730:   jmp    1397 <nft_ct_get_eval+0x187>
    0.00 :   1735:   xor    %esi,%esi
    0.00 :   1737:   call   173c <nft_ct_get_eval+0x52c>
    0.00 :   173c:   jmp    1312 <nft_ct_get_eval+0x102>
    0.00 :   1741:   mov    (%rdx),%ecx
    0.00 :   1743:   mov    %ecx,0x0(%r13)
    0.00 :   1747:   mov    -0x4(%rdx,%rax,1),%edx
    0.00 :   174b:   mov    %edx,-0x4(%r13,%rax,1)
    0.00 :   1750:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1755:   jbe    1255 <nft_ct_get_eval+0x45>
    0.00 :   175b:   cmp    $0x15,%al
    0.00 :   175d:   je     17b5 <nft_ct_get_eval+0x5a5>
    0.00 :   175f:   cmp    $0x16,%al
    0.00 :   1761:   jne    1783 <nft_ct_get_eval+0x573>
    0.00 :   1763:   cmpw   $0xa,0x32(%rdx)
    0.00 :   1768:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   176e:   lea    0x0(,%rsi,8),%rax
    0.00 :   1776:   sub    %rsi,%rax
    0.00 :   1779:   lea    0x34(%rdx,%rax,8),%rax
    0.00 :   177e:   jmp    154b <nft_ct_get_eval+0x33b>
    0.00 :   1783:   cmp    $0x14,%al
    0.00 :   1785:   jne    1255 <nft_ct_get_eval+0x45>
    0.00 :   178b:   cmpw   $0x2,0x32(%rdx)
    0.00 :   1790:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   1796:   movslq %esi,%rsi
    0.00 :   1799:   movslq %r12d,%r12
    0.00 :   179c:   lea    0x0(,%rsi,8),%rax
    0.00 :   17a4:   sub    %rsi,%rax
    0.00 :   17a7:   mov    0x34(%rdx,%rax,8),%eax
    0.00 :   17ab:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   17b0:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   17b5:   cmpw   $0xa,0x32(%rdx)
    0.00 :   17ba:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   17c0:   lea    0x0(,%rsi,8),%rax
    0.00 :   17c8:   sub    %rsi,%rax
    0.00 :   17cb:   lea    0x20(%rdx,%rax,8),%rax
    0.00 :   17d0:   mov    (%rax),%rdx
    0.00 :   17d3:   mov    %rdx,0x0(%r13)
    0.00 :   17d7:   mov    0x8(%rax),%rax
    0.00 :   17db:   mov    %rax,0x8(%r13)
    0.00 :   17df:   jmp    1255 <nft_ct_get_eval+0x45>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[8fd40]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (6 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008fd40 <__pthread_mutex_unlock@GLIBC_2.2.5>:
         : 6     ___pthread_mutex_unlock():
  100.00 :   8fd40:  endbr64 // libc.so.6[8fd40]
    0.00 :   8fd44:  mov    $0x1,%esi
    0.00 :   8fd49:  jmp    8fc20 <__GI___pthread_mutex_unlock_usercnt>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   60.02 dbt2-driver[407f85]
   39.98 dbt2-driver[407f3c]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407f17 <get_nurand>:
         : 6      get_nurand():
    0.00 :   407f17: push   %rbp
    0.00 :   407f18: mov    %rsp,%rbp
    0.00 :   407f1b: push   %r12
    0.00 :   407f1d: push   %rbx
    0.00 :   407f1e: sub    $0x20,%rsp
    0.00 :   407f22: mov    %rdi,-0x18(%rbp)
    0.00 :   407f26: mov    %esi,-0x1c(%rbp)
    0.00 :   407f29: mov    %edx,-0x20(%rbp)
    0.00 :   407f2c: mov    %ecx,-0x24(%rbp)
    0.00 :   407f2f: mov    -0x1c(%rbp),%eax
    0.00 :   407f32: add    $0x1,%eax
    0.00 :   407f35: movslq %eax,%rdx
    0.00 :   407f38: mov    -0x18(%rbp),%rax
   39.98 :   407f3c: mov    %rdx,%rsi // dbt2-driver[407f3c]
    0.00 :   407f3f: mov    %rax,%rdi
    0.00 :   407f42: call   407ff5 <get_random>
    0.00 :   407f47: mov    %rax,%rbx
    0.00 :   407f4a: mov    -0x20(%rbp),%eax
    0.00 :   407f4d: movslq %eax,%r12
    0.00 :   407f50: mov    -0x24(%rbp),%eax
    0.00 :   407f53: add    $0x1,%eax
    0.00 :   407f56: movslq %eax,%rdx
    0.00 :   407f59: mov    -0x18(%rbp),%rax
    0.00 :   407f5d: mov    %rdx,%rsi
    0.00 :   407f60: mov    %rax,%rdi
    0.00 :   407f63: call   407ff5 <get_random>
    0.00 :   407f68: add    %r12,%rax
    0.00 :   407f6b: or     %rax,%rbx
    0.00 :   407f6e: mov    %rbx,%rdx
    0.00 :   407f71: mov    -0x24(%rbp),%eax
    0.00 :   407f74: sub    -0x20(%rbp),%eax
    0.00 :   407f77: add    $0x1,%eax
    0.00 :   407f7a: movslq %eax,%rcx
    0.00 :   407f7d: mov    %rdx,%rax
    0.00 :   407f80: cqto
    0.00 :   407f82: idiv   %rcx
   60.02 :   407f85: mov    %rdx,%rax // dbt2-driver[407f85]
    0.00 :   407f88: mov    %eax,%edx
    0.00 :   407f8a: mov    -0x20(%rbp),%eax
    0.00 :   407f8d: add    %edx,%eax
    0.00 :   407f8f: add    $0x20,%rsp
    0.00 :   407f93: pop    %rbx
    0.00 :   407f94: pop    %r12
    0.00 :   407f96: pop    %rbp
    0.00 :   407f97: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   79.78 libc.so.6[16f740]
   20.22 libc.so.6[16f74d]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000016f740 <__wcscpy_ssse3>:
         : 6      __wcscpy_ssse3():
   79.78 :   16f740: endbr64 // libc.so.6[16f740]
    0.00 :   16f744: mov    %rsi,%rcx
    0.00 :   16f747: mov    %rdi,%rdx
    0.00 :   16f74a: cmpl   $0x0,(%rcx)
   20.22 :   16f74d: je     16fd60 <__wcscpy_ssse3+0x620> // libc.so.6[16f74d]
    0.00 :   16f753: cmpl   $0x0,0x4(%rcx)
    0.00 :   16f757: je     16fd70 <__wcscpy_ssse3+0x630>
    0.00 :   16f75d: cmpl   $0x0,0x8(%rcx)
    0.00 :   16f761: je     16fd80 <__wcscpy_ssse3+0x640>
    0.00 :   16f767: cmpl   $0x0,0xc(%rcx)
    0.00 :   16f76b: je     16fd90 <__wcscpy_ssse3+0x650>
    0.00 :   16f771: lea    0x10(%rcx),%rsi
    0.00 :   16f775: and    $0xfffffffffffffff0,%rsi
    0.00 :   16f779: pxor   %xmm0,%xmm0
    0.00 :   16f77d: mov    (%rcx),%r9
    0.00 :   16f780: mov    %r9,(%rdx)
    0.00 :   16f783: pcmpeqd (%rsi),%xmm0
    0.00 :   16f787: mov    0x8(%rcx),%r9
    0.00 :   16f78b: mov    %r9,0x8(%rdx)
    0.00 :   16f78f: pmovmskb %xmm0,%eax
    0.00 :   16f793: sub    %rcx,%rsi
    0.00 :   16f796: test   %rax,%rax
    0.00 :   16f799: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f79f: mov    %rdx,%rax
    0.00 :   16f7a2: add    $0x10,%rdx
    0.00 :   16f7a6: and    $0xfffffffffffffff0,%rdx
    0.00 :   16f7aa: sub    %rdx,%rax
    0.00 :   16f7ad: sub    %rax,%rcx
    0.00 :   16f7b0: mov    %rcx,%rax
    0.00 :   16f7b3: and    $0xf,%rax
    0.00 :   16f7b7: mov    $0x0,%rsi
    0.00 :   16f7be: je     16f7d9 <__wcscpy_ssse3+0x99>
    0.00 :   16f7c0: cmp    $0x4,%rax
    0.00 :   16f7c4: je     16f960 <__wcscpy_ssse3+0x220>
    0.00 :   16f7ca: cmp    $0x8,%rax
    0.00 :   16f7ce: je     16faa0 <__wcscpy_ssse3+0x360>
    0.00 :   16f7d4: jmp    16fbe0 <__wcscpy_ssse3+0x4a0>
    0.00 :   16f7d9: movaps (%rcx),%xmm1
    0.00 :   16f7dc: movaps 0x10(%rcx),%xmm2
    0.00 :   16f7e0: movaps %xmm1,(%rdx)
    0.00 :   16f7e3: pcmpeqd %xmm2,%xmm0
    0.00 :   16f7e7: pmovmskb %xmm0,%eax
    0.00 :   16f7eb: add    $0x10,%rsi
    0.00 :   16f7ef: test   %eax,%eax
    0.00 :   16f7f1: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f7f7: movaps 0x10(%rcx,%rsi,1),%xmm3
    0.00 :   16f7fc: movaps %xmm2,(%rdx,%rsi,1)
    0.00 :   16f800: pcmpeqd %xmm3,%xmm0
    0.00 :   16f804: pmovmskb %xmm0,%eax
    0.00 :   16f808: add    $0x10,%rsi
    0.00 :   16f80c: test   %eax,%eax
    0.00 :   16f80e: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f814: movaps 0x10(%rcx,%rsi,1),%xmm4
    0.00 :   16f819: movaps %xmm3,(%rdx,%rsi,1)
    0.00 :   16f81d: pcmpeqd %xmm4,%xmm0
    0.00 :   16f821: pmovmskb %xmm0,%eax
    0.00 :   16f825: add    $0x10,%rsi
    0.00 :   16f829: test   %eax,%eax
    0.00 :   16f82b: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f831: movaps 0x10(%rcx,%rsi,1),%xmm1
    0.00 :   16f836: movaps %xmm4,(%rdx,%rsi,1)
    0.00 :   16f83a: pcmpeqd %xmm1,%xmm0
    0.00 :   16f83e: pmovmskb %xmm0,%eax
    0.00 :   16f842: add    $0x10,%rsi
    0.00 :   16f846: test   %eax,%eax
    0.00 :   16f848: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f84e: movaps 0x10(%rcx,%rsi,1),%xmm2
    0.00 :   16f853: movaps %xmm1,(%rdx,%rsi,1)
    0.00 :   16f857: pcmpeqd %xmm2,%xmm0
    0.00 :   16f85b: pmovmskb %xmm0,%eax
    0.00 :   16f85f: add    $0x10,%rsi
    0.00 :   16f863: test   %eax,%eax
    0.00 :   16f865: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f86b: movaps 0x10(%rcx,%rsi,1),%xmm3
    0.00 :   16f870: movaps %xmm2,(%rdx,%rsi,1)
    0.00 :   16f874: pcmpeqd %xmm3,%xmm0
    0.00 :   16f878: pmovmskb %xmm0,%eax
    0.00 :   16f87c: add    $0x10,%rsi
    0.00 :   16f880: test   %eax,%eax
    0.00 :   16f882: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f888: movaps %xmm3,(%rdx,%rsi,1)
    0.00 :   16f88c: mov    %rcx,%rax
    0.00 :   16f88f: lea    0x10(%rcx,%rsi,1),%rcx
    0.00 :   16f894: and    $0xffffffffffffffc0,%rcx
    0.00 :   16f898: sub    %rcx,%rax
    0.00 :   16f89b: sub    %rax,%rdx
    0.00 :   16f89e: mov    $0xffffffffffffffc0,%rsi
    0.00 :   16f8a5: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   16f8b0: movaps (%rcx),%xmm2
    0.00 :   16f8b3: movaps %xmm2,%xmm4
    0.00 :   16f8b6: movaps 0x10(%rcx),%xmm5
    0.00 :   16f8ba: movaps 0x20(%rcx),%xmm3
    0.00 :   16f8be: movaps %xmm3,%xmm6
    0.00 :   16f8c1: movaps 0x30(%rcx),%xmm7
    0.00 :   16f8c5: pminub %xmm5,%xmm2
    0.00 :   16f8c9: pminub %xmm7,%xmm3
    0.00 :   16f8cd: pminub %xmm2,%xmm3
    0.00 :   16f8d1: pcmpeqd %xmm0,%xmm3
    0.00 :   16f8d5: pmovmskb %xmm3,%eax
    0.00 :   16f8d9: add    $0x40,%rdx
    0.00 :   16f8dd: add    $0x40,%rcx
    0.00 :   16f8e1: test   %eax,%eax
    0.00 :   16f8e3: jne    16f8f7 <__wcscpy_ssse3+0x1b7>
    0.00 :   16f8e5: movaps %xmm4,-0x40(%rdx)
    0.00 :   16f8e9: movaps %xmm5,-0x30(%rdx)
    0.00 :   16f8ed: movaps %xmm6,-0x20(%rdx)
    0.00 :   16f8f1: movaps %xmm7,-0x10(%rdx)
    0.00 :   16f8f5: jmp    16f8b0 <__wcscpy_ssse3+0x170>
    0.00 :   16f8f7: pcmpeqd %xmm4,%xmm0
    0.00 :   16f8fb: pmovmskb %xmm0,%eax
    0.00 :   16f8ff: test   %eax,%eax
    0.00 :   16f901: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f907: pcmpeqd %xmm5,%xmm0
    0.00 :   16f90b: pmovmskb %xmm0,%eax
    0.00 :   16f90f: movaps %xmm4,-0x40(%rdx)
    0.00 :   16f913: add    $0x10,%rsi
    0.00 :   16f917: test   %eax,%eax
    0.00 :   16f919: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f91f: pcmpeqd %xmm6,%xmm0
    0.00 :   16f923: pmovmskb %xmm0,%eax
    0.00 :   16f927: movaps %xmm5,-0x30(%rdx)
    0.00 :   16f92b: add    $0x10,%rsi
    0.00 :   16f92f: test   %eax,%eax
    0.00 :   16f931: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f937: movaps %xmm6,-0x20(%rdx)
    0.00 :   16f93b: pcmpeqd %xmm7,%xmm0
    0.00 :   16f93f: pmovmskb %xmm0,%eax
    0.00 :   16f943: add    $0x10,%rsi
    0.00 :   16f947: test   %eax,%eax
    0.00 :   16f949: jne    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16f94f: mov    $0xffffffffffffffc0,%rsi
    0.00 :   16f956: movaps %xmm7,-0x10(%rdx)
    0.00 :   16f95a: jmp    16f8b0 <__wcscpy_ssse3+0x170>
    0.00 :   16f95f: nop
    0.00 :   16f960: movaps -0x4(%rcx),%xmm1
    0.00 :   16f964: movaps 0xc(%rcx),%xmm2
    0.00 :   16f968: pcmpeqd %xmm2,%xmm0
    0.00 :   16f96c: pmovmskb %xmm0,%eax
    0.00 :   16f970: movaps %xmm2,%xmm3
    0.00 :   16f973: test   %eax,%eax
    0.00 :   16f975: jne    16fa89 <__wcscpy_ssse3+0x349>
    0.00 :   16f97b: palignr $0x4,%xmm1,%xmm2
    0.00 :   16f981: movaps %xmm2,(%rdx)
    0.00 :   16f984: movaps 0x1c(%rcx),%xmm2
    0.00 :   16f988: pcmpeqd %xmm2,%xmm0
    0.00 :   16f98c: add    $0x10,%rdx
    0.00 :   16f990: pmovmskb %xmm0,%eax
    0.00 :   16f994: add    $0x10,%rcx
    0.00 :   16f998: movaps %xmm2,%xmm1
    0.00 :   16f99b: test   %eax,%eax
    0.00 :   16f99d: jne    16fa89 <__wcscpy_ssse3+0x349>
    0.00 :   16f9a3: palignr $0x4,%xmm3,%xmm2
    0.00 :   16f9a9: movaps %xmm2,(%rdx)
    0.00 :   16f9ac: movaps 0x1c(%rcx),%xmm2
    0.00 :   16f9b0: pcmpeqd %xmm2,%xmm0
    0.00 :   16f9b4: add    $0x10,%rdx
    0.00 :   16f9b8: pmovmskb %xmm0,%eax
    0.00 :   16f9bc: add    $0x10,%rcx
    0.00 :   16f9c0: movaps %xmm2,%xmm3
    0.00 :   16f9c3: test   %eax,%eax
    0.00 :   16f9c5: jne    16fa89 <__wcscpy_ssse3+0x349>
    0.00 :   16f9cb: palignr $0x4,%xmm1,%xmm2
    0.00 :   16f9d1: movaps %xmm2,(%rdx)
    0.00 :   16f9d4: movaps 0x1c(%rcx),%xmm2
    0.00 :   16f9d8: pcmpeqd %xmm2,%xmm0
    0.00 :   16f9dc: add    $0x10,%rdx
    0.00 :   16f9e0: pmovmskb %xmm0,%eax
    0.00 :   16f9e4: add    $0x10,%rcx
    0.00 :   16f9e8: test   %eax,%eax
    0.00 :   16f9ea: jne    16fa89 <__wcscpy_ssse3+0x349>
    0.00 :   16f9f0: palignr $0x4,%xmm3,%xmm2
    0.00 :   16f9f6: movaps %xmm2,(%rdx)
    0.00 :   16f9f9: add    $0x1c,%rcx
    0.00 :   16f9fd: add    $0x10,%rdx
    0.00 :   16fa01: mov    %rcx,%rax
    0.00 :   16fa04: and    $0xffffffffffffffc0,%rcx
    0.00 :   16fa08: sub    %rcx,%rax
    0.00 :   16fa0b: add    $0xfffffffffffffff4,%rcx
    0.00 :   16fa0f: sub    %rax,%rdx
    0.00 :   16fa12: movaps -0x4(%rcx),%xmm1
    0.00 :   16fa16: cs nopw 0x0(%rax,%rax,1)
    0.00 :   16fa20: movaps 0xc(%rcx),%xmm2
    0.00 :   16fa24: movaps 0x1c(%rcx),%xmm3
    0.00 :   16fa28: movaps %xmm3,%xmm6
    0.00 :   16fa2b: movaps 0x2c(%rcx),%xmm4
    0.00 :   16fa2f: movaps %xmm4,%xmm7
    0.00 :   16fa32: movaps 0x3c(%rcx),%xmm5
    0.00 :   16fa36: pminub %xmm2,%xmm6
    0.00 :   16fa3a: pminub %xmm5,%xmm7
    0.00 :   16fa3e: pminub %xmm6,%xmm7
    0.00 :   16fa42: pcmpeqd %xmm0,%xmm7
    0.00 :   16fa46: pmovmskb %xmm7,%eax
    0.00 :   16fa4a: movaps %xmm5,%xmm7
    0.00 :   16fa4d: palignr $0x4,%xmm4,%xmm5
    0.00 :   16fa53: palignr $0x4,%xmm3,%xmm4
    0.00 :   16fa59: test   %eax,%eax
    0.00 :   16fa5b: jne    16f968 <__wcscpy_ssse3+0x228>
    0.00 :   16fa61: palignr $0x4,%xmm2,%xmm3
    0.00 :   16fa67: add    $0x40,%rcx
    0.00 :   16fa6b: palignr $0x4,%xmm1,%xmm2
    0.00 :   16fa71: movaps %xmm7,%xmm1
    0.00 :   16fa74: movaps %xmm5,0x30(%rdx)
    0.00 :   16fa78: movaps %xmm4,0x20(%rdx)
    0.00 :   16fa7c: movaps %xmm3,0x10(%rdx)
    0.00 :   16fa80: movaps %xmm2,(%rdx)
    0.00 :   16fa83: add    $0x40,%rdx
    0.00 :   16fa87: jmp    16fa20 <__wcscpy_ssse3+0x2e0>
    0.00 :   16fa89: movdqu -0x4(%rcx),%xmm1
    0.00 :   16fa8e: mov    $0xc,%rsi
    0.00 :   16fa95: movdqu %xmm1,-0x4(%rdx)
    0.00 :   16fa9a: jmp    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16fa9f: nop
    0.00 :   16faa0: movaps -0x8(%rcx),%xmm1
    0.00 :   16faa4: movaps 0x8(%rcx),%xmm2
    0.00 :   16faa8: pcmpeqd %xmm2,%xmm0
    0.00 :   16faac: pmovmskb %xmm0,%eax
    0.00 :   16fab0: movaps %xmm2,%xmm3
    0.00 :   16fab3: test   %eax,%eax
    0.00 :   16fab5: jne    16fbc9 <__wcscpy_ssse3+0x489>
    0.00 :   16fabb: palignr $0x8,%xmm1,%xmm2
    0.00 :   16fac1: movaps %xmm2,(%rdx)
    0.00 :   16fac4: movaps 0x18(%rcx),%xmm2
    0.00 :   16fac8: pcmpeqd %xmm2,%xmm0
    0.00 :   16facc: add    $0x10,%rdx
    0.00 :   16fad0: pmovmskb %xmm0,%eax
    0.00 :   16fad4: add    $0x10,%rcx
    0.00 :   16fad8: movaps %xmm2,%xmm1
    0.00 :   16fadb: test   %eax,%eax
    0.00 :   16fadd: jne    16fbc9 <__wcscpy_ssse3+0x489>
    0.00 :   16fae3: palignr $0x8,%xmm3,%xmm2
    0.00 :   16fae9: movaps %xmm2,(%rdx)
    0.00 :   16faec: movaps 0x18(%rcx),%xmm2
    0.00 :   16faf0: pcmpeqd %xmm2,%xmm0
    0.00 :   16faf4: add    $0x10,%rdx
    0.00 :   16faf8: pmovmskb %xmm0,%eax
    0.00 :   16fafc: add    $0x10,%rcx
    0.00 :   16fb00: movaps %xmm2,%xmm3
    0.00 :   16fb03: test   %eax,%eax
    0.00 :   16fb05: jne    16fbc9 <__wcscpy_ssse3+0x489>
    0.00 :   16fb0b: palignr $0x8,%xmm1,%xmm2
    0.00 :   16fb11: movaps %xmm2,(%rdx)
    0.00 :   16fb14: movaps 0x18(%rcx),%xmm2
    0.00 :   16fb18: pcmpeqd %xmm2,%xmm0
    0.00 :   16fb1c: add    $0x10,%rdx
    0.00 :   16fb20: pmovmskb %xmm0,%eax
    0.00 :   16fb24: add    $0x10,%rcx
    0.00 :   16fb28: test   %eax,%eax
    0.00 :   16fb2a: jne    16fbc9 <__wcscpy_ssse3+0x489>
    0.00 :   16fb30: palignr $0x8,%xmm3,%xmm2
    0.00 :   16fb36: movaps %xmm2,(%rdx)
    0.00 :   16fb39: add    $0x18,%rcx
    0.00 :   16fb3d: add    $0x10,%rdx
    0.00 :   16fb41: mov    %rcx,%rax
    0.00 :   16fb44: and    $0xffffffffffffffc0,%rcx
    0.00 :   16fb48: sub    %rcx,%rax
    0.00 :   16fb4b: add    $0xfffffffffffffff8,%rcx
    0.00 :   16fb4f: sub    %rax,%rdx
    0.00 :   16fb52: movaps -0x8(%rcx),%xmm1
    0.00 :   16fb56: cs nopw 0x0(%rax,%rax,1)
    0.00 :   16fb60: movaps 0x8(%rcx),%xmm2
    0.00 :   16fb64: movaps 0x18(%rcx),%xmm3
    0.00 :   16fb68: movaps %xmm3,%xmm6
    0.00 :   16fb6b: movaps 0x28(%rcx),%xmm4
    0.00 :   16fb6f: movaps %xmm4,%xmm7
    0.00 :   16fb72: movaps 0x38(%rcx),%xmm5
    0.00 :   16fb76: pminub %xmm2,%xmm6
    0.00 :   16fb7a: pminub %xmm5,%xmm7
    0.00 :   16fb7e: pminub %xmm6,%xmm7
    0.00 :   16fb82: pcmpeqd %xmm0,%xmm7
    0.00 :   16fb86: pmovmskb %xmm7,%eax
    0.00 :   16fb8a: movaps %xmm5,%xmm7
    0.00 :   16fb8d: palignr $0x8,%xmm4,%xmm5
    0.00 :   16fb93: palignr $0x8,%xmm3,%xmm4
    0.00 :   16fb99: test   %eax,%eax
    0.00 :   16fb9b: jne    16faa8 <__wcscpy_ssse3+0x368>
    0.00 :   16fba1: palignr $0x8,%xmm2,%xmm3
    0.00 :   16fba7: add    $0x40,%rcx
    0.00 :   16fbab: palignr $0x8,%xmm1,%xmm2
    0.00 :   16fbb1: movaps %xmm7,%xmm1
    0.00 :   16fbb4: movaps %xmm5,0x30(%rdx)
    0.00 :   16fbb8: movaps %xmm4,0x20(%rdx)
    0.00 :   16fbbc: movaps %xmm3,0x10(%rdx)
    0.00 :   16fbc0: movaps %xmm2,(%rdx)
    0.00 :   16fbc3: add    $0x40,%rdx
    0.00 :   16fbc7: jmp    16fb60 <__wcscpy_ssse3+0x420>
    0.00 :   16fbc9: mov    (%rcx),%r9
    0.00 :   16fbcc: mov    $0x8,%rsi
    0.00 :   16fbd3: mov    %r9,(%rdx)
    0.00 :   16fbd6: jmp    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16fbdb: nopl   0x0(%rax,%rax,1)
    0.00 :   16fbe0: movaps -0xc(%rcx),%xmm1
    0.00 :   16fbe4: movaps 0x4(%rcx),%xmm2
    0.00 :   16fbe8: pcmpeqd %xmm2,%xmm0
    0.00 :   16fbec: pmovmskb %xmm0,%eax
    0.00 :   16fbf0: movaps %xmm2,%xmm3
    0.00 :   16fbf3: test   %eax,%eax
    0.00 :   16fbf5: jne    16fd09 <__wcscpy_ssse3+0x5c9>
    0.00 :   16fbfb: palignr $0xc,%xmm1,%xmm2
    0.00 :   16fc01: movaps %xmm2,(%rdx)
    0.00 :   16fc04: movaps 0x14(%rcx),%xmm2
    0.00 :   16fc08: pcmpeqd %xmm2,%xmm0
    0.00 :   16fc0c: add    $0x10,%rdx
    0.00 :   16fc10: pmovmskb %xmm0,%eax
    0.00 :   16fc14: add    $0x10,%rcx
    0.00 :   16fc18: movaps %xmm2,%xmm1
    0.00 :   16fc1b: test   %eax,%eax
    0.00 :   16fc1d: jne    16fd09 <__wcscpy_ssse3+0x5c9>
    0.00 :   16fc23: palignr $0xc,%xmm3,%xmm2
    0.00 :   16fc29: movaps %xmm2,(%rdx)
    0.00 :   16fc2c: movaps 0x14(%rcx),%xmm2
    0.00 :   16fc30: pcmpeqd %xmm2,%xmm0
    0.00 :   16fc34: add    $0x10,%rdx
    0.00 :   16fc38: pmovmskb %xmm0,%eax
    0.00 :   16fc3c: add    $0x10,%rcx
    0.00 :   16fc40: movaps %xmm2,%xmm3
    0.00 :   16fc43: test   %eax,%eax
    0.00 :   16fc45: jne    16fd09 <__wcscpy_ssse3+0x5c9>
    0.00 :   16fc4b: palignr $0xc,%xmm1,%xmm2
    0.00 :   16fc51: movaps %xmm2,(%rdx)
    0.00 :   16fc54: movaps 0x14(%rcx),%xmm2
    0.00 :   16fc58: pcmpeqd %xmm2,%xmm0
    0.00 :   16fc5c: add    $0x10,%rdx
    0.00 :   16fc60: pmovmskb %xmm0,%eax
    0.00 :   16fc64: add    $0x10,%rcx
    0.00 :   16fc68: test   %eax,%eax
    0.00 :   16fc6a: jne    16fd09 <__wcscpy_ssse3+0x5c9>
    0.00 :   16fc70: palignr $0xc,%xmm3,%xmm2
    0.00 :   16fc76: movaps %xmm2,(%rdx)
    0.00 :   16fc79: add    $0x14,%rcx
    0.00 :   16fc7d: add    $0x10,%rdx
    0.00 :   16fc81: mov    %rcx,%rax
    0.00 :   16fc84: and    $0xffffffffffffffc0,%rcx
    0.00 :   16fc88: sub    %rcx,%rax
    0.00 :   16fc8b: add    $0xfffffffffffffffc,%rcx
    0.00 :   16fc8f: sub    %rax,%rdx
    0.00 :   16fc92: movaps -0xc(%rcx),%xmm1
    0.00 :   16fc96: cs nopw 0x0(%rax,%rax,1)
    0.00 :   16fca0: movaps 0x4(%rcx),%xmm2
    0.00 :   16fca4: movaps 0x14(%rcx),%xmm3
    0.00 :   16fca8: movaps %xmm3,%xmm6
    0.00 :   16fcab: movaps 0x24(%rcx),%xmm4
    0.00 :   16fcaf: movaps %xmm4,%xmm7
    0.00 :   16fcb2: movaps 0x34(%rcx),%xmm5
    0.00 :   16fcb6: pminub %xmm2,%xmm6
    0.00 :   16fcba: pminub %xmm5,%xmm7
    0.00 :   16fcbe: pminub %xmm6,%xmm7
    0.00 :   16fcc2: pcmpeqd %xmm0,%xmm7
    0.00 :   16fcc6: pmovmskb %xmm7,%eax
    0.00 :   16fcca: movaps %xmm5,%xmm7
    0.00 :   16fccd: palignr $0xc,%xmm4,%xmm5
    0.00 :   16fcd3: palignr $0xc,%xmm3,%xmm4
    0.00 :   16fcd9: test   %eax,%eax
    0.00 :   16fcdb: jne    16fbe8 <__wcscpy_ssse3+0x4a8>
    0.00 :   16fce1: palignr $0xc,%xmm2,%xmm3
    0.00 :   16fce7: add    $0x40,%rcx
    0.00 :   16fceb: palignr $0xc,%xmm1,%xmm2
    0.00 :   16fcf1: movaps %xmm7,%xmm1
    0.00 :   16fcf4: movaps %xmm5,0x30(%rdx)
    0.00 :   16fcf8: movaps %xmm4,0x20(%rdx)
    0.00 :   16fcfc: movaps %xmm3,0x10(%rdx)
    0.00 :   16fd00: movaps %xmm2,(%rdx)
    0.00 :   16fd03: add    $0x40,%rdx
    0.00 :   16fd07: jmp    16fca0 <__wcscpy_ssse3+0x560>
    0.00 :   16fd09: mov    (%rcx),%r9d
    0.00 :   16fd0c: mov    $0x4,%rsi
    0.00 :   16fd13: mov    %r9d,(%rdx)
    0.00 :   16fd16: jmp    16fd20 <__wcscpy_ssse3+0x5e0>
    0.00 :   16fd18: nopl   0x0(%rax,%rax,1)
    0.00 :   16fd20: add    %rsi,%rdx
    0.00 :   16fd23: add    %rsi,%rcx
    0.00 :   16fd26: test   %al,%al
    0.00 :   16fd28: je     16fd40 <__wcscpy_ssse3+0x600>
    0.00 :   16fd2a: test   $0x1,%al
    0.00 :   16fd2c: jne    16fd60 <__wcscpy_ssse3+0x620>
    0.00 :   16fd2e: mov    (%rcx),%rax
    0.00 :   16fd31: mov    %rax,(%rdx)
    0.00 :   16fd34: mov    %rdi,%rax
    0.00 :   16fd37: ret
    0.00 :   16fd38: nopl   0x0(%rax,%rax,1)
    0.00 :   16fd40: test   $0x1,%ah
    0.00 :   16fd43: jne    16fd80 <__wcscpy_ssse3+0x640>
    0.00 :   16fd45: mov    (%rcx),%rax
    0.00 :   16fd48: mov    %rax,(%rdx)
    0.00 :   16fd4b: mov    0x8(%rcx),%rax
    0.00 :   16fd4f: mov    %rax,0x8(%rdx)
    0.00 :   16fd53: mov    %rdi,%rax
    0.00 :   16fd56: ret
    0.00 :   16fd57: nopw   0x0(%rax,%rax,1)
    0.00 :   16fd60: mov    (%rcx),%eax
    0.00 :   16fd62: mov    %eax,(%rdx)
    0.00 :   16fd64: mov    %rdi,%rax
    0.00 :   16fd67: ret
    0.00 :   16fd68: nopl   0x0(%rax,%rax,1)
    0.00 :   16fd70: mov    (%rcx),%rax
    0.00 :   16fd73: mov    %rax,(%rdx)
    0.00 :   16fd76: mov    %rdi,%rax
    0.00 :   16fd79: ret
    0.00 :   16fd7a: nopw   0x0(%rax,%rax,1)
    0.00 :   16fd80: mov    (%rcx),%rax
    0.00 :   16fd83: mov    %rax,(%rdx)
    0.00 :   16fd86: mov    0x8(%rcx),%eax
    0.00 :   16fd89: mov    %eax,0x8(%rdx)
    0.00 :   16fd8c: mov    %rdi,%rax
    0.00 :   16fd8f: ret
    0.00 :   16fd90: mov    (%rcx),%rax
    0.00 :   16fd93: mov    %rax,(%rdx)
    0.00 :   16fd96: mov    0x8(%rcx),%rax
    0.00 :   16fd9a: mov    %rax,0x8(%rdx)
    0.00 :   16fd9e: mov    %rdi,%rax
    0.00 :   16fda1: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   46.51 [virtio_net][440]
   33.94 [virtio_net][447]
   19.54 [virtio_net][46c]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (5 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000440 <virtnet_poll_tx>:
         : 6   virtnet_poll_tx():
   46.51 :   440:    call   445 <virtnet_poll_tx+0x5> // [virtio_net][440]
    0.00 :   445:    push   %r14
   33.94 :   447:    push   %r13 // [virtio_net][447]
    0.00 :   449:    push   %r12
    0.00 :   44b:    push   %rbp
    0.00 :   44c:    lea    -0x2c0(%rdi),%rbp
    0.00 :   453:    push   %rbx
    0.00 :   454:    mov    -0x2c0(%rdi),%rax
    0.00 :   45b:    mov    %rdi,%rbx
    0.00 :   45e:    mov    0x20(%rax),%rdx
    0.00 :   462:    mov    0x28(%rax),%eax
    0.00 :   465:    mov    0x330(%rdx),%rdx
   19.54 :   46c:    sub    $0x1,%eax // [virtio_net][46c]
    0.00 :   46f:    shr    %eax
    0.00 :   471:    movzwl 0x2e(%rdx),%ecx
    0.00 :   475:    movzwl 0x30(%rdx),%edi
    0.00 :   479:    mov    %ecx,%esi
    0.00 :   47b:    sub    %edi,%esi
    0.00 :   47d:    cmp    %eax,%esi
    0.00 :   47f:    jg     489 <virtnet_poll_tx+0x49>
    0.00 :   481:    cmp    %eax,%ecx
    0.00 :   483:    jg     530 <virtnet_poll_tx+0xf0>
    0.00 :   489:    mov    0x10(%rdx),%rdx
    0.00 :   48d:    lea    (%rax,%rax,4),%r12
    0.00 :   491:    shl    $0x6,%r12
    0.00 :   495:    add    0x400(%rdx),%r12
    0.00 :   49c:    mov    %gs:0x0(%rip),%r14d        # 4a4 <virtnet_poll_tx+0x64>
    0.00 :   4a4:    lea    0x80(%r12),%r13
    0.00 :   4ac:    mov    %r13,%rdi
    0.00 :   4af:    call   4b4 <virtnet_poll_tx+0x74>
    0.00 :   4b4:    mov    %r14d,0x84(%r12)
    0.00 :   4bc:    mov    -0x2c0(%rbx),%rdi
    0.00 :   4c3:    call   4c8 <virtnet_poll_tx+0x88>
    0.00 :   4c8:    mov    %rbp,%rdi
    0.00 :   4cb:    mov    $0x1,%esi
    0.00 :   4d0:    call   390 <free_old_xmit_skbs>
    0.00 :   4d5:    mov    -0x2c0(%rbx),%rdi
    0.00 :   4dc:    cmpl   $0x12,0x2c(%rdi)
    0.00 :   4e0:    ja     578 <virtnet_poll_tx+0x138>
    0.00 :   4e6:    call   4eb <virtnet_poll_tx+0xab>
    0.00 :   4eb:    xor    %esi,%esi
    0.00 :   4ed:    mov    %rbx,%rdi
    0.00 :   4f0:    mov    %eax,%ebp
    0.00 :   4f2:    call   4f7 <virtnet_poll_tx+0xb7>
    0.00 :   4f7:    test   %al,%al
    0.00 :   4f9:    je     549 <virtnet_poll_tx+0x109>
    0.00 :   4fb:    movl   $0xffffffff,0x84(%r12)
    0.00 :   507:    mov    %r13,%rdi
    0.00 :   50a:    call   50f <virtnet_poll_tx+0xcf>
    0.00 :   50f:    mov    -0x2c0(%rbx),%rdi
    0.00 :   516:    mov    %ebp,%esi
    0.00 :   518:    call   51d <virtnet_poll_tx+0xdd>
    0.00 :   51d:    test   %al,%al
    0.00 :   51f:    jne    58c <virtnet_poll_tx+0x14c>
    0.00 :   521:    pop    %rbx
    0.00 :   522:    xor    %eax,%eax
    0.00 :   524:    pop    %rbp
    0.00 :   525:    pop    %r12
    0.00 :   527:    pop    %r13
    0.00 :   529:    pop    %r14
    0.00 :   52b:    jmp    530 <virtnet_poll_tx+0xf0>
    0.00 :   530:    mov    %rbx,%rdi
    0.00 :   533:    xor    %esi,%esi
    0.00 :   535:    call   53a <virtnet_poll_tx+0xfa>
    0.00 :   53a:    xor    %eax,%eax
    0.00 :   53c:    pop    %rbx
    0.00 :   53d:    pop    %rbp
    0.00 :   53e:    pop    %r12
    0.00 :   540:    pop    %r13
    0.00 :   542:    pop    %r14
    0.00 :   544:    jmp    549 <virtnet_poll_tx+0x109>
    0.00 :   549:    mov    -0x2c0(%rbx),%rdi
    0.00 :   550:    call   555 <virtnet_poll_tx+0x115>
    0.00 :   555:    mov    %r13,%rdi
    0.00 :   558:    movl   $0xffffffff,0x84(%r12)
    0.00 :   564:    call   569 <virtnet_poll_tx+0x129>
    0.00 :   569:    xor    %eax,%eax
    0.00 :   56b:    pop    %rbx
    0.00 :   56c:    pop    %rbp
    0.00 :   56d:    pop    %r12
    0.00 :   56f:    pop    %r13
    0.00 :   571:    pop    %r14
    0.00 :   573:    jmp    578 <virtnet_poll_tx+0x138>
    0.00 :   578:    mov    %r12,%rdi
    0.00 :   57b:    call   580 <virtnet_poll_tx+0x140>
    0.00 :   580:    mov    -0x2c0(%rbx),%rdi
    0.00 :   587:    jmp    4e6 <virtnet_poll_tx+0xa6>
    0.00 :   58c:    mov    %rbx,%rdi
    0.00 :   58f:    call   594 <virtnet_poll_tx+0x154>
    0.00 :   594:    test   %al,%al
    0.00 :   596:    je     521 <virtnet_poll_tx+0xe1>
    0.00 :   598:    mov    %gs:0x0(%rip),%ebp        # 59f <virtnet_poll_tx+0x15f>
    0.00 :   59f:    mov    %r13,%rdi
    0.00 :   5a2:    call   5a7 <virtnet_poll_tx+0x167>
    0.00 :   5a7:    mov    %ebp,0x84(%r12)
    0.00 :   5af:    mov    -0x2c0(%rbx),%rdi
    0.00 :   5b6:    call   5bb <virtnet_poll_tx+0x17b>
    0.00 :   5bb:    mov    %r13,%rdi
    0.00 :   5be:    movl   $0xffffffff,0x84(%r12)
    0.00 :   5ca:    call   5cf <virtnet_poll_tx+0x18f>
    0.00 :   5cf:    mov    %rbx,%rdi
    0.00 :   5d2:    call   5d7 <virtnet_poll_tx+0x197>
    0.00 :   5d7:    jmp    521 <virtnet_poll_tx+0xe1>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   59.05 dbt2-driver[407704]
   15.11 dbt2-driver[40771b]
   13.37 dbt2-driver[4076c9]
   12.47 dbt2-driver[40772e]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (6 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004076c9 <_receive>:
         : 6      _receive():
   13.37 :   4076c9: push   %rbp // dbt2-driver[4076c9]
    0.00 :   4076ca: mov    %rsp,%rbp
    0.00 :   4076cd: sub    $0x20,%rsp
    0.00 :   4076d1: mov    %edi,-0x14(%rbp)
    0.00 :   4076d4: mov    %rsi,-0x20(%rbp)
    0.00 :   4076d8: mov    %edx,-0x18(%rbp)
    0.00 :   4076db: mov    -0x18(%rbp),%eax
    0.00 :   4076de: mov    %eax,-0x8(%rbp)
    0.00 :   4076e1: movl   $0x0,-0x4(%rbp)
    0.00 :   4076e8: mov    -0x8(%rbp),%eax
    0.00 :   4076eb: movslq %eax,%rdx
    0.00 :   4076ee: mov    -0x20(%rbp),%rsi
    0.00 :   4076f2: mov    -0x14(%rbp),%eax
    0.00 :   4076f5: mov    $0x0,%ecx
    0.00 :   4076fa: mov    %eax,%edi
    0.00 :   4076fc: call   407050 <recv@plt>
    0.00 :   407701: mov    %eax,-0xc(%rbp)
   59.05 :   407704: cmpl   $0xffffffff,-0xc(%rbp) // dbt2-driver[407704]
    0.00 :   407708: jne    40771b <_receive+0x52>
    0.00 :   40770a: mov    $0x411130,%edi
    0.00 :   40770f: call   4072d0 <perror@plt>
    0.00 :   407714: mov    $0xffffffff,%eax
    0.00 :   407719: jmp    407748 <_receive+0x7f>
   15.11 :   40771b: cmpl   $0x0,-0xc(%rbp) // dbt2-driver[40771b]
    0.00 :   40771f: jne    407728 <_receive+0x5f>
    0.00 :   407721: mov    $0xfffffffb,%eax
    0.00 :   407726: jmp    407748 <_receive+0x7f>
    0.00 :   407728: mov    -0xc(%rbp),%eax
    0.00 :   40772b: add    %eax,-0x4(%rbp)
   12.47 :   40772e: mov    -0xc(%rbp),%eax // dbt2-driver[40772e]
    0.00 :   407731: cltq
    0.00 :   407733: add    %rax,-0x20(%rbp)
    0.00 :   407737: mov    -0xc(%rbp),%eax
    0.00 :   40773a: sub    %eax,-0x8(%rbp)
    0.00 :   40773d: mov    -0x4(%rbp),%eax
    0.00 :   407740: cmp    -0x18(%rbp),%eax
    0.00 :   407743: jne    4076e8 <_receive+0x1f>
    0.00 :   407745: mov    -0x4(%rbp),%eax
    0.00 :   407748: leave
    0.00 :   407749: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   62.36 libc.so.6[c0370]
   20.92 libc.so.6[c039f]
   16.72 libc.so.6[c0363]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000c0340 <__wcsmbs_clone_conv>:
         : 6     __wcsmbs_clone_conv():
    0.00 :   c0340:  endbr64
    0.00 :   c0344:  push   %rbp
    0.00 :   c0345:  push   %rbx
    0.00 :   c0346:  mov    %rdi,%rbx
    0.00 :   c0349:  sub    $0x8,%rsp
    0.00 :   c034d:  mov    0x112c1c(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
    0.00 :   c0354:  mov    %fs:(%rax),%rax
    0.00 :   c0358:  mov    (%rax),%rdi
    0.00 :   c035b:  mov    0x20(%rdi),%rbp
    0.00 :   c035f:  mov    0x0(%rbp),%rax
   16.72 :   c0363:  test   %rax,%rax // libc.so.6[c0363]
    0.00 :   c0366:  je     c0410 <__wcsmbs_clone_conv+0xd0>
    0.00 :   c036c:  movdqu (%rax),%xmm0
   62.36 :   c0370:  mov    $0x1,%edx // libc.so.6[c0370]
    0.00 :   c0375:  movups %xmm0,(%rbx)
    0.00 :   c0378:  movdqu 0x10(%rax),%xmm1
    0.00 :   c037d:  xor    %eax,%eax
    0.00 :   c037f:  movups %xmm1,0x10(%rbx)
    0.00 :   c0383:  lock cmpxchg %edx,0x1146a5(%rip)        # 1d4a30 <__gconv_lock>
    0.00 :   c038b:  jne    c0420 <__wcsmbs_clone_conv+0xe0>
    0.00 :   c0391:  mov    (%rbx),%rcx
    0.00 :   c0394:  mov    0x10(%rbx),%rdx
    0.00 :   c0398:  cmpq   $0x0,(%rcx)
    0.00 :   c039c:  mov    (%rdx),%rsi
   20.92 :   c039f:  je     c03e0 <__wcsmbs_clone_conv+0xa0> // libc.so.6[c039f]
    0.00 :   c03a1:  mov    0x10(%rcx),%eax
    0.00 :   c03a4:  add    $0x1,%eax
    0.00 :   c03a7:  mov    %eax,0x10(%rcx)
    0.00 :   c03aa:  seto   %bl
    0.00 :   c03ad:  test   %rsi,%rsi
    0.00 :   c03b0:  je     c03c0 <__wcsmbs_clone_conv+0x80>
    0.00 :   c03b2:  mov    0x10(%rdx),%eax
    0.00 :   c03b5:  add    $0x1,%eax
    0.00 :   c03b8:  mov    %eax,0x10(%rdx)
    0.00 :   c03bb:  seto   %al
    0.00 :   c03be:  or     %eax,%ebx
    0.00 :   c03c0:  xor    %eax,%eax
    0.00 :   c03c2:  xchg   %eax,0x114668(%rip)        # 1d4a30 <__gconv_lock>
    0.00 :   c03c8:  cmp    $0x1,%eax
    0.00 :   c03cb:  jg     c0438 <__wcsmbs_clone_conv+0xf8>
    0.00 :   c03cd:  test   %bl,%bl
    0.00 :   c03cf:  jne    c0446 <__wcsmbs_clone_conv+0x106>
    0.00 :   c03d1:  add    $0x8,%rsp
    0.00 :   c03d5:  pop    %rbx
    0.00 :   c03d6:  pop    %rbp
    0.00 :   c03d7:  ret
    0.00 :   c03d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   c03e0:  xor    %ebx,%ebx
    0.00 :   c03e2:  test   %rsi,%rsi
    0.00 :   c03e5:  jne    c03b2 <__wcsmbs_clone_conv+0x72>
    0.00 :   c03e7:  xor    %eax,%eax
    0.00 :   c03e9:  xchg   %eax,0x114641(%rip)        # 1d4a30 <__gconv_lock>
    0.00 :   c03ef:  cmp    $0x1,%eax
    0.00 :   c03f2:  jle    c03d1 <__wcsmbs_clone_conv+0x91>
    0.00 :   c03f4:  add    $0x8,%rsp
    0.00 :   c03f8:  lea    0x114631(%rip),%rdi        # 1d4a30 <__gconv_lock>
    0.00 :   c03ff:  pop    %rbx
    0.00 :   c0400:  pop    %rbp
    0.00 :   c0401:  jmp    87f80 <__lll_lock_wake_private>
    0.00 :   c0406:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   c0410:  call   c0040 <__wcsmbs_load_conv>
    0.00 :   c0415:  mov    0x0(%rbp),%rax
    0.00 :   c0419:  jmp    c036c <__wcsmbs_clone_conv+0x2c>
    0.00 :   c041e:  xchg   %ax,%ax
    0.00 :   c0420:  lea    0x114609(%rip),%rdi        # 1d4a30 <__gconv_lock>
    0.00 :   c0427:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   c042c:  jmp    c0391 <__wcsmbs_clone_conv+0x51>
    0.00 :   c0431:  nopl   0x0(%rax)
    0.00 :   c0438:  lea    0x1145f1(%rip),%rdi        # 1d4a30 <__gconv_lock>
    0.00 :   c043f:  call   87f80 <__lll_lock_wake_private>
    0.00 :   c0444:  jmp    c03cd <__wcsmbs_clone_conv+0x8d>
    0.00 :   c0446:  lea    0xddab3(%rip),%rdi        # 19df00 <aliasfile.0+0x24b8>
    0.00 :   c044d:  call   810e0 <__libc_fatal>

Sorted summary for file [vdso]
----------------------------------------------

   59.71 [vdso][948]
   40.29 [vdso][930]
 Percent |	Source code & Disassembly of [vdso] for cycles (5 samples, percent: local period)
-------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000930 <__vdso_time@@LINUX_2.6>:
   40.29 :   930:    lea    -0x18b7(%rip),%rax        # fffffffffffff080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe430> // [vdso][930]
    0.00 :   937:    lea    -0x48be(%rip),%rdx        # ffffffffffffc080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb430>
    0.00 :   93e:    cmpl   $0x7fffffff,-0x48c4(%rip)        # ffffffffffffc084 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb434>
   59.71 :   948:    cmovne %rdx,%rax // [vdso][948]
    0.00 :   94c:    mov    0x20(%rax),%rax
    0.00 :   950:    test   %rdi,%rdi
    0.00 :   953:    je     958 <__vdso_time@@LINUX_2.6+0x28>
    0.00 :   955:    mov    %rax,(%rdi)
    0.00 :   958:    ret
    0.00 :   959:    int3

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   51.35 [virtio_net][1e86]
   27.63 [virtio_net][1e67]
   21.02 [virtio_net][1e7b]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (4 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001e50 <skb_xmit_done>:
         : 6    skb_xmit_done():
    0.00 :   1e50:   call   1e55 <skb_xmit_done+0x5>
    0.00 :   1e55:   push   %r12
    0.00 :   1e57:   push   %rbp
    0.00 :   1e58:   mov    %rdi,%rbp
    0.00 :   1e5b:   push   %rbx
    0.00 :   1e5c:   mov    0x20(%rdi),%rax
    0.00 :   1e60:   mov    0x330(%rax),%r12
   27.63 :   1e67:   mov    0x28(%rdi),%eax // [virtio_net][1e67]
    0.00 :   1e6a:   lea    -0x1(%rax),%ebx
    0.00 :   1e6d:   shr    %ebx
    0.00 :   1e6f:   imul   $0x458,%rbx,%rbx
    0.00 :   1e76:   add    0x18(%r12),%rbx
   21.02 :   1e7b:   call   1e80 <skb_xmit_done+0x30> // [virtio_net][1e7b]
    0.00 :   1e80:   mov    0x2d8(%rbx),%eax
   51.35 :   1e86:   test   %eax,%eax // [virtio_net][1e86]
    0.00 :   1e88:   je     1ea6 <skb_xmit_done+0x56>
    0.00 :   1e8a:   add    $0x2c0,%rbx
    0.00 :   1e91:   mov    %rbx,%rdi
    0.00 :   1e94:   call   1e99 <skb_xmit_done+0x49>
    0.00 :   1e99:   test   %al,%al
    0.00 :   1e9b:   jne    1ece <skb_xmit_done+0x7e>
    0.00 :   1e9d:   pop    %rbx
    0.00 :   1e9e:   pop    %rbp
    0.00 :   1e9f:   pop    %r12
    0.00 :   1ea1:   jmp    1ea6 <skb_xmit_done+0x56>
    0.00 :   1ea6:   mov    0x28(%rbp),%eax
    0.00 :   1ea9:   mov    0x10(%r12),%rdx
    0.00 :   1eae:   pop    %rbx
    0.00 :   1eaf:   pop    %rbp
    0.00 :   1eb0:   sub    $0x1,%eax
    0.00 :   1eb3:   pop    %r12
    0.00 :   1eb5:   shr    %eax
    0.00 :   1eb7:   movzwl %ax,%eax
    0.00 :   1eba:   lea    (%rax,%rax,4),%rdi
    0.00 :   1ebe:   shl    $0x6,%rdi
    0.00 :   1ec2:   add    0x400(%rdx),%rdi
    0.00 :   1ec9:   jmp    1ece <skb_xmit_done+0x7e>
    0.00 :   1ece:   mov    %rbp,%rdi
    0.00 :   1ed1:   call   1ed6 <skb_xmit_done+0x86>
    0.00 :   1ed6:   mov    %rbx,%rdi
    0.00 :   1ed9:   pop    %rbx
    0.00 :   1eda:   pop    %rbp
    0.00 :   1edb:   pop    %r12
    0.00 :   1edd:   jmp    1ee2 <skb_xmit_done+0x92>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   58.75 libc.so.6[52d10]
   41.25 libc.so.6[52c40]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000052c40 <_itoa_word>:
         : 6     _itoa_word():
   41.25 :   52c40:  endbr64 // libc.so.6[52c40]
    0.00 :   52c44:  test   %ecx,%ecx
    0.00 :   52c46:  lea    0x1487f3(%rip),%r8        # 19b440 <_itoa_lower_digits>
    0.00 :   52c4d:  lea    0x14882c(%rip),%rcx        # 19b480 <__GI__itoa_upper_digits>
    0.00 :   52c54:  mov    %rsi,%rax
    0.00 :   52c57:  cmovne %rcx,%r8
    0.00 :   52c5b:  cmp    $0xa,%edx
    0.00 :   52c5e:  je     52ce0 <_itoa_word+0xa0>
    0.00 :   52c64:  cmp    $0x10,%edx
    0.00 :   52c67:  je     52c98 <_itoa_word+0x58>
    0.00 :   52c69:  mov    %edx,%esi
    0.00 :   52c6b:  mov    %rax,%rcx
    0.00 :   52c6e:  cmp    $0x8,%edx
    0.00 :   52c71:  je     52cc0 <_itoa_word+0x80>
    0.00 :   52c73:  mov    %rdi,%rax
    0.00 :   52c76:  xor    %edx,%edx
    0.00 :   52c78:  sub    $0x1,%rcx
    0.00 :   52c7c:  div    %rsi
    0.00 :   52c7f:  movzbl (%r8,%rdx,1),%edx
    0.00 :   52c84:  mov    %dl,(%rcx)
    0.00 :   52c86:  mov    %rdi,%rdx
    0.00 :   52c89:  mov    %rax,%rdi
    0.00 :   52c8c:  cmp    %rsi,%rdx
    0.00 :   52c8f:  jae    52c73 <_itoa_word+0x33>
    0.00 :   52c91:  mov    %rcx,%rax
    0.00 :   52c94:  ret
    0.00 :   52c95:  nopl   (%rax)
    0.00 :   52c98:  mov    %rdi,%rdx
    0.00 :   52c9b:  sub    $0x1,%rax
    0.00 :   52c9f:  and    $0xf,%edx
    0.00 :   52ca2:  movzbl (%r8,%rdx,1),%edx
    0.00 :   52ca7:  mov    %dl,(%rax)
    0.00 :   52ca9:  mov    %rdi,%rdx
    0.00 :   52cac:  shr    $0x4,%rdi
    0.00 :   52cb0:  cmp    $0xf,%rdx
    0.00 :   52cb4:  ja     52c98 <_itoa_word+0x58>
    0.00 :   52cb6:  mov    %rax,%rcx
    0.00 :   52cb9:  mov    %rcx,%rax
    0.00 :   52cbc:  ret
    0.00 :   52cbd:  nopl   (%rax)
    0.00 :   52cc0:  mov    %rdi,%rdx
    0.00 :   52cc3:  sub    $0x1,%rax
    0.00 :   52cc7:  and    $0x7,%edx
    0.00 :   52cca:  movzbl (%r8,%rdx,1),%edx
    0.00 :   52ccf:  mov    %dl,(%rax)
    0.00 :   52cd1:  mov    %rdi,%rdx
    0.00 :   52cd4:  shr    $0x3,%rdi
    0.00 :   52cd8:  cmp    $0x7,%rdx
    0.00 :   52cdc:  ja     52cc0 <_itoa_word+0x80>
    0.00 :   52cde:  jmp    52cb6 <_itoa_word+0x76>
    0.00 :   52ce0:  movabs $0xcccccccccccccccd,%r9
    0.00 :   52cea:  mov    %rsi,%rcx
    0.00 :   52ced:  nopl   (%rax)
    0.00 :   52cf0:  mov    %rdi,%rax
    0.00 :   52cf3:  mov    %rdi,%rsi
    0.00 :   52cf6:  sub    $0x1,%rcx
    0.00 :   52cfa:  mul    %r9
    0.00 :   52cfd:  shr    $0x3,%rdx
    0.00 :   52d01:  lea    (%rdx,%rdx,4),%rax
    0.00 :   52d05:  add    %rax,%rax
    0.00 :   52d08:  sub    %rax,%rsi
    0.00 :   52d0b:  movzbl (%r8,%rsi,1),%eax
   58.75 :   52d10:  mov    %al,(%rcx) // libc.so.6[52d10]
    0.00 :   52d12:  mov    %rdi,%rax
    0.00 :   52d15:  mov    %rdx,%rdi
    0.00 :   52d18:  cmp    $0x9,%rax
    0.00 :   52d1c:  ja     52cf0 <_itoa_word+0xb0>
    0.00 :   52d1e:  mov    %rcx,%rax
    0.00 :   52d21:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[82ac9]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000826b0 <_IO_file_seekoff@@GLIBC_2.2.5>:
         : 6     __GI__IO_file_seekoff():
    0.00 :   826b0:  endbr64
    0.00 :   826b4:  push   %r15
    0.00 :   826b6:  push   %r14
    0.00 :   826b8:  push   %r13
    0.00 :   826ba:  push   %r12
    0.00 :   826bc:  push   %rbp
    0.00 :   826bd:  push   %rbx
    0.00 :   826be:  mov    %rdi,%rbx
    0.00 :   826c1:  sub    $0xb8,%rsp
    0.00 :   826c8:  mov    %fs:0x28,%rax
    0.00 :   826d1:  mov    %rax,0xa8(%rsp)
    0.00 :   826d9:  xor    %eax,%eax
    0.00 :   826db:  test   %ecx,%ecx
    0.00 :   826dd:  je     82a00 <_IO_file_seekoff@@GLIBC_2.2.5+0x350>
    0.00 :   826e3:  mov    %edx,%r12d
    0.00 :   826e6:  mov    0x28(%rdi),%rax
    0.00 :   826ea:  mov    0x20(%rdi),%rdx
    0.00 :   826ee:  mov    %rsi,%rbp
    0.00 :   826f1:  mov    0x10(%rdi),%rcx
    0.00 :   826f5:  xor    %r15d,%r15d
    0.00 :   826f8:  cmp    %rcx,0x18(%rdi)
    0.00 :   826fc:  je     829a8 <_IO_file_seekoff@@GLIBC_2.2.5+0x2f8>
    0.00 :   82702:  cmp    %rax,%rdx
    0.00 :   82705:  jb     828f0 <_IO_file_seekoff@@GLIBC_2.2.5+0x240>
    0.00 :   8270b:  testl  $0x800,(%rbx)
    0.00 :   82711:  jne    828f0 <_IO_file_seekoff@@GLIBC_2.2.5+0x240>
    0.00 :   82717:  cmpq   $0x0,0x38(%rbx)
    0.00 :   8271c:  je     829c0 <_IO_file_seekoff@@GLIBC_2.2.5+0x310>
    0.00 :   82722:  cmp    $0x1,%r12d
    0.00 :   82726:  je     82790 <_IO_file_seekoff@@GLIBC_2.2.5+0xe0>
    0.00 :   82728:  cmp    $0x2,%r12d
    0.00 :   8272c:  jne    827b8 <_IO_file_seekoff@@GLIBC_2.2.5+0x108>
    0.00 :   82732:  mov    0xd8(%rbx),%rax
    0.00 :   82739:  lea    0x14d2c0(%rip),%r14        # 1cfa00 <_IO_helper_jumps>
    0.00 :   82740:  lea    0x14e021(%rip),%r13        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   82747:  sub    %r14,%r13
    0.00 :   8274a:  mov    %rax,%rdx
    0.00 :   8274d:  sub    %r14,%rdx
    0.00 :   82750:  cmp    %r13,%rdx
    0.00 :   82753:  jae    82c10 <_IO_file_seekoff@@GLIBC_2.2.5+0x560>
    0.00 :   82759:  lea    0x10(%rsp),%rsi
    0.00 :   8275e:  mov    %rbx,%rdi
    0.00 :   82761:  call   *0x90(%rax)
    0.00 :   82767:  test   %eax,%eax
    0.00 :   82769:  jne    82928 <_IO_file_seekoff@@GLIBC_2.2.5+0x278>
    0.00 :   8276f:  mov    0x28(%rsp),%eax
    0.00 :   82773:  and    $0xf000,%eax
    0.00 :   82778:  cmp    $0x8000,%eax
    0.00 :   8277d:  jne    82928 <_IO_file_seekoff@@GLIBC_2.2.5+0x278>
    0.00 :   82783:  add    0x40(%rsp),%rbp
    0.00 :   82788:  jmp    827b5 <_IO_file_seekoff@@GLIBC_2.2.5+0x105>
    0.00 :   8278a:  nopw   0x0(%rax,%rax,1)
    0.00 :   82790:  mov    0x10(%rbx),%rax
    0.00 :   82794:  sub    0x8(%rbx),%rax
    0.00 :   82798:  sub    %rax,%rbp
    0.00 :   8279b:  mov    0x90(%rbx),%rax
    0.00 :   827a2:  cmp    $0xffffffffffffffff,%rax
    0.00 :   827a6:  je     82910 <_IO_file_seekoff@@GLIBC_2.2.5+0x260>
    0.00 :   827ac:  add    %rax,%rbp
    0.00 :   827af:  js     82a85 <_IO_file_seekoff@@GLIBC_2.2.5+0x3d5>
    0.00 :   827b5:  xor    %r12d,%r12d
    0.00 :   827b8:  mov    %rbx,%rdi
    0.00 :   827bb:  call   84a20 <_IO_free_backup_area>
    0.00 :   827c0:  mov    0x90(%rbx),%rsi
    0.00 :   827c7:  mov    (%rbx),%eax
    0.00 :   827c9:  cmp    $0xffffffffffffffff,%rsi
    0.00 :   827cd:  je     82800 <_IO_file_seekoff@@GLIBC_2.2.5+0x150>
    0.00 :   827cf:  cmpq   $0x0,0x18(%rbx)
    0.00 :   827d4:  je     82800 <_IO_file_seekoff@@GLIBC_2.2.5+0x150>
    0.00 :   827d6:  test   $0x1,%ah
    0.00 :   827d9:  jne    82800 <_IO_file_seekoff@@GLIBC_2.2.5+0x150>
    0.00 :   827db:  mov    0x38(%rbx),%rdx
    0.00 :   827df:  mov    %rdx,%rcx
    0.00 :   827e2:  sub    0x10(%rbx),%rcx
    0.00 :   827e6:  add    %rsi,%rcx
    0.00 :   827e9:  cmp    %rcx,%rbp
    0.00 :   827ec:  jl     82800 <_IO_file_seekoff@@GLIBC_2.2.5+0x150>
    0.00 :   827ee:  cmp    %rbp,%rsi
    0.00 :   827f1:  jg     82b78 <_IO_file_seekoff@@GLIBC_2.2.5+0x4c8>
    0.00 :   827f7:  nopw   0x0(%rax,%rax,1)
    0.00 :   82800:  lea    0x14d1f9(%rip),%r14        # 1cfa00 <_IO_helper_jumps>
    0.00 :   82807:  lea    0x14df5a(%rip),%r13        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   8280e:  sub    %r14,%r13
    0.00 :   82811:  test   $0x4,%al
    0.00 :   82813:  jne    82928 <_IO_file_seekoff@@GLIBC_2.2.5+0x278>
    0.00 :   82819:  mov    0x38(%rbx),%rdx
    0.00 :   8281d:  mov    0x40(%rbx),%rax
    0.00 :   82821:  mov    %rbp,%r12
    0.00 :   82824:  mov    %rdx,%rsi
    0.00 :   82827:  sub    %rax,%rsi
    0.00 :   8282a:  sub    %rdx,%rax
    0.00 :   8282d:  and    %rbp,%rsi
    0.00 :   82830:  sub    %rsi,%r12
    0.00 :   82833:  cmp    %r12,%rax
    0.00 :   82836:  jl     82aa0 <_IO_file_seekoff@@GLIBC_2.2.5+0x3f0>
    0.00 :   8283c:  mov    0xd8(%rbx),%rax
    0.00 :   82843:  mov    %rax,%rdx
    0.00 :   82846:  sub    %r14,%rdx
    0.00 :   82849:  cmp    %r13,%rdx
    0.00 :   8284c:  jae    82bf0 <_IO_file_seekoff@@GLIBC_2.2.5+0x540>
    0.00 :   82852:  xor    %edx,%edx
    0.00 :   82854:  mov    %rbx,%rdi
    0.00 :   82857:  call   *0x80(%rax)
    0.00 :   8285d:  mov    %rax,%rcx
    0.00 :   82860:  test   %rax,%rax
    0.00 :   82863:  js     82900 <_IO_file_seekoff@@GLIBC_2.2.5+0x250>
    0.00 :   82869:  test   %r12,%r12
    0.00 :   8286c:  je     82ab0 <_IO_file_seekoff@@GLIBC_2.2.5+0x400>
    0.00 :   82872:  mov    0xd8(%rbx),%rax
    0.00 :   82879:  mov    %rax,%rdx
    0.00 :   8287c:  sub    %r14,%rdx
    0.00 :   8287f:  cmp    %r13,%rdx
    0.00 :   82882:  jae    82c28 <_IO_file_seekoff@@GLIBC_2.2.5+0x578>
    0.00 :   82888:  mov    0x70(%rax),%rax
    0.00 :   8288c:  mov    0x38(%rbx),%rsi
    0.00 :   82890:  mov    %r12,%rdx
    0.00 :   82893:  test   %r15d,%r15d
    0.00 :   82896:  jne    8289f <_IO_file_seekoff@@GLIBC_2.2.5+0x1ef>
    0.00 :   82898:  mov    0x40(%rbx),%rdx
    0.00 :   8289c:  sub    %rsi,%rdx
    0.00 :   8289f:  mov    %rcx,(%rsp)
    0.00 :   828a3:  mov    %rbx,%rdi
    0.00 :   828a6:  call   *%rax
    0.00 :   828a8:  cmp    %rax,%r12
    0.00 :   828ab:  jg     82b50 <_IO_file_seekoff@@GLIBC_2.2.5+0x4a0>
    0.00 :   828b1:  mov    (%rsp),%rcx
    0.00 :   828b5:  add    %rax,%rcx
    0.00 :   828b8:  mov    0x38(%rbx),%rdx
    0.00 :   828bc:  andl   $0xffffffef,(%rbx)
    0.00 :   828bf:  mov    %rcx,0x90(%rbx)
    0.00 :   828c6:  movq   %rdx,%xmm0
    0.00 :   828cb:  add    %rdx,%r12
    0.00 :   828ce:  add    %rax,%rdx
    0.00 :   828d1:  mov    %r12,0x8(%rbx)
    0.00 :   828d5:  punpcklqdq %xmm0,%xmm0
    0.00 :   828d9:  mov    %rdx,0x10(%rbx)
    0.00 :   828dd:  movups %xmm0,0x18(%rbx)
    0.00 :   828e1:  movups %xmm0,0x28(%rbx)
    0.00 :   828e5:  mov    %rbp,%rax
    0.00 :   828e8:  jmp    8297b <_IO_file_seekoff@@GLIBC_2.2.5+0x2cb>
    0.00 :   828ed:  nopl   (%rax)
    0.00 :   828f0:  mov    %rbx,%rdi
    0.00 :   828f3:  call   84980 <_IO_switch_to_get_mode>
    0.00 :   828f8:  test   %eax,%eax
    0.00 :   828fa:  je     82717 <_IO_file_seekoff@@GLIBC_2.2.5+0x67>
    0.00 :   82900:  mov    $0xffffffffffffffff,%rax
    0.00 :   82907:  jmp    8297b <_IO_file_seekoff@@GLIBC_2.2.5+0x2cb>
    0.00 :   82909:  nopl   0x0(%rax)
    0.00 :   82910:  lea    0x14d0e9(%rip),%r14        # 1cfa00 <_IO_helper_jumps>
    0.00 :   82917:  lea    0x14de4a(%rip),%r13        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   8291e:  sub    %r14,%r13
    0.00 :   82921:  nopl   0x0(%rax)
    0.00 :   82928:  mov    %rbx,%rdi
    0.00 :   8292b:  call   85f20 <_IO_unsave_markers>
    0.00 :   82930:  mov    0xd8(%rbx),%r15
    0.00 :   82937:  mov    %r15,%rax
    0.00 :   8293a:  sub    %r14,%rax
    0.00 :   8293d:  cmp    %r13,%rax
    0.00 :   82940:  jae    82be0 <_IO_file_seekoff@@GLIBC_2.2.5+0x530>
    0.00 :   82946:  mov    %r12d,%edx
    0.00 :   82949:  mov    %rbp,%rsi
    0.00 :   8294c:  mov    %rbx,%rdi
    0.00 :   8294f:  call   *0x80(%r15)
    0.00 :   82956:  cmp    $0xffffffffffffffff,%rax
    0.00 :   8295a:  je     82900 <_IO_file_seekoff@@GLIBC_2.2.5+0x250>
    0.00 :   8295c:  movq   0x38(%rbx),%xmm0
    0.00 :   82961:  andl   $0xffffffef,(%rbx)
    0.00 :   82964:  mov    %rax,0x90(%rbx)
    0.00 :   8296b:  punpcklqdq %xmm0,%xmm0
    0.00 :   8296f:  movups %xmm0,0x8(%rbx)
    0.00 :   82973:  movups %xmm0,0x18(%rbx)
    0.00 :   82977:  movups %xmm0,0x28(%rbx)
    0.00 :   8297b:  mov    0xa8(%rsp),%rdx
    0.00 :   82983:  sub    %fs:0x28,%rdx
    0.00 :   8298c:  jne    82c69 <_IO_file_seekoff@@GLIBC_2.2.5+0x5b9>
    0.00 :   82992:  add    $0xb8,%rsp
    0.00 :   82999:  pop    %rbx
    0.00 :   8299a:  pop    %rbp
    0.00 :   8299b:  pop    %r12
    0.00 :   8299d:  pop    %r13
    0.00 :   8299f:  pop    %r14
    0.00 :   829a1:  pop    %r15
    0.00 :   829a3:  ret
    0.00 :   829a4:  nopl   0x0(%rax)
    0.00 :   829a8:  xor    %r15d,%r15d
    0.00 :   829ab:  cmp    %rdx,%rax
    0.00 :   829ae:  sete   %r15b
    0.00 :   829b2:  jmp    82702 <_IO_file_seekoff@@GLIBC_2.2.5+0x52>
    0.00 :   829b7:  nopw   0x0(%rax,%rax,1)
    0.00 :   829c0:  mov    0x18(%rbx),%rdi
    0.00 :   829c4:  test   %rdi,%rdi
    0.00 :   829c7:  je     829d4 <_IO_file_seekoff@@GLIBC_2.2.5+0x324>
    0.00 :   829c9:  call   26420 <free@plt>
    0.00 :   829ce:  andl   $0xfffffeff,(%rbx)
    0.00 :   829d4:  mov    %rbx,%rdi
    0.00 :   829d7:  call   84de0 <_IO_doallocbuf>
    0.00 :   829dc:  movq   0x38(%rbx),%xmm0
    0.00 :   829e1:  punpcklqdq %xmm0,%xmm0
    0.00 :   829e5:  movups %xmm0,0x8(%rbx)
    0.00 :   829e9:  movups %xmm0,0x18(%rbx)
    0.00 :   829ed:  movups %xmm0,0x28(%rbx)
    0.00 :   829f1:  jmp    82722 <_IO_file_seekoff@@GLIBC_2.2.5+0x72>
    0.00 :   829f6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   82a00:  cmpq   $0x0,0x38(%rdi)
    0.00 :   82a05:  je     82ac0 <_IO_file_seekoff@@GLIBC_2.2.5+0x410>
    0.00 :   82a0b:  mov    (%rdi),%edx
    0.00 :   82a0d:  mov    0x28(%rdi),%rbp
    0.00 :   82a11:  mov    0x20(%rdi),%rcx
    0.00 :   82a15:  and    $0x1000,%edx
    0.00 :   82a1b:  cmp    %rbp,%rcx
    0.00 :   82a1e:  jae    82b20 <_IO_file_seekoff@@GLIBC_2.2.5+0x470>
    0.00 :   82a24:  test   %edx,%edx
    0.00 :   82a26:  je     82b20 <_IO_file_seekoff@@GLIBC_2.2.5+0x470>
    0.00 :   82a2c:  mov    0xd8(%rdi),%rbp
    0.00 :   82a33:  lea    0x14cfc6(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   82a3a:  lea    0x14dd27(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   82a41:  sub    %rdx,%rax
    0.00 :   82a44:  mov    %rbp,%rcx
    0.00 :   82a47:  sub    %rdx,%rcx
    0.00 :   82a4a:  cmp    %rax,%rcx
    0.00 :   82a4d:  jae    82c44 <_IO_file_seekoff@@GLIBC_2.2.5+0x594>
    0.00 :   82a53:  xor    %esi,%esi
    0.00 :   82a55:  mov    $0x2,%edx
    0.00 :   82a5a:  mov    %rbx,%rdi
    0.00 :   82a5d:  call   *0x80(%rbp)
    0.00 :   82a63:  cmp    $0xffffffffffffffff,%rax
    0.00 :   82a67:  je     82900 <_IO_file_seekoff@@GLIBC_2.2.5+0x250>
    0.00 :   82a6d:  mov    %rax,0x90(%rbx)
    0.00 :   82a74:  mov    0x28(%rbx),%rbp
    0.00 :   82a78:  sub    0x20(%rbx),%rbp
    0.00 :   82a7c:  add    %rbp,%rax
    0.00 :   82a7f:  jns    8297b <_IO_file_seekoff@@GLIBC_2.2.5+0x2cb>
    0.00 :   82a85:  mov    0x150384(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   82a8c:  movl   $0x16,%fs:(%rax)
    0.00 :   82a93:  jmp    82900 <_IO_file_seekoff@@GLIBC_2.2.5+0x250>
    0.00 :   82a98:  nopl   0x0(%rax,%rax,1)
    0.00 :   82aa0:  mov    %rbp,%rsi
    0.00 :   82aa3:  xor    %r12d,%r12d
    0.00 :   82aa6:  jmp    8283c <_IO_file_seekoff@@GLIBC_2.2.5+0x18c>
    0.00 :   82aab:  nopl   0x0(%rax,%rax,1)
    0.00 :   82ab0:  xor    %eax,%eax
    0.00 :   82ab2:  jmp    828b8 <_IO_file_seekoff@@GLIBC_2.2.5+0x208>
    0.00 :   82ab7:  nopw   0x0(%rax,%rax,1)
    0.00 :   82ac0:  mov    0x90(%rdi),%rax
    0.00 :   82ac7:  xor    %ebp,%ebp
  100.00 :   82ac9:  cmp    $0xffffffffffffffff,%rax // libc.so.6[82ac9]
    0.00 :   82acd:  jne    82a7c <_IO_file_seekoff@@GLIBC_2.2.5+0x3cc>
    0.00 :   82acf:  mov    0xd8(%rbx),%r12
    0.00 :   82ad6:  lea    0x14cf23(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   82add:  lea    0x14dc84(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   82ae4:  sub    %rdx,%rax
    0.00 :   82ae7:  mov    %r12,%rcx
    0.00 :   82aea:  sub    %rdx,%rcx
    0.00 :   82aed:  cmp    %rax,%rcx
    0.00 :   82af0:  jae    82c4e <_IO_file_seekoff@@GLIBC_2.2.5+0x59e>
    0.00 :   82af6:  xor    %esi,%esi
    0.00 :   82af8:  mov    $0x1,%edx
    0.00 :   82afd:  mov    %rbx,%rdi
    0.00 :   82b00:  call   *0x80(%r12)
    0.00 :   82b08:  cmp    $0xffffffffffffffff,%rax
    0.00 :   82b0c:  jne    82a7c <_IO_file_seekoff@@GLIBC_2.2.5+0x3cc>
    0.00 :   82b12:  jmp    82900 <_IO_file_seekoff@@GLIBC_2.2.5+0x250>
    0.00 :   82b17:  nopw   0x0(%rax,%rax,1)
    0.00 :   82b20:  mov    0x90(%rbx),%rax
    0.00 :   82b27:  cmp    %rbp,%rcx
    0.00 :   82b2a:  jae    82b40 <_IO_file_seekoff@@GLIBC_2.2.5+0x490>
    0.00 :   82b2c:  test   %edx,%edx
    0.00 :   82b2e:  jne    82c6e <_IO_file_seekoff@@GLIBC_2.2.5+0x5be>
    0.00 :   82b34:  sub    0x10(%rbx),%rbp
    0.00 :   82b38:  jmp    82ac9 <_IO_file_seekoff@@GLIBC_2.2.5+0x419>
    0.00 :   82b3a:  nopw   0x0(%rax,%rax,1)
    0.00 :   82b40:  mov    0x8(%rbx),%rbp
    0.00 :   82b44:  sub    0x10(%rbx),%rbp
    0.00 :   82b48:  jmp    82ac9 <_IO_file_seekoff@@GLIBC_2.2.5+0x419>
    0.00 :   82b4d:  nopl   (%rax)
    0.00 :   82b50:  mov    %r12,%rbp
    0.00 :   82b53:  mov    $0x1,%r12d
    0.00 :   82b59:  cmp    $0xffffffffffffffff,%rax
    0.00 :   82b5d:  je     82928 <_IO_file_seekoff@@GLIBC_2.2.5+0x278>
    0.00 :   82b63:  sub    %rax,%rbp
    0.00 :   82b66:  mov    $0x1,%r12d
    0.00 :   82b6c:  jmp    82928 <_IO_file_seekoff@@GLIBC_2.2.5+0x278>
    0.00 :   82b71:  nopl   0x0(%rax)
    0.00 :   82b78:  mov    %rbp,%rdi
    0.00 :   82b7b:  movq   %rdx,%xmm0
    0.00 :   82b80:  and    $0xffffffef,%eax
    0.00 :   82b83:  sub    %rcx,%rdi
    0.00 :   82b86:  punpcklqdq %xmm0,%xmm0
    0.00 :   82b8a:  mov    %eax,(%rbx)
    0.00 :   82b8c:  add    %rdi,%rdx
    0.00 :   82b8f:  movups %xmm0,0x18(%rbx)
    0.00 :   82b93:  mov    %rdx,0x8(%rbx)
    0.00 :   82b97:  movups %xmm0,0x28(%rbx)
    0.00 :   82b9b:  test   %rsi,%rsi
    0.00 :   82b9e:  js     828e5 <_IO_file_seekoff@@GLIBC_2.2.5+0x235>
    0.00 :   82ba4:  mov    0xd8(%rbx),%r12
    0.00 :   82bab:  lea    0x14ce4e(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   82bb2:  lea    0x14dbaf(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   82bb9:  sub    %rdx,%rax
    0.00 :   82bbc:  mov    %r12,%rcx
    0.00 :   82bbf:  sub    %rdx,%rcx
    0.00 :   82bc2:  cmp    %rax,%rcx
    0.00 :   82bc5:  jae    82c58 <_IO_file_seekoff@@GLIBC_2.2.5+0x5a8>
    0.00 :   82bcb:  xor    %edx,%edx
    0.00 :   82bcd:  mov    %rbx,%rdi
    0.00 :   82bd0:  call   *0x80(%r12)
    0.00 :   82bd8:  jmp    828e5 <_IO_file_seekoff@@GLIBC_2.2.5+0x235>
    0.00 :   82bdd:  nopl   (%rax)
    0.00 :   82be0:  call   818e0 <_IO_vtable_check>
    0.00 :   82be5:  jmp    82946 <_IO_file_seekoff@@GLIBC_2.2.5+0x296>
    0.00 :   82bea:  nopw   0x0(%rax,%rax,1)
    0.00 :   82bf0:  mov    %rsi,0x8(%rsp)
    0.00 :   82bf5:  mov    %rax,(%rsp)
    0.00 :   82bf9:  call   818e0 <_IO_vtable_check>
    0.00 :   82bfe:  mov    0x8(%rsp),%rsi
    0.00 :   82c03:  mov    (%rsp),%rax
    0.00 :   82c07:  jmp    82852 <_IO_file_seekoff@@GLIBC_2.2.5+0x1a2>
    0.00 :   82c0c:  nopl   0x0(%rax)
    0.00 :   82c10:  mov    %rax,(%rsp)
    0.00 :   82c14:  call   818e0 <_IO_vtable_check>
    0.00 :   82c19:  mov    (%rsp),%rax
    0.00 :   82c1d:  jmp    82759 <_IO_file_seekoff@@GLIBC_2.2.5+0xa9>
    0.00 :   82c22:  nopw   0x0(%rax,%rax,1)
    0.00 :   82c28:  mov    %rcx,0x8(%rsp)
    0.00 :   82c2d:  mov    %rax,(%rsp)
    0.00 :   82c31:  call   818e0 <_IO_vtable_check>
    0.00 :   82c36:  mov    0x8(%rsp),%rcx
    0.00 :   82c3b:  mov    (%rsp),%rax
    0.00 :   82c3f:  jmp    82888 <_IO_file_seekoff@@GLIBC_2.2.5+0x1d8>
    0.00 :   82c44:  call   818e0 <_IO_vtable_check>
    0.00 :   82c49:  jmp    82a53 <_IO_file_seekoff@@GLIBC_2.2.5+0x3a3>
    0.00 :   82c4e:  call   818e0 <_IO_vtable_check>
    0.00 :   82c53:  jmp    82af6 <_IO_file_seekoff@@GLIBC_2.2.5+0x446>
    0.00 :   82c58:  call   818e0 <_IO_vtable_check>
    0.00 :   82c5d:  mov    0x90(%rbx),%rsi
    0.00 :   82c64:  jmp    82bcb <_IO_file_seekoff@@GLIBC_2.2.5+0x51b>
    0.00 :   82c69:  call   11ba20 <__stack_chk_fail>
    0.00 :   82c6e:  sub    %rcx,%rbp
    0.00 :   82c71:  jmp    82ac9 <_IO_file_seekoff@@GLIBC_2.2.5+0x419>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   60.49 libc.so.6[8fc74]
   20.95 libc.so.6[8fc4a]
   18.56 libc.so.6[8fc27]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008fc20 <__GI___pthread_mutex_unlock_usercnt>:
         : 6     __GI___pthread_mutex_unlock_usercnt():
    0.00 :   8fc20:  endbr64
    0.00 :   8fc24:  mov    0x10(%rdi),%eax
   18.56 :   8fc27:  mov    %eax,%edx // libc.so.6[8fc27]
    0.00 :   8fc29:  and    $0x17f,%edx
    0.00 :   8fc2f:  test   $0x7c,%al
    0.00 :   8fc31:  jne    8fc88 <__GI___pthread_mutex_unlock_usercnt+0x68>
    0.00 :   8fc33:  sub    $0x18,%rsp
    0.00 :   8fc37:  test   %edx,%edx
    0.00 :   8fc39:  jne    8fc90 <__GI___pthread_mutex_unlock_usercnt+0x70>
    0.00 :   8fc3b:  movl   $0x0,0x8(%rdi)
    0.00 :   8fc42:  test   %esi,%esi
    0.00 :   8fc44:  je     8fc4a <__GI___pthread_mutex_unlock_usercnt+0x2a>
    0.00 :   8fc46:  subl   $0x1,0xc(%rdi)
   20.95 :   8fc4a:  mov    0x10(%rdi),%esi // libc.so.6[8fc4a]
    0.00 :   8fc4d:  and    $0x80,%esi
    0.00 :   8fc53:  jne    8fc70 <__GI___pthread_mutex_unlock_usercnt+0x50>
    0.00 :   8fc55:  cmpb   $0x0,0x14b99c(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   8fc5c:  je     8fc70 <__GI___pthread_mutex_unlock_usercnt+0x50>
    0.00 :   8fc5e:  movl   $0x0,(%rdi)
    0.00 :   8fc64:  jmp    8fc79 <__GI___pthread_mutex_unlock_usercnt+0x59>
    0.00 :   8fc66:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   8fc70:  xor    %eax,%eax
    0.00 :   8fc72:  xchg   %eax,(%rdi)
   60.49 :   8fc74:  cmp    $0x1,%eax // libc.so.6[8fc74]
    0.00 :   8fc77:  jg     8fcb0 <__GI___pthread_mutex_unlock_usercnt+0x90>
    0.00 :   8fc79:  nop
    0.00 :   8fc7a:  xor    %eax,%eax
    0.00 :   8fc7c:  add    $0x18,%rsp
    0.00 :   8fc80:  ret
    0.00 :   8fc81:  nopl   0x0(%rax)
    0.00 :   8fc88:  jmp    8f7b0 <__pthread_mutex_unlock_full>
    0.00 :   8fc8d:  nopl   (%rax)
    0.00 :   8fc90:  cmp    $0x100,%edx
    0.00 :   8fc96:  jne    8fcc1 <__GI___pthread_mutex_unlock_usercnt+0xa1>
    0.00 :   8fc98:  mov    0x10(%rdi),%esi
    0.00 :   8fc9b:  add    $0x18,%rsp
    0.00 :   8fc9f:  and    $0x80,%esi
    0.00 :   8fca5:  jmp    87c00 <__GI___lll_unlock_elision>
    0.00 :   8fcaa:  nopw   0x0(%rax,%rax,1)
    0.00 :   8fcb0:  mov    %rdi,0x8(%rsp)
    0.00 :   8fcb5:  call   87fa0 <__GI___lll_lock_wake>
    0.00 :   8fcba:  mov    0x8(%rsp),%rdi
    0.00 :   8fcbf:  jmp    8fc79 <__GI___pthread_mutex_unlock_usercnt+0x59>
    0.00 :   8fcc1:  mov    0x10(%rdi),%eax
    0.00 :   8fcc4:  and    $0x7f,%eax
    0.00 :   8fcc7:  cmp    $0x1,%eax
    0.00 :   8fcca:  jne    8fceb <__GI___pthread_mutex_unlock_usercnt+0xcb>
    0.00 :   8fccc:  mov    %fs:0x2d0,%eax
    0.00 :   8fcd4:  cmp    %eax,0x8(%rdi)
    0.00 :   8fcd7:  je     8fce0 <__GI___pthread_mutex_unlock_usercnt+0xc0>
    0.00 :   8fcd9:  mov    $0x1,%eax
    0.00 :   8fcde:  jmp    8fc7c <__GI___pthread_mutex_unlock_usercnt+0x5c>
    0.00 :   8fce0:  subl   $0x1,0x4(%rdi)
    0.00 :   8fce4:  jne    8fc7a <__GI___pthread_mutex_unlock_usercnt+0x5a>
    0.00 :   8fce6:  jmp    8fc3b <__GI___pthread_mutex_unlock_usercnt+0x1b>
    0.00 :   8fceb:  mov    0x10(%rdi),%eax
    0.00 :   8fcee:  and    $0x7f,%eax
    0.00 :   8fcf1:  cmp    $0x3,%eax
    0.00 :   8fcf4:  je     8fc3b <__GI___pthread_mutex_unlock_usercnt+0x1b>
    0.00 :   8fcfa:  cmp    $0x2,%edx
    0.00 :   8fcfd:  jne    8fd16 <__GI___pthread_mutex_unlock_usercnt+0xf6>
    0.00 :   8fcff:  mov    %fs:0x2d0,%eax
    0.00 :   8fd07:  cmp    %eax,0x8(%rdi)
    0.00 :   8fd0a:  jne    8fcd9 <__GI___pthread_mutex_unlock_usercnt+0xb9>
    0.00 :   8fd0c:  cmpl   $0x0,(%rdi)
    0.00 :   8fd0f:  je     8fcd9 <__GI___pthread_mutex_unlock_usercnt+0xb9>
    0.00 :   8fd11:  jmp    8fc3b <__GI___pthread_mutex_unlock_usercnt+0x1b>
    0.00 :   8fd16:  lea    0x110493(%rip),%rcx        # 1a01b0 <blanks+0x190>
    0.00 :   8fd1d:  mov    $0x62,%edx
    0.00 :   8fd22:  lea    0x10823b(%rip),%rsi        # 197f64 <null+0xdaa>
    0.00 :   8fd29:  lea    0x10cb38(%rip),%rdi        # 19c868 <aliasfile.0+0xe20>
    0.00 :   8fd30:  call   35610 <__assert_fail>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   61.17 dbt2-driver[40c4c7]
   21.14 dbt2-driver[40c4d7]
   17.69 dbt2-driver[40c4c8]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040c4c7 <pcg_mcg_128_step_r>:
         : 6      pcg_mcg_128_step_r():
   61.17 :   40c4c7: push   %rbp // dbt2-driver[40c4c7]
   17.69 :   40c4c8: mov    %rsp,%rbp // dbt2-driver[40c4c8]
    0.00 :   40c4cb: mov    %rdi,-0x8(%rbp)
    0.00 :   40c4cf: mov    -0x8(%rbp),%rax
    0.00 :   40c4d3: mov    0x8(%rax),%rdx
   21.14 :   40c4d7: mov    (%rax),%rax // dbt2-driver[40c4d7]
    0.00 :   40c4da: movabs $0x4385df649fccf645,%rcx
    0.00 :   40c4e4: mov    %rcx,%rsi
    0.00 :   40c4e7: imul   %rdx,%rsi
    0.00 :   40c4eb: movabs $0x2360ed051fc65da4,%rcx
    0.00 :   40c4f5: imul   %rax,%rcx
    0.00 :   40c4f9: add    %rsi,%rcx
    0.00 :   40c4fc: movabs $0x4385df649fccf645,%rsi
    0.00 :   40c506: mul    %rsi
    0.00 :   40c509: add    %rdx,%rcx
    0.00 :   40c50c: mov    %rcx,%rdx
    0.00 :   40c50f: mov    -0x8(%rbp),%rcx
    0.00 :   40c513: mov    %rax,(%rcx)
    0.00 :   40c516: mov    %rdx,0x8(%rcx)
    0.00 :   40c51a: nop
    0.00 :   40c51b: pop    %rbp
    0.00 :   40c51c: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[1576f0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000001576f0 <__strncmp_avx2>:
         : 6      __strncmp_avx2():
  100.00 :   1576f0: endbr64 // libc.so.6[1576f0]
    0.00 :   1576f4: cmp    $0x1,%rdx
    0.00 :   1576f8: jle    157751 <__strncmp_avx2+0x61>
    0.00 :   1576fa: vpxor  %xmm15,%xmm15,%xmm15
    0.00 :   1576ff: mov    %edi,%eax
    0.00 :   157701: or     %esi,%eax
    0.00 :   157703: shl    $0x14,%eax
    0.00 :   157706: cmp    $0xf8000000,%eax
    0.00 :   15770b: ja     157ab4 <__strncmp_avx2+0x3c4>
    0.00 :   157711: vmovdqu (%rdi),%ymm0
    0.00 :   157715: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   157719: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15771d: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157721: vpmovmskb %ymm1,%ecx
    0.00 :   157725: cmp    $0x20,%rdx
    0.00 :   157729: jbe    157742 <__strncmp_avx2+0x52>
    0.00 :   15772b: inc    %ecx
    0.00 :   15772d: je     1577a0 <__strncmp_avx2+0xb0>
    0.00 :   15772f: nop
    0.00 :   157730: tzcnt  %ecx,%ecx
    0.00 :   157734: movzbl (%rdi,%rcx,1),%eax
    0.00 :   157738: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   15773c: sub    %ecx,%eax
    0.00 :   15773e: vzeroupper
    0.00 :   157741: ret
    0.00 :   157742: not    %ecx
    0.00 :   157744: bzhi   %edx,%ecx,%eax
    0.00 :   157749: jne    157730 <__strncmp_avx2+0x40>
    0.00 :   15774b: xor    %eax,%eax
    0.00 :   15774d: vzeroupper
    0.00 :   157750: ret
    0.00 :   157751: jb     15774b <__strncmp_avx2+0x5b>
    0.00 :   157753: ja     155730 <__strcmp_avx2>
    0.00 :   157759: movzbl (%rdi),%eax
    0.00 :   15775c: movzbl (%rsi),%ecx
    0.00 :   15775f: sub    %ecx,%eax
    0.00 :   157761: ret
    0.00 :   157762: tzcnt  %ecx,%ecx
    0.00 :   157766: add    $0xffffffffffffffe0,%rdx
    0.00 :   15776a: cmp    %rcx,%rdx
    0.00 :   15776d: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   15776f: movzbl 0x20(%rdi,%rcx,1),%eax
    0.00 :   157774: movzbl 0x20(%rsi,%rcx,1),%ecx
    0.00 :   157779: sub    %ecx,%eax
    0.00 :   15777b: vzeroupper
    0.00 :   15777e: ret
    0.00 :   15777f: nop
    0.00 :   157780: shl    $0x20,%rcx
    0.00 :   157784: tzcnt  %rcx,%rcx
    0.00 :   157789: cmp    %rcx,%rdx
    0.00 :   15778c: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   15778e: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   157793: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   157798: sub    %ecx,%eax
    0.00 :   15779a: vzeroupper
    0.00 :   15779d: ret
    0.00 :   15779e: xchg   %ax,%ax
    0.00 :   1577a0: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   1577a5: vpcmpeqb 0x20(%rsi),%ymm0,%ymm1
    0.00 :   1577aa: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1577ae: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1577b2: vpmovmskb %ymm1,%ecx
    0.00 :   1577b6: inc    %ecx
    0.00 :   1577b8: jne    157762 <__strncmp_avx2+0x72>
    0.00 :   1577ba: sub    $0x40,%rdx
    0.00 :   1577be: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   1577c0: vmovdqu 0x40(%rdi),%ymm0
    0.00 :   1577c5: vpcmpeqb 0x40(%rsi),%ymm0,%ymm1
    0.00 :   1577ca: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1577ce: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1577d2: vpmovmskb %ymm1,%ecx
    0.00 :   1577d6: inc    %ecx
    0.00 :   1577d8: jne    157784 <__strncmp_avx2+0x94>
    0.00 :   1577da: vmovdqu 0x60(%rdi),%ymm0
    0.00 :   1577df: vpcmpeqb 0x60(%rsi),%ymm0,%ymm1
    0.00 :   1577e4: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1577e8: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1577ec: vpmovmskb %ymm1,%ecx
    0.00 :   1577f0: inc    %ecx
    0.00 :   1577f2: jne    157780 <__strncmp_avx2+0x90>
    0.00 :   1577f4: cmp    $0x40,%rdx
    0.00 :   1577f8: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   1577fe: xor    %r8d,%r8d
    0.00 :   157801: lea    0x40(%rdi,%rdx,1),%rdx
    0.00 :   157806: sub    %rdi,%rsi
    0.00 :   157809: and    $0xffffffffffffff80,%rdi
    0.00 :   15780d: add    %rdi,%rsi
    0.00 :   157810: sub    %rdi,%rdx
    0.00 :   157813: mov    $0xffffff80,%eax
    0.00 :   157818: sub    %esi,%eax
    0.00 :   15781a: and    $0xfff,%eax
    0.00 :   15781f: nop
    0.00 :   157820: sub    $0x80,%rdx
    0.00 :   157827: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   15782d: sub    $0xffffffffffffff80,%rdi
    0.00 :   157831: sub    $0xffffffffffffff80,%rsi
    0.00 :   157835: add    $0xffffff80,%eax
    0.00 :   157838: jae    157930 <__strncmp_avx2+0x240>
    0.00 :   15783e: vmovdqa (%rdi),%ymm0
    0.00 :   157842: vmovdqa 0x20(%rdi),%ymm2
    0.00 :   157847: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   15784c: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   157851: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   157855: vpcmpeqb 0x20(%rsi),%ymm2,%ymm3
    0.00 :   15785a: vpcmpeqb 0x40(%rsi),%ymm4,%ymm5
    0.00 :   15785f: vpcmpeqb 0x60(%rsi),%ymm6,%ymm7
    0.00 :   157864: vpand  %ymm0,%ymm1,%ymm1
    0.00 :   157868: vpand  %ymm2,%ymm3,%ymm3
    0.00 :   15786c: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   157870: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   157874: vpminub %ymm1,%ymm3,%ymm3
    0.00 :   157878: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   15787c: vpminub %ymm3,%ymm7,%ymm7
    0.00 :   157880: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   157884: vpmovmskb %ymm7,%r9d
    0.00 :   157888: test   %r9d,%r9d
    0.00 :   15788b: je     157820 <__strncmp_avx2+0x130>
    0.00 :   15788d: vpcmpeqb %ymm1,%ymm15,%ymm1
    0.00 :   157891: vpmovmskb %ymm1,%ecx
    0.00 :   157895: test   %ecx,%ecx
    0.00 :   157897: jne    1578e7 <__strncmp_avx2+0x1f7>
    0.00 :   157899: vpcmpeqb %ymm3,%ymm15,%ymm3
    0.00 :   15789d: vpmovmskb %ymm3,%ecx
    0.00 :   1578a1: test   %ecx,%ecx
    0.00 :   1578a3: jne    1578e3 <__strncmp_avx2+0x1f3>
    0.00 :   1578a5: sub    $0x40,%rdx
    0.00 :   1578a9: jbe    1578dd <__strncmp_avx2+0x1ed>
    0.00 :   1578ab: vpcmpeqb %ymm5,%ymm15,%ymm5
    0.00 :   1578af: vpmovmskb %ymm5,%ecx
    0.00 :   1578b3: test   %ecx,%ecx
    0.00 :   1578b5: jne    157905 <__strncmp_avx2+0x215>
    0.00 :   1578b7: tzcnt  %r9d,%r9d
    0.00 :   1578bc: sub    $0xffffffe0,%r9d
    0.00 :   1578c0: cmp    %r9,%rdx
    0.00 :   1578c3: jbe    1578dd <__strncmp_avx2+0x1ed>
    0.00 :   1578c5: movzbl 0x40(%rdi,%r9,1),%eax
    0.00 :   1578cb: movzbl 0x40(%rsi,%r9,1),%ecx
    0.00 :   1578d1: sub    %ecx,%eax
    0.00 :   1578d3: xor    %r8d,%eax
    0.00 :   1578d6: sub    %r8d,%eax
    0.00 :   1578d9: vzeroupper
    0.00 :   1578dc: ret
    0.00 :   1578dd: xor    %eax,%eax
    0.00 :   1578df: vzeroupper
    0.00 :   1578e2: ret
    0.00 :   1578e3: shl    $0x20,%rcx
    0.00 :   1578e7: tzcnt  %rcx,%rcx
    0.00 :   1578ec: cmp    %rcx,%rdx
    0.00 :   1578ef: jbe    1578dd <__strncmp_avx2+0x1ed>
    0.00 :   1578f1: movzbl (%rdi,%rcx,1),%eax
    0.00 :   1578f5: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   1578f9: sub    %ecx,%eax
    0.00 :   1578fb: xor    %r8d,%eax
    0.00 :   1578fe: sub    %r8d,%eax
    0.00 :   157901: vzeroupper
    0.00 :   157904: ret
    0.00 :   157905: tzcnt  %ecx,%ecx
    0.00 :   157909: cmp    %rcx,%rdx
    0.00 :   15790c: jbe    157b70 <__strncmp_avx2+0x480>
    0.00 :   157912: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   157917: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   15791c: sub    %ecx,%eax
    0.00 :   15791e: xor    %r8d,%eax
    0.00 :   157921: sub    %r8d,%eax
    0.00 :   157924: vzeroupper
    0.00 :   157927: ret
    0.00 :   157928: nopl   0x0(%rax,%rax,1)
    0.00 :   157930: cmp    $0xffffff80,%eax
    0.00 :   157933: je     15783e <__strncmp_avx2+0x14e>
    0.00 :   157939: cmp    $0xffffffa0,%eax
    0.00 :   15793c: jle    15795b <__strncmp_avx2+0x26b>
    0.00 :   15793e: vmovdqa (%rdi),%ymm0
    0.00 :   157942: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   157946: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15794a: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   15794e: vpmovmskb %ymm1,%ecx
    0.00 :   157952: inc    %ecx
    0.00 :   157954: jne    1578e7 <__strncmp_avx2+0x1f7>
    0.00 :   157956: cmp    $0xffffffc0,%eax
    0.00 :   157959: jg     1579d5 <__strncmp_avx2+0x2e5>
    0.00 :   15795b: sub    $0xffffff80,%eax
    0.00 :   15795e: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   157964: vpcmpeqb -0x20(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   15796a: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15796e: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157972: vpmovmskb %ymm1,%ecx
    0.00 :   157976: mov    $0xffffffff,%r10d
    0.00 :   15797c: shlx   %esi,%r10d,%r10d
    0.00 :   157981: not    %ecx
    0.00 :   157983: cmp    %rax,%rdx
    0.00 :   157986: jbe    1579c0 <__strncmp_avx2+0x2d0>
    0.00 :   157988: mov    %eax,%r9d
    0.00 :   15798b: add    $0xf80,%eax
    0.00 :   157990: and    %r10d,%ecx
    0.00 :   157993: je     15783e <__strncmp_avx2+0x14e>
    0.00 :   157999: tzcnt  %ecx,%ecx
    0.00 :   15799d: lea    -0x20(%r9,%rcx,1),%ecx
    0.00 :   1579a2: movzbl (%rdi,%rcx,1),%eax
    0.00 :   1579a6: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   1579aa: sub    %ecx,%eax
    0.00 :   1579ac: xor    %r8d,%eax
    0.00 :   1579af: sub    %r8d,%eax
    0.00 :   1579b2: vzeroupper
    0.00 :   1579b5: ret
    0.00 :   1579b6: cs nopw 0x0(%rax,%rax,1)
    0.00 :   1579c0: and    %r10d,%ecx
    0.00 :   1579c3: tzcnt  %ecx,%ecx
    0.00 :   1579c7: lea    -0x20(%rax,%rcx,1),%ecx
    0.00 :   1579cb: cmp    %ecx,%edx
    0.00 :   1579cd: ja     1579a2 <__strncmp_avx2+0x2b2>
    0.00 :   1579cf: xor    %eax,%eax
    0.00 :   1579d1: vzeroupper
    0.00 :   1579d4: ret
    0.00 :   1579d5: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   1579da: vpcmpeqb 0x20(%rsi),%ymm0,%ymm1
    0.00 :   1579df: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1579e3: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1579e7: vpmovmskb %ymm1,%ecx
    0.00 :   1579eb: inc    %ecx
    0.00 :   1579ed: jne    1578e3 <__strncmp_avx2+0x1f3>
    0.00 :   1579f3: cmp    $0x40,%rdx
    0.00 :   1579f7: jbe    157a88 <__strncmp_avx2+0x398>
    0.00 :   1579fd: sub    $0xffffff80,%eax
    0.00 :   157a00: vmovdqu -0x40(%rdi,%rax,1),%ymm0
    0.00 :   157a06: vpcmpeqb -0x40(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   157a0c: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157a10: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157a14: vpmovmskb %ymm1,%ecx
    0.00 :   157a18: inc    %ecx
    0.00 :   157a1a: jne    157a90 <__strncmp_avx2+0x3a0>
    0.00 :   157a1c: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   157a22: vpcmpeqb -0x20(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   157a28: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157a2c: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157a30: vpmovmskb %ymm1,%ecx
    0.00 :   157a34: inc    %ecx
    0.00 :   157a36: jne    157a93 <__strncmp_avx2+0x3a3>
    0.00 :   157a38: cmp    %rax,%rdx
    0.00 :   157a3b: jbe    157a88 <__strncmp_avx2+0x398>
    0.00 :   157a3d: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   157a42: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   157a47: vpcmpeqb 0x40(%rsi),%ymm4,%ymm5
    0.00 :   157a4c: vpcmpeqb 0x60(%rsi),%ymm6,%ymm7
    0.00 :   157a51: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   157a55: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   157a59: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   157a5d: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   157a61: vpmovmskb %ymm7,%r9d
    0.00 :   157a65: test   %r9d,%r9d
    0.00 :   157a68: jne    1578a5 <__strncmp_avx2+0x1b5>
    0.00 :   157a6e: sub    $0xffffffffffffff80,%rdi
    0.00 :   157a72: sub    $0xffffffffffffff80,%rsi
    0.00 :   157a76: add    $0xf00,%eax
    0.00 :   157a7b: sub    $0x80,%rdx
    0.00 :   157a82: ja     15783e <__strncmp_avx2+0x14e>
    0.00 :   157a88: xor    %eax,%eax
    0.00 :   157a8a: vzeroupper
    0.00 :   157a8d: ret
    0.00 :   157a8e: xchg   %ax,%ax
    0.00 :   157a90: add    $0xffffffe0,%eax
    0.00 :   157a93: tzcnt  %ecx,%ecx
    0.00 :   157a97: lea    -0x20(%rax,%rcx,1),%ecx
    0.00 :   157a9b: cmp    %rcx,%rdx
    0.00 :   157a9e: jbe    157a88 <__strncmp_avx2+0x398>
    0.00 :   157aa0: movzbl (%rdi,%rcx,1),%eax
    0.00 :   157aa4: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   157aa8: sub    %ecx,%eax
    0.00 :   157aaa: xor    %r8d,%eax
    0.00 :   157aad: sub    %r8d,%eax
    0.00 :   157ab0: vzeroupper
    0.00 :   157ab3: ret
    0.00 :   157ab4: mov    %edi,%eax
    0.00 :   157ab6: mov    %esi,%ecx
    0.00 :   157ab8: and    $0xfff,%eax
    0.00 :   157abd: and    $0xfff,%ecx
    0.00 :   157ac3: xor    %r9d,%r9d
    0.00 :   157ac6: cmp    %eax,%ecx
    0.00 :   157ac8: jg     157b76 <__strncmp_avx2+0x486>
    0.00 :   157ace: sub    $0xf80,%eax
    0.00 :   157ad3: jbe    157711 <__strncmp_avx2+0x21>
    0.00 :   157ad9: xor    %r8d,%r8d
    0.00 :   157adc: sub    $0x60,%eax
    0.00 :   157adf: jg     157ba0 <__strncmp_avx2+0x4b0>
    0.00 :   157ae5: vmovdqu (%rdi,%r9,1),%ymm0
    0.00 :   157aeb: vpcmpeqb (%rsi,%r9,1),%ymm0,%ymm1
    0.00 :   157af1: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157af5: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157af9: vpmovmskb %ymm1,%ecx
    0.00 :   157afd: inc    %ecx
    0.00 :   157aff: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157b01: add    $0x20,%r9d
    0.00 :   157b05: cmp    %r9,%rdx
    0.00 :   157b08: jbe    157b70 <__strncmp_avx2+0x480>
    0.00 :   157b0a: add    $0x20,%eax
    0.00 :   157b0d: jl     157ae5 <__strncmp_avx2+0x3f5>
    0.00 :   157b0f: sub    %eax,%r9d
    0.00 :   157b12: vmovdqu (%rdi,%r9,1),%ymm0
    0.00 :   157b18: vpcmpeqb (%rsi,%r9,1),%ymm0,%ymm1
    0.00 :   157b1e: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157b22: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157b26: vpmovmskb %ymm1,%ecx
    0.00 :   157b2a: lea    0x20(%r9),%eax
    0.00 :   157b2e: cmp    %rax,%rdx
    0.00 :   157b31: jbe    157b60 <__strncmp_avx2+0x470>
    0.00 :   157b33: add    %rdi,%rdx
    0.00 :   157b36: inc    %ecx
    0.00 :   157b38: je     157806 <__strncmp_avx2+0x116>
    0.00 :   157b3e: xchg   %ax,%ax
    0.00 :   157b40: tzcnt  %ecx,%ecx
    0.00 :   157b44: add    %r9d,%ecx
    0.00 :   157b47: movzbl (%rdi,%rcx,1),%eax
    0.00 :   157b4b: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   157b4f: sub    %ecx,%eax
    0.00 :   157b51: xor    %r8d,%eax
    0.00 :   157b54: sub    %r8d,%eax
    0.00 :   157b57: vzeroupper
    0.00 :   157b5a: ret
    0.00 :   157b5b: nopl   0x0(%rax,%rax,1)
    0.00 :   157b60: inc    %ecx
    0.00 :   157b62: tzcnt  %ecx,%ecx
    0.00 :   157b66: add    %r9d,%ecx
    0.00 :   157b69: cmp    %rcx,%rdx
    0.00 :   157b6c: ja     157b47 <__strncmp_avx2+0x457>
    0.00 :   157b6e: xchg   %ax,%ax
    0.00 :   157b70: xor    %eax,%eax
    0.00 :   157b72: vzeroupper
    0.00 :   157b75: ret
    0.00 :   157b76: sub    $0xf80,%ecx
    0.00 :   157b7c: jbe    157711 <__strncmp_avx2+0x21>
    0.00 :   157b82: mov    %ecx,%eax
    0.00 :   157b84: mov    %rdi,%rcx
    0.00 :   157b87: mov    %rsi,%rdi
    0.00 :   157b8a: mov    %rcx,%rsi
    0.00 :   157b8d: mov    $0xffffffff,%r8d
    0.00 :   157b93: xor    %r9d,%r9d
    0.00 :   157b96: sub    $0x60,%eax
    0.00 :   157b99: jle    157ae5 <__strncmp_avx2+0x3f5>
    0.00 :   157b9f: nop
    0.00 :   157ba0: cmp    $0x10,%eax
    0.00 :   157ba3: ja     157c10 <__strncmp_avx2+0x520>
    0.00 :   157ba5: vmovdqu (%rdi),%xmm0
    0.00 :   157ba9: vpcmpeqb (%rsi),%xmm0,%xmm1
    0.00 :   157bad: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157bb1: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157bb5: vpmovmskb %ymm1,%ecx
    0.00 :   157bb9: inc    %cx
    0.00 :   157bbc: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157bbe: mov    $0x10,%r9d
    0.00 :   157bc4: cmp    %r9,%rdx
    0.00 :   157bc7: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157bc9: sub    %eax,%r9d
    0.00 :   157bcc: vmovdqu (%rdi,%r9,1),%xmm0
    0.00 :   157bd2: vpcmpeqb (%rsi,%r9,1),%xmm0,%xmm1
    0.00 :   157bd8: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157bdc: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157be0: vpmovmskb %ymm1,%ecx
    0.00 :   157be4: inc    %cx
    0.00 :   157be7: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157bed: add    $0x10,%r9d
    0.00 :   157bf1: sub    %r9,%rdx
    0.00 :   157bf4: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157bf6: sub    $0xffffffffffffff80,%rdx
    0.00 :   157bfa: lea    -0x80(%rdi,%r9,1),%rdi
    0.00 :   157bff: lea    -0x80(%rsi,%r9,1),%rsi
    0.00 :   157c04: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157c09: xor    %eax,%eax
    0.00 :   157c0b: ret
    0.00 :   157c0c: nopl   0x0(%rax)
    0.00 :   157c10: cmp    $0x18,%eax
    0.00 :   157c13: ja     157c84 <__strncmp_avx2+0x594>
    0.00 :   157c15: vmovq  (%rdi),%xmm0
    0.00 :   157c19: vmovq  (%rsi),%xmm1
    0.00 :   157c1d: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157c21: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157c25: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157c29: vpmovmskb %ymm1,%ecx
    0.00 :   157c2d: inc    %cl
    0.00 :   157c2f: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157c35: cmp    $0x8,%rdx
    0.00 :   157c39: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157c3b: mov    $0x18,%r9d
    0.00 :   157c41: sub    %eax,%r9d
    0.00 :   157c44: vmovq  (%rdi,%r9,1),%xmm0
    0.00 :   157c4a: vmovq  (%rsi,%r9,1),%xmm1
    0.00 :   157c50: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157c54: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157c58: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157c5c: vpmovmskb %ymm1,%ecx
    0.00 :   157c60: inc    %cl
    0.00 :   157c62: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157c68: add    $0x8,%r9d
    0.00 :   157c6c: sub    %r9,%rdx
    0.00 :   157c6f: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157c71: sub    $0xffffffffffffff80,%rdx
    0.00 :   157c75: lea    -0x80(%rdi,%r9,1),%rdi
    0.00 :   157c7a: lea    -0x80(%rsi,%r9,1),%rsi
    0.00 :   157c7f: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157c84: cmp    $0x1c,%eax
    0.00 :   157c87: ja     157d00 <__strncmp_avx2+0x610>
    0.00 :   157c89: vmovd  (%rdi),%xmm0
    0.00 :   157c8d: vmovd  (%rsi),%xmm1
    0.00 :   157c91: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157c95: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157c99: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157c9d: vpmovmskb %ymm1,%ecx
    0.00 :   157ca1: sub    $0xf,%ecx
    0.00 :   157ca4: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157caa: cmp    $0x4,%rdx
    0.00 :   157cae: jbe    157cfa <__strncmp_avx2+0x60a>
    0.00 :   157cb0: mov    $0x1c,%r9d
    0.00 :   157cb6: sub    %eax,%r9d
    0.00 :   157cb9: vmovd  (%rdi,%r9,1),%xmm0
    0.00 :   157cbf: vmovd  (%rsi,%r9,1),%xmm1
    0.00 :   157cc5: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157cc9: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157ccd: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157cd1: vpmovmskb %ymm1,%ecx
    0.00 :   157cd5: sub    $0xf,%ecx
    0.00 :   157cd8: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157cde: add    $0x4,%r9d
    0.00 :   157ce2: sub    %r9,%rdx
    0.00 :   157ce5: jbe    157cfa <__strncmp_avx2+0x60a>
    0.00 :   157ce7: sub    $0xffffffffffffff80,%rdx
    0.00 :   157ceb: lea    -0x80(%rdi,%r9,1),%rdi
    0.00 :   157cf0: lea    -0x80(%rsi,%r9,1),%rsi
    0.00 :   157cf5: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157cfa: xor    %eax,%eax
    0.00 :   157cfc: ret
    0.00 :   157cfd: nopl   (%rax)
    0.00 :   157d00: sub    %rdi,%rsi
    0.00 :   157d03: movzbl (%rdi),%eax
    0.00 :   157d06: movzbl (%rsi,%rdi,1),%ecx
    0.00 :   157d0a: sub    %ecx,%eax
    0.00 :   157d0c: jne    157d37 <__strncmp_avx2+0x647>
    0.00 :   157d0e: test   %ecx,%ecx
    0.00 :   157d10: je     157d34 <__strncmp_avx2+0x644>
    0.00 :   157d12: dec    %rdx
    0.00 :   157d15: je     157d34 <__strncmp_avx2+0x644>
    0.00 :   157d17: inc    %rdi
    0.00 :   157d1a: test   $0x1f,%edi
    0.00 :   157d20: jne    157d03 <__strncmp_avx2+0x613>
    0.00 :   157d22: lea    -0x80(%rdi,%rsi,1),%rsi
    0.00 :   157d27: add    $0xffffffffffffff80,%rdi
    0.00 :   157d2b: sub    $0xffffffffffffff80,%rdx
    0.00 :   157d2f: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157d34: xor    %eax,%eax
    0.00 :   157d36: ret
    0.00 :   157d37: xor    %r8d,%eax
    0.00 :   157d3a: sub    %r8d,%eax
    0.00 :   157d3d: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/ipv4/netfilter/nf_defrag_ipv4.ko.xz
----------------------------------------------

   68.87 [nf_defrag_ipv4][70]
   19.20 [nf_defrag_ipv4][8c]
   11.93 [nf_defrag_ipv4][9b]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/ipv4/netfilter/nf_defrag_ipv4.ko.xz for cycles (5 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000070 <ipv4_conntrack_defrag>:
         : 6   ipv4_conntrack_defrag():
   68.87 :    70:     call   75 <ipv4_conntrack_defrag+0x5> // [nf_defrag_ipv4][70]
    0.00 :    75:     push   %r12
    0.00 :    77:     push   %rbp
    0.00 :    78:     push   %rbx
    0.00 :    79:     mov    %rsi,%rbx
    0.00 :    7c:     mov    %rdx,%rsi
    0.00 :    7f:     mov    0x18(%rbx),%rax
    0.00 :    83:     test   %rax,%rax
    0.00 :    86:     je     9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    88:     movzbl 0x12(%rax),%ecx
   19.20 :    8c:     mov    $0x1,%edx // [nf_defrag_ipv4][8c]
    0.00 :    91:     shl    %cl,%edx
    0.00 :    93:     and    $0xffffefbf,%edx
    0.00 :    99:     jne    ca <ipv4_conntrack_defrag+0x5a>
   11.93 :    9b:     mov    0x68(%rbx),%rax // [nf_defrag_ipv4][9b]
    0.00 :    9f:     cmp    $0x7,%rax
    0.00 :    a3:     je     bc <ipv4_conntrack_defrag+0x4c>
    0.00 :    a5:     movzwl 0xb8(%rbx),%edx
    0.00 :    ac:     mov    0xc8(%rbx),%rcx
    0.00 :    b3:     testw  $0xff3f,0x6(%rcx,%rdx,1)
    0.00 :    ba:     jne    dc <ipv4_conntrack_defrag+0x6c>
    0.00 :    bc:     mov    $0x1,%eax
    0.00 :    c1:     pop    %rbx
    0.00 :    c2:     pop    %rbp
    0.00 :    c3:     pop    %r12
    0.00 :    c5:     jmp    ca <ipv4_conntrack_defrag+0x5a>
    0.00 :    ca:     cmpw   $0x2,0x10(%rax)
    0.00 :    cf:     jne    9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    d1:     cmpb   $0x0,0x328(%rax)
    0.00 :    d8:     jns    9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    da:     jmp    bc <ipv4_conntrack_defrag+0x4c>
    0.00 :    dc:     movzbl (%rsi),%edi
    0.00 :    df:     xor    %edx,%edx
    0.00 :    e1:     cmp    $0x7,%rax
    0.00 :    e5:     jbe    10c <ipv4_conntrack_defrag+0x9c>
    0.00 :    e7:     mov    %rax,%r8
    0.00 :    ea:     and    $0x7,%eax
    0.00 :    ed:     mov    $0x1,%edx
    0.00 :    f2:     and    $0xfffffffffffffff8,%r8
    0.00 :    f6:     cmp    $0x2,%eax
    0.00 :    f9:     seta   %cl
    0.00 :    fc:     movzbl 0xf(%r8),%eax
    0.00 :   101:    shl    %cl,%edx
    0.00 :   103:    and    %eax,%edx
    0.00 :   105:    je     10c <ipv4_conntrack_defrag+0x9c>
    0.00 :   107:    movzwl 0xc(%r8),%edx
    0.00 :   10c:    testb  $0x1,0x7f(%rbx)
    0.00 :   110:    je     133 <ipv4_conntrack_defrag+0xc3>
    0.00 :   112:    mov    0xe0(%rbx),%rcx
    0.00 :   119:    movzbl 0x4(%rcx),%eax
    0.00 :   11d:    shl    $0x3,%eax
    0.00 :   120:    cltq
    0.00 :   122:    add    %rax,%rcx
    0.00 :   125:    je     133 <ipv4_conntrack_defrag+0xc3>
    0.00 :   127:    lea    0x20002(%rdx),%ebp
    0.00 :   12d:    testb  $0x2,0x1(%rcx)
    0.00 :   131:    jne    144 <ipv4_conntrack_defrag+0xd4>
    0.00 :   133:    lea    0x2(%rdx),%eax
    0.00 :   136:    add    $0x10002,%edx
    0.00 :   13c:    test   %dil,%dil
    0.00 :   13f:    cmovne %edx,%eax
    0.00 :   142:    mov    %eax,%ebp
    0.00 :   144:    mov    $0x200,%edi
    0.00 :   149:    mov    0x20(%rsi),%r12
    0.00 :   14d:    call   152 <ipv4_conntrack_defrag+0xe2>
    0.00 :   152:    mov    %ebp,%edx
    0.00 :   154:    mov    %rbx,%rsi
    0.00 :   157:    mov    %r12,%rdi
    0.00 :   15a:    call   15f <ipv4_conntrack_defrag+0xef>
    0.00 :   15f:    mov    $0x200,%esi
    0.00 :   164:    mov    $0x0,%rdi
    0.00 :   16b:    mov    %eax,%ebp
    0.00 :   16d:    call   172 <ipv4_conntrack_defrag+0x102>
    0.00 :   172:    mov    $0x2,%eax
    0.00 :   177:    test   %ebp,%ebp
    0.00 :   179:    jne    c1 <ipv4_conntrack_defrag+0x51>
    0.00 :   17f:    orb    $0x8,0x80(%rbx)
    0.00 :   186:    jmp    bc <ipv4_conntrack_defrag+0x4c>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   29.02 [virtio_net][5311]
   27.41 [virtio_net][52bb]
   23.34 [virtio_net][52d1]
   20.23 [virtio_net][5382]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (4 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000004fc0 <try_fill_recv>:
         : 6    try_fill_recv():
    0.00 :   4fc0:   call   4fc5 <try_fill_recv+0x5>
    0.00 :   4fc5:   push   %r15
    0.00 :   4fc7:   mov    %rdi,%r15
    0.00 :   4fca:   push   %r14
    0.00 :   4fcc:   push   %r13
    0.00 :   4fce:   push   %r12
    0.00 :   4fd0:   mov    %edx,%r12d
    0.00 :   4fd3:   push   %rbp
    0.00 :   4fd4:   mov    $0x80000000,%ebp
    0.00 :   4fd9:   push   %rbx
    0.00 :   4fda:   mov    %rsi,%rbx
    0.00 :   4fdd:   sub    $0x18,%rsp
    0.00 :   4fe1:   movzbl 0x38(%r15),%r13d
    0.00 :   4fe6:   test   %r13b,%r13b
    0.00 :   4fe9:   jne    5276 <try_fill_recv+0x2b6>
    0.00 :   4fef:   cmpb   $0x0,0x33(%r15)
    0.00 :   4ff4:   je     5170 <try_fill_recv+0x1b0>
    0.00 :   4ffa:   mov    0x34(%r15),%eax
    0.00 :   4ffe:   lea    0x200(%rbx),%rdi
    0.00 :   5005:   mov    %rdi,0x10(%rsp)
    0.00 :   500a:   lea    0x2(%rax),%esi
    0.00 :   500d:   call   5012 <try_fill_recv+0x52>
    0.00 :   5012:   mov    0x34(%r15),%edx
    0.00 :   5016:   lea    0x1(%rdx),%eax
    0.00 :   5019:   cmp    $0x1,%eax
    0.00 :   501c:   jle    54a2 <try_fill_recv+0x4e2>
    0.00 :   5022:   lea    0x10(%rax),%r14
    0.00 :   5026:   shl    $0x5,%rax
    0.00 :   502a:   xor    %r8d,%r8d
    0.00 :   502d:   lea    0x1e0(%rbx,%rax,1),%r9
    0.00 :   5035:   lea    -0x1(%rdx),%eax
    0.00 :   5038:   shl    $0x5,%r14
    0.00 :   503c:   shl    $0x5,%rax
    0.00 :   5040:   add    %rbx,%r14
    0.00 :   5043:   sub    %rax,%r9
    0.00 :   5046:   jmp    50de <try_fill_recv+0x11e>
    0.00 :   504b:   mov    0x28(%rdx),%rax
    0.00 :   504f:   mov    %rax,0x1e0(%rbx)
    0.00 :   5056:   movq   $0x0,0x28(%rdx)
    0.00 :   505e:   mov    0x0(%rip),%rsi        # 5065 <try_fill_recv+0xa5>
    0.00 :   5065:   mov    %rdx,%rax
    0.00 :   5068:   mov    0x0(%rip),%r10        # 506f <try_fill_recv+0xaf>
    0.00 :   506f:   sub    %rsi,%rax
    0.00 :   5072:   mov    %r10d,%edi
    0.00 :   5075:   sar    $0x6,%rax
    0.00 :   5079:   and    $0xfff,%edi
    0.00 :   507f:   shl    $0xc,%rax
    0.00 :   5083:   add    %r10,%rax
    0.00 :   5086:   add    %rbp,%rax
    0.00 :   5089:   jb     56fa <try_fill_recv+0x73a>
    0.00 :   508f:   mov    $0xffffffff80000000,%r11
    0.00 :   5096:   sub    %r10,%r11
    0.00 :   5099:   add    %r11,%rax
    0.00 :   509c:   shr    $0xc,%rax
    0.00 :   50a0:   shl    $0x6,%rax
    0.00 :   50a4:   lea    (%rax,%rsi,1),%r10
    0.00 :   50a8:   mov    (%r14),%rax
    0.00 :   50ab:   and    $0x3,%eax
    0.00 :   50ae:   and    $0x3,%esi
    0.00 :   50b1:   jne    5489 <try_fill_recv+0x4c9>
    0.00 :   50b7:   or     %rax,%r10
    0.00 :   50ba:   mov    %edi,0x8(%r14)
    0.00 :   50be:   sub    $0x20,%r14
    0.00 :   50c2:   mov    %r10,0x20(%r14)
    0.00 :   50c6:   movl   $0x1000,0x2c(%r14)
    0.00 :   50ce:   mov    %r8,0x28(%rdx)
    0.00 :   50d2:   cmp    %r9,%r14
    0.00 :   50d5:   je     54a4 <try_fill_recv+0x4e4>
    0.00 :   50db:   mov    %rdx,%r8
    0.00 :   50de:   mov    0x1e0(%rbx),%rdx
    0.00 :   50e5:   test   %rdx,%rdx
    0.00 :   50e8:   jne    504b <try_fill_recv+0x8b>
    0.00 :   50ee:   xor    %esi,%esi
    0.00 :   50f0:   mov    %r12d,%edi
    0.00 :   50f3:   mov    %r9,0x8(%rsp)
    0.00 :   50f8:   mov    %r8,(%rsp)
    0.00 :   50fc:   call   5101 <try_fill_recv+0x141>
    0.00 :   5101:   mov    (%rsp),%r8
    0.00 :   5105:   mov    0x8(%rsp),%r9
    0.00 :   510a:   test   %rax,%rax
    0.00 :   510d:   mov    %rax,%rdx
    0.00 :   5110:   jne    505e <try_fill_recv+0x9e>
    0.00 :   5116:   test   %r8,%r8
    0.00 :   5119:   je     5481 <try_fill_recv+0x4c1>
    0.00 :   511f:   mov    0x28(%r8),%rax
    0.00 :   5123:   test   %rax,%rax
    0.00 :   5126:   je     56ea <try_fill_recv+0x72a>
    0.00 :   512c:   mov    %rax,%rdx
    0.00 :   512f:   mov    0x28(%rax),%rax
    0.00 :   5133:   test   %rax,%rax
    0.00 :   5136:   jne    512c <try_fill_recv+0x16c>
    0.00 :   5138:   mov    0x1e0(%rbx),%rax
    0.00 :   513f:   mov    %rax,0x28(%rdx)
    0.00 :   5143:   mov    (%rbx),%rdi
    0.00 :   5146:   mov    %r8,0x1e0(%rbx)
    0.00 :   514d:   call   5152 <try_fill_recv+0x192>
    0.00 :   5152:   test   %al,%al
    0.00 :   5154:   jne    5408 <try_fill_recv+0x448>
    0.00 :   515a:   add    $0x18,%rsp
    0.00 :   515e:   mov    %r13d,%eax
    0.00 :   5161:   pop    %rbx
    0.00 :   5162:   pop    %rbp
    0.00 :   5163:   pop    %r12
    0.00 :   5165:   pop    %r13
    0.00 :   5167:   pop    %r14
    0.00 :   5169:   pop    %r15
    0.00 :   516b:   jmp    5170 <try_fill_recv+0x1b0>
    0.00 :   5170:   movzbl 0x32(%r15),%r8d
    0.00 :   5175:   lea    0x1f0(%rbx),%rsi
    0.00 :   517c:   mov    %r12d,%edx
    0.00 :   517f:   shl    $0x8,%r8d
    0.00 :   5183:   mov    %r8d,%eax
    0.00 :   5186:   mov    %r8d,0x8(%rsp)
    0.00 :   518b:   mov    %rax,0x10(%rsp)
    0.00 :   5190:   movzbl 0x4a(%r15),%eax
    0.00 :   5195:   lea    0x66d(%r8,%rax,1),%edi
    0.00 :   519d:   and    $0xffffffc0,%edi
    0.00 :   51a0:   add    $0x140,%edi
    0.00 :   51a6:   mov    %edi,(%rsp)
    0.00 :   51a9:   call   51ae <try_fill_recv+0x1ee>
    0.00 :   51ae:   mov    (%rsp),%edi
    0.00 :   51b1:   mov    0x8(%rsp),%r8d
    0.00 :   51b6:   test   %al,%al
    0.00 :   51b8:   mov    %eax,%r13d
    0.00 :   51bb:   je     5481 <try_fill_recv+0x4c1>
    0.00 :   51c1:   mov    0x1f0(%rbx),%rax
    0.00 :   51c8:   mov    0x1f8(%rbx),%edx
    0.00 :   51ce:   mov    %rax,%r14
    0.00 :   51d1:   sub    0x0(%rip),%r14        # 51d8 <try_fill_recv+0x218>
    0.00 :   51d8:   sar    $0x6,%r14
    0.00 :   51dc:   shl    $0xc,%r14
    0.00 :   51e0:   add    0x0(%rip),%r14        # 51e7 <try_fill_recv+0x227>
    0.00 :   51e7:   add    %rdx,%r14
    0.00 :   51ea:   mov    0x8(%rax),%rdx
    0.00 :   51ee:   test   $0x1,%dl
    0.00 :   51f1:   jne    565c <try_fill_recv+0x69c>
    0.00 :   51f7:   nopl   0x0(%rax,%rax,1)
    0.00 :   51fc:   mov    0x34(%rax),%edx
    0.00 :   51ff:   add    $0x7f,%edx
    0.00 :   5202:   cmp    $0x7f,%edx
    0.00 :   5205:   jbe    5665 <try_fill_recv+0x6a5>
    0.00 :   520b:   lock incl 0x34(%rax)
    0.00 :   520f:   add    %edi,0x1f8(%rbx)
    0.00 :   5215:   movzbl 0x4a(%r15),%edx
    0.00 :   521a:   lea    0x40(%r8),%esi
    0.00 :   521e:   lea    0x200(%rbx),%r13
    0.00 :   5225:   add    %r14,%rsi
    0.00 :   5228:   mov    %r13,%rdi
    0.00 :   522b:   add    $0x5ee,%edx
    0.00 :   5231:   call   5236 <try_fill_recv+0x276>
    0.00 :   5236:   mov    (%rbx),%rdi
    0.00 :   5239:   mov    0x10(%rsp),%r8
    0.00 :   523e:   mov    %r12d,%r9d
    0.00 :   5241:   mov    %r14,%rcx
    0.00 :   5244:   mov    $0x1,%edx
    0.00 :   5249:   mov    %r13,%rsi
    0.00 :   524c:   call   5251 <try_fill_recv+0x291>
    0.00 :   5251:   test   %eax,%eax
    0.00 :   5253:   js     5609 <try_fill_recv+0x649>
    0.00 :   5259:   mov    (%rbx),%rdi
    0.00 :   525c:   test   %eax,%eax
    0.00 :   525e:   jne    526b <try_fill_recv+0x2ab>
    0.00 :   5260:   mov    0x2c(%rdi),%eax
    0.00 :   5263:   test   %eax,%eax
    0.00 :   5265:   jne    4fe1 <try_fill_recv+0x21>
    0.00 :   526b:   mov    $0x1,%r13d
    0.00 :   5271:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   5276:   cmpb   $0x0,0x32(%r15)
    0.00 :   527b:   lea    0x1f0(%rbx),%rsi
    0.00 :   5282:   jne    548b <try_fill_recv+0x4cb>
    0.00 :   5288:   mov    (%rbx),%rax
    0.00 :   528b:   mov    0x1e8(%rbx),%edx
    0.00 :   5291:   movl   $0x0,(%rsp)
    0.00 :   5298:   mov    0x20(%rax),%rax
    0.00 :   529c:   mov    0x330(%rax),%rax
    0.00 :   52a3:   movzbl 0x4a(%rax),%ecx
    0.00 :   52a7:   mov    0x460(%rbx),%eax
    0.00 :   52ad:   cmp    %edx,%eax
    0.00 :   52af:   cmovb  %edx,%eax
    0.00 :   52b2:   mov    $0x1000,%edx
    0.00 :   52b7:   sub    %ecx,%edx
    0.00 :   52b9:   cmp    %edx,%eax
   27.41 :   52bb:   cmova  %edx,%eax // [virtio_net][52bb]
    0.00 :   52be:   lea    0x3f(%rcx,%rax,1),%eax
    0.00 :   52c2:   and    $0xffffffc0,%eax
    0.00 :   52c5:   mov    %eax,%r14d
    0.00 :   52c8:   mov    %eax,%edi
    0.00 :   52ca:   mov    %r12d,%edx
    0.00 :   52cd:   mov    %edi,0x8(%rsp)
   23.34 :   52d1:   call   52d6 <try_fill_recv+0x316> // [virtio_net][52d1]
    0.00 :   52d6:   mov    %eax,%r13d
    0.00 :   52d9:   test   %al,%al
    0.00 :   52db:   je     5481 <try_fill_recv+0x4c1>
    0.00 :   52e1:   mov    0x1f0(%rbx),%rax
    0.00 :   52e8:   mov    0x1f8(%rbx),%edx
    0.00 :   52ee:   mov    (%rsp),%ecx
    0.00 :   52f1:   mov    0x8(%rsp),%edi
    0.00 :   52f5:   mov    %rax,%r13
    0.00 :   52f8:   sub    0x0(%rip),%r13        # 52ff <try_fill_recv+0x33f>
    0.00 :   52ff:   sar    $0x6,%r13
    0.00 :   5303:   add    %rcx,%rdx
    0.00 :   5306:   shl    $0xc,%r13
    0.00 :   530a:   add    0x0(%rip),%r13        # 5311 <try_fill_recv+0x351>
   29.02 :   5311:   add    %rdx,%r13 // [virtio_net][5311]
    0.00 :   5314:   mov    0x8(%rax),%rdx
    0.00 :   5318:   test   $0x1,%dl
    0.00 :   531b:   jne    5676 <try_fill_recv+0x6b6>
    0.00 :   5321:   nopl   0x0(%rax,%rax,1)
    0.00 :   5326:   mov    0x34(%rax),%edx
    0.00 :   5329:   add    $0x7f,%edx
    0.00 :   532c:   cmp    $0x7f,%edx
    0.00 :   532f:   jbe    567f <try_fill_recv+0x6bf>
    0.00 :   5335:   lock incl 0x34(%rax)
    0.00 :   5339:   mov    0x1f8(%rbx),%eax
    0.00 :   533f:   mov    0x1fc(%rbx),%edx
    0.00 :   5345:   add    %edi,%eax
    0.00 :   5347:   mov    %edx,%ecx
    0.00 :   5349:   sub    %eax,%ecx
    0.00 :   534b:   mov    %eax,0x1f8(%rbx)
    0.00 :   5351:   cmp    %edi,%ecx
    0.00 :   5353:   jae    535e <try_fill_recv+0x39e>
    0.00 :   5355:   mov    %edx,0x1f8(%rbx)
    0.00 :   535b:   add    %ecx,%r14d
    0.00 :   535e:   lea    0x200(%rbx),%rax
    0.00 :   5365:   mov    %r14d,%edx
    0.00 :   5368:   mov    %r13,%rsi
    0.00 :   536b:   mov    %rax,%rdi
    0.00 :   536e:   mov    %rax,0x8(%rsp)
    0.00 :   5373:   call   5378 <try_fill_recv+0x3b8>
    0.00 :   5378:   mov    (%rsp),%r8d
    0.00 :   537c:   mov    (%rbx),%rdi
    0.00 :   537f:   mov    %r12d,%r9d
   20.23 :   5382:   mov    0x8(%rsp),%rsi // [virtio_net][5382]
    0.00 :   5387:   mov    %r13,%rcx
    0.00 :   538a:   mov    $0x1,%edx
    0.00 :   538f:   shl    $0x16,%r8d
    0.00 :   5393:   or     %r14d,%r8d
    0.00 :   5396:   call   539b <try_fill_recv+0x3db>
    0.00 :   539b:   test   %eax,%eax
    0.00 :   539d:   jns    5259 <try_fill_recv+0x299>
    0.00 :   53a3:   mov    $0x80000000,%edx
    0.00 :   53a8:   add    %rdx,%r13
    0.00 :   53ab:   jb     5712 <try_fill_recv+0x752>
    0.00 :   53b1:   mov    $0xffffffff80000000,%rdx
    0.00 :   53b8:   sub    0x0(%rip),%rdx        # 53bf <try_fill_recv+0x3ff>
    0.00 :   53bf:   add    %r13,%rdx
    0.00 :   53c2:   shr    $0xc,%rdx
    0.00 :   53c6:   shl    $0x6,%rdx
    0.00 :   53ca:   add    0x0(%rip),%rdx        # 53d1 <try_fill_recv+0x411>
    0.00 :   53d1:   mov    0x8(%rdx),%rcx
    0.00 :   53d5:   mov    %rdx,%rdi
    0.00 :   53d8:   test   $0x1,%cl
    0.00 :   53db:   jne    56dd <try_fill_recv+0x71d>
    0.00 :   53e1:   nopl   0x0(%rax,%rax,1)
    0.00 :   53e6:   mov    %eax,(%rsp)
    0.00 :   53e9:   call   1ef0 <put_page>
    0.00 :   53ee:   mov    (%rsp),%eax
    0.00 :   53f1:   mov    (%rbx),%rdi
    0.00 :   53f4:   cmp    $0xfffffff4,%eax
    0.00 :   53f7:   setne  %r13b
    0.00 :   53fb:   call   5400 <try_fill_recv+0x440>
    0.00 :   5400:   test   %al,%al
    0.00 :   5402:   je     515a <try_fill_recv+0x19a>
    0.00 :   5408:   mov    (%rbx),%rdi
    0.00 :   540b:   call   5410 <try_fill_recv+0x450>
    0.00 :   5410:   test   %al,%al
    0.00 :   5412:   je     515a <try_fill_recv+0x19a>
    0.00 :   5418:   addq   $0x1,0x1d8(%rbx)
    0.00 :   5420:   jmp    515a <try_fill_recv+0x19a>
    0.00 :   5425:   test   $0xfff,%eax
    0.00 :   542a:   jne    51fc <try_fill_recv+0x23c>
    0.00 :   5430:   mov    (%rax),%rdx
    0.00 :   5433:   test   $0x10000,%edx
    0.00 :   5439:   je     51fc <try_fill_recv+0x23c>
    0.00 :   543f:   mov    0x48(%rax),%rdx
    0.00 :   5443:   lea    -0x1(%rdx),%rcx
    0.00 :   5447:   and    $0x1,%edx
    0.00 :   544a:   cmovne %rcx,%rax
    0.00 :   544e:   jmp    51fc <try_fill_recv+0x23c>
    0.00 :   5453:   test   $0xfff,%eax
    0.00 :   5458:   jne    5326 <try_fill_recv+0x366>
    0.00 :   545e:   mov    (%rax),%rdx
    0.00 :   5461:   test   $0x10000,%edx
    0.00 :   5467:   je     5326 <try_fill_recv+0x366>
    0.00 :   546d:   mov    0x48(%rax),%rdx
    0.00 :   5471:   lea    -0x1(%rdx),%rcx
    0.00 :   5475:   and    $0x1,%edx
    0.00 :   5478:   cmovne %rcx,%rax
    0.00 :   547c:   jmp    5326 <try_fill_recv+0x366>
    0.00 :   5481:   mov    (%rbx),%rdi
    0.00 :   5484:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   5489:   ud2
    0.00 :   548b:   movl   $0x100,(%rsp)
    0.00 :   5492:   mov    $0x1000,%edi
    0.00 :   5497:   mov    $0xdc0,%r14d
    0.00 :   549d:   jmp    52ca <try_fill_recv+0x30a>
    0.00 :   54a2:   xor    %edx,%edx
    0.00 :   54a4:   mov    0x1e0(%rbx),%r14
    0.00 :   54ab:   test   %r14,%r14
    0.00 :   54ae:   je     5690 <try_fill_recv+0x6d0>
    0.00 :   54b4:   mov    0x28(%r14),%rax
    0.00 :   54b8:   mov    %rax,0x1e0(%rbx)
    0.00 :   54bf:   movq   $0x0,0x28(%r14)
    0.00 :   54c7:   mov    0x0(%rip),%rsi        # 54ce <try_fill_recv+0x50e>
    0.00 :   54ce:   mov    %r14,%rax
    0.00 :   54d1:   mov    $0x80000000,%ecx
    0.00 :   54d6:   mov    0x0(%rip),%rdi        # 54dd <try_fill_recv+0x51d>
    0.00 :   54dd:   movzbl 0x4a(%r15),%r8d
    0.00 :   54e2:   sub    %rsi,%rax
    0.00 :   54e5:   mov    %edi,%r9d
    0.00 :   54e8:   sar    $0x6,%rax
    0.00 :   54ec:   and    $0xfff,%r9d
    0.00 :   54f3:   shl    $0xc,%rax
    0.00 :   54f7:   add    %rdi,%rax
    0.00 :   54fa:   add    %rax,%rcx
    0.00 :   54fd:   jb     572a <try_fill_recv+0x76a>
    0.00 :   5503:   mov    $0xffffffff80000000,%r10
    0.00 :   550a:   sub    %rdi,%r10
    0.00 :   550d:   add    %r10,%rcx
    0.00 :   5510:   shr    $0xc,%rcx
    0.00 :   5514:   shl    $0x6,%rcx
    0.00 :   5518:   lea    (%rcx,%rsi,1),%r10
    0.00 :   551c:   mov    0x200(%rbx),%rcx
    0.00 :   5523:   and    $0x3,%ecx
    0.00 :   5526:   test   $0x3,%sil
    0.00 :   552a:   jne    56e6 <try_fill_recv+0x726>
    0.00 :   5530:   add    $0x20,%rax
    0.00 :   5534:   or     %rcx,%r10
    0.00 :   5537:   mov    %r8d,0x20c(%rbx)
    0.00 :   553e:   mov    $0x80000000,%r8d
    0.00 :   5544:   mov    %eax,%ecx
    0.00 :   5546:   mov    %r10,0x200(%rbx)
    0.00 :   554d:   mov    %r9d,0x208(%rbx)
    0.00 :   5554:   and    $0xfff,%ecx
    0.00 :   555a:   add    %r8,%rax
    0.00 :   555d:   jb     5706 <try_fill_recv+0x746>
    0.00 :   5563:   mov    $0xffffffff80000000,%r8
    0.00 :   556a:   sub    %rdi,%r8
    0.00 :   556d:   add    %r8,%rax
    0.00 :   5570:   shr    $0xc,%rax
    0.00 :   5574:   shl    $0x6,%rax
    0.00 :   5578:   lea    (%rax,%rsi,1),%rdi
    0.00 :   557c:   mov    0x220(%rbx),%rax
    0.00 :   5583:   and    $0x3,%eax
    0.00 :   5586:   and    $0x3,%esi
    0.00 :   5589:   jne    56e8 <try_fill_recv+0x728>
    0.00 :   558f:   or     %rax,%rdi
    0.00 :   5592:   mov    %ecx,0x228(%rbx)
    0.00 :   5598:   mov    0x10(%rsp),%rsi
    0.00 :   559d:   mov    %r12d,%r8d
    0.00 :   55a0:   mov    %rdi,0x220(%rbx)
    0.00 :   55a7:   mov    %r14,%rcx
    0.00 :   55aa:   movl   $0xfe0,0x22c(%rbx)
    0.00 :   55b4:   mov    %rdx,0x28(%r14)
    0.00 :   55b8:   mov    0x34(%r15),%eax
    0.00 :   55bc:   mov    (%rbx),%rdi
    0.00 :   55bf:   lea    0x2(%rax),%edx
    0.00 :   55c2:   call   55c7 <try_fill_recv+0x607>
    0.00 :   55c7:   test   %eax,%eax
    0.00 :   55c9:   jns    5259 <try_fill_recv+0x299>
    0.00 :   55cf:   mov    0x28(%r14),%rdx
    0.00 :   55d3:   test   %rdx,%rdx
    0.00 :   55d6:   je     56f2 <try_fill_recv+0x732>
    0.00 :   55dc:   mov    %rdx,%rcx
    0.00 :   55df:   mov    0x28(%rdx),%rdx
    0.00 :   55e3:   test   %rdx,%rdx
    0.00 :   55e6:   jne    55dc <try_fill_recv+0x61c>
    0.00 :   55e8:   mov    0x1e0(%rbx),%rdx
    0.00 :   55ef:   cmp    $0xfffffff4,%eax
    0.00 :   55f2:   setne  %r13b
    0.00 :   55f6:   mov    %rdx,0x28(%rcx)
    0.00 :   55fa:   mov    (%rbx),%rdi
    0.00 :   55fd:   mov    %r14,0x1e0(%rbx)
    0.00 :   5604:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   5609:   mov    $0x80000000,%edx
    0.00 :   560e:   add    %rdx,%r14
    0.00 :   5611:   jb     571e <try_fill_recv+0x75e>
    0.00 :   5617:   mov    $0xffffffff80000000,%rdx
    0.00 :   561e:   sub    0x0(%rip),%rdx        # 5625 <try_fill_recv+0x665>
    0.00 :   5625:   add    %r14,%rdx
    0.00 :   5628:   jmp    53c2 <try_fill_recv+0x402>
    0.00 :   562d:   test   $0xfff,%edx
    0.00 :   5633:   jne    53e6 <try_fill_recv+0x426>
    0.00 :   5639:   mov    (%rdx),%rcx
    0.00 :   563c:   test   $0x10000,%ecx
    0.00 :   5642:   je     53e6 <try_fill_recv+0x426>
    0.00 :   5648:   mov    0x48(%rdx),%rcx
    0.00 :   564c:   lea    -0x1(%rcx),%rdi
    0.00 :   5650:   and    $0x1,%ecx
    0.00 :   5653:   cmove  %rdx,%rdi
    0.00 :   5657:   jmp    53e6 <try_fill_recv+0x426>
    0.00 :   565c:   lea    -0x1(%rdx),%rax
    0.00 :   5660:   jmp    51fc <try_fill_recv+0x23c>
    0.00 :   5665:   mov    $0x0,%rsi
    0.00 :   566c:   mov    %rax,%rdi
    0.00 :   566f:   call   5674 <try_fill_recv+0x6b4>
    0.00 :   5674:   ud2
    0.00 :   5676:   lea    -0x1(%rdx),%rax
    0.00 :   567a:   jmp    5326 <try_fill_recv+0x366>
    0.00 :   567f:   mov    $0x0,%rsi
    0.00 :   5686:   mov    %rax,%rdi
    0.00 :   5689:   call   568e <try_fill_recv+0x6ce>
    0.00 :   568e:   ud2
    0.00 :   5690:   xor    %esi,%esi
    0.00 :   5692:   mov    %r12d,%edi
    0.00 :   5695:   mov    %rdx,(%rsp)
    0.00 :   5699:   call   569e <try_fill_recv+0x6de>
    0.00 :   569e:   mov    (%rsp),%rdx
    0.00 :   56a2:   test   %rax,%rax
    0.00 :   56a5:   mov    %rax,%r14
    0.00 :   56a8:   jne    54c7 <try_fill_recv+0x507>
    0.00 :   56ae:   mov    0x28(%rdx),%rax
    0.00 :   56b2:   test   %rax,%rax
    0.00 :   56b5:   je     5736 <try_fill_recv+0x776>
    0.00 :   56b7:   mov    %rax,%rsi
    0.00 :   56ba:   mov    0x28(%rax),%rax
    0.00 :   56be:   test   %rax,%rax
    0.00 :   56c1:   jne    56b7 <try_fill_recv+0x6f7>
    0.00 :   56c3:   mov    0x1e0(%rbx),%rax
    0.00 :   56ca:   mov    %rax,0x28(%rsi)
    0.00 :   56ce:   mov    (%rbx),%rdi
    0.00 :   56d1:   mov    %rdx,0x1e0(%rbx)
    0.00 :   56d8:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   56dd:   lea    -0x1(%rcx),%rdi
    0.00 :   56e1:   jmp    53e6 <try_fill_recv+0x426>
    0.00 :   56e6:   ud2
    0.00 :   56e8:   ud2
    0.00 :   56ea:   mov    %r8,%rdx
    0.00 :   56ed:   jmp    5138 <try_fill_recv+0x178>
    0.00 :   56f2:   mov    %r14,%rcx
    0.00 :   56f5:   jmp    55e8 <try_fill_recv+0x628>
    0.00 :   56fa:   mov    0x0(%rip),%r11        # 5701 <try_fill_recv+0x741>
    0.00 :   5701:   jmp    5099 <try_fill_recv+0xd9>
    0.00 :   5706:   mov    0x0(%rip),%r8        # 570d <try_fill_recv+0x74d>
    0.00 :   570d:   jmp    556d <try_fill_recv+0x5ad>
    0.00 :   5712:   mov    0x0(%rip),%rdx        # 5719 <try_fill_recv+0x759>
    0.00 :   5719:   jmp    53bf <try_fill_recv+0x3ff>
    0.00 :   571e:   mov    0x0(%rip),%rdx        # 5725 <try_fill_recv+0x765>
    0.00 :   5725:   jmp    5625 <try_fill_recv+0x665>
    0.00 :   572a:   mov    0x0(%rip),%r10        # 5731 <try_fill_recv+0x771>
    0.00 :   5731:   jmp    550d <try_fill_recv+0x54d>
    0.00 :   5736:   mov    %rdx,%rsi
    0.00 :   5739:   jmp    56c3 <try_fill_recv+0x703>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   41.29 dbt2-driver[41007e]
   33.20 dbt2-driver[40ff54]
   25.51 dbt2-driver[40ff66]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040ff53 <generate_new_order_data>:
         : 6      generate_new_order_data():
    0.00 :   40ff53: push   %rbp
   33.20 :   40ff54: mov    %rsp,%rbp // dbt2-driver[40ff54]
    0.00 :   40ff57: sub    $0x30,%rsp
    0.00 :   40ff5b: mov    %rdi,-0x18(%rbp)
    0.00 :   40ff5f: mov    %esi,-0x1c(%rbp)
    0.00 :   40ff62: mov    %rdx,-0x28(%rbp)
   25.51 :   40ff66: mov    -0x28(%rbp),%rax // dbt2-driver[40ff66]
    0.00 :   40ff6a: mov    $0x19e0,%edx
    0.00 :   40ff6f: mov    $0x0,%esi
    0.00 :   40ff74: mov    %rax,%rdi
    0.00 :   40ff77: call   407180 <memset@plt>
    0.00 :   40ff7c: mov    -0x28(%rbp),%rax
    0.00 :   40ff80: mov    -0x1c(%rbp),%edx
    0.00 :   40ff83: mov    %edx,(%rax)
    0.00 :   40ff85: mov    -0x18(%rbp),%rax
    0.00 :   40ff89: mov    $0xa,%esi
    0.00 :   40ff8e: mov    %rax,%rdi
    0.00 :   40ff91: call   407ff5 <get_random>
    0.00 :   40ff96: add    $0x1,%eax
    0.00 :   40ff99: mov    %eax,%edx
    0.00 :   40ff9b: mov    -0x28(%rbp),%rax
    0.00 :   40ff9f: mov    %edx,0x4(%rax)
    0.00 :   40ffa2: mov    -0x18(%rbp),%rax
    0.00 :   40ffa6: mov    $0xbb8,%ecx
    0.00 :   40ffab: mov    $0x1,%edx
    0.00 :   40ffb0: mov    $0x3ff,%esi
    0.00 :   40ffb5: mov    %rax,%rdi
    0.00 :   40ffb8: call   407f17 <get_nurand>
    0.00 :   40ffbd: mov    -0x28(%rbp),%rdx
    0.00 :   40ffc1: mov    %eax,0x8(%rdx)
    0.00 :   40ffc4: mov    -0x18(%rbp),%rax
    0.00 :   40ffc8: mov    $0xa,%esi
    0.00 :   40ffcd: mov    %rax,%rdi
    0.00 :   40ffd0: call   407ff5 <get_random>
    0.00 :   40ffd5: lea    0x6(%rax),%edx
    0.00 :   40ffd8: mov    -0x28(%rbp),%rax
    0.00 :   40ffdc: mov    %edx,0xc(%rax)
    0.00 :   40ffdf: movl   $0x0,-0x4(%rbp)
    0.00 :   40ffe6: jmp    4101ed <generate_new_order_data+0x29a>
    0.00 :   40ffeb: mov    -0x18(%rbp),%rax
    0.00 :   40ffef: mov    $0x186a0,%ecx
    0.00 :   40fff4: mov    $0x1,%edx
    0.00 :   40fff9: mov    $0x1fff,%esi
    0.00 :   40fffe: mov    %rax,%rdi
    0.00 :   410001: call   407f17 <get_nurand>
    0.00 :   410006: mov    %eax,%ecx
    0.00 :   410008: mov    -0x28(%rbp),%rsi
    0.00 :   41000c: mov    -0x4(%rbp),%eax
    0.00 :   41000f: movslq %eax,%rdx
    0.00 :   410012: mov    %rdx,%rax
    0.00 :   410015: add    %rax,%rax
    0.00 :   410018: add    %rdx,%rax
    0.00 :   41001b: lea    0x0(,%rax,8),%rdx
    0.00 :   410023: add    %rdx,%rax
    0.00 :   410026: shl    $0x4,%rax
    0.00 :   41002a: add    %rsi,%rax
    0.00 :   41002d: add    $0x18,%rax
    0.00 :   410031: mov    %ecx,(%rax)
    0.00 :   410033: mov    0x7307(%rip),%eax        # 417340 <table_cardinality>
    0.00 :   410039: cmp    $0x1,%eax
    0.00 :   41003c: jle    41017b <generate_new_order_data+0x228>
    0.00 :   410042: mov    0x742c(%rip),%eax        # 417474 <mode_altered>
    0.00 :   410048: cmp    $0x1,%eax
    0.00 :   41004b: je     410063 <generate_new_order_data+0x110>
    0.00 :   41004d: mov    -0x18(%rbp),%rax
    0.00 :   410051: mov    $0x64,%esi
    0.00 :   410056: mov    %rax,%rdi
    0.00 :   410059: call   407ff5 <get_random>
    0.00 :   41005e: test   %rax,%rax
    0.00 :   410061: jle    410096 <generate_new_order_data+0x143>
    0.00 :   410063: mov    -0x28(%rbp),%rcx
    0.00 :   410067: mov    -0x4(%rbp),%eax
    0.00 :   41006a: movslq %eax,%rdx
    0.00 :   41006d: mov    %rdx,%rax
    0.00 :   410070: add    %rax,%rax
    0.00 :   410073: add    %rdx,%rax
    0.00 :   410076: lea    0x0(,%rax,8),%rdx
   41.29 :   41007e: add    %rdx,%rax // dbt2-driver[41007e]
    0.00 :   410081: shl    $0x4,%rax
    0.00 :   410085: add    %rcx,%rax
    0.00 :   410088: lea    0x1c(%rax),%rdx
    0.00 :   41008c: mov    -0x1c(%rbp),%eax
    0.00 :   41008f: mov    %eax,(%rdx)
    0.00 :   410091: jmp    4101aa <generate_new_order_data+0x257>
    0.00 :   410096: mov    0x72a4(%rip),%eax        # 417340 <table_cardinality>
    0.00 :   41009c: sub    $0x1,%eax
    0.00 :   41009f: movslq %eax,%rdx
    0.00 :   4100a2: mov    -0x18(%rbp),%rax
    0.00 :   4100a6: mov    %rdx,%rsi
    0.00 :   4100a9: mov    %rax,%rdi
    0.00 :   4100ac: call   407ff5 <get_random>
    0.00 :   4100b1: add    $0x1,%eax
    0.00 :   4100b4: mov    %eax,%esi
    0.00 :   4100b6: mov    -0x28(%rbp),%rcx
    0.00 :   4100ba: mov    -0x4(%rbp),%eax
    0.00 :   4100bd: movslq %eax,%rdx
    0.00 :   4100c0: mov    %rdx,%rax
    0.00 :   4100c3: add    %rax,%rax
    0.00 :   4100c6: add    %rdx,%rax
    0.00 :   4100c9: lea    0x0(,%rax,8),%rdx
    0.00 :   4100d1: add    %rdx,%rax
    0.00 :   4100d4: shl    $0x4,%rax
    0.00 :   4100d8: add    %rcx,%rax
    0.00 :   4100db: add    $0x1c,%rax
    0.00 :   4100df: mov    %esi,(%rax)
    0.00 :   4100e1: mov    -0x28(%rbp),%rcx
    0.00 :   4100e5: mov    -0x4(%rbp),%eax
    0.00 :   4100e8: movslq %eax,%rdx
    0.00 :   4100eb: mov    %rdx,%rax
    0.00 :   4100ee: add    %rax,%rax
    0.00 :   4100f1: add    %rdx,%rax
    0.00 :   4100f4: lea    0x0(,%rax,8),%rdx
    0.00 :   4100fc: add    %rdx,%rax
    0.00 :   4100ff: shl    $0x4,%rax
    0.00 :   410103: add    %rcx,%rax
    0.00 :   410106: add    $0x1c,%rax
    0.00 :   41010a: mov    (%rax),%eax
    0.00 :   41010c: cmp    %eax,-0x1c(%rbp)
    0.00 :   41010f: jg     4101aa <generate_new_order_data+0x257>
    0.00 :   410115: mov    -0x28(%rbp),%rcx
    0.00 :   410119: mov    -0x4(%rbp),%eax
    0.00 :   41011c: movslq %eax,%rdx
    0.00 :   41011f: mov    %rdx,%rax
    0.00 :   410122: add    %rax,%rax
    0.00 :   410125: add    %rdx,%rax
    0.00 :   410128: lea    0x0(,%rax,8),%rdx
    0.00 :   410130: add    %rdx,%rax
    0.00 :   410133: shl    $0x4,%rax
    0.00 :   410137: add    %rcx,%rax
    0.00 :   41013a: add    $0x1c,%rax
    0.00 :   41013e: mov    (%rax),%eax
    0.00 :   410140: add    $0x1,%eax
    0.00 :   410143: mov    0x71f7(%rip),%ecx        # 417340 <table_cardinality>
    0.00 :   410149: cltd
    0.00 :   41014a: idiv   %ecx
    0.00 :   41014c: mov    %edx,%esi
    0.00 :   41014e: mov    -0x28(%rbp),%rcx
    0.00 :   410152: mov    -0x4(%rbp),%eax
    0.00 :   410155: movslq %eax,%rdx
    0.00 :   410158: mov    %rdx,%rax
    0.00 :   41015b: add    %rax,%rax
    0.00 :   41015e: add    %rdx,%rax
    0.00 :   410161: lea    0x0(,%rax,8),%rdx
    0.00 :   410169: add    %rdx,%rax
    0.00 :   41016c: shl    $0x4,%rax
    0.00 :   410170: add    %rcx,%rax
    0.00 :   410173: add    $0x1c,%rax
    0.00 :   410177: mov    %esi,(%rax)
    0.00 :   410179: jmp    4101aa <generate_new_order_data+0x257>
    0.00 :   41017b: mov    -0x28(%rbp),%rcx
    0.00 :   41017f: mov    -0x4(%rbp),%eax
    0.00 :   410182: movslq %eax,%rdx
    0.00 :   410185: mov    %rdx,%rax
    0.00 :   410188: add    %rax,%rax
    0.00 :   41018b: add    %rdx,%rax
    0.00 :   41018e: lea    0x0(,%rax,8),%rdx
    0.00 :   410196: add    %rdx,%rax
    0.00 :   410199: shl    $0x4,%rax
    0.00 :   41019d: add    %rcx,%rax
    0.00 :   4101a0: add    $0x1c,%rax
    0.00 :   4101a4: movl   $0x1,(%rax)
    0.00 :   4101aa: mov    -0x18(%rbp),%rax
    0.00 :   4101ae: mov    $0xa,%esi
    0.00 :   4101b3: mov    %rax,%rdi
    0.00 :   4101b6: call   407ff5 <get_random>
    0.00 :   4101bb: lea    0x1(%rax),%ecx
    0.00 :   4101be: mov    -0x28(%rbp),%rsi
    0.00 :   4101c2: mov    -0x4(%rbp),%eax
    0.00 :   4101c5: movslq %eax,%rdx
    0.00 :   4101c8: mov    %rdx,%rax
    0.00 :   4101cb: add    %rax,%rax
    0.00 :   4101ce: add    %rdx,%rax
    0.00 :   4101d1: lea    0x0(,%rax,8),%rdx
    0.00 :   4101d9: add    %rdx,%rax
    0.00 :   4101dc: shl    $0x4,%rax
    0.00 :   4101e0: add    %rsi,%rax
    0.00 :   4101e3: add    $0x20,%rax
    0.00 :   4101e7: mov    %ecx,(%rax)
    0.00 :   4101e9: addl   $0x1,-0x4(%rbp)
    0.00 :   4101ed: mov    -0x28(%rbp),%rax
    0.00 :   4101f1: mov    0xc(%rax),%eax
    0.00 :   4101f4: cmp    %eax,-0x4(%rbp)
    0.00 :   4101f7: jl     40ffeb <generate_new_order_data+0x98>
    0.00 :   4101fd: mov    -0x18(%rbp),%rax
    0.00 :   410201: mov    $0x64,%esi
    0.00 :   410206: mov    %rax,%rdi
    0.00 :   410209: call   407ff5 <get_random>
    0.00 :   41020e: test   %rax,%rax
    0.00 :   410211: jne    410249 <generate_new_order_data+0x2f6>
    0.00 :   410213: mov    -0x28(%rbp),%rax
    0.00 :   410217: mov    0xc(%rax),%eax
    0.00 :   41021a: sub    $0x1,%eax
    0.00 :   41021d: mov    -0x28(%rbp),%rcx
    0.00 :   410221: movslq %eax,%rdx
    0.00 :   410224: mov    %rdx,%rax
    0.00 :   410227: add    %rax,%rax
    0.00 :   41022a: add    %rdx,%rax
    0.00 :   41022d: lea    0x0(,%rax,8),%rdx
    0.00 :   410235: add    %rdx,%rax
    0.00 :   410238: shl    $0x4,%rax
    0.00 :   41023c: add    %rcx,%rax
    0.00 :   41023f: add    $0x18,%rax
    0.00 :   410243: movl   $0x0,(%rax)
    0.00 :   410249: mov    $0x1,%eax
    0.00 :   41024e: leave
    0.00 :   41024f: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   52.64 libc.so.6[d66b0]
   25.24 libc.so.6[d66dc]
   22.12 libc.so.6[d66b5]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000d66b0 <sleep>:
         : 6     __sleep():
   52.64 :   d66b0:  endbr64 // libc.so.6[d66b0]
    0.00 :   d66b4:  push   %rbp
   22.12 :   d66b5:  push   %rbx // libc.so.6[d66b5]
    0.00 :   d66b6:  sub    $0x28,%rsp
    0.00 :   d66ba:  mov    0xfc74f(%rip),%rbx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   d66c1:  mov    %fs:0x28,%rax
    0.00 :   d66ca:  mov    %rax,0x18(%rsp)
    0.00 :   d66cf:  xor    %eax,%eax
    0.00 :   d66d1:  mov    %edi,%eax
    0.00 :   d66d3:  mov    %rsp,%rdi
    0.00 :   d66d6:  mov    %rdi,%rsi
    0.00 :   d66d9:  mov    %fs:(%rbx),%ebp
   25.24 :   d66dc:  mov    %rax,(%rsp) // libc.so.6[d66dc]
    0.00 :   d66e0:  movq   $0x0,0x8(%rsp)
    0.00 :   d66e9:  call   d67a0 <__nanosleep>
    0.00 :   d66ee:  test   %eax,%eax
    0.00 :   d66f0:  js     d6710 <sleep+0x60>
    0.00 :   d66f2:  mov    %ebp,%fs:(%rbx)
    0.00 :   d66f5:  xor    %eax,%eax
    0.00 :   d66f7:  mov    0x18(%rsp),%rdx
    0.00 :   d66fc:  sub    %fs:0x28,%rdx
    0.00 :   d6705:  jne    d6715 <sleep+0x65>
    0.00 :   d6707:  add    $0x28,%rsp
    0.00 :   d670b:  pop    %rbx
    0.00 :   d670c:  pop    %rbp
    0.00 :   d670d:  ret
    0.00 :   d670e:  xchg   %ax,%ax
    0.00 :   d6710:  mov    (%rsp),%eax
    0.00 :   d6713:  jmp    d66f7 <sleep+0x47>
    0.00 :   d6715:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   81.83 dbt2-driver[40fe24]
   18.17 dbt2-driver[40fe4b]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040fe24 <generate_input_data>:
         : 6      generate_input_data():
   81.83 :   40fe24: push   %rbp // dbt2-driver[40fe24]
    0.00 :   40fe25: mov    %rsp,%rbp
    0.00 :   40fe28: sub    $0x20,%rsp
    0.00 :   40fe2c: mov    %rdi,-0x8(%rbp)
    0.00 :   40fe30: mov    %esi,-0xc(%rbp)
    0.00 :   40fe33: mov    %rdx,-0x18(%rbp)
    0.00 :   40fe37: mov    %ecx,-0x10(%rbp)
    0.00 :   40fe3a: cmpl   $0xa,-0xc(%rbp)
    0.00 :   40fe3e: ja     40feba <generate_input_data+0x96>
    0.00 :   40fe40: mov    -0xc(%rbp),%eax
    0.00 :   40fe43: mov    0x412b00(,%rax,8),%rax
   18.17 :   40fe4b: jmp    *%rax // dbt2-driver[40fe4b]
    0.00 :   40fe4d: mov    -0x18(%rbp),%rdx
    0.00 :   40fe51: mov    -0x10(%rbp),%ecx
    0.00 :   40fe54: mov    -0x8(%rbp),%rax
    0.00 :   40fe58: mov    %ecx,%esi
    0.00 :   40fe5a: mov    %rax,%rdi
    0.00 :   40fe5d: call   40feff <generate_delivery_data>
    0.00 :   40fe62: jmp    40fec1 <generate_input_data+0x9d>
    0.00 :   40fe64: mov    -0x18(%rbp),%rdx
    0.00 :   40fe68: mov    -0x10(%rbp),%ecx
    0.00 :   40fe6b: mov    -0x8(%rbp),%rax
    0.00 :   40fe6f: mov    %ecx,%esi
    0.00 :   40fe71: mov    %rax,%rdi
    0.00 :   40fe74: call   40ff53 <generate_new_order_data>
    0.00 :   40fe79: jmp    40fec1 <generate_input_data+0x9d>
    0.00 :   40fe7b: mov    -0x18(%rbp),%rdx
    0.00 :   40fe7f: mov    -0x10(%rbp),%ecx
    0.00 :   40fe82: mov    -0x8(%rbp),%rax
    0.00 :   40fe86: mov    %ecx,%esi
    0.00 :   40fe88: mov    %rax,%rdi
    0.00 :   40fe8b: call   410250 <generate_order_status_data>
    0.00 :   40fe90: jmp    40fec1 <generate_input_data+0x9d>
    0.00 :   40fe92: mov    -0x18(%rbp),%rdx
    0.00 :   40fe96: mov    -0x10(%rbp),%ecx
    0.00 :   40fe99: mov    -0x8(%rbp),%rax
    0.00 :   40fe9d: mov    %ecx,%esi
    0.00 :   40fe9f: mov    %rax,%rdi
    0.00 :   40fea2: call   410319 <generate_payment_data>
    0.00 :   40fea7: jmp    40fec1 <generate_input_data+0x9d>
    0.00 :   40fea9: mov    -0x18(%rbp),%rdx
    0.00 :   40fead: mov    -0x10(%rbp),%eax
    0.00 :   40feb0: mov    %rdx,%rsi
    0.00 :   40feb3: mov    %eax,%edi
    0.00 :   40feb5: call   41054a <generate_integrity_data>
    0.00 :   40feba: mov    $0x0,%eax
    0.00 :   40febf: jmp    40fec6 <generate_input_data+0xa2>
    0.00 :   40fec1: mov    $0x1,%eax
    0.00 :   40fec6: leave
    0.00 :   40fec7: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   66.06 libc.so.6[d67a0]
   33.94 libc.so.6[d67a4]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000d67a0 <__nanosleep>:
         : 6     __GI___nanosleep():
   66.06 :   d67a0:  endbr64 // libc.so.6[d67a0]
   33.94 :   d67a4:  sub    $0x8,%rsp // libc.so.6[d67a4]
    0.00 :   d67a8:  mov    %rdi,%rdx
    0.00 :   d67ab:  mov    %rsi,%rcx
    0.00 :   d67ae:  xor    %edi,%edi
    0.00 :   d67b0:  xor    %esi,%esi
    0.00 :   d67b2:  call   d1fa0 <clock_nanosleep@@GLIBC_2.17>
    0.00 :   d67b7:  test   %eax,%eax
    0.00 :   d67b9:  jne    d67c0 <__nanosleep+0x20>
    0.00 :   d67bb:  add    $0x8,%rsp
    0.00 :   d67bf:  ret
    0.00 :   d67c0:  mov    0xfc649(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   d67c7:  mov    %eax,%fs:(%rdx)
    0.00 :   d67ca:  mov    $0xffffffff,%eax
    0.00 :   d67cf:  jmp    d67bb <__nanosleep+0x1b>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[9bb00]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000009bb00 <__libc_calloc>:
         : 6     __calloc():
  100.00 :   9bb00:  endbr64 // libc.so.6[9bb00]
    0.00 :   9bb04:  push   %r13
    0.00 :   9bb06:  mov    %rdi,%rax
    0.00 :   9bb09:  push   %r12
    0.00 :   9bb0b:  push   %rbp
    0.00 :   9bb0c:  push   %rbx
    0.00 :   9bb0d:  sub    $0x18,%rsp
    0.00 :   9bb11:  mul    %rsi
    0.00 :   9bb14:  mov    %rax,%rbx
    0.00 :   9bb17:  seto   %al
    0.00 :   9bb1a:  test   %rbx,%rbx
    0.00 :   9bb1d:  js     9be08 <__libc_calloc+0x308>
    0.00 :   9bb23:  movzbl %al,%eax
    0.00 :   9bb26:  test   %rax,%rax
    0.00 :   9bb29:  jne    9be08 <__libc_calloc+0x308>
    0.00 :   9bb2f:  cmpb   $0x0,0x13e972(%rip)        # 1da4a8 <__malloc_initialized>
    0.00 :   9bb36:  je     9bd80 <__libc_calloc+0x280>
    0.00 :   9bb3c:  mov    0x137265(%rip),%rax        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9bb43:  cmpq   $0x0,%fs:(%rax)
    0.00 :   9bb48:  je     9be20 <__libc_calloc+0x320>
    0.00 :   9bb4e:  cmpb   $0x0,0x13faa3(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   9bb55:  jne    9bc40 <__libc_calloc+0x140>
    0.00 :   9bb5b:  mov    0x13723e(%rip),%rax        # 1d2da0 <_DYNAMIC+0x220>
    0.00 :   9bb62:  mov    %fs:(%rax),%r13
    0.00 :   9bb66:  test   %r13,%r13
    0.00 :   9bb69:  je     9bdb8 <__libc_calloc+0x2b8>
    0.00 :   9bb6f:  xor    %eax,%eax
    0.00 :   9bb71:  mov    $0x1,%edx
    0.00 :   9bb76:  lock cmpxchg %edx,0x0(%r13)
    0.00 :   9bb7c:  jne    9be40 <__libc_calloc+0x340>
    0.00 :   9bb82:  mov    0x60(%r13),%rbp
    0.00 :   9bb86:  lea    0x1380f3(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9bb8d:  mov    0x8(%rbp),%r12
    0.00 :   9bb91:  and    $0xfffffffffffffff8,%r12
    0.00 :   9bb95:  cmp    %rax,%r13
    0.00 :   9bb98:  je     9bbcb <__libc_calloc+0xcb>
    0.00 :   9bb9a:  mov    0x1377ef(%rip),%rax        # 1d3390 <mp_+0x30>
    0.00 :   9bba1:  lea    0x0(,%rax,4),%rcx
    0.00 :   9bba9:  neg    %rcx
    0.00 :   9bbac:  test   %rax,%rax
    0.00 :   9bbaf:  mov    $0xfffffffffc000000,%rax
    0.00 :   9bbb6:  cmove  %rax,%rcx
    0.00 :   9bbba:  and    %rbp,%rcx
    0.00 :   9bbbd:  add    0x18(%rcx),%rcx
    0.00 :   9bbc1:  sub    %rbp,%rcx
    0.00 :   9bbc4:  cmp    %rcx,%r12
    0.00 :   9bbc7:  cmovb  %rcx,%r12
    0.00 :   9bbcb:  mov    %rbx,%rsi
    0.00 :   9bbce:  mov    %r13,%rdi
    0.00 :   9bbd1:  call   99760 <_int_malloc>
    0.00 :   9bbd6:  test   %rax,%rax
    0.00 :   9bbd9:  je     9bc6a <__libc_calloc+0x16a>
    0.00 :   9bbdf:  mov    -0x8(%rax),%rdx
    0.00 :   9bbe3:  test   $0x2,%dl
    0.00 :   9bbe6:  jne    9bcc0 <__libc_calloc+0x1c0>
    0.00 :   9bbec:  lea    -0x10(%rax),%rcx
    0.00 :   9bbf0:  test   $0x4,%dl
    0.00 :   9bbf3:  je     9bd90 <__libc_calloc+0x290>
    0.00 :   9bbf9:  mov    0x137790(%rip),%rdi        # 1d3390 <mp_+0x30>
    0.00 :   9bc00:  lea    0x0(,%rdi,4),%rsi
    0.00 :   9bc08:  neg    %rsi
    0.00 :   9bc0b:  test   %rdi,%rdi
    0.00 :   9bc0e:  mov    $0xfffffffffc000000,%rdi
    0.00 :   9bc15:  cmove  %rdi,%rsi
    0.00 :   9bc19:  and    %rcx,%rsi
    0.00 :   9bc1c:  cmp    (%rsi),%r13
    0.00 :   9bc1f:  jne    9be9f <__libc_calloc+0x39f>
    0.00 :   9bc25:  cmpb   $0x0,0x13f9cc(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   9bc2c:  jne    9bcf2 <__libc_calloc+0x1f2>
    0.00 :   9bc32:  test   %r13,%r13
    0.00 :   9bc35:  jne    9bcd6 <__libc_calloc+0x1d6>
    0.00 :   9bc3b:  jmp    9bcf2 <__libc_calloc+0x1f2>
    0.00 :   9bc40:  mov    0x138099(%rip),%rbp        # 1d3ce0 <main_arena+0x60>
    0.00 :   9bc47:  lea    0x138032(%rip),%r13        # 1d3c80 <main_arena>
    0.00 :   9bc4e:  mov    %rbx,%rsi
    0.00 :   9bc51:  mov    %r13,%rdi
    0.00 :   9bc54:  mov    0x8(%rbp),%r12
    0.00 :   9bc58:  and    $0xfffffffffffffff8,%r12
    0.00 :   9bc5c:  call   99760 <_int_malloc>
    0.00 :   9bc61:  test   %rax,%rax
    0.00 :   9bc64:  jne    9bbdf <__libc_calloc+0xdf>
    0.00 :   9bc6a:  cmpb   $0x0,0x13f987(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   9bc71:  jne    9bcb0 <__libc_calloc+0x1b0>
    0.00 :   9bc73:  test   %r13,%r13
    0.00 :   9bc76:  je     9bcb0 <__libc_calloc+0x1b0>
    0.00 :   9bc78:  nop
    0.00 :   9bc79:  mov    %r13,%rdi
    0.00 :   9bc7c:  mov    %rbx,%rsi
    0.00 :   9bc7f:  call   98140 <arena_get_retry>
    0.00 :   9bc84:  mov    %rbx,%rsi
    0.00 :   9bc87:  mov    %rax,%r13
    0.00 :   9bc8a:  mov    %rax,%rdi
    0.00 :   9bc8d:  call   99760 <_int_malloc>
    0.00 :   9bc92:  test   %r13,%r13
    0.00 :   9bc95:  je     9bca6 <__libc_calloc+0x1a6>
    0.00 :   9bc97:  xor    %edx,%edx
    0.00 :   9bc99:  xchg   %edx,0x0(%r13)
    0.00 :   9bc9d:  cmp    $0x1,%edx
    0.00 :   9bca0:  jg     9be67 <__libc_calloc+0x367>
    0.00 :   9bca6:  test   %rax,%rax
    0.00 :   9bca9:  jne    9bce5 <__libc_calloc+0x1e5>
    0.00 :   9bcab:  nopl   0x0(%rax,%rax,1)
    0.00 :   9bcb0:  xor    %eax,%eax
    0.00 :   9bcb2:  add    $0x18,%rsp
    0.00 :   9bcb6:  pop    %rbx
    0.00 :   9bcb7:  pop    %rbp
    0.00 :   9bcb8:  pop    %r12
    0.00 :   9bcba:  pop    %r13
    0.00 :   9bcbc:  ret
    0.00 :   9bcbd:  nopl   (%rax)
    0.00 :   9bcc0:  cmpb   $0x0,0x13f931(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   9bcc7:  jne    9bd60 <__libc_calloc+0x260>
    0.00 :   9bccd:  test   %r13,%r13
    0.00 :   9bcd0:  je     9bd60 <__libc_calloc+0x260>
    0.00 :   9bcd6:  xor    %edx,%edx
    0.00 :   9bcd8:  xchg   %edx,0x0(%r13)
    0.00 :   9bcdc:  cmp    $0x1,%edx
    0.00 :   9bcdf:  jg     9be50 <__libc_calloc+0x350>
    0.00 :   9bce5:  mov    -0x8(%rax),%rdx
    0.00 :   9bce9:  lea    -0x10(%rax),%rcx
    0.00 :   9bced:  test   $0x2,%dl
    0.00 :   9bcf0:  jne    9bd60 <__libc_calloc+0x260>
    0.00 :   9bcf2:  mov    0x13e7c4(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   9bcf8:  and    $0xfffffffffffffff8,%rdx
    0.00 :   9bcfc:  test   %esi,%esi
    0.00 :   9bcfe:  jne    9bd11 <__libc_calloc+0x211>
    0.00 :   9bd00:  cmp    %rdx,%r12
    0.00 :   9bd03:  mov    %rdx,%rsi
    0.00 :   9bd06:  cmovbe %r12,%rdx
    0.00 :   9bd0a:  cmp    %rcx,%rbp
    0.00 :   9bd0d:  cmovne %rsi,%rdx
    0.00 :   9bd11:  sub    $0x8,%rdx
    0.00 :   9bd15:  cmp    $0x17,%rdx
    0.00 :   9bd19:  jbe    9be7e <__libc_calloc+0x37e>
    0.00 :   9bd1f:  cmp    $0x4f,%rdx
    0.00 :   9bd23:  ja     9bdf0 <__libc_calloc+0x2f0>
    0.00 :   9bd29:  pxor   %xmm0,%xmm0
    0.00 :   9bd2d:  movq   $0x0,0x10(%rax)
    0.00 :   9bd35:  movups %xmm0,(%rax)
    0.00 :   9bd38:  cmp    $0x27,%rdx
    0.00 :   9bd3c:  jbe    9bd71 <__libc_calloc+0x271>
    0.00 :   9bd3e:  movups %xmm0,0x18(%rax)
    0.00 :   9bd42:  cmp    $0x37,%rdx
    0.00 :   9bd46:  jbe    9bd71 <__libc_calloc+0x271>
    0.00 :   9bd48:  movups %xmm0,0x28(%rax)
    0.00 :   9bd4c:  cmp    $0x47,%rdx
    0.00 :   9bd50:  jbe    9bd71 <__libc_calloc+0x271>
    0.00 :   9bd52:  movups %xmm0,0x38(%rax)
    0.00 :   9bd56:  jmp    9bd71 <__libc_calloc+0x271>
    0.00 :   9bd58:  nopl   0x0(%rax,%rax,1)
    0.00 :   9bd60:  mov    0x13e756(%rip),%edi        # 1da4bc <perturb_byte>
    0.00 :   9bd66:  mov    %rbx,%rdx
    0.00 :   9bd69:  test   %edi,%edi
    0.00 :   9bd6b:  jne    9bdf0 <__libc_calloc+0x2f0>
    0.00 :   9bd71:  add    $0x18,%rsp
    0.00 :   9bd75:  pop    %rbx
    0.00 :   9bd76:  pop    %rbp
    0.00 :   9bd77:  pop    %r12
    0.00 :   9bd79:  pop    %r13
    0.00 :   9bd7b:  ret
    0.00 :   9bd7c:  nopl   0x0(%rax)
    0.00 :   9bd80:  call   97830 <ptmalloc_init.part.0>
    0.00 :   9bd85:  jmp    9bb3c <__libc_calloc+0x3c>
    0.00 :   9bd8a:  nopw   0x0(%rax,%rax,1)
    0.00 :   9bd90:  lea    0x137ee9(%rip),%rsi        # 1d3c80 <main_arena>
    0.00 :   9bd97:  cmp    %rsi,%r13
    0.00 :   9bd9a:  jne    9be9f <__libc_calloc+0x39f>
    0.00 :   9bda0:  cmpb   $0x0,0x13f851(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   9bda7:  jne    9bcf2 <__libc_calloc+0x1f2>
    0.00 :   9bdad:  jmp    9bcd6 <__libc_calloc+0x1d6>
    0.00 :   9bdb2:  nopw   0x0(%rax,%rax,1)
    0.00 :   9bdb8:  call   96ed0 <get_free_list>
    0.00 :   9bdbd:  mov    %rax,%r13
    0.00 :   9bdc0:  test   %rax,%rax
    0.00 :   9bdc3:  jne    9bb82 <__libc_calloc+0x82>
    0.00 :   9bdc9:  xor    %esi,%esi
    0.00 :   9bdcb:  mov    %rbx,%rdi
    0.00 :   9bdce:  xor    %r12d,%r12d
    0.00 :   9bdd1:  call   97cd0 <arena_get2.part.0>
    0.00 :   9bdd6:  mov    %rax,%rbp
    0.00 :   9bdd9:  test   %rax,%rax
    0.00 :   9bddc:  je     9bbcb <__libc_calloc+0xcb>
    0.00 :   9bde2:  mov    %rax,%r13
    0.00 :   9bde5:  jmp    9bb82 <__libc_calloc+0x82>
    0.00 :   9bdea:  nopw   0x0(%rax,%rax,1)
    0.00 :   9bdf0:  add    $0x18,%rsp
    0.00 :   9bdf4:  xor    %esi,%esi
    0.00 :   9bdf6:  mov    %rax,%rdi
    0.00 :   9bdf9:  pop    %rbx
    0.00 :   9bdfa:  pop    %rbp
    0.00 :   9bdfb:  pop    %r12
    0.00 :   9bdfd:  pop    %r13
    0.00 :   9bdff:  jmp    26660 <*ABS*+0x9edf0@plt>
    0.00 :   9be04:  nopl   0x0(%rax)
    0.00 :   9be08:  mov    0x137001(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   9be0f:  movl   $0xc,%fs:(%rax)
    0.00 :   9be16:  xor    %eax,%eax
    0.00 :   9be18:  jmp    9bcb2 <__libc_calloc+0x1b2>
    0.00 :   9be1d:  nopl   (%rax)
    0.00 :   9be20:  mov    0x136f89(%rip),%rax        # 1d2db0 <_DYNAMIC+0x230>
    0.00 :   9be27:  cmpb   $0x0,%fs:(%rax)
    0.00 :   9be2b:  jne    9bb4e <__libc_calloc+0x4e>
    0.00 :   9be31:  call   9a650 <tcache_init.part.0>
    0.00 :   9be36:  jmp    9bb4e <__libc_calloc+0x4e>
    0.00 :   9be3b:  nopl   0x0(%rax,%rax,1)
    0.00 :   9be40:  mov    %r13,%rdi
    0.00 :   9be43:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   9be48:  jmp    9bb82 <__libc_calloc+0x82>
    0.00 :   9be4d:  nopl   (%rax)
    0.00 :   9be50:  mov    %r13,%rdi
    0.00 :   9be53:  mov    %rax,0x8(%rsp)
    0.00 :   9be58:  call   87f80 <__lll_lock_wake_private>
    0.00 :   9be5d:  mov    0x8(%rsp),%rax
    0.00 :   9be62:  jmp    9bce5 <__libc_calloc+0x1e5>
    0.00 :   9be67:  mov    %r13,%rdi
    0.00 :   9be6a:  mov    %rax,0x8(%rsp)
    0.00 :   9be6f:  call   87f80 <__lll_lock_wake_private>
    0.00 :   9be74:  mov    0x8(%rsp),%rax
    0.00 :   9be79:  jmp    9bca6 <__libc_calloc+0x1a6>
    0.00 :   9be7e:  lea    0xfc3a9(%rip),%rcx        # 19822e <null+0x1074>
    0.00 :   9be85:  lea    0x101bc4(%rip),%rdx        # 19da50 <aliasfile.0+0x2008>
    0.00 :   9be8c:  mov    $0x1,%edi
    0.00 :   9be91:  xor    %eax,%eax
    0.00 :   9be93:  lea    0x100c36(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9be9a:  call   80df0 <__libc_message>
    0.00 :   9be9f:  lea    0x101aea(%rip),%rcx        # 19d990 <aliasfile.0+0x1f48>
    0.00 :   9bea6:  lea    0x101ba3(%rip),%rdx        # 19da50 <aliasfile.0+0x2008>
    0.00 :   9bead:  mov    $0x1,%edi
    0.00 :   9beb2:  xor    %eax,%eax
    0.00 :   9beb4:  lea    0x100c15(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9bebb:  call   80df0 <__libc_message>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   47.61 dbt2-driver[407fe5]
   29.17 dbt2-driver[407f98]
   23.22 dbt2-driver[407f99]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407f98 <get_percentage>:
         : 6      get_percentage():
   29.17 :   407f98: push   %rbp // dbt2-driver[407f98]
   23.22 :   407f99: mov    %rsp,%rbp // dbt2-driver[407f99]
    0.00 :   407f9c: sub    $0x10,%rsp
    0.00 :   407fa0: mov    %rdi,-0x8(%rbp)
    0.00 :   407fa4: mov    -0x8(%rbp),%rax
    0.00 :   407fa8: mov    %rax,%rdi
    0.00 :   407fab: call   40d490 <pcg_mcg_128_xsl_rr_64_random_r>
    0.00 :   407fb0: shr    $0xb,%rax
    0.00 :   407fb4: test   %rax,%rax
    0.00 :   407fb7: js     407fc4 <get_percentage+0x2c>
    0.00 :   407fb9: pxor   %xmm0,%xmm0
    0.00 :   407fbd: cvtsi2sd %rax,%xmm0
    0.00 :   407fc2: jmp    407fdd <get_percentage+0x45>
    0.00 :   407fc4: mov    %rax,%rdx
    0.00 :   407fc7: shr    %rdx
    0.00 :   407fca: and    $0x1,%eax
    0.00 :   407fcd: or     %rax,%rdx
    0.00 :   407fd0: pxor   %xmm0,%xmm0
    0.00 :   407fd4: cvtsi2sd %rdx,%xmm0
    0.00 :   407fd9: addsd  %xmm0,%xmm0
    0.00 :   407fdd: movsd  0x96cb(%rip),%xmm1        # 4116b0 <transaction_short_name+0xb8>
   47.61 :   407fe5: mulsd  %xmm1,%xmm0 // dbt2-driver[407fe5]
    0.00 :   407fe9: movq   %xmm0,%rax
    0.00 :   407fee: movq   %rax,%xmm0
    0.00 :   407ff3: leave
    0.00 :   407ff4: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   45.04 libc.so.6[83250]
   28.34 libc.so.6[832c9]
   26.62 libc.so.6[832b0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000083250 <_IO_file_xsputn@@GLIBC_2.2.5>:
         : 6     __GI__IO_file_xsputn():
   45.04 :   83250:  endbr64 // libc.so.6[83250]
    0.00 :   83254:  xor    %eax,%eax
    0.00 :   83256:  test   %rdx,%rdx
    0.00 :   83259:  je     83320 <_IO_file_xsputn@@GLIBC_2.2.5+0xd0>
    0.00 :   8325f:  push   %r15
    0.00 :   83261:  push   %r14
    0.00 :   83263:  push   %r13
    0.00 :   83265:  push   %r12
    0.00 :   83267:  mov    %rsi,%r12
    0.00 :   8326a:  push   %rbp
    0.00 :   8326b:  mov    %rdx,%rbp
    0.00 :   8326e:  push   %rbx
    0.00 :   8326f:  mov    %rdi,%rbx
    0.00 :   83272:  sub    $0x8,%rsp
    0.00 :   83276:  mov    (%rbx),%eax
    0.00 :   83278:  mov    0x28(%rdi),%rdi
    0.00 :   8327c:  and    $0xa00,%eax
    0.00 :   83281:  cmp    $0xa00,%eax
    0.00 :   83286:  je     832d8 <_IO_file_xsputn@@GLIBC_2.2.5+0x88>
    0.00 :   83288:  mov    0x30(%rbx),%rdx
    0.00 :   8328c:  cmp    %rdx,%rdi
    0.00 :   8328f:  jae    83338 <_IO_file_xsputn@@GLIBC_2.2.5+0xe8>
    0.00 :   83295:  sub    %rdi,%rdx
    0.00 :   83298:  xor    %r15d,%r15d
    0.00 :   8329b:  cmp    %rdx,%rbp
    0.00 :   8329e:  mov    %r12,%rsi
    0.00 :   832a1:  mov    %rbp,%r14
    0.00 :   832a4:  cmovbe %rbp,%rdx
    0.00 :   832a8:  mov    %rdx,%r13
    0.00 :   832ab:  call   263d0 <*ABS*+0x9ec40@plt>
   26.62 :   832b0:  add    %r13,%r12 // libc.so.6[832b0]
    0.00 :   832b3:  sub    %r13,%r14
    0.00 :   832b6:  mov    %rax,0x28(%rbx)
    0.00 :   832ba:  add    %r14,%r15
    0.00 :   832bd:  jne    8333b <_IO_file_xsputn@@GLIBC_2.2.5+0xeb>
    0.00 :   832bf:  mov    %rbp,%rax
    0.00 :   832c2:  sub    %r14,%rax
    0.00 :   832c5:  add    $0x8,%rsp
   28.34 :   832c9:  pop    %rbx // libc.so.6[832c9]
    0.00 :   832ca:  pop    %rbp
    0.00 :   832cb:  pop    %r12
    0.00 :   832cd:  pop    %r13
    0.00 :   832cf:  pop    %r14
    0.00 :   832d1:  pop    %r15
    0.00 :   832d3:  ret
    0.00 :   832d4:  nopl   0x0(%rax)
    0.00 :   832d8:  mov    0x40(%rbx),%rdx
    0.00 :   832dc:  lea    (%rsi,%rbp,1),%rax
    0.00 :   832e0:  sub    %rdi,%rdx
    0.00 :   832e3:  cmp    %rbp,%rdx
    0.00 :   832e6:  jb     83328 <_IO_file_xsputn@@GLIBC_2.2.5+0xd8>
    0.00 :   832e8:  nopl   0x0(%rax,%rax,1)
    0.00 :   832f0:  cmp    %rax,%r12
    0.00 :   832f3:  jae    83298 <_IO_file_xsputn@@GLIBC_2.2.5+0x48>
    0.00 :   832f5:  sub    $0x1,%rax
    0.00 :   832f9:  cmpb   $0xa,(%rax)
    0.00 :   832fc:  jne    832f0 <_IO_file_xsputn@@GLIBC_2.2.5+0xa0>
    0.00 :   832fe:  sub    %r12,%rax
    0.00 :   83301:  add    $0x1,%rax
    0.00 :   83305:  mov    %rax,%rdx
    0.00 :   83308:  jne    8342e <_IO_file_xsputn@@GLIBC_2.2.5+0x1de>
    0.00 :   8330e:  mov    %rbp,%r14
    0.00 :   83311:  mov    $0x1,%r15d
    0.00 :   83317:  jmp    832ba <_IO_file_xsputn@@GLIBC_2.2.5+0x6a>
    0.00 :   83319:  nopl   0x0(%rax)
    0.00 :   83320:  ret
    0.00 :   83321:  nopl   0x0(%rax)
    0.00 :   83328:  xor    %r15d,%r15d
    0.00 :   8332b:  test   %rdx,%rdx
    0.00 :   8332e:  jne    8329b <_IO_file_xsputn@@GLIBC_2.2.5+0x4b>
    0.00 :   83334:  nopl   0x0(%rax)
    0.00 :   83338:  mov    %rbp,%r14
    0.00 :   8333b:  mov    0xd8(%rbx),%r13
    0.00 :   83342:  lea    0x14c6b7(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   83349:  lea    0x14d418(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   83350:  sub    %rdx,%rax
    0.00 :   83353:  mov    %r13,%rcx
    0.00 :   83356:  sub    %rdx,%rcx
    0.00 :   83359:  cmp    %rax,%rcx
    0.00 :   8335c:  jae    83410 <_IO_file_xsputn@@GLIBC_2.2.5+0x1c0>
    0.00 :   83362:  mov    $0xffffffff,%esi
    0.00 :   83367:  mov    %rbx,%rdi
    0.00 :   8336a:  call   *0x18(%r13)
    0.00 :   8336e:  cmp    $0xffffffff,%eax
    0.00 :   83371:  je     833f0 <_IO_file_xsputn@@GLIBC_2.2.5+0x1a0>
    0.00 :   83373:  mov    0x40(%rbx),%rcx
    0.00 :   83377:  sub    0x38(%rbx),%rcx
    0.00 :   8337b:  cmp    $0x7f,%rcx
    0.00 :   8337f:  jbe    833b0 <_IO_file_xsputn@@GLIBC_2.2.5+0x160>
    0.00 :   83381:  mov    %r14,%rax
    0.00 :   83384:  xor    %edx,%edx
    0.00 :   83386:  mov    %r14,%r13
    0.00 :   83389:  div    %rcx
    0.00 :   8338c:  sub    %rdx,%r13
    0.00 :   8338f:  jne    833d3 <_IO_file_xsputn@@GLIBC_2.2.5+0x183>
    0.00 :   83391:  test   %r14,%r14
    0.00 :   83394:  je     833b5 <_IO_file_xsputn@@GLIBC_2.2.5+0x165>
    0.00 :   83396:  lea    (%r12,%r13,1),%rsi
    0.00 :   8339a:  mov    %r14,%rdx
    0.00 :   8339d:  mov    %rbx,%rdi
    0.00 :   833a0:  call   84f10 <_IO_default_xsputn>
    0.00 :   833a5:  sub    %r14,%rax
    0.00 :   833a8:  add    %rbp,%rax
    0.00 :   833ab:  jmp    832c5 <_IO_file_xsputn@@GLIBC_2.2.5+0x75>
    0.00 :   833b0:  test   %r14,%r14
    0.00 :   833b3:  jne    833d0 <_IO_file_xsputn@@GLIBC_2.2.5+0x180>
    0.00 :   833b5:  add    $0x8,%rsp
    0.00 :   833b9:  mov    %rbp,%rax
    0.00 :   833bc:  pop    %rbx
    0.00 :   833bd:  pop    %rbp
    0.00 :   833be:  pop    %r12
    0.00 :   833c0:  pop    %r13
    0.00 :   833c2:  pop    %r14
    0.00 :   833c4:  pop    %r15
    0.00 :   833c6:  ret
    0.00 :   833c7:  nopw   0x0(%rax,%rax,1)
    0.00 :   833d0:  mov    %r14,%r13
    0.00 :   833d3:  mov    %r13,%rdx
    0.00 :   833d6:  mov    %r12,%rsi
    0.00 :   833d9:  mov    %rbx,%rdi
    0.00 :   833dc:  call   82000 <new_do_write>
    0.00 :   833e1:  cmp    %r13,%rax
    0.00 :   833e4:  jb     83420 <_IO_file_xsputn@@GLIBC_2.2.5+0x1d0>
    0.00 :   833e6:  sub    %rax,%r14
    0.00 :   833e9:  jmp    83391 <_IO_file_xsputn@@GLIBC_2.2.5+0x141>
    0.00 :   833eb:  nopl   0x0(%rax,%rax,1)
    0.00 :   833f0:  mov    %rbp,%rax
    0.00 :   833f3:  mov    $0xffffffffffffffff,%rdx
    0.00 :   833fa:  sub    %r14,%rax
    0.00 :   833fd:  test   %r14,%r14
    0.00 :   83400:  cmove  %rdx,%rax
    0.00 :   83404:  jmp    832c5 <_IO_file_xsputn@@GLIBC_2.2.5+0x75>
    0.00 :   83409:  nopl   0x0(%rax)
    0.00 :   83410:  call   818e0 <_IO_vtable_check>
    0.00 :   83415:  jmp    83362 <_IO_file_xsputn@@GLIBC_2.2.5+0x112>
    0.00 :   8341a:  nopw   0x0(%rax,%rax,1)
    0.00 :   83420:  mov    %rbp,%rdx
    0.00 :   83423:  sub    %r14,%rdx
    0.00 :   83426:  add    %rdx,%rax
    0.00 :   83429:  jmp    832c5 <_IO_file_xsputn@@GLIBC_2.2.5+0x75>
    0.00 :   8342e:  mov    $0x1,%r15d
    0.00 :   83434:  jmp    8329b <_IO_file_xsputn@@GLIBC_2.2.5+0x4b>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   45.28 libc.so.6[81df0]
   30.05 libc.so.6[81e93]
   24.67 libc.so.6[81e37]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000081df0 <_IO_file_sync@@GLIBC_2.2.5>:
         : 6     __GI__IO_file_sync():
   45.28 :   81df0:  endbr64 // libc.so.6[81df0]
    0.00 :   81df4:  push   %rbp
    0.00 :   81df5:  push   %rbx
    0.00 :   81df6:  mov    %rdi,%rbx
    0.00 :   81df9:  sub    $0x18,%rsp
    0.00 :   81dfd:  mov    0x28(%rdi),%rdx
    0.00 :   81e01:  mov    0x20(%rdi),%rsi
    0.00 :   81e05:  cmp    %rdx,%rsi
    0.00 :   81e08:  jae    81e33 <_IO_file_sync@@GLIBC_2.2.5+0x43>
    0.00 :   81e0a:  mov    0xc0(%rdi),%eax
    0.00 :   81e10:  test   %eax,%eax
    0.00 :   81e12:  jle    81e90 <_IO_file_sync@@GLIBC_2.2.5+0xa0>
    0.00 :   81e14:  mov    0xa0(%rdi),%rax
    0.00 :   81e1b:  mov    0x18(%rax),%rsi
    0.00 :   81e1f:  mov    0x20(%rax),%rdx
    0.00 :   81e23:  sub    %rsi,%rdx
    0.00 :   81e26:  sar    $0x2,%rdx
    0.00 :   81e2a:  call   7e1d0 <_IO_wdo_write>
    0.00 :   81e2f:  test   %eax,%eax
    0.00 :   81e31:  jne    81ea0 <_IO_file_sync@@GLIBC_2.2.5+0xb0>
    0.00 :   81e33:  mov    0x8(%rbx),%rsi
   24.67 :   81e37:  sub    0x10(%rbx),%rsi // libc.so.6[81e37]
    0.00 :   81e3b:  je     81e7c <_IO_file_sync@@GLIBC_2.2.5+0x8c>
    0.00 :   81e3d:  mov    0xd8(%rbx),%rbp
    0.00 :   81e44:  lea    0x14dbb5(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   81e4b:  lea    0x14e916(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   81e52:  sub    %rdx,%rax
    0.00 :   81e55:  mov    %rbp,%rcx
    0.00 :   81e58:  sub    %rdx,%rcx
    0.00 :   81e5b:  cmp    %rax,%rcx
    0.00 :   81e5e:  jae    81ec0 <_IO_file_sync@@GLIBC_2.2.5+0xd0>
    0.00 :   81e60:  mov    $0x1,%edx
    0.00 :   81e65:  mov    %rbx,%rdi
    0.00 :   81e68:  call   *0x80(%rbp)
    0.00 :   81e6e:  cmp    $0xffffffffffffffff,%rax
    0.00 :   81e72:  je     81eb0 <_IO_file_sync@@GLIBC_2.2.5+0xc0>
    0.00 :   81e74:  mov    0x8(%rbx),%rax
    0.00 :   81e78:  mov    %rax,0x10(%rbx)
    0.00 :   81e7c:  movq   $0xffffffffffffffff,0x90(%rbx)
    0.00 :   81e87:  xor    %eax,%eax
    0.00 :   81e89:  add    $0x18,%rsp
    0.00 :   81e8d:  pop    %rbx
    0.00 :   81e8e:  pop    %rbp
    0.00 :   81e8f:  ret
    0.00 :   81e90:  sub    %rsi,%rdx
   30.05 :   81e93:  call   83d10 <_IO_do_write@@GLIBC_2.2.5> // libc.so.6[81e93]
    0.00 :   81e98:  test   %eax,%eax
    0.00 :   81e9a:  je     81e33 <_IO_file_sync@@GLIBC_2.2.5+0x43>
    0.00 :   81e9c:  nopl   0x0(%rax)
    0.00 :   81ea0:  mov    $0xffffffff,%eax
    0.00 :   81ea5:  jmp    81e89 <_IO_file_sync@@GLIBC_2.2.5+0x99>
    0.00 :   81ea7:  nopw   0x0(%rax,%rax,1)
    0.00 :   81eb0:  mov    0x150f59(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   81eb7:  cmpl   $0x1d,%fs:(%rax)
    0.00 :   81ebb:  je     81e7c <_IO_file_sync@@GLIBC_2.2.5+0x8c>
    0.00 :   81ebd:  jmp    81ea0 <_IO_file_sync@@GLIBC_2.2.5+0xb0>
    0.00 :   81ebf:  nop
    0.00 :   81ec0:  mov    %rsi,0x8(%rsp)
    0.00 :   81ec5:  call   818e0 <_IO_vtable_check>
    0.00 :   81eca:  mov    0x8(%rsp),%rsi
    0.00 :   81ecf:  jmp    81e60 <_IO_file_sync@@GLIBC_2.2.5+0x70>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[53060]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000053060 <fprintf>:
         : 6     __fprintf():
  100.00 :   53060:  endbr64 // libc.so.6[53060]
    0.00 :   53064:  sub    $0xd8,%rsp
    0.00 :   5306b:  mov    %rdx,0x30(%rsp)
    0.00 :   53070:  mov    %rcx,0x38(%rsp)
    0.00 :   53075:  mov    %r8,0x40(%rsp)
    0.00 :   5307a:  mov    %r9,0x48(%rsp)
    0.00 :   5307f:  test   %al,%al
    0.00 :   53081:  je     530ba <fprintf+0x5a>
    0.00 :   53083:  movaps %xmm0,0x50(%rsp)
    0.00 :   53088:  movaps %xmm1,0x60(%rsp)
    0.00 :   5308d:  movaps %xmm2,0x70(%rsp)
    0.00 :   53092:  movaps %xmm3,0x80(%rsp)
    0.00 :   5309a:  movaps %xmm4,0x90(%rsp)
    0.00 :   530a2:  movaps %xmm5,0xa0(%rsp)
    0.00 :   530aa:  movaps %xmm6,0xb0(%rsp)
    0.00 :   530b2:  movaps %xmm7,0xc0(%rsp)
    0.00 :   530ba:  mov    %fs:0x28,%rax
    0.00 :   530c3:  mov    %rax,0x18(%rsp)
    0.00 :   530c8:  xor    %eax,%eax
    0.00 :   530ca:  lea    0xe0(%rsp),%rax
    0.00 :   530d2:  mov    %rsp,%rdx
    0.00 :   530d5:  xor    %ecx,%ecx
    0.00 :   530d7:  mov    %rax,0x8(%rsp)
    0.00 :   530dc:  lea    0x20(%rsp),%rax
    0.00 :   530e1:  movl   $0x10,(%rsp)
    0.00 :   530e8:  movl   $0x30,0x4(%rsp)
    0.00 :   530f0:  mov    %rax,0x10(%rsp)
    0.00 :   530f5:  call   5d910 <__vfprintf_internal>
    0.00 :   530fa:  mov    0x18(%rsp),%rdx
    0.00 :   530ff:  sub    %fs:0x28,%rdx
    0.00 :   53108:  jne    53112 <fprintf+0xb2>
    0.00 :   5310a:  add    $0xd8,%rsp
    0.00 :   53111:  ret
    0.00 :   53112:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[9a0dd]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000099760 <_int_malloc>:
         : 6     _int_malloc():
    0.00 :   99760:  test   %rsi,%rsi
    0.00 :   99763:  js     99d58 <_int_malloc+0x5f8>
    0.00 :   99769:  push   %r15
    0.00 :   9976b:  push   %r14
    0.00 :   9976d:  push   %r13
    0.00 :   9976f:  push   %r12
    0.00 :   99771:  mov    %rsi,%r12
    0.00 :   99774:  push   %rbp
    0.00 :   99775:  mov    %rdi,%rbp
    0.00 :   99778:  push   %rbx
    0.00 :   99779:  lea    0x17(%rsi),%rbx
    0.00 :   9977d:  sub    $0x28,%rsp
    0.00 :   99781:  cmp    $0x1f,%rbx
    0.00 :   99785:  jbe    99b50 <_int_malloc+0x3f0>
    0.00 :   9978b:  and    $0xfffffffffffffff0,%rbx
    0.00 :   9978f:  test   %rdi,%rdi
    0.00 :   99792:  je     99d75 <_int_malloc+0x615>
    0.00 :   99798:  cmp    %rbx,0x140d21(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   9979f:  jb     99918 <_int_malloc+0x1b8>
    0.00 :   997a5:  mov    %ebx,%r13d
    0.00 :   997a8:  shr    $0x4,%r13d
    0.00 :   997ac:  lea    -0x2(%r13),%eax
    0.00 :   997b0:  mov    %r13d,%esi
    0.00 :   997b3:  lea    0x0(%rbp,%rax,8),%r8
    0.00 :   997b8:  shl    $0x3,%rsi
    0.00 :   997bc:  mov    0x10(%r8),%rdx
    0.00 :   997c0:  test   %rdx,%rdx
    0.00 :   997c3:  je     99cb4 <_int_malloc+0x554>
    0.00 :   997c9:  test   $0xf,%dl
    0.00 :   997cc:  jne    9a078 <_int_malloc+0x918>
    0.00 :   997d2:  add    %rbp,%rsi
    0.00 :   997d5:  cmpb   $0x0,0x141e1c(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   997dc:  je     998f8 <_int_malloc+0x198>
    0.00 :   997e2:  lea    0x10(%rdx),%rcx
    0.00 :   997e6:  mov    %rcx,%rax
    0.00 :   997e9:  shr    $0xc,%rax
    0.00 :   997ed:  xor    0x10(%rdx),%rax
    0.00 :   997f1:  mov    %rax,0x10(%r8)
    0.00 :   997f5:  mov    0x8(%rdx),%rax
    0.00 :   997f9:  shr    $0x4,%eax
    0.00 :   997fc:  cmp    %r13d,%eax
    0.00 :   997ff:  jne    99ff0 <_int_malloc+0x890>
    0.00 :   99805:  mov    0x13959c(%rip),%r14        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9980c:  sub    $0x11,%rbx
    0.00 :   99810:  shr    $0x4,%rbx
    0.00 :   99814:  mov    %fs:(%r14),%rax
    0.00 :   99818:  test   %rax,%rax
    0.00 :   9981b:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   99821:  cmp    0x139ba0(%rip),%rbx        # 1d33c8 <mp_+0x68>
    0.00 :   99828:  jae    99d20 <_int_malloc+0x5c0>
    0.00 :   9982e:  movzwl (%rax,%rbx,2),%eax
    0.00 :   99832:  cmp    0x139b9f(%rip),%rax        # 1d33d8 <mp_+0x78>
    0.00 :   99839:  lea    0x10(%rbx),%r11
    0.00 :   9983d:  jb     99896 <_int_malloc+0x136>
    0.00 :   9983f:  jmp    99d20 <_int_malloc+0x5c0>
    0.00 :   99844:  nopl   0x0(%rax)
    0.00 :   99848:  lea    0x10(%rdx),%r10
    0.00 :   9984c:  mov    0x10(%rdx),%rax
    0.00 :   99850:  mov    %r10,%rdi
    0.00 :   99853:  shr    $0xc,%rdi
    0.00 :   99857:  xor    %rdi,%rax
    0.00 :   9985a:  mov    %rax,0x10(%r8)
    0.00 :   9985e:  mov    0x140c33(%rip),%rax        # 1da498 <tcache_key>
    0.00 :   99865:  mov    %rax,0x18(%rdx)
    0.00 :   99869:  mov    %fs:(%r14),%r9
    0.00 :   9986d:  movzwl (%r9,%rbx,2),%eax
    0.00 :   99872:  xor    (%r9,%r11,8),%rdi
    0.00 :   99876:  mov    %rdi,0x10(%rdx)
    0.00 :   9987a:  add    $0x1,%eax
    0.00 :   9987d:  mov    %r10,(%r9,%r11,8)
    0.00 :   99881:  mov    %ax,(%r9,%rbx,2)
    0.00 :   99886:  movzwl %ax,%eax
    0.00 :   99889:  cmp    0x139b48(%rip),%rax        # 1d33d8 <mp_+0x78>
    0.00 :   99890:  jae    99d20 <_int_malloc+0x5c0>
    0.00 :   99896:  mov    0x10(%r8),%rdx
    0.00 :   9989a:  test   %rdx,%rdx
    0.00 :   9989d:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   998a3:  test   $0xf,%dl
    0.00 :   998a6:  jne    99f40 <_int_malloc+0x7e0>
    0.00 :   998ac:  cmpb   $0x0,0x141d45(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   998b3:  jne    99848 <_int_malloc+0xe8>
    0.00 :   998b5:  jmp    99c70 <_int_malloc+0x510>
    0.00 :   998ba:  nopw   0x0(%rax,%rax,1)
    0.00 :   998c0:  test   $0xf,%dil
    0.00 :   998c4:  jne    9a000 <_int_malloc+0x8a0>
    0.00 :   998ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   998d0:  mov    %rdx,%rax
    0.00 :   998d3:  cmpl   $0x0,%fs:0x18
    0.00 :   998dc:  je     998df <_int_malloc+0x17f>
    0.00 :   998de:  lock cmpxchg %rdi,(%rsi)
    0.00 :   998e3:  cmp    %rdx,%rax
    0.00 :   998e6:  je     997f5 <_int_malloc+0x95>
    0.00 :   998ec:  test   %rax,%rax
    0.00 :   998ef:  je     9a088 <_int_malloc+0x928>
    0.00 :   998f5:  mov    %rax,%rdx
    0.00 :   998f8:  lea    0x10(%rdx),%rcx
    0.00 :   998fc:  mov    0x10(%rdx),%rax
    0.00 :   99900:  mov    %rcx,%r9
    0.00 :   99903:  shr    $0xc,%r9
    0.00 :   99907:  mov    %r9,%rdi
    0.00 :   9990a:  xor    %rax,%rdi
    0.00 :   9990d:  cmp    %rax,%r9
    0.00 :   99910:  je     998d0 <_int_malloc+0x170>
    0.00 :   99912:  jmp    998c0 <_int_malloc+0x160>
    0.00 :   99914:  nopl   0x0(%rax)
    0.00 :   99918:  cmp    $0x3ff,%rbx
    0.00 :   9991f:  jbe    9a088 <_int_malloc+0x928>
    0.00 :   99925:  mov    %rbx,%r13
    0.00 :   99928:  shr    $0x6,%r13
    0.00 :   9992c:  add    $0x30,%r13d
    0.00 :   99930:  cmp    $0xc3f,%rbx
    0.00 :   99937:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99939:  mov    %rbx,%r13
    0.00 :   9993c:  shr    $0x9,%r13
    0.00 :   99940:  add    $0x5b,%r13d
    0.00 :   99944:  cmp    $0x29ff,%rbx
    0.00 :   9994b:  jbe    99990 <_int_malloc+0x230>
    0.00 :   9994d:  mov    %rbx,%r13
    0.00 :   99950:  shr    $0xc,%r13
    0.00 :   99954:  add    $0x6e,%r13d
    0.00 :   99958:  cmp    $0xafff,%rbx
    0.00 :   9995f:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99961:  mov    %rbx,%r13
    0.00 :   99964:  shr    $0xf,%r13
    0.00 :   99968:  add    $0x77,%r13d
    0.00 :   9996c:  cmp    $0x27fff,%rbx
    0.00 :   99973:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99975:  mov    %rbx,%r13
    0.00 :   99978:  mov    $0x2,%eax
    0.00 :   9997d:  shr    $0x12,%r13
    0.00 :   99981:  cmp    %rax,%r13
    0.00 :   99984:  cmova  %rax,%r13
    0.00 :   99988:  add    $0x7c,%r13d
    0.00 :   9998c:  nopl   0x0(%rax)
    0.00 :   99990:  mov    0x8(%rbp),%eax
    0.00 :   99993:  test   %eax,%eax
    0.00 :   99995:  jne    99cc8 <_int_malloc+0x568>
    0.00 :   9999b:  mov    0x139406(%rip),%r14        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   999a2:  lea    -0x11(%rbx),%rax
    0.00 :   999a6:  xor    %r9d,%r9d
    0.00 :   999a9:  shr    $0x4,%rax
    0.00 :   999ad:  cmpq   $0x0,%fs:(%r14)
    0.00 :   999b2:  mov    %rax,%r11
    0.00 :   999b5:  je     999c2 <_int_malloc+0x262>
    0.00 :   999b7:  cmp    0x139a0a(%rip),%rax        # 1d33c8 <mp_+0x68>
    0.00 :   999be:  cmovb  %rbx,%r9
    0.00 :   999c2:  movq   $0x0,(%rsp)
    0.00 :   999ca:  lea    0x60(%rbp),%r15
    0.00 :   999ce:  mov    %r12,%r8
    0.00 :   999d1:  mov    %r13d,0x10(%rsp)
    0.00 :   999d6:  mov    0x78(%rbp),%rdx
    0.00 :   999da:  cmp    %r15,%rdx
    0.00 :   999dd:  je     99e6c <_int_malloc+0x70c>
    0.00 :   999e3:  mov    %r8,0x8(%rsp)
    0.00 :   999e8:  xor    %r12d,%r12d
    0.00 :   999eb:  xor    %r10d,%r10d
    0.00 :   999ee:  mov    0x8(%rdx),%rax
    0.00 :   999f2:  and    $0xfffffffffffffff8,%rax
    0.00 :   999f6:  lea    (%rdx,%rax,1),%rsi
    0.00 :   999fa:  cmp    $0x10,%rax
    0.00 :   999fe:  jbe    99d48 <_int_malloc+0x5e8>
    0.00 :   99a04:  mov    0x888(%rbp),%rdi
    0.00 :   99a0b:  cmp    %rax,%rdi
    0.00 :   99a0e:  jb     99d48 <_int_malloc+0x5e8>
    0.00 :   99a14:  mov    0x8(%rsi),%rcx
    0.00 :   99a18:  cmp    %rcx,%rdi
    0.00 :   99a1b:  jb     99d90 <_int_malloc+0x630>
    0.00 :   99a21:  cmp    $0xf,%rcx
    0.00 :   99a25:  jbe    99d90 <_int_malloc+0x630>
    0.00 :   99a2b:  mov    (%rsi),%rdi
    0.00 :   99a2e:  and    $0xfffffffffffffff8,%rdi
    0.00 :   99a32:  cmp    %rax,%rdi
    0.00 :   99a35:  jne    9a010 <_int_malloc+0x8b0>
    0.00 :   99a3b:  mov    0x18(%rdx),%rdi
    0.00 :   99a3f:  cmp    0x10(%rdi),%rdx
    0.00 :   99a43:  jne    99f30 <_int_malloc+0x7d0>
    0.00 :   99a49:  cmp    %r15,0x10(%rdx)
    0.00 :   99a4d:  jne    99f30 <_int_malloc+0x7d0>
    0.00 :   99a53:  test   $0x1,%cl
    0.00 :   99a56:  jne    9a098 <_int_malloc+0x938>
    0.00 :   99a5c:  cmp    %r15,%rdi
    0.00 :   99a5f:  jne    99a6e <_int_malloc+0x30e>
    0.00 :   99a61:  cmp    $0x3ff,%rbx
    0.00 :   99a68:  jbe    99fa0 <_int_malloc+0x840>
    0.00 :   99a6e:  mov    %rdi,0x78(%rbp)
    0.00 :   99a72:  mov    %r15,0x10(%rdi)
    0.00 :   99a76:  cmp    %rax,%rbx
    0.00 :   99a79:  je     99cd8 <_int_malloc+0x578>
    0.00 :   99a7f:  cmp    $0x3ff,%rax
    0.00 :   99a85:  jbe    99da0 <_int_malloc+0x640>
    0.00 :   99a8b:  mov    %rax,%rcx
    0.00 :   99a8e:  shr    $0x6,%rcx
    0.00 :   99a92:  cmp    $0xc3f,%rax
    0.00 :   99a98:  jbe    99fe0 <_int_malloc+0x880>
    0.00 :   99a9e:  mov    %rax,%rcx
    0.00 :   99aa1:  shr    $0x9,%rcx
    0.00 :   99aa5:  lea    0x5b(%rcx),%r13d
    0.00 :   99aa9:  cmp    $0x29ff,%rax
    0.00 :   99aaf:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ab1:  mov    %rax,%rcx
    0.00 :   99ab4:  shr    $0xc,%rcx
    0.00 :   99ab8:  lea    0x6e(%rcx),%r13d
    0.00 :   99abc:  cmp    $0xafff,%rax
    0.00 :   99ac2:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ac4:  mov    %rax,%rcx
    0.00 :   99ac7:  shr    $0xf,%rcx
    0.00 :   99acb:  lea    0x77(%rcx),%r13d
    0.00 :   99acf:  cmp    $0x27fff,%rax
    0.00 :   99ad5:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ad7:  mov    %rax,%rcx
    0.00 :   99ada:  mov    $0x2,%esi
    0.00 :   99adf:  shr    $0x12,%rcx
    0.00 :   99ae3:  cmp    %rsi,%rcx
    0.00 :   99ae6:  cmova  %rsi,%rcx
    0.00 :   99aea:  lea    0x7c(%rcx),%r13d
    0.00 :   99aee:  xchg   %ax,%ax
    0.00 :   99af0:  lea    0xc(%r13,%r13,1),%ecx
    0.00 :   99af5:  movslq %ecx,%rcx
    0.00 :   99af8:  lea    0x0(%rbp,%rcx,8),%rdi
    0.00 :   99afd:  mov    (%rdi),%rcx
    0.00 :   99b00:  lea    -0x10(%rdi),%rsi
    0.00 :   99b04:  cmp    %rcx,%rsi
    0.00 :   99b07:  je     9a0a8 <_int_malloc+0x948>
    0.00 :   99b0d:  mov    0x8(%rdi),%rdi
    0.00 :   99b11:  or     $0x1,%rax
    0.00 :   99b15:  mov    0x8(%rdi),%r8
    0.00 :   99b19:  test   $0x4,%r8b
    0.00 :   99b1d:  jne    9a621 <_int_malloc+0xec1>
    0.00 :   99b23:  cmp    %r8,%rax
    0.00 :   99b26:  jae    9a164 <_int_malloc+0xa04>
    0.00 :   99b2c:  mov    0x28(%rcx),%rax
    0.00 :   99b30:  movq   %rcx,%xmm0
    0.00 :   99b35:  movq   %rax,%xmm1
    0.00 :   99b3a:  punpcklqdq %xmm1,%xmm0
    0.00 :   99b3e:  movups %xmm0,0x20(%rdx)
    0.00 :   99b42:  mov    %rdx,0x20(%rax)
    0.00 :   99b46:  mov    %rdx,0x28(%rcx)
    0.00 :   99b4a:  jmp    99dba <_int_malloc+0x65a>
    0.00 :   99b4f:  nop
    0.00 :   99b50:  test   %rdi,%rdi
    0.00 :   99b53:  je     99d70 <_int_malloc+0x610>
    0.00 :   99b59:  cmpq   $0x1f,0x14095f(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   99b61:  ja     99c90 <_int_malloc+0x530>
    0.00 :   99b67:  mov    $0x80,%eax
    0.00 :   99b6c:  mov    $0x2,%r13d
    0.00 :   99b72:  mov    $0x20,%ebx
    0.00 :   99b77:  add    %rbp,%rax
    0.00 :   99b7a:  mov    0x8(%rax),%rcx
    0.00 :   99b7e:  lea    -0x10(%rax),%rsi
    0.00 :   99b82:  cmp    %rcx,%rsi
    0.00 :   99b85:  je     9999b <_int_malloc+0x23b>
    0.00 :   99b8b:  mov    0x18(%rcx),%rdx
    0.00 :   99b8f:  cmp    %rcx,0x10(%rdx)
    0.00 :   99b93:  jne    9a158 <_int_malloc+0x9f8>
    0.00 :   99b99:  lea    0x13a0e0(%rip),%r11        # 1d3c80 <main_arena>
    0.00 :   99ba0:  orq    $0x1,0x8(%rcx,%rbx,1)
    0.00 :   99ba6:  mov    %rdx,0x8(%rax)
    0.00 :   99baa:  mov    %rsi,0x10(%rdx)
    0.00 :   99bae:  cmp    %r11,%rbp
    0.00 :   99bb1:  je     99bb8 <_int_malloc+0x458>
    0.00 :   99bb3:  orq    $0x4,0x8(%rcx)
    0.00 :   99bb8:  mov    0x1391e9(%rip),%rdx        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   99bbf:  mov    %fs:(%rdx),%r10
    0.00 :   99bc3:  test   %r10,%r10
    0.00 :   99bc6:  je     99c10 <_int_malloc+0x4b0>
    0.00 :   99bc8:  lea    -0x11(%rbx),%r9
    0.00 :   99bcc:  shr    $0x4,%r9
    0.00 :   99bd0:  cmp    0x1397f1(%rip),%r9        # 1d33c8 <mp_+0x68>
    0.00 :   99bd7:  jae    99c10 <_int_malloc+0x4b0>
    0.00 :   99bd9:  mov    0x1397f8(%rip),%r8        # 1d33d8 <mp_+0x78>
    0.00 :   99be0:  movzwl (%r10,%r9,2),%r13d
    0.00 :   99be5:  movzwl %r13w,%edi
    0.00 :   99be9:  jmp    99c02 <_int_malloc+0x4a2>
    0.00 :   99beb:  nopl   0x0(%rax,%rax,1)
    0.00 :   99bf0:  mov    0x8(%rax),%rdx
    0.00 :   99bf4:  cmp    %rdx,%rsi
    0.00 :   99bf7:  je     99c10 <_int_malloc+0x4b0>
    0.00 :   99bf9:  test   %rdx,%rdx
    0.00 :   99bfc:  jne    9a020 <_int_malloc+0x8c0>
    0.00 :   99c02:  cmp    %r8,%rdi
    0.00 :   99c05:  jb     99bf0 <_int_malloc+0x490>
    0.00 :   99c07:  nopw   0x0(%rax,%rax,1)
    0.00 :   99c10:  mov    0x1408a6(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   99c16:  add    $0x10,%rcx
    0.00 :   99c1a:  test   %esi,%esi
    0.00 :   99c1c:  jne    99d2e <_int_malloc+0x5ce>
    0.00 :   99c22:  add    $0x28,%rsp
    0.00 :   99c26:  mov    %rcx,%rax
    0.00 :   99c29:  pop    %rbx
    0.00 :   99c2a:  pop    %rbp
    0.00 :   99c2b:  pop    %r12
    0.00 :   99c2d:  pop    %r13
    0.00 :   99c2f:  pop    %r14
    0.00 :   99c31:  pop    %r15
    0.00 :   99c33:  ret
    0.00 :   99c34:  nopl   0x0(%rax)
    0.00 :   99c38:  test   $0xf,%r9b
    0.00 :   99c3c:  jne    9a000 <_int_malloc+0x8a0>
    0.00 :   99c42:  nopw   0x0(%rax,%rax,1)
    0.00 :   99c48:  mov    %rdx,%rax
    0.00 :   99c4b:  cmpl   $0x0,%fs:0x18
    0.00 :   99c54:  je     99c57 <_int_malloc+0x4f7>
    0.00 :   99c56:  lock cmpxchg %r9,(%rsi)
    0.00 :   99c5b:  cmp    %rdx,%rax
    0.00 :   99c5e:  je     9985e <_int_malloc+0xfe>
    0.00 :   99c64:  test   %rax,%rax
    0.00 :   99c67:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   99c6d:  mov    %rax,%rdx
    0.00 :   99c70:  lea    0x10(%rdx),%r10
    0.00 :   99c74:  mov    0x10(%rdx),%rax
    0.00 :   99c78:  mov    %r10,%rdi
    0.00 :   99c7b:  shr    $0xc,%rdi
    0.00 :   99c7f:  mov    %rdi,%r9
    0.00 :   99c82:  xor    %rax,%r9
    0.00 :   99c85:  cmp    %rax,%rdi
    0.00 :   99c88:  je     99c48 <_int_malloc+0x4e8>
    0.00 :   99c8a:  jmp    99c38 <_int_malloc+0x4d8>
    0.00 :   99c8c:  nopl   0x0(%rax)
    0.00 :   99c90:  xor    %eax,%eax
    0.00 :   99c92:  mov    $0x10,%esi
    0.00 :   99c97:  mov    $0x2,%r13d
    0.00 :   99c9d:  mov    $0x20,%ebx
    0.00 :   99ca2:  lea    0x0(%rbp,%rax,8),%r8
    0.00 :   99ca7:  mov    0x10(%r8),%rdx
    0.00 :   99cab:  test   %rdx,%rdx
    0.00 :   99cae:  jne    997c9 <_int_malloc+0x69>
    0.00 :   99cb4:  lea    0xc(%r13,%r13,1),%eax
    0.00 :   99cb9:  shl    $0x3,%rax
    0.00 :   99cbd:  jmp    99b77 <_int_malloc+0x417>
    0.00 :   99cc2:  nopw   0x0(%rax,%rax,1)
    0.00 :   99cc8:  mov    %rbp,%rdi
    0.00 :   99ccb:  call   97680 <malloc_consolidate>
    0.00 :   99cd0:  jmp    9999b <_int_malloc+0x23b>
    0.00 :   99cd5:  nopl   (%rax)
    0.00 :   99cd8:  or     $0x1,%rcx
    0.00 :   99cdc:  lea    0x139f9d(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   99ce3:  mov    %rcx,0x8(%rsi)
    0.00 :   99ce7:  cmp    %rax,%rbp
    0.00 :   99cea:  je     99cf1 <_int_malloc+0x591>
    0.00 :   99cec:  orq    $0x4,0x8(%rdx)
    0.00 :   99cf1:  lea    0x10(%rdx),%rcx
    0.00 :   99cf5:  test   %r9,%r9
    0.00 :   99cf8:  je     99d13 <_int_malloc+0x5b3>
    0.00 :   99cfa:  mov    %fs:(%r14),%rax
    0.00 :   99cfe:  movzwl (%rax,%r11,2),%edi
    0.00 :   99d03:  cmp    0x1396ce(%rip),%rdi        # 1d33d8 <mp_+0x78>
    0.00 :   99d0a:  mov    %rdi,%rsi
    0.00 :   99d0d:  jb     99f50 <_int_malloc+0x7f0>
    0.00 :   99d13:  mov    0x8(%rsp),%r12
    0.00 :   99d18:  nopl   0x0(%rax,%rax,1)
    0.00 :   99d20:  mov    0x140796(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   99d26:  test   %esi,%esi
    0.00 :   99d28:  je     99c22 <_int_malloc+0x4c2>
    0.00 :   99d2e:  mov    %rcx,%rdi
    0.00 :   99d31:  xor    $0xff,%sil
    0.00 :   99d35:  mov    %r12,%rdx
    0.00 :   99d38:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   99d3d:  mov    %rax,%rcx
    0.00 :   99d40:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99d45:  nopl   (%rax)
    0.00 :   99d48:  lea    0x103769(%rip),%rdi        # 19d4b8 <aliasfile.0+0x1a70>
    0.00 :   99d4f:  call   96b80 <malloc_printerr>
    0.00 :   99d54:  nopl   0x0(%rax)
    0.00 :   99d58:  mov    0x1390b1(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   99d5f:  movl   $0xc,%fs:(%rax)
    0.00 :   99d66:  xor    %eax,%eax
    0.00 :   99d68:  ret
    0.00 :   99d69:  nopl   0x0(%rax)
    0.00 :   99d70:  mov    $0x20,%ebx
    0.00 :   99d75:  xor    %esi,%esi
    0.00 :   99d77:  mov    %rbx,%rdi
    0.00 :   99d7a:  call   98f10 <sysmalloc>
    0.00 :   99d7f:  mov    %rax,%rcx
    0.00 :   99d82:  test   %rax,%rax
    0.00 :   99d85:  jne    99d20 <_int_malloc+0x5c0>
    0.00 :   99d87:  xor    %ecx,%ecx
    0.00 :   99d89:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99d8e:  xchg   %ax,%ax
    0.00 :   99d90:  lea    0x103749(%rip),%rdi        # 19d4e0 <aliasfile.0+0x1a98>
    0.00 :   99d97:  call   96b80 <malloc_printerr>
    0.00 :   99d9c:  nopl   0x0(%rax)
    0.00 :   99da0:  mov    %eax,%r13d
    0.00 :   99da3:  shr    $0x4,%r13d
    0.00 :   99da7:  lea    0xc(%r13,%r13,1),%eax
    0.00 :   99dac:  cltq
    0.00 :   99dae:  lea    0x0(%rbp,%rax,8),%rax
    0.00 :   99db3:  mov    (%rax),%rsi
    0.00 :   99db6:  lea    -0x10(%rax),%rdi
    0.00 :   99dba:  mov    %r13d,%eax
    0.00 :   99dbd:  mov    %r13d,%ecx
    0.00 :   99dc0:  mov    $0x1,%r8d
    0.00 :   99dc6:  addq   $0x1,(%rsp)
    0.00 :   99dcb:  sar    $0x5,%eax
    0.00 :   99dce:  shl    %cl,%r8d
    0.00 :   99dd1:  mov    (%rsp),%rcx
    0.00 :   99dd5:  cltq
    0.00 :   99dd7:  or     %r8d,0x860(%rbp,%rax,4)
    0.00 :   99ddf:  mov    %rdi,0x18(%rdx)
    0.00 :   99de3:  mov    %rsi,0x10(%rdx)
    0.00 :   99de7:  mov    %rdx,0x18(%rsi)
    0.00 :   99deb:  mov    %rdx,0x10(%rdi)
    0.00 :   99def:  test   %r10d,%r10d
    0.00 :   99df2:  je     99f10 <_int_malloc+0x7b0>
    0.00 :   99df8:  mov    0x1395e1(%rip),%rax        # 1d33e0 <mp_+0x80>
    0.00 :   99dff:  test   %rax,%rax
    0.00 :   99e02:  je     99e40 <_int_malloc+0x6e0>
    0.00 :   99e04:  cmp    %rcx,%rax
    0.00 :   99e07:  jae    99e40 <_int_malloc+0x6e0>
    0.00 :   99e09:  mov    %fs:(%r14),%rax
    0.00 :   99e0d:  lea    0x10(%r11),%rsi
    0.00 :   99e11:  mov    (%rax,%rsi,8),%rcx
    0.00 :   99e15:  test   $0xf,%cl
    0.00 :   99e18:  jne    9a4eb <_int_malloc+0xd8b>
    0.00 :   99e1e:  mov    %rcx,%rdx
    0.00 :   99e21:  shr    $0xc,%rdx
    0.00 :   99e25:  xor    (%rcx),%rdx
    0.00 :   99e28:  mov    %rdx,(%rax,%rsi,8)
    0.00 :   99e2c:  xor    %edx,%edx
    0.00 :   99e2e:  subw   $0x1,(%rax,%r11,2)
    0.00 :   99e34:  mov    %rdx,0x8(%rcx)
    0.00 :   99e38:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99e3d:  nopl   (%rax)
    0.00 :   99e40:  add    $0x1,%r12d
    0.00 :   99e44:  cmp    $0x270f,%r12d
    0.00 :   99e4b:  jg     9a3b8 <_int_malloc+0xc58>
    0.00 :   99e51:  mov    0x78(%rbp),%rdx
    0.00 :   99e55:  cmp    %r15,%rdx
    0.00 :   99e58:  jne    999ee <_int_malloc+0x28e>
    0.00 :   99e5e:  mov    0x8(%rsp),%r8
    0.00 :   99e63:  test   %r10d,%r10d
    0.00 :   99e66:  jne    9a3b8 <_int_malloc+0xc58>
    0.00 :   99e6c:  cmp    $0x3ff,%rbx
    0.00 :   99e73:  jbe    99e98 <_int_malloc+0x738>
    0.00 :   99e75:  mov    0x10(%rsp),%eax
    0.00 :   99e79:  lea    0xc(%rax,%rax,1),%eax
    0.00 :   99e7d:  lea    0x0(%rbp,%rax,8),%rax
    0.00 :   99e82:  mov    (%rax),%rdx
    0.00 :   99e85:  lea    -0x10(%rax),%rcx
    0.00 :   99e89:  cmp    %rcx,%rdx
    0.00 :   99e8c:  je     99e98 <_int_malloc+0x738>
    0.00 :   99e8e:  cmp    %rbx,0x8(%rdx)
    0.00 :   99e92:  jae    9a51e <_int_malloc+0xdbe>
    0.00 :   99e98:  mov    0x10(%rsp),%eax
    0.00 :   99e9c:  lea    0x1(%rax),%ecx
    0.00 :   99e9f:  lea    0xe(%rax,%rax,1),%eax
    0.00 :   99ea3:  mov    %ecx,%edi
    0.00 :   99ea5:  lea    -0x10(%rbp,%rax,8),%rdx
    0.00 :   99eaa:  shr    $0x5,%edi
    0.00 :   99ead:  mov    %edi,%eax
    0.00 :   99eaf:  mov    0x860(%rbp,%rax,4),%esi
    0.00 :   99eb6:  mov    $0x1,%eax
    0.00 :   99ebb:  shl    %cl,%eax
    0.00 :   99ebd:  nopl   (%rax)
    0.00 :   99ec0:  cmp    %eax,%esi
    0.00 :   99ec2:  jb     9a0c0 <_int_malloc+0x960>
    0.00 :   99ec8:  test   %eax,%eax
    0.00 :   99eca:  jne    99ee4 <_int_malloc+0x784>
    0.00 :   99ecc:  jmp    9a0c0 <_int_malloc+0x960>
    0.00 :   99ed1:  nopl   0x0(%rax)
    0.00 :   99ed8:  add    $0x10,%rdx
    0.00 :   99edc:  add    %eax,%eax
    0.00 :   99ede:  je     9a37a <_int_malloc+0xc1a>
    0.00 :   99ee4:  test   %esi,%eax
    0.00 :   99ee6:  je     99ed8 <_int_malloc+0x778>
    0.00 :   99ee8:  mov    0x18(%rdx),%r13
    0.00 :   99eec:  cmp    %r13,%rdx
    0.00 :   99eef:  jne    9a22e <_int_malloc+0xace>
    0.00 :   99ef5:  mov    %eax,%ecx
    0.00 :   99ef7:  add    $0x10,%rdx
    0.00 :   99efb:  add    %eax,%eax
    0.00 :   99efd:  not    %ecx
    0.00 :   99eff:  and    %ecx,%esi
    0.00 :   99f01:  mov    %edi,%ecx
    0.00 :   99f03:  mov    %esi,0x860(%rbp,%rcx,4)
    0.00 :   99f0a:  jmp    99ec0 <_int_malloc+0x760>
    0.00 :   99f0c:  nopl   0x0(%rax)
    0.00 :   99f10:  add    $0x1,%r12d
    0.00 :   99f14:  cmp    $0x270f,%r12d
    0.00 :   99f1b:  jle    99e51 <_int_malloc+0x6f1>
    0.00 :   99f21:  mov    0x8(%rsp),%r8
    0.00 :   99f26:  jmp    99e6c <_int_malloc+0x70c>
    0.00 :   99f2b:  nopl   0x0(%rax,%rax,1)
    0.00 :   99f30:  lea    0x103609(%rip),%rdi        # 19d540 <aliasfile.0+0x1af8>
    0.00 :   99f37:  call   96b80 <malloc_printerr>
    0.00 :   99f3c:  nopl   0x0(%rax)
    0.00 :   99f40:  lea    0x103511(%rip),%rdi        # 19d458 <aliasfile.0+0x1a10>
    0.00 :   99f47:  call   96b80 <malloc_printerr>
    0.00 :   99f4c:  nopl   0x0(%rax)
    0.00 :   99f50:  mov    0x140541(%rip),%rdi        # 1da498 <tcache_key>
    0.00 :   99f57:  lea    0x10(%r11),%r10
    0.00 :   99f5b:  add    $0x1,%esi
    0.00 :   99f5e:  mov    %rdi,0x18(%rdx)
    0.00 :   99f62:  mov    %rcx,%rdi
    0.00 :   99f65:  shr    $0xc,%rdi
    0.00 :   99f69:  xor    0x80(%rax,%r11,8),%rdi
    0.00 :   99f71:  mov    %rdi,0x10(%rdx)
    0.00 :   99f75:  mov    0x78(%rbp),%rdx
    0.00 :   99f79:  mov    %rcx,(%rax,%r10,8)
    0.00 :   99f7d:  mov    %si,(%rax,%r11,2)
    0.00 :   99f82:  cmp    %rdx,%r15
    0.00 :   99f85:  je     9a3bc <_int_malloc+0xc5c>
    0.00 :   99f8b:  mov    $0x1,%r10d
    0.00 :   99f91:  jmp    999ee <_int_malloc+0x28e>
    0.00 :   99f96:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   99fa0:  cmp    0x68(%rbp),%rdx
    0.00 :   99fa4:  jne    99a6e <_int_malloc+0x30e>
    0.00 :   99faa:  lea    0x20(%rbx),%r13
    0.00 :   99fae:  cmp    %rax,%r13
    0.00 :   99fb1:  jb     9a42d <_int_malloc+0xccd>
    0.00 :   99fb7:  mov    %rdi,0x78(%rbp)
    0.00 :   99fbb:  mov    %r15,0x10(%rdi)
    0.00 :   99fbf:  cmp    %rax,%rbx
    0.00 :   99fc2:  je     99cd8 <_int_malloc+0x578>
    0.00 :   99fc8:  cmp    $0x3ff,%rax
    0.00 :   99fce:  jbe    99da0 <_int_malloc+0x640>
    0.00 :   99fd4:  mov    $0x10,%ecx
    0.00 :   99fd9:  nopl   0x0(%rax)
    0.00 :   99fe0:  lea    0x30(%rcx),%r13d
    0.00 :   99fe4:  jmp    99af0 <_int_malloc+0x390>
    0.00 :   99fe9:  nopl   0x0(%rax)
    0.00 :   99ff0:  lea    0x103439(%rip),%rdi        # 19d430 <aliasfile.0+0x19e8>
    0.00 :   99ff7:  call   96b80 <malloc_printerr>
    0.00 :   99ffc:  nopl   0x0(%rax)
    0.00 :   9a000:  lea    0x1033f9(%rip),%rdi        # 19d400 <aliasfile.0+0x19b8>
    0.00 :   9a007:  call   96b80 <malloc_printerr>
    0.00 :   9a00c:  nopl   0x0(%rax)
    0.00 :   9a010:  lea    0x1034f1(%rip),%rdi        # 19d508 <aliasfile.0+0x1ac0>
    0.00 :   9a017:  call   96b80 <malloc_printerr>
    0.00 :   9a01c:  nopl   0x0(%rax)
    0.00 :   9a020:  mov    0x18(%rdx),%rdi
    0.00 :   9a024:  orq    $0x1,0x8(%rdx,%rbx,1)
    0.00 :   9a02a:  cmp    %r11,%rbp
    0.00 :   9a02d:  je     9a034 <_int_malloc+0x8d4>
    0.00 :   9a02f:  orq    $0x4,0x8(%rdx)
    0.00 :   9a034:  mov    %rdi,0x8(%rax)
    0.00 :   9a038:  lea    0x10(%rdx),%r14
    0.00 :   9a03c:  add    $0x1,%r13d
    0.00 :   9a040:  mov    %rsi,0x10(%rdi)
    0.00 :   9a044:  mov    0x14044d(%rip),%rdi        # 1da498 <tcache_key>
    0.00 :   9a04b:  mov    %rdi,0x18(%rdx)
    0.00 :   9a04f:  mov    %r14,%rdi
    0.00 :   9a052:  shr    $0xc,%rdi
    0.00 :   9a056:  xor    0x80(%r10,%r9,8),%rdi
    0.00 :   9a05e:  mov    %rdi,0x10(%rdx)
    0.00 :   9a062:  mov    %r14,0x80(%r10,%r9,8)
    0.00 :   9a06a:  mov    %r13w,(%r10,%r9,2)
    0.00 :   9a06f:  jmp    99be5 <_int_malloc+0x485>
    0.00 :   9a074:  nopl   0x0(%rax)
    0.00 :   9a078:  lea    0x103351(%rip),%rdi        # 19d3d0 <aliasfile.0+0x1988>
    0.00 :   9a07f:  call   96b80 <malloc_printerr>
    0.00 :   9a084:  nopl   0x0(%rax)
    0.00 :   9a088:  mov    %ebx,%r13d
    0.00 :   9a08b:  shr    $0x4,%r13d
    0.00 :   9a08f:  jmp    99cb4 <_int_malloc+0x554>
    0.00 :   9a094:  nopl   0x0(%rax)
    0.00 :   9a098:  lea    0x1034d1(%rip),%rdi        # 19d570 <aliasfile.0+0x1b28>
    0.00 :   9a09f:  call   96b80 <malloc_printerr>
    0.00 :   9a0a4:  nopl   0x0(%rax)
    0.00 :   9a0a8:  movq   %rdx,%xmm0
    0.00 :   9a0ad:  mov    %rsi,%rdi
    0.00 :   9a0b0:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a0b4:  movups %xmm0,0x20(%rdx)
    0.00 :   9a0b8:  jmp    99dba <_int_malloc+0x65a>
    0.00 :   9a0bd:  nopl   (%rax)
    0.00 :   9a0c0:  lea    0x1(%rdi),%eax
    0.00 :   9a0c3:  jmp    9a0db <_int_malloc+0x97b>
    0.00 :   9a0c5:  nopl   (%rax)
    0.00 :   9a0c8:  add    $0x1,%rax
    0.00 :   9a0cc:  mov    0x85c(%rbp,%rax,4),%esi
    0.00 :   9a0d3:  test   %esi,%esi
    0.00 :   9a0d5:  jne    9a1f0 <_int_malloc+0xa90>
    0.00 :   9a0db:  mov    %eax,%edi
  100.00 :   9a0dd:  cmp    $0x4,%eax // libc.so.6[9a0dd]
    0.00 :   9a0e0:  jne    9a0c8 <_int_malloc+0x968>
    0.00 :   9a0e2:  mov    0x60(%rbp),%rcx
    0.00 :   9a0e6:  mov    0x8(%rcx),%rax
    0.00 :   9a0ea:  and    $0xfffffffffffffff8,%rax
    0.00 :   9a0ee:  cmp    %rax,0x888(%rbp)
    0.00 :   9a0f5:  jb     9a342 <_int_malloc+0xbe2>
    0.00 :   9a0fb:  lea    0x20(%rbx),%rdx
    0.00 :   9a0ff:  cmp    %rdx,%rax
    0.00 :   9a102:  jae    9a4b0 <_int_malloc+0xd50>
    0.00 :   9a108:  mov    %r11,0x18(%rsp)
    0.00 :   9a10d:  mov    %r9,0x10(%rsp)
    0.00 :   9a112:  mov    0x8(%rbp),%eax
    0.00 :   9a115:  test   %eax,%eax
    0.00 :   9a117:  je     9a4f7 <_int_malloc+0xd97>
    0.00 :   9a11d:  mov    %rbp,%rdi
    0.00 :   9a120:  mov    %r8,0x8(%rsp)
    0.00 :   9a125:  call   97680 <malloc_consolidate>
    0.00 :   9a12a:  mov    0x8(%rsp),%r8
    0.00 :   9a12f:  mov    0x10(%rsp),%r9
    0.00 :   9a134:  cmp    $0x3ff,%rbx
    0.00 :   9a13b:  mov    0x18(%rsp),%r11
    0.00 :   9a140:  ja     9a20d <_int_malloc+0xaad>
    0.00 :   9a146:  mov    %ebx,%eax
    0.00 :   9a148:  shr    $0x4,%eax
    0.00 :   9a14b:  mov    %eax,0x10(%rsp)
    0.00 :   9a14f:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a154:  nopl   0x0(%rax)
    0.00 :   9a158:  lea    0x103329(%rip),%rdi        # 19d488 <aliasfile.0+0x1a40>
    0.00 :   9a15f:  call   96b80 <malloc_printerr>
    0.00 :   9a164:  mov    0x8(%rcx),%rsi
    0.00 :   9a168:  test   $0x4,%sil
    0.00 :   9a16c:  jne    9a40c <_int_malloc+0xcac>
    0.00 :   9a172:  mov    0x8(%rsp),%r8
    0.00 :   9a177:  jmp    9a192 <_int_malloc+0xa32>
    0.00 :   9a179:  nopl   0x0(%rax)
    0.00 :   9a180:  mov    0x20(%rcx),%rcx
    0.00 :   9a184:  mov    0x8(%rcx),%rsi
    0.00 :   9a188:  test   $0x4,%sil
    0.00 :   9a18c:  jne    9a40c <_int_malloc+0xcac>
    0.00 :   9a192:  cmp    %rsi,%rax
    0.00 :   9a195:  jb     9a180 <_int_malloc+0xa20>
    0.00 :   9a197:  mov    %r8,0x8(%rsp)
    0.00 :   9a19c:  je     9a207 <_int_malloc+0xaa7>
    0.00 :   9a19e:  mov    0x28(%rcx),%rax
    0.00 :   9a1a2:  movq   %rcx,%xmm0
    0.00 :   9a1a7:  movq   %rax,%xmm2
    0.00 :   9a1ac:  punpcklqdq %xmm2,%xmm0
    0.00 :   9a1b0:  movups %xmm0,0x20(%rdx)
    0.00 :   9a1b4:  cmp    %rcx,0x20(%rax)
    0.00 :   9a1b8:  jne    9a34e <_int_malloc+0xbee>
    0.00 :   9a1be:  mov    %rdx,0x28(%rcx)
    0.00 :   9a1c2:  mov    0x28(%rdx),%rax
    0.00 :   9a1c6:  mov    %rcx,%rsi
    0.00 :   9a1c9:  mov    %rdx,0x20(%rax)
    0.00 :   9a1cd:  mov    0x18(%rsi),%rdi
    0.00 :   9a1d1:  cmp    %rsi,0x10(%rdi)
    0.00 :   9a1d5:  je     99dba <_int_malloc+0x65a>
    0.00 :   9a1db:  lea    0x1033fe(%rip),%rdi        # 19d5e0 <aliasfile.0+0x1b98>
    0.00 :   9a1e2:  call   96b80 <malloc_printerr>
    0.00 :   9a1e7:  nopw   0x0(%rax,%rax,1)
    0.00 :   9a1f0:  mov    %edi,%eax
    0.00 :   9a1f2:  shl    $0x6,%eax
    0.00 :   9a1f5:  add    $0xc,%eax
    0.00 :   9a1f8:  lea    -0x10(%rbp,%rax,8),%rdx
    0.00 :   9a1fd:  mov    $0x1,%eax
    0.00 :   9a202:  jmp    99ee4 <_int_malloc+0x784>
    0.00 :   9a207:  mov    0x10(%rcx),%rsi
    0.00 :   9a20b:  jmp    9a1cd <_int_malloc+0xa6d>
    0.00 :   9a20d:  mov    %rbx,%r13
    0.00 :   9a210:  shr    $0x6,%r13
    0.00 :   9a214:  cmp    $0xc3f,%rbx
    0.00 :   9a21b:  ja     9a308 <_int_malloc+0xba8>
    0.00 :   9a221:  lea    0x30(%r13),%eax
    0.00 :   9a225:  mov    %eax,0x10(%rsp)
    0.00 :   9a229:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a22e:  mov    0x8(%r13),%r14
    0.00 :   9a232:  mov    %r8,%r12
    0.00 :   9a235:  and    $0xfffffffffffffff8,%r14
    0.00 :   9a239:  cmp    %rbx,%r14
    0.00 :   9a23c:  jb     9a600 <_int_malloc+0xea0>
    0.00 :   9a242:  mov    %r14,%rcx
    0.00 :   9a245:  mov    %r13,%rdi
    0.00 :   9a248:  sub    %rbx,%rcx
    0.00 :   9a24b:  mov    %rcx,(%rsp)
    0.00 :   9a24f:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   9a254:  mov    (%rsp),%rcx
    0.00 :   9a258:  cmp    $0x1f,%rcx
    0.00 :   9a25c:  jbe    9a35a <_int_malloc+0xbfa>
    0.00 :   9a262:  mov    0x70(%rbp),%rax
    0.00 :   9a266:  movq   %r15,%xmm4
    0.00 :   9a26b:  lea    0x0(%r13,%rbx,1),%rdx
    0.00 :   9a270:  movq   %rax,%xmm0
    0.00 :   9a275:  punpcklqdq %xmm4,%xmm0
    0.00 :   9a279:  cmp    %r15,0x18(%rax)
    0.00 :   9a27d:  jne    9a512 <_int_malloc+0xdb2>
    0.00 :   9a283:  movups %xmm0,0x10(%rdx)
    0.00 :   9a287:  mov    %rdx,0x70(%rbp)
    0.00 :   9a28b:  mov    %rdx,0x18(%rax)
    0.00 :   9a28f:  cmp    $0x3ff,%rbx
    0.00 :   9a296:  ja     9a29c <_int_malloc+0xb3c>
    0.00 :   9a298:  mov    %rdx,0x68(%rbp)
    0.00 :   9a29c:  cmp    $0x3ff,%rcx
    0.00 :   9a2a3:  jbe    9a2ad <_int_malloc+0xb4d>
    0.00 :   9a2a5:  pxor   %xmm0,%xmm0
    0.00 :   9a2a9:  movups %xmm0,0x20(%rdx)
    0.00 :   9a2ad:  lea    0x1399cc(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a2b4:  cmp    %rax,%rbp
    0.00 :   9a2b7:  setne  %al
    0.00 :   9a2ba:  movzbl %al,%eax
    0.00 :   9a2bd:  shl    $0x2,%rax
    0.00 :   9a2c1:  or     %rbx,%rax
    0.00 :   9a2c4:  or     $0x1,%rax
    0.00 :   9a2c8:  mov    %rax,0x8(%r13)
    0.00 :   9a2cc:  mov    %rcx,%rax
    0.00 :   9a2cf:  or     $0x1,%rax
    0.00 :   9a2d3:  mov    %rax,0x8(%rdx)
    0.00 :   9a2d7:  mov    %rcx,0x0(%r13,%r14,1)
    0.00 :   9a2dc:  mov    0x1401da(%rip),%eax        # 1da4bc <perturb_byte>
    0.00 :   9a2e2:  lea    0x10(%r13),%rcx
    0.00 :   9a2e6:  test   %eax,%eax
    0.00 :   9a2e8:  je     99c22 <_int_malloc+0x4c2>
    0.00 :   9a2ee:  xor    $0xff,%al
    0.00 :   9a2f0:  mov    %rcx,%rdi
    0.00 :   9a2f3:  mov    %r12,%rdx
    0.00 :   9a2f6:  mov    %eax,%esi
    0.00 :   9a2f8:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   9a2fd:  mov    %rax,%rcx
    0.00 :   9a300:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a305:  nopl   (%rax)
    0.00 :   9a308:  mov    %rbx,%r13
    0.00 :   9a30b:  shr    $0x9,%r13
    0.00 :   9a30f:  cmp    $0x29ff,%rbx
    0.00 :   9a316:  ja     9a325 <_int_malloc+0xbc5>
    0.00 :   9a318:  lea    0x5b(%r13),%eax
    0.00 :   9a31c:  mov    %eax,0x10(%rsp)
    0.00 :   9a320:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a325:  mov    %rbx,%r13
    0.00 :   9a328:  shr    $0xc,%r13
    0.00 :   9a32c:  cmp    $0xafff,%rbx
    0.00 :   9a333:  ja     9a39b <_int_malloc+0xc3b>
    0.00 :   9a335:  lea    0x6e(%r13),%eax
    0.00 :   9a339:  mov    %eax,0x10(%rsp)
    0.00 :   9a33d:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a342:  lea    0xfde10(%rip),%rdi        # 198159 <null+0xf9f>
    0.00 :   9a349:  call   96b80 <malloc_printerr>
    0.00 :   9a34e:  lea    0x10324b(%rip),%rdi        # 19d5a0 <aliasfile.0+0x1b58>
    0.00 :   9a355:  call   96b80 <malloc_printerr>
    0.00 :   9a35a:  lea    0x13991f(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a361:  orq    $0x1,0x8(%r13,%r14,1)
    0.00 :   9a367:  cmp    %rax,%rbp
    0.00 :   9a36a:  je     9a2dc <_int_malloc+0xb7c>
    0.00 :   9a370:  orq    $0x4,0x8(%r13)
    0.00 :   9a375:  jmp    9a2dc <_int_malloc+0xb7c>
    0.00 :   9a37a:  lea    0xfddcf(%rip),%rcx        # 198150 <null+0xf96>
    0.00 :   9a381:  lea    0x103778(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a388:  mov    $0x1,%edi
    0.00 :   9a38d:  xor    %eax,%eax
    0.00 :   9a38f:  lea    0x10273a(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a396:  call   80df0 <__libc_message>
    0.00 :   9a39b:  mov    %rbx,%r13
    0.00 :   9a39e:  shr    $0xf,%r13
    0.00 :   9a3a2:  cmp    $0x27fff,%rbx
    0.00 :   9a3a9:  ja     9a3ec <_int_malloc+0xc8c>
    0.00 :   9a3ab:  lea    0x77(%r13),%eax
    0.00 :   9a3af:  mov    %eax,0x10(%rsp)
    0.00 :   9a3b3:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a3b8:  lea    0x10(%r11),%r10
    0.00 :   9a3bc:  mov    %fs:(%r14),%rax
    0.00 :   9a3c0:  mov    (%rax,%r10,8),%rcx
    0.00 :   9a3c4:  test   $0xf,%cl
    0.00 :   9a3c7:  jne    9a4eb <_int_malloc+0xd8b>
    0.00 :   9a3cd:  mov    %rcx,%rdx
    0.00 :   9a3d0:  shr    $0xc,%rdx
    0.00 :   9a3d4:  xor    (%rcx),%rdx
    0.00 :   9a3d7:  mov    %rdx,(%rax,%r10,8)
    0.00 :   9a3db:  subw   $0x1,(%rax,%r11,2)
    0.00 :   9a3e1:  xor    %eax,%eax
    0.00 :   9a3e3:  mov    %rax,0x8(%rcx)
    0.00 :   9a3e7:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a3ec:  mov    %rbx,%r13
    0.00 :   9a3ef:  mov    $0x2,%eax
    0.00 :   9a3f4:  shr    $0x12,%r13
    0.00 :   9a3f8:  cmp    %rax,%r13
    0.00 :   9a3fb:  cmova  %rax,%r13
    0.00 :   9a3ff:  lea    0x7c(%r13),%eax
    0.00 :   9a403:  mov    %eax,0x10(%rsp)
    0.00 :   9a407:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a40c:  lea    0xfdd26(%rip),%rcx        # 198139 <null+0xf7f>
    0.00 :   9a413:  lea    0x1036e6(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a41a:  mov    $0x1,%edi
    0.00 :   9a41f:  xor    %eax,%eax
    0.00 :   9a421:  lea    0x1026a8(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a428:  call   80df0 <__libc_message>
    0.00 :   9a42d:  lea    (%rdx,%rbx,1),%rdi
    0.00 :   9a431:  sub    %rbx,%rax
    0.00 :   9a434:  mov    0x8(%rsp),%r12
    0.00 :   9a439:  movq   %rdi,%xmm0
    0.00 :   9a43e:  mov    %rdi,0x78(%rbp)
    0.00 :   9a442:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a446:  movups %xmm0,0x68(%rbp)
    0.00 :   9a44a:  movq   %r15,%xmm0
    0.00 :   9a44f:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a453:  movups %xmm0,0x10(%rdi)
    0.00 :   9a457:  cmp    $0x3ff,%rax
    0.00 :   9a45d:  jbe    9a467 <_int_malloc+0xd07>
    0.00 :   9a45f:  pxor   %xmm0,%xmm0
    0.00 :   9a463:  movups %xmm0,0x20(%rdi)
    0.00 :   9a467:  lea    0x139812(%rip),%rcx        # 1d3c80 <main_arena>
    0.00 :   9a46e:  cmp    %rcx,%rbp
    0.00 :   9a471:  setne  %cl
    0.00 :   9a474:  movzbl %cl,%ecx
    0.00 :   9a477:  shl    $0x2,%rcx
    0.00 :   9a47b:  or     %rbx,%rcx
    0.00 :   9a47e:  or     $0x1,%rcx
    0.00 :   9a482:  mov    %rcx,0x8(%rdx)
    0.00 :   9a486:  mov    %rax,%rcx
    0.00 :   9a489:  or     $0x1,%rcx
    0.00 :   9a48d:  mov    %rcx,0x8(%rdi)
    0.00 :   9a491:  lea    0x10(%rdx),%rcx
    0.00 :   9a495:  mov    %rax,(%rsi)
    0.00 :   9a498:  mov    %rcx,%rdi
    0.00 :   9a49b:  mov    %r12,%rsi
    0.00 :   9a49e:  mov    %rcx,(%rsp)
    0.00 :   9a4a2:  call   96d80 <alloc_perturb>
    0.00 :   9a4a7:  mov    (%rsp),%rcx
    0.00 :   9a4ab:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a4b0:  lea    0x1397c9(%rip),%rdx        # 1d3c80 <main_arena>
    0.00 :   9a4b7:  lea    (%rcx,%rbx,1),%rsi
    0.00 :   9a4bb:  mov    %r8,%r12
    0.00 :   9a4be:  cmp    %rdx,%rbp
    0.00 :   9a4c1:  mov    %rsi,0x60(%rbp)
    0.00 :   9a4c5:  setne  %dl
    0.00 :   9a4c8:  sub    %rbx,%rax
    0.00 :   9a4cb:  add    $0x10,%rcx
    0.00 :   9a4cf:  movzbl %dl,%edx
    0.00 :   9a4d2:  or     $0x1,%rax
    0.00 :   9a4d6:  shl    $0x2,%rdx
    0.00 :   9a4da:  or     %rbx,%rdx
    0.00 :   9a4dd:  or     $0x1,%rdx
    0.00 :   9a4e1:  mov    %rdx,-0x8(%rcx)
    0.00 :   9a4e5:  mov    %rax,0x8(%rsi)
    0.00 :   9a4e9:  jmp    9a498 <_int_malloc+0xd38>
    0.00 :   9a4eb:  lea    0x103126(%rip),%rdi        # 19d618 <aliasfile.0+0x1bd0>
    0.00 :   9a4f2:  call   96b80 <malloc_printerr>
    0.00 :   9a4f7:  mov    %rbp,%rsi
    0.00 :   9a4fa:  mov    %rbx,%rdi
    0.00 :   9a4fd:  mov    %r8,%r12
    0.00 :   9a500:  call   98f10 <sysmalloc>
    0.00 :   9a505:  mov    %rax,%rcx
    0.00 :   9a508:  test   %rax,%rax
    0.00 :   9a50b:  jne    9a498 <_int_malloc+0xd38>
    0.00 :   9a50d:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a512:  lea    0x103187(%rip),%rdi        # 19d6a0 <aliasfile.0+0x1c58>
    0.00 :   9a519:  call   96b80 <malloc_printerr>
    0.00 :   9a51e:  mov    0x28(%rdx),%r13
    0.00 :   9a522:  mov    %r8,%r12
    0.00 :   9a525:  jmp    9a52b <_int_malloc+0xdcb>
    0.00 :   9a527:  mov    0x28(%r13),%r13
    0.00 :   9a52b:  mov    0x8(%r13),%rdx
    0.00 :   9a52f:  mov    %rdx,%r14
    0.00 :   9a532:  and    $0xfffffffffffffff8,%r14
    0.00 :   9a536:  cmp    %rbx,%r14
    0.00 :   9a539:  jb     9a527 <_int_malloc+0xdc7>
    0.00 :   9a53b:  cmp    %r13,0x8(%rax)
    0.00 :   9a53f:  je     9a54d <_int_malloc+0xded>
    0.00 :   9a541:  mov    0x10(%r13),%rax
    0.00 :   9a545:  cmp    0x8(%rax),%rdx
    0.00 :   9a549:  cmove  %rax,%r13
    0.00 :   9a54d:  mov    %r14,%rcx
    0.00 :   9a550:  mov    %r13,%rdi
    0.00 :   9a553:  sub    %rbx,%rcx
    0.00 :   9a556:  mov    %rcx,(%rsp)
    0.00 :   9a55a:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   9a55f:  mov    (%rsp),%rcx
    0.00 :   9a563:  cmp    $0x1f,%rcx
    0.00 :   9a567:  jbe    9a5e7 <_int_malloc+0xe87>
    0.00 :   9a569:  mov    0x70(%rbp),%rax
    0.00 :   9a56d:  movq   %r15,%xmm3
    0.00 :   9a572:  lea    0x0(%r13,%rbx,1),%rdx
    0.00 :   9a577:  movq   %rax,%xmm0
    0.00 :   9a57c:  punpcklqdq %xmm3,%xmm0
    0.00 :   9a580:  cmp    %r15,0x18(%rax)
    0.00 :   9a584:  jne    9a5db <_int_malloc+0xe7b>
    0.00 :   9a586:  movups %xmm0,0x10(%rdx)
    0.00 :   9a58a:  mov    %rdx,0x70(%rbp)
    0.00 :   9a58e:  mov    %rdx,0x18(%rax)
    0.00 :   9a592:  cmp    $0x3ff,%rcx
    0.00 :   9a599:  jbe    9a5a3 <_int_malloc+0xe43>
    0.00 :   9a59b:  pxor   %xmm0,%xmm0
    0.00 :   9a59f:  movups %xmm0,0x20(%rdx)
    0.00 :   9a5a3:  lea    0x1396d6(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a5aa:  cmp    %rax,%rbp
    0.00 :   9a5ad:  setne  %al
    0.00 :   9a5b0:  movzbl %al,%eax
    0.00 :   9a5b3:  shl    $0x2,%rax
    0.00 :   9a5b7:  or     %rbx,%rax
    0.00 :   9a5ba:  or     $0x1,%rax
    0.00 :   9a5be:  mov    %rax,0x8(%r13)
    0.00 :   9a5c2:  mov    %rcx,%rax
    0.00 :   9a5c5:  or     $0x1,%rax
    0.00 :   9a5c9:  mov    %rax,0x8(%rdx)
    0.00 :   9a5cd:  mov    %rcx,0x0(%r13,%r14,1)
    0.00 :   9a5d2:  lea    0x10(%r13),%rcx
    0.00 :   9a5d6:  jmp    9a498 <_int_malloc+0xd38>
    0.00 :   9a5db:  lea    0x103066(%rip),%rdi        # 19d648 <aliasfile.0+0x1c00>
    0.00 :   9a5e2:  call   96b80 <malloc_printerr>
    0.00 :   9a5e7:  lea    0x139692(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a5ee:  orq    $0x1,0x8(%r13,%r14,1)
    0.00 :   9a5f4:  cmp    %rax,%rbp
    0.00 :   9a5f7:  je     9a5d2 <_int_malloc+0xe72>
    0.00 :   9a5f9:  orq    $0x4,0x8(%r13)
    0.00 :   9a5fe:  jmp    9a5d2 <_int_malloc+0xe72>
    0.00 :   9a600:  lea    0x103069(%rip),%rcx        # 19d670 <aliasfile.0+0x1c28>
    0.00 :   9a607:  lea    0x1034f2(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a60e:  mov    $0x1,%edi
    0.00 :   9a613:  xor    %eax,%eax
    0.00 :   9a615:  lea    0x1024b4(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a61c:  call   80df0 <__libc_message>
    0.00 :   9a621:  lea    0xfdaf6(%rip),%rcx        # 19811e <null+0xf64>
    0.00 :   9a628:  lea    0x1034d1(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a62f:  mov    $0x1,%edi
    0.00 :   9a634:  xor    %eax,%eax
    0.00 :   9a636:  lea    0x102493(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a63d:  call   80df0 <__libc_message>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   40.08 dbt2-driver[408020]
   35.17 dbt2-driver[40802a]
   24.75 dbt2-driver[408025]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407ff5 <get_random>:
         : 6      get_random():
    0.00 :   407ff5: push   %rbp
    0.00 :   407ff6: mov    %rsp,%rbp
    0.00 :   407ff9: sub    $0x20,%rsp
    0.00 :   407ffd: mov    %rdi,-0x8(%rbp)
    0.00 :   408001: mov    %rsi,-0x10(%rbp)
    0.00 :   408005: pxor   %xmm1,%xmm1
    0.00 :   408009: cvtsi2sdq -0x10(%rbp),%xmm1
    0.00 :   40800f: movsd  %xmm1,-0x18(%rbp)
    0.00 :   408014: mov    -0x8(%rbp),%rax
    0.00 :   408018: mov    %rax,%rdi
    0.00 :   40801b: call   407b5c <genrand64_real2>
   40.08 :   408020: mulsd  -0x18(%rbp),%xmm0 // dbt2-driver[408020]
   24.75 :   408025: cvttsd2si %xmm0,%rax // dbt2-driver[408025]
   35.17 :   40802a: leave // dbt2-driver[40802a]
    0.00 :   40802b: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  100.00 [nf_conntrack][b760]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (4 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    000000000000b760 <nf_ct_seq_offset>:
         : 6    nf_ct_seq_offset():
  100.00 :   b760:   call   b765 <nf_ct_seq_offset+0x5> // [nf_conntrack][b760]
    0.00 :   b765:   mov    0xb0(%rdi),%rdi
    0.00 :   b76c:   test   %rdi,%rdi
    0.00 :   b76f:   je     b7d7 <nf_ct_seq_offset+0x77>
    0.00 :   b771:   movzbl 0x2(%rdi),%eax
    0.00 :   b775:   test   %al,%al
    0.00 :   b777:   je     b7d7 <nf_ct_seq_offset+0x77>
    0.00 :   b779:   push   %rbx
    0.00 :   b77a:   add    %rdi,%rax
    0.00 :   b77d:   mov    %esi,%ebx
    0.00 :   b77f:   sub    $0x8,%rsp
    0.00 :   b783:   mov    0xc(%rdi),%ecx
    0.00 :   b786:   test   %ecx,%ecx
    0.00 :   b788:   jne    b7c3 <nf_ct_seq_offset+0x63>
    0.00 :   b78a:   test   %rax,%rax
    0.00 :   b78d:   je     b7b7 <nf_ct_seq_offset+0x57>
    0.00 :   b78f:   mov    %ebx,%esi
    0.00 :   b791:   lea    (%rsi,%rsi,2),%rcx
    0.00 :   b795:   lea    (%rax,%rcx,4),%rax
    0.00 :   b799:   cmp    %edx,(%rax)
    0.00 :   b79b:   js     b7aa <nf_ct_seq_offset+0x4a>
    0.00 :   b79d:   mov    0x4(%rax),%eax
    0.00 :   b7a0:   add    $0x8,%rsp
    0.00 :   b7a4:   pop    %rbx
    0.00 :   b7a5:   jmp    b7aa <nf_ct_seq_offset+0x4a>
    0.00 :   b7aa:   mov    0x8(%rax),%eax
    0.00 :   b7ad:   add    $0x8,%rsp
    0.00 :   b7b1:   pop    %rbx
    0.00 :   b7b2:   jmp    b7b7 <nf_ct_seq_offset+0x57>
    0.00 :   b7b7:   add    $0x8,%rsp
    0.00 :   b7bb:   xor    %eax,%eax
    0.00 :   b7bd:   pop    %rbx
    0.00 :   b7be:   jmp    b7c3 <nf_ct_seq_offset+0x63>
    0.00 :   b7c3:   mov    $0x2,%esi
    0.00 :   b7c8:   mov    %edx,0x4(%rsp)
    0.00 :   b7cc:   call   b7d1 <nf_ct_seq_offset+0x71>
    0.00 :   b7d1:   mov    0x4(%rsp),%edx
    0.00 :   b7d5:   jmp    b78a <nf_ct_seq_offset+0x2a>
    0.00 :   b7d7:   xor    %eax,%eax
    0.00 :   b7d9:   jmp    b7de <nf_ct_seq_offset+0x7e>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[b32c0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000b32c0 <__x86_cacheinfo_ifunc>:
         : 6     __x86_cacheinfo_ifunc():
  100.00 :   b32c0:  endbr64 // libc.so.6[b32c0]
    0.00 :   b32c4:  mov    0x11fbfd(%rip),%rax        # 1d2ec8 <_rtld_global_ro@GLIBC_PRIVATE>
    0.00 :   b32cb:  mov    0x1c0(%rax),%rdx
    0.00 :   b32d2:  and    $0xffffffffffffff00,%rdx
    0.00 :   b32d9:  jle    b32ef <__x86_cacheinfo_ifunc+0x2f>
    0.00 :   b32db:  mov    %rdx,%rcx
    0.00 :   b32de:  mov    %rdx,0x12012b(%rip)        # 1d3410 <__x86_data_cache_size>
    0.00 :   b32e5:  sar    %rcx
    0.00 :   b32e8:  mov    %rcx,0x120129(%rip)        # 1d3418 <__x86_data_cache_size_half>
    0.00 :   b32ef:  mov    0x1c8(%rax),%rdx
    0.00 :   b32f6:  and    $0xffffffffffffff00,%rdx
    0.00 :   b32fd:  jle    b3313 <__x86_cacheinfo_ifunc+0x53>
    0.00 :   b32ff:  mov    %rdx,%rcx
    0.00 :   b3302:  mov    %rdx,0x1200f7(%rip)        # 1d3400 <__x86_shared_cache_size>
    0.00 :   b3309:  sar    %rcx
    0.00 :   b330c:  mov    %rcx,0x1200f5(%rip)        # 1d3408 <__x86_shared_cache_size_half>
    0.00 :   b3313:  mov    0x1d0(%rax),%rdx
    0.00 :   b331a:  mov    %rdx,0x12724f(%rip)        # 1da570 <__x86_shared_non_temporal_threshold>
    0.00 :   b3321:  mov    0x1d8(%rax),%rdx
    0.00 :   b3328:  mov    %rdx,0x1200c9(%rip)        # 1d33f8 <__x86_rep_movsb_threshold>
    0.00 :   b332f:  mov    0x1e8(%rax),%rdx
    0.00 :   b3336:  mov    %rdx,0x1200b3(%rip)        # 1d33f0 <__x86_rep_stosb_threshold>
    0.00 :   b333d:  mov    0x1e0(%rax),%rdx
    0.00 :   b3344:  mov    %rdx,0x12721d(%rip)        # 1da568 <__x86_rep_movsb_stop_threshold>
    0.00 :   b334b:  testb  $0x80,0x1a5(%rax)
    0.00 :   b3352:  je     b335b <__x86_cacheinfo_ifunc+0x9b>
    0.00 :   b3354:  orl    $0x1,0x127205(%rip)        # 1da560 <__x86_string_control>
    0.00 :   b335b:  xor    %eax,%eax
    0.00 :   b335d:  ret

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   30.61 dbt2-driver[407bad]
   27.29 dbt2-driver[407bb7]
   27.04 dbt2-driver[407b64]
   15.06 dbt2-driver[407ba9]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407b5c <genrand64_real2>:
         : 6      genrand64_real2():
    0.00 :   407b5c: push   %rbp
    0.00 :   407b5d: mov    %rsp,%rbp
    0.00 :   407b60: sub    $0x10,%rsp
   27.04 :   407b64: mov    %rdi,-0x8(%rbp) // dbt2-driver[407b64]
    0.00 :   407b68: mov    -0x8(%rbp),%rax
    0.00 :   407b6c: mov    %rax,%rdi
    0.00 :   407b6f: call   40d490 <pcg_mcg_128_xsl_rr_64_random_r>
    0.00 :   407b74: shr    $0xb,%rax
    0.00 :   407b78: test   %rax,%rax
    0.00 :   407b7b: js     407b88 <genrand64_real2+0x2c>
    0.00 :   407b7d: pxor   %xmm0,%xmm0
    0.00 :   407b81: cvtsi2sd %rax,%xmm0
    0.00 :   407b86: jmp    407ba1 <genrand64_real2+0x45>
    0.00 :   407b88: mov    %rax,%rdx
    0.00 :   407b8b: shr    %rdx
    0.00 :   407b8e: and    $0x1,%eax
    0.00 :   407b91: or     %rax,%rdx
    0.00 :   407b94: pxor   %xmm0,%xmm0
    0.00 :   407b98: cvtsi2sd %rdx,%xmm0
    0.00 :   407b9d: addsd  %xmm0,%xmm0
    0.00 :   407ba1: movsd  0x9aff(%rip),%xmm1        # 4116a8 <transaction_short_name+0xb0>
   15.06 :   407ba9: mulsd  %xmm1,%xmm0 // dbt2-driver[407ba9]
   30.61 :   407bad: movq   %xmm0,%rax // dbt2-driver[407bad]
    0.00 :   407bb2: movq   %rax,%xmm0
   27.29 :   407bb7: leave // dbt2-driver[407bb7]
    0.00 :   407bb8: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   36.32 [virtio_net][1ad0]
   35.84 [virtio_net][1ad6]
   27.84 [virtio_net][1af6]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (3 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001ad0 <skb_recv_done>:
         : 6    skb_recv_done():
   36.32 :   1ad0:   call   1ad5 <skb_recv_done+0x5> // [virtio_net][1ad0]
    0.00 :   1ad5:   push   %rbp
   35.84 :   1ad6:   mov    %rdi,%rbp // [virtio_net][1ad6]
    0.00 :   1ad9:   push   %rbx
    0.00 :   1ada:   mov    0x20(%rdi),%rax
    0.00 :   1ade:   mov    0x330(%rax),%rdx
    0.00 :   1ae5:   mov    0x28(%rdi),%eax
    0.00 :   1ae8:   shr    %eax
    0.00 :   1aea:   lea    (%rax,%rax,4),%rbx
    0.00 :   1aee:   shl    $0x8,%rbx
    0.00 :   1af2:   add    0x20(%rdx),%rbx
   27.84 :   1af6:   add    $0x8,%rbx // [virtio_net][1af6]
    0.00 :   1afa:   mov    %rbx,%rdi
    0.00 :   1afd:   call   1b02 <skb_recv_done+0x32>
    0.00 :   1b02:   test   %al,%al
    0.00 :   1b04:   jne    1b0d <skb_recv_done+0x3d>
    0.00 :   1b06:   pop    %rbx
    0.00 :   1b07:   pop    %rbp
    0.00 :   1b08:   jmp    1b0d <skb_recv_done+0x3d>
    0.00 :   1b0d:   mov    %rbp,%rdi
    0.00 :   1b10:   call   1b15 <skb_recv_done+0x45>
    0.00 :   1b15:   mov    %rbx,%rdi
    0.00 :   1b18:   pop    %rbx
    0.00 :   1b19:   pop    %rbp
    0.00 :   1b1a:   jmp    1b1f <skb_recv_done+0x4f>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[156041]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000156020 <__strlen_avx2>:
         : 6      __strlen_avx2():
    0.00 :   156020: endbr64
    0.00 :   156024: mov    %edi,%eax
    0.00 :   156026: mov    %rdi,%rdx
    0.00 :   156029: vpxor  %xmm0,%xmm0,%xmm0
    0.00 :   15602d: and    $0xfff,%eax
    0.00 :   156032: cmp    $0xfe0,%eax
    0.00 :   156037: ja     156170 <__strlen_avx2+0x150>
    0.00 :   15603d: vpcmpeqb (%rdi),%ymm0,%ymm1
  100.00 :   156041: vpmovmskb %ymm1,%eax // libc.so.6[156041]
    0.00 :   156045: test   %eax,%eax
    0.00 :   156047: je     1560a0 <__strlen_avx2+0x80>
    0.00 :   156049: tzcnt  %eax,%eax
    0.00 :   15604d: vzeroupper
    0.00 :   156050: ret
    0.00 :   156051: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15605c: nopl   0x0(%rax)
    0.00 :   156060: tzcnt  %eax,%eax
    0.00 :   156064: sub    %edx,%edi
    0.00 :   156066: inc    %edi
    0.00 :   156068: add    %edi,%eax
    0.00 :   15606a: vzeroupper
    0.00 :   15606d: ret
    0.00 :   15606e: xchg   %ax,%ax
    0.00 :   156070: tzcnt  %eax,%eax
    0.00 :   156074: sub    %edx,%edi
    0.00 :   156076: add    $0x21,%edi
    0.00 :   156079: add    %edi,%eax
    0.00 :   15607b: vzeroupper
    0.00 :   15607e: ret
    0.00 :   15607f: nop
    0.00 :   156080: tzcnt  %eax,%eax
    0.00 :   156084: sub    %edx,%edi
    0.00 :   156086: add    $0x41,%edi
    0.00 :   156089: add    %edi,%eax
    0.00 :   15608b: vzeroupper
    0.00 :   15608e: ret
    0.00 :   15608f: nop
    0.00 :   156090: tzcnt  %eax,%eax
    0.00 :   156094: sub    %edx,%edi
    0.00 :   156096: add    $0x61,%edi
    0.00 :   156099: add    %edi,%eax
    0.00 :   15609b: vzeroupper
    0.00 :   15609e: ret
    0.00 :   15609f: nop
    0.00 :   1560a0: or     $0x1f,%rdi
    0.00 :   1560a4: vpcmpeqb 0x1(%rdi),%ymm0,%ymm1
    0.00 :   1560a9: vpmovmskb %ymm1,%eax
    0.00 :   1560ad: test   %eax,%eax
    0.00 :   1560af: jne    156060 <__strlen_avx2+0x40>
    0.00 :   1560b1: vpcmpeqb 0x21(%rdi),%ymm0,%ymm1
    0.00 :   1560b6: vpmovmskb %ymm1,%eax
    0.00 :   1560ba: test   %eax,%eax
    0.00 :   1560bc: jne    156070 <__strlen_avx2+0x50>
    0.00 :   1560be: vpcmpeqb 0x41(%rdi),%ymm0,%ymm1
    0.00 :   1560c3: vpmovmskb %ymm1,%eax
    0.00 :   1560c7: test   %eax,%eax
    0.00 :   1560c9: jne    156080 <__strlen_avx2+0x60>
    0.00 :   1560cb: vpcmpeqb 0x61(%rdi),%ymm0,%ymm1
    0.00 :   1560d0: vpmovmskb %ymm1,%eax
    0.00 :   1560d4: test   %eax,%eax
    0.00 :   1560d6: jne    156090 <__strlen_avx2+0x70>
    0.00 :   1560d8: inc    %rdi
    0.00 :   1560db: or     $0x7f,%rdi
    0.00 :   1560df: nop
    0.00 :   1560e0: vmovdqa 0x1(%rdi),%ymm1
    0.00 :   1560e5: vpminub 0x21(%rdi),%ymm1,%ymm2
    0.00 :   1560ea: vmovdqa 0x41(%rdi),%ymm3
    0.00 :   1560ef: vpminub 0x61(%rdi),%ymm3,%ymm4
    0.00 :   1560f4: vpminub %ymm2,%ymm4,%ymm5
    0.00 :   1560f8: vpcmpeqb %ymm5,%ymm0,%ymm5
    0.00 :   1560fc: vpmovmskb %ymm5,%ecx
    0.00 :   156100: sub    $0xffffffffffffff80,%rdi
    0.00 :   156104: test   %ecx,%ecx
    0.00 :   156106: je     1560e0 <__strlen_avx2+0xc0>
    0.00 :   156108: vpcmpeqb %ymm1,%ymm0,%ymm1
    0.00 :   15610c: vpmovmskb %ymm1,%eax
    0.00 :   156110: sub    %rdx,%rdi
    0.00 :   156113: test   %eax,%eax
    0.00 :   156115: jne    156150 <__strlen_avx2+0x130>
    0.00 :   156117: vpcmpeqb %ymm2,%ymm0,%ymm2
    0.00 :   15611b: vpmovmskb %ymm2,%eax
    0.00 :   15611f: test   %eax,%eax
    0.00 :   156121: jne    156160 <__strlen_avx2+0x140>
    0.00 :   156123: vpcmpeqb %ymm3,%ymm0,%ymm3
    0.00 :   156127: vpmovmskb %ymm3,%eax
    0.00 :   15612b: shl    $0x20,%rcx
    0.00 :   15612f: or     %rcx,%rax
    0.00 :   156132: tzcnt  %rax,%rax
    0.00 :   156137: sub    $0x3f,%rdi
    0.00 :   15613b: add    %rdi,%rax
    0.00 :   15613e: vzeroupper
    0.00 :   156141: ret
    0.00 :   156142: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15614d: nopl   (%rax)
    0.00 :   156150: tzcnt  %eax,%eax
    0.00 :   156154: sub    $0x7f,%rdi
    0.00 :   156158: add    %rdi,%rax
    0.00 :   15615b: vzeroupper
    0.00 :   15615e: ret
    0.00 :   15615f: nop
    0.00 :   156160: tzcnt  %eax,%eax
    0.00 :   156164: sub    $0x5f,%rdi
    0.00 :   156168: add    %rdi,%rax
    0.00 :   15616b: vzeroupper
    0.00 :   15616e: ret
    0.00 :   15616f: nop
    0.00 :   156170: or     $0x1f,%rdi
    0.00 :   156174: vpcmpeqb -0x1f(%rdi),%ymm0,%ymm1
    0.00 :   156179: vpmovmskb %ymm1,%eax
    0.00 :   15617d: sarx   %edx,%eax,%eax
    0.00 :   156182: test   %eax,%eax
    0.00 :   156184: je     1560a4 <__strlen_avx2+0x84>
    0.00 :   15618a: tzcnt  %eax,%eax
    0.00 :   15618e: vzeroupper
    0.00 :   156191: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[7e990]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000007e990 <_IO_fwide>:
         : 6     _IO_fwide():
  100.00 :   7e990:  endbr64 // libc.so.6[7e990]
    0.00 :   7e994:  push   %rbp
    0.00 :   7e995:  push   %rbx
    0.00 :   7e996:  mov    %rdi,%rbx
    0.00 :   7e999:  sub    $0x38,%rsp
    0.00 :   7e99d:  mov    %fs:0x28,%rax
    0.00 :   7e9a6:  mov    %rax,0x28(%rsp)
    0.00 :   7e9ab:  mov    0xc0(%rdi),%eax
    0.00 :   7e9b1:  test   %esi,%esi
    0.00 :   7e9b3:  js     7e9e0 <_IO_fwide+0x50>
    0.00 :   7e9b5:  test   %eax,%eax
    0.00 :   7e9b7:  jne    7e9bd <_IO_fwide+0x2d>
    0.00 :   7e9b9:  test   %esi,%esi
    0.00 :   7e9bb:  jne    7e9f8 <_IO_fwide+0x68>
    0.00 :   7e9bd:  mov    0x28(%rsp),%rdx
    0.00 :   7e9c2:  sub    %fs:0x28,%rdx
    0.00 :   7e9cb:  jne    7eac2 <_IO_fwide+0x132>
    0.00 :   7e9d1:  add    $0x38,%rsp
    0.00 :   7e9d5:  pop    %rbx
    0.00 :   7e9d6:  pop    %rbp
    0.00 :   7e9d7:  ret
    0.00 :   7e9d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   7e9e0:  test   %eax,%eax
    0.00 :   7e9e2:  jne    7e9bd <_IO_fwide+0x2d>
    0.00 :   7e9e4:  mov    $0xffffffff,%eax
    0.00 :   7e9e9:  mov    %eax,0xc0(%rbx)
    0.00 :   7e9ef:  jmp    7e9bd <_IO_fwide+0x2d>
    0.00 :   7e9f1:  nopl   0x0(%rax)
    0.00 :   7e9f8:  mov    0xa0(%rdi),%rbp
    0.00 :   7e9ff:  lea    0x68(%rbp),%rax
    0.00 :   7ea03:  mov    %rax,0x98(%rdi)
    0.00 :   7ea0a:  mov    0x8(%rbp),%rax
    0.00 :   7ea0e:  movq   $0x0,0x58(%rbp)
    0.00 :   7ea16:  mov    %rax,0x0(%rbp)
    0.00 :   7ea1a:  mov    0x18(%rbp),%rax
    0.00 :   7ea1e:  mov    %rax,0x20(%rbp)
    0.00 :   7ea22:  mov    0xa0(%rdi),%rax
    0.00 :   7ea29:  mov    %rsp,%rdi
    0.00 :   7ea2c:  movq   $0x0,0x60(%rax)
    0.00 :   7ea34:  call   c0340 <__wcsmbs_clone_conv>
    0.00 :   7ea39:  cmpq   $0x1,0x8(%rsp)
    0.00 :   7ea3f:  jne    7eae6 <_IO_fwide+0x156>
    0.00 :   7ea45:  cmpq   $0x1,0x18(%rsp)
    0.00 :   7ea4b:  jne    7eac7 <_IO_fwide+0x137>
    0.00 :   7ea4d:  mov    (%rsp),%rax
    0.00 :   7ea51:  mov    0x10(%rsp),%rcx
    0.00 :   7ea56:  movl   $0x1,0x88(%rbp)
    0.00 :   7ea60:  mov    %rax,0x68(%rbp)
    0.00 :   7ea64:  mov    0x12256d(%rip),%rax        # 1a0fd8 <_sys_errlist_internal_len+0x8>
    0.00 :   7ea6b:  mov    %rax,0x80(%rbp)
    0.00 :   7ea72:  mov    0xa0(%rbx),%rax
    0.00 :   7ea79:  mov    %rcx,0xa0(%rbp)
    0.00 :   7ea80:  mov    0x122559(%rip),%rcx        # 1a0fe0 <_sys_errlist_internal_len+0x10>
    0.00 :   7ea87:  movl   $0x1,0xc0(%rbp)
    0.00 :   7ea91:  lea    0x58(%rax),%rdx
    0.00 :   7ea95:  mov    0xe0(%rax),%rax
    0.00 :   7ea9c:  mov    %rdx,0x90(%rbp)
    0.00 :   7eaa3:  mov    %rcx,0xb8(%rbp)
    0.00 :   7eaaa:  mov    %rdx,0xc8(%rbp)
    0.00 :   7eab1:  mov    %rax,0xd8(%rbx)
    0.00 :   7eab8:  mov    $0x1,%eax
    0.00 :   7eabd:  jmp    7e9e9 <_IO_fwide+0x59>
    0.00 :   7eac2:  call   11ba20 <__stack_chk_fail>
    0.00 :   7eac7:  lea    0x11da12(%rip),%rcx        # 19c4e0 <aliasfile.0+0xa98>
    0.00 :   7eace:  mov    $0x51,%edx
    0.00 :   7ead3:  lea    0x119284(%rip),%rsi        # 197d5e <null+0xba4>
    0.00 :   7eada:  lea    0x11929d(%rip),%rdi        # 197d7e <null+0xbc4>
    0.00 :   7eae1:  call   35610 <__assert_fail>
    0.00 :   7eae6:  lea    0x11d9f3(%rip),%rcx        # 19c4e0 <aliasfile.0+0xa98>
    0.00 :   7eaed:  mov    $0x50,%edx
    0.00 :   7eaf2:  lea    0x119265(%rip),%rsi        # 197d5e <null+0xba4>
    0.00 :   7eaf9:  lea    0x119268(%rip),%rdi        # 197d68 <null+0xbae>
    0.00 :   7eb00:  call   35610 <__assert_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   76.97 libc.so.6[b4eb6]
   23.03 libc.so.6[b4eb0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000b4eb0 <wcschrnul>:
         : 6     __wcschrnul():
   23.03 :   b4eb0:  endbr64 // libc.so.6[b4eb0]
    0.00 :   b4eb4:  mov    (%rdi),%edx
   76.97 :   b4eb6:  mov    %rdi,%rax // libc.so.6[b4eb6]
    0.00 :   b4eb9:  cmp    %edx,%esi
    0.00 :   b4ebb:  jne    b4ecb <wcschrnul+0x1b>
    0.00 :   b4ebd:  jmp    b4ecf <wcschrnul+0x1f>
    0.00 :   b4ebf:  nop
    0.00 :   b4ec0:  mov    0x4(%rax),%edx
    0.00 :   b4ec3:  add    $0x4,%rax
    0.00 :   b4ec7:  cmp    %esi,%edx
    0.00 :   b4ec9:  je     b4ecf <wcschrnul+0x1f>
    0.00 :   b4ecb:  test   %edx,%edx
    0.00 :   b4ecd:  jne    b4ec0 <wcschrnul+0x10>
    0.00 :   b4ecf:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[15574f]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000155730 <__strcmp_avx2>:
         : 6      __strcmp_avx2():
    0.00 :   155730: endbr64
    0.00 :   155734: vpxor  %xmm15,%xmm15,%xmm15
    0.00 :   155739: mov    %edi,%eax
    0.00 :   15573b: or     %esi,%eax
    0.00 :   15573d: shl    $0x14,%eax
    0.00 :   155740: cmp    $0xf8000000,%eax
    0.00 :   155745: ja     155a70 <__strcmp_avx2+0x340>
    0.00 :   15574b: vmovdqu (%rdi),%ymm0
  100.00 :   15574f: vpcmpeqb (%rsi),%ymm0,%ymm1 // libc.so.6[15574f]
    0.00 :   155753: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   155757: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   15575b: vpmovmskb %ymm1,%ecx
    0.00 :   15575f: inc    %ecx
    0.00 :   155761: je     1557c0 <__strcmp_avx2+0x90>
    0.00 :   155763: tzcnt  %ecx,%ecx
    0.00 :   155767: movzbl (%rdi,%rcx,1),%eax
    0.00 :   15576b: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   15576f: sub    %ecx,%eax
    0.00 :   155771: vzeroupper
    0.00 :   155774: ret
    0.00 :   155775: tzcnt  %ecx,%ecx
    0.00 :   155779: movzbl 0x20(%rdi,%rcx,1),%eax
    0.00 :   15577e: movzbl 0x20(%rsi,%rcx,1),%ecx
    0.00 :   155783: sub    %ecx,%eax
    0.00 :   155785: vzeroupper
    0.00 :   155788: ret
    0.00 :   155789: nopl   0x0(%rax)
    0.00 :   155790: tzcnt  %ecx,%ecx
    0.00 :   155794: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   155799: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   15579e: sub    %ecx,%eax
    0.00 :   1557a0: vzeroupper
    0.00 :   1557a3: ret
    0.00 :   1557a4: tzcnt  %ecx,%ecx
    0.00 :   1557a8: movzbl 0x60(%rdi,%rcx,1),%eax
    0.00 :   1557ad: movzbl 0x60(%rsi,%rcx,1),%ecx
    0.00 :   1557b2: sub    %ecx,%eax
    0.00 :   1557b4: vzeroupper
    0.00 :   1557b7: ret
    0.00 :   1557b8: nopl   0x0(%rax,%rax,1)
    0.00 :   1557c0: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   1557c5: vpcmpeqb 0x20(%rsi),%ymm0,%ymm1
    0.00 :   1557ca: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1557ce: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1557d2: vpmovmskb %ymm1,%ecx
    0.00 :   1557d6: inc    %ecx
    0.00 :   1557d8: jne    155775 <__strcmp_avx2+0x45>
    0.00 :   1557da: vmovdqu 0x40(%rdi),%ymm0
    0.00 :   1557df: vpcmpeqb 0x40(%rsi),%ymm0,%ymm1
    0.00 :   1557e4: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1557e8: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1557ec: vpmovmskb %ymm1,%ecx
    0.00 :   1557f0: inc    %ecx
    0.00 :   1557f2: jne    155790 <__strcmp_avx2+0x60>
    0.00 :   1557f4: vmovdqu 0x60(%rdi),%ymm0
    0.00 :   1557f9: vpcmpeqb 0x60(%rsi),%ymm0,%ymm1
    0.00 :   1557fe: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   155802: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   155806: vpmovmskb %ymm1,%ecx
    0.00 :   15580a: inc    %ecx
    0.00 :   15580c: jne    1557a4 <__strcmp_avx2+0x74>
    0.00 :   15580e: xor    %r8d,%r8d
    0.00 :   155811: sub    %rdi,%rsi
    0.00 :   155814: and    $0xffffffffffffff80,%rdi
    0.00 :   155818: add    %rdi,%rsi
    0.00 :   15581b: mov    $0xffffff80,%eax
    0.00 :   155820: sub    %esi,%eax
    0.00 :   155822: and    $0xfff,%eax
    0.00 :   155827: nopw   0x0(%rax,%rax,1)
    0.00 :   155830: sub    $0xffffffffffffff80,%rdi
    0.00 :   155834: sub    $0xffffffffffffff80,%rsi
    0.00 :   155838: add    $0xffffff80,%eax
    0.00 :   15583b: jae    155930 <__strcmp_avx2+0x200>
    0.00 :   155841: vmovdqa (%rdi),%ymm0
    0.00 :   155845: vmovdqa 0x20(%rdi),%ymm2
    0.00 :   15584a: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   15584f: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   155854: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   155858: vpcmpeqb 0x20(%rsi),%ymm2,%ymm3
    0.00 :   15585d: vpcmpeqb 0x40(%rsi),%ymm4,%ymm5
    0.00 :   155862: vpcmpeqb 0x60(%rsi),%ymm6,%ymm7
    0.00 :   155867: vpand  %ymm0,%ymm1,%ymm1
    0.00 :   15586b: vpand  %ymm2,%ymm3,%ymm3
    0.00 :   15586f: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   155873: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   155877: vpminub %ymm1,%ymm3,%ymm3
    0.00 :   15587b: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   15587f: vpminub %ymm3,%ymm7,%ymm7
    0.00 :   155883: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   155887: vpmovmskb %ymm7,%edx
    0.00 :   15588b: test   %edx,%edx
    0.00 :   15588d: je     155830 <__strcmp_avx2+0x100>
    0.00 :   15588f: vpcmpeqb %ymm1,%ymm15,%ymm1
    0.00 :   155893: vpmovmskb %ymm1,%ecx
    0.00 :   155897: test   %ecx,%ecx
    0.00 :   155899: jne    1558d0 <__strcmp_avx2+0x1a0>
    0.00 :   15589b: vpcmpeqb %ymm3,%ymm15,%ymm3
    0.00 :   15589f: vpmovmskb %ymm3,%ecx
    0.00 :   1558a3: test   %ecx,%ecx
    0.00 :   1558a5: jne    1558f0 <__strcmp_avx2+0x1c0>
    0.00 :   1558a7: vpcmpeqb %ymm5,%ymm15,%ymm5
    0.00 :   1558ab: vpmovmskb %ymm5,%ecx
    0.00 :   1558af: test   %ecx,%ecx
    0.00 :   1558b1: jne    155910 <__strcmp_avx2+0x1e0>
    0.00 :   1558b3: tzcnt  %edx,%edx
    0.00 :   1558b7: movzbl 0x60(%rdi,%rdx,1),%eax
    0.00 :   1558bc: movzbl 0x60(%rsi,%rdx,1),%ecx
    0.00 :   1558c1: sub    %ecx,%eax
    0.00 :   1558c3: xor    %r8d,%eax
    0.00 :   1558c6: sub    %r8d,%eax
    0.00 :   1558c9: vzeroupper
    0.00 :   1558cc: ret
    0.00 :   1558cd: nopl   (%rax)
    0.00 :   1558d0: tzcnt  %ecx,%ecx
    0.00 :   1558d4: movzbl (%rdi,%rcx,1),%eax
    0.00 :   1558d8: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   1558dc: sub    %ecx,%eax
    0.00 :   1558de: xor    %r8d,%eax
    0.00 :   1558e1: sub    %r8d,%eax
    0.00 :   1558e4: vzeroupper
    0.00 :   1558e7: ret
    0.00 :   1558e8: nopl   0x0(%rax,%rax,1)
    0.00 :   1558f0: tzcnt  %ecx,%ecx
    0.00 :   1558f4: movzbl 0x20(%rdi,%rcx,1),%eax
    0.00 :   1558f9: movzbl 0x20(%rsi,%rcx,1),%ecx
    0.00 :   1558fe: sub    %ecx,%eax
    0.00 :   155900: xor    %r8d,%eax
    0.00 :   155903: sub    %r8d,%eax
    0.00 :   155906: vzeroupper
    0.00 :   155909: ret
    0.00 :   15590a: nopw   0x0(%rax,%rax,1)
    0.00 :   155910: tzcnt  %ecx,%ecx
    0.00 :   155914: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   155919: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   15591e: sub    %ecx,%eax
    0.00 :   155920: xor    %r8d,%eax
    0.00 :   155923: sub    %r8d,%eax
    0.00 :   155926: vzeroupper
    0.00 :   155929: ret
    0.00 :   15592a: nopw   0x0(%rax,%rax,1)
    0.00 :   155930: cmp    $0xffffff80,%eax
    0.00 :   155933: je     155841 <__strcmp_avx2+0x111>
    0.00 :   155939: cmp    $0xffffffa0,%eax
    0.00 :   15593c: jle    155960 <__strcmp_avx2+0x230>
    0.00 :   15593e: vmovdqa (%rdi),%ymm0
    0.00 :   155942: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   155946: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15594a: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   15594e: vpmovmskb %ymm1,%ecx
    0.00 :   155952: inc    %ecx
    0.00 :   155954: jne    1558d0 <__strcmp_avx2+0x1a0>
    0.00 :   15595a: cmp    $0xffffffc0,%eax
    0.00 :   15595d: jg     1559b4 <__strcmp_avx2+0x284>
    0.00 :   15595f: nop
    0.00 :   155960: sub    $0xffffff80,%eax
    0.00 :   155963: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   155969: vpcmpeqb -0x20(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   15596f: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   155973: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   155977: vpmovmskb %ymm1,%ecx
    0.00 :   15597b: mov    $0xffffffff,%r10d
    0.00 :   155981: shlx   %esi,%r10d,%r10d
    0.00 :   155986: not    %ecx
    0.00 :   155988: mov    %eax,%edx
    0.00 :   15598a: add    $0xf80,%eax
    0.00 :   15598f: and    %r10d,%ecx
    0.00 :   155992: je     155841 <__strcmp_avx2+0x111>
    0.00 :   155998: tzcnt  %ecx,%ecx
    0.00 :   15599c: add    %edx,%ecx
    0.00 :   15599e: movzbl -0x20(%rdi,%rcx,1),%eax
    0.00 :   1559a3: movzbl -0x20(%rsi,%rcx,1),%ecx
    0.00 :   1559a8: sub    %ecx,%eax
    0.00 :   1559aa: xor    %r8d,%eax
    0.00 :   1559ad: sub    %r8d,%eax
    0.00 :   1559b0: vzeroupper
    0.00 :   1559b3: ret
    0.00 :   1559b4: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   1559b9: vpcmpeqb 0x20(%rsi),%ymm0,%ymm1
    0.00 :   1559be: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1559c2: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1559c6: vpmovmskb %ymm1,%ecx
    0.00 :   1559ca: inc    %ecx
    0.00 :   1559cc: jne    1558f0 <__strcmp_avx2+0x1c0>
    0.00 :   1559d2: sub    $0xffffff80,%eax
    0.00 :   1559d5: vmovdqu -0x40(%rdi,%rax,1),%ymm0
    0.00 :   1559db: vpcmpeqb -0x40(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   1559e1: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1559e5: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1559e9: vpmovmskb %ymm1,%ecx
    0.00 :   1559ed: inc    %ecx
    0.00 :   1559ef: jne    155a50 <__strcmp_avx2+0x320>
    0.00 :   1559f1: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   1559f7: vpcmpeqb -0x20(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   1559fd: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   155a01: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   155a05: vpmovmskb %ymm1,%ecx
    0.00 :   155a09: inc    %ecx
    0.00 :   155a0b: jne    155a53 <__strcmp_avx2+0x323>
    0.00 :   155a0d: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   155a12: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   155a17: vpcmpeqb 0x40(%rsi),%ymm4,%ymm5
    0.00 :   155a1c: vpcmpeqb 0x60(%rsi),%ymm6,%ymm7
    0.00 :   155a21: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   155a25: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   155a29: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   155a2d: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   155a31: vpmovmskb %ymm7,%edx
    0.00 :   155a35: test   %edx,%edx
    0.00 :   155a37: jne    1558a7 <__strcmp_avx2+0x177>
    0.00 :   155a3d: sub    $0xffffffffffffff80,%rdi
    0.00 :   155a41: sub    $0xffffffffffffff80,%rsi
    0.00 :   155a45: add    $0xf00,%eax
    0.00 :   155a4a: jmp    155841 <__strcmp_avx2+0x111>
    0.00 :   155a4f: nop
    0.00 :   155a50: add    $0xffffffe0,%eax
    0.00 :   155a53: tzcnt  %ecx,%ecx
    0.00 :   155a57: add    %eax,%ecx
    0.00 :   155a59: movzbl -0x20(%rdi,%rcx,1),%eax
    0.00 :   155a5e: movzbl -0x20(%rsi,%rcx,1),%ecx
    0.00 :   155a63: sub    %ecx,%eax
    0.00 :   155a65: xor    %r8d,%eax
    0.00 :   155a68: sub    %r8d,%eax
    0.00 :   155a6b: vzeroupper
    0.00 :   155a6e: ret
    0.00 :   155a6f: nop
    0.00 :   155a70: test   $0x1f00000,%eax
    0.00 :   155a75: je     15574b <__strcmp_avx2+0x1b>
    0.00 :   155a7b: mov    %edi,%eax
    0.00 :   155a7d: mov    %esi,%ecx
    0.00 :   155a7f: and    $0xfff,%eax
    0.00 :   155a84: and    $0xfff,%ecx
    0.00 :   155a8a: xor    %edx,%edx
    0.00 :   155a8c: cmp    %eax,%ecx
    0.00 :   155a8e: jg     155b10 <__strcmp_avx2+0x3e0>
    0.00 :   155a94: sub    $0xf80,%eax
    0.00 :   155a99: jbe    15574b <__strcmp_avx2+0x1b>
    0.00 :   155a9f: xor    %r8d,%r8d
    0.00 :   155aa2: sub    $0x60,%eax
    0.00 :   155aa5: jg     155b38 <__strcmp_avx2+0x408>
    0.00 :   155aab: nopl   0x0(%rax,%rax,1)
    0.00 :   155ab0: vmovdqu (%rdi,%rdx,1),%ymm0
    0.00 :   155ab5: vpcmpeqb (%rsi,%rdx,1),%ymm0,%ymm1
    0.00 :   155aba: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   155abe: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   155ac2: vpmovmskb %ymm1,%ecx
    0.00 :   155ac6: inc    %ecx
    0.00 :   155ac8: jne    155af2 <__strcmp_avx2+0x3c2>
    0.00 :   155aca: add    $0x20,%edx
    0.00 :   155acd: add    $0x20,%eax
    0.00 :   155ad0: jl     155ab0 <__strcmp_avx2+0x380>
    0.00 :   155ad2: sub    %eax,%edx
    0.00 :   155ad4: vmovdqu (%rdi,%rdx,1),%ymm0
    0.00 :   155ad9: vpcmpeqb (%rsi,%rdx,1),%ymm0,%ymm1
    0.00 :   155ade: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   155ae2: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   155ae6: vpmovmskb %ymm1,%ecx
    0.00 :   155aea: inc    %ecx
    0.00 :   155aec: je     155811 <__strcmp_avx2+0xe1>
    0.00 :   155af2: tzcnt  %ecx,%ecx
    0.00 :   155af6: add    %edx,%ecx
    0.00 :   155af8: movzbl (%rdi,%rcx,1),%eax
    0.00 :   155afc: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   155b00: sub    %ecx,%eax
    0.00 :   155b02: xor    %r8d,%eax
    0.00 :   155b05: sub    %r8d,%eax
    0.00 :   155b08: vzeroupper
    0.00 :   155b0b: ret
    0.00 :   155b0c: nopl   0x0(%rax)
    0.00 :   155b10: sub    $0xf80,%ecx
    0.00 :   155b16: jbe    15574b <__strcmp_avx2+0x1b>
    0.00 :   155b1c: mov    %ecx,%eax
    0.00 :   155b1e: mov    %rdi,%rcx
    0.00 :   155b21: mov    %rsi,%rdi
    0.00 :   155b24: mov    %rcx,%rsi
    0.00 :   155b27: mov    $0xffffffff,%r8d
    0.00 :   155b2d: xor    %edx,%edx
    0.00 :   155b2f: sub    $0x60,%eax
    0.00 :   155b32: jle    155ab0 <__strcmp_avx2+0x380>
    0.00 :   155b38: cmp    $0x10,%eax
    0.00 :   155b3b: ja     155b91 <__strcmp_avx2+0x461>
    0.00 :   155b3d: vmovdqu (%rdi),%xmm0
    0.00 :   155b41: vpcmpeqb (%rsi),%xmm0,%xmm1
    0.00 :   155b45: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   155b49: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   155b4d: vpmovmskb %ymm1,%ecx
    0.00 :   155b51: inc    %cx
    0.00 :   155b54: jne    155af2 <__strcmp_avx2+0x3c2>
    0.00 :   155b56: mov    $0x10,%edx
    0.00 :   155b5b: sub    %eax,%edx
    0.00 :   155b5d: je     155811 <__strcmp_avx2+0xe1>
    0.00 :   155b63: vmovdqu (%rdi,%rdx,1),%xmm0
    0.00 :   155b68: vpcmpeqb (%rsi,%rdx,1),%xmm0,%xmm1
    0.00 :   155b6d: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   155b71: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   155b75: vpmovmskb %ymm1,%ecx
    0.00 :   155b79: inc    %cx
    0.00 :   155b7c: jne    155af2 <__strcmp_avx2+0x3c2>
    0.00 :   155b82: lea    -0x70(%rdi,%rdx,1),%rdi
    0.00 :   155b87: lea    -0x70(%rsi,%rdx,1),%rsi
    0.00 :   155b8c: jmp    15581b <__strcmp_avx2+0xeb>
    0.00 :   155b91: cmp    $0x18,%eax
    0.00 :   155b94: ja     155bf0 <__strcmp_avx2+0x4c0>
    0.00 :   155b96: vmovq  (%rdi),%xmm0
    0.00 :   155b9a: vmovq  (%rsi),%xmm1
    0.00 :   155b9e: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   155ba2: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   155ba6: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   155baa: vpmovmskb %ymm1,%ecx
    0.00 :   155bae: inc    %cl
    0.00 :   155bb0: jne    155af2 <__strcmp_avx2+0x3c2>
    0.00 :   155bb6: mov    $0x18,%edx
    0.00 :   155bbb: sub    %eax,%edx
    0.00 :   155bbd: vmovq  (%rdi,%rdx,1),%xmm0
    0.00 :   155bc2: vmovq  (%rsi,%rdx,1),%xmm1
    0.00 :   155bc7: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   155bcb: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   155bcf: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   155bd3: vpmovmskb %ymm1,%ecx
    0.00 :   155bd7: inc    %cl
    0.00 :   155bd9: jne    155af2 <__strcmp_avx2+0x3c2>
    0.00 :   155bdf: lea    -0x78(%rdi,%rdx,1),%rdi
    0.00 :   155be4: lea    -0x78(%rsi,%rdx,1),%rsi
    0.00 :   155be9: jmp    15581b <__strcmp_avx2+0xeb>
    0.00 :   155bee: xchg   %ax,%ax
    0.00 :   155bf0: cmp    $0x1c,%eax
    0.00 :   155bf3: ja     155c50 <__strcmp_avx2+0x520>
    0.00 :   155bf5: vmovd  (%rdi),%xmm0
    0.00 :   155bf9: vmovd  (%rsi),%xmm1
    0.00 :   155bfd: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   155c01: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   155c05: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   155c09: vpmovmskb %ymm1,%ecx
    0.00 :   155c0d: sub    $0xf,%ecx
    0.00 :   155c10: jne    155af2 <__strcmp_avx2+0x3c2>
    0.00 :   155c16: mov    $0x1c,%edx
    0.00 :   155c1b: sub    %eax,%edx
    0.00 :   155c1d: vmovd  (%rdi,%rdx,1),%xmm0
    0.00 :   155c22: vmovd  (%rsi,%rdx,1),%xmm1
    0.00 :   155c27: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   155c2b: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   155c2f: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   155c33: vpmovmskb %ymm1,%ecx
    0.00 :   155c37: sub    $0xf,%ecx
    0.00 :   155c3a: jne    155af2 <__strcmp_avx2+0x3c2>
    0.00 :   155c40: lea    -0x7c(%rdi,%rdx,1),%rdi
    0.00 :   155c45: lea    -0x7c(%rsi,%rdx,1),%rsi
    0.00 :   155c4a: jmp    15581b <__strcmp_avx2+0xeb>
    0.00 :   155c4f: nop
    0.00 :   155c50: sub    %rdi,%rsi
    0.00 :   155c53: movzbl (%rdi),%eax
    0.00 :   155c56: movzbl (%rsi,%rdi,1),%ecx
    0.00 :   155c5a: sub    %ecx,%eax
    0.00 :   155c5c: jne    155c7e <__strcmp_avx2+0x54e>
    0.00 :   155c5e: test   %ecx,%ecx
    0.00 :   155c60: je     155c7b <__strcmp_avx2+0x54b>
    0.00 :   155c62: inc    %rdi
    0.00 :   155c65: test   $0x1f,%edi
    0.00 :   155c6b: jne    155c53 <__strcmp_avx2+0x523>
    0.00 :   155c6d: lea    -0x80(%rdi,%rsi,1),%rsi
    0.00 :   155c72: add    $0xffffffffffffff80,%rdi
    0.00 :   155c76: jmp    15581b <__strcmp_avx2+0xeb>
    0.00 :   155c7b: xor    %eax,%eax
    0.00 :   155c7d: ret
    0.00 :   155c7e: xor    %r8d,%eax
    0.00 :   155c81: sub    %r8d,%eax
    0.00 :   155c84: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   64.80 libc.so.6[10de30]
   35.20 libc.so.6[10deaa]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000010de30 <__send>:
         : 6      __libc_send():
   64.80 :   10de30: endbr64 // libc.so.6[10de30]
    0.00 :   10de34: cmpb   $0x0,0xcd7bd(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   10de3b: mov    %ecx,%r10d
    0.00 :   10de3e: je     10de60 <__send+0x30>
    0.00 :   10de40: xor    %r9d,%r9d
    0.00 :   10de43: xor    %r8d,%r8d
    0.00 :   10de46: mov    $0x2c,%eax
    0.00 :   10de4b: syscall
    0.00 :   10de4d: cmp    $0xfffffffffffff000,%rax
    0.00 :   10de53: ja     10dec0 <__send+0x90>
    0.00 :   10de55: ret
    0.00 :   10de56: cs nopw 0x0(%rax,%rax,1)
    0.00 :   10de60: push   %rbp
    0.00 :   10de61: sub    $0x20,%rsp
    0.00 :   10de65: mov    %rdx,0x10(%rsp)
    0.00 :   10de6a: mov    %rsi,0x8(%rsp)
    0.00 :   10de6f: mov    %edi,(%rsp)
    0.00 :   10de72: mov    %ecx,0x1c(%rsp)
    0.00 :   10de76: call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   10de7b: mov    0x1c(%rsp),%r10d
    0.00 :   10de80: mov    (%rsp),%edi
    0.00 :   10de83: xor    %r9d,%r9d
    0.00 :   10de86: mov    %eax,%ebp
    0.00 :   10de88: mov    0x10(%rsp),%rdx
    0.00 :   10de8d: mov    0x8(%rsp),%rsi
    0.00 :   10de92: xor    %r8d,%r8d
    0.00 :   10de95: mov    $0x2c,%eax
    0.00 :   10de9a: syscall
    0.00 :   10de9c: cmp    $0xfffffffffffff000,%rax
    0.00 :   10dea2: ja     10ded8 <__send+0xa8>
    0.00 :   10dea4: mov    %ebp,%edi
    0.00 :   10dea6: mov    %rax,(%rsp)
   35.20 :   10deaa: call   87640 <__GI___pthread_disable_asynccancel> // libc.so.6[10deaa]
    0.00 :   10deaf: mov    (%rsp),%rax
    0.00 :   10deb3: add    $0x20,%rsp
    0.00 :   10deb7: pop    %rbp
    0.00 :   10deb8: ret
    0.00 :   10deb9: nopl   0x0(%rax)
    0.00 :   10dec0: mov    0xc4f49(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dec7: neg    %eax
    0.00 :   10dec9: mov    %eax,%fs:(%rdx)
    0.00 :   10decc: mov    $0xffffffffffffffff,%rax
    0.00 :   10ded3: ret
    0.00 :   10ded4: nopl   0x0(%rax)
    0.00 :   10ded8: mov    0xc4f31(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dedf: neg    %eax
    0.00 :   10dee1: mov    %eax,%fs:(%rdx)
    0.00 :   10dee4: mov    $0xffffffffffffffff,%rax
    0.00 :   10deeb: jmp    10dea4 <__send+0x74>

Sorted summary for file /usr/lib64/libcrypto.so.3.0.8
----------------------------------------------

  100.00 libcrypto.so.3.0.8[d954c]
 Percent |	Source code & Disassembly of /usr/lib64/libcrypto.so.3.0.8 for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000d9520 <BN_uadd@@OPENSSL_3.0.0>:
    0.00 :   d9520:  endbr64
    0.00 :   d9524:  push   %r14
    0.00 :   d9526:  mov    %rsi,%r14
    0.00 :   d9529:  push   %r13
    0.00 :   d952b:  mov    %rdx,%r13
    0.00 :   d952e:  push   %r12
    0.00 :   d9530:  push   %rbp
    0.00 :   d9531:  mov    %rdi,%rbp
    0.00 :   d9534:  push   %rbx
    0.00 :   d9535:  mov    0x8(%rsi),%r12d
    0.00 :   d9539:  mov    0x8(%rdx),%ebx
    0.00 :   d953c:  cmp    %ebx,%r12d
    0.00 :   d953f:  jl     d954f <BN_uadd@@OPENSSL_3.0.0+0x2f>
    0.00 :   d9541:  mov    %ebx,%eax
    0.00 :   d9543:  mov    %rsi,%r13
    0.00 :   d9546:  mov    %r12d,%ebx
    0.00 :   d9549:  mov    %rdx,%r14
  100.00 :   d954c:  mov    %eax,%r12d // libcrypto.so.3.0.8[d954c]
    0.00 :   d954f:  lea    0x1(%rbx),%esi
    0.00 :   d9552:  cmp    0xc(%rbp),%esi
    0.00 :   d9555:  jg     d9600 <BN_uadd@@OPENSSL_3.0.0+0xe0>
    0.00 :   d955b:  mov    0x0(%r13),%r8
    0.00 :   d955f:  mov    0x0(%rbp),%rdi
    0.00 :   d9563:  mov    %ebx,0x8(%rbp)
    0.00 :   d9566:  test   %r12d,%r12d
    0.00 :   d9569:  jle    d9620 <BN_uadd@@OPENSSL_3.0.0+0x100>
    0.00 :   d956f:  mov    (%r14),%rsi
    0.00 :   d9572:  mov    %r12d,%ecx
    0.00 :   d9575:  xor    %eax,%eax
    0.00 :   d9577:  sub    %rdx,%rdx
    0.00 :   d957a:  jmp    d9580 <BN_uadd@@OPENSSL_3.0.0+0x60>
    0.00 :   d957c:  nopl   0x0(%rax)
    0.00 :   d9580:  mov    (%r8,%rax,8),%rdx
    0.00 :   d9584:  adc    (%rsi,%rax,8),%rdx
    0.00 :   d9588:  mov    %rdx,(%rdi,%rax,8)
    0.00 :   d958c:  lea    0x1(%rax),%rax
    0.00 :   d9590:  dec    %ecx
    0.00 :   d9592:  jne    d9580 <BN_uadd@@OPENSSL_3.0.0+0x60>
    0.00 :   d9594:  sbb    %rdx,%rdx
    0.00 :   d9597:  mov    0x8(%rbp),%r9d
    0.00 :   d959b:  and    $0x1,%edx
    0.00 :   d959e:  movslq %r12d,%rax
    0.00 :   d95a1:  shl    $0x3,%rax
    0.00 :   d95a5:  add    %rax,%rdi
    0.00 :   d95a8:  add    %rax,%r8
    0.00 :   d95ab:  sub    %r12d,%ebx
    0.00 :   d95ae:  je     d95d9 <BN_uadd@@OPENSSL_3.0.0+0xb9>
    0.00 :   d95b0:  mov    %ebx,%esi
    0.00 :   d95b2:  xor    %eax,%eax
    0.00 :   d95b4:  nopl   0x0(%rax)
    0.00 :   d95b8:  mov    %rdx,%rcx
    0.00 :   d95bb:  add    (%r8,%rax,8),%rcx
    0.00 :   d95bf:  mov    %rcx,(%rdi,%rax,8)
    0.00 :   d95c3:  sete   %cl
    0.00 :   d95c6:  add    $0x1,%rax
    0.00 :   d95ca:  movzbl %cl,%ecx
    0.00 :   d95cd:  and    %rcx,%rdx
    0.00 :   d95d0:  cmp    %rax,%rsi
    0.00 :   d95d3:  jne    d95b8 <BN_uadd@@OPENSSL_3.0.0+0x98>
    0.00 :   d95d5:  lea    (%rdi,%rsi,8),%rdi
    0.00 :   d95d9:  add    %edx,%r9d
    0.00 :   d95dc:  mov    %rdx,(%rdi)
    0.00 :   d95df:  mov    $0x1,%eax
    0.00 :   d95e4:  mov    %r9d,0x8(%rbp)
    0.00 :   d95e8:  movl   $0x0,0x10(%rbp)
    0.00 :   d95ef:  pop    %rbx
    0.00 :   d95f0:  pop    %rbp
    0.00 :   d95f1:  pop    %r12
    0.00 :   d95f3:  pop    %r13
    0.00 :   d95f5:  pop    %r14
    0.00 :   d95f7:  ret
    0.00 :   d95f8:  nopl   0x0(%rax,%rax,1)
    0.00 :   d9600:  mov    %rbp,%rdi
    0.00 :   d9603:  call   e47e0 <BN_secure_new@@OPENSSL_3.0.0+0x20>
    0.00 :   d9608:  mov    %rax,%rdx
    0.00 :   d960b:  xor    %eax,%eax
    0.00 :   d960d:  test   %rdx,%rdx
    0.00 :   d9610:  jne    d955b <BN_uadd@@OPENSSL_3.0.0+0x3b>
    0.00 :   d9616:  pop    %rbx
    0.00 :   d9617:  pop    %rbp
    0.00 :   d9618:  pop    %r12
    0.00 :   d961a:  pop    %r13
    0.00 :   d961c:  pop    %r14
    0.00 :   d961e:  ret
    0.00 :   d961f:  nop
    0.00 :   d9620:  mov    %ebx,%r9d
    0.00 :   d9623:  xor    %edx,%edx
    0.00 :   d9625:  jmp    d959e <BN_uadd@@OPENSSL_3.0.0+0x7e>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   68.95 [nf_nat][3257]
   31.05 [nf_nat][3302]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (3 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003250 <nf_nat_ipv4_local_in>:
         : 6    nf_nat_ipv4_local_in():
    0.00 :   3250:   call   3255 <nf_nat_ipv4_local_in+0x5>
    0.00 :   3255:   push   %r12
   68.95 :   3257:   push   %rbp // [nf_nat][3257]
    0.00 :   3258:   push   %rbx
    0.00 :   3259:   mov    %rsi,%rbx
    0.00 :   325c:   movzwl 0xb8(%rsi),%eax
    0.00 :   3263:   mov    0x18(%rsi),%rbp
    0.00 :   3267:   add    0xc8(%rsi),%rax
    0.00 :   326e:   mov    0x68(%rsi),%rsi
    0.00 :   3272:   mov    0xc(%rax),%r12d
    0.00 :   3276:   cmp    $0x7,%rsi
    0.00 :   327a:   jbe    3326 <nf_nat_ipv4_local_in+0xd6>
    0.00 :   3280:   mov    %esi,%r8d
    0.00 :   3283:   mov    $0x12,%ecx
    0.00 :   3288:   and    $0x7,%r8d
    0.00 :   328c:   bt     %r8,%rcx
    0.00 :   3290:   jae    3298 <nf_nat_ipv4_local_in+0x48>
    0.00 :   3292:   cmpb   $0x1,0x9(%rax)
    0.00 :   3296:   je     3310 <nf_nat_ipv4_local_in+0xc0>
    0.00 :   3298:   mov    %rbx,%rsi
    0.00 :   329b:   call   32a0 <nf_nat_ipv4_local_in+0x50>
    0.00 :   32a0:   cmp    $0x1,%eax
    0.00 :   32a3:   sete   %dl
    0.00 :   32a6:   test   %rbp,%rbp
    0.00 :   32a9:   je     3307 <nf_nat_ipv4_local_in+0xb7>
    0.00 :   32ab:   test   %dl,%dl
    0.00 :   32ad:   je     3307 <nf_nat_ipv4_local_in+0xb7>
    0.00 :   32af:   movzwl 0xb8(%rbx),%eax
    0.00 :   32b6:   mov    0xc8(%rbx),%rdx
    0.00 :   32bd:   cmp    %r12d,0xc(%rdx,%rax,1)
    0.00 :   32c2:   je     3302 <nf_nat_ipv4_local_in+0xb2>
    0.00 :   32c4:   movzbl 0x12(%rbp),%eax
    0.00 :   32c8:   cmp    $0x6,%al
    0.00 :   32ca:   je     3344 <nf_nat_ipv4_local_in+0xf4>
    0.00 :   32cc:   cmp    $0xc,%al
    0.00 :   32ce:   jne    3335 <nf_nat_ipv4_local_in+0xe5>
    0.00 :   32d0:   movzbl 0xe9(%rbp),%eax
    0.00 :   32d7:   shr    $0x5,%al
    0.00 :   32da:   and    $0x1,%eax
    0.00 :   32dd:   test   %al,%al
    0.00 :   32df:   jne    3302 <nf_nat_ipv4_local_in+0xb2>
    0.00 :   32e1:   mov    0x60(%rbx),%rax
    0.00 :   32e5:   test   %rax,%rax
    0.00 :   32e8:   je     3354 <nf_nat_ipv4_local_in+0x104>
    0.00 :   32ea:   mov    %rbx,%rdi
    0.00 :   32ed:   call   32f2 <nf_nat_ipv4_local_in+0xa2>
    0.00 :   32f2:   movq   $0x0,0x60(%rbx)
    0.00 :   32fa:   movq   $0x0,0x18(%rbx)
   31.05 :   3302:   mov    $0x1,%eax // [nf_nat][3302]
    0.00 :   3307:   pop    %rbx
    0.00 :   3308:   pop    %rbp
    0.00 :   3309:   pop    %r12
    0.00 :   330b:   jmp    3310 <nf_nat_ipv4_local_in+0xc0>
    0.00 :   3310:   movzbl (%rdx),%ecx
    0.00 :   3313:   and    $0xfffffffffffffff8,%rsi
    0.00 :   3317:   mov    %r8d,%edx
    0.00 :   331a:   mov    %rbx,%rdi
    0.00 :   331d:   call   3322 <nf_nat_ipv4_local_in+0xd2>
    0.00 :   3322:   test   %eax,%eax
    0.00 :   3324:   je     3350 <nf_nat_ipv4_local_in+0x100>
    0.00 :   3326:   mov    $0x1,%edx
    0.00 :   332b:   mov    $0x1,%eax
    0.00 :   3330:   jmp    32a6 <nf_nat_ipv4_local_in+0x56>
    0.00 :   3335:   movzbl 0x328(%rbp),%eax
    0.00 :   333c:   shr    $0x5,%al
    0.00 :   333f:   and    $0x1,%eax
    0.00 :   3342:   jmp    32dd <nf_nat_ipv4_local_in+0x8d>
    0.00 :   3344:   movzbl 0x90(%rbp),%eax
    0.00 :   334b:   and    $0x1,%eax
    0.00 :   334e:   jmp    32dd <nf_nat_ipv4_local_in+0x8d>
    0.00 :   3350:   xor    %eax,%eax
    0.00 :   3352:   jmp    3307 <nf_nat_ipv4_local_in+0xb7>
    0.00 :   3354:   cmpq   $0x0,0x18(%rbx)
    0.00 :   3359:   je     3302 <nf_nat_ipv4_local_in+0xb2>
    0.00 :   335b:   ud2

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   76.50 [nf_tables][19bcc]
   23.50 [nf_tables][19bc0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (4 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000019bc0 <nft_set_do_lookup>:
         : 6     nft_set_do_lookup():
   23.50 :   19bc0:  call   19bc5 <nft_set_do_lookup+0x5> // [nf_tables][19bc0]
    0.00 :   19bc5:  mov    0xc0(%rsi),%rax
   76.50 :   19bcc:  cmp    $0x0,%rax // [nf_tables][19bcc]
    0.00 :   19bd2:  je     19c14 <nft_set_do_lookup+0x54>
    0.00 :   19bd4:  cmp    $0x0,%rax
    0.00 :   19bda:  je     19c19 <nft_set_do_lookup+0x59>
    0.00 :   19bdc:  cmp    $0x0,%rax
    0.00 :   19be2:  je     19c1e <nft_set_do_lookup+0x5e>
    0.00 :   19be4:  cmp    $0x0,%rax
    0.00 :   19bea:  je     19c23 <nft_set_do_lookup+0x63>
    0.00 :   19bec:  cmp    $0x0,%rax
    0.00 :   19bf2:  je     19c28 <nft_set_do_lookup+0x68>
    0.00 :   19bf4:  cmp    $0x0,%rax
    0.00 :   19bfa:  je     19c2d <nft_set_do_lookup+0x6d>
    0.00 :   19bfc:  cmp    $0x0,%rax
    0.00 :   19c02:  je     19c0f <nft_set_do_lookup+0x4f>
    0.00 :   19c04:  ud2
    0.00 :   19c06:  mov    (%rax),%rax
    0.00 :   19c09:  jmp    19c0e <nft_set_do_lookup+0x4e>
    0.00 :   19c0e:  int3
    0.00 :   19c0f:  jmp    19c14 <nft_set_do_lookup+0x54>
    0.00 :   19c14:  jmp    19c19 <nft_set_do_lookup+0x59>
    0.00 :   19c19:  jmp    19c1e <nft_set_do_lookup+0x5e>
    0.00 :   19c1e:  jmp    19c23 <nft_set_do_lookup+0x63>
    0.00 :   19c23:  jmp    19c28 <nft_set_do_lookup+0x68>
    0.00 :   19c28:  jmp    19c2d <nft_set_do_lookup+0x6d>
    0.00 :   19c2d:  jmp    19c32 <nft_set_do_lookup+0x72>

Sorted summary for file /usr/lib64/libcrypto.so.3.0.8
----------------------------------------------

  100.00 libcrypto.so.3.0.8[1b0470]
 Percent |	Source code & Disassembly of /usr/lib64/libcrypto.so.3.0.8 for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000001b0440 <OPENSSL_strnlen@@OPENSSL_3.0.0>:
    0.00 :   1b0440: endbr64
    0.00 :   1b0444: lea    (%rdi,%rsi,1),%rdx
    0.00 :   1b0448: mov    %rdi,%rax
    0.00 :   1b044b: test   %rsi,%rsi
    0.00 :   1b044e: jne    1b0461 <OPENSSL_strnlen@@OPENSSL_3.0.0+0x21>
    0.00 :   1b0450: jmp    1b0477 <OPENSSL_strnlen@@OPENSSL_3.0.0+0x37>
    0.00 :   1b0452: nopw   0x0(%rax,%rax,1)
    0.00 :   1b0458: add    $0x1,%rax
    0.00 :   1b045c: cmp    %rax,%rdx
    0.00 :   1b045f: je     1b0470 <OPENSSL_strnlen@@OPENSSL_3.0.0+0x30>
    0.00 :   1b0461: cmpb   $0x0,(%rax)
    0.00 :   1b0464: jne    1b0458 <OPENSSL_strnlen@@OPENSSL_3.0.0+0x18>
    0.00 :   1b0466: sub    %rdi,%rax
    0.00 :   1b0469: ret
    0.00 :   1b046a: nopw   0x0(%rax,%rax,1)
  100.00 :   1b0470: mov    %rdx,%rax // libcrypto.so.3.0.8[1b0470]
    0.00 :   1b0473: sub    %rdi,%rax
    0.00 :   1b0476: ret
    0.00 :   1b0477: xor    %eax,%eax
    0.00 :   1b0479: ret

Sorted summary for file /usr/lib64/libcrypto.so.3.0.8
----------------------------------------------

  100.00 libcrypto.so.3.0.8[1aef4e]
 Percent |	Source code & Disassembly of /usr/lib64/libcrypto.so.3.0.8 for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000001aef30 <OPENSSL_strcasecmp@@OPENSSL_3.0.1>:
    0.00 :   1aef30: endbr64
    0.00 :   1aef34: mov    %rdi,%r10
    0.00 :   1aef37: xor    %r8d,%r8d
    0.00 :   1aef3a: jmp    1aef49 <OPENSSL_strcasecmp@@OPENSSL_3.0.1+0x19>
    0.00 :   1aef3c: nopl   0x0(%rax)
    0.00 :   1aef40: add    $0x1,%r8
    0.00 :   1aef44: test   %dil,%dil
    0.00 :   1aef47: je     1aef7d <OPENSSL_strcasecmp@@OPENSSL_3.0.1+0x4d>
    0.00 :   1aef49: movsbl (%r10,%r8,1),%edx
  100.00 :   1aef4e: movsbl (%rsi,%r8,1),%ecx // libcrypto.so.3.0.8[1aef4e]
    0.00 :   1aef53: mov    %edx,%edi
    0.00 :   1aef55: sub    $0x41,%edx
    0.00 :   1aef58: lea    -0x41(%rcx),%r9d
    0.00 :   1aef5c: mov    %edi,%eax
    0.00 :   1aef5e: xor    $0x20,%eax
    0.00 :   1aef61: cmp    $0x1a,%edx
    0.00 :   1aef64: mov    %ecx,%edx
    0.00 :   1aef66: cmovae %edi,%eax
    0.00 :   1aef69: xor    $0x20,%edx
    0.00 :   1aef6c: cmp    $0x19,%r9d
    0.00 :   1aef70: movsbl %dl,%edx
    0.00 :   1aef73: cmovbe %edx,%ecx
    0.00 :   1aef76: movsbl %al,%eax
    0.00 :   1aef79: sub    %ecx,%eax
    0.00 :   1aef7b: je     1aef40 <OPENSSL_strcasecmp@@OPENSSL_3.0.1+0x10>
    0.00 :   1aef7d: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   37.94 [nf_conntrack][cf2]
   32.22 [nf_conntrack][cdb]
   29.85 [nf_conntrack][cfe]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (3 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000cc0 <__nf_ct_refresh_acct>:
         : 6   __nf_ct_refresh_acct():
    0.00 :   cc0:    call   cc5 <__nf_ct_refresh_acct+0x5>
    0.00 :   cc5:    mov    0x80(%rdi),%rax
    0.00 :   ccc:    test   $0x4,%ah
    0.00 :   ccf:    je     cdb <__nf_ct_refresh_acct+0x1b>
    0.00 :   cd1:    test   %r8b,%r8b
    0.00 :   cd4:    jne    cfe <__nf_ct_refresh_acct+0x3e>
    0.00 :   cd6:    jmp    cdb <__nf_ct_refresh_acct+0x1b>
   32.22 :   cdb:    mov    0x80(%rdi),%rax // [nf_conntrack][cdb]
    0.00 :   ce2:    test   $0x8,%al
    0.00 :   ce4:    je     cef <__nf_ct_refresh_acct+0x2f>
    0.00 :   ce6:    mov    0x0(%rip),%rax        # ced <__nf_ct_refresh_acct+0x2d>
    0.00 :   ced:    add    %eax,%ecx
    0.00 :   cef:    mov    0x8(%rdi),%eax
   37.94 :   cf2:    cmp    %eax,%ecx // [nf_conntrack][cf2]
    0.00 :   cf4:    je     cd1 <__nf_ct_refresh_acct+0x11>
    0.00 :   cf6:    mov    %ecx,0x8(%rdi)
    0.00 :   cf9:    test   %r8b,%r8b
    0.00 :   cfc:    je     cd6 <__nf_ct_refresh_acct+0x16>
   29.85 :   cfe:    cmp    $0x2,%esi // [nf_conntrack][cfe]
    0.00 :   d01:    mov    0x70(%rdx),%ecx
    0.00 :   d04:    mov    $0x1,%edx
    0.00 :   d09:    seta   %sil
    0.00 :   d0d:    movzbl %sil,%esi
    0.00 :   d11:    jmp    c40 <nf_ct_acct_add>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   38.39 [nf_conntrack][7e0]
   38.39 [nf_conntrack][7de]
   31.96 [nf_conntrack][7a1]
   31.96 [nf_conntrack][7a0]
   29.65 [nf_conntrack][7b2]
   29.65 [nf_conntrack][7ae]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (3 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000006b0 <nf_ct_get_tuple>:
         : 6   nf_ct_get_tuple():
    0.00 :   6b0:    call   6b5 <nf_ct_get_tuple+0x5>
    0.00 :   6b5:    push   %r13
    0.00 :   6b7:    mov    %ecx,%r13d
    0.00 :   6ba:    push   %r12
    0.00 :   6bc:    mov    %edx,%r12d
    0.00 :   6bf:    push   %rbp
    0.00 :   6c0:    push   %rbx
    0.00 :   6c1:    sub    $0x40,%rsp
    0.00 :   6c5:    movq   $0x0,0x20(%rsp)
    0.00 :   6ce:    mov    0x68(%rsp),%rbx
    0.00 :   6d3:    movq   $0x0,0x28(%rsp)
    0.00 :   6dc:    movq   $0x0,0x10(%rbx)
    0.00 :   6e4:    movq   $0x0,0x30(%rsp)
    0.00 :   6ed:    movq   $0x0,0x38(%rsp)
    0.00 :   6f6:    movq   $0x0,(%rbx)
    0.00 :   6fd:    movq   $0x0,0x8(%rbx)
    0.00 :   705:    movq   $0x0,0x18(%rbx)
    0.00 :   70d:    movq   $0x0,0x20(%rbx)
    0.00 :   715:    mov    %cx,0x12(%rbx)
    0.00 :   719:    cmp    $0x2,%cx
    0.00 :   71d:    je     829 <nf_ct_get_tuple+0x179>
    0.00 :   723:    cmp    $0xa,%cx
    0.00 :   727:    jne    78d <nf_ct_get_tuple+0xdd>
    0.00 :   729:    add    $0x8,%esi
    0.00 :   72c:    mov    $0x20,%ecx
    0.00 :   731:    mov    0x70(%rdi),%eax
    0.00 :   734:    sub    0x74(%rdi),%eax
    0.00 :   737:    sub    %esi,%eax
    0.00 :   739:    mov    0xd0(%rdi),%rdx
    0.00 :   740:    cmp    %ecx,%eax
    0.00 :   742:    jl     8cf <nf_ct_get_tuple+0x21f>
    0.00 :   748:    movslq %esi,%rsi
    0.00 :   74b:    add    %rsi,%rdx
    0.00 :   74e:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   754:    cmp    $0x2,%r13w
    0.00 :   759:    je     885 <nf_ct_get_tuple+0x1d5>
    0.00 :   75f:    cmp    $0xa,%r13w
    0.00 :   764:    je     836 <nf_ct_get_tuple+0x186>
    0.00 :   76a:    mov    %r8b,0x26(%rbx)
    0.00 :   76e:    movb   $0x0,0x27(%rbx)
    0.00 :   772:    cmp    $0x2f,%r8b
    0.00 :   776:    je     8a1 <nf_ct_get_tuple+0x1f1>
    0.00 :   77c:    ja     7ea <nf_ct_get_tuple+0x13a>
    0.00 :   77e:    cmp    $0x1,%r8b
    0.00 :   782:    je     868 <nf_ct_get_tuple+0x1b8>
    0.00 :   788:    test   %r8b,%r8b
    0.00 :   78b:    jne    7a1 <nf_ct_get_tuple+0xf1>
    0.00 :   78d:    add    $0x40,%rsp
    0.00 :   791:    mov    $0x1,%eax
    0.00 :   796:    pop    %rbx
    0.00 :   797:    pop    %rbp
    0.00 :   798:    pop    %r12
    0.00 :   79a:    pop    %r13
    0.00 :   79c:    jmp    7a1 <nf_ct_get_tuple+0xf1>
   31.96 :   7a1:    lea    -0x11(%r8),%eax // [nf_conntrack][7a1]
    0.00 :   7a5:    test   $0xef,%al
    0.00 :   7a7:    je     7af <nf_ct_get_tuple+0xff>
    0.00 :   7a9:    cmp    $0x6,%r8b
    0.00 :   7ad:    jne    78d <nf_ct_get_tuple+0xdd>
    0.00 :   7af:    mov    0x70(%rdi),%eax
   29.65 :   7b2:    sub    0x74(%rdi),%eax // [nf_conntrack][7b2]
    0.00 :   7b5:    movl   $0x0,0x1c(%rsp)
    0.00 :   7bd:    sub    %r12d,%eax
    0.00 :   7c0:    mov    0xd0(%rdi),%rdx
    0.00 :   7c7:    cmp    $0x3,%eax
    0.00 :   7ca:    jle    90a <nf_ct_get_tuple+0x25a>
    0.00 :   7d0:    add    %r12,%rdx
    0.00 :   7d3:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   7d9:    movzwl (%rdx),%eax
    0.00 :   7dc:    mov    %ax,0x10(%rbx)
   38.39 :   7e0:    movzwl 0x2(%rdx),%eax // [nf_conntrack][7e0]
    0.00 :   7e4:    mov    %ax,0x24(%rbx)
    0.00 :   7e8:    jmp    78d <nf_ct_get_tuple+0xdd>
    0.00 :   7ea:    cmp    $0x3a,%r8b
    0.00 :   7ee:    jne    80d <nf_ct_get_tuple+0x15d>
    0.00 :   7f0:    mov    %rbx,%rcx
    0.00 :   7f3:    mov    %r12d,%esi
    0.00 :   7f6:    mov    %r9,%rdx
    0.00 :   7f9:    call   7fe <nf_ct_get_tuple+0x14e>
    0.00 :   7fe:    add    $0x40,%rsp
    0.00 :   802:    pop    %rbx
    0.00 :   803:    pop    %rbp
    0.00 :   804:    pop    %r12
    0.00 :   806:    pop    %r13
    0.00 :   808:    jmp    80d <nf_ct_get_tuple+0x15d>
    0.00 :   80d:    cmp    $0x39,%r8b
    0.00 :   811:    jbe    78d <nf_ct_get_tuple+0xdd>
    0.00 :   817:    lea    0x7c(%r8),%ebp
    0.00 :   81b:    and    $0xfb,%ebp
    0.00 :   821:    jne    78d <nf_ct_get_tuple+0xdd>
    0.00 :   827:    jmp    7af <nf_ct_get_tuple+0xff>
    0.00 :   829:    add    $0xc,%esi
    0.00 :   82c:    mov    $0x8,%ecx
    0.00 :   831:    jmp    731 <nf_ct_get_tuple+0x81>
    0.00 :   836:    mov    (%rdx),%rax
    0.00 :   839:    mov    %rax,(%rbx)
    0.00 :   83c:    mov    0x8(%rdx),%rax
    0.00 :   840:    mov    %rax,0x8(%rbx)
    0.00 :   844:    mov    0x10(%rdx),%rax
    0.00 :   848:    mov    %rax,0x14(%rbx)
    0.00 :   84c:    mov    0x18(%rdx),%rax
    0.00 :   850:    mov    %r8b,0x26(%rbx)
    0.00 :   854:    mov    %rax,0x1c(%rbx)
    0.00 :   858:    movb   $0x0,0x27(%rbx)
    0.00 :   85c:    cmp    $0x2f,%r8b
    0.00 :   860:    jne    77c <nf_ct_get_tuple+0xcc>
    0.00 :   866:    jmp    8a1 <nf_ct_get_tuple+0x1f1>
    0.00 :   868:    mov    %rbx,%rcx
    0.00 :   86b:    mov    %r12d,%esi
    0.00 :   86e:    mov    %r9,%rdx
    0.00 :   871:    call   876 <nf_ct_get_tuple+0x1c6>
    0.00 :   876:    add    $0x40,%rsp
    0.00 :   87a:    pop    %rbx
    0.00 :   87b:    pop    %rbp
    0.00 :   87c:    pop    %r12
    0.00 :   87e:    pop    %r13
    0.00 :   880:    jmp    885 <nf_ct_get_tuple+0x1d5>
    0.00 :   885:    mov    (%rdx),%eax
    0.00 :   887:    mov    %eax,(%rbx)
    0.00 :   889:    mov    0x4(%rdx),%eax
    0.00 :   88c:    mov    %r8b,0x26(%rbx)
    0.00 :   890:    mov    %eax,0x14(%rbx)
    0.00 :   893:    movb   $0x0,0x27(%rbx)
    0.00 :   897:    cmp    $0x2f,%r8b
    0.00 :   89b:    jne    77c <nf_ct_get_tuple+0xcc>
    0.00 :   8a1:    mov    %rbx,%rcx
    0.00 :   8a4:    mov    %r12d,%esi
    0.00 :   8a7:    mov    %r9,%rdx
    0.00 :   8aa:    call   8af <nf_ct_get_tuple+0x1ff>
    0.00 :   8af:    add    $0x40,%rsp
    0.00 :   8b3:    pop    %rbx
    0.00 :   8b4:    pop    %rbp
    0.00 :   8b5:    pop    %r12
    0.00 :   8b7:    pop    %r13
    0.00 :   8b9:    jmp    8be <nf_ct_get_tuple+0x20e>
    0.00 :   8be:    add    $0x40,%rsp
    0.00 :   8c2:    xor    %eax,%eax
    0.00 :   8c4:    pop    %rbx
    0.00 :   8c5:    pop    %rbp
    0.00 :   8c6:    pop    %r12
    0.00 :   8c8:    pop    %r13
    0.00 :   8ca:    jmp    8cf <nf_ct_get_tuple+0x21f>
    0.00 :   8cf:    mov    %r9,0x8(%rsp)
    0.00 :   8d4:    mov    %r8d,0x4(%rsp)
    0.00 :   8d9:    test   %rdi,%rdi
    0.00 :   8dc:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   8de:    lea    0x20(%rsp),%rdx
    0.00 :   8e3:    mov    %rdi,0x10(%rsp)
    0.00 :   8e8:    call   8ed <nf_ct_get_tuple+0x23d>
    0.00 :   8ed:    test   %eax,%eax
    0.00 :   8ef:    js     8be <nf_ct_get_tuple+0x20e>
    0.00 :   8f1:    mov    0x8(%rsp),%r9
    0.00 :   8f6:    mov    0x4(%rsp),%r8d
    0.00 :   8fb:    lea    0x20(%rsp),%rdx
    0.00 :   900:    mov    0x10(%rsp),%rdi
    0.00 :   905:    jmp    754 <nf_ct_get_tuple+0xa4>
    0.00 :   90a:    test   %rdi,%rdi
    0.00 :   90d:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   90f:    mov    $0x4,%ecx
    0.00 :   914:    lea    0x1c(%rsp),%rdx
    0.00 :   919:    mov    %r12d,%esi
    0.00 :   91c:    call   921 <nf_ct_get_tuple+0x271>
    0.00 :   921:    test   %eax,%eax
    0.00 :   923:    js     8be <nf_ct_get_tuple+0x20e>
    0.00 :   925:    lea    0x1c(%rsp),%rdx
    0.00 :   92a:    jmp    7d9 <nf_ct_get_tuple+0x129>
         :
         : 174 Disassembly of section .text.unlikely:
         :
         : 176 00000000000006b0 <nf_conntrack_tcp_packet.cold+0x66>:
         : 177 nf_conntrack_tcp_packet.cold():
    0.00 :   6b0:    je     6d6 <nf_conntrack_tcp_packet.cold+0x8c>
    0.00 :   6b2:    adc    %cl,-0x39(%rcx)
    0.00 :   6b5:    rolb   $0x0,(%rax)
    0.00 :   6b8:    add    %al,(%rax)
    0.00 :   6ba:    mov    $0x6,%edx
    0.00 :   6bf:    mov    %r13,%rdi
    0.00 :   6c2:    mov    $0x0,%rcx
    0.00 :   6c9:    call   6ce <nf_conntrack_tcp_packet.cold+0x84>
    0.00 :   6ce:    jmp    6d3 <nf_conntrack_tcp_packet.cold+0x89>
    0.00 :   6d3:    mov    0x80(%rbx),%rax
    0.00 :   6da:    test   $0x4,%ah
    0.00 :   6dd:    jne    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   6df:    mov    0x1c(%rsp),%eax
    0.00 :   6e3:    sub    $0x2,%eax
    0.00 :   6e6:    and    $0xfffffffd,%eax
    0.00 :   6e9:    jne    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   6eb:    movzbl 0xe1(%rbx),%eax
    0.00 :   6f2:    cmp    %eax,0x24(%rsp)
    0.00 :   6f6:    je     772 <nf_conntrack_tcp_packet.cold+0x128>
    0.00 :   6f8:    movzbl 0xe3(%rbx),%edx
    0.00 :   6ff:    lea    -0x2(%rdx),%eax
    0.00 :   702:    test   $0xfd,%al
    0.00 :   704:    jne    772 <nf_conntrack_tcp_packet.cold+0x128>
    0.00 :   706:    mov    0x8(%rbx),%eax
    0.00 :   709:    mov    0x0(%rip),%rcx        # 710 <nf_conntrack_tcp_packet.cold+0xc6>
    0.00 :   710:    sub    %ecx,%eax
    0.00 :   712:    mov    $0x0,%ecx
    0.00 :   717:    cmovns %eax,%ecx
    0.00 :   71a:    cmp    $0x1d4bf,%eax
    0.00 :   71f:    jle    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   725:    mov    0x88(%rbx),%rax
    0.00 :   72c:    mov    0xb88(%rax),%ebp
    0.00 :   732:    cmp    %ecx,%ebp
    0.00 :   734:    jae    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   73a:    push   %rbp
    0.00 :   73b:    mov    $0x0,%rcx
    0.00 :   742:    mov    %rbx,%rsi
    0.00 :   745:    mov    %r13,%rdi
    0.00 :   748:    push   %rdx
    0.00 :   749:    mov    0x34(%rsp),%r9d
    0.00 :   74e:    mov    0x2c(%rsp),%r8d
    0.00 :   753:    mov    0x20(%rsp),%rdx
    0.00 :   758:    call   75d <nf_conntrack_tcp_packet.cold+0x113>
    0.00 :   75d:    mov    0x0(%rip),%rax        # 764 <nf_conntrack_tcp_packet.cold+0x11a>
    0.00 :   764:    add    %eax,%ebp
    0.00 :   766:    mov    %ebp,0x8(%rbx)
    0.00 :   769:    pop    %r9
    0.00 :   76b:    pop    %r10
    0.00 :   76d:    jmp    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   772:    movzbl 0x1c(%rsp),%eax
    0.00 :   777:    mov    %al,0xe3(%rbx)
    0.00 :   77d:    movzbl 0x5d(%rsp),%eax
    0.00 :   782:    mov    %al,0xe1(%rbx)
    0.00 :   788:    jmp    69f <nf_conntrack_tcp_packet.cold+0x55>
         :
         : 233 000000000000078d <nf_conntrack_udp_packet.cold>:
         : 234 nf_conntrack_udp_packet.cold():
    0.00 :   78d:    mov    $0x0,%r8
    0.00 :   794:    mov    $0x0,%rcx
    0.00 :   79b:    mov    $0x11,%edx
   31.96 :   7a0:    mov    %r13,%rsi // [nf_conntrack][7a0]
    0.00 :   7a3:    mov    %rbp,%rdi
    0.00 :   7a6:    call   7ab <nf_conntrack_udp_packet.cold+0x1e>
    0.00 :   7ab:    or     $0xffffffff,%eax
   29.65 :   7ae:    jmp    7b3 <nf_conntrack_udp_packet.cold+0x26> // [nf_conntrack][7ae]
    0.00 :   7b3:    mov    $0x0,%r8
    0.00 :   7ba:    jmp    794 <nf_conntrack_udp_packet.cold+0x7>
    0.00 :   7bc:    mov    $0x0,%r8
    0.00 :   7c3:    jmp    794 <nf_conntrack_udp_packet.cold+0x7>
         :
         : 248 00000000000007c5 <nf_conntrack_udplite_packet.cold>:
         : 249 nf_conntrack_udplite_packet.cold():
    0.00 :   7c5:    mov    $0x0,%r8
    0.00 :   7cc:    mov    $0x0,%rcx
    0.00 :   7d3:    mov    $0x88,%edx
    0.00 :   7d8:    mov    %r12,%rsi
    0.00 :   7db:    mov    %rbp,%rdi
   38.39 :   7de:    call   7e3 <nf_conntrack_udplite_packet.cold+0x1e> // [nf_conntrack][7de]
    0.00 :   7e3:    or     $0xffffffff,%eax
    0.00 :   7e6:    jmp    7eb <nf_conntrack_udplite_packet.cold+0x26>
    0.00 :   7eb:    mov    $0x0,%r8
    0.00 :   7f2:    jmp    7cc <nf_conntrack_udplite_packet.cold+0x7>
    0.00 :   7f4:    mov    $0x0,%r8
    0.00 :   7fb:    jmp    7cc <nf_conntrack_udplite_packet.cold+0x7>
    0.00 :   7fd:    mov    $0x0,%r8
    0.00 :   804:    jmp    7cc <nf_conntrack_udplite_packet.cold+0x7>
         :
         : 265 0000000000000806 <nf_conntrack_inet_error.cold>:
         : 266 nf_conntrack_inet_error.cold():
    0.00 :   806:    movzbl %r13b,%edx
    0.00 :   80a:    mov    %r12,%r8
    0.00 :   80d:    mov    %rbp,%rsi
    0.00 :   810:    mov    %rbx,%rdi
    0.00 :   813:    mov    $0x0,%rcx
    0.00 :   81a:    call   81f <nf_conntrack_inet_error.cold+0x19>
    0.00 :   81f:    jmp    824 <nf_conntrack_inet_error.cold+0x1e>
    0.00 :   824:    movzbl %r13b,%edx
    0.00 :   828:    mov    %r12,%r8
    0.00 :   82b:    mov    %rbp,%rsi
    0.00 :   82e:    mov    %rbx,%rdi
    0.00 :   831:    mov    $0x0,%rcx
    0.00 :   838:    call   83d <nf_conntrack_inet_error.cold+0x37>
    0.00 :   83d:    jmp    842 <nf_conntrack_icmpv4_error.cold>
         :
         : 282 0000000000000842 <nf_conntrack_icmpv4_error.cold>:
         : 283 nf_conntrack_icmpv4_error.cold():
    0.00 :   842:    mov    $0x0,%r8
    0.00 :   849:    mov    $0x0,%rcx
    0.00 :   850:    mov    $0x1,%edx
    0.00 :   855:    mov    %r13,%rsi
    0.00 :   858:    mov    %rbx,%rdi
    0.00 :   85b:    call   860 <nf_conntrack_icmpv4_error.cold+0x1e>
    0.00 :   860:    or     $0xffffffff,%eax
    0.00 :   863:    jmp    868 <nf_conntrack_icmpv4_error.cold+0x26>
    0.00 :   868:    mov    $0x0,%r8
    0.00 :   86f:    jmp    849 <nf_conntrack_icmpv4_error.cold+0x7>
    0.00 :   871:    mov    $0x0,%r8
    0.00 :   878:    jmp    849 <nf_conntrack_icmpv4_error.cold+0x7>
         :
         : 297 000000000000087a <icmpv6_error_log>:
         : 298 icmpv6_error_log():
    0.00 :   87a:    call   87f <icmpv6_error_log+0x5>
    0.00 :   87f:    mov    %rdx,%r8
    0.00 :   882:    mov    $0x0,%rcx
    0.00 :   889:    mov    $0x3a,%edx
    0.00 :   88e:    jmp    893 <nf_conntrack_icmpv6_redirect.cold>
         :
         : 305 0000000000000893 <nf_conntrack_icmpv6_redirect.cold>:
         : 306 nf_conntrack_icmpv6_redirect.cold():
    0.00 :   893:    mov    $0x0,%rdx
    0.00 :   89a:    mov    %r13,%rsi
    0.00 :   89d:    mov    %rbx,%rdi
    0.00 :   8a0:    call   87a <icmpv6_error_log>
    0.00 :   8a5:    or     $0xffffffff,%eax
    0.00 :   8a8:    jmp    8ad <nf_conntrack_icmpv6_redirect.cold+0x1a>
    0.00 :   8ad:    mov    $0x0,%rdx
    0.00 :   8b4:    mov    %r13,%rsi
    0.00 :   8b7:    mov    %rbx,%rdi
    0.00 :   8ba:    call   87a <icmpv6_error_log>
    0.00 :   8bf:    jmp    8a5 <nf_conntrack_icmpv6_redirect.cold+0x12>
    0.00 :   8c1:    mov    $0x0,%rdx
    0.00 :   8c8:    mov    %r13,%rsi
    0.00 :   8cb:    mov    %rbx,%rdi
    0.00 :   8ce:    call   87a <icmpv6_error_log>
    0.00 :   8d3:    jmp    8a5 <nf_conntrack_icmpv6_redirect.cold+0x12>
         :
         : 324 00000000000008d5 <nf_conntrack_icmpv6_error.cold>:
         : 325 nf_conntrack_icmpv6_error.cold():
    0.00 :   8d5:    mov    $0x0,%rdx
    0.00 :   8dc:    mov    %r13,%rsi
    0.00 :   8df:    mov    %rbx,%rdi
    0.00 :   8e2:    call   87a <icmpv6_error_log>
    0.00 :   8e7:    or     $0xffffffff,%eax
    0.00 :   8ea:    jmp    8ef <nf_conntrack_icmpv6_error.cold+0x1a>
    0.00 :   8ef:    mov    $0x0,%rdx
    0.00 :   8f6:    mov    %r13,%rsi
    0.00 :   8f9:    mov    %rbx,%rdi
    0.00 :   8fc:    call   87a <icmpv6_error_log>
    0.00 :   901:    jmp    8e7 <nf_conntrack_icmpv6_error.cold+0x12>
         :
         : 338 0000000000000903 <dccp_new.cold>:
         : 339 dccp_new.cold():
    0.00 :   903:    mov    $0x0,%r8
    0.00 :   90a:    mov    %rax,%rsi
    0.00 :   90d:    mov    $0x0,%rcx
    0.00 :   914:    call   919 <dccp_new.cold+0x16>
    0.00 :   919:    xor    %eax,%eax
    0.00 :   91b:    jmp    920 <dccp_new.cold+0x1d>
    0.00 :   920:    mov    $0x0,%r8
    0.00 :   927:    jmp    90a <dccp_new.cold+0x7>
         :
         : 349 0000000000000929 <nf_conntrack_dccp_packet.cold>:
         : 350 nf_conntrack_dccp_packet.cold():
    0.00 :   929:    rex.WB
    0.00 :   92a:    .byte 0xc7
    0.00 :   92b:    rolb   $0x0,(%rax)
         : 354 ...

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[159380]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000159380 <__wcslen_avx2>:
         : 6      __wcslen_avx2():
  100.00 :   159380: endbr64 // libc.so.6[159380]
    0.00 :   159384: mov    %edi,%eax
    0.00 :   159386: mov    %rdi,%rdx
    0.00 :   159389: vpxor  %xmm0,%xmm0,%xmm0
    0.00 :   15938d: and    $0xfff,%eax
    0.00 :   159392: cmp    $0xfe0,%eax
    0.00 :   159397: ja     159540 <__wcslen_avx2+0x1c0>
    0.00 :   15939d: vpcmpeqd (%rdi),%ymm0,%ymm1
    0.00 :   1593a1: vpmovmskb %ymm1,%eax
    0.00 :   1593a5: test   %eax,%eax
    0.00 :   1593a7: je     159440 <__wcslen_avx2+0xc0>
    0.00 :   1593ad: tzcnt  %eax,%eax
    0.00 :   1593b1: shr    $0x2,%eax
    0.00 :   1593b4: vzeroupper
    0.00 :   1593b7: ret
    0.00 :   1593b8: nopl   0x0(%rax,%rax,1)
    0.00 :   1593c0: tzcnt  %eax,%eax
    0.00 :   1593c4: sub    %edx,%edi
    0.00 :   1593c6: inc    %edi
    0.00 :   1593c8: add    %edi,%eax
    0.00 :   1593ca: shr    $0x2,%eax
    0.00 :   1593cd: vzeroupper
    0.00 :   1593d0: ret
    0.00 :   1593d1: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   1593dc: nopl   0x0(%rax)
    0.00 :   1593e0: tzcnt  %eax,%eax
    0.00 :   1593e4: sub    %edx,%edi
    0.00 :   1593e6: add    $0x21,%edi
    0.00 :   1593e9: add    %edi,%eax
    0.00 :   1593eb: shr    $0x2,%eax
    0.00 :   1593ee: vzeroupper
    0.00 :   1593f1: ret
    0.00 :   1593f2: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   1593fd: nopl   (%rax)
    0.00 :   159400: tzcnt  %eax,%eax
    0.00 :   159404: sub    %edx,%edi
    0.00 :   159406: add    $0x41,%edi
    0.00 :   159409: add    %edi,%eax
    0.00 :   15940b: shr    $0x2,%eax
    0.00 :   15940e: vzeroupper
    0.00 :   159411: ret
    0.00 :   159412: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15941d: nopl   (%rax)
    0.00 :   159420: tzcnt  %eax,%eax
    0.00 :   159424: sub    %edx,%edi
    0.00 :   159426: add    $0x61,%edi
    0.00 :   159429: add    %edi,%eax
    0.00 :   15942b: shr    $0x2,%eax
    0.00 :   15942e: vzeroupper
    0.00 :   159431: ret
    0.00 :   159432: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15943d: nopl   (%rax)
    0.00 :   159440: or     $0x1f,%rdi
    0.00 :   159444: vpcmpeqd 0x1(%rdi),%ymm0,%ymm1
    0.00 :   159449: vpmovmskb %ymm1,%eax
    0.00 :   15944d: test   %eax,%eax
    0.00 :   15944f: jne    1593c0 <__wcslen_avx2+0x40>
    0.00 :   159455: vpcmpeqd 0x21(%rdi),%ymm0,%ymm1
    0.00 :   15945a: vpmovmskb %ymm1,%eax
    0.00 :   15945e: test   %eax,%eax
    0.00 :   159460: jne    1593e0 <__wcslen_avx2+0x60>
    0.00 :   159466: vpcmpeqd 0x41(%rdi),%ymm0,%ymm1
    0.00 :   15946b: vpmovmskb %ymm1,%eax
    0.00 :   15946f: test   %eax,%eax
    0.00 :   159471: jne    159400 <__wcslen_avx2+0x80>
    0.00 :   159473: vpcmpeqd 0x61(%rdi),%ymm0,%ymm1
    0.00 :   159478: vpmovmskb %ymm1,%eax
    0.00 :   15947c: test   %eax,%eax
    0.00 :   15947e: jne    159420 <__wcslen_avx2+0xa0>
    0.00 :   159480: inc    %rdi
    0.00 :   159483: or     $0x7f,%rdi
    0.00 :   159487: nopw   0x0(%rax,%rax,1)
    0.00 :   159490: vmovdqa 0x1(%rdi),%ymm1
    0.00 :   159495: vpminud 0x21(%rdi),%ymm1,%ymm2
    0.00 :   15949b: vmovdqa 0x41(%rdi),%ymm3
    0.00 :   1594a0: vpminud 0x61(%rdi),%ymm3,%ymm4
    0.00 :   1594a6: vpminud %ymm2,%ymm4,%ymm5
    0.00 :   1594ab: vpcmpeqd %ymm5,%ymm0,%ymm5
    0.00 :   1594af: vpmovmskb %ymm5,%ecx
    0.00 :   1594b3: sub    $0xffffffffffffff80,%rdi
    0.00 :   1594b7: test   %ecx,%ecx
    0.00 :   1594b9: je     159490 <__wcslen_avx2+0x110>
    0.00 :   1594bb: vpcmpeqd %ymm1,%ymm0,%ymm1
    0.00 :   1594bf: vpmovmskb %ymm1,%eax
    0.00 :   1594c3: sub    %rdx,%rdi
    0.00 :   1594c6: test   %eax,%eax
    0.00 :   1594c8: jne    159500 <__wcslen_avx2+0x180>
    0.00 :   1594ca: vpcmpeqd %ymm2,%ymm0,%ymm2
    0.00 :   1594ce: vpmovmskb %ymm2,%eax
    0.00 :   1594d2: test   %eax,%eax
    0.00 :   1594d4: jne    159520 <__wcslen_avx2+0x1a0>
    0.00 :   1594d6: vpcmpeqd %ymm3,%ymm0,%ymm3
    0.00 :   1594da: vpmovmskb %ymm3,%eax
    0.00 :   1594de: shl    $0x20,%rcx
    0.00 :   1594e2: or     %rcx,%rax
    0.00 :   1594e5: tzcnt  %rax,%rax
    0.00 :   1594ea: sub    $0x3f,%rdi
    0.00 :   1594ee: add    %rdi,%rax
    0.00 :   1594f1: shr    $0x2,%rax
    0.00 :   1594f5: vzeroupper
    0.00 :   1594f8: ret
    0.00 :   1594f9: nopl   0x0(%rax)
    0.00 :   159500: tzcnt  %eax,%eax
    0.00 :   159504: sub    $0x7f,%rdi
    0.00 :   159508: add    %rdi,%rax
    0.00 :   15950b: shr    $0x2,%rax
    0.00 :   15950f: vzeroupper
    0.00 :   159512: ret
    0.00 :   159513: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15951e: xchg   %ax,%ax
    0.00 :   159520: tzcnt  %eax,%eax
    0.00 :   159524: sub    $0x5f,%rdi
    0.00 :   159528: add    %rdi,%rax
    0.00 :   15952b: shr    $0x2,%rax
    0.00 :   15952f: vzeroupper
    0.00 :   159532: ret
    0.00 :   159533: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15953e: xchg   %ax,%ax
    0.00 :   159540: or     $0x1f,%rdi
    0.00 :   159544: vpcmpeqd -0x1f(%rdi),%ymm0,%ymm1
    0.00 :   159549: vpmovmskb %ymm1,%eax
    0.00 :   15954d: sarx   %edx,%eax,%eax
    0.00 :   159552: test   %eax,%eax
    0.00 :   159554: je     159444 <__wcslen_avx2+0xc4>
    0.00 :   15955a: tzcnt  %eax,%eax
    0.00 :   15955e: shr    $0x2,%eax
    0.00 :   159561: vzeroupper
    0.00 :   159564: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   36.58 [nf_conntrack][8910]
   33.69 [nf_conntrack][8915]
   29.73 [nf_conntrack][8938]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (3 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000008910 <ipv4_confirm>:
         : 6    ipv4_confirm():
   36.58 :   8910:   call   8915 <ipv4_confirm+0x5> // [nf_conntrack][8910]
   33.69 :   8915:   mov    0x68(%rsi),%rax // [nf_conntrack][8915]
    0.00 :   8919:   mov    %rsi,%rdi
    0.00 :   891c:   mov    %eax,%ecx
    0.00 :   891e:   mov    %rax,%rsi
    0.00 :   8921:   and    $0x7,%ecx
    0.00 :   8924:   and    $0xfffffffffffffff8,%rsi
    0.00 :   8928:   cmp    $0x7,%rax
    0.00 :   892c:   jbe    8970 <ipv4_confirm+0x60>
    0.00 :   892e:   cmp    $0x4,%ecx
    0.00 :   8931:   je     897a <ipv4_confirm+0x6a>
    0.00 :   8933:   cmpb   $0x4,(%rdx)
    0.00 :   8936:   je     8963 <ipv4_confirm+0x53>
   29.73 :   8938:   movzwl 0xb8(%rdi),%eax // [nf_conntrack][8938]
    0.00 :   893f:   add    0xc8(%rdi),%rax
    0.00 :   8946:   mov    %rax,%rdx
    0.00 :   8949:   movzbl (%rax),%eax
    0.00 :   894c:   sub    0xd0(%rdi),%rdx
    0.00 :   8953:   and    $0xf,%eax
    0.00 :   8956:   lea    (%rdx,%rax,4),%eax
    0.00 :   8959:   mov    %rsi,%rdx
    0.00 :   895c:   mov    %eax,%esi
    0.00 :   895e:   jmp    87f0 <nf_confirm>
    0.00 :   8963:   mov    0x10(%rdx),%rax
    0.00 :   8967:   testb  $0x4,0xca(%rax)
    0.00 :   896e:   je     8938 <ipv4_confirm+0x28>
    0.00 :   8970:   mov    $0x1,%eax
    0.00 :   8975:   jmp    897a <ipv4_confirm+0x6a>
    0.00 :   897a:   sub    $0x8,%rsp
    0.00 :   897e:   mov    0x80(%rsi),%rax
    0.00 :   8985:   test   $0x8,%al
    0.00 :   8987:   je     89b1 <ipv4_confirm+0xa1>
    0.00 :   8989:   mov    0xb0(%rsi),%rax
    0.00 :   8990:   test   %rax,%rax
    0.00 :   8993:   je     89a3 <ipv4_confirm+0x93>
    0.00 :   8995:   cmpb   $0x0,0x4(%rax)
    0.00 :   8999:   je     89a3 <ipv4_confirm+0x93>
    0.00 :   899b:   mov    %rsi,%rdi
    0.00 :   899e:   call   89a3 <ipv4_confirm+0x93>
    0.00 :   89a3:   mov    $0x1,%eax
    0.00 :   89a8:   add    $0x8,%rsp
    0.00 :   89ac:   jmp    89b1 <ipv4_confirm+0xa1>
    0.00 :   89b1:   mov    %rdi,(%rsp)
    0.00 :   89b5:   call   89ba <ipv4_confirm+0xaa>
    0.00 :   89ba:   mov    (%rsp),%rdi
    0.00 :   89be:   cmp    $0x1,%eax
    0.00 :   89c1:   jne    89a8 <ipv4_confirm+0x98>
    0.00 :   89c3:   mov    0x68(%rdi),%rsi
    0.00 :   89c7:   and    $0xfffffffffffffff8,%rsi
    0.00 :   89cb:   jmp    8989 <ipv4_confirm+0x79>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[152113]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000151e80 <__memchr_avx2>:
         : 6      __memchr_avx2():
    0.00 :   151e80: endbr64
    0.00 :   151e84: test   %rdx,%rdx
    0.00 :   151e87: je     151edd <__memchr_avx2+0x5d>
    0.00 :   151e89: vmovd  %esi,%xmm0
    0.00 :   151e8d: vpbroadcastb %xmm0,%ymm0
    0.00 :   151e92: mov    %edi,%eax
    0.00 :   151e94: and    $0xfff,%eax
    0.00 :   151e99: cmp    $0xfe0,%eax
    0.00 :   151e9e: ja     1520e0 <__memchr_avx2+0x260>
    0.00 :   151ea4: vpcmpeqb (%rdi),%ymm0,%ymm1
    0.00 :   151ea8: vpmovmskb %ymm1,%eax
    0.00 :   151eac: cmp    $0x20,%rdx
    0.00 :   151eb0: jbe    151ec0 <__memchr_avx2+0x40>
    0.00 :   151eb2: test   %eax,%eax
    0.00 :   151eb4: je     151f10 <__memchr_avx2+0x90>
    0.00 :   151eb6: bsf    %eax,%eax
    0.00 :   151eb9: add    %rdi,%rax
    0.00 :   151ebc: vzeroupper
    0.00 :   151ebf: ret
    0.00 :   151ec0: tzcnt  %eax,%eax
    0.00 :   151ec4: vzeroupper
    0.00 :   151ec7: cmp    %eax,%edx
    0.00 :   151ec9: jle    151edd <__memchr_avx2+0x5d>
    0.00 :   151ecb: add    %rdi,%rax
    0.00 :   151ece: ret
    0.00 :   151ecf: nop
    0.00 :   151ed0: bsf    %eax,%eax
    0.00 :   151ed3: inc    %rdi
    0.00 :   151ed6: add    %rdi,%rax
    0.00 :   151ed9: vzeroupper
    0.00 :   151edc: ret
    0.00 :   151edd: xor    %eax,%eax
    0.00 :   151edf: ret
    0.00 :   151ee0: tzcnt  %eax,%eax
    0.00 :   151ee4: add    $0x21,%rdi
    0.00 :   151ee8: add    %rdi,%rax
    0.00 :   151eeb: vzeroupper
    0.00 :   151eee: ret
    0.00 :   151eef: nop
    0.00 :   151ef0: tzcnt  %eax,%eax
    0.00 :   151ef4: add    $0x41,%rdi
    0.00 :   151ef8: add    %rdi,%rax
    0.00 :   151efb: vzeroupper
    0.00 :   151efe: ret
    0.00 :   151eff: nop
    0.00 :   151f00: tzcnt  %eax,%eax
    0.00 :   151f04: add    $0x61,%rdi
    0.00 :   151f08: add    %rdi,%rax
    0.00 :   151f0b: vzeroupper
    0.00 :   151f0e: ret
    0.00 :   151f0f: nop
    0.00 :   151f10: xor    %ecx,%ecx
    0.00 :   151f12: sub    %edi,%ecx
    0.00 :   151f14: or     $0x1f,%rdi
    0.00 :   151f18: lea    0x81(%rdi,%rcx,1),%esi
    0.00 :   151f1f: vpcmpeqb 0x1(%rdi),%ymm0,%ymm1
    0.00 :   151f24: vpmovmskb %ymm1,%eax
    0.00 :   151f28: sub    %rsi,%rdx
    0.00 :   151f2b: jbe    151fc0 <__memchr_avx2+0x140>
    0.00 :   151f31: test   %eax,%eax
    0.00 :   151f33: jne    151ed0 <__memchr_avx2+0x50>
    0.00 :   151f35: vpcmpeqb 0x21(%rdi),%ymm0,%ymm1
    0.00 :   151f3a: vpmovmskb %ymm1,%eax
    0.00 :   151f3e: test   %eax,%eax
    0.00 :   151f40: jne    151ee0 <__memchr_avx2+0x60>
    0.00 :   151f42: vpcmpeqb 0x41(%rdi),%ymm0,%ymm1
    0.00 :   151f47: vpmovmskb %ymm1,%eax
    0.00 :   151f4b: test   %eax,%eax
    0.00 :   151f4d: jne    151ef0 <__memchr_avx2+0x70>
    0.00 :   151f4f: vpcmpeqb 0x61(%rdi),%ymm0,%ymm1
    0.00 :   151f54: vpmovmskb %ymm1,%eax
    0.00 :   151f58: test   %eax,%eax
    0.00 :   151f5a: jne    151f00 <__memchr_avx2+0x80>
    0.00 :   151f5c: sub    $0x80,%rdx
    0.00 :   151f63: jbe    152060 <__memchr_avx2+0x1e0>
    0.00 :   151f69: inc    %rdi
    0.00 :   151f6c: mov    %edi,%ecx
    0.00 :   151f6e: or     $0x7f,%rdi
    0.00 :   151f72: and    $0x7f,%ecx
    0.00 :   151f75: add    %rcx,%rdx
    0.00 :   151f78: nopl   0x0(%rax,%rax,1)
    0.00 :   151f80: vpcmpeqb 0x1(%rdi),%ymm0,%ymm1
    0.00 :   151f85: vpcmpeqb 0x21(%rdi),%ymm0,%ymm2
    0.00 :   151f8a: vpcmpeqb 0x41(%rdi),%ymm0,%ymm3
    0.00 :   151f8f: vpcmpeqb 0x61(%rdi),%ymm0,%ymm4
    0.00 :   151f94: vpor   %ymm1,%ymm2,%ymm5
    0.00 :   151f98: vpor   %ymm3,%ymm4,%ymm6
    0.00 :   151f9c: vpor   %ymm5,%ymm6,%ymm5
    0.00 :   151fa0: vpmovmskb %ymm5,%ecx
    0.00 :   151fa4: test   %ecx,%ecx
    0.00 :   151fa6: jne    151ff0 <__memchr_avx2+0x170>
    0.00 :   151fa8: sub    $0xffffffffffffff80,%rdi
    0.00 :   151fac: sub    $0x80,%rdx
    0.00 :   151fb3: ja     151f80 <__memchr_avx2+0x100>
    0.00 :   151fb5: vpcmpeqb 0x1(%rdi),%ymm0,%ymm1
    0.00 :   151fba: vpmovmskb %ymm1,%eax
    0.00 :   151fbe: xchg   %ax,%ax
    0.00 :   151fc0: test   %eax,%eax
    0.00 :   151fc2: jne    152020 <__memchr_avx2+0x1a0>
    0.00 :   151fc4: add    $0x40,%edx
    0.00 :   151fc7: jg     152080 <__memchr_avx2+0x200>
    0.00 :   151fcd: add    $0x20,%edx
    0.00 :   151fd0: jle    151fea <__memchr_avx2+0x16a>
    0.00 :   151fd2: vpcmpeqb 0x21(%rdi),%ymm0,%ymm1
    0.00 :   151fd7: vpmovmskb %ymm1,%eax
    0.00 :   151fdb: tzcnt  %eax,%eax
    0.00 :   151fdf: cmp    %eax,%edx
    0.00 :   151fe1: jbe    152035 <__memchr_avx2+0x1b5>
    0.00 :   151fe3: add    $0x21,%rdi
    0.00 :   151fe7: add    %rdi,%rax
    0.00 :   151fea: vzeroupper
    0.00 :   151fed: ret
    0.00 :   151fee: xchg   %ax,%ax
    0.00 :   151ff0: vpmovmskb %ymm1,%eax
    0.00 :   151ff4: test   %eax,%eax
    0.00 :   151ff6: jne    152040 <__memchr_avx2+0x1c0>
    0.00 :   151ff8: vpmovmskb %ymm2,%eax
    0.00 :   151ffc: test   %eax,%eax
    0.00 :   151ffe: jne    152050 <__memchr_avx2+0x1d0>
    0.00 :   152000: vpmovmskb %ymm3,%eax
    0.00 :   152004: shl    $0x20,%rcx
    0.00 :   152008: or     %rcx,%rax
    0.00 :   15200b: tzcnt  %rax,%rax
    0.00 :   152010: sub    $0xffffffffffffffbf,%rdi
    0.00 :   152014: add    %rdi,%rax
    0.00 :   152017: vzeroupper
    0.00 :   15201a: ret
    0.00 :   15201b: nopl   0x0(%rax,%rax,1)
    0.00 :   152020: tzcnt  %eax,%eax
    0.00 :   152024: sub    $0xffffff80,%edx
    0.00 :   152027: cmp    %eax,%edx
    0.00 :   152029: jbe    152035 <__memchr_avx2+0x1b5>
    0.00 :   15202b: inc    %rdi
    0.00 :   15202e: add    %rdi,%rax
    0.00 :   152031: vzeroupper
    0.00 :   152034: ret
    0.00 :   152035: xor    %eax,%eax
    0.00 :   152037: vzeroupper
    0.00 :   15203a: ret
    0.00 :   15203b: nopl   0x0(%rax,%rax,1)
    0.00 :   152040: tzcnt  %eax,%eax
    0.00 :   152044: inc    %rdi
    0.00 :   152047: add    %rdi,%rax
    0.00 :   15204a: vzeroupper
    0.00 :   15204d: ret
    0.00 :   15204e: xchg   %ax,%ax
    0.00 :   152050: tzcnt  %eax,%eax
    0.00 :   152054: sub    $0xffffffffffffffdf,%rdi
    0.00 :   152058: add    %rdi,%rax
    0.00 :   15205b: vzeroupper
    0.00 :   15205e: ret
    0.00 :   15205f: nop
    0.00 :   152060: vpcmpeqb 0x81(%rdi),%ymm0,%ymm1
    0.00 :   152068: vpmovmskb %ymm1,%eax
    0.00 :   15206c: sub    $0xffffffffffffff80,%rdi
    0.00 :   152070: test   %eax,%eax
    0.00 :   152072: jne    152020 <__memchr_avx2+0x1a0>
    0.00 :   152074: add    $0x40,%edx
    0.00 :   152077: jle    151fcd <__memchr_avx2+0x14d>
    0.00 :   15207d: nopl   (%rax)
    0.00 :   152080: vpcmpeqb 0x21(%rdi),%ymm0,%ymm1
    0.00 :   152085: vpmovmskb %ymm1,%eax
    0.00 :   152089: test   %eax,%eax
    0.00 :   15208b: jne    152050 <__memchr_avx2+0x1d0>
    0.00 :   15208d: vpcmpeqb 0x41(%rdi),%ymm0,%ymm1
    0.00 :   152092: vpmovmskb %ymm1,%eax
    0.00 :   152096: mov    $0xffffffffffffffff,%rcx
    0.00 :   15209d: bzhi   %rdx,%rcx,%rcx
    0.00 :   1520a2: and    %ecx,%eax
    0.00 :   1520a4: jne    1520d0 <__memchr_avx2+0x250>
    0.00 :   1520a6: sub    $0x20,%edx
    0.00 :   1520a9: jbe    1520c7 <__memchr_avx2+0x247>
    0.00 :   1520ab: vpcmpeqb 0x61(%rdi),%ymm0,%ymm1
    0.00 :   1520b0: vpmovmskb %ymm1,%eax
    0.00 :   1520b4: shr    $0x20,%rcx
    0.00 :   1520b8: and    %ecx,%eax
    0.00 :   1520ba: je     1520c7 <__memchr_avx2+0x247>
    0.00 :   1520bc: tzcnt  %eax,%eax
    0.00 :   1520c0: add    $0x61,%rdi
    0.00 :   1520c4: add    %rdi,%rax
    0.00 :   1520c7: vzeroupper
    0.00 :   1520ca: ret
    0.00 :   1520cb: nopl   0x0(%rax,%rax,1)
    0.00 :   1520d0: tzcnt  %eax,%eax
    0.00 :   1520d4: sub    $0xffffffffffffffbf,%rdi
    0.00 :   1520d8: add    %rdi,%rax
    0.00 :   1520db: vzeroupper
    0.00 :   1520de: ret
    0.00 :   1520df: nop
    0.00 :   1520e0: mov    %rdi,%rcx
    0.00 :   1520e3: or     $0x1f,%rcx
    0.00 :   1520e7: vpcmpeqb -0x1f(%rcx),%ymm0,%ymm1
    0.00 :   1520ec: vpmovmskb %ymm1,%eax
    0.00 :   1520f0: lea    0x1(%rcx),%rsi
    0.00 :   1520f4: sub    %rdi,%rsi
    0.00 :   1520f7: sarx   %edi,%eax,%eax
    0.00 :   1520fc: cmp    %rsi,%rdx
    0.00 :   1520ff: jbe    151ec0 <__memchr_avx2+0x40>
    0.00 :   152105: test   %eax,%eax
    0.00 :   152107: je     151f10 <__memchr_avx2+0x90>
    0.00 :   15210d: bsf    %eax,%eax
    0.00 :   152110: add    %rdi,%rax
  100.00 :   152113: vzeroupper // libc.so.6[152113]
    0.00 :   152116: ret

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-environ.c:34
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000018bf0 <_dl_next_ld_env_entry>:
         : 6     _dl_next_ld_env_entry():
    0.00 :   18bf0:  endbr64
    0.00 :   18bf4:  mov    (%rdi),%rdx
    0.00 :   18bf7:  mov    (%rdx),%rax
    0.00 :   18bfa:  test   %rax,%rax
    0.00 :   18bfd:  jne    18c15 <_dl_next_ld_env_entry+0x25>
    0.00 :   18bff:  jmp    18c38 <_dl_next_ld_env_entry+0x48>
    0.00 :   18c01:  nopl   0x0(%rax)
    0.00 :   18c08:  mov    0x8(%rdx),%rax
    0.00 :   18c0c:  add    $0x8,%rdx
    0.00 :   18c10:  test   %rax,%rax
    0.00 :   18c13:  je     18c38 <_dl_next_ld_env_entry+0x48>
    0.00 :   18c15:  cmpb   $0x4c,(%rax)
  100.00 :   18c18:  jne    18c08 <_dl_next_ld_env_entry+0x18> // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-environ.c:34
    0.00 :   18c1a:  cmpb   $0x44,0x1(%rax)
    0.00 :   18c1e:  jne    18c08 <_dl_next_ld_env_entry+0x18>
    0.00 :   18c20:  cmpb   $0x5f,0x2(%rax)
    0.00 :   18c24:  jne    18c08 <_dl_next_ld_env_entry+0x18>
    0.00 :   18c26:  add    $0x8,%rdx
    0.00 :   18c2a:  add    $0x3,%rax
    0.00 :   18c2e:  mov    %rdx,(%rdi)
    0.00 :   18c31:  ret
    0.00 :   18c32:  nopw   0x0(%rax,%rax,1)
    0.00 :   18c38:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   89.84 [nf_conntrack][937]
   55.08 [nf_conntrack][935]
   55.08 [nf_conntrack][930]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000930 <get_l4proto>:
         : 6   get_l4proto():
    0.00 :   930:    call   935 <get_l4proto+0x5>
   55.08 :   935:    push   %r13 // [nf_conntrack][935]
   44.92 :   937:    push   %r12 // [nf_conntrack][937]
    0.00 :   939:    mov    %rcx,%r12
    0.00 :   93c:    push   %rbp
    0.00 :   93d:    mov    %rdi,%rbp
    0.00 :   940:    sub    $0x20,%rsp
    0.00 :   944:    cmp    $0x2,%dl
    0.00 :   947:    je     964 <get_l4proto+0x34>
    0.00 :   949:    cmp    $0xa,%dl
    0.00 :   94c:    je     9c4 <get_l4proto+0x94>
    0.00 :   94e:    movb   $0x0,(%rcx)
    0.00 :   951:    mov    $0xffffffff,%eax
    0.00 :   956:    add    $0x20,%rsp
    0.00 :   95a:    pop    %rbp
    0.00 :   95b:    pop    %r12
    0.00 :   95d:    pop    %r13
    0.00 :   95f:    jmp    964 <get_l4proto+0x34>
    0.00 :   964:    mov    0x70(%rdi),%eax
    0.00 :   967:    sub    0x74(%rdi),%eax
    0.00 :   96a:    movq   $0x0,0xc(%rsp)
    0.00 :   973:    sub    %esi,%eax
    0.00 :   975:    movl   $0x0,0x1c(%rsp)
    0.00 :   97d:    mov    0xd0(%rdi),%rdx
    0.00 :   984:    movq   $0x0,0x14(%rsp)
    0.00 :   98d:    cmp    $0x13,%eax
    0.00 :   990:    jle    a52 <get_l4proto+0x122>
    0.00 :   996:    movslq %esi,%rax
    0.00 :   999:    add    %rax,%rdx
    0.00 :   99c:    je     951 <get_l4proto+0x21>
    0.00 :   99e:    testw  $0xff1f,0x6(%rdx)
    0.00 :   9a4:    jne    951 <get_l4proto+0x21>
    0.00 :   9a6:    movzbl (%rdx),%eax
    0.00 :   9a9:    movzbl 0x9(%rdx),%ecx
    0.00 :   9ad:    and    $0xf,%eax
    0.00 :   9b0:    mov    %cl,(%r12)
    0.00 :   9b4:    mov    0x70(%rbp),%r8d
    0.00 :   9b8:    lea    (%rsi,%rax,4),%eax
    0.00 :   9bb:    cmp    %eax,%r8d
    0.00 :   9be:    jae    956 <get_l4proto+0x26>
    0.00 :   9c0:    xchg   %ax,%ax
    0.00 :   9c2:    jmp    951 <get_l4proto+0x21>
    0.00 :   9c4:    xor    %eax,%eax
    0.00 :   9c6:    lea    0x28(%rsi),%r13d
    0.00 :   9ca:    mov    $0x1,%ecx
    0.00 :   9cf:    add    $0x6,%esi
    0.00 :   9d2:    lea    0xb(%rsp),%rdx
    0.00 :   9d7:    mov    %ax,0xc(%rsp)
    0.00 :   9dc:    movb   $0x0,0xb(%rsp)
    0.00 :   9e1:    call   9e6 <get_l4proto+0xb6>
    0.00 :   9e6:    test   %eax,%eax
    0.00 :   9e8:    jne    a84 <get_l4proto+0x154>
    0.00 :   9ee:    lea    0xc(%rsp),%rcx
    0.00 :   9f3:    lea    0xb(%rsp),%rdx
    0.00 :   9f8:    mov    %r13d,%esi
    0.00 :   9fb:    mov    %rbp,%rdi
    0.00 :   9fe:    call   a03 <get_l4proto+0xd3>
    0.00 :   a03:    test   %eax,%eax
    0.00 :   a05:    js     aa3 <get_l4proto+0x173>
    0.00 :   a0b:    testw  $0xf8ff,0xc(%rsp)
    0.00 :   a12:    jne    aa3 <get_l4proto+0x173>
    0.00 :   a18:    movzbl 0xb(%rsp),%edx
    0.00 :   a1d:    mov    %dl,(%r12)
    0.00 :   a21:    add    $0x20,%rsp
    0.00 :   a25:    pop    %rbp
    0.00 :   a26:    pop    %r12
    0.00 :   a28:    pop    %r13
    0.00 :   a2a:    jmp    a2f <get_l4proto+0xff>
    0.00 :   a2f:    movzbl (%rdx),%ecx
    0.00 :   a32:    mov    $0x0,%rdi
    0.00 :   a39:    mov    %esi,%edx
    0.00 :   a3b:    mov    $0x0,%rsi
    0.00 :   a42:    and    $0xf,%ecx
    0.00 :   a45:    shl    $0x2,%ecx
    0.00 :   a48:    call   a4d <get_l4proto+0x11d>
    0.00 :   a4d:    jmp    951 <get_l4proto+0x21>
    0.00 :   a52:    test   %rdi,%rdi
    0.00 :   a55:    je     951 <get_l4proto+0x21>
    0.00 :   a5b:    mov    $0x14,%ecx
    0.00 :   a60:    lea    0xc(%rsp),%rdx
    0.00 :   a65:    mov    %esi,0x4(%rsp)
    0.00 :   a69:    call   a6e <get_l4proto+0x13e>
    0.00 :   a6e:    test   %eax,%eax
    0.00 :   a70:    js     951 <get_l4proto+0x21>
    0.00 :   a76:    mov    0x4(%rsp),%esi
    0.00 :   a7a:    lea    0xc(%rsp),%rdx
    0.00 :   a7f:    jmp    99e <get_l4proto+0x6e>
    0.00 :   a84:    xchg   %ax,%ax
    0.00 :   a86:    jmp    951 <get_l4proto+0x21>
    0.00 :   a8b:    mov    $0x0,%rsi
    0.00 :   a92:    mov    $0x0,%rdi
    0.00 :   a99:    call   a9e <get_l4proto+0x16e>
    0.00 :   a9e:    jmp    951 <get_l4proto+0x21>
    0.00 :   aa3:    xchg   %ax,%ax
    0.00 :   aa5:    jmp    951 <get_l4proto+0x21>
    0.00 :   aaa:    mov    $0x0,%rsi
    0.00 :   ab1:    mov    $0x0,%rdi
    0.00 :   ab8:    call   abd <get_l4proto+0x18d>
    0.00 :   abd:    jmp    951 <get_l4proto+0x21>
         :
         : 107 Disassembly of section .text.unlikely:
         :
         : 109 0000000000000930 <nf_conntrack_dccp_packet.cold+0x7>:
         : 110 nf_conntrack_dccp_packet.cold():
   55.08 :   930:    mov    $0x0,%rcx // [nf_conntrack][930]
   44.92 :   937:    mov    $0x21,%edx // [nf_conntrack][937]
    0.00 :   93c:    mov    %r10,%rsi
    0.00 :   93f:    mov    %rbx,%rdi
    0.00 :   942:    call   947 <nf_conntrack_dccp_packet.cold+0x1e>
    0.00 :   947:    jmp    94c <nf_conntrack_dccp_packet.cold+0x23>
    0.00 :   94c:    mov    $0x0,%r8
    0.00 :   953:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
    0.00 :   955:    mov    $0x0,%r8
    0.00 :   95c:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
    0.00 :   95e:    mov    $0x0,%r8
    0.00 :   965:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
         :
         : 124 0000000000000967 <nf_conntrack_sctp_packet.cold>:
         : 125 nf_conntrack_sctp_packet.cold():
    0.00 :   967:    mov    $0x0,%r8
    0.00 :   96e:    mov    $0x0,%rcx
    0.00 :   975:    mov    $0x84,%edx
    0.00 :   97a:    mov    %r13,%rsi
    0.00 :   97d:    mov    %rbx,%rdi
    0.00 :   980:    call   985 <nf_conntrack_sctp_packet.cold+0x1e>
    0.00 :   985:    jmp    98a <nf_conntrack_sctp_packet.cold+0x23>
    0.00 :   98a:    mov    $0x0,%r8
    0.00 :   991:    jmp    96e <nf_conntrack_sctp_packet.cold+0x7>
    0.00 :   993:    mov    $0x0,%r8
    0.00 :   99a:    jmp    96e <nf_conntrack_sctp_packet.cold+0x7>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   56.66 [nf_nat][3150]
   43.34 [nf_nat][3156]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003150 <nf_nat_ipv4_out>:
         : 6    nf_nat_ipv4_out():
   56.66 :   3150:   call   3155 <nf_nat_ipv4_out+0x5> // [nf_nat][3150]
    0.00 :   3155:   push   %rbp
   43.34 :   3156:   push   %rbx // [nf_nat][3156]
    0.00 :   3157:   mov    %rsi,%rbx
    0.00 :   315a:   mov    0x68(%rsi),%rsi
    0.00 :   315e:   cmp    $0x7,%rsi
    0.00 :   3162:   jbe    3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   3168:   mov    %rdx,%rbp
    0.00 :   316b:   mov    %esi,%edx
    0.00 :   316d:   mov    $0x12,%eax
    0.00 :   3172:   and    $0x7,%edx
    0.00 :   3175:   bt     %rdx,%rax
    0.00 :   3179:   jae    3190 <nf_nat_ipv4_out+0x40>
    0.00 :   317b:   movzwl 0xb8(%rbx),%eax
    0.00 :   3182:   mov    0xc8(%rbx),%rcx
    0.00 :   3189:   cmpb   $0x1,0x9(%rcx,%rax,1)
    0.00 :   318e:   je     31a7 <nf_nat_ipv4_out+0x57>
    0.00 :   3190:   mov    %rbp,%rdx
    0.00 :   3193:   mov    %rbx,%rsi
    0.00 :   3196:   call   319b <nf_nat_ipv4_out+0x4b>
    0.00 :   319b:   cmp    $0x1,%eax
    0.00 :   319e:   je     31bf <nf_nat_ipv4_out+0x6f>
    0.00 :   31a0:   pop    %rbx
    0.00 :   31a1:   pop    %rbp
    0.00 :   31a2:   jmp    31a7 <nf_nat_ipv4_out+0x57>
    0.00 :   31a7:   movzbl 0x0(%rbp),%ecx
    0.00 :   31ab:   and    $0xfffffffffffffff8,%rsi
    0.00 :   31af:   mov    %rbx,%rdi
    0.00 :   31b2:   call   31b7 <nf_nat_ipv4_out+0x67>
    0.00 :   31b7:   mov    %eax,%edx
    0.00 :   31b9:   xor    %eax,%eax
    0.00 :   31bb:   test   %edx,%edx
    0.00 :   31bd:   je     31a0 <nf_nat_ipv4_out+0x50>
    0.00 :   31bf:   testb  $0x4,0x3c(%rbx)
    0.00 :   31c3:   jne    3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   31c5:   mov    0x68(%rbx),%rax
    0.00 :   31c9:   mov    %eax,%edx
    0.00 :   31cb:   mov    %rax,%rcx
    0.00 :   31ce:   and    $0x7,%edx
    0.00 :   31d1:   and    $0xfffffffffffffff8,%rcx
    0.00 :   31d5:   cmp    $0x7,%rax
    0.00 :   31d9:   jbe    3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   31db:   xor    %eax,%eax
    0.00 :   31dd:   cmp    $0x2,%edx
    0.00 :   31e0:   seta   %sil
    0.00 :   31e4:   setbe  %al
    0.00 :   31e7:   movzbl %sil,%esi
    0.00 :   31eb:   lea    0x0(,%rsi,8),%rdx
    0.00 :   31f3:   sub    %rsi,%rdx
    0.00 :   31f6:   lea    (%rcx,%rdx,8),%rsi
    0.00 :   31fa:   lea    0x0(,%rax,8),%rdx
    0.00 :   3202:   sub    %rax,%rdx
    0.00 :   3205:   lea    (%rcx,%rdx,8),%rax
    0.00 :   3209:   mov    0x34(%rax),%ecx
    0.00 :   320c:   cmp    %ecx,0x20(%rsi)
    0.00 :   320f:   jne    3221 <nf_nat_ipv4_out+0xd1>
    0.00 :   3211:   cmpb   $0x1,0x46(%rsi)
    0.00 :   3215:   je     3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   3217:   movzwl 0x44(%rax),%eax
    0.00 :   321b:   cmp    %ax,0x30(%rsi)
    0.00 :   321f:   je     3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   3221:   mov    0x20(%rbp),%rdi
    0.00 :   3225:   mov    $0x2,%edx
    0.00 :   322a:   mov    %rbx,%rsi
    0.00 :   322d:   call   2c40 <nf_xfrm_me_harder>
    0.00 :   3232:   test   %eax,%eax
    0.00 :   3234:   js     3242 <nf_nat_ipv4_out+0xf2>
    0.00 :   3236:   mov    $0x1,%eax
    0.00 :   323b:   pop    %rbx
    0.00 :   323c:   pop    %rbp
    0.00 :   323d:   jmp    3242 <nf_nat_ipv4_out+0xf2>
    0.00 :   3242:   neg    %eax
    0.00 :   3244:   shl    $0x10,%eax
    0.00 :   3247:   jmp    31a0 <nf_nat_ipv4_out+0x50>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  100.00 [nf_conntrack][7eb0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000007eb0 <ipv4_conntrack_in>:
         : 6    ipv4_conntrack_in():
  100.00 :   7eb0:   call   7eb5 <ipv4_conntrack_in+0x5> // [nf_conntrack][7eb0]
    0.00 :   7eb5:   mov    %rsi,%rdi
    0.00 :   7eb8:   mov    %rdx,%rsi
    0.00 :   7ebb:   jmp    7ec0 <nf_ct_netns_do_get>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  100.00 [nf_conntrack][8130]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000008130 <ipv4_conntrack_local>:
         : 6    ipv4_conntrack_local():
  100.00 :   8130:   call   8135 <ipv4_conntrack_local+0x5> // [nf_conntrack][8130]
    0.00 :   8135:   movzwl 0xb8(%rsi),%eax
    0.00 :   813c:   mov    0xc8(%rsi),%rcx
    0.00 :   8143:   mov    %rsi,%rdi
    0.00 :   8146:   testw  $0xff3f,0x6(%rcx,%rax,1)
    0.00 :   814d:   je     8163 <ipv4_conntrack_local+0x33>
    0.00 :   814f:   mov    0x68(%rsi),%rax
    0.00 :   8153:   cmp    $0x7,%rax
    0.00 :   8157:   ja     816b <ipv4_conntrack_local+0x3b>
    0.00 :   8159:   mov    $0x1,%eax
    0.00 :   815e:   jmp    8163 <ipv4_conntrack_local+0x33>
    0.00 :   8163:   mov    %rdx,%rsi
    0.00 :   8166:   jmp    816b <ipv4_conntrack_local+0x3b>
    0.00 :   816b:   and    $0xfffffffffffffff8,%rax
    0.00 :   816f:   mov    0x80(%rax),%rdx
    0.00 :   8176:   and    $0x8,%dh
    0.00 :   8179:   je     8159 <ipv4_conntrack_local+0x29>
    0.00 :   817b:   movq   $0x0,0x68(%rsi)
    0.00 :   8183:   mov    $0xffffffff,%edx
    0.00 :   8188:   lock xadd %edx,(%rax)
    0.00 :   818c:   cmp    $0x1,%edx
    0.00 :   818f:   je     81a4 <ipv4_conntrack_local+0x74>
    0.00 :   8191:   test   %edx,%edx
    0.00 :   8193:   jg     8159 <ipv4_conntrack_local+0x29>
    0.00 :   8195:   mov    $0x3,%esi
    0.00 :   819a:   mov    %rax,%rdi
    0.00 :   819d:   call   81a2 <ipv4_conntrack_local+0x72>
    0.00 :   81a2:   jmp    8159 <ipv4_conntrack_local+0x29>
    0.00 :   81a4:   mov    %rax,%rdi
    0.00 :   81a7:   call   81ac <ipv4_conntrack_local+0x7c>
    0.00 :   81ac:   jmp    8159 <ipv4_conntrack_local+0x29>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   55.55 dbt2-driver[40d4a4]
   44.45 dbt2-driver[40d499]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040d490 <pcg_mcg_128_xsl_rr_64_random_r>:
         : 6      pcg_mcg_128_xsl_rr_64_random_r():
    0.00 :   40d490: push   %rbp
    0.00 :   40d491: mov    %rsp,%rbp
    0.00 :   40d494: push   %rbx
    0.00 :   40d495: sub    $0x18,%rsp
   44.45 :   40d499: mov    %rdi,-0x18(%rbp) // dbt2-driver[40d499]
    0.00 :   40d49d: mov    -0x18(%rbp),%rax
    0.00 :   40d4a1: mov    %rax,%rdi
   55.55 :   40d4a4: call   40c4c7 <pcg_mcg_128_step_r> // dbt2-driver[40d4a4]
    0.00 :   40d4a9: mov    -0x18(%rbp),%rax
    0.00 :   40d4ad: mov    0x8(%rax),%rdx
    0.00 :   40d4b1: mov    (%rax),%rax
    0.00 :   40d4b4: mov    %rax,%rcx
    0.00 :   40d4b7: mov    %rdx,%rbx
    0.00 :   40d4ba: mov    %rdx,%rax
    0.00 :   40d4bd: mov    %rcx,%rdi
    0.00 :   40d4c0: mov    %rax,%rsi
    0.00 :   40d4c3: call   409cc0 <pcg_output_xsl_rr_128_64>
    0.00 :   40d4c8: mov    -0x8(%rbp),%rbx
    0.00 :   40d4cc: leave
    0.00 :   40d4cd: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   58.47 [nf_conntrack][47c]
   58.47 [nf_conntrack][47a]
   41.53 [nf_conntrack][3fd]
   41.53 [nf_conntrack][3fc]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000003c0 <hash_conntrack_raw>:
         : 6   hash_conntrack_raw():
    0.00 :   3c0:    call   3c5 <hash_conntrack_raw+0x5>
    0.00 :   3c5:    push   %rbp
    0.00 :   3c6:    mov    $0x6,%ecx
    0.00 :   3cb:    mov    %rsp,%rbp
    0.00 :   3ce:    push   %r14
    0.00 :   3d0:    mov    %esi,%r14d
    0.00 :   3d3:    push   %r13
    0.00 :   3d5:    mov    %rdx,%r13
    0.00 :   3d8:    push   %r12
    0.00 :   3da:    push   %rbx
    0.00 :   3db:    mov    %rdi,%rbx
    0.00 :   3de:    sub    $0x40,%rsp
    0.00 :   3e2:    mov    %gs:0x28,%rax
    0.00 :   3eb:    mov    %rax,0x38(%rsp)
    0.00 :   3f0:    xor    %eax,%eax
    0.00 :   3f2:    lea    0x8(%rsp),%r12
    0.00 :   3f7:    mov    %r12,%rdi
    0.00 :   3fa:    rep stos %rax,%es:(%rdi)
   41.53 :   3fd:    jmp    482 <hash_conntrack_raw+0xc2> // [nf_conntrack][3fd]
    0.00 :   402:    mov    (%rbx),%rax
    0.00 :   405:    mov    0x1c(%rbx),%rdx
    0.00 :   409:    mov    $0x30,%esi
    0.00 :   40e:    mov    %r12,%rdi
    0.00 :   411:    mov    %r14d,0x2c(%rsp)
    0.00 :   416:    mov    %rax,0x8(%rsp)
    0.00 :   41b:    mov    0x8(%rbx),%rax
    0.00 :   41f:    mov    %rdx,0x24(%rsp)
    0.00 :   424:    movzbl 0x26(%rbx),%edx
    0.00 :   428:    mov    %rax,0x10(%rsp)
    0.00 :   42d:    mov    0x10(%rbx),%eax
    0.00 :   430:    shl    $0x10,%edx
    0.00 :   433:    mov    %eax,0x18(%rsp)
    0.00 :   437:    mov    0x14(%rbx),%rax
    0.00 :   43b:    mov    %rax,0x1c(%rsp)
    0.00 :   440:    mov    0x140(%r13),%eax
    0.00 :   447:    mov    %eax,0x30(%rsp)
    0.00 :   44b:    movzwl 0x24(%rbx),%eax
    0.00 :   44f:    or     %edx,%eax
    0.00 :   451:    mov    $0x0,%rdx
    0.00 :   458:    mov    %eax,0x34(%rsp)
    0.00 :   45c:    call   461 <hash_conntrack_raw+0xa1>
    0.00 :   461:    mov    0x38(%rsp),%rdx
    0.00 :   466:    sub    %gs:0x28,%rdx
    0.00 :   46f:    jne    4d4 <hash_conntrack_raw+0x114>
    0.00 :   471:    add    $0x40,%rsp
    0.00 :   475:    pop    %rbx
    0.00 :   476:    pop    %r12
    0.00 :   478:    pop    %r13
    0.00 :   47a:    pop    %r14
   58.47 :   47c:    pop    %rbp // [nf_conntrack][47c]
    0.00 :   47d:    jmp    482 <hash_conntrack_raw+0xc2>
    0.00 :   482:    mov    %rsp,%rsi
    0.00 :   485:    mov    $0x0,%rdi
    0.00 :   48c:    movq   $0x0,(%rsp)
    0.00 :   494:    call   499 <hash_conntrack_raw+0xd9>
    0.00 :   499:    test   %al,%al
    0.00 :   49b:    je     402 <hash_conntrack_raw+0x42>
    0.00 :   4a1:    mov    $0x10,%esi
    0.00 :   4a6:    mov    $0x0,%rdi
    0.00 :   4ad:    call   4b2 <hash_conntrack_raw+0xf2>
    0.00 :   4b2:    mov    $0x0,%rcx
    0.00 :   4b9:    mov    $0x0,%rsi
    0.00 :   4c0:    mov    $0x0,%rdi
    0.00 :   4c7:    mov    %rsp,%rdx
    0.00 :   4ca:    call   4cf <hash_conntrack_raw+0x10f>
    0.00 :   4cf:    jmp    402 <hash_conntrack_raw+0x42>
    0.00 :   4d4:    call   4d9 <hash_conntrack_raw+0x119>
         :
         : 75  Disassembly of section .text.unlikely:
         :
         : 77  00000000000003c0 <nf_ct_resolve_clash+0x1b0>:
         : 78  nf_ct_resolve_clash():
    0.00 :   3c0:    add    %al,(%rax)
    0.00 :   3c2:    jmp    3f6 <nf_ct_resolve_clash+0x1e6>
    0.00 :   3c4:    mov    $0x0,%rdi
    0.00 :   3cb:    call   3d0 <nf_ct_resolve_clash+0x1c0>
    0.00 :   3d0:    mov    $0x0,%rdi
    0.00 :   3d7:    mov    0xb40(%r12),%rax
    0.00 :   3df:    incl   %gs:0x14(%rax)
    0.00 :   3e3:    call   3e8 <nf_ct_resolve_clash+0x1d8>
    0.00 :   3e8:    mov    0xb40(%r12),%rax
    0.00 :   3f0:    incl   %gs:0xc(%rax)
    0.00 :   3f4:    xor    %eax,%eax
    0.00 :   3f6:    pop    %rbx
    0.00 :   3f7:    pop    %rbp
    0.00 :   3f8:    pop    %r12
    0.00 :   3fa:    pop    %r13
   41.53 :   3fc:    pop    %r14 // [nf_conntrack][3fc]
    0.00 :   3fe:    jmp    403 <__nf_conntrack_alloc.cold>
         :
         : 97  0000000000000403 <__nf_conntrack_alloc.cold>:
         : 98  __nf_conntrack_alloc.cold():
    0.00 :   403:    mov    $0x0,%rdi
    0.00 :   40a:    call   40f <__nf_conntrack_alloc.cold+0xc>
    0.00 :   40f:    jmp    414 <__nf_conntrack_confirm.cold>
         :
         : 103 0000000000000414 <__nf_conntrack_confirm.cold>:
         : 104 __nf_conntrack_confirm.cold():
    0.00 :   414:    mov    0x20(%rsp),%rdi
    0.00 :   419:    mov    %r12d,%edx
    0.00 :   41c:    call   210 <nf_ct_resolve_clash>
    0.00 :   421:    mov    %eax,%ebx
    0.00 :   423:    jmp    428 <nf_conntrack_in.cold>
         :
         : 111 0000000000000428 <nf_conntrack_in.cold>:
         : 112 nf_conntrack_in.cold():
    0.00 :   428:    cmp    $0x2,%dl
    0.00 :   42b:    jne    465 <nf_conntrack_in.cold+0x3d>
    0.00 :   42d:    sub    $0x1,%r8b
    0.00 :   431:    jne    486 <nf_conntrack_in.cold+0x5e>
    0.00 :   433:    mov    0x4(%rsp),%edx
    0.00 :   437:    mov    0x10(%rsp),%rdi
    0.00 :   43c:    mov    %rbp,%rcx
    0.00 :   43f:    mov    %r14,%rsi
    0.00 :   442:    call   447 <nf_conntrack_in.cold+0x1f>
    0.00 :   447:    mov    %eax,%edx
    0.00 :   449:    test   %edx,%edx
    0.00 :   44b:    jg     48b <nf_conntrack_in.cold+0x63>
    0.00 :   44d:    mov    0x20(%rbp),%rax
    0.00 :   451:    mov    0xb40(%rax),%rax
    0.00 :   458:    incl   %gs:0x1c(%rax)
    0.00 :   45c:    mov    %edx,%ebx
    0.00 :   45e:    neg    %ebx
    0.00 :   460:    jmp    465 <nf_conntrack_in.cold+0x3d>
    0.00 :   465:    cmp    $0xa,%dl
    0.00 :   468:    jne    486 <nf_conntrack_in.cold+0x5e>
    0.00 :   46a:    test   %al,%al
    0.00 :   46c:    je     486 <nf_conntrack_in.cold+0x5e>
    0.00 :   46e:    mov    0x4(%rsp),%edx
    0.00 :   472:    mov    0x10(%rsp),%rdi
    0.00 :   477:    mov    %rbp,%rcx
   58.47 :   47a:    mov    %r14,%rsi // [nf_conntrack][47a]
    0.00 :   47d:    call   482 <nf_conntrack_in.cold+0x5a>
    0.00 :   482:    mov    %eax,%edx
    0.00 :   484:    jmp    449 <nf_conntrack_in.cold+0x21>
    0.00 :   486:    mov    $0x1,%edx
    0.00 :   48b:    cmpq   $0x0,0x68(%r14)
    0.00 :   490:    je     499 <nf_conntrack_in.cold+0x71>
    0.00 :   492:    mov    %edx,%ebx
    0.00 :   494:    jmp    499 <nf_conntrack_in.cold+0x71>
    0.00 :   499:    movzbl 0x1b(%rsp),%r8d
    0.00 :   49f:    jmp    4a4 <nf_ct_expect_related_report.cold>
         :
         : 150 00000000000004a4 <nf_ct_expect_related_report.cold>:
         : 151 nf_ct_expect_related_report.cold():
    0.00 :   4a4:    mov    $0x0,%rdi
    0.00 :   4ab:    call   4b0 <nf_ct_expect_related_report.cold+0xc>
    0.00 :   4b0:    jmp    4b5 <nf_conntrack_helper_register.cold>
         :
         : 156 00000000000004b5 <nf_conntrack_helper_register.cold>:
         : 157 nf_conntrack_helper_register.cold():
    0.00 :   4b5:    mov    $0x0,%rdi
    0.00 :   4bc:    call   4c1 <nf_conntrack_helper_register.cold+0xc>
    0.00 :   4c1:    mov    $0x0,%rdi
    0.00 :   4c8:    call   4cd <nf_l4proto_log_invalid>
         :
         : 163 00000000000004cd <nf_l4proto_log_invalid>:
         : 164 nf_l4proto_log_invalid():
    0.00 :   4cd:    call   4d2 <nf_l4proto_log_invalid+0x5>
    0.00 :   4d2:    push   %rbp
    0.00 :   4d3:    xor    %eax,%eax
    0.00 :   4d5:    mov    %rdi,%r11
    0.00 :   4d8:    rex.W

Sorted summary for file /usr/bin/bash
----------------------------------------------

  100.00 bash[650b6]
 Percent |	Source code & Disassembly of /usr/bin/bash for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000064f30 <make_child@@Base>:
    0.00 :   64f30:  endbr64
    0.00 :   64f34:  push   %r15
    0.00 :   64f36:  push   %r14
    0.00 :   64f38:  push   %r13
    0.00 :   64f3a:  push   %r12
    0.00 :   64f3c:  push   %rbp
    0.00 :   64f3d:  push   %rbx
    0.00 :   64f3e:  sub    $0x2f8,%rsp
    0.00 :   64f45:  mov    %esi,(%rsp)
    0.00 :   64f48:  lea    0x30(%rsp),%r13
    0.00 :   64f4d:  lea    0x130(%rsp),%r12
    0.00 :   64f55:  mov    %rdi,0x8(%rsp)
    0.00 :   64f5a:  mov    %r13,%rdi
    0.00 :   64f5d:  mov    %fs:0x28,%rax
    0.00 :   64f66:  mov    %rax,0x2e8(%rsp)
    0.00 :   64f6e:  xor    %eax,%eax
    0.00 :   64f70:  call   30510 <sigemptyset@plt>
    0.00 :   64f75:  mov    %r13,%rdx
    0.00 :   64f78:  xor    %esi,%esi
    0.00 :   64f7a:  xor    %edi,%edi
    0.00 :   64f7c:  call   2fe80 <sigprocmask@plt>
    0.00 :   64f81:  mov    $0xf,%esi
    0.00 :   64f86:  mov    %r13,%rdi
    0.00 :   64f89:  call   30bc0 <sigaddset@plt>
    0.00 :   64f8e:  mov    %r12,%rdi
    0.00 :   64f91:  call   30510 <sigemptyset@plt>
    0.00 :   64f96:  mov    $0x11,%esi
    0.00 :   64f9b:  mov    %r12,%rdi
    0.00 :   64f9e:  call   30bc0 <sigaddset@plt>
    0.00 :   64fa3:  mov    $0x2,%esi
    0.00 :   64fa8:  mov    %r12,%rdi
    0.00 :   64fab:  call   30bc0 <sigaddset@plt>
    0.00 :   64fb0:  mov    $0xf,%esi
    0.00 :   64fb5:  mov    %r12,%rdi
    0.00 :   64fb8:  call   30bc0 <sigaddset@plt>
    0.00 :   64fbd:  lea    0xb0(%rsp),%rax
    0.00 :   64fc5:  mov    %rax,%rbx
    0.00 :   64fc8:  mov    %rax,%rdi
    0.00 :   64fcb:  mov    %rax,0x10(%rsp)
    0.00 :   64fd0:  call   30510 <sigemptyset@plt>
    0.00 :   64fd5:  mov    %rbx,%rdx
    0.00 :   64fd8:  mov    %r12,%rsi
    0.00 :   64fdb:  xor    %edi,%edi
    0.00 :   64fdd:  call   2fe80 <sigprocmask@plt>
    0.00 :   64fe2:  mov    0xf4468(%rip),%ebp        # 159450 <interactive_shell@@Base>
    0.00 :   64fe8:  test   %ebp,%ebp
    0.00 :   64fea:  jne    653e8 <make_child@@Base+0x4b8>
    0.00 :   64ff0:  mov    0xf4a9e(%rip),%ebx        # 159a94 <already_making_children@@Base>
    0.00 :   64ff6:  test   %ebx,%ebx
    0.00 :   64ff8:  jne    65009 <make_child@@Base+0xd9>
    0.00 :   64ffa:  movl   $0x1,0xf4a90(%rip)        # 159a94 <already_making_children@@Base>
    0.00 :   65004:  call   5e7d0 <start_pipeline@@Base>
    0.00 :   65009:  mov    (%rsp),%eax
    0.00 :   6500c:  mov    0xeb4c2(%rip),%edi        # 1504d4 <default_buffered_input@@Base>
    0.00 :   65012:  and    $0x1,%eax
    0.00 :   65015:  mov    %eax,0x4(%rsp)
    0.00 :   65019:  cmp    $0xffffffff,%edi
    0.00 :   6501c:  je     6502b <make_child@@Base+0xfb>
    0.00 :   6501e:  test   %eax,%eax
    0.00 :   65020:  je     65026 <make_child@@Base+0xf6>
    0.00 :   65022:  test   %edi,%edi
    0.00 :   65024:  jle    6502b <make_child@@Base+0xfb>
    0.00 :   65026:  call   83df0 <sync_buffered_stream@@Base>
    0.00 :   6502b:  mov    $0x1,%ebp
    0.00 :   65030:  lea    0xc01e0(%rip),%r14        # 125217 <build_version@@Base+0x957>
    0.00 :   65037:  jmp    650af <make_child@@Base+0x17f>
    0.00 :   65039:  nopl   0x0(%rax)
    0.00 :   65040:  call   2ff40 <__errno_location@plt>
    0.00 :   65045:  cmpl   $0xb,(%rax)
    0.00 :   65048:  mov    %rax,%r15
    0.00 :   6504b:  jne    65240 <make_child@@Base+0x310>
    0.00 :   65051:  cmp    $0xf,%ebp
    0.00 :   65054:  jg     65240 <make_child@@Base+0x310>
    0.00 :   6505a:  xor    %edx,%edx
    0.00 :   6505c:  mov    %r13,%rsi
    0.00 :   6505f:  mov    $0x2,%edi
    0.00 :   65064:  call   2fe80 <sigprocmask@plt>
    0.00 :   65069:  xor    %edi,%edi
    0.00 :   6506b:  call   1079b0 <_rl_enable_paren_matching@@Base+0x12d0>
    0.00 :   65070:  movl   $0xb,(%r15)
    0.00 :   65077:  mov    %r14,%rdi
    0.00 :   6507a:  xor    %eax,%eax
    0.00 :   6507c:  call   5e6b0 <sys_error@@Base>
    0.00 :   65081:  mov    %ebp,%edi
    0.00 :   65083:  call   30b70 <sleep@plt>
    0.00 :   65088:  test   %eax,%eax
    0.00 :   6508a:  jne    65240 <make_child@@Base+0x310>
    0.00 :   65090:  mov    0xf410e(%rip),%eax        # 1591a4 <interrupt_state@@Base>
    0.00 :   65096:  add    %ebp,%ebp
    0.00 :   65098:  test   %eax,%eax
    0.00 :   6509a:  jne    65240 <make_child@@Base+0x310>
    0.00 :   650a0:  xor    %edx,%edx
    0.00 :   650a2:  mov    %r12,%rsi
    0.00 :   650a5:  mov    $0x2,%edi
    0.00 :   650aa:  call   2fe80 <sigprocmask@plt>
    0.00 :   650af:  call   30bd0 <fork@plt>
    0.00 :   650b4:  mov    %eax,%ebx
  100.00 :   650b6:  test   %eax,%eax // bash[650b6]
    0.00 :   650b8:  js     65040 <make_child@@Base+0x110>
    0.00 :   650ba:  je     652e8 <make_child@@Base+0x3b8>
    0.00 :   650c0:  mov    0xf4389(%rip),%r10d        # 159450 <interactive_shell@@Base>
    0.00 :   650c7:  test   %r10d,%r10d
    0.00 :   650ca:  jne    65670 <make_child@@Base+0x740>
    0.00 :   650d0:  mov    0xeb3ae(%rip),%edi        # 150484 <job_control@@Base>
    0.00 :   650d6:  mov    0xf4724(%rip),%esi        # 159800 <pipeline_pgrp@@Base>
    0.00 :   650dc:  test   %edi,%edi
    0.00 :   650de:  je     652c8 <make_child@@Base+0x398>
    0.00 :   650e4:  test   %esi,%esi
    0.00 :   650e6:  jne    650f0 <make_child@@Base+0x1c0>
    0.00 :   650e8:  mov    %ebx,0xf4712(%rip)        # 159800 <pipeline_pgrp@@Base>
    0.00 :   650ee:  mov    %ebx,%esi
    0.00 :   650f0:  mov    %ebx,%edi
    0.00 :   650f2:  call   30a40 <setpgid@plt>
    0.00 :   650f7:  lea    0x28(%rsp),%rbp
    0.00 :   650fc:  xor    %esi,%esi
    0.00 :   650fe:  mov    %ebx,%edi
    0.00 :   65100:  mov    %rbp,%rdx
    0.00 :   65103:  call   63b40 <skipsubscript@@Base+0x10>
    0.00 :   65108:  mov    %rax,%r14
    0.00 :   6510b:  test   %rax,%rax
    0.00 :   6510e:  jne    65120 <make_child@@Base+0x1f0>
    0.00 :   65110:  jmp    65144 <make_child@@Base+0x214>
    0.00 :   65112:  nopw   0x0(%rax,%rax,1)
    0.00 :   65118:  mov    (%r14),%r14
    0.00 :   6511b:  test   %r14,%r14
    0.00 :   6511e:  je     65144 <make_child@@Base+0x214>
    0.00 :   65120:  cmp    0x8(%r14),%ebx
    0.00 :   65124:  jne    65118 <make_child@@Base+0x1e8>
    0.00 :   65126:  cmpl   $0x1,0x10(%r14)
    0.00 :   6512b:  je     65590 <make_child@@Base+0x660>
    0.00 :   65131:  cmpb   $0x7f,0xc(%r14)
    0.00 :   65136:  je     65590 <make_child@@Base+0x660>
    0.00 :   6513c:  movl   $0x4,0x10(%r14)
    0.00 :   65144:  mov    $0x20,%edi
    0.00 :   65149:  call   30660 <malloc@plt>
    0.00 :   6514e:  mov    %rax,%r12
    0.00 :   65151:  test   %rax,%rax
    0.00 :   65154:  je     65689 <make_child@@Base+0x759>
    0.00 :   6515a:  movabs $0x100000000,%rax
    0.00 :   65164:  mov    0xf9e1d(%rip),%rdx        # 15ef88 <the_pipeline@@Base>
    0.00 :   6516b:  mov    %ebx,0x8(%r12)
    0.00 :   65170:  mov    %rax,0xc(%r12)
    0.00 :   65175:  mov    0x8(%rsp),%rax
    0.00 :   6517a:  mov    %rdx,(%r12)
    0.00 :   6517e:  mov    %rax,0x18(%r12)
    0.00 :   65183:  mov    %rdx,%rax
    0.00 :   65186:  mov    %r12,0xf9dfb(%rip)        # 15ef88 <the_pipeline@@Base>
    0.00 :   6518d:  test   %rdx,%rdx
    0.00 :   65190:  je     655c0 <make_child@@Base+0x690>
    0.00 :   65196:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   651a0:  mov    %rax,%rcx
    0.00 :   651a3:  mov    (%rax),%rax
    0.00 :   651a6:  cmp    %rax,%rdx
    0.00 :   651a9:  jne    651a0 <make_child@@Base+0x270>
    0.00 :   651ab:  mov    %r12,(%rcx)
    0.00 :   651ae:  mov    0x4(%rsp),%esi
    0.00 :   651b2:  test   %esi,%esi
    0.00 :   651b4:  je     65570 <make_child@@Base+0x640>
    0.00 :   651ba:  mov    %ebx,0xec630(%rip)        # 1517f0 <last_asynchronous_pid@@Base>
    0.00 :   651c0:  xor    %esi,%esi
    0.00 :   651c2:  mov    %rbp,%rdx
    0.00 :   651c5:  mov    %ebx,%edi
    0.00 :   651c7:  call   625e0 <procsub_waitall@@Base+0x220>
    0.00 :   651cc:  cmp    $0xffffffff,%eax
    0.00 :   651cf:  je     6520d <make_child@@Base+0x2dd>
    0.00 :   651d1:  mov    0xf4630(%rip),%rcx        # 159808 <jobs@@Base>
    0.00 :   651d8:  movslq %eax,%rdx
    0.00 :   651db:  mov    (%rcx,%rdx,8),%rdx
    0.00 :   651df:  cmpl   $0x4,0x14(%rdx)
    0.00 :   651e3:  je     655d0 <make_child@@Base+0x6a0>
    0.00 :   651e9:  mov    $0x5,%edx
    0.00 :   651ee:  lea    0xc041b(%rip),%rsi        # 125610 <build_version@@Base+0xd50>
    0.00 :   651f5:  xor    %edi,%edi
    0.00 :   651f7:  call   301a0 <dcgettext@plt>
    0.00 :   651fc:  mov    0x28(%rsp),%rax
    0.00 :   65201:  test   %rax,%rax
    0.00 :   65204:  je     6520d <make_child@@Base+0x2dd>
    0.00 :   65206:  movl   $0x0,0x8(%rax)
    0.00 :   6520d:  mov    %ebx,%edi
    0.00 :   6520f:  call   107910 <_rl_enable_paren_matching@@Base+0x1230>
    0.00 :   65214:  mov    0x10(%rsp),%rsi
    0.00 :   65219:  xor    %edx,%edx
    0.00 :   6521b:  mov    $0x2,%edi
    0.00 :   65220:  addl   $0x1,0xec52d(%rip)        # 151754 <js@@Base+0x14>
    0.00 :   65227:  addl   $0x1,0xec51a(%rip)        # 151748 <js@@Base+0x8>
    0.00 :   6522e:  mov    %ebx,0xec554(%rip)        # 151788 <last_made_pid@@Base>
    0.00 :   65234:  call   2fe80 <sigprocmask@plt>
    0.00 :   65239:  jmp    653b8 <make_child@@Base+0x488>
    0.00 :   6523e:  xchg   %ax,%ax
    0.00 :   65240:  mov    0xf4209(%rip),%r11d        # 159450 <interactive_shell@@Base>
    0.00 :   65247:  test   %r11d,%r11d
    0.00 :   6524a:  jne    65460 <make_child@@Base+0x530>
    0.00 :   65250:  lea    0xbffcc(%rip),%rdi        # 125223 <build_version@@Base+0x963>
    0.00 :   65257:  xor    %eax,%eax
    0.00 :   65259:  call   5e6b0 <sys_error@@Base>
    0.00 :   6525e:  mov    0xf459c(%rip),%edi        # 159800 <pipeline_pgrp@@Base>
    0.00 :   65264:  test   %edi,%edi
    0.00 :   65266:  jne    65544 <make_child@@Base+0x614>
    0.00 :   6526c:  cmpq   $0x0,0xf9d14(%rip)        # 15ef88 <the_pipeline@@Base>
    0.00 :   65274:  je     65285 <make_child@@Base+0x355>
    0.00 :   65276:  movl   $0x0,0xf4814(%rip)        # 159a94 <already_making_children@@Base>
    0.00 :   65280:  call   5e7d0 <start_pipeline@@Base>
    0.00 :   65285:  mov    $0x1,%esi
    0.00 :   6528a:  lea    0xeb1ff(%rip),%rdi        # 150490 <array_needs_making@@Base+0x4>
    0.00 :   65291:  movl   $0x7e,0xf41a1(%rip)        # 15943c <last_command_exit_value@@Base>
    0.00 :   6529b:  movl   $0x7e,0xeb1eb(%rip)        # 150490 <array_needs_making@@Base+0x4>
    0.00 :   652a5:  call   5c290 <set_pipestatus_array@@Base>
    0.00 :   652aa:  call   89eb0 <throw_to_top_level@@Base>
    0.00 :   652af:  mov    0xeb1cf(%rip),%edi        # 150484 <job_control@@Base>
    0.00 :   652b5:  mov    0xf4545(%rip),%esi        # 159800 <pipeline_pgrp@@Base>
    0.00 :   652bb:  test   %edi,%edi
    0.00 :   652bd:  jne    650e4 <make_child@@Base+0x1b4>
    0.00 :   652c3:  nopl   0x0(%rax,%rax,1)
    0.00 :   652c8:  test   %esi,%esi
    0.00 :   652ca:  jne    650f7 <make_child@@Base+0x1c7>
    0.00 :   652d0:  mov    0xeb1aa(%rip),%eax        # 150480 <shell_pgrp@@Base>
    0.00 :   652d6:  mov    %eax,0xf4524(%rip)        # 159800 <pipeline_pgrp@@Base>
    0.00 :   652dc:  jmp    650f7 <make_child@@Base+0x1c7>
    0.00 :   652e1:  nopl   0x0(%rax)
    0.00 :   652e8:  orl    $0x100,0xf408a(%rip)        # 15937c <subshell_environment@@Base>
    0.00 :   652f2:  call   300e0 <getpid@plt>
    0.00 :   652f7:  mov    0xeb1d7(%rip),%edi        # 1504d4 <default_buffered_input@@Base>
    0.00 :   652fd:  mov    %eax,%r12d
    0.00 :   65300:  test   %edi,%edi
    0.00 :   65302:  jle    65327 <make_child@@Base+0x3f7>
    0.00 :   65304:  call   83d40 <close_buffered_fd@@Base>
    0.00 :   65309:  movl   $0xffffffff,0xf3efd(%rip)        # 159210 <bash_input@@Base+0x10>
    0.00 :   65313:  movl   $0xffffffff,0xeb1b7(%rip)        # 1504d4 <default_buffered_input@@Base>
    0.00 :   6531d:  movl   $0x0,0xf3ed9(%rip)        # 159200 <bash_input@@Base>
    0.00 :   65327:  xor    %edx,%edx
    0.00 :   65329:  mov    $0x2,%edi
    0.00 :   6532e:  lea    0xf3deb(%rip),%rsi        # 159120 <top_level_mask@@Base>
    0.00 :   65335:  movl   $0x0,0xf3e65(%rip)        # 1591a4 <interrupt_state@@Base>
    0.00 :   6533f:  call   2fe80 <sigprocmask@plt>
    0.00 :   65344:  mov    0xeb139(%rip),%r9d        # 150484 <job_control@@Base>
    0.00 :   6534b:  test   %r9d,%r9d
    0.00 :   6534e:  jne    65478 <make_child@@Base+0x548>
    0.00 :   65354:  mov    0xf44a5(%rip),%r8d        # 159800 <pipeline_pgrp@@Base>
    0.00 :   6535b:  test   %r8d,%r8d
    0.00 :   6535e:  jne    6536c <make_child@@Base+0x43c>
    0.00 :   65360:  mov    0xeb11a(%rip),%eax        # 150480 <shell_pgrp@@Base>
    0.00 :   65366:  mov    %eax,0xf4494(%rip)        # 159800 <pipeline_pgrp@@Base>
    0.00 :   6536c:  call   62780 <default_tty_job_signals@@Base>
    0.00 :   65371:  mov    0xec531(%rip),%edi        # 1518a8 <pgrp_pipe@@Base>
    0.00 :   65377:  test   %edi,%edi
    0.00 :   65379:  js     65380 <make_child@@Base+0x450>
    0.00 :   6537b:  call   30390 <close@plt>
    0.00 :   65380:  mov    0xec526(%rip),%edi        # 1518ac <pgrp_pipe@@Base+0x4>
    0.00 :   65386:  test   %edi,%edi
    0.00 :   65388:  js     6538f <make_child@@Base+0x45f>
    0.00 :   6538a:  call   30390 <close@plt>
    0.00 :   6538f:  mov    0xbee0a(%rip),%rax        # 1241a0 <is_basic_table@@Base+0x20>
    0.00 :   65396:  mov    %rax,0xec50b(%rip)        # 1518a8 <pgrp_pipe@@Base>
    0.00 :   6539d:  mov    0xec44d(%rip),%eax        # 1517f0 <last_asynchronous_pid@@Base>
    0.00 :   653a3:  cmp    %r12d,%eax
    0.00 :   653a6:  jne    653b8 <make_child@@Base+0x488>
    0.00 :   653a8:  movl   $0x1,0xec43e(%rip)        # 1517f0 <last_asynchronous_pid@@Base>
    0.00 :   653b2:  nopw   0x0(%rax,%rax,1)
    0.00 :   653b8:  mov    0x2e8(%rsp),%rax
    0.00 :   653c0:  sub    %fs:0x28,%rax
    0.00 :   653c9:  jne    65684 <make_child@@Base+0x754>
    0.00 :   653cf:  add    $0x2f8,%rsp
    0.00 :   653d6:  mov    %ebx,%eax
    0.00 :   653d8:  pop    %rbx
    0.00 :   653d9:  pop    %rbp
    0.00 :   653da:  pop    %r12
    0.00 :   653dc:  pop    %r13
    0.00 :   653de:  pop    %r14
    0.00 :   653e0:  pop    %r15
    0.00 :   653e2:  ret
    0.00 :   653e3:  nopl   0x0(%rax,%rax,1)
    0.00 :   653e8:  lea    0x1b8(%rsp),%rdi
    0.00 :   653f0:  lea    0x1b0(%rsp),%rbx
    0.00 :   653f8:  movq   $0x0,0x1b0(%rsp)
    0.00 :   65404:  movl   $0x0,0x238(%rsp)
    0.00 :   6540f:  lea    0x250(%rsp),%rbp
    0.00 :   65417:  call   30510 <sigemptyset@plt>
    0.00 :   6541c:  lea    0x258(%rsp),%rdi
    0.00 :   65424:  call   30510 <sigemptyset@plt>
    0.00 :   65429:  mov    %rbp,%rdx
    0.00 :   6542c:  mov    %rbx,%rsi
    0.00 :   6542f:  mov    $0xf,%edi
    0.00 :   65434:  call   30010 <sigaction@plt>
    0.00 :   65439:  movq   $0x0,0x18(%rsp)
    0.00 :   65442:  test   %eax,%eax
    0.00 :   65444:  jne    64ff0 <make_child@@Base+0xc0>
    0.00 :   6544a:  mov    0x250(%rsp),%rax
    0.00 :   65452:  mov    %rax,0x18(%rsp)
    0.00 :   65457:  jmp    64ff0 <make_child@@Base+0xc0>
    0.00 :   6545c:  nopl   0x0(%rax)
    0.00 :   65460:  mov    0x18(%rsp),%rsi
    0.00 :   65465:  mov    $0xf,%edi
    0.00 :   6546a:  call   84e40 <set_signal_handler@@Base>
    0.00 :   6546f:  jmp    65250 <make_child@@Base+0x320>
    0.00 :   65474:  nopl   0x0(%rax)
    0.00 :   65478:  mov    0xf4382(%rip),%eax        # 159800 <pipeline_pgrp@@Base>
    0.00 :   6547e:  test   %eax,%eax
    0.00 :   65480:  jne    6548c <make_child@@Base+0x55c>
    0.00 :   65482:  mov    %r12d,0xf4377(%rip)        # 159800 <pipeline_pgrp@@Base>
    0.00 :   65489:  mov    %r12d,%eax
    0.00 :   6548c:  cmp    %eax,0xeafee(%rip)        # 150480 <shell_pgrp@@Base>
    0.00 :   65492:  je     655fd <make_child@@Base+0x6cd>
    0.00 :   65498:  call   62780 <default_tty_job_signals@@Base>
    0.00 :   6549d:  mov    0xf435d(%rip),%esi        # 159800 <pipeline_pgrp@@Base>
    0.00 :   654a3:  mov    %r12d,%edi
    0.00 :   654a6:  call   30a40 <setpgid@plt>
    0.00 :   654ab:  test   %eax,%eax
    0.00 :   654ad:  js     65641 <make_child@@Base+0x711>
    0.00 :   654b3:  mov    0xf4347(%rip),%edi        # 159800 <pipeline_pgrp@@Base>
    0.00 :   654b9:  cmp    %edi,0xeafc1(%rip)        # 150480 <shell_pgrp@@Base>
    0.00 :   654bf:  je     654de <make_child@@Base+0x5ae>
    0.00 :   654c1:  mov    0xf3eb5(%rip),%edx        # 15937c <subshell_environment@@Base>
    0.00 :   654c7:  mov    (%rsp),%eax
    0.00 :   654ca:  and    $0x11,%edx
    0.00 :   654cd:  and    $0x5,%eax
    0.00 :   654d0:  or     0xf3eaa(%rip),%edx        # 159380 <running_in_background@@Base>
    0.00 :   654d6:  or     %eax,%edx
    0.00 :   654d8:  je     6562f <make_child@@Base+0x6ff>
    0.00 :   654de:  cmp    %edi,%r12d
    0.00 :   654e1:  jne    65371 <make_child@@Base+0x441>
    0.00 :   654e7:  mov    0xec3bf(%rip),%edi        # 1518ac <pgrp_pipe@@Base+0x4>
    0.00 :   654ed:  test   %edi,%edi
    0.00 :   654ef:  js     65500 <make_child@@Base+0x5d0>
    0.00 :   654f1:  call   30390 <close@plt>
    0.00 :   654f6:  movl   $0xffffffff,0xec3ac(%rip)        # 1518ac <pgrp_pipe@@Base+0x4>
    0.00 :   65500:  mov    0xec3a2(%rip),%edi        # 1518a8 <pgrp_pipe@@Base>
    0.00 :   65506:  test   %edi,%edi
    0.00 :   65508:  js     65380 <make_child@@Base+0x450>
    0.00 :   6550e:  lea    0x28(%rsp),%rbp
    0.00 :   65513:  jmp    6552c <make_child@@Base+0x5fc>
    0.00 :   65515:  nopl   (%rax)
    0.00 :   65518:  call   2ff40 <__errno_location@plt>
    0.00 :   6551d:  mov    0xec385(%rip),%edi        # 1518a8 <pgrp_pipe@@Base>
    0.00 :   65523:  cmpl   $0x4,(%rax)
    0.00 :   65526:  jne    65377 <make_child@@Base+0x447>
    0.00 :   6552c:  mov    $0x1,%edx
    0.00 :   65531:  mov    %rbp,%rsi
    0.00 :   65534:  call   30410 <read@plt>
    0.00 :   65539:  cmp    $0xffffffffffffffff,%rax
    0.00 :   6553d:  je     65518 <make_child@@Base+0x5e8>
    0.00 :   6553f:  jmp    65371 <make_child@@Base+0x441>
    0.00 :   65544:  cmp    0xeaf36(%rip),%edi        # 150480 <shell_pgrp@@Base>
    0.00 :   6554a:  je     6526c <make_child@@Base+0x33c>
    0.00 :   65550:  mov    $0xf,%esi
    0.00 :   65555:  call   306a0 <killpg@plt>
    0.00 :   6555a:  mov    0xf42a0(%rip),%edi        # 159800 <pipeline_pgrp@@Base>
    0.00 :   65560:  mov    $0x12,%esi
    0.00 :   65565:  call   306a0 <killpg@plt>
    0.00 :   6556a:  jmp    6526c <make_child@@Base+0x33c>
    0.00 :   6556f:  nop
    0.00 :   65570:  mov    0xec27a(%rip),%eax        # 1517f0 <last_asynchronous_pid@@Base>
    0.00 :   65576:  cmp    %ebx,%eax
    0.00 :   65578:  jne    651c0 <make_child@@Base+0x290>
    0.00 :   6557e:  movl   $0x1,0xec268(%rip)        # 1517f0 <last_asynchronous_pid@@Base>
    0.00 :   65588:  jmp    651c0 <make_child@@Base+0x290>
    0.00 :   6558d:  nopl   (%rax)
    0.00 :   65590:  mov    0x18(%r14),%r12
    0.00 :   65594:  movslq 0x8(%r14),%r13
    0.00 :   65598:  xor    %edi,%edi
    0.00 :   6559a:  mov    $0x5,%edx
    0.00 :   6559f:  lea    0xc0032(%rip),%rsi        # 1255d8 <build_version@@Base+0xd18>
    0.00 :   655a6:  call   301a0 <dcgettext@plt>
    0.00 :   655ab:  mov    %r12,%rdx
    0.00 :   655ae:  mov    %r13,%rsi
    0.00 :   655b1:  mov    %rax,%rdi
    0.00 :   655b4:  xor    %eax,%eax
    0.00 :   655b6:  call   5e0e0 <internal_warning@@Base>
    0.00 :   655bb:  jmp    6513c <make_child@@Base+0x20c>
    0.00 :   655c0:  mov    %r12,(%r12)
    0.00 :   655c4:  jmp    651ae <make_child@@Base+0x27e>
    0.00 :   655c9:  nopl   0x0(%rax)
    0.00 :   655d0:  mov    0xec186(%rip),%ecx        # 15175c <js@@Base+0x1c>
    0.00 :   655d6:  test   %ecx,%ecx
    0.00 :   655d8:  je     6520d <make_child@@Base+0x2dd>
    0.00 :   655de:  mov    0xf33cc(%rip),%edx        # 1589b0 <here_doc_first_line@@Base+0x4>
    0.00 :   655e4:  test   %edx,%edx
    0.00 :   655e6:  jne    6520d <make_child@@Base+0x2dd>
    0.00 :   655ec:  mov    $0x2,%esi
    0.00 :   655f1:  mov    %eax,%edi
    0.00 :   655f3:  call   649e0 <set_tty_state@@Base+0x80>
    0.00 :   655f8:  jmp    6520d <make_child@@Base+0x2dd>
    0.00 :   655fd:  mov    $0x1,%esi
    0.00 :   65602:  mov    $0x14,%edi
    0.00 :   65607:  call   84e40 <set_signal_handler@@Base>
    0.00 :   6560c:  mov    $0x1,%esi
    0.00 :   65611:  mov    $0x15,%edi
    0.00 :   65616:  call   84e40 <set_signal_handler@@Base>
    0.00 :   6561b:  mov    $0x1,%esi
    0.00 :   65620:  mov    $0x16,%edi
    0.00 :   65625:  call   84e40 <set_signal_handler@@Base>
    0.00 :   6562a:  jmp    6549d <make_child@@Base+0x56d>
    0.00 :   6562f:  xor    %esi,%esi
    0.00 :   65631:  call   62bc0 <give_terminal_to@@Base>
    0.00 :   65636:  mov    0xf41c4(%rip),%edi        # 159800 <pipeline_pgrp@@Base>
    0.00 :   6563c:  jmp    654de <make_child@@Base+0x5ae>
    0.00 :   65641:  movslq 0xf41b8(%rip),%rbp        # 159800 <pipeline_pgrp@@Base>
    0.00 :   65648:  xor    %edi,%edi
    0.00 :   6564a:  mov    $0x5,%edx
    0.00 :   6564f:  lea    0xbfbd2(%rip),%rsi        # 125228 <build_version@@Base+0x968>
    0.00 :   65656:  call   301a0 <dcgettext@plt>
    0.00 :   6565b:  movslq %r12d,%rsi
    0.00 :   6565e:  mov    %rax,%rdi
    0.00 :   65661:  mov    %rbp,%rdx
    0.00 :   65664:  xor    %eax,%eax
    0.00 :   65666:  call   5e6b0 <sys_error@@Base>
    0.00 :   6566b:  jmp    654b3 <make_child@@Base+0x583>
    0.00 :   65670:  mov    0x18(%rsp),%rsi
    0.00 :   65675:  mov    $0xf,%edi
    0.00 :   6567a:  call   84e40 <set_signal_handler@@Base>
    0.00 :   6567f:  jmp    650d0 <make_child@@Base+0x1a0>
    0.00 :   65684:  call   30200 <__stack_chk_fail@plt>
    0.00 :   65689:  mov    $0x20,%esi
    0.00 :   6568e:  lea    0xac975(%rip),%rdi        # 11200a <_IO_stdin_used@@Base+0xa>
    0.00 :   65695:  xor    %eax,%eax
    0.00 :   65697:  call   a1f40 <filter_stringlist@@Base+0x1a0>
    0.00 :   6569c:  jmp    6515a <make_child@@Base+0x22a>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[53a60]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000053a60 <hack_digit>:
         : 6     hack_digit():
  100.00 :   53a60:  push   %rbp // libc.so.6[53a60]
    0.00 :   53a61:  push   %rbx
    0.00 :   53a62:  mov    %rdi,%rbx
    0.00 :   53a65:  sub    $0x8,%rsp
    0.00 :   53a69:  mov    (%rdi),%eax
    0.00 :   53a6b:  test   %eax,%eax
    0.00 :   53a6d:  je     53a79 <hack_digit+0x19>
    0.00 :   53a6f:  cmpl   $0x66,0x4(%rdi)
    0.00 :   53a73:  je     53b60 <hack_digit+0x100>
    0.00 :   53a79:  mov    0x28(%rbx),%r9
    0.00 :   53a7d:  mov    0x18(%rbx),%rdx
    0.00 :   53a81:  mov    0x10(%rbx),%rdi
    0.00 :   53a85:  test   %r9,%r9
    0.00 :   53a88:  je     53b30 <hack_digit+0xd0>
    0.00 :   53a8e:  cmp    %rdx,%r9
    0.00 :   53a91:  jle    53ad0 <hack_digit+0x70>
    0.00 :   53a93:  mov    $0x30,%ebp
    0.00 :   53a98:  mov    $0xa,%ecx
    0.00 :   53a9d:  mov    %rdi,%rsi
    0.00 :   53aa0:  call   4e4c0 <__mpn_mul_1>
    0.00 :   53aa5:  test   %rax,%rax
    0.00 :   53aa8:  je     53abe <hack_digit+0x5e>
    0.00 :   53aaa:  mov    0x18(%rbx),%rdx
    0.00 :   53aae:  mov    0x10(%rbx),%rcx
    0.00 :   53ab2:  lea    0x1(%rdx),%rsi
    0.00 :   53ab6:  mov    %rsi,0x18(%rbx)
    0.00 :   53aba:  mov    %rax,(%rcx,%rdx,8)
    0.00 :   53abe:  add    $0x8,%rsp
    0.00 :   53ac2:  mov    %ebp,%eax
    0.00 :   53ac4:  pop    %rbx
    0.00 :   53ac5:  pop    %rbp
    0.00 :   53ac6:  ret
    0.00 :   53ac7:  nopw   0x0(%rax,%rax,1)
    0.00 :   53ad0:  mov    %rdx,%rcx
    0.00 :   53ad3:  mov    0x20(%rbx),%r8
    0.00 :   53ad7:  mov    %rdi,%rdx
    0.00 :   53ada:  mov    0x30(%rbx),%rdi
    0.00 :   53ade:  xor    %esi,%esi
    0.00 :   53ae0:  call   4d8a0 <__mpn_divrem>
    0.00 :   53ae5:  mov    0x30(%rbx),%rdx
    0.00 :   53ae9:  mov    %rax,%rcx
    0.00 :   53aec:  mov    0x18(%rbx),%rax
    0.00 :   53af0:  sub    0x28(%rbx),%rax
    0.00 :   53af4:  mov    %rcx,(%rdx,%rax,8)
    0.00 :   53af8:  mov    0x28(%rbx),%rax
    0.00 :   53afc:  mov    (%rdx),%rbp
    0.00 :   53aff:  mov    %rax,0x18(%rbx)
    0.00 :   53b03:  test   %rax,%rax
    0.00 :   53b06:  je     53b80 <hack_digit+0x120>
    0.00 :   53b08:  mov    0x10(%rbx),%rdi
    0.00 :   53b0c:  jmp    53b1a <hack_digit+0xba>
    0.00 :   53b0e:  xchg   %ax,%ax
    0.00 :   53b10:  sub    $0x1,%rax
    0.00 :   53b14:  mov    %rax,0x18(%rbx)
    0.00 :   53b18:  je     53b80 <hack_digit+0x120>
    0.00 :   53b1a:  cmpq   $0x0,-0x8(%rdi,%rax,8)
    0.00 :   53b20:  je     53b10 <hack_digit+0xb0>
    0.00 :   53b22:  mov    0x18(%rbx),%rdx
    0.00 :   53b26:  add    $0x30,%ebp
    0.00 :   53b29:  jmp    53a98 <hack_digit+0x38>
    0.00 :   53b2e:  xchg   %ax,%ax
    0.00 :   53b30:  lea    -0x8(%rdi,%rdx,8),%rbx
    0.00 :   53b35:  mov    $0xa,%ecx
    0.00 :   53b3a:  sub    $0x1,%rdx
    0.00 :   53b3e:  mov    %rdi,%rsi
    0.00 :   53b41:  mov    (%rbx),%rbp
    0.00 :   53b44:  call   4e4c0 <__mpn_mul_1>
    0.00 :   53b49:  mov    %rax,(%rbx)
    0.00 :   53b4c:  add    $0x30,%ebp
    0.00 :   53b4f:  add    $0x8,%rsp
    0.00 :   53b53:  mov    %ebp,%eax
    0.00 :   53b55:  pop    %rbx
    0.00 :   53b56:  pop    %rbp
    0.00 :   53b57:  ret
    0.00 :   53b58:  nopl   0x0(%rax,%rax,1)
    0.00 :   53b60:  mov    0x8(%rdi),%eax
    0.00 :   53b63:  mov    $0x30,%ebp
    0.00 :   53b68:  lea    -0x1(%rax),%edx
    0.00 :   53b6b:  mov    %edx,0x8(%rdi)
    0.00 :   53b6e:  test   %eax,%eax
    0.00 :   53b70:  jle    53a79 <hack_digit+0x19>
    0.00 :   53b76:  add    $0x8,%rsp
    0.00 :   53b7a:  mov    %ebp,%eax
    0.00 :   53b7c:  pop    %rbx
    0.00 :   53b7d:  pop    %rbp
    0.00 :   53b7e:  ret
    0.00 :   53b7f:  nop
    0.00 :   53b80:  movq   $0x1,0x18(%rbx)
    0.00 :   53b88:  add    $0x30,%ebp
    0.00 :   53b8b:  add    $0x8,%rsp
    0.00 :   53b8f:  mov    %ebp,%eax
    0.00 :   53b91:  pop    %rbx
    0.00 :   53b92:  pop    %rbp
    0.00 :   53b93:  ret

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   58.54 dbt2-driver[410319]
   41.46 dbt2-driver[41043c]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000410319 <generate_payment_data>:
         : 6      generate_payment_data():
   58.54 :   410319: push   %rbp // dbt2-driver[410319]
    0.00 :   41031a: mov    %rsp,%rbp
    0.00 :   41031d: sub    $0x20,%rsp
    0.00 :   410321: mov    %rdi,-0x8(%rbp)
    0.00 :   410325: mov    %esi,-0xc(%rbp)
    0.00 :   410328: mov    %rdx,-0x18(%rbp)
    0.00 :   41032c: mov    -0x18(%rbp),%rax
    0.00 :   410330: mov    $0x2ed8,%edx
    0.00 :   410335: mov    $0x0,%esi
    0.00 :   41033a: mov    %rax,%rdi
    0.00 :   41033d: call   407180 <memset@plt>
    0.00 :   410342: mov    -0x18(%rbp),%rax
    0.00 :   410346: mov    -0xc(%rbp),%edx
    0.00 :   410349: mov    %edx,0x18(%rax)
    0.00 :   41034c: mov    -0x8(%rbp),%rax
    0.00 :   410350: mov    $0xa,%esi
    0.00 :   410355: mov    %rax,%rdi
    0.00 :   410358: call   407ff5 <get_random>
    0.00 :   41035d: lea    0x1(%rax),%edx
    0.00 :   410360: mov    -0x18(%rbp),%rax
    0.00 :   410364: mov    %edx,0x8(%rax)
    0.00 :   410367: mov    -0x8(%rbp),%rax
    0.00 :   41036b: mov    $0x64,%esi
    0.00 :   410370: mov    %rax,%rdi
    0.00 :   410373: call   407ff5 <get_random>
    0.00 :   410378: cmp    $0x3b,%rax
    0.00 :   41037c: jg     4103ba <generate_payment_data+0xa1>
    0.00 :   41037e: mov    -0x18(%rbp),%rax
    0.00 :   410382: movl   $0x0,0x1c(%rax)
    0.00 :   410389: mov    -0x8(%rbp),%rax
    0.00 :   41038d: mov    $0x3e7,%ecx
    0.00 :   410392: mov    $0x0,%edx
    0.00 :   410397: mov    $0xff,%esi
    0.00 :   41039c: mov    %rax,%rdi
    0.00 :   41039f: call   407f17 <get_nurand>
    0.00 :   4103a4: mov    %eax,%edx
    0.00 :   4103a6: mov    -0x18(%rbp),%rax
    0.00 :   4103aa: add    $0x20,%rax
    0.00 :   4103ae: mov    %edx,%esi
    0.00 :   4103b0: mov    %rax,%rdi
    0.00 :   4103b3: call   407c99 <get_c_last>
    0.00 :   4103b8: jmp    4103dc <generate_payment_data+0xc3>
    0.00 :   4103ba: mov    -0x8(%rbp),%rax
    0.00 :   4103be: mov    $0xbb8,%ecx
    0.00 :   4103c3: mov    $0x1,%edx
    0.00 :   4103c8: mov    $0x3ff,%esi
    0.00 :   4103cd: mov    %rax,%rdi
    0.00 :   4103d0: call   407f17 <get_nurand>
    0.00 :   4103d5: mov    -0x18(%rbp),%rdx
    0.00 :   4103d9: mov    %eax,0x1c(%rdx)
    0.00 :   4103dc: mov    0x7092(%rip),%eax        # 417474 <mode_altered>
    0.00 :   4103e2: cmp    $0x1,%eax
    0.00 :   4103e5: je     4103fe <generate_payment_data+0xe5>
    0.00 :   4103e7: mov    -0x8(%rbp),%rax
    0.00 :   4103eb: mov    $0x64,%esi
    0.00 :   4103f0: mov    %rax,%rdi
    0.00 :   4103f3: call   407ff5 <get_random>
    0.00 :   4103f8: cmp    $0x54,%rax
    0.00 :   4103fc: jg     41041a <generate_payment_data+0x101>
    0.00 :   4103fe: mov    -0x18(%rbp),%rax
    0.00 :   410402: mov    -0xc(%rbp),%edx
    0.00 :   410405: mov    %edx,0x4(%rax)
    0.00 :   410408: mov    -0x18(%rbp),%rax
    0.00 :   41040c: mov    0x8(%rax),%edx
    0.00 :   41040f: mov    -0x18(%rbp),%rax
    0.00 :   410413: mov    %edx,(%rax)
    0.00 :   410415: jmp    4104af <generate_payment_data+0x196>
    0.00 :   41041a: mov    -0x8(%rbp),%rax
    0.00 :   41041e: mov    $0xa,%esi
    0.00 :   410423: mov    %rax,%rdi
    0.00 :   410426: call   407ff5 <get_random>
    0.00 :   41042b: add    $0x1,%eax
    0.00 :   41042e: mov    %eax,%edx
    0.00 :   410430: mov    -0x18(%rbp),%rax
    0.00 :   410434: mov    %edx,(%rax)
    0.00 :   410436: mov    0x6f04(%rip),%eax        # 417340 <table_cardinality>
   41.46 :   41043c: cmp    $0x1,%eax // dbt2-driver[41043c]
    0.00 :   41043f: jle    4104a4 <generate_payment_data+0x18b>
    0.00 :   410441: mov    0x6ef9(%rip),%eax        # 417340 <table_cardinality>
    0.00 :   410447: sub    $0x1,%eax
    0.00 :   41044a: movslq %eax,%rdx
    0.00 :   41044d: mov    -0x8(%rbp),%rax
    0.00 :   410451: mov    %rdx,%rsi
    0.00 :   410454: mov    %rax,%rdi
    0.00 :   410457: call   407ff5 <get_random>
    0.00 :   41045c: lea    0x1(%rax),%edx
    0.00 :   41045f: mov    -0x18(%rbp),%rax
    0.00 :   410463: mov    %edx,0x4(%rax)
    0.00 :   410466: mov    -0x18(%rbp),%rax
    0.00 :   41046a: mov    0x4(%rax),%eax
    0.00 :   41046d: cmp    %eax,-0xc(%rbp)
    0.00 :   410470: jg     41048c <generate_payment_data+0x173>
    0.00 :   410472: mov    -0x18(%rbp),%rax
    0.00 :   410476: mov    0x4(%rax),%eax
    0.00 :   410479: add    $0x1,%eax
    0.00 :   41047c: mov    0x6ebe(%rip),%ecx        # 417340 <table_cardinality>
    0.00 :   410482: cltd
    0.00 :   410483: idiv   %ecx
    0.00 :   410485: mov    -0x18(%rbp),%rax
    0.00 :   410489: mov    %edx,0x4(%rax)
    0.00 :   41048c: mov    -0x18(%rbp),%rax
    0.00 :   410490: mov    0x4(%rax),%eax
    0.00 :   410493: test   %eax,%eax
    0.00 :   410495: jne    4104af <generate_payment_data+0x196>
    0.00 :   410497: mov    -0x18(%rbp),%rax
    0.00 :   41049b: movl   $0x1,0x4(%rax)
    0.00 :   4104a2: jmp    4104af <generate_payment_data+0x196>
    0.00 :   4104a4: mov    -0x18(%rbp),%rax
    0.00 :   4104a8: movl   $0x1,0x4(%rax)
    0.00 :   4104af: mov    -0x8(%rbp),%rax
    0.00 :   4104b3: mov    $0x7a120,%esi
    0.00 :   4104b8: mov    %rax,%rdi
    0.00 :   4104bb: call   407ff5 <get_random>
    0.00 :   4104c0: add    $0x65,%rax
    0.00 :   4104c4: pxor   %xmm0,%xmm0
    0.00 :   4104c8: cvtsi2sd %rax,%xmm0
    0.00 :   4104cd: movsd  0x2683(%rip),%xmm1        # 412b58 <transaction_short_name+0x1560>
    0.00 :   4104d5: divsd  %xmm1,%xmm0
    0.00 :   4104d9: mov    -0x18(%rbp),%rax
    0.00 :   4104dd: movsd  %xmm0,0x10(%rax)
    0.00 :   4104e2: mov    $0x1,%eax
    0.00 :   4104e7: leave
    0.00 :   4104e8: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[172480]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000001723c0 <__strcspn_sse42>:
         : 6      __strcspn_sse42():
    0.00 :   1723c0: endbr64
    0.00 :   1723c4: cmpb   $0x0,(%rsi)
    0.00 :   1723c7: je     1724b0 <__strcspn_sse42+0xf0>
    0.00 :   1723cd: mov    %esi,%ecx
    0.00 :   1723cf: and    $0xf,%ecx
    0.00 :   1723d2: jne    172440 <__strcspn_sse42+0x80>
    0.00 :   1723d4: movdqu (%rsi),%xmm1
    0.00 :   1723d8: pxor   %xmm0,%xmm0
    0.00 :   1723dc: pcmpeqb %xmm1,%xmm0
    0.00 :   1723e0: pmovmskb %xmm0,%eax
    0.00 :   1723e4: test   %eax,%eax
    0.00 :   1723e6: jne    1723f2 <__strcspn_sse42+0x32>
    0.00 :   1723e8: cmpb   $0x0,0x10(%rsi)
    0.00 :   1723ec: jne    1724d0 <__strcspn_sse42+0x110>
    0.00 :   1723f2: mov    %edi,%edx
    0.00 :   1723f4: and    $0xf,%edx
    0.00 :   1723f7: je     17247b <__strcspn_sse42+0xbb>
    0.00 :   1723fd: lea    0x200bc(%rip),%rsi        # 1924c0 <___m128i_shift_right>
    0.00 :   172404: mov    %rdi,%rax
    0.00 :   172407: mov    %edx,%ecx
    0.00 :   172409: and    $0xfffffffffffffff0,%rax
    0.00 :   17240d: movdqu (%rsi,%rcx,1),%xmm2
    0.00 :   172412: movdqa (%rax),%xmm0
    0.00 :   172416: pshufb %xmm2,%xmm0
    0.00 :   17241b: pcmpistri $0x2,%xmm0,%xmm1
    0.00 :   172421: jb     1724d8 <__strcspn_sse42+0x118>
    0.00 :   172427: mov    $0x10,%esi
    0.00 :   17242c: pcmpistri $0x3a,%xmm0,%xmm0
    0.00 :   172432: add    $0x10,%rax
    0.00 :   172436: sub    %edx,%esi
    0.00 :   172438: cmp    %esi,%ecx
    0.00 :   17243a: jae    172488 <__strcspn_sse42+0xc8>
    0.00 :   17243c: movslq %ecx,%rax
    0.00 :   17243f: ret
    0.00 :   172440: mov    %rsi,%rax
    0.00 :   172443: pxor   %xmm0,%xmm0
    0.00 :   172447: and    $0xfffffffffffffff0,%rax
    0.00 :   17244b: movdqa (%rax),%xmm1
    0.00 :   17244f: pcmpeqb %xmm1,%xmm0
    0.00 :   172453: pmovmskb %xmm0,%eax
    0.00 :   172457: sar    %cl,%eax
    0.00 :   172459: test   %eax,%eax
    0.00 :   17245b: je     1723d4 <__strcspn_sse42+0x14>
    0.00 :   172461: mov    %ecx,%ecx
    0.00 :   172463: lea    0x20056(%rip),%rsi        # 1924c0 <___m128i_shift_right>
    0.00 :   17246a: mov    %edi,%edx
    0.00 :   17246c: movdqu (%rsi,%rcx,1),%xmm0
    0.00 :   172471: pshufb %xmm0,%xmm1
    0.00 :   172476: and    $0xf,%edx
    0.00 :   172479: jne    172404 <__strcspn_sse42+0x44>
    0.00 :   17247b: mov    %rdi,%rax
    0.00 :   17247e: jmp    172488 <__strcspn_sse42+0xc8>
  100.00 :   172480: test   %esi,%esi // libc.so.6[172480]
    0.00 :   172482: jne    1724b8 <__strcspn_sse42+0xf8>
    0.00 :   172484: add    $0x10,%rax
    0.00 :   172488: movdqa (%rax),%xmm4
    0.00 :   17248c: mov    $0x0,%edx
    0.00 :   172491: pcmpistri $0x2,%xmm4,%xmm1
    0.00 :   172497: sete   %sil
    0.00 :   17249b: setb   %dl
    0.00 :   17249e: movzbl %sil,%esi
    0.00 :   1724a2: test   %edx,%edx
    0.00 :   1724a4: je     172480 <__strcspn_sse42+0xc0>
    0.00 :   1724a6: mov    %ecx,%ecx
    0.00 :   1724a8: add    %rcx,%rax
    0.00 :   1724ab: sub    %rdi,%rax
    0.00 :   1724ae: ret
    0.00 :   1724af: nop
    0.00 :   1724b0: jmp    26490 <*ABS*+0xa17f0@plt>
    0.00 :   1724b5: nopl   (%rax)
    0.00 :   1724b8: pcmpistri $0x3a,%xmm4,%xmm4
    0.00 :   1724be: movslq %ecx,%rcx
    0.00 :   1724c1: add    %rcx,%rax
    0.00 :   1724c4: sub    %rdi,%rax
    0.00 :   1724c7: ret
    0.00 :   1724c8: nopl   0x0(%rax,%rax,1)
    0.00 :   1724d0: jmp    b2f20 <__strcspn_generic>
    0.00 :   1724d5: nopl   (%rax)
    0.00 :   1724d8: mov    %ecx,%eax
    0.00 :   1724da: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

  106.72 [virtio_net][390]
   46.64 [virtio_net][3c8]
   46.64 [virtio_net][3c6]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (2 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000390 <free_old_xmit_skbs>:
         : 6   free_old_xmit_skbs():
   53.36 :   390:    call   395 <free_old_xmit_skbs+0x5> // [virtio_net][390]
    0.00 :   395:    push   %r14
    0.00 :   397:    movzbl %sil,%r14d
    0.00 :   39b:    push   %r13
    0.00 :   39d:    mov    %rdi,%r13
    0.00 :   3a0:    push   %r12
    0.00 :   3a2:    xor    %r12d,%r12d
    0.00 :   3a5:    push   %rbp
    0.00 :   3a6:    xor    %ebp,%ebp
    0.00 :   3a8:    push   %rbx
    0.00 :   3a9:    sub    $0x8,%rsp
    0.00 :   3ad:    movl   $0x0,0x4(%rsp)
    0.00 :   3b5:    jmp    3d0 <free_old_xmit_skbs+0x40>
    0.00 :   3b7:    test   $0x1,%bl
    0.00 :   3ba:    jne    421 <free_old_xmit_skbs+0x91>
    0.00 :   3bc:    xchg   %ax,%ax
    0.00 :   3be:    mov    %r14d,%esi
    0.00 :   3c1:    mov    %rbx,%rdi
    0.00 :   3c4:    add    0x70(%rbx),%r12d
   46.64 :   3c8:    call   3cd <free_old_xmit_skbs+0x3d> // [virtio_net][3c8]
    0.00 :   3cd:    add    $0x1,%ebp
    0.00 :   3d0:    mov    0x0(%r13),%rdi
    0.00 :   3d4:    lea    0x4(%rsp),%rsi
    0.00 :   3d9:    call   3de <free_old_xmit_skbs+0x4e>
    0.00 :   3de:    mov    %rax,%rbx
    0.00 :   3e1:    test   %rax,%rax
    0.00 :   3e4:    jne    3b7 <free_old_xmit_skbs+0x27>
    0.00 :   3e6:    test   %ebp,%ebp
    0.00 :   3e8:    je     3f8 <free_old_xmit_skbs+0x68>
    0.00 :   3ea:    add    %r12,0x298(%r13)
    0.00 :   3f1:    add    %rbp,0x290(%r13)
    0.00 :   3f8:    add    $0x8,%rsp
    0.00 :   3fc:    pop    %rbx
    0.00 :   3fd:    pop    %rbp
    0.00 :   3fe:    pop    %r12
    0.00 :   400:    pop    %r13
    0.00 :   402:    pop    %r14
    0.00 :   404:    jmp    409 <free_old_xmit_skbs+0x79>
    0.00 :   409:    mov    %rbx,%rdx
    0.00 :   40c:    mov    $0x0,%rsi
    0.00 :   413:    mov    $0x0,%rdi
    0.00 :   41a:    call   41f <free_old_xmit_skbs+0x8f>
    0.00 :   41f:    jmp    3be <free_old_xmit_skbs+0x2e>
    0.00 :   421:    mov    %rbx,%rdi
    0.00 :   424:    and    $0xfffffffffffffffe,%rdi
    0.00 :   428:    movzwl 0x8(%rdi),%eax
    0.00 :   42c:    add    %eax,%r12d
    0.00 :   42f:    call   434 <free_old_xmit_skbs+0xa4>
    0.00 :   434:    jmp    3cd <free_old_xmit_skbs+0x3d>
         :
         : 57  Disassembly of section .text.unlikely:
         :
         : 59  0000000000000390 <virtnet_validate.cold+0xc6>:
         : 60  virtnet_validate.cold():
   53.36 :   390:    add    %al,(%rax) // [virtio_net][390]
    0.00 :   392:    add    %ch,%cl
    0.00 :   394:    push   %rax
    0.00 :   395:    (bad)
    0.00 :   396:    (bad)
    0.00 :   397:    decl   -0x73(%rax)
    0.00 :   39a:    jnp    3ac <virtnet_validate.cold+0xe2>
    0.00 :   39c:    mov    $0x0,%rcx
    0.00 :   3a3:    mov    $0x0,%rdx
    0.00 :   3aa:    mov    $0x0,%rsi
    0.00 :   3b1:    call   3b6 <virtnet_validate.cold+0xec>
    0.00 :   3b6:    jmp    2e8 <virtnet_validate.cold+0x1e>
    0.00 :   3bb:    lea    0x10(%rdi),%rdi
    0.00 :   3bf:    mov    $0x0,%rdx
   46.64 :   3c6:    mov    $0x0,%rsi // [virtio_net][3c6]
    0.00 :   3cd:    call   3d2 <virtnet_validate.cold+0x108>
    0.00 :   3d2:    jmp    2e8 <virtnet_validate.cold+0x1e>
    0.00 :   3d7:    lea    0x10(%rbx),%rdi
    0.00 :   3db:    mov    $0x0,%rcx
    0.00 :   3e2:    mov    $0x0,%rdx
    0.00 :   3e9:    mov    $0x0,%rsi
    0.00 :   3f0:    call   3f5 <virtnet_validate.cold+0x12b>
    0.00 :   3f5:    jmp    2e8 <virtnet_validate.cold+0x1e>
         :
         : 85  00000000000003fa <receive_buf.cold>:
         : 86  receive_buf.cold():
    0.00 :   3fa:    movzwl 0x2c(%r14),%ecx
    0.00 :   3ff:    movzbl 0x29(%r14),%edx
    0.00 :   404:    mov    $0x0,%rdi
    0.00 :   40b:    mov    (%rsp),%rsi
    0.00 :   40f:    call   414 <receive_buf.cold+0x1a>
    0.00 :   414:    jmp    419 <receive_buf.cold+0x1f>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   57.78 [nf_nat][189a]
   42.22 [nf_nat][1756]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001710 <nf_nat_inet_fn>:
         : 6    nf_nat_inet_fn():
    0.00 :   1710:   call   1715 <nf_nat_inet_fn+0x5>
    0.00 :   1715:   push   %r15
    0.00 :   1717:   push   %r14
    0.00 :   1719:   push   %r13
    0.00 :   171b:   push   %r12
    0.00 :   171d:   push   %rbp
    0.00 :   171e:   push   %rbx
    0.00 :   171f:   sub    $0x10,%rsp
    0.00 :   1723:   mov    0x68(%rsi),%rbx
    0.00 :   1727:   movzbl (%rdx),%r15d
    0.00 :   172b:   cmp    $0x7,%rbx
    0.00 :   172f:   jbe    18d2 <nf_nat_inet_fn+0x1c2>
    0.00 :   1735:   mov    %rdi,%rcx
    0.00 :   1738:   mov    %rsi,%r13
    0.00 :   173b:   mov    %rdx,%r12
    0.00 :   173e:   cmp    $0x4,%r15b
    0.00 :   1742:   je     18ea <nf_nat_inet_fn+0x1da>
    0.00 :   1748:   mov    %rbx,%r14
    0.00 :   174b:   and    $0xfffffffffffffff8,%r14
    0.00 :   174f:   mov    0xb0(%r14),%rax
   42.22 :   1756:   test   %rax,%rax // [nf_nat][1756]
    0.00 :   1759:   je     19e2 <nf_nat_inet_fn+0x2d2>
    0.00 :   175f:   movzbl 0x1(%rax),%edx
    0.00 :   1763:   test   %dl,%dl
    0.00 :   1765:   je     17d8 <nf_nat_inet_fn+0xc8>
    0.00 :   1767:   mov    0xc(%rax),%esi
    0.00 :   176a:   test   %esi,%esi
    0.00 :   176c:   jne    19fb <nf_nat_inet_fn+0x2eb>
    0.00 :   1772:   add    %rdx,%rax
    0.00 :   1775:   and    $0x7,%ebx
    0.00 :   1778:   cmp    $0x2,%ebx
    0.00 :   177b:   ja     18ff <nf_nat_inet_fn+0x1ef>
    0.00 :   1781:   test   %ebx,%ebx
    0.00 :   1783:   jne    17ee <nf_nat_inet_fn+0xde>
    0.00 :   1785:   mov    0x10(%r12),%rdx
    0.00 :   178a:   movzbl (%r12),%r15d
    0.00 :   178f:   test   %rax,%rax
    0.00 :   1792:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   1798:   mov    0x4(%rax),%eax
    0.00 :   179b:   test   %eax,%eax
    0.00 :   179d:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17a3:   cmp    $0x4,%r15b
    0.00 :   17a7:   jne    189a <nf_nat_inet_fn+0x18a>
    0.00 :   17ad:   cmp    $0x2,%ebx
    0.00 :   17b0:   ja     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17b6:   xor    %ebx,%ebx
    0.00 :   17b8:   cmp    0xd8(%rdx),%eax
    0.00 :   17be:   je     1a15 <nf_nat_inet_fn+0x305>
    0.00 :   17c4:   mov    %r13,%rdx
    0.00 :   17c7:   mov    %ebx,%esi
    0.00 :   17c9:   mov    %r14,%rdi
    0.00 :   17cc:   call   17d1 <nf_nat_inet_fn+0xc1>
    0.00 :   17d1:   xor    %eax,%eax
    0.00 :   17d3:   jmp    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   17d8:   and    $0x7,%ebx
    0.00 :   17db:   cmp    $0x2,%ebx
    0.00 :   17de:   ja     18fd <nf_nat_inet_fn+0x1ed>
    0.00 :   17e4:   test   %ebx,%ebx
    0.00 :   17e6:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17ec:   xor    %eax,%eax
    0.00 :   17ee:   cmp    $0x4,%r15b
    0.00 :   17f2:   mov    0x80(%r14),%r8
    0.00 :   17f9:   setne  %bpl
    0.00 :   17fd:   cmp    $0x1,%r15b
    0.00 :   1801:   setne  %dl
    0.00 :   1804:   mov    %r8d,%esi
    0.00 :   1807:   mov    %r8d,%r15d
    0.00 :   180a:   and    $0x80,%esi
    0.00 :   1810:   and    $0x100,%r15d
    0.00 :   1817:   and    %dl,%bpl
    0.00 :   181a:   cmove  %esi,%r15d
    0.00 :   181e:   mov    %bpl,(%rsp)
    0.00 :   1822:   test   %r15d,%r15d
    0.00 :   1825:   jne    1946 <nf_nat_inet_fn+0x236>
    0.00 :   182b:   mov    (%rcx),%rbp
    0.00 :   182e:   test   %rbp,%rbp
    0.00 :   1831:   je     19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1837:   cmpw   $0x0,0x0(%rbp)
    0.00 :   183c:   jne    1854 <nf_nat_inet_fn+0x144>
    0.00 :   183e:   jmp    19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1843:   movzwl 0x0(%rbp),%eax
    0.00 :   1847:   add    $0x1,%r15d
    0.00 :   184b:   cmp    %r15d,%eax
    0.00 :   184e:   jle    19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1854:   movslq %r15d,%rax
    0.00 :   1857:   mov    %r12,%rdx
    0.00 :   185a:   mov    %r13,%rsi
    0.00 :   185d:   shl    $0x4,%rax
    0.00 :   1861:   add    %rbp,%rax
    0.00 :   1864:   mov    0x10(%rax),%rdi
    0.00 :   1868:   mov    0x8(%rax),%rax
    0.00 :   186c:   call   1871 <nf_nat_inet_fn+0x161>
    0.00 :   1871:   cmp    $0x1,%eax
    0.00 :   1874:   jne    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   1876:   mov    0x80(%r14),%rax
    0.00 :   187d:   mov    %eax,%edx
    0.00 :   187f:   and    $0x100,%eax
    0.00 :   1884:   and    $0x80,%edx
    0.00 :   188a:   cmpb   $0x0,(%rsp)
    0.00 :   188e:   cmove  %edx,%eax
    0.00 :   1891:   test   %eax,%eax
    0.00 :   1893:   je     1843 <nf_nat_inet_fn+0x133>
    0.00 :   1895:   movzbl (%r12),%r15d
   57.78 :   189a:   xor    %ecx,%ecx // [nf_nat][189a]
    0.00 :   189c:   cmp    $0x2,%ebx
    0.00 :   189f:   movzbl %r15b,%eax
    0.00 :   18a3:   seta   %cl
    0.00 :   18a6:   cmp    $0x4,%r15b
    0.00 :   18aa:   je     1922 <nf_nat_inet_fn+0x212>
    0.00 :   18ac:   cmp    $0x1,%eax
    0.00 :   18af:   je     1922 <nf_nat_inet_fn+0x212>
    0.00 :   18b1:   mov    $0x1,%esi
    0.00 :   18b6:   mov    $0x20,%eax
    0.00 :   18bb:   mov    %rax,%rdx
    0.00 :   18be:   xor    $0x30,%rdx
    0.00 :   18c2:   cmp    $0x2,%ebx
    0.00 :   18c5:   cmova  %rdx,%rax
    0.00 :   18c9:   and    0x80(%r14),%rax
    0.00 :   18d0:   jne    192b <nf_nat_inet_fn+0x21b>
    0.00 :   18d2:   mov    $0x1,%eax
    0.00 :   18d7:   add    $0x10,%rsp
    0.00 :   18db:   pop    %rbx
    0.00 :   18dc:   pop    %rbp
    0.00 :   18dd:   pop    %r12
    0.00 :   18df:   pop    %r13
    0.00 :   18e1:   pop    %r14
    0.00 :   18e3:   pop    %r15
    0.00 :   18e5:   jmp    18ea <nf_nat_inet_fn+0x1da>
    0.00 :   18ea:   mov    0x10(%rdx),%rax
    0.00 :   18ee:   testb  $0x4,0xca(%rax)
    0.00 :   18f5:   je     1748 <nf_nat_inet_fn+0x38>
    0.00 :   18fb:   jmp    18d2 <nf_nat_inet_fn+0x1c2>
    0.00 :   18fd:   xor    %eax,%eax
    0.00 :   18ff:   cmp    $0x4,%ebx
    0.00 :   1902:   je     17ee <nf_nat_inet_fn+0xde>
    0.00 :   1908:   mov    $0x9,%edx
    0.00 :   190d:   mov    %ebx,%ecx
    0.00 :   190f:   shr    %cl,%rdx
    0.00 :   1912:   test   %rdx,%rdx
    0.00 :   1915:   jne    1785 <nf_nat_inet_fn+0x75>
    0.00 :   191b:   ud2
    0.00 :   191d:   jmp    1785 <nf_nat_inet_fn+0x75>
    0.00 :   1922:   xor    %esi,%esi
    0.00 :   1924:   mov    $0x10,%eax
    0.00 :   1929:   jmp    18bb <nf_nat_inet_fn+0x1ab>
    0.00 :   192b:   add    $0x10,%rsp
    0.00 :   192f:   mov    %esi,%edx
    0.00 :   1931:   mov    %r13,%rdi
    0.00 :   1934:   mov    %r14,%rsi
    0.00 :   1937:   pop    %rbx
    0.00 :   1938:   pop    %rbp
    0.00 :   1939:   pop    %r12
    0.00 :   193b:   pop    %r13
    0.00 :   193d:   pop    %r14
    0.00 :   193f:   pop    %r15
    0.00 :   1941:   jmp    1946 <nf_nat_inet_fn+0x236>
    0.00 :   1946:   xchg   %ax,%ax
    0.00 :   1948:   mov    0x10(%r12),%rdx
    0.00 :   194d:   movzbl (%r12),%r15d
    0.00 :   1952:   test   %rax,%rax
    0.00 :   1955:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   195b:   mov    0x4(%rax),%eax
    0.00 :   195e:   test   %eax,%eax
    0.00 :   1960:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   1966:   cmp    $0x4,%r15b
    0.00 :   196a:   jne    189a <nf_nat_inet_fn+0x18a>
    0.00 :   1970:   cmp    $0x2,%ebx
    0.00 :   1973:   jbe    17b8 <nf_nat_inet_fn+0xa8>
    0.00 :   1979:   jmp    189a <nf_nat_inet_fn+0x18a>
    0.00 :   197e:   cmpb   $0x0,(%rsp)
    0.00 :   1982:   mov    $0x0,%rcx
    0.00 :   1989:   mov    $0x0,%rdx
    0.00 :   1990:   mov    $0x0,%rsi
    0.00 :   1997:   cmove  %rcx,%rdx
    0.00 :   199b:   mov    $0x0,%rdi
    0.00 :   19a2:   mov    %r14,%rcx
    0.00 :   19a5:   mov    %rax,0x8(%rsp)
    0.00 :   19aa:   call   19af <nf_nat_inet_fn+0x29f>
    0.00 :   19af:   mov    0x8(%rsp),%rax
    0.00 :   19b4:   jmp    1948 <nf_nat_inet_fn+0x238>
    0.00 :   19b6:   movzbl (%r12),%eax
    0.00 :   19bb:   mov    %r14,%rdi
    0.00 :   19be:   cmp    $0x4,%eax
    0.00 :   19c1:   setne  %dl
    0.00 :   19c4:   xor    %esi,%esi
    0.00 :   19c6:   cmp    $0x1,%eax
    0.00 :   19c9:   setne  %sil
    0.00 :   19cd:   and    %edx,%esi
    0.00 :   19cf:   call   1340 <__nf_nat_alloc_null_binding>
    0.00 :   19d4:   cmp    $0x1,%eax
    0.00 :   19d7:   jne    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   19dd:   jmp    1895 <nf_nat_inet_fn+0x185>
    0.00 :   19e2:   and    $0x7,%ebx
    0.00 :   19e5:   cmp    $0x2,%ebx
    0.00 :   19e8:   ja     18ff <nf_nat_inet_fn+0x1ef>
    0.00 :   19ee:   test   %ebx,%ebx
    0.00 :   19f0:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   19f6:   jmp    17ee <nf_nat_inet_fn+0xde>
    0.00 :   19fb:   mov    $0x1,%esi
    0.00 :   1a00:   mov    %rax,%rdi
    0.00 :   1a03:   mov    %rcx,(%rsp)
    0.00 :   1a07:   call   1a0c <nf_nat_inet_fn+0x2fc>
    0.00 :   1a0c:   mov    (%rsp),%rcx
    0.00 :   1a10:   jmp    1775 <nf_nat_inet_fn+0x65>
    0.00 :   1a15:   xor    %esi,%esi
    0.00 :   1a17:   xor    %ecx,%ecx
    0.00 :   1a19:   mov    $0x10,%eax
    0.00 :   1a1e:   jmp    18c9 <nf_nat_inet_fn+0x1b9>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

   53.24 dbt2-driver[408085]
   46.76 dbt2-driver[40802c]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040802c <get_think_time>:
         : 6      get_think_time():
   46.76 :   40802c: push   %rbp // dbt2-driver[40802c]
    0.00 :   40802d: mov    %rsp,%rbp
    0.00 :   408030: sub    $0x10,%rsp
    0.00 :   408034: mov    %rdi,-0x8(%rbp)
    0.00 :   408038: mov    %esi,-0xc(%rbp)
    0.00 :   40803b: mov    -0x8(%rbp),%rax
    0.00 :   40803f: mov    %rax,%rdi
    0.00 :   408042: call   407f98 <get_percentage>
    0.00 :   408047: movsd  0x9669(%rip),%xmm1        # 4116b8 <transaction_short_name+0xc0>
    0.00 :   40804f: addsd  %xmm1,%xmm0
    0.00 :   408053: movq   %xmm0,%rax
    0.00 :   408058: movq   %rax,%xmm0
    0.00 :   40805d: call   4071a0 <log@plt>
    0.00 :   408062: movq   %xmm0,%rax
    0.00 :   408067: movq   0x9651(%rip),%xmm0        # 4116c0 <transaction_short_name+0xc8>
    0.00 :   40806f: movq   %rax,%xmm1
    0.00 :   408074: xorpd  %xmm0,%xmm1
    0.00 :   408078: pxor   %xmm0,%xmm0
    0.00 :   40807c: cvtsi2sdl -0xc(%rbp),%xmm0
    0.00 :   408081: mulsd  %xmm1,%xmm0
   53.24 :   408085: cvttsd2si %xmm0,%eax // dbt2-driver[408085]
    0.00 :   408089: leave
    0.00 :   40808a: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[15290b]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000152880 <__memcpy_avx_unaligned_erms>:
         : 6      __memcpy_avx_unaligned_erms():
    0.00 :   152880: endbr64
    0.00 :   152884: mov    %rdi,%rax
    0.00 :   152887: cmp    $0x20,%rdx
    0.00 :   15288b: jb     1528b0 <__memcpy_avx_unaligned_erms+0x30>
    0.00 :   15288d: vmovdqu (%rsi),%ymm0
    0.00 :   152891: cmp    $0x40,%rdx
    0.00 :   152895: ja     152940 <__memcpy_avx_unaligned_erms+0xc0>
    0.00 :   15289b: vmovdqu -0x20(%rsi,%rdx,1),%ymm1
    0.00 :   1528a1: vmovdqu %ymm0,(%rdi)
    0.00 :   1528a5: vmovdqu %ymm1,-0x20(%rdi,%rdx,1)
    0.00 :   1528ab: vzeroupper
    0.00 :   1528ae: ret
    0.00 :   1528af: nop
    0.00 :   1528b0: cmp    $0x10,%edx
    0.00 :   1528b3: jae    1528e2 <__memcpy_avx_unaligned_erms+0x62>
    0.00 :   1528b5: cmp    $0x8,%edx
    0.00 :   1528b8: jae    152900 <__memcpy_avx_unaligned_erms+0x80>
    0.00 :   1528ba: cmp    $0x4,%edx
    0.00 :   1528bd: jae    1528d5 <__memcpy_avx_unaligned_erms+0x55>
    0.00 :   1528bf: cmp    $0x1,%edx
    0.00 :   1528c2: jl     1528d4 <__memcpy_avx_unaligned_erms+0x54>
    0.00 :   1528c4: mov    (%rsi),%cl
    0.00 :   1528c6: je     1528d2 <__memcpy_avx_unaligned_erms+0x52>
    0.00 :   1528c8: movzwl -0x2(%rsi,%rdx,1),%esi
    0.00 :   1528cd: mov    %si,-0x2(%rdi,%rdx,1)
    0.00 :   1528d2: mov    %cl,(%rdi)
    0.00 :   1528d4: ret
    0.00 :   1528d5: mov    -0x4(%rsi,%rdx,1),%ecx
    0.00 :   1528d9: mov    (%rsi),%esi
    0.00 :   1528db: mov    %ecx,-0x4(%rdi,%rdx,1)
    0.00 :   1528df: mov    %esi,(%rdi)
    0.00 :   1528e1: ret
    0.00 :   1528e2: vmovdqu (%rsi),%xmm0
    0.00 :   1528e6: vmovdqu -0x10(%rsi,%rdx,1),%xmm1
    0.00 :   1528ec: vmovdqu %xmm0,(%rdi)
    0.00 :   1528f0: vmovdqu %xmm1,-0x10(%rdi,%rdx,1)
    0.00 :   1528f6: ret
    0.00 :   1528f7: nopw   0x0(%rax,%rax,1)
    0.00 :   152900: mov    -0x8(%rsi,%rdx,1),%rcx
    0.00 :   152905: mov    (%rsi),%rsi
    0.00 :   152908: mov    %rsi,(%rdi)
  100.00 :   15290b: mov    %rcx,-0x8(%rdi,%rdx,1) // libc.so.6[15290b]
    0.00 :   152910: ret
    0.00 :   152911: vmovdqu -0x20(%rsi,%rdx,1),%ymm2
    0.00 :   152917: vmovdqu -0x40(%rsi,%rdx,1),%ymm3
    0.00 :   15291d: vmovdqu %ymm0,(%rdi)
    0.00 :   152921: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   152926: vmovdqu %ymm2,-0x20(%rdi,%rdx,1)
    0.00 :   15292c: vmovdqu %ymm3,-0x40(%rdi,%rdx,1)
    0.00 :   152932: vzeroupper
    0.00 :   152935: ret
    0.00 :   152936: cs nopw 0x0(%rax,%rax,1)
    0.00 :   152940: cmp    0x80ab1(%rip),%rdx        # 1d33f8 <__x86_rep_movsb_threshold>
    0.00 :   152947: ja     152b40 <__memcpy_avx_unaligned_erms+0x2c0>
    0.00 :   15294d: cmp    $0x100,%rdx
    0.00 :   152954: ja     1529b5 <__memcpy_avx_unaligned_erms+0x135>
    0.00 :   152956: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   15295b: cmp    $0x80,%rdx
    0.00 :   152962: jbe    152911 <__memcpy_avx_unaligned_erms+0x91>
    0.00 :   152964: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152969: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   15296e: vmovdqu -0x20(%rsi,%rdx,1),%ymm4
    0.00 :   152974: vmovdqu -0x40(%rsi,%rdx,1),%ymm5
    0.00 :   15297a: vmovdqu -0x60(%rsi,%rdx,1),%ymm6
    0.00 :   152980: vmovdqu -0x80(%rsi,%rdx,1),%ymm7
    0.00 :   152986: vmovdqu %ymm0,(%rdi)
    0.00 :   15298a: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   15298f: vmovdqu %ymm2,0x40(%rdi)
    0.00 :   152994: vmovdqu %ymm3,0x60(%rdi)
    0.00 :   152999: vmovdqu %ymm4,-0x20(%rdi,%rdx,1)
    0.00 :   15299f: vmovdqu %ymm5,-0x40(%rdi,%rdx,1)
    0.00 :   1529a5: vmovdqu %ymm6,-0x60(%rdi,%rdx,1)
    0.00 :   1529ab: vmovdqu %ymm7,-0x80(%rdi,%rdx,1)
    0.00 :   1529b1: vzeroupper
    0.00 :   1529b4: ret
    0.00 :   1529b5: mov    %rdi,%rcx
    0.00 :   1529b8: sub    %rsi,%rcx
    0.00 :   1529bb: cmp    %rdx,%rcx
    0.00 :   1529be: jb     152a70 <__memcpy_avx_unaligned_erms+0x1f0>
    0.00 :   1529c4: cmp    0x87ba5(%rip),%rdx        # 1da570 <__x86_shared_non_temporal_threshold>
    0.00 :   1529cb: ja     152ba0 <__memcpy_avx_unaligned_erms+0x320>
    0.00 :   1529d1: lea    (%rcx,%rdx,1),%r8
    0.00 :   1529d5: xor    %rcx,%r8
    0.00 :   1529d8: shr    $0x3f,%r8
    0.00 :   1529dc: and    $0xf00,%ecx
    0.00 :   1529e2: add    %r8d,%ecx
    0.00 :   1529e5: je     152a75 <__memcpy_avx_unaligned_erms+0x1f5>
    0.00 :   1529eb: vmovdqu -0x20(%rsi,%rdx,1),%ymm5
    0.00 :   1529f1: vmovdqu -0x40(%rsi,%rdx,1),%ymm6
    0.00 :   1529f7: mov    %rdi,%rcx
    0.00 :   1529fa: or     $0x1f,%rdi
    0.00 :   1529fe: vmovdqu -0x60(%rsi,%rdx,1),%ymm7
    0.00 :   152a04: vmovdqu -0x80(%rsi,%rdx,1),%ymm8
    0.00 :   152a0a: sub    %rcx,%rsi
    0.00 :   152a0d: inc    %rdi
    0.00 :   152a10: add    %rdi,%rsi
    0.00 :   152a13: lea    -0x80(%rcx,%rdx,1),%rdx
    0.00 :   152a18: nopl   0x0(%rax,%rax,1)
    0.00 :   152a20: vmovdqu (%rsi),%ymm1
    0.00 :   152a24: vmovdqu 0x20(%rsi),%ymm2
    0.00 :   152a29: vmovdqu 0x40(%rsi),%ymm3
    0.00 :   152a2e: vmovdqu 0x60(%rsi),%ymm4
    0.00 :   152a33: sub    $0xffffffffffffff80,%rsi
    0.00 :   152a37: vmovdqa %ymm1,(%rdi)
    0.00 :   152a3b: vmovdqa %ymm2,0x20(%rdi)
    0.00 :   152a40: vmovdqa %ymm3,0x40(%rdi)
    0.00 :   152a45: vmovdqa %ymm4,0x60(%rdi)
    0.00 :   152a4a: sub    $0xffffffffffffff80,%rdi
    0.00 :   152a4e: cmp    %rdi,%rdx
    0.00 :   152a51: ja     152a20 <__memcpy_avx_unaligned_erms+0x1a0>
    0.00 :   152a53: vmovdqu %ymm5,0x60(%rdx)
    0.00 :   152a58: vmovdqu %ymm6,0x40(%rdx)
    0.00 :   152a5d: vmovdqu %ymm7,0x20(%rdx)
    0.00 :   152a62: vmovdqu %ymm8,(%rdx)
    0.00 :   152a66: vmovdqu %ymm0,(%rcx)
    0.00 :   152a6a: vzeroupper
    0.00 :   152a6d: ret
    0.00 :   152a6e: xchg   %ax,%ax
    0.00 :   152a70: test   %rcx,%rcx
    0.00 :   152a73: je     152a6a <__memcpy_avx_unaligned_erms+0x1ea>
    0.00 :   152a75: vmovdqu 0x20(%rsi),%ymm5
    0.00 :   152a7a: vmovdqu 0x40(%rsi),%ymm6
    0.00 :   152a7f: lea    -0x81(%rdi,%rdx,1),%rcx
    0.00 :   152a87: vmovdqu 0x60(%rsi),%ymm7
    0.00 :   152a8c: vmovdqu -0x20(%rsi,%rdx,1),%ymm8
    0.00 :   152a92: sub    %rdi,%rsi
    0.00 :   152a95: and    $0xffffffffffffffe0,%rcx
    0.00 :   152a99: add    %rcx,%rsi
    0.00 :   152a9c: nopl   0x0(%rax)
    0.00 :   152aa0: vmovdqu 0x60(%rsi),%ymm1
    0.00 :   152aa5: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152aaa: vmovdqu 0x20(%rsi),%ymm3
    0.00 :   152aaf: vmovdqu (%rsi),%ymm4
    0.00 :   152ab3: add    $0xffffffffffffff80,%rsi
    0.00 :   152ab7: vmovdqa %ymm1,0x60(%rcx)
    0.00 :   152abc: vmovdqa %ymm2,0x40(%rcx)
    0.00 :   152ac1: vmovdqa %ymm3,0x20(%rcx)
    0.00 :   152ac6: vmovdqa %ymm4,(%rcx)
    0.00 :   152aca: add    $0xffffffffffffff80,%rcx
    0.00 :   152ace: cmp    %rcx,%rdi
    0.00 :   152ad1: jb     152aa0 <__memcpy_avx_unaligned_erms+0x220>
    0.00 :   152ad3: vmovdqu %ymm0,(%rdi)
    0.00 :   152ad7: vmovdqu %ymm5,0x20(%rdi)
    0.00 :   152adc: vmovdqu %ymm6,0x40(%rdi)
    0.00 :   152ae1: vmovdqu %ymm7,0x60(%rdi)
    0.00 :   152ae6: vmovdqu %ymm8,-0x20(%rdx,%rdi,1)
    0.00 :   152aec: vzeroupper
    0.00 :   152aef: ret
    0.00 :   152af0: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   152afb: nopl   0x0(%rax,%rax,1)
    0.00 :   152b00: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152b05: test   $0xe00,%ecx
    0.00 :   152b0b: jne    152b75 <__memcpy_avx_unaligned_erms+0x2f5>
    0.00 :   152b0d: mov    %rcx,%r9
    0.00 :   152b10: lea    -0x1(%rsi,%rdx,1),%rcx
    0.00 :   152b15: or     $0x3f,%rsi
    0.00 :   152b19: lea    0x1(%rsi,%r9,1),%rdi
    0.00 :   152b1e: sub    %rsi,%rcx
    0.00 :   152b21: inc    %rsi
    0.00 :   152b24: rep movsb %ds:(%rsi),%es:(%rdi)
    0.00 :   152b26: vmovdqu %ymm0,(%r8)
    0.00 :   152b2b: vmovdqu %ymm1,0x20(%r8)
    0.00 :   152b31: vzeroupper
    0.00 :   152b34: ret
    0.00 :   152b35: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   152b40: mov    %rdi,%rcx
    0.00 :   152b43: sub    %rsi,%rcx
    0.00 :   152b46: cmp    %rdx,%rcx
    0.00 :   152b49: jb     152a70 <__memcpy_avx_unaligned_erms+0x1f0>
    0.00 :   152b4f: mov    %rdi,%r8
    0.00 :   152b52: cmp    0x87a0f(%rip),%rdx        # 1da568 <__x86_rep_movsb_stop_threshold>
    0.00 :   152b59: jae    152ba0 <__memcpy_avx_unaligned_erms+0x320>
    0.00 :   152b5b: testl  $0x1,0x879fb(%rip)        # 1da560 <__x86_string_control>
    0.00 :   152b65: je     152b00 <__memcpy_avx_unaligned_erms+0x280>
    0.00 :   152b67: cmp    $0xffffffc0,%ecx
    0.00 :   152b6a: ja     1529eb <__memcpy_avx_unaligned_erms+0x16b>
    0.00 :   152b70: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152b75: sub    %rdi,%rsi
    0.00 :   152b78: add    $0x3f,%rdi
    0.00 :   152b7c: lea    (%r8,%rdx,1),%rcx
    0.00 :   152b80: and    $0xffffffffffffffc0,%rdi
    0.00 :   152b84: add    %rdi,%rsi
    0.00 :   152b87: sub    %rdi,%rcx
    0.00 :   152b8a: rep movsb %ds:(%rsi),%es:(%rdi)
    0.00 :   152b8c: vmovdqu %ymm0,(%r8)
    0.00 :   152b91: vmovdqu %ymm1,0x20(%r8)
    0.00 :   152b97: vzeroupper
    0.00 :   152b9a: ret
    0.00 :   152b9b: nopl   0x0(%rax,%rax,1)
    0.00 :   152ba0: mov    0x879c9(%rip),%r11        # 1da570 <__x86_shared_non_temporal_threshold>
    0.00 :   152ba7: cmp    %r11,%rdx
    0.00 :   152baa: jb     1529d1 <__memcpy_avx_unaligned_erms+0x151>
    0.00 :   152bb0: neg    %rcx
    0.00 :   152bb3: cmp    %rcx,%rdx
    0.00 :   152bb6: ja     1529eb <__memcpy_avx_unaligned_erms+0x16b>
    0.00 :   152bbc: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152bc1: vmovdqu %ymm0,(%rdi)
    0.00 :   152bc5: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   152bca: mov    %rdi,%r8
    0.00 :   152bcd: and    $0x3f,%r8
    0.00 :   152bd1: sub    $0x40,%r8
    0.00 :   152bd5: sub    %r8,%rsi
    0.00 :   152bd8: sub    %r8,%rdi
    0.00 :   152bdb: add    %r8,%rdx
    0.00 :   152bde: not    %ecx
    0.00 :   152be0: mov    %rdx,%r10
    0.00 :   152be3: test   $0xf00,%ecx
    0.00 :   152be9: je     152d70 <__memcpy_avx_unaligned_erms+0x4f0>
    0.00 :   152bef: shl    $0x4,%r11
    0.00 :   152bf3: cmp    %r11,%rdx
    0.00 :   152bf6: jae    152d70 <__memcpy_avx_unaligned_erms+0x4f0>
    0.00 :   152bfc: and    $0x1fff,%edx
    0.00 :   152c02: shr    $0xd,%r10
    0.00 :   152c06: cs nopw 0x0(%rax,%rax,1)
    0.00 :   152c10: mov    $0x20,%ecx
    0.00 :   152c15: prefetcht0 0x80(%rsi)
    0.00 :   152c1c: prefetcht0 0xc0(%rsi)
    0.00 :   152c23: prefetcht0 0x100(%rsi)
    0.00 :   152c2a: prefetcht0 0x140(%rsi)
    0.00 :   152c31: prefetcht0 0x1080(%rsi)
    0.00 :   152c38: prefetcht0 0x10c0(%rsi)
    0.00 :   152c3f: prefetcht0 0x1100(%rsi)
    0.00 :   152c46: prefetcht0 0x1140(%rsi)
    0.00 :   152c4d: vmovdqu (%rsi),%ymm0
    0.00 :   152c51: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152c56: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152c5b: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152c60: vmovdqu 0x1000(%rsi),%ymm4
    0.00 :   152c68: vmovdqu 0x1020(%rsi),%ymm5
    0.00 :   152c70: vmovdqu 0x1040(%rsi),%ymm6
    0.00 :   152c78: vmovdqu 0x1060(%rsi),%ymm7
    0.00 :   152c80: sub    $0xffffffffffffff80,%rsi
    0.00 :   152c84: vmovntdq %ymm0,(%rdi)
    0.00 :   152c88: vmovntdq %ymm1,0x20(%rdi)
    0.00 :   152c8d: vmovntdq %ymm2,0x40(%rdi)
    0.00 :   152c92: vmovntdq %ymm3,0x60(%rdi)
    0.00 :   152c97: vmovntdq %ymm4,0x1000(%rdi)
    0.00 :   152c9f: vmovntdq %ymm5,0x1020(%rdi)
    0.00 :   152ca7: vmovntdq %ymm6,0x1040(%rdi)
    0.00 :   152caf: vmovntdq %ymm7,0x1060(%rdi)
    0.00 :   152cb7: sub    $0xffffffffffffff80,%rdi
    0.00 :   152cbb: dec    %ecx
    0.00 :   152cbd: jne    152c15 <__memcpy_avx_unaligned_erms+0x395>
    0.00 :   152cc3: add    $0x1000,%rdi
    0.00 :   152cca: add    $0x1000,%rsi
    0.00 :   152cd1: dec    %r10
    0.00 :   152cd4: jne    152c10 <__memcpy_avx_unaligned_erms+0x390>
    0.00 :   152cda: sfence
    0.00 :   152cdd: cmp    $0x80,%edx
    0.00 :   152ce3: jbe    152d3a <__memcpy_avx_unaligned_erms+0x4ba>
    0.00 :   152ce5: prefetcht0 0x80(%rsi)
    0.00 :   152cec: prefetcht0 0xc0(%rsi)
    0.00 :   152cf3: prefetcht0 0x80(%rdi)
    0.00 :   152cfa: prefetcht0 0xc0(%rdi)
    0.00 :   152d01: vmovdqu (%rsi),%ymm0
    0.00 :   152d05: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152d0a: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152d0f: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152d14: sub    $0xffffffffffffff80,%rsi
    0.00 :   152d18: add    $0xffffff80,%edx
    0.00 :   152d1b: vmovdqa %ymm0,(%rdi)
    0.00 :   152d1f: vmovdqa %ymm1,0x20(%rdi)
    0.00 :   152d24: vmovdqa %ymm2,0x40(%rdi)
    0.00 :   152d29: vmovdqa %ymm3,0x60(%rdi)
    0.00 :   152d2e: sub    $0xffffffffffffff80,%rdi
    0.00 :   152d32: cmp    $0x80,%edx
    0.00 :   152d38: ja     152ce5 <__memcpy_avx_unaligned_erms+0x465>
    0.00 :   152d3a: vmovdqu -0x80(%rsi,%rdx,1),%ymm0
    0.00 :   152d40: vmovdqu -0x60(%rsi,%rdx,1),%ymm1
    0.00 :   152d46: vmovdqu -0x40(%rsi,%rdx,1),%ymm2
    0.00 :   152d4c: vmovdqu -0x20(%rsi,%rdx,1),%ymm3
    0.00 :   152d52: vmovdqu %ymm0,-0x80(%rdi,%rdx,1)
    0.00 :   152d58: vmovdqu %ymm1,-0x60(%rdi,%rdx,1)
    0.00 :   152d5e: vmovdqu %ymm2,-0x40(%rdi,%rdx,1)
    0.00 :   152d64: vmovdqu %ymm3,-0x20(%rdi,%rdx,1)
    0.00 :   152d6a: vzeroupper
    0.00 :   152d6d: ret
    0.00 :   152d6e: xchg   %ax,%ax
    0.00 :   152d70: and    $0x3fff,%edx
    0.00 :   152d76: shr    $0xe,%r10
    0.00 :   152d7a: nopw   0x0(%rax,%rax,1)
    0.00 :   152d80: mov    $0x20,%ecx
    0.00 :   152d85: prefetcht0 0x80(%rsi)
    0.00 :   152d8c: prefetcht0 0xc0(%rsi)
    0.00 :   152d93: prefetcht0 0x1080(%rsi)
    0.00 :   152d9a: prefetcht0 0x10c0(%rsi)
    0.00 :   152da1: prefetcht0 0x2080(%rsi)
    0.00 :   152da8: prefetcht0 0x20c0(%rsi)
    0.00 :   152daf: prefetcht0 0x3080(%rsi)
    0.00 :   152db6: prefetcht0 0x30c0(%rsi)
    0.00 :   152dbd: vmovdqu (%rsi),%ymm0
    0.00 :   152dc1: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152dc6: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152dcb: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152dd0: vmovdqu 0x1000(%rsi),%ymm4
    0.00 :   152dd8: vmovdqu 0x1020(%rsi),%ymm5
    0.00 :   152de0: vmovdqu 0x1040(%rsi),%ymm6
    0.00 :   152de8: vmovdqu 0x1060(%rsi),%ymm7
    0.00 :   152df0: vmovdqu 0x2000(%rsi),%ymm8
    0.00 :   152df8: vmovdqu 0x2020(%rsi),%ymm9
    0.00 :   152e00: vmovdqu 0x2040(%rsi),%ymm10
    0.00 :   152e08: vmovdqu 0x2060(%rsi),%ymm11
    0.00 :   152e10: vmovdqu 0x3000(%rsi),%ymm12
    0.00 :   152e18: vmovdqu 0x3020(%rsi),%ymm13
    0.00 :   152e20: vmovdqu 0x3040(%rsi),%ymm14
    0.00 :   152e28: vmovdqu 0x3060(%rsi),%ymm15
    0.00 :   152e30: sub    $0xffffffffffffff80,%rsi
    0.00 :   152e34: vmovntdq %ymm0,(%rdi)
    0.00 :   152e38: vmovntdq %ymm1,0x20(%rdi)
    0.00 :   152e3d: vmovntdq %ymm2,0x40(%rdi)
    0.00 :   152e42: vmovntdq %ymm3,0x60(%rdi)
    0.00 :   152e47: vmovntdq %ymm4,0x1000(%rdi)
    0.00 :   152e4f: vmovntdq %ymm5,0x1020(%rdi)
    0.00 :   152e57: vmovntdq %ymm6,0x1040(%rdi)
    0.00 :   152e5f: vmovntdq %ymm7,0x1060(%rdi)
    0.00 :   152e67: vmovntdq %ymm8,0x2000(%rdi)
    0.00 :   152e6f: vmovntdq %ymm9,0x2020(%rdi)
    0.00 :   152e77: vmovntdq %ymm10,0x2040(%rdi)
    0.00 :   152e7f: vmovntdq %ymm11,0x2060(%rdi)
    0.00 :   152e87: vmovntdq %ymm12,0x3000(%rdi)
    0.00 :   152e8f: vmovntdq %ymm13,0x3020(%rdi)
    0.00 :   152e97: vmovntdq %ymm14,0x3040(%rdi)
    0.00 :   152e9f: vmovntdq %ymm15,0x3060(%rdi)
    0.00 :   152ea7: sub    $0xffffffffffffff80,%rdi
    0.00 :   152eab: dec    %ecx
    0.00 :   152ead: jne    152d85 <__memcpy_avx_unaligned_erms+0x505>
    0.00 :   152eb3: add    $0x3000,%rdi
    0.00 :   152eba: add    $0x3000,%rsi
    0.00 :   152ec1: dec    %r10
    0.00 :   152ec4: jne    152d80 <__memcpy_avx_unaligned_erms+0x500>
    0.00 :   152eca: sfence
    0.00 :   152ecd: cmp    $0x80,%edx
    0.00 :   152ed3: jbe    152f2a <__memcpy_avx_unaligned_erms+0x6aa>
    0.00 :   152ed5: prefetcht0 0x80(%rsi)
    0.00 :   152edc: prefetcht0 0xc0(%rsi)
    0.00 :   152ee3: prefetcht0 0x80(%rdi)
    0.00 :   152eea: prefetcht0 0xc0(%rdi)
    0.00 :   152ef1: vmovdqu (%rsi),%ymm0
    0.00 :   152ef5: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152efa: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152eff: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152f04: sub    $0xffffffffffffff80,%rsi
    0.00 :   152f08: add    $0xffffff80,%edx
    0.00 :   152f0b: vmovdqa %ymm0,(%rdi)
    0.00 :   152f0f: vmovdqa %ymm1,0x20(%rdi)
    0.00 :   152f14: vmovdqa %ymm2,0x40(%rdi)
    0.00 :   152f19: vmovdqa %ymm3,0x60(%rdi)
    0.00 :   152f1e: sub    $0xffffffffffffff80,%rdi
    0.00 :   152f22: cmp    $0x80,%edx
    0.00 :   152f28: ja     152ed5 <__memcpy_avx_unaligned_erms+0x655>
    0.00 :   152f2a: vmovdqu -0x80(%rsi,%rdx,1),%ymm0
    0.00 :   152f30: vmovdqu -0x60(%rsi,%rdx,1),%ymm1
    0.00 :   152f36: vmovdqu -0x40(%rsi,%rdx,1),%ymm2
    0.00 :   152f3c: vmovdqu -0x20(%rsi,%rdx,1),%ymm3
    0.00 :   152f42: vmovdqu %ymm0,-0x80(%rdi,%rdx,1)
    0.00 :   152f48: vmovdqu %ymm1,-0x60(%rdi,%rdx,1)
    0.00 :   152f4e: vmovdqu %ymm2,-0x40(%rdi,%rdx,1)
    0.00 :   152f54: vmovdqu %ymm3,-0x20(%rdi,%rdx,1)
    0.00 :   152f5a: vzeroupper
    0.00 :   152f5d: ret

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:71
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009070 <check_match>:
         : 6    check_match():
    0.00 :   9070:   push   %r14
    0.00 :   9072:   movzwl 0x6(%r9),%eax
  100.00 :   9077:   mov    %rdi,%r10 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:71
    0.00 :   907a:   push   %r13
    0.00 :   907c:   mov    %rdx,%r13
    0.00 :   907f:   mov    %r8d,%edx
    0.00 :   9082:   push   %r12
    0.00 :   9084:   push   %rbp
    0.00 :   9085:   mov    %ecx,%ebp
    0.00 :   9087:   movzbl 0x4(%r9),%ecx
    0.00 :   908c:   push   %rbx
    0.00 :   908d:   mov    %r9,%rbx
    0.00 :   9090:   mov    0x40(%rsp),%r12
    0.00 :   9095:   and    $0xf,%ecx
    0.00 :   9098:   cmpq   $0x0,0x8(%r9)
    0.00 :   909d:   je     91b0 <check_match+0x140>
    0.00 :   90a3:   xor    %r8d,%r8d
    0.00 :   90a6:   test   %ax,%ax
    0.00 :   90a9:   mov    $0xfffffb98,%eax
    0.00 :   90ae:   sete   %r8b
    0.00 :   90b2:   sar    %cl,%eax
    0.00 :   90b4:   and    %edx,%r8d
    0.00 :   90b7:   and    $0x1,%eax
    0.00 :   90ba:   or     %eax,%r8d
    0.00 :   90bd:   jne    9190 <check_match+0x120>
    0.00 :   90c3:   cmp    %rsi,%rbx
    0.00 :   90c6:   je     90df <check_match+0x6f>
    0.00 :   90c8:   mov    (%rbx),%edi
    0.00 :   90ca:   mov    %r10,%rsi
    0.00 :   90cd:   add    0x38(%rsp),%rdi
    0.00 :   90d2:   call   23430 <strcmp>
    0.00 :   90d7:   test   %eax,%eax
    0.00 :   90d9:   jne    9190 <check_match+0x120>
    0.00 :   90df:   mov    0x360(%r12),%rax
    0.00 :   90e7:   test   %r13,%r13
    0.00 :   90ea:   je     9140 <check_match+0xd0>
    0.00 :   90ec:   test   %rax,%rax
    0.00 :   90ef:   je     91d0 <check_match+0x160>
    0.00 :   90f5:   mov    0x30(%rsp),%edx
    0.00 :   90f9:   movzwl (%rax,%rdx,2),%r14d
    0.00 :   90fe:   mov    %r14,%rax
    0.00 :   9101:   and    $0x7fff,%eax
    0.00 :   9106:   lea    (%rax,%rax,2),%rdx
    0.00 :   910a:   mov    0x300(%r12),%rax
    0.00 :   9112:   lea    (%rax,%rdx,8),%rax
    0.00 :   9116:   mov    0x8(%rax),%ebp
    0.00 :   9119:   cmp    0x8(%r13),%ebp
    0.00 :   911d:   je     9198 <check_match+0x128>
    0.00 :   911f:   or     0xc(%r13),%ebp
    0.00 :   9123:   jne    9190 <check_match+0x120>
    0.00 :   9125:   test   %r14w,%r14w
    0.00 :   9129:   js     9190 <check_match+0x120>
    0.00 :   912b:   mov    %rbx,%rax
    0.00 :   912e:   pop    %rbx
    0.00 :   912f:   pop    %rbp
    0.00 :   9130:   pop    %r12
    0.00 :   9132:   pop    %r13
    0.00 :   9134:   pop    %r14
    0.00 :   9136:   ret
    0.00 :   9137:   nopw   0x0(%rax,%rax,1)
    0.00 :   9140:   test   %rax,%rax
    0.00 :   9143:   je     912b <check_match+0xbb>
    0.00 :   9145:   mov    0x30(%rsp),%edx
    0.00 :   9149:   movzwl (%rax,%rdx,2),%edx
    0.00 :   914d:   xor    %eax,%eax
    0.00 :   914f:   mov    %edx,%ecx
    0.00 :   9151:   and    $0x7fff,%ecx
    0.00 :   9157:   and    $0x2,%ebp
    0.00 :   915a:   sete   %al
    0.00 :   915d:   add    $0x2,%eax
    0.00 :   9160:   cmp    %eax,%ecx
    0.00 :   9162:   jl     912b <check_match+0xbb>
    0.00 :   9164:   test   %dx,%dx
    0.00 :   9167:   js     9190 <check_match+0x120>
    0.00 :   9169:   mov    0x50(%rsp),%rax
    0.00 :   916e:   mov    0x50(%rsp),%rsi
    0.00 :   9173:   mov    (%rax),%eax
    0.00 :   9175:   lea    0x1(%rax),%edx
    0.00 :   9178:   mov    %edx,(%rsi)
    0.00 :   917a:   test   %eax,%eax
    0.00 :   917c:   jne    9190 <check_match+0x120>
    0.00 :   917e:   mov    0x48(%rsp),%rax
    0.00 :   9183:   mov    %rbx,(%rax)
    0.00 :   9186:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   9190:   xor    %eax,%eax
    0.00 :   9192:   jmp    912e <check_match+0xbe>
    0.00 :   9194:   nopl   0x0(%rax)
    0.00 :   9198:   mov    0x0(%r13),%rsi
    0.00 :   919c:   mov    (%rax),%rdi
    0.00 :   919f:   call   23430 <strcmp>
    0.00 :   91a4:   test   %eax,%eax
    0.00 :   91a6:   je     912b <check_match+0xbb>
    0.00 :   91a8:   jmp    911f <check_match+0xaf>
    0.00 :   91ad:   nopl   (%rax)
    0.00 :   91b0:   cmp    $0x6,%cl
    0.00 :   91b3:   je     90a3 <check_match+0x33>
    0.00 :   91b9:   cmp    $0xfff1,%ax
    0.00 :   91bd:   je     90a3 <check_match+0x33>
    0.00 :   91c3:   xor    %eax,%eax
    0.00 :   91c5:   jmp    912e <check_match+0xbe>
    0.00 :   91ca:   nopw   0x0(%rax,%rax,1)
    0.00 :   91d0:   mov    0x10(%r13),%rdi
    0.00 :   91d4:   test   %rdi,%rdi
    0.00 :   91d7:   je     912b <check_match+0xbb>
    0.00 :   91dd:   mov    %r12,%rsi
    0.00 :   91e0:   call   ae50 <_dl_name_match_p>
    0.00 :   91e5:   test   %eax,%eax
    0.00 :   91e7:   je     912b <check_match+0xbb>
    0.00 :   91ed:   lea    0x22e24(%rip),%rcx        # 2c018 <__PRETTY_FUNCTION__.1>
    0.00 :   91f4:   mov    $0x6b,%edx
    0.00 :   91f9:   lea    0x20a51(%rip),%rsi        # 29c51 <_sys_errname+0x891>
    0.00 :   9200:   lea    0x22af9(%rip),%rdi        # 2bd00 <__PRETTY_FUNCTION__.9+0x10>
    0.00 :   9207:   call   19f20 <__GI___assert_fail>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

  100.00 [nf_nat][30a0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000030a0 <nf_nat_ipv4_pre_routing>:
         : 6    nf_nat_ipv4_pre_routing():
  100.00 :   30a0:   call   30a5 <nf_nat_ipv4_pre_routing+0x5> // [nf_nat][30a0]
    0.00 :   30a5:   push   %rbp
    0.00 :   30a6:   push   %rbx
    0.00 :   30a7:   mov    %rsi,%rbx
    0.00 :   30aa:   movzwl 0xb8(%rsi),%eax
    0.00 :   30b1:   add    0xc8(%rsi),%rax
    0.00 :   30b8:   mov    0x68(%rsi),%rsi
    0.00 :   30bc:   mov    0x10(%rax),%ebp
    0.00 :   30bf:   cmp    $0x7,%rsi
    0.00 :   30c3:   jbe    3128 <nf_nat_ipv4_pre_routing+0x88>
    0.00 :   30c5:   mov    %esi,%r8d
    0.00 :   30c8:   mov    $0x12,%ecx
    0.00 :   30cd:   and    $0x7,%r8d
    0.00 :   30d1:   bt     %r8,%rcx
    0.00 :   30d5:   jae    30dd <nf_nat_ipv4_pre_routing+0x3d>
    0.00 :   30d7:   cmpb   $0x1,0x9(%rax)
    0.00 :   30db:   je     30f1 <nf_nat_ipv4_pre_routing+0x51>
    0.00 :   30dd:   mov    %rbx,%rsi
    0.00 :   30e0:   call   30e5 <nf_nat_ipv4_pre_routing+0x45>
    0.00 :   30e5:   cmp    $0x1,%eax
    0.00 :   30e8:   je     310b <nf_nat_ipv4_pre_routing+0x6b>
    0.00 :   30ea:   pop    %rbx
    0.00 :   30eb:   pop    %rbp
    0.00 :   30ec:   jmp    30f1 <nf_nat_ipv4_pre_routing+0x51>
    0.00 :   30f1:   movzbl (%rdx),%ecx
    0.00 :   30f4:   and    $0xfffffffffffffff8,%rsi
    0.00 :   30f8:   mov    %r8d,%edx
    0.00 :   30fb:   mov    %rbx,%rdi
    0.00 :   30fe:   call   3103 <nf_nat_ipv4_pre_routing+0x63>
    0.00 :   3103:   mov    %eax,%edx
    0.00 :   3105:   xor    %eax,%eax
    0.00 :   3107:   test   %edx,%edx
    0.00 :   3109:   je     30ea <nf_nat_ipv4_pre_routing+0x4a>
    0.00 :   310b:   movzwl 0xb8(%rbx),%eax
    0.00 :   3112:   mov    0xc8(%rbx),%rdx
    0.00 :   3119:   cmp    %ebp,0x10(%rdx,%rax,1)
    0.00 :   311d:   je     3128 <nf_nat_ipv4_pre_routing+0x88>
    0.00 :   311f:   mov    0x58(%rbx),%rdi
    0.00 :   3123:   test   %rdi,%rdi
    0.00 :   3126:   jne    3134 <nf_nat_ipv4_pre_routing+0x94>
    0.00 :   3128:   mov    $0x1,%eax
    0.00 :   312d:   pop    %rbx
    0.00 :   312e:   pop    %rbp
    0.00 :   312f:   jmp    3134 <nf_nat_ipv4_pre_routing+0x94>
    0.00 :   3134:   test   $0x1,%dil
    0.00 :   3138:   je     3144 <nf_nat_ipv4_pre_routing+0xa4>
    0.00 :   313a:   movq   $0x0,0x58(%rbx)
    0.00 :   3142:   jmp    3128 <nf_nat_ipv4_pre_routing+0x88>
    0.00 :   3144:   and    $0xfffffffffffffffe,%rdi
    0.00 :   3148:   call   314d <nf_nat_ipv4_pre_routing+0xad>
    0.00 :   314d:   jmp    313a <nf_nat_ipv4_pre_routing+0x9a>

Sorted summary for file /usr/lib64/libm.so.6
----------------------------------------------

  100.00 libm.so.6[398d0]
 Percent |	Source code & Disassembly of /usr/lib64/libm.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000398d0 <log@@GLIBC_2.29>:
  100.00 :   398d0:  endbr64 // libm.so.6[398d0]
    0.00 :   398d4:  pxor   %xmm1,%xmm1
    0.00 :   398d8:  ucomisd %xmm0,%xmm1
    0.00 :   398dc:  jae    398e8 <log@@GLIBC_2.29+0x18>
    0.00 :   398de:  jmp    10300 <*ABS*+0x2b280@plt>
    0.00 :   398e3:  nopl   0x0(%rax,%rax,1)
    0.00 :   398e8:  ucomisd %xmm1,%xmm0
    0.00 :   398ec:  mov    0xa56c5(%rip),%rax        # defb8 <f64xsubf128@@GLIBC_2.28+0x71b18>
    0.00 :   398f3:  jp     39900 <log@@GLIBC_2.29+0x30>
    0.00 :   398f5:  jne    39900 <log@@GLIBC_2.29+0x30>
    0.00 :   398f7:  movl   $0x22,%fs:(%rax)
    0.00 :   398fe:  jmp    398de <log@@GLIBC_2.29+0xe>
    0.00 :   39900:  movl   $0x21,%fs:(%rax)
    0.00 :   39907:  jmp    398de <log@@GLIBC_2.29+0xe>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   60.04 libc.so.6[7bd19]
   39.96 libc.so.6[7bce6]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000007bce0 <_IO_wdefault_xsputn>:
         : 6     __GI__IO_wdefault_xsputn():
    0.00 :   7bce0:  endbr64
    0.00 :   7bce4:  push   %r15
   39.96 :   7bce6:  xor    %eax,%eax // libc.so.6[7bce6]
    0.00 :   7bce8:  push   %r14
    0.00 :   7bcea:  push   %r13
    0.00 :   7bcec:  push   %r12
    0.00 :   7bcee:  push   %rbp
    0.00 :   7bcef:  push   %rbx
    0.00 :   7bcf0:  sub    $0x28,%rsp
    0.00 :   7bcf4:  mov    %rdx,0x18(%rsp)
    0.00 :   7bcf9:  test   %rdx,%rdx
    0.00 :   7bcfc:  je     7bde5 <_IO_wdefault_xsputn+0x105>
    0.00 :   7bd02:  lea    0x153cf7(%rip),%r12        # 1cfa00 <_IO_helper_jumps>
    0.00 :   7bd09:  mov    %rdi,%r15
    0.00 :   7bd0c:  mov    %rsi,%r13
    0.00 :   7bd0f:  mov    %rdx,%r14
    0.00 :   7bd12:  lea    0x154a4f(%rip),%rbp        # 1d0768 <__stop___libc_IO_vtables>
   60.04 :   7bd19:  sub    %r12,%rbp // libc.so.6[7bd19]
    0.00 :   7bd1c:  jmp    7bd4b <_IO_wdefault_xsputn+0x6b>
    0.00 :   7bd1e:  xchg   %ax,%ax
    0.00 :   7bd20:  mov    0xd8(%r15),%rbx
    0.00 :   7bd27:  mov    %rbx,%rax
    0.00 :   7bd2a:  sub    %r12,%rax
    0.00 :   7bd2d:  cmp    %rbp,%rax
    0.00 :   7bd30:  jae    7be30 <_IO_wdefault_xsputn+0x150>
    0.00 :   7bd36:  mov    %edx,%esi
    0.00 :   7bd38:  mov    %r15,%rdi
    0.00 :   7bd3b:  call   *0x18(%rbx)
    0.00 :   7bd3e:  cmp    $0xffffffff,%eax
    0.00 :   7bd41:  je     7be50 <_IO_wdefault_xsputn+0x170>
    0.00 :   7bd47:  sub    $0x1,%r14
    0.00 :   7bd4b:  mov    0xa0(%r15),%r8
    0.00 :   7bd52:  mov    %r13,%rsi
    0.00 :   7bd55:  mov    0x20(%r8),%rdi
    0.00 :   7bd59:  mov    0x28(%r8),%rax
    0.00 :   7bd5d:  sub    %rdi,%rax
    0.00 :   7bd60:  test   %rax,%rax
    0.00 :   7bd63:  jle    7bd7e <_IO_wdefault_xsputn+0x9e>
    0.00 :   7bd65:  sar    $0x2,%rax
    0.00 :   7bd69:  cmp    %r14,%rax
    0.00 :   7bd6c:  cmova  %r14,%rax
    0.00 :   7bd70:  mov    %rax,%rbx
    0.00 :   7bd73:  cmp    $0x14,%rax
    0.00 :   7bd77:  jg     7bdb0 <_IO_wdefault_xsputn+0xd0>
    0.00 :   7bd79:  test   %rax,%rax
    0.00 :   7bd7c:  jne    7bdf8 <_IO_wdefault_xsputn+0x118>
    0.00 :   7bd7e:  test   %r14,%r14
    0.00 :   7bd81:  je     7bde0 <_IO_wdefault_xsputn+0x100>
    0.00 :   7bd83:  mov    0xc0(%r15),%eax
    0.00 :   7bd8a:  mov    (%rsi),%edx
    0.00 :   7bd8c:  lea    0x4(%rsi),%r13
    0.00 :   7bd90:  test   %eax,%eax
    0.00 :   7bd92:  jne    7bd20 <_IO_wdefault_xsputn+0x40>
    0.00 :   7bd94:  mov    $0x1,%esi
    0.00 :   7bd99:  mov    %r15,%rdi
    0.00 :   7bd9c:  mov    %edx,0x8(%rsp)
    0.00 :   7bda0:  call   7e990 <_IO_fwide>
    0.00 :   7bda5:  mov    0x8(%rsp),%edx
    0.00 :   7bda9:  jmp    7bd20 <_IO_wdefault_xsputn+0x40>
    0.00 :   7bdae:  xchg   %ax,%ax
    0.00 :   7bdb0:  mov    %rax,%rdx
    0.00 :   7bdb3:  mov    %r8,0x10(%rsp)
    0.00 :   7bdb8:  sub    %rbx,%r14
    0.00 :   7bdbb:  mov    %r13,0x8(%rsp)
    0.00 :   7bdc0:  call   b3d50 <wmempcpy>
    0.00 :   7bdc5:  mov    0x10(%rsp),%r8
    0.00 :   7bdca:  mov    0x8(%rsp),%rsi
    0.00 :   7bdcf:  mov    %rax,0x20(%r8)
    0.00 :   7bdd3:  lea    (%rsi,%rbx,4),%rsi
    0.00 :   7bdd7:  test   %r14,%r14
    0.00 :   7bdda:  jne    7bd83 <_IO_wdefault_xsputn+0xa3>
    0.00 :   7bddc:  nopl   0x0(%rax)
    0.00 :   7bde0:  mov    0x18(%rsp),%rax
    0.00 :   7bde5:  add    $0x28,%rsp
    0.00 :   7bde9:  pop    %rbx
    0.00 :   7bdea:  pop    %rbp
    0.00 :   7bdeb:  pop    %r12
    0.00 :   7bded:  pop    %r13
    0.00 :   7bdef:  pop    %r14
    0.00 :   7bdf1:  pop    %r15
    0.00 :   7bdf3:  ret
    0.00 :   7bdf4:  nopl   0x0(%rax)
    0.00 :   7bdf8:  lea    0x0(,%rax,4),%r9
    0.00 :   7be00:  xor    %eax,%eax
    0.00 :   7be02:  nopw   0x0(%rax,%rax,1)
    0.00 :   7be08:  mov    0x0(%r13,%rax,1),%edx
    0.00 :   7be0d:  mov    %edx,(%rdi,%rax,1)
    0.00 :   7be10:  add    $0x4,%rax
    0.00 :   7be14:  cmp    %rax,%r9
    0.00 :   7be17:  jne    7be08 <_IO_wdefault_xsputn+0x128>
    0.00 :   7be19:  add    %r9,%rdi
    0.00 :   7be1c:  lea    0x0(%r13,%r9,1),%rsi
    0.00 :   7be21:  sub    %rbx,%r14
    0.00 :   7be24:  mov    %rdi,0x20(%r8)
    0.00 :   7be28:  jmp    7bd7e <_IO_wdefault_xsputn+0x9e>
    0.00 :   7be2d:  nopl   (%rax)
    0.00 :   7be30:  mov    %edx,0x8(%rsp)
    0.00 :   7be34:  call   818e0 <_IO_vtable_check>
    0.00 :   7be39:  mov    0x8(%rsp),%edx
    0.00 :   7be3d:  mov    %r15,%rdi
    0.00 :   7be40:  mov    %edx,%esi
    0.00 :   7be42:  call   *0x18(%rbx)
    0.00 :   7be45:  cmp    $0xffffffff,%eax
    0.00 :   7be48:  jne    7bd47 <_IO_wdefault_xsputn+0x67>
    0.00 :   7be4e:  xchg   %ax,%ax
    0.00 :   7be50:  sub    %r14,0x18(%rsp)
    0.00 :   7be55:  mov    0x18(%rsp),%rax
    0.00 :   7be5a:  jmp    7bde5 <_IO_wdefault_xsputn+0x105>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[83d10]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000083d10 <_IO_do_write@@GLIBC_2.2.5>:
         : 6     __GI__IO_do_write():
  100.00 :   83d10:  endbr64 // libc.so.6[83d10]
    0.00 :   83d14:  test   %rdx,%rdx
    0.00 :   83d17:  jne    83d20 <_IO_do_write@@GLIBC_2.2.5+0x10>
    0.00 :   83d19:  xor    %eax,%eax
    0.00 :   83d1b:  ret
    0.00 :   83d1c:  nopl   0x0(%rax)
    0.00 :   83d20:  push   %rbx
    0.00 :   83d21:  mov    %rdx,%rbx
    0.00 :   83d24:  call   82000 <new_do_write>
    0.00 :   83d29:  cmp    %rax,%rbx
    0.00 :   83d2c:  pop    %rbx
    0.00 :   83d2d:  setne  %al
    0.00 :   83d30:  movzbl %al,%eax
    0.00 :   83d33:  neg    %eax
    0.00 :   83d35:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[853c0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000853c0 <_IO_no_init>:
         : 6     _IO_no_init():
  100.00 :   853c0:  endbr64 // libc.so.6[853c0]
    0.00 :   853c4:  push   %r13
    0.00 :   853c6:  mov    %r8,%r13
    0.00 :   853c9:  push   %r12
    0.00 :   853cb:  mov    %edx,%r12d
    0.00 :   853ce:  push   %rbp
    0.00 :   853cf:  mov    %rdi,%rbp
    0.00 :   853d2:  push   %rbx
    0.00 :   853d3:  mov    %rcx,%rbx
    0.00 :   853d6:  sub    $0x8,%rsp
    0.00 :   853da:  call   85350 <_IO_old_init>
    0.00 :   853df:  mov    %r12d,0xc0(%rbp)
    0.00 :   853e6:  test   %r12d,%r12d
    0.00 :   853e9:  js     85430 <_IO_no_init+0x70>
    0.00 :   853eb:  mov    %rbx,0xa0(%rbp)
    0.00 :   853f2:  pxor   %xmm0,%xmm0
    0.00 :   853f6:  movq   $0x0,0x50(%rbx)
    0.00 :   853fe:  mov    %r13,0xe0(%rbx)
    0.00 :   85405:  movups %xmm0,(%rbx)
    0.00 :   85408:  movups %xmm0,0x10(%rbx)
    0.00 :   8540c:  movups %xmm0,0x20(%rbx)
    0.00 :   85410:  movups %xmm0,0x30(%rbx)
    0.00 :   85414:  movups %xmm0,0x40(%rbx)
    0.00 :   85418:  movq   $0x0,0xa8(%rbp)
    0.00 :   85423:  add    $0x8,%rsp
    0.00 :   85427:  pop    %rbx
    0.00 :   85428:  pop    %rbp
    0.00 :   85429:  pop    %r12
    0.00 :   8542b:  pop    %r13
    0.00 :   8542d:  ret
    0.00 :   8542e:  xchg   %ax,%ax
    0.00 :   85430:  movq   $0xffffffffffffffff,0xa0(%rbp)
    0.00 :   8543b:  jmp    85418 <_IO_no_init+0x58>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

  100.00 dbt2-driver[407782]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040774a <_send>:
         : 6      _send():
    0.00 :   40774a: push   %rbp
    0.00 :   40774b: mov    %rsp,%rbp
    0.00 :   40774e: sub    $0x20,%rsp
    0.00 :   407752: mov    %edi,-0x14(%rbp)
    0.00 :   407755: mov    %rsi,-0x20(%rbp)
    0.00 :   407759: mov    %edx,-0x18(%rbp)
    0.00 :   40775c: movl   $0x0,-0x8(%rbp)
    0.00 :   407763: mov    -0x18(%rbp),%eax
    0.00 :   407766: mov    %eax,-0x4(%rbp)
    0.00 :   407769: mov    -0x4(%rbp),%eax
    0.00 :   40776c: movslq %eax,%rdx
    0.00 :   40776f: mov    -0x20(%rbp),%rsi
    0.00 :   407773: mov    -0x14(%rbp),%eax
    0.00 :   407776: mov    $0x0,%ecx
    0.00 :   40777b: mov    %eax,%edi
    0.00 :   40777d: call   407120 <send@plt>
  100.00 :   407782: mov    %eax,-0x8(%rbp) // dbt2-driver[407782]
    0.00 :   407785: cmpl   $0xffffffff,-0x8(%rbp)
    0.00 :   407789: jne    407792 <_send+0x48>
    0.00 :   40778b: mov    $0xffffffff,%eax
    0.00 :   407790: jmp    4077b9 <_send+0x6f>
    0.00 :   407792: cmpl   $0x0,-0x8(%rbp)
    0.00 :   407796: jne    40779f <_send+0x55>
    0.00 :   407798: mov    $0x0,%eax
    0.00 :   40779d: jmp    4077b9 <_send+0x6f>
    0.00 :   40779f: mov    -0x8(%rbp),%eax
    0.00 :   4077a2: cltq
    0.00 :   4077a4: add    %rax,-0x20(%rbp)
    0.00 :   4077a8: mov    -0x8(%rbp),%eax
    0.00 :   4077ab: sub    %eax,-0x4(%rbp)
    0.00 :   4077ae: mov    -0x8(%rbp),%eax
    0.00 :   4077b1: cmp    -0x18(%rbp),%eax
    0.00 :   4077b4: jne    407769 <_send+0x1f>
    0.00 :   4077b6: mov    -0x8(%rbp),%eax
    0.00 :   4077b9: leave
    0.00 :   4077ba: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[7b940]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000007b940 <_IO_wsetb>:
         : 6     __GI__IO_wsetb():
  100.00 :   7b940:  endbr64 // libc.so.6[7b940]
    0.00 :   7b944:  push   %r13
    0.00 :   7b946:  mov    %rsi,%r13
    0.00 :   7b949:  push   %r12
    0.00 :   7b94b:  mov    %rdx,%r12
    0.00 :   7b94e:  push   %rbp
    0.00 :   7b94f:  mov    %ecx,%ebp
    0.00 :   7b951:  push   %rbx
    0.00 :   7b952:  mov    %rdi,%rbx
    0.00 :   7b955:  sub    $0x8,%rsp
    0.00 :   7b959:  mov    0xa0(%rdi),%rdi
    0.00 :   7b960:  mov    0x74(%rbx),%eax
    0.00 :   7b963:  mov    0x30(%rdi),%rdx
    0.00 :   7b967:  test   %rdx,%rdx
    0.00 :   7b96a:  je     7b970 <_IO_wsetb+0x30>
    0.00 :   7b96c:  test   $0x8,%al
    0.00 :   7b96e:  je     7b998 <_IO_wsetb+0x58>
    0.00 :   7b970:  mov    %eax,%edx
    0.00 :   7b972:  or     $0x8,%eax
    0.00 :   7b975:  mov    %r13,0x30(%rdi)
    0.00 :   7b979:  and    $0xfffffff7,%edx
    0.00 :   7b97c:  test   %ebp,%ebp
    0.00 :   7b97e:  mov    %r12,0x38(%rdi)
    0.00 :   7b982:  cmovne %edx,%eax
    0.00 :   7b985:  mov    %eax,0x74(%rbx)
    0.00 :   7b988:  add    $0x8,%rsp
    0.00 :   7b98c:  pop    %rbx
    0.00 :   7b98d:  pop    %rbp
    0.00 :   7b98e:  pop    %r12
    0.00 :   7b990:  pop    %r13
    0.00 :   7b992:  ret
    0.00 :   7b993:  nopl   0x0(%rax,%rax,1)
    0.00 :   7b998:  mov    %rdx,%rdi
    0.00 :   7b99b:  call   26420 <free@plt>
    0.00 :   7b9a0:  mov    0xa0(%rbx),%rdi
    0.00 :   7b9a7:  mov    0x74(%rbx),%eax
    0.00 :   7b9aa:  jmp    7b970 <_IO_wsetb+0x30>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz
----------------------------------------------

  100.00 [virtio_gpu][5670]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000005260 <virtio_gpu_primary_plane_update>:
         : 6    virtio_gpu_primary_plane_update():
    0.00 :   5260:   call   5265 <virtio_gpu_primary_plane_update+0x5>
    0.00 :   5265:   push   %r15
    0.00 :   5267:   push   %r14
    0.00 :   5269:   push   %r13
    0.00 :   526b:   push   %r12
    0.00 :   526d:   push   %rbp
    0.00 :   526e:   push   %rbx
    0.00 :   526f:   mov    %rdi,%rbx
    0.00 :   5272:   sub    $0x30,%rsp
    0.00 :   5276:   mov    0x24c(%rdi),%eax
    0.00 :   527c:   movq   $0x0,0x20(%rsp)
    0.00 :   5285:   shl    $0x5,%rax
    0.00 :   5289:   add    0x18(%rsi),%rax
    0.00 :   528d:   mov    0x258(%rdi),%rsi
    0.00 :   5294:   mov    0x10(%rax),%r14
    0.00 :   5298:   mov    (%rdi),%rax
    0.00 :   529b:   movq   $0x0,0x28(%rsp)
    0.00 :   52a4:   mov    0x38(%rax),%r12
    0.00 :   52a8:   mov    0x8(%rsi),%rax
    0.00 :   52ac:   mov    0x8(%r14),%rbp
    0.00 :   52b0:   test   %rax,%rax
    0.00 :   52b3:   je     54d5 <virtio_gpu_primary_plane_update+0x275>
    0.00 :   52b9:   test   %rbp,%rbp
    0.00 :   52bc:   je     54cc <virtio_gpu_primary_plane_update+0x26c>
    0.00 :   52c2:   sub    $0x8,%rbp
    0.00 :   52c6:   test   %rbp,%rbp
    0.00 :   52c9:   je     54de <virtio_gpu_primary_plane_update+0x27e>
    0.00 :   52cf:   cmpq   $0x0,0x10(%rsi)
    0.00 :   52d4:   je     52e3 <virtio_gpu_primary_plane_update+0x83>
    0.00 :   52d6:   mov    0x350(%rbp),%rax
    0.00 :   52dd:   cmpb   $0x0,0x9(%rax)
    0.00 :   52e1:   jne    531f <virtio_gpu_primary_plane_update+0xbf>
    0.00 :   52e3:   nopl   0x0(%rax,%rax,1)
    0.00 :   52e8:   movzwl 0x3a(%rsi),%r8d
    0.00 :   52ed:   movzwl 0x3e(%rsi),%ecx
    0.00 :   52f1:   xor    %r9d,%r9d
    0.00 :   52f4:   xor    %edx,%edx
    0.00 :   52f6:   mov    0x0(%rbp),%esi
    0.00 :   52f9:   push   $0x0
    0.00 :   52fb:   mov    %r12,%rdi
    0.00 :   52fe:   call   5303 <virtio_gpu_primary_plane_update+0xa3>
    0.00 :   5303:   mov    %r12,%rdi
    0.00 :   5306:   call   530b <virtio_gpu_primary_plane_update+0xab>
    0.00 :   530b:   pop    %rbx
    0.00 :   530c:   add    $0x30,%rsp
    0.00 :   5310:   pop    %rbx
    0.00 :   5311:   pop    %rbp
    0.00 :   5312:   pop    %r12
    0.00 :   5314:   pop    %r13
    0.00 :   5316:   pop    %r14
    0.00 :   5318:   pop    %r15
    0.00 :   531a:   jmp    531f <virtio_gpu_primary_plane_update+0xbf>
    0.00 :   531f:   lea    0x20(%rsp),%rdx
    0.00 :   5324:   mov    %r14,%rdi
    0.00 :   5327:   call   532c <virtio_gpu_primary_plane_update+0xcc>
    0.00 :   532c:   test   %al,%al
    0.00 :   532e:   je     530c <virtio_gpu_primary_plane_update+0xac>
    0.00 :   5330:   mov    0x258(%rbx),%rax
    0.00 :   5337:   mov    0x10(%rax),%r15
    0.00 :   533b:   mov    0xa8(%r15),%r13
    0.00 :   5342:   cmpb   $0x0,0x1d4(%r13)
    0.00 :   534a:   jne    5572 <virtio_gpu_primary_plane_update+0x312>
    0.00 :   5350:   cmp    %r15,0x10(%r14)
    0.00 :   5354:   je     5617 <virtio_gpu_primary_plane_update+0x3b7>
    0.00 :   535a:   movb   $0x0,0x9c8(%rbp)
    0.00 :   5361:   nopl   0x0(%rax,%rax,1)
    0.00 :   5366:   mov    0x258(%rbx),%rax
    0.00 :   536d:   mov    0x0(%rbp),%esi
    0.00 :   5370:   cmpw   $0x0,0x1d6(%r13)
    0.00 :   5379:   movzwl 0x36(%rax),%edx
    0.00 :   537d:   movzwl 0x32(%rax),%r9d
    0.00 :   5382:   movzwl 0x3a(%rax),%r8d
    0.00 :   5387:   movzwl 0x3e(%rax),%ecx
    0.00 :   538b:   jne    54f3 <virtio_gpu_primary_plane_update+0x293>
    0.00 :   5391:   mov    0x1d0(%r13),%eax
    0.00 :   5398:   push   %rdx
    0.00 :   5399:   mov    %r12,%rdi
    0.00 :   539c:   mov    %eax,%edx
    0.00 :   539e:   call   53a3 <virtio_gpu_primary_plane_update+0x143>
    0.00 :   53a3:   mov    0x258(%rbx),%rax
    0.00 :   53aa:   pop    %rdi
    0.00 :   53ab:   mov    0x10(%rax),%r15
    0.00 :   53af:   mov    0x24(%rsp),%r12d
    0.00 :   53b4:   mov    0x2c(%rsp),%eax
    0.00 :   53b8:   mov    0x20(%rsp),%ebp
    0.00 :   53bc:   mov    0x28(%rsp),%ecx
    0.00 :   53c0:   sub    %r12d,%eax
    0.00 :   53c3:   mov    0xa8(%r15),%r14
    0.00 :   53ca:   mov    %eax,0x4(%rsp)
    0.00 :   53ce:   mov    (%rbx),%rax
    0.00 :   53d1:   sub    %ebp,%ecx
    0.00 :   53d3:   cmpq   $0x0,0xc8(%r15)
    0.00 :   53db:   mov    %ecx,0x8(%rsp)
    0.00 :   53df:   mov    0x38(%rax),%r13
    0.00 :   53e3:   je     5645 <virtio_gpu_primary_plane_update+0x3e5>
    0.00 :   53e9:   mov    $0x1,%edi
    0.00 :   53ee:   call   53f3 <virtio_gpu_primary_plane_update+0x193>
    0.00 :   53f3:   mov    %rax,%rbx
    0.00 :   53f6:   test   %rax,%rax
    0.00 :   53f9:   je     530c <virtio_gpu_primary_plane_update+0xac>
    0.00 :   53ff:   mov    0xa8(%r15),%rsi
    0.00 :   5406:   mov    %rax,%rdi
    0.00 :   5409:   call   540e <virtio_gpu_primary_plane_update+0x1ae>
    0.00 :   540e:   mov    %rbx,%rdi
    0.00 :   5411:   call   5416 <virtio_gpu_primary_plane_update+0x1b6>
    0.00 :   5416:   mov    %r12d,%ecx
    0.00 :   5419:   mov    %ebp,%edx
    0.00 :   541b:   mov    %r13,%rdi
    0.00 :   541e:   mov    0x1d0(%r14),%esi
    0.00 :   5425:   push   0xc8(%r15)
    0.00 :   542c:   push   %rbx
    0.00 :   542d:   mov    0x14(%rsp),%r9d
    0.00 :   5432:   mov    0x18(%rsp),%r8d
    0.00 :   5437:   call   543c <virtio_gpu_primary_plane_update+0x1dc>
    0.00 :   543c:   mov    %r13,%rdi
    0.00 :   543f:   call   5444 <virtio_gpu_primary_plane_update+0x1e4>
    0.00 :   5444:   mov    $0x1,%esi
    0.00 :   5449:   mov    $0x32,%edx
    0.00 :   544e:   mov    0xc8(%r15),%rdi
    0.00 :   5455:   call   545a <virtio_gpu_primary_plane_update+0x1fa>
    0.00 :   545a:   mov    0xc8(%r15),%rax
    0.00 :   5461:   pop    %rcx
    0.00 :   5462:   pop    %rsi
    0.00 :   5463:   test   %rax,%rax
    0.00 :   5466:   je     548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   5468:   lea    0x38(%rax),%rdi
    0.00 :   546c:   mov    $0xffffffff,%edx
    0.00 :   5471:   lock xadd %edx,0x38(%rax)
    0.00 :   5476:   cmp    $0x1,%edx
    0.00 :   5479:   je     5676 <virtio_gpu_primary_plane_update+0x416>
    0.00 :   547f:   test   %edx,%edx
    0.00 :   5481:   jg     548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   5483:   mov    $0x3,%esi
    0.00 :   5488:   call   548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   548d:   movq   $0x0,0xc8(%r15)
    0.00 :   5498:   add    $0x30,%rsp
    0.00 :   549c:   pop    %rbx
    0.00 :   549d:   pop    %rbp
    0.00 :   549e:   pop    %r12
    0.00 :   54a0:   pop    %r13
    0.00 :   54a2:   pop    %r14
    0.00 :   54a4:   pop    %r15
    0.00 :   54a6:   jmp    54ab <virtio_gpu_primary_plane_update+0x24b>
    0.00 :   54ab:   xor    %esi,%esi
    0.00 :   54ad:   mov    $0x0,%rdx
    0.00 :   54b4:   mov    $0x0,%rdi
    0.00 :   54bb:   call   54c0 <virtio_gpu_primary_plane_update+0x260>
    0.00 :   54c0:   mov    0x258(%rbx),%rsi
    0.00 :   54c7:   jmp    52e8 <virtio_gpu_primary_plane_update+0x88>
    0.00 :   54cc:   lea    -0x8(%rax),%rbp
    0.00 :   54d0:   jmp    52c6 <virtio_gpu_primary_plane_update+0x66>
    0.00 :   54d5:   test   %rbp,%rbp
    0.00 :   54d8:   jne    52c2 <virtio_gpu_primary_plane_update+0x62>
    0.00 :   54de:   ud2
    0.00 :   54e0:   add    $0x30,%rsp
    0.00 :   54e4:   pop    %rbx
    0.00 :   54e5:   pop    %rbp
    0.00 :   54e6:   pop    %r12
    0.00 :   54e8:   pop    %r13
    0.00 :   54ea:   pop    %r14
    0.00 :   54ec:   pop    %r15
    0.00 :   54ee:   jmp    54f3 <virtio_gpu_primary_plane_update+0x293>
    0.00 :   54f3:   mov    0x10(%rax),%rax
    0.00 :   54f7:   push   %rdx
    0.00 :   54f8:   mov    %r12,%rdi
    0.00 :   54fb:   mov    %r13,%rdx
    0.00 :   54fe:   push   %r9
    0.00 :   5500:   mov    %r8d,%r9d
    0.00 :   5503:   mov    %ecx,%r8d
    0.00 :   5506:   mov    %rax,%rcx
    0.00 :   5509:   call   550e <virtio_gpu_primary_plane_update+0x2ae>
    0.00 :   550e:   mov    0x258(%rbx),%rax
    0.00 :   5515:   pop    %r8
    0.00 :   5517:   pop    %r9
    0.00 :   5519:   mov    0x10(%rax),%r15
    0.00 :   551d:   jmp    53af <virtio_gpu_primary_plane_update+0x14f>
    0.00 :   5522:   mov    0x258(%rbx),%rax
    0.00 :   5529:   mov    0x1d0(%r13),%ecx
    0.00 :   5530:   xor    %esi,%esi
    0.00 :   5532:   mov    $0x0,%rdi
    0.00 :   5539:   movzwl 0x36(%rax),%edx
    0.00 :   553d:   mov    0x2c(%rax),%r9d
    0.00 :   5541:   mov    0x28(%rax),%r8d
    0.00 :   5545:   push   %rdx
    0.00 :   5546:   movzwl 0x32(%rax),%edx
    0.00 :   554a:   push   %rdx
    0.00 :   554b:   movzwl 0x3a(%rax),%edx
    0.00 :   554f:   push   %rdx
    0.00 :   5550:   movzwl 0x3e(%rax),%edx
    0.00 :   5554:   push   %rdx
    0.00 :   5555:   mov    0x24(%rax),%edx
    0.00 :   5558:   push   %rdx
    0.00 :   5559:   mov    0x20(%rax),%eax
    0.00 :   555c:   mov    $0x0,%rdx
    0.00 :   5563:   push   %rax
    0.00 :   5564:   call   5569 <virtio_gpu_primary_plane_update+0x309>
    0.00 :   5569:   add    $0x30,%rsp
    0.00 :   556d:   jmp    5366 <virtio_gpu_primary_plane_update+0x106>
    0.00 :   5572:   mov    0x20(%rsp),%eax
    0.00 :   5576:   mov    $0x1,%edi
    0.00 :   557b:   mov    %eax,0x4(%rsp)
    0.00 :   557f:   mov    0x24(%rsp),%eax
    0.00 :   5583:   mov    %eax,0x8(%rsp)
    0.00 :   5587:   mov    0x28(%rsp),%eax
    0.00 :   558b:   mov    %eax,0xc(%rsp)
    0.00 :   558f:   mov    0x2c(%rsp),%eax
    0.00 :   5593:   mov    %eax,0x10(%rsp)
    0.00 :   5597:   mov    0x48(%r15),%rax
    0.00 :   559b:   mov    0x58(%r15),%r15d
    0.00 :   559f:   movzbl 0x6(%rax),%eax
    0.00 :   55a3:   mov    %al,0x17(%rsp)
    0.00 :   55a7:   call   55ac <virtio_gpu_primary_plane_update+0x34c>
    0.00 :   55ac:   test   %rax,%rax
    0.00 :   55af:   je     5680 <virtio_gpu_primary_plane_update+0x420>
    0.00 :   55b5:   mov    %rax,%rdi
    0.00 :   55b8:   mov    %r13,%rsi
    0.00 :   55bb:   mov    %rax,0x18(%rsp)
    0.00 :   55c0:   call   55c5 <virtio_gpu_primary_plane_update+0x365>
    0.00 :   55c5:   mov    0x8(%rsp),%r9d
    0.00 :   55ca:   mov    0x4(%rsp),%r8d
    0.00 :   55cf:   movzbl 0x17(%rsp),%edx
    0.00 :   55d4:   mov    0x10(%rsp),%ecx
    0.00 :   55d8:   mov    0xc(%rsp),%esi
    0.00 :   55dc:   imul   %r9d,%r15d
    0.00 :   55e0:   push   $0x0
    0.00 :   55e2:   imul   %r8d,%edx
    0.00 :   55e6:   mov    0x20(%rsp),%rax
    0.00 :   55eb:   sub    %r9d,%ecx
    0.00 :   55ee:   sub    %r8d,%esi
    0.00 :   55f1:   push   %rax
    0.00 :   55f2:   lea    (%rdx,%r15,1),%edi
    0.00 :   55f6:   mov    %esi,%edx
    0.00 :   55f8:   mov    %rdi,%rsi
    0.00 :   55fb:   mov    %r12,%rdi
    0.00 :   55fe:   call   5603 <virtio_gpu_primary_plane_update+0x3a3>
    0.00 :   5603:   mov    0x258(%rbx),%rax
    0.00 :   560a:   pop    %r10
    0.00 :   560c:   pop    %r11
    0.00 :   560e:   mov    0x10(%rax),%r15
    0.00 :   5612:   jmp    5350 <virtio_gpu_primary_plane_update+0xf0>
    0.00 :   5617:   mov    0x38(%r14),%rcx
    0.00 :   561b:   cmp    %rcx,0x38(%rax)
    0.00 :   561f:   jne    535a <virtio_gpu_primary_plane_update+0xfa>
    0.00 :   5625:   mov    0x30(%r14),%rcx
    0.00 :   5629:   cmp    %rcx,0x30(%rax)
    0.00 :   562d:   jne    535a <virtio_gpu_primary_plane_update+0xfa>
    0.00 :   5633:   cmpb   $0x0,0x9c8(%rbp)
    0.00 :   563a:   je     53af <virtio_gpu_primary_plane_update+0x14f>
    0.00 :   5640:   jmp    535a <virtio_gpu_primary_plane_update+0xfa>
    0.00 :   5645:   mov    0x1d0(%r14),%esi
    0.00 :   564c:   push   $0x0
    0.00 :   564e:   mov    %ebp,%edx
    0.00 :   5650:   mov    %r12d,%ecx
    0.00 :   5653:   push   $0x0
    0.00 :   5655:   mov    0x14(%rsp),%r9d
    0.00 :   565a:   mov    %r13,%rdi
    0.00 :   565d:   mov    0x18(%rsp),%r8d
    0.00 :   5662:   call   5667 <virtio_gpu_primary_plane_update+0x407>
    0.00 :   5667:   mov    %r13,%rdi
    0.00 :   566a:   call   566f <virtio_gpu_primary_plane_update+0x40f>
    0.00 :   566f:   pop    %rax
  100.00 :   5670:   pop    %rdx // [virtio_gpu][5670]
    0.00 :   5671:   jmp    530c <virtio_gpu_primary_plane_update+0xac>
    0.00 :   5676:   call   567b <virtio_gpu_primary_plane_update+0x41b>
    0.00 :   567b:   jmp    548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   5680:   mov    0x258(%rbx),%rax
    0.00 :   5687:   mov    0x10(%rax),%r15
    0.00 :   568b:   jmp    5350 <virtio_gpu_primary_plane_update+0xf0>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-open.c:219
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    000000000000b950 <_dl_find_dso_for_object>:
         : 6    __GI__dl_find_dso_for_object():
    0.00 :   b950:   endbr64
    0.00 :   b954:   push   %r13
    0.00 :   b956:   push   %r12
    0.00 :   b958:   push   %rbp
    0.00 :   b959:   push   %rbx
    0.00 :   b95a:   sub    $0x8,%rsp
    0.00 :   b95e:   cmpq   $0x0,0x2a09a(%rip)        # 35a00 <_rtld_global+0xa00>
    0.00 :   b966:   je     b9c7 <_dl_find_dso_for_object+0x77>
    0.00 :   b968:   mov    %rdi,%rbp
    0.00 :   b96b:   lea    0x2968e(%rip),%r13        # 35000 <_rtld_global>
    0.00 :   b972:   xor    %r12d,%r12d
    0.00 :   b975:   mov    0x0(%r13),%rbx
    0.00 :   b979:   test   %rbx,%rbx
    0.00 :   b97c:   je     b9b3 <_dl_find_dso_for_object+0x63>
    0.00 :   b97e:   xchg   %ax,%ax
    0.00 :   b980:   cmp    0x370(%rbx),%rbp
    0.00 :   b987:   jb     b9aa <_dl_find_dso_for_object+0x5a>
    0.00 :   b989:   cmp    0x378(%rbx),%rbp
    0.00 :   b990:   jae    b9aa <_dl_find_dso_for_object+0x5a>
    0.00 :   b992:   testb  $0x8,0x336(%rbx)
    0.00 :   b999:   jne    b9e0 <_dl_find_dso_for_object+0x90>
    0.00 :   b99b:   mov    %rbp,%rsi
    0.00 :   b99e:   mov    %rbx,%rdi
    0.00 :   b9a1:   call   21560 <_dl_addr_inside_object>
    0.00 :   b9a6:   test   %eax,%eax
    0.00 :   b9a8:   jne    b9e0 <_dl_find_dso_for_object+0x90>
  100.00 :   b9aa:   mov    0x18(%rbx),%rbx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-open.c:219
    0.00 :   b9ae:   test   %rbx,%rbx
    0.00 :   b9b1:   jne    b980 <_dl_find_dso_for_object+0x30>
    0.00 :   b9b3:   add    $0x1,%r12
    0.00 :   b9b7:   add    $0xa0,%r13
    0.00 :   b9be:   cmp    0x2a03b(%rip),%r12        # 35a00 <_rtld_global+0xa00>
    0.00 :   b9c5:   jb     b975 <_dl_find_dso_for_object+0x25>
    0.00 :   b9c7:   add    $0x8,%rsp
    0.00 :   b9cb:   xor    %ebx,%ebx
    0.00 :   b9cd:   mov    %rbx,%rax
    0.00 :   b9d0:   pop    %rbx
    0.00 :   b9d1:   pop    %rbp
    0.00 :   b9d2:   pop    %r12
    0.00 :   b9d4:   pop    %r13
    0.00 :   b9d6:   ret
    0.00 :   b9d7:   nopw   0x0(%rax,%rax,1)
    0.00 :   b9e0:   cmp    %r12,0x30(%rbx)
    0.00 :   b9e4:   jne    b9f4 <_dl_find_dso_for_object+0xa4>
    0.00 :   b9e6:   add    $0x8,%rsp
    0.00 :   b9ea:   mov    %rbx,%rax
    0.00 :   b9ed:   pop    %rbx
    0.00 :   b9ee:   pop    %rbp
    0.00 :   b9ef:   pop    %r12
    0.00 :   b9f1:   pop    %r13
    0.00 :   b9f3:   ret
    0.00 :   b9f4:   lea    0x1f4f5(%rip),%rcx        # 2aef0 <__PRETTY_FUNCTION__.0>
    0.00 :   b9fb:   mov    $0xe0,%edx
    0.00 :   ba00:   lea    0x1e303(%rip),%rsi        # 29d0a <_sys_errname+0x94a>
    0.00 :   ba07:   lea    0x1df5a(%rip),%rdi        # 29968 <_sys_errname+0x5a8>
    0.00 :   ba0e:   call   19f20 <__GI___assert_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[158991]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000158970 <__strrchr_avx2>:
         : 6      __strrchr_avx2():
    0.00 :   158970: endbr64
    0.00 :   158974: vmovd  %esi,%xmm7
    0.00 :   158978: mov    %edi,%eax
    0.00 :   15897a: vpbroadcastb %xmm7,%ymm7
    0.00 :   15897f: vpxor  %xmm0,%xmm0,%xmm0
    0.00 :   158983: shl    $0x14,%eax
    0.00 :   158986: cmp    $0xfe000000,%eax
    0.00 :   15898b: ja     158bc6 <__strrchr_avx2+0x256>
  100.00 :   158991: vmovdqu (%rdi),%ymm1 // libc.so.6[158991]
    0.00 :   158995: vpcmpeqb %ymm1,%ymm0,%ymm6
    0.00 :   158999: vpmovmskb %ymm6,%ecx
    0.00 :   15899d: test   %ecx,%ecx
    0.00 :   15899f: je     158a30 <__strrchr_avx2+0xc0>
    0.00 :   1589a5: vpcmpeqb %ymm1,%ymm7,%ymm1
    0.00 :   1589a9: vpmovmskb %ymm1,%eax
    0.00 :   1589ad: blsmsk %ecx,%ecx
    0.00 :   1589b2: and    %ecx,%eax
    0.00 :   1589b4: je     1589bc <__strrchr_avx2+0x4c>
    0.00 :   1589b6: bsr    %eax,%eax
    0.00 :   1589b9: add    %rdi,%rax
    0.00 :   1589bc: vzeroupper
    0.00 :   1589bf: ret
    0.00 :   1589c0: vpcmpeqb %ymm2,%ymm7,%ymm6
    0.00 :   1589c4: vpmovmskb %ymm6,%eax
    0.00 :   1589c8: blsmsk %ecx,%ecx
    0.00 :   1589cd: and    %ecx,%eax
    0.00 :   1589cf: jne    158a00 <__strrchr_avx2+0x90>
    0.00 :   1589d1: vpcmpeqb %ymm1,%ymm7,%ymm6
    0.00 :   1589d5: vpmovmskb %ymm6,%eax
    0.00 :   1589d9: test   %eax,%eax
    0.00 :   1589db: je     1589e3 <__strrchr_avx2+0x73>
    0.00 :   1589dd: bsr    %eax,%eax
    0.00 :   1589e0: add    %r8,%rax
    0.00 :   1589e3: vzeroupper
    0.00 :   1589e6: ret
    0.00 :   1589e7: nopw   0x0(%rax,%rax,1)
    0.00 :   1589f0: vpcmpeqb %ymm2,%ymm7,%ymm6
    0.00 :   1589f4: vpmovmskb %ymm6,%eax
    0.00 :   1589f8: test   %eax,%eax
    0.00 :   1589fa: je     1589d1 <__strrchr_avx2+0x61>
    0.00 :   1589fc: nopl   0x0(%rax)
    0.00 :   158a00: bsr    %eax,%eax
    0.00 :   158a03: lea    0x1(%rdi,%rax,1),%rax
    0.00 :   158a08: vzeroupper
    0.00 :   158a0b: ret
    0.00 :   158a0c: nopl   0x0(%rax)
    0.00 :   158a10: vpcmpeqb %ymm3,%ymm7,%ymm6
    0.00 :   158a14: vpmovmskb %ymm6,%eax
    0.00 :   158a18: blsmsk %ecx,%ecx
    0.00 :   158a1d: and    %ecx,%eax
    0.00 :   158a1f: je     1589f0 <__strrchr_avx2+0x80>
    0.00 :   158a21: bsr    %eax,%eax
    0.00 :   158a24: lea    0x21(%rdi,%rax,1),%rax
    0.00 :   158a29: vzeroupper
    0.00 :   158a2c: ret
    0.00 :   158a2d: nopl   (%rax)
    0.00 :   158a30: mov    %rdi,%r8
    0.00 :   158a33: or     $0x1f,%rdi
    0.00 :   158a37: vmovdqu 0x1(%rdi),%ymm2
    0.00 :   158a3c: vpcmpeqb %ymm2,%ymm0,%ymm6
    0.00 :   158a40: vpmovmskb %ymm6,%ecx
    0.00 :   158a44: test   %ecx,%ecx
    0.00 :   158a46: jne    1589c0 <__strrchr_avx2+0x50>
    0.00 :   158a4c: vmovdqu 0x21(%rdi),%ymm3
    0.00 :   158a51: vpcmpeqb %ymm3,%ymm0,%ymm6
    0.00 :   158a55: vpmovmskb %ymm6,%ecx
    0.00 :   158a59: test   %ecx,%ecx
    0.00 :   158a5b: jne    158a10 <__strrchr_avx2+0xa0>
    0.00 :   158a5d: mov    %rdi,%rsi
    0.00 :   158a60: add    $0x21,%rdi
    0.00 :   158a64: and    $0xffffffffffffffc0,%rdi
    0.00 :   158a68: nopl   0x0(%rax,%rax,1)
    0.00 :   158a70: vmovdqa (%rdi),%ymm4
    0.00 :   158a74: vmovdqa 0x20(%rdi),%ymm5
    0.00 :   158a79: vpcmpeqb %ymm4,%ymm7,%ymm6
    0.00 :   158a7d: vpminub %ymm4,%ymm5,%ymm8
    0.00 :   158a81: vpcmpeqb %ymm5,%ymm7,%ymm10
    0.00 :   158a85: vpor   %ymm6,%ymm10,%ymm5
    0.00 :   158a89: vpcmpeqb %ymm8,%ymm0,%ymm8
    0.00 :   158a8e: vpor   %ymm5,%ymm8,%ymm9
    0.00 :   158a92: vpmovmskb %ymm9,%eax
    0.00 :   158a97: add    $0x40,%rdi
    0.00 :   158a9b: test   %eax,%eax
    0.00 :   158a9d: je     158a70 <__strrchr_avx2+0x100>
    0.00 :   158a9f: vpmovmskb %ymm8,%ecx
    0.00 :   158aa4: test   %ecx,%ecx
    0.00 :   158aa6: je     158b20 <__strrchr_avx2+0x1b0>
    0.00 :   158aa8: vpmovmskb %ymm5,%eax
    0.00 :   158aac: test   %eax,%eax
    0.00 :   158aae: jne    158ae0 <__strrchr_avx2+0x170>
    0.00 :   158ab0: vpcmpeqb %ymm3,%ymm7,%ymm3
    0.00 :   158ab4: vpcmpeqb %ymm2,%ymm7,%ymm2
    0.00 :   158ab8: vpmovmskb %ymm3,%eax
    0.00 :   158abc: vpmovmskb %ymm2,%edx
    0.00 :   158ac0: add    %rax,%rdx
    0.00 :   158ac3: je     1589d1 <__strrchr_avx2+0x61>
    0.00 :   158ac9: shl    $0x20,%rax
    0.00 :   158acd: add    %rdx,%rax
    0.00 :   158ad0: bsr    %rax,%rax
    0.00 :   158ad4: lea    0x1(%rsi,%rax,1),%rax
    0.00 :   158ad9: vzeroupper
    0.00 :   158adc: ret
    0.00 :   158add: nopl   (%rax)
    0.00 :   158ae0: vpcmpeqb %ymm4,%ymm0,%ymm4
    0.00 :   158ae4: vpmovmskb %ymm4,%edx
    0.00 :   158ae8: shl    $0x20,%rcx
    0.00 :   158aec: or     %rdx,%rcx
    0.00 :   158aef: vpmovmskb %ymm10,%eax
    0.00 :   158af4: vpmovmskb %ymm6,%edx
    0.00 :   158af8: shl    $0x20,%rax
    0.00 :   158afc: or     %rdx,%rax
    0.00 :   158aff: blsmsk %rcx,%rcx
    0.00 :   158b04: and    %rcx,%rax
    0.00 :   158b07: je     158ab0 <__strrchr_avx2+0x140>
    0.00 :   158b09: bsr    %rax,%rax
    0.00 :   158b0d: lea    -0x40(%rdi,%rax,1),%rax
    0.00 :   158b12: vzeroupper
    0.00 :   158b15: ret
    0.00 :   158b16: cs nopw 0x0(%rax,%rax,1)
    0.00 :   158b20: mov    %rdi,%rsi
    0.00 :   158b23: vmovdqu %ymm6,%ymm2
    0.00 :   158b27: vmovdqu %ymm10,%ymm3
    0.00 :   158b2b: nopl   0x0(%rax,%rax,1)
    0.00 :   158b30: vmovdqa (%rdi),%ymm4
    0.00 :   158b34: vmovdqa 0x20(%rdi),%ymm5
    0.00 :   158b39: vpcmpeqb %ymm4,%ymm7,%ymm6
    0.00 :   158b3d: vpminub %ymm4,%ymm5,%ymm1
    0.00 :   158b41: vpcmpeqb %ymm5,%ymm7,%ymm10
    0.00 :   158b45: vpor   %ymm6,%ymm10,%ymm5
    0.00 :   158b49: vpcmpeqb %ymm1,%ymm0,%ymm1
    0.00 :   158b4d: vpor   %ymm5,%ymm1,%ymm9
    0.00 :   158b51: vpmovmskb %ymm9,%eax
    0.00 :   158b56: add    $0x40,%rdi
    0.00 :   158b5a: test   %eax,%eax
    0.00 :   158b5c: je     158b30 <__strrchr_avx2+0x1c0>
    0.00 :   158b5e: vpmovmskb %ymm1,%ecx
    0.00 :   158b62: test   %ecx,%ecx
    0.00 :   158b64: je     158b20 <__strrchr_avx2+0x1b0>
    0.00 :   158b66: vpmovmskb %ymm5,%eax
    0.00 :   158b6a: test   %eax,%eax
    0.00 :   158b6c: jne    158b90 <__strrchr_avx2+0x220>
    0.00 :   158b6e: xchg   %ax,%ax
    0.00 :   158b70: vpmovmskb %ymm3,%eax
    0.00 :   158b74: vpmovmskb %ymm2,%edx
    0.00 :   158b78: shl    $0x20,%rax
    0.00 :   158b7c: or     %rdx,%rax
    0.00 :   158b7f: bsr    %rax,%rax
    0.00 :   158b83: lea    -0x40(%rsi,%rax,1),%rax
    0.00 :   158b88: vzeroupper
    0.00 :   158b8b: ret
    0.00 :   158b8c: nopl   0x0(%rax)
    0.00 :   158b90: vpcmpeqb %ymm4,%ymm0,%ymm4
    0.00 :   158b94: vpmovmskb %ymm4,%edx
    0.00 :   158b98: shl    $0x20,%rcx
    0.00 :   158b9c: or     %rdx,%rcx
    0.00 :   158b9f: vpmovmskb %ymm10,%eax
    0.00 :   158ba4: vpmovmskb %ymm6,%edx
    0.00 :   158ba8: shl    $0x20,%rax
    0.00 :   158bac: or     %rdx,%rax
    0.00 :   158baf: blsmsk %rcx,%rcx
    0.00 :   158bb4: and    %rcx,%rax
    0.00 :   158bb7: je     158b70 <__strrchr_avx2+0x200>
    0.00 :   158bb9: bsr    %rax,%rax
    0.00 :   158bbd: lea    -0x40(%rdi,%rax,1),%rax
    0.00 :   158bc2: vzeroupper
    0.00 :   158bc5: ret
    0.00 :   158bc6: mov    %rdi,%rsi
    0.00 :   158bc9: and    $0xffffffffffffffe0,%rsi
    0.00 :   158bcd: vmovdqu (%rsi),%ymm1
    0.00 :   158bd1: vpcmpeqb %ymm1,%ymm0,%ymm6
    0.00 :   158bd5: vpmovmskb %ymm6,%ecx
    0.00 :   158bd9: shrx   %edi,%ecx,%ecx
    0.00 :   158bde: test   %ecx,%ecx
    0.00 :   158be0: je     158991 <__strrchr_avx2+0x21>
    0.00 :   158be6: vpcmpeqb %ymm1,%ymm7,%ymm1
    0.00 :   158bea: vpmovmskb %ymm1,%eax
    0.00 :   158bee: shrx   %edi,%eax,%eax
    0.00 :   158bf3: blsmsk %ecx,%ecx
    0.00 :   158bf8: and    %ecx,%eax
    0.00 :   158bfa: je     158c02 <__strrchr_avx2+0x292>
    0.00 :   158bfc: bsr    %eax,%eax
    0.00 :   158bff: add    %rdi,%rax
    0.00 :   158c02: vzeroupper
    0.00 :   158c05: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz
----------------------------------------------

  100.00 [virtio_gpu][4690]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000004690 <drm_gem_shmem_object_vmap>:
         : 6    drm_gem_shmem_object_vmap():
  100.00 :   4690:   jmp    4695 <drm_gem_shmem_object_vmap+0x5> // [virtio_gpu][4690]

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[7af5b]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000007af50 <swprintf>:
         : 6     __swprintf():
    0.00 :   7af50:  endbr64
    0.00 :   7af54:  sub    $0xd8,%rsp
  100.00 :   7af5b:  mov    %rcx,0x38(%rsp) // libc.so.6[7af5b]
    0.00 :   7af60:  mov    %r8,0x40(%rsp)
    0.00 :   7af65:  mov    %r9,0x48(%rsp)
    0.00 :   7af6a:  test   %al,%al
    0.00 :   7af6c:  je     7afa5 <swprintf+0x55>
    0.00 :   7af6e:  movaps %xmm0,0x50(%rsp)
    0.00 :   7af73:  movaps %xmm1,0x60(%rsp)
    0.00 :   7af78:  movaps %xmm2,0x70(%rsp)
    0.00 :   7af7d:  movaps %xmm3,0x80(%rsp)
    0.00 :   7af85:  movaps %xmm4,0x90(%rsp)
    0.00 :   7af8d:  movaps %xmm5,0xa0(%rsp)
    0.00 :   7af95:  movaps %xmm6,0xb0(%rsp)
    0.00 :   7af9d:  movaps %xmm7,0xc0(%rsp)
    0.00 :   7afa5:  mov    %fs:0x28,%rax
    0.00 :   7afae:  mov    %rax,0x18(%rsp)
    0.00 :   7afb3:  xor    %eax,%eax
    0.00 :   7afb5:  lea    0xe0(%rsp),%rax
    0.00 :   7afbd:  xor    %r8d,%r8d
    0.00 :   7afc0:  mov    %rsp,%rcx
    0.00 :   7afc3:  mov    %rax,0x8(%rsp)
    0.00 :   7afc8:  lea    0x20(%rsp),%rax
    0.00 :   7afcd:  movl   $0x18,(%rsp)
    0.00 :   7afd4:  movl   $0x30,0x4(%rsp)
    0.00 :   7afdc:  mov    %rax,0x10(%rsp)
    0.00 :   7afe1:  call   7b330 <__vswprintf_internal>
    0.00 :   7afe6:  mov    0x18(%rsp),%rdx
    0.00 :   7afeb:  sub    %fs:0x28,%rdx
    0.00 :   7aff4:  jne    7affe <swprintf+0xae>
    0.00 :   7aff6:  add    $0xd8,%rsp
    0.00 :   7affd:  ret
    0.00 :   7affe:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[155540]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000155540 <__strchrnul_avx2>:
         : 6      __strchrnul_avx2():
  100.00 :   155540: endbr64 // libc.so.6[155540]
    0.00 :   155544: vmovd  %esi,%xmm0
    0.00 :   155548: mov    %edi,%eax
    0.00 :   15554a: and    $0xfff,%eax
    0.00 :   15554f: vpbroadcastb %xmm0,%ymm0
    0.00 :   155554: vpxor  %xmm1,%xmm1,%xmm1
    0.00 :   155558: cmp    $0xfe0,%eax
    0.00 :   15555d: ja     1556f0 <__strchrnul_avx2+0x1b0>
    0.00 :   155563: vmovdqu (%rdi),%ymm2
    0.00 :   155567: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   15556b: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   15556f: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155573: vpmovmskb %ymm3,%eax
    0.00 :   155577: test   %eax,%eax
    0.00 :   155579: je     1555d0 <__strchrnul_avx2+0x90>
    0.00 :   15557b: tzcnt  %eax,%eax
    0.00 :   15557f: add    %rdi,%rax
    0.00 :   155582: vzeroupper
    0.00 :   155585: ret
    0.00 :   155586: cs nopw 0x0(%rax,%rax,1)
    0.00 :   155590: bsf    %eax,%eax
    0.00 :   155593: inc    %rdi
    0.00 :   155596: add    %rdi,%rax
    0.00 :   155599: vzeroupper
    0.00 :   15559c: ret
    0.00 :   15559d: nopl   (%rax)
    0.00 :   1555a0: bsf    %eax,%eax
    0.00 :   1555a3: add    $0x21,%rdi
    0.00 :   1555a7: add    %rdi,%rax
    0.00 :   1555aa: vzeroupper
    0.00 :   1555ad: ret
    0.00 :   1555ae: xchg   %ax,%ax
    0.00 :   1555b0: bsf    %eax,%eax
    0.00 :   1555b3: add    $0x41,%rdi
    0.00 :   1555b7: add    %rdi,%rax
    0.00 :   1555ba: vzeroupper
    0.00 :   1555bd: ret
    0.00 :   1555be: xchg   %ax,%ax
    0.00 :   1555c0: bsf    %eax,%eax
    0.00 :   1555c3: add    $0x61,%rdi
    0.00 :   1555c7: add    %rdi,%rax
    0.00 :   1555ca: vzeroupper
    0.00 :   1555cd: ret
    0.00 :   1555ce: xchg   %ax,%ax
    0.00 :   1555d0: or     $0x1f,%rdi
    0.00 :   1555d4: vmovdqa 0x1(%rdi),%ymm2
    0.00 :   1555d9: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   1555dd: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   1555e1: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   1555e5: vpmovmskb %ymm3,%eax
    0.00 :   1555e9: test   %eax,%eax
    0.00 :   1555eb: jne    155590 <__strchrnul_avx2+0x50>
    0.00 :   1555ed: vmovdqa 0x21(%rdi),%ymm2
    0.00 :   1555f2: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   1555f6: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   1555fa: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   1555fe: vpmovmskb %ymm3,%eax
    0.00 :   155602: test   %eax,%eax
    0.00 :   155604: jne    1555a0 <__strchrnul_avx2+0x60>
    0.00 :   155606: vmovdqa 0x41(%rdi),%ymm2
    0.00 :   15560b: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   15560f: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   155613: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155617: vpmovmskb %ymm3,%eax
    0.00 :   15561b: test   %eax,%eax
    0.00 :   15561d: jne    1555b0 <__strchrnul_avx2+0x70>
    0.00 :   15561f: vmovdqa 0x61(%rdi),%ymm2
    0.00 :   155624: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   155628: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   15562c: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155630: vpmovmskb %ymm3,%eax
    0.00 :   155634: test   %eax,%eax
    0.00 :   155636: jne    1555c0 <__strchrnul_avx2+0x80>
    0.00 :   155638: inc    %rdi
    0.00 :   15563b: or     $0x7f,%rdi
    0.00 :   15563f: nop
    0.00 :   155640: vmovdqa 0x1(%rdi),%ymm6
    0.00 :   155645: vmovdqa 0x21(%rdi),%ymm7
    0.00 :   15564a: vpxor  %ymm6,%ymm0,%ymm2
    0.00 :   15564e: vpxor  %ymm7,%ymm0,%ymm3
    0.00 :   155652: vpminub %ymm2,%ymm6,%ymm2
    0.00 :   155656: vpminub %ymm3,%ymm7,%ymm3
    0.00 :   15565a: vmovdqa 0x41(%rdi),%ymm6
    0.00 :   15565f: vmovdqa 0x61(%rdi),%ymm7
    0.00 :   155664: vpxor  %ymm6,%ymm0,%ymm4
    0.00 :   155668: vpxor  %ymm7,%ymm0,%ymm5
    0.00 :   15566c: vpminub %ymm4,%ymm6,%ymm4
    0.00 :   155670: vpminub %ymm5,%ymm7,%ymm5
    0.00 :   155674: vpminub %ymm2,%ymm3,%ymm6
    0.00 :   155678: vpminub %ymm4,%ymm5,%ymm7
    0.00 :   15567c: vpminub %ymm6,%ymm7,%ymm7
    0.00 :   155680: vpcmpeqb %ymm7,%ymm1,%ymm7
    0.00 :   155684: vpmovmskb %ymm7,%ecx
    0.00 :   155688: sub    $0xffffffffffffff80,%rdi
    0.00 :   15568c: test   %ecx,%ecx
    0.00 :   15568e: je     155640 <__strchrnul_avx2+0x100>
    0.00 :   155690: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   155694: vpmovmskb %ymm2,%eax
    0.00 :   155698: test   %eax,%eax
    0.00 :   15569a: jne    1556d0 <__strchrnul_avx2+0x190>
    0.00 :   15569c: vpcmpeqb %ymm3,%ymm1,%ymm3
    0.00 :   1556a0: vpmovmskb %ymm3,%eax
    0.00 :   1556a4: test   %eax,%eax
    0.00 :   1556a6: jne    1556e0 <__strchrnul_avx2+0x1a0>
    0.00 :   1556a8: vpcmpeqb %ymm4,%ymm1,%ymm4
    0.00 :   1556ac: vpmovmskb %ymm4,%eax
    0.00 :   1556b0: shl    $0x20,%rcx
    0.00 :   1556b4: or     %rcx,%rax
    0.00 :   1556b7: tzcnt  %rax,%rax
    0.00 :   1556bc: sub    $0x3f,%rdi
    0.00 :   1556c0: add    %rdi,%rax
    0.00 :   1556c3: vzeroupper
    0.00 :   1556c6: ret
    0.00 :   1556c7: nopw   0x0(%rax,%rax,1)
    0.00 :   1556d0: bsf    %eax,%eax
    0.00 :   1556d3: add    $0xffffffffffffff81,%rdi
    0.00 :   1556d7: add    %rdi,%rax
    0.00 :   1556da: vzeroupper
    0.00 :   1556dd: ret
    0.00 :   1556de: xchg   %ax,%ax
    0.00 :   1556e0: tzcnt  %eax,%eax
    0.00 :   1556e4: sub    $0x5f,%rdi
    0.00 :   1556e8: add    %rdi,%rax
    0.00 :   1556eb: vzeroupper
    0.00 :   1556ee: ret
    0.00 :   1556ef: nop
    0.00 :   1556f0: mov    %rdi,%rdx
    0.00 :   1556f3: or     $0x1f,%rdi
    0.00 :   1556f7: vmovdqa -0x1f(%rdi),%ymm2
    0.00 :   1556fc: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   155700: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   155704: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155708: vpmovmskb %ymm3,%eax
    0.00 :   15570c: sarx   %edx,%eax,%eax
    0.00 :   155711: test   %eax,%eax
    0.00 :   155713: je     1555d4 <__strchrnul_avx2+0x94>
    0.00 :   155719: tzcnt  %eax,%eax
    0.00 :   15571d: add    %rdx,%rax
    0.00 :   155720: vzeroupper
    0.00 :   155723: ret

Sorted summary for file /usr/lib64/libcrypto.so.3.0.8
----------------------------------------------

  100.00 libcrypto.so.3.0.8[183a70]
 Percent |	Source code & Disassembly of /usr/lib64/libcrypto.so.3.0.8 for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000183a70 <EVP_Cipher@@OPENSSL_3.0.0>:
  100.00 :   183a70: endbr64 // libcrypto.so.3.0.8[183a70]
    0.00 :   183a74: push   %r12
    0.00 :   183a76: mov    %rdx,%r12
    0.00 :   183a79: push   %rbp
    0.00 :   183a7a: mov    %rdi,%rbp
    0.00 :   183a7d: push   %rbx
    0.00 :   183a7e: mov    %ecx,%ebx
    0.00 :   183a80: sub    $0x20,%rsp
    0.00 :   183a84: mov    %fs:0x28,%rax
    0.00 :   183a8d: mov    %rax,0x18(%rsp)
    0.00 :   183a92: mov    (%rdi),%rax
    0.00 :   183a95: cmpq   $0x0,0x78(%rax)
    0.00 :   183a9a: jne    183ac8 <EVP_Cipher@@OPENSSL_3.0.0+0x58>
    0.00 :   183a9c: mov    0x18(%rsp),%rdx
    0.00 :   183aa1: sub    %fs:0x28,%rdx
    0.00 :   183aaa: jne    183b9c <EVP_Cipher@@OPENSSL_3.0.0+0x12c>
    0.00 :   183ab0: mov    0x28(%rax),%rax
    0.00 :   183ab4: add    $0x20,%rsp
    0.00 :   183ab8: mov    %r12,%rdx
    0.00 :   183abb: mov    %ecx,%ecx
    0.00 :   183abd: pop    %rbx
    0.00 :   183abe: pop    %rbp
    0.00 :   183abf: pop    %r12
    0.00 :   183ac1: jmp    *%rax
    0.00 :   183ac3: nopl   0x0(%rax,%rax,1)
    0.00 :   183ac8: mov    %rsi,0x8(%rsp)
    0.00 :   183acd: movq   $0x0,0x10(%rsp)
    0.00 :   183ad6: call   183a50 <EVP_CIPHER_CTX_get_block_size@@OPENSSL_3.0.0>
    0.00 :   183adb: mov    0x8(%rsp),%rsi
    0.00 :   183ae0: movslq %eax,%rcx
    0.00 :   183ae3: mov    0x0(%rbp),%rax
    0.00 :   183ae7: mov    0xb8(%rax),%r10
    0.00 :   183aee: test   %r10,%r10
    0.00 :   183af1: je     183b50 <EVP_Cipher@@OPENSSL_3.0.0+0xe0>
    0.00 :   183af3: mov    %ebx,%r9d
    0.00 :   183af6: cmp    $0x1,%rcx
    0.00 :   183afa: lea    0x10(%rsp),%rdx
    0.00 :   183aff: mov    %r12,%r8
    0.00 :   183b02: lea    (%rcx,%r9,1),%rax
    0.00 :   183b06: mov    0xa8(%rbp),%rdi
    0.00 :   183b0d: cmove  %r9,%rax
    0.00 :   183b11: mov    %rax,%rcx
    0.00 :   183b14: call   *%r10
    0.00 :   183b17: mov    %eax,%edx
    0.00 :   183b19: mov    $0xffffffff,%eax
    0.00 :   183b1e: test   %edx,%edx
    0.00 :   183b20: jne    183b40 <EVP_Cipher@@OPENSSL_3.0.0+0xd0>
    0.00 :   183b22: mov    0x18(%rsp),%rdx
    0.00 :   183b27: sub    %fs:0x28,%rdx
    0.00 :   183b30: jne    183b9c <EVP_Cipher@@OPENSSL_3.0.0+0x12c>
    0.00 :   183b32: add    $0x20,%rsp
    0.00 :   183b36: pop    %rbx
    0.00 :   183b37: pop    %rbp
    0.00 :   183b38: pop    %r12
    0.00 :   183b3a: ret
    0.00 :   183b3b: nopl   0x0(%rax,%rax,1)
    0.00 :   183b40: mov    0x10(%rsp),%eax
    0.00 :   183b44: jmp    183b22 <EVP_Cipher@@OPENSSL_3.0.0+0xb2>
    0.00 :   183b46: cs nopw 0x0(%rax,%rax,1)
    0.00 :   183b50: test   %r12,%r12
    0.00 :   183b53: je     183b80 <EVP_Cipher@@OPENSSL_3.0.0+0x110>
    0.00 :   183b55: mov    %ebx,%r9d
    0.00 :   183b58: cmp    $0x1,%rcx
    0.00 :   183b5c: mov    0xa8(%rbp),%rdi
    0.00 :   183b63: mov    %r12,%r8
    0.00 :   183b66: lea    (%rcx,%r9,1),%rdx
    0.00 :   183b6a: cmove  %r9,%rdx
    0.00 :   183b6e: mov    %rdx,%rcx
    0.00 :   183b71: lea    0x10(%rsp),%rdx
    0.00 :   183b76: call   *0xa8(%rax)
    0.00 :   183b7c: jmp    183b22 <EVP_Cipher@@OPENSSL_3.0.0+0xb2>
    0.00 :   183b7e: xchg   %ax,%ax
    0.00 :   183b80: cmp    $0x1,%rcx
    0.00 :   183b84: mov    0xa8(%rbp),%rdi
    0.00 :   183b8b: lea    0x10(%rsp),%rdx
    0.00 :   183b90: cmove  %r12,%rcx
    0.00 :   183b94: call   *0xb0(%rax)
    0.00 :   183b9a: jmp    183b22 <EVP_Cipher@@OPENSSL_3.0.0+0xb2>
    0.00 :   183b9c: call   adf10 <__stack_chk_fail@plt>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[fb270]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000fb270 <__write>:
         : 6     __GI___write():
  100.00 :   fb270:  endbr64 // libc.so.6[fb270]
    0.00 :   fb274:  cmpb   $0x0,0xe037d(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   fb27b:  je     fb290 <__write+0x20>
    0.00 :   fb27d:  mov    $0x1,%eax
    0.00 :   fb282:  syscall
    0.00 :   fb284:  cmp    $0xfffffffffffff000,%rax
    0.00 :   fb28a:  ja     fb2e0 <__write+0x70>
    0.00 :   fb28c:  ret
    0.00 :   fb28d:  nopl   (%rax)
    0.00 :   fb290:  sub    $0x28,%rsp
    0.00 :   fb294:  mov    %rdx,0x18(%rsp)
    0.00 :   fb299:  mov    %rsi,0x10(%rsp)
    0.00 :   fb29e:  mov    %edi,0x8(%rsp)
    0.00 :   fb2a2:  call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   fb2a7:  mov    0x18(%rsp),%rdx
    0.00 :   fb2ac:  mov    0x10(%rsp),%rsi
    0.00 :   fb2b1:  mov    %eax,%r8d
    0.00 :   fb2b4:  mov    0x8(%rsp),%edi
    0.00 :   fb2b8:  mov    $0x1,%eax
    0.00 :   fb2bd:  syscall
    0.00 :   fb2bf:  cmp    $0xfffffffffffff000,%rax
    0.00 :   fb2c5:  ja     fb2f8 <__write+0x88>
    0.00 :   fb2c7:  mov    %r8d,%edi
    0.00 :   fb2ca:  mov    %rax,0x8(%rsp)
    0.00 :   fb2cf:  call   87640 <__GI___pthread_disable_asynccancel>
    0.00 :   fb2d4:  mov    0x8(%rsp),%rax
    0.00 :   fb2d9:  add    $0x28,%rsp
    0.00 :   fb2dd:  ret
    0.00 :   fb2de:  xchg   %ax,%ax
    0.00 :   fb2e0:  mov    0xd7b29(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   fb2e7:  neg    %eax
    0.00 :   fb2e9:  mov    %eax,%fs:(%rdx)
    0.00 :   fb2ec:  mov    $0xffffffffffffffff,%rax
    0.00 :   fb2f3:  ret
    0.00 :   fb2f4:  nopl   0x0(%rax)
    0.00 :   fb2f8:  mov    0xd7b11(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   fb2ff:  neg    %eax
    0.00 :   fb301:  mov    %eax,%fs:(%rdx)
    0.00 :   fb304:  mov    $0xffffffffffffffff,%rax
    0.00 :   fb30b:  jmp    fb2c7 <__write+0x57>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[b3490]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000b3490 <wcscat>:
         : 6     __wcscat():
  100.00 :   b3490:  endbr64 // libc.so.6[b3490]
    0.00 :   b3494:  push   %rbp
    0.00 :   b3495:  mov    %rsi,%rbp
    0.00 :   b3498:  push   %rbx
    0.00 :   b3499:  mov    %rdi,%rbx
    0.00 :   b349c:  sub    $0x8,%rsp
    0.00 :   b34a0:  call   26650 <*ABS*+0xb36b0@plt>
    0.00 :   b34a5:  mov    %rbp,%rsi
    0.00 :   b34a8:  lea    (%rbx,%rax,4),%rdi
    0.00 :   b34ac:  call   26560 <*ABS*+0xb35e0@plt>
    0.00 :   b34b1:  add    $0x8,%rsp
    0.00 :   b34b5:  mov    %rbx,%rax
    0.00 :   b34b8:  pop    %rbx
    0.00 :   b34b9:  pop    %rbp
    0.00 :   b34ba:  ret

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

  100.00 dbt2-driver[407cfb]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407c99 <get_c_last>:
         : 6      get_c_last():
    0.00 :   407c99: push   %rbp
    0.00 :   407c9a: mov    %rsp,%rbp
    0.00 :   407c9d: sub    $0x20,%rsp
    0.00 :   407ca1: mov    %rdi,-0x18(%rbp)
    0.00 :   407ca5: mov    %esi,-0x1c(%rbp)
    0.00 :   407ca8: mov    -0x18(%rbp),%rax
    0.00 :   407cac: movl   $0x0,(%rax)
    0.00 :   407cb2: cmpl   $0x0,-0x1c(%rbp)
    0.00 :   407cb6: js     407cc1 <get_c_last+0x28>
    0.00 :   407cb8: cmpl   $0x3e7,-0x1c(%rbp)
    0.00 :   407cbf: jle    407ccb <get_c_last+0x32>
    0.00 :   407cc1: mov    $0x0,%eax
    0.00 :   407cc6: jmp    407d4d <get_c_last+0xb4>
    0.00 :   407ccb: mov    -0x1c(%rbp),%edx
    0.00 :   407cce: lea    -0x10(%rbp),%rax
    0.00 :   407cd2: mov    %edx,%ecx
    0.00 :   407cd4: mov    $0x411668,%edx
    0.00 :   407cd9: mov    $0x4,%esi
    0.00 :   407cde: mov    %rax,%rdi
    0.00 :   407ce1: mov    $0x0,%eax
    0.00 :   407ce6: call   4071f0 <swprintf@plt>
    0.00 :   407ceb: mov    -0x10(%rbp),%eax
    0.00 :   407cee: sub    $0x30,%eax
    0.00 :   407cf1: cltq
    0.00 :   407cf3: mov    0x417220(,%rax,8),%rdx
  100.00 :   407cfb: mov    -0x18(%rbp),%rax // dbt2-driver[407cfb]
    0.00 :   407cff: mov    %rdx,%rsi
    0.00 :   407d02: mov    %rax,%rdi
    0.00 :   407d05: call   407030 <wcscat@plt>
    0.00 :   407d0a: mov    -0xc(%rbp),%eax
    0.00 :   407d0d: sub    $0x30,%eax
    0.00 :   407d10: cltq
    0.00 :   407d12: mov    0x417220(,%rax,8),%rdx
    0.00 :   407d1a: mov    -0x18(%rbp),%rax
    0.00 :   407d1e: mov    %rdx,%rsi
    0.00 :   407d21: mov    %rax,%rdi
    0.00 :   407d24: call   407030 <wcscat@plt>
    0.00 :   407d29: mov    -0x8(%rbp),%eax
    0.00 :   407d2c: sub    $0x30,%eax
    0.00 :   407d2f: cltq
    0.00 :   407d31: mov    0x417220(,%rax,8),%rdx
    0.00 :   407d39: mov    -0x18(%rbp),%rax
    0.00 :   407d3d: mov    %rdx,%rsi
    0.00 :   407d40: mov    %rax,%rdi
    0.00 :   407d43: call   407030 <wcscat@plt>
    0.00 :   407d48: mov    $0x1,%eax
    0.00 :   407d4d: leave
    0.00 :   407d4e: ret

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

  100.00 dbt2-driver[410250]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000410250 <generate_order_status_data>:
         : 6      generate_order_status_data():
  100.00 :   410250: push   %rbp // dbt2-driver[410250]
    0.00 :   410251: mov    %rsp,%rbp
    0.00 :   410254: sub    $0x20,%rsp
    0.00 :   410258: mov    %rdi,-0x8(%rbp)
    0.00 :   41025c: mov    %esi,-0xc(%rbp)
    0.00 :   41025f: mov    %rdx,-0x18(%rbp)
    0.00 :   410263: mov    -0x18(%rbp),%rax
    0.00 :   410267: mov    $0x4d8,%edx
    0.00 :   41026c: mov    $0x0,%esi
    0.00 :   410271: mov    %rax,%rdi
    0.00 :   410274: call   407180 <memset@plt>
    0.00 :   410279: mov    -0x18(%rbp),%rax
    0.00 :   41027d: mov    -0xc(%rbp),%edx
    0.00 :   410280: mov    %edx,0x4(%rax)
    0.00 :   410283: mov    -0x8(%rbp),%rax
    0.00 :   410287: mov    $0xa,%esi
    0.00 :   41028c: mov    %rax,%rdi
    0.00 :   41028f: call   407ff5 <get_random>
    0.00 :   410294: lea    0x1(%rax),%edx
    0.00 :   410297: mov    -0x18(%rbp),%rax
    0.00 :   41029b: mov    %edx,(%rax)
    0.00 :   41029d: mov    -0x8(%rbp),%rax
    0.00 :   4102a1: mov    $0x64,%esi
    0.00 :   4102a6: mov    %rax,%rdi
    0.00 :   4102a9: call   407ff5 <get_random>
    0.00 :   4102ae: cmp    $0x3b,%rax
    0.00 :   4102b2: jg     4102f0 <generate_order_status_data+0xa0>
    0.00 :   4102b4: mov    -0x18(%rbp),%rax
    0.00 :   4102b8: movl   $0x0,0x8(%rax)
    0.00 :   4102bf: mov    -0x8(%rbp),%rax
    0.00 :   4102c3: mov    $0x3e7,%ecx
    0.00 :   4102c8: mov    $0x0,%edx
    0.00 :   4102cd: mov    $0xff,%esi
    0.00 :   4102d2: mov    %rax,%rdi
    0.00 :   4102d5: call   407f17 <get_nurand>
    0.00 :   4102da: mov    %eax,%edx
    0.00 :   4102dc: mov    -0x18(%rbp),%rax
    0.00 :   4102e0: add    $0xc,%rax
    0.00 :   4102e4: mov    %edx,%esi
    0.00 :   4102e6: mov    %rax,%rdi
    0.00 :   4102e9: call   407c99 <get_c_last>
    0.00 :   4102ee: jmp    410312 <generate_order_status_data+0xc2>
    0.00 :   4102f0: mov    -0x8(%rbp),%rax
    0.00 :   4102f4: mov    $0xbb8,%ecx
    0.00 :   4102f9: mov    $0x1,%edx
    0.00 :   4102fe: mov    $0x3ff,%esi
    0.00 :   410303: mov    %rax,%rdi
    0.00 :   410306: call   407f17 <get_nurand>
    0.00 :   41030b: mov    -0x18(%rbp),%rdx
    0.00 :   41030f: mov    %eax,0x8(%rdx)
    0.00 :   410312: mov    $0x1,%eax
    0.00 :   410317: leave
    0.00 :   410318: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[4f124]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000004f120 <__mpn_rshift>:
         : 6     __mpn_rshift():
    0.00 :   4f120:  endbr64
  100.00 :   4f124:  mov    %edx,%eax // libc.so.6[4f124]
    0.00 :   4f126:  and    $0x3,%eax
    0.00 :   4f129:  jne    4f14d <__mpn_rshift+0x2d>
    0.00 :   4f12b:  mov    (%rsi),%r10
    0.00 :   4f12e:  mov    0x8(%rsi),%r11
    0.00 :   4f132:  xor    %eax,%eax
    0.00 :   4f134:  shrd   %cl,%r10,%rax
    0.00 :   4f138:  mov    0x10(%rsi),%r8
    0.00 :   4f13c:  lea    0x8(%rsi),%rsi
    0.00 :   4f140:  lea    -0x18(%rdi),%rdi
    0.00 :   4f144:  sub    $0x4,%rdx
    0.00 :   4f148:  jmp    4f1f2 <__mpn_rshift+0xd2>
    0.00 :   4f14d:  cmp    $0x2,%eax
    0.00 :   4f150:  jae    4f17a <__mpn_rshift+0x5a>
    0.00 :   4f152:  mov    (%rsi),%r9
    0.00 :   4f155:  xor    %eax,%eax
    0.00 :   4f157:  shrd   %cl,%r9,%rax
    0.00 :   4f15b:  sub    $0x2,%rdx
    0.00 :   4f15f:  jb     4f173 <__mpn_rshift+0x53>
    0.00 :   4f161:  mov    0x8(%rsi),%r10
    0.00 :   4f165:  mov    0x10(%rsi),%r11
    0.00 :   4f169:  lea    0x10(%rsi),%rsi
    0.00 :   4f16d:  lea    -0x10(%rdi),%rdi
    0.00 :   4f171:  jmp    4f1e6 <__mpn_rshift+0xc6>
    0.00 :   4f173:  shr    %cl,%r9
    0.00 :   4f176:  mov    %r9,(%rdi)
    0.00 :   4f179:  ret
    0.00 :   4f17a:  jne    4f1b0 <__mpn_rshift+0x90>
    0.00 :   4f17c:  mov    (%rsi),%r8
    0.00 :   4f17f:  mov    0x8(%rsi),%r9
    0.00 :   4f183:  xor    %eax,%eax
    0.00 :   4f185:  shrd   %cl,%r8,%rax
    0.00 :   4f189:  sub    $0x3,%rdx
    0.00 :   4f18d:  jb     4f19d <__mpn_rshift+0x7d>
    0.00 :   4f18f:  mov    0x10(%rsi),%r10
    0.00 :   4f193:  lea    0x18(%rsi),%rsi
    0.00 :   4f197:  lea    -0x8(%rdi),%rdi
    0.00 :   4f19b:  jmp    4f1db <__mpn_rshift+0xbb>
    0.00 :   4f19d:  shrd   %cl,%r9,%r8
    0.00 :   4f1a1:  mov    %r8,(%rdi)
    0.00 :   4f1a4:  shr    %cl,%r9
    0.00 :   4f1a7:  mov    %r9,0x8(%rdi)
    0.00 :   4f1ab:  ret
    0.00 :   4f1ac:  nopl   0x0(%rax)
    0.00 :   4f1b0:  mov    (%rsi),%r11
    0.00 :   4f1b3:  mov    0x8(%rsi),%r8
    0.00 :   4f1b7:  xor    %eax,%eax
    0.00 :   4f1b9:  shrd   %cl,%r11,%rax
    0.00 :   4f1bd:  mov    0x10(%rsi),%r9
    0.00 :   4f1c1:  lea    0x20(%rsi),%rsi
    0.00 :   4f1c5:  sub    $0x4,%rdx
    0.00 :   4f1c9:  jb     4f20c <__mpn_rshift+0xec>
    0.00 :   4f1cb:  nopl   0x0(%rax,%rax,1)
    0.00 :   4f1d0:  shrd   %cl,%r8,%r11
    0.00 :   4f1d4:  mov    -0x8(%rsi),%r10
    0.00 :   4f1d8:  mov    %r11,(%rdi)
    0.00 :   4f1db:  shrd   %cl,%r9,%r8
    0.00 :   4f1df:  mov    (%rsi),%r11
    0.00 :   4f1e2:  mov    %r8,0x8(%rdi)
    0.00 :   4f1e6:  shrd   %cl,%r10,%r9
    0.00 :   4f1ea:  mov    0x8(%rsi),%r8
    0.00 :   4f1ee:  mov    %r9,0x10(%rdi)
    0.00 :   4f1f2:  shrd   %cl,%r11,%r10
    0.00 :   4f1f6:  mov    0x10(%rsi),%r9
    0.00 :   4f1fa:  mov    %r10,0x18(%rdi)
    0.00 :   4f1fe:  add    $0x20,%rsi
    0.00 :   4f202:  lea    0x20(%rdi),%rdi
    0.00 :   4f206:  sub    $0x4,%rdx
    0.00 :   4f20a:  jae    4f1d0 <__mpn_rshift+0xb0>
    0.00 :   4f20c:  shrd   %cl,%r8,%r11
    0.00 :   4f210:  mov    %r11,(%rdi)
    0.00 :   4f213:  shrd   %cl,%r9,%r8
    0.00 :   4f217:  mov    %r8,0x8(%rdi)
    0.00 :   4f21b:  shr    %cl,%r9
    0.00 :   4f21e:  mov    %r9,0x10(%rdi)
    0.00 :   4f222:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[85011]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000084f10 <_IO_default_xsputn>:
         : 6     __GI__IO_default_xsputn():
    0.00 :   84f10:  endbr64
    0.00 :   84f14:  push   %r15
    0.00 :   84f16:  xor    %eax,%eax
    0.00 :   84f18:  push   %r14
    0.00 :   84f1a:  push   %r13
    0.00 :   84f1c:  push   %r12
    0.00 :   84f1e:  push   %rbp
    0.00 :   84f1f:  push   %rbx
    0.00 :   84f20:  sub    $0x18,%rsp
    0.00 :   84f24:  mov    %rdx,(%rsp)
    0.00 :   84f28:  test   %rdx,%rdx
    0.00 :   84f2b:  je     84fc8 <_IO_default_xsputn+0xb8>
    0.00 :   84f31:  lea    0x14aac8(%rip),%r12        # 1cfa00 <_IO_helper_jumps>
    0.00 :   84f38:  mov    %rdi,%r13
    0.00 :   84f3b:  mov    %rsi,%r15
    0.00 :   84f3e:  mov    %rdx,%r14
    0.00 :   84f41:  lea    0x14b820(%rip),%rbp        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   84f48:  sub    %r12,%rbp
    0.00 :   84f4b:  jmp    84f8d <_IO_default_xsputn+0x7d>
    0.00 :   84f4d:  nopl   (%rax)
    0.00 :   84f50:  test   %rbx,%rbx
    0.00 :   84f53:  jne    84ff8 <_IO_default_xsputn+0xe8>
    0.00 :   84f59:  sub    %rbx,%r14
    0.00 :   84f5c:  test   %r14,%r14
    0.00 :   84f5f:  je     84fc4 <_IO_default_xsputn+0xb4>
    0.00 :   84f61:  mov    0xd8(%r13),%rax
    0.00 :   84f68:  mov    %rax,%rdx
    0.00 :   84f6b:  sub    %r12,%rdx
    0.00 :   84f6e:  cmp    %rbp,%rdx
    0.00 :   84f71:  jae    84fe0 <_IO_default_xsputn+0xd0>
    0.00 :   84f73:  movzbl (%r15),%esi
    0.00 :   84f77:  lea    0x1(%r15),%rbx
    0.00 :   84f7b:  mov    %r13,%rdi
    0.00 :   84f7e:  call   *0x18(%rax)
    0.00 :   84f81:  cmp    $0xffffffff,%eax
    0.00 :   84f84:  je     84fc0 <_IO_default_xsputn+0xb0>
    0.00 :   84f86:  sub    $0x1,%r14
    0.00 :   84f8a:  mov    %rbx,%r15
    0.00 :   84f8d:  mov    0x28(%r13),%rdi
    0.00 :   84f91:  mov    0x30(%r13),%rbx
    0.00 :   84f95:  cmp    %rbx,%rdi
    0.00 :   84f98:  jae    84f5c <_IO_default_xsputn+0x4c>
    0.00 :   84f9a:  sub    %rdi,%rbx
    0.00 :   84f9d:  cmp    %r14,%rbx
    0.00 :   84fa0:  cmova  %r14,%rbx
    0.00 :   84fa4:  cmp    $0x14,%rbx
    0.00 :   84fa8:  jbe    84f50 <_IO_default_xsputn+0x40>
    0.00 :   84faa:  mov    %r15,%rsi
    0.00 :   84fad:  mov    %rbx,%rdx
    0.00 :   84fb0:  add    %rbx,%r15
    0.00 :   84fb3:  call   263d0 <*ABS*+0x9ec40@plt>
    0.00 :   84fb8:  mov    %rax,0x28(%r13)
    0.00 :   84fbc:  jmp    84f59 <_IO_default_xsputn+0x49>
    0.00 :   84fbe:  xchg   %ax,%ax
    0.00 :   84fc0:  sub    %r14,(%rsp)
    0.00 :   84fc4:  mov    (%rsp),%rax
    0.00 :   84fc8:  add    $0x18,%rsp
    0.00 :   84fcc:  pop    %rbx
    0.00 :   84fcd:  pop    %rbp
    0.00 :   84fce:  pop    %r12
    0.00 :   84fd0:  pop    %r13
    0.00 :   84fd2:  pop    %r14
    0.00 :   84fd4:  pop    %r15
    0.00 :   84fd6:  ret
    0.00 :   84fd7:  nopw   0x0(%rax,%rax,1)
    0.00 :   84fe0:  mov    %rax,0x8(%rsp)
    0.00 :   84fe5:  call   818e0 <_IO_vtable_check>
    0.00 :   84fea:  mov    0x8(%rsp),%rax
    0.00 :   84fef:  jmp    84f73 <_IO_default_xsputn+0x63>
    0.00 :   84ff4:  nopl   0x0(%rax)
    0.00 :   84ff8:  xor    %eax,%eax
    0.00 :   84ffa:  nopw   0x0(%rax,%rax,1)
    0.00 :   85000:  movzbl (%r15,%rax,1),%edx
    0.00 :   85005:  mov    %dl,(%rdi,%rax,1)
    0.00 :   85008:  add    $0x1,%rax
    0.00 :   8500c:  cmp    %rbx,%rax
    0.00 :   8500f:  jne    85000 <_IO_default_xsputn+0xf0>
  100.00 :   85011:  add    %rbx,%rdi // libc.so.6[85011]
    0.00 :   85014:  add    %rbx,%r15
    0.00 :   85017:  mov    %rdi,0x28(%r13)
    0.00 :   8501b:  jmp    84f59 <_IO_default_xsputn+0x49>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

  100.00 dbt2-driver[407b48]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407af5 <difftimeval>:
         : 6      difftimeval():
    0.00 :   407af5: push   %rbp
    0.00 :   407af6: mov    %rsp,%rbp
    0.00 :   407af9: mov    %rsi,%rax
    0.00 :   407afc: mov    %rdi,%r8
    0.00 :   407aff: mov    %r8,%rsi
    0.00 :   407b02: mov    %r9,%rdi
    0.00 :   407b05: mov    %rax,%rdi
    0.00 :   407b08: mov    %rsi,-0x10(%rbp)
    0.00 :   407b0c: mov    %rdi,-0x8(%rbp)
    0.00 :   407b10: mov    %rdx,-0x20(%rbp)
    0.00 :   407b14: mov    %rcx,-0x18(%rbp)
    0.00 :   407b18: mov    -0x10(%rbp),%rdx
    0.00 :   407b1c: mov    -0x20(%rbp),%rax
    0.00 :   407b20: sub    %rax,%rdx
    0.00 :   407b23: pxor   %xmm1,%xmm1
    0.00 :   407b27: cvtsi2sd %rdx,%xmm1
    0.00 :   407b2c: mov    -0x8(%rbp),%rdx
    0.00 :   407b30: mov    -0x18(%rbp),%rax
    0.00 :   407b34: sub    %rax,%rdx
    0.00 :   407b37: pxor   %xmm0,%xmm0
    0.00 :   407b3b: cvtsi2sd %rdx,%xmm0
    0.00 :   407b40: movsd  0x9b58(%rip),%xmm2        # 4116a0 <transaction_short_name+0xa8>
  100.00 :   407b48: divsd  %xmm2,%xmm0 // dbt2-driver[407b48]
    0.00 :   407b4c: addsd  %xmm1,%xmm0
    0.00 :   407b50: movq   %xmm0,%rax
    0.00 :   407b55: movq   %rax,%xmm0
    0.00 :   407b5a: pop    %rbp
    0.00 :   407b5b: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[875d3]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000875c0 <__GI___pthread_enable_asynccancel>:
         : 6     __GI___pthread_enable_asynccancel():
    0.00 :   875c0:  endbr64
    0.00 :   875c4:  mov    %fs:0x10,%rcx
    0.00 :   875cd:  mov    0x308(%rcx),%edx
  100.00 :   875d3:  lea    0x308(%rcx),%rdi // libc.so.6[875d3]
    0.00 :   875da:  mov    %edx,%esi
    0.00 :   875dc:  or     $0x2,%esi
    0.00 :   875df:  cmp    %edx,%esi
    0.00 :   875e1:  je     87600 <__GI___pthread_enable_asynccancel+0x40>
    0.00 :   875e3:  mov    %edx,%eax
    0.00 :   875e5:  lock cmpxchg %esi,(%rdi)
    0.00 :   875e9:  mov    %eax,%esi
    0.00 :   875eb:  jne    87604 <__GI___pthread_enable_asynccancel+0x44>
    0.00 :   875ed:  and    $0x3b,%edx
    0.00 :   875f0:  or     $0x2,%edx
    0.00 :   875f3:  cmp    $0xa,%edx
    0.00 :   875f6:  je     87608 <__GI___pthread_enable_asynccancel+0x48>
    0.00 :   875f8:  mov    %esi,%eax
    0.00 :   875fa:  ret
    0.00 :   875fb:  nopl   0x0(%rax,%rax,1)
    0.00 :   87600:  mov    %edx,%esi
    0.00 :   87602:  jmp    875f8 <__GI___pthread_enable_asynccancel+0x38>
    0.00 :   87604:  mov    %eax,%edx
    0.00 :   87606:  jmp    875da <__GI___pthread_enable_asynccancel+0x1a>
    0.00 :   87608:  push   %rax
    0.00 :   87609:  movq   $0xffffffffffffffff,0x628(%rcx)
    0.00 :   87614:  mov    %fs:0x10,%rax
    0.00 :   8761d:  lock orl $0x10,0x308(%rax)
    0.00 :   87625:  mov    %fs:0x300,%rdi
    0.00 :   8762e:  call   93610 <__GI___pthread_unwind>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[68d83]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000068d80 <read_int>:
         : 6     read_int():
    0.00 :   68d80:  mov    (%rdi),%rax
  100.00 :   68d83:  mov    (%rax),%esi // libc.so.6[68d83]
    0.00 :   68d85:  lea    0x4(%rax),%rdx
    0.00 :   68d89:  mov    0x4(%rax),%eax
    0.00 :   68d8c:  mov    %rdx,(%rdi)
    0.00 :   68d8f:  sub    $0x30,%eax
    0.00 :   68d92:  lea    -0x30(%rsi),%ecx
    0.00 :   68d95:  cmp    $0x9,%eax
    0.00 :   68d98:  ja     68df6 <read_int+0x76>
    0.00 :   68d9a:  mov    $0xffffffff,%r9d
    0.00 :   68da0:  mov    $0x7fffffff,%r8d
    0.00 :   68da6:  jmp    68dd3 <read_int+0x53>
    0.00 :   68da8:  nopl   0x0(%rax,%rax,1)
    0.00 :   68db0:  lea    (%rcx,%rcx,4),%ecx
    0.00 :   68db3:  mov    %r8d,%esi
    0.00 :   68db6:  add    %ecx,%ecx
    0.00 :   68db8:  sub    %eax,%esi
    0.00 :   68dba:  add    %ecx,%eax
    0.00 :   68dbc:  cmp    %esi,%ecx
    0.00 :   68dbe:  cmovg  %r9d,%eax
    0.00 :   68dc2:  mov    %eax,%ecx
    0.00 :   68dc4:  mov    0x4(%rdx),%eax
    0.00 :   68dc7:  add    $0x4,%rdx
    0.00 :   68dcb:  sub    $0x30,%eax
    0.00 :   68dce:  cmp    $0x9,%eax
    0.00 :   68dd1:  ja     68df3 <read_int+0x73>
    0.00 :   68dd3:  test   %ecx,%ecx
    0.00 :   68dd5:  js     68dc4 <read_int+0x44>
    0.00 :   68dd7:  cmp    $0xccccccc,%ecx
    0.00 :   68ddd:  jle    68db0 <read_int+0x30>
    0.00 :   68ddf:  mov    0x4(%rdx),%eax
    0.00 :   68de2:  add    $0x4,%rdx
    0.00 :   68de6:  mov    $0xffffffff,%ecx
    0.00 :   68deb:  sub    $0x30,%eax
    0.00 :   68dee:  cmp    $0x9,%eax
    0.00 :   68df1:  jbe    68dd3 <read_int+0x53>
    0.00 :   68df3:  mov    %rdx,(%rdi)
    0.00 :   68df6:  mov    %ecx,%eax
    0.00 :   68df8:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  100.00 [nf_conntrack][87f0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000087f0 <nf_confirm>:
         : 6    nf_confirm():
  100.00 :   87f0:   call   87f5 <nf_confirm+0x5> // [nf_conntrack][87f0]
    0.00 :   87f5:   push   %r13
    0.00 :   87f7:   mov    %esi,%r13d
    0.00 :   87fa:   push   %r12
    0.00 :   87fc:   mov    %ecx,%r12d
    0.00 :   87ff:   push   %rbp
    0.00 :   8800:   mov    %rdi,%rbp
    0.00 :   8803:   push   %rbx
    0.00 :   8804:   mov    0xb0(%rdx),%rdi
    0.00 :   880b:   mov    %rdx,%rbx
    0.00 :   880e:   test   %rdi,%rdi
    0.00 :   8811:   je     885a <nf_confirm+0x6a>
    0.00 :   8813:   movzbl (%rdi),%eax
    0.00 :   8816:   test   %al,%al
    0.00 :   8818:   je     885a <nf_confirm+0x6a>
    0.00 :   881a:   mov    0xc(%rdi),%ecx
    0.00 :   881d:   add    %rdi,%rax
    0.00 :   8820:   test   %ecx,%ecx
    0.00 :   8822:   jne    8903 <nf_confirm+0x113>
    0.00 :   8828:   test   %rax,%rax
    0.00 :   882b:   je     885a <nf_confirm+0x6a>
    0.00 :   882d:   mov    (%rax),%rax
    0.00 :   8830:   test   %rax,%rax
    0.00 :   8833:   je     885a <nf_confirm+0x6a>
    0.00 :   8835:   mov    0x60(%rax),%rax
    0.00 :   8839:   mov    %r12d,%ecx
    0.00 :   883c:   mov    %rbx,%rdx
    0.00 :   883f:   mov    %r13d,%esi
    0.00 :   8842:   mov    %rbp,%rdi
    0.00 :   8845:   call   884a <nf_confirm+0x5a>
    0.00 :   884a:   cmp    $0x1,%eax
    0.00 :   884d:   je     885a <nf_confirm+0x6a>
    0.00 :   884f:   pop    %rbx
    0.00 :   8850:   pop    %rbp
    0.00 :   8851:   pop    %r12
    0.00 :   8853:   pop    %r13
    0.00 :   8855:   jmp    885a <nf_confirm+0x6a>
    0.00 :   885a:   mov    0x80(%rbx),%rax
    0.00 :   8861:   test   $0x40,%al
    0.00 :   8863:   je     8881 <nf_confirm+0x91>
    0.00 :   8865:   mov    0x10(%rbp),%rax
    0.00 :   8869:   test   %rax,%rax
    0.00 :   886c:   je     88ba <nf_confirm+0xca>
    0.00 :   886e:   mov    0x90(%rbp),%edx
    0.00 :   8874:   test   %edx,%edx
    0.00 :   8876:   je     88ba <nf_confirm+0xca>
    0.00 :   8878:   testb  $0x8,0xc0(%rax)
    0.00 :   887f:   je     88ba <nf_confirm+0xca>
    0.00 :   8881:   mov    0x68(%rbp),%rdi
    0.00 :   8885:   cmp    $0x7,%rdi
    0.00 :   8889:   ja     8892 <nf_confirm+0xa2>
    0.00 :   888b:   mov    $0x1,%eax
    0.00 :   8890:   jmp    884f <nf_confirm+0x5f>
    0.00 :   8892:   and    $0xfffffffffffffff8,%rdi
    0.00 :   8896:   mov    0x80(%rdi),%rax
    0.00 :   889d:   test   $0x8,%al
    0.00 :   889f:   je     88e8 <nf_confirm+0xf8>
    0.00 :   88a1:   mov    0xb0(%rdi),%rax
    0.00 :   88a8:   test   %rax,%rax
    0.00 :   88ab:   je     888b <nf_confirm+0x9b>
    0.00 :   88ad:   cmpb   $0x0,0x4(%rax)
    0.00 :   88b1:   je     888b <nf_confirm+0x9b>
    0.00 :   88b3:   call   88b8 <nf_confirm+0xc8>
    0.00 :   88b8:   jmp    888b <nf_confirm+0x9b>
    0.00 :   88ba:   mov    %r13d,%ecx
    0.00 :   88bd:   mov    %r12d,%edx
    0.00 :   88c0:   mov    %rbx,%rsi
    0.00 :   88c3:   mov    %rbp,%rdi
    0.00 :   88c6:   call   88cb <nf_confirm+0xdb>
    0.00 :   88cb:   test   %eax,%eax
    0.00 :   88cd:   jne    8881 <nf_confirm+0x91>
    0.00 :   88cf:   mov    0x88(%rbx),%rax
    0.00 :   88d6:   mov    0xb40(%rax),%rax
    0.00 :   88dd:   incl   %gs:0x14(%rax)
    0.00 :   88e1:   xor    %eax,%eax
    0.00 :   88e3:   jmp    884f <nf_confirm+0x5f>
    0.00 :   88e8:   mov    %rbp,%rdi
    0.00 :   88eb:   call   88f0 <nf_confirm+0x100>
    0.00 :   88f0:   cmp    $0x1,%eax
    0.00 :   88f3:   jne    884f <nf_confirm+0x5f>
    0.00 :   88f9:   mov    0x68(%rbp),%rdi
    0.00 :   88fd:   and    $0xfffffffffffffff8,%rdi
    0.00 :   8901:   jmp    88a1 <nf_confirm+0xb1>
    0.00 :   8903:   xor    %esi,%esi
    0.00 :   8905:   call   890a <nf_confirm+0x11a>
    0.00 :   890a:   jmp    8828 <nf_confirm+0x38>

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

  100.00 dbt2-driver[409afe]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000409afd <pcg_rotr_64>:
         : 6      pcg_rotr_64():
    0.00 :   409afd: push   %rbp
  100.00 :   409afe: mov    %rsp,%rbp // dbt2-driver[409afe]
    0.00 :   409b01: mov    %rdi,-0x8(%rbp)
    0.00 :   409b05: mov    %esi,-0xc(%rbp)
    0.00 :   409b08: mov    -0xc(%rbp),%eax
    0.00 :   409b0b: mov    -0x8(%rbp),%rdx
    0.00 :   409b0f: mov    %eax,%ecx
    0.00 :   409b11: ror    %cl,%rdx
    0.00 :   409b14: mov    %rdx,%rax
    0.00 :   409b17: pop    %rbp
    0.00 :   409b18: ret

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

  100.00 dbt2-driver[407170]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .plt:
         :
         : 5      0000000000407170 <gettimeofday@plt>:
  100.00 :   407170: jmp    *0xff42(%rip)        # 4170b8 <gettimeofday@GLIBC_2.2.5> // dbt2-driver[407170]
    0.00 :   407176: push   $0x14
    0.00 :   40717b: jmp    407020 <_init+0x20>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[82060]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000082000 <new_do_write>:
         : 6     new_do_write():
    0.00 :   82000:  push   %r15
    0.00 :   82002:  lea    0x14e75f(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   82009:  lea    0x14d9f0(%rip),%r15        # 1cfa00 <_IO_helper_jumps>
    0.00 :   82010:  push   %r14
    0.00 :   82012:  sub    %r15,%rax
    0.00 :   82015:  mov    %rdx,%r14
    0.00 :   82018:  push   %r13
    0.00 :   8201a:  mov    %rax,%r13
    0.00 :   8201d:  push   %r12
    0.00 :   8201f:  mov    %rsi,%r12
    0.00 :   82022:  push   %rbp
    0.00 :   82023:  push   %rbx
    0.00 :   82024:  mov    %rdi,%rbx
    0.00 :   82027:  sub    $0x8,%rsp
    0.00 :   8202b:  mov    0xd8(%rdi),%rbp
    0.00 :   82032:  testl  $0x1000,(%rdi)
    0.00 :   82038:  je     820b8 <new_do_write+0xb8>
    0.00 :   8203a:  movq   $0xffffffffffffffff,0x90(%rdi)
    0.00 :   82045:  mov    %rbp,%rax
    0.00 :   82048:  sub    %r15,%rax
    0.00 :   8204b:  cmp    %r13,%rax
    0.00 :   8204e:  jae    82130 <new_do_write+0x130>
    0.00 :   82054:  mov    %rbx,%rdi
    0.00 :   82057:  mov    %r14,%rdx
    0.00 :   8205a:  mov    %r12,%rsi
    0.00 :   8205d:  call   *0x78(%rbp)
  100.00 :   82060:  movzwl 0x80(%rbx),%edi // libc.so.6[82060]
    0.00 :   82067:  mov    %rax,%rbp
    0.00 :   8206a:  test   %rax,%rax
    0.00 :   8206d:  je     82078 <new_do_write+0x78>
    0.00 :   8206f:  test   %di,%di
    0.00 :   82072:  jne    82110 <new_do_write+0x110>
    0.00 :   82078:  mov    0x38(%rbx),%rax
    0.00 :   8207c:  mov    0xc0(%rbx),%edx
    0.00 :   82082:  movq   %rax,%xmm0
    0.00 :   82087:  mov    %rax,0x28(%rbx)
    0.00 :   8208b:  punpcklqdq %xmm0,%xmm0
    0.00 :   8208f:  movups %xmm0,0x8(%rbx)
    0.00 :   82093:  movups %xmm0,0x18(%rbx)
    0.00 :   82097:  test   %edx,%edx
    0.00 :   82099:  jle    82100 <new_do_write+0x100>
    0.00 :   8209b:  mov    0x40(%rbx),%rax
    0.00 :   8209f:  mov    %rax,0x30(%rbx)
    0.00 :   820a3:  add    $0x8,%rsp
    0.00 :   820a7:  mov    %rbp,%rax
    0.00 :   820aa:  pop    %rbx
    0.00 :   820ab:  pop    %rbp
    0.00 :   820ac:  pop    %r12
    0.00 :   820ae:  pop    %r13
    0.00 :   820b0:  pop    %r14
    0.00 :   820b2:  pop    %r15
    0.00 :   820b4:  ret
    0.00 :   820b5:  nopl   (%rax)
    0.00 :   820b8:  mov    0x10(%rdi),%rax
    0.00 :   820bc:  mov    0x20(%rdi),%rsi
    0.00 :   820c0:  cmp    %rsi,%rax
    0.00 :   820c3:  je     82045 <new_do_write+0x45>
    0.00 :   820c5:  mov    %rbp,%rdx
    0.00 :   820c8:  sub    %r15,%rdx
    0.00 :   820cb:  cmp    %r13,%rdx
    0.00 :   820ce:  jae    82140 <new_do_write+0x140>
    0.00 :   820d0:  sub    %rax,%rsi
    0.00 :   820d3:  mov    $0x1,%edx
    0.00 :   820d8:  mov    %rbx,%rdi
    0.00 :   820db:  call   *0x80(%rbp)
    0.00 :   820e1:  xor    %ebp,%ebp
    0.00 :   820e3:  cmp    $0xffffffffffffffff,%rax
    0.00 :   820e7:  je     820a3 <new_do_write+0xa3>
    0.00 :   820e9:  mov    %rax,0x90(%rbx)
    0.00 :   820f0:  mov    0xd8(%rbx),%rbp
    0.00 :   820f7:  jmp    82045 <new_do_write+0x45>
    0.00 :   820fc:  nopl   0x0(%rax)
    0.00 :   82100:  testl  $0x202,(%rbx)
    0.00 :   82106:  jne    8209f <new_do_write+0x9f>
    0.00 :   82108:  jmp    8209b <new_do_write+0x9b>
    0.00 :   8210a:  nopw   0x0(%rax,%rax,1)
    0.00 :   82110:  sub    $0x1,%edi
    0.00 :   82113:  mov    %eax,%edx
    0.00 :   82115:  mov    %r12,%rsi
    0.00 :   82118:  call   85610 <_IO_adjust_column>
    0.00 :   8211d:  add    $0x1,%eax
    0.00 :   82120:  mov    %ax,0x80(%rbx)
    0.00 :   82127:  jmp    82078 <new_do_write+0x78>
    0.00 :   8212c:  nopl   0x0(%rax)
    0.00 :   82130:  call   818e0 <_IO_vtable_check>
    0.00 :   82135:  jmp    82054 <new_do_write+0x54>
    0.00 :   8213a:  nopw   0x0(%rax,%rax,1)
    0.00 :   82140:  call   818e0 <_IO_vtable_check>
    0.00 :   82145:  mov    0x20(%rbx),%rsi
    0.00 :   82149:  mov    0x10(%rbx),%rax
    0.00 :   8214d:  jmp    820d0 <new_do_write+0xd0>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[4def9]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000004def0 <__mpn_lshift>:
         : 6     __mpn_lshift():
    0.00 :   4def0:  endbr64
    0.00 :   4def4:  lea    -0x8(%rdi,%rdx,8),%rdi
  100.00 :   4def9:  lea    -0x8(%rsi,%rdx,8),%rsi // libc.so.6[4def9]
    0.00 :   4defe:  mov    %edx,%eax
    0.00 :   4df00:  and    $0x3,%eax
    0.00 :   4df03:  jne    4df23 <__mpn_lshift+0x33>
    0.00 :   4df05:  mov    (%rsi),%r10
    0.00 :   4df08:  mov    -0x8(%rsi),%r11
    0.00 :   4df0c:  xor    %eax,%eax
    0.00 :   4df0e:  shld   %cl,%r10,%rax
    0.00 :   4df12:  mov    -0x10(%rsi),%r8
    0.00 :   4df16:  lea    0x18(%rdi),%rdi
    0.00 :   4df1a:  sub    $0x4,%rdx
    0.00 :   4df1e:  jmp    4dfd2 <__mpn_lshift+0xe2>
    0.00 :   4df23:  cmp    $0x2,%eax
    0.00 :   4df26:  jae    4df50 <__mpn_lshift+0x60>
    0.00 :   4df28:  mov    (%rsi),%r9
    0.00 :   4df2b:  xor    %eax,%eax
    0.00 :   4df2d:  shld   %cl,%r9,%rax
    0.00 :   4df31:  sub    $0x2,%rdx
    0.00 :   4df35:  jb     4df49 <__mpn_lshift+0x59>
    0.00 :   4df37:  mov    -0x8(%rsi),%r10
    0.00 :   4df3b:  mov    -0x10(%rsi),%r11
    0.00 :   4df3f:  lea    -0x8(%rsi),%rsi
    0.00 :   4df43:  lea    0x10(%rdi),%rdi
    0.00 :   4df47:  jmp    4dfc6 <__mpn_lshift+0xd6>
    0.00 :   4df49:  shl    %cl,%r9
    0.00 :   4df4c:  mov    %r9,(%rdi)
    0.00 :   4df4f:  ret
    0.00 :   4df50:  jne    4df90 <__mpn_lshift+0xa0>
    0.00 :   4df52:  mov    (%rsi),%r8
    0.00 :   4df55:  mov    -0x8(%rsi),%r9
    0.00 :   4df59:  xor    %eax,%eax
    0.00 :   4df5b:  shld   %cl,%r8,%rax
    0.00 :   4df5f:  sub    $0x3,%rdx
    0.00 :   4df63:  jb     4df73 <__mpn_lshift+0x83>
    0.00 :   4df65:  mov    -0x10(%rsi),%r10
    0.00 :   4df69:  lea    -0x10(%rsi),%rsi
    0.00 :   4df6d:  lea    0x8(%rdi),%rdi
    0.00 :   4df71:  jmp    4dfba <__mpn_lshift+0xca>
    0.00 :   4df73:  shld   %cl,%r9,%r8
    0.00 :   4df77:  mov    %r8,(%rdi)
    0.00 :   4df7a:  shl    %cl,%r9
    0.00 :   4df7d:  mov    %r9,-0x8(%rdi)
    0.00 :   4df81:  ret
    0.00 :   4df82:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   4df8d:  nopl   (%rax)
    0.00 :   4df90:  mov    (%rsi),%r11
    0.00 :   4df93:  mov    -0x8(%rsi),%r8
    0.00 :   4df97:  xor    %eax,%eax
    0.00 :   4df99:  shld   %cl,%r11,%rax
    0.00 :   4df9d:  mov    -0x10(%rsi),%r9
    0.00 :   4dfa1:  lea    -0x18(%rsi),%rsi
    0.00 :   4dfa5:  sub    $0x4,%rdx
    0.00 :   4dfa9:  jb     4dfec <__mpn_lshift+0xfc>
    0.00 :   4dfab:  nopl   0x0(%rax,%rax,1)
    0.00 :   4dfb0:  shld   %cl,%r8,%r11
    0.00 :   4dfb4:  mov    (%rsi),%r10
    0.00 :   4dfb7:  mov    %r11,(%rdi)
    0.00 :   4dfba:  shld   %cl,%r9,%r8
    0.00 :   4dfbe:  mov    -0x8(%rsi),%r11
    0.00 :   4dfc2:  mov    %r8,-0x8(%rdi)
    0.00 :   4dfc6:  shld   %cl,%r10,%r9
    0.00 :   4dfca:  mov    -0x10(%rsi),%r8
    0.00 :   4dfce:  mov    %r9,-0x10(%rdi)
    0.00 :   4dfd2:  shld   %cl,%r11,%r10
    0.00 :   4dfd6:  mov    -0x18(%rsi),%r9
    0.00 :   4dfda:  mov    %r10,-0x18(%rdi)
    0.00 :   4dfde:  add    $0xffffffffffffffe0,%rsi
    0.00 :   4dfe2:  lea    -0x20(%rdi),%rdi
    0.00 :   4dfe6:  sub    $0x4,%rdx
    0.00 :   4dfea:  jae    4dfb0 <__mpn_lshift+0xc0>
    0.00 :   4dfec:  shld   %cl,%r8,%r11
    0.00 :   4dff0:  mov    %r11,(%rdi)
    0.00 :   4dff3:  shld   %cl,%r9,%r8
    0.00 :   4dff7:  mov    %r8,-0x8(%rdi)
    0.00 :   4dffb:  shl    %cl,%r9
    0.00 :   4dffe:  mov    %r9,-0x10(%rdi)
    0.00 :   4e002:  ret

Sorted summary for file /usr/local/bin/dbt2-driver
----------------------------------------------

  100.00 dbt2-driver[4073a0]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .plt:
         :
         : 5      00000000004073a0 <pthread_mutex_lock@plt>:
  100.00 :   4073a0: jmp    *0xfe2a(%rip)        # 4171d0 <pthread_mutex_lock@GLIBC_2.2.5> // dbt2-driver[4073a0]
    0.00 :   4073a6: push   $0x37
    0.00 :   4073ab: jmp    407020 <_init+0x20>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[152840]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000152840 <__mempcpy_avx_unaligned_erms>:
         : 6      __mempcpy_avx_unaligned_erms():
  100.00 :   152840: endbr64 // libc.so.6[152840]
    0.00 :   152844: mov    %rdi,%rax
    0.00 :   152847: add    %rdx,%rax
    0.00 :   15284a: jmp    152887 <__memcpy_avx_unaligned_erms+0x7>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[82c90]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000082c90 <_IO_file_write@@GLIBC_2.2.5>:
         : 6     _IO_new_file_write():
  100.00 :   82c90:  endbr64 // libc.so.6[82c90]
    0.00 :   82c94:  push   %r13
    0.00 :   82c96:  mov    %rdi,%r13
    0.00 :   82c99:  push   %r12
    0.00 :   82c9b:  push   %rbp
    0.00 :   82c9c:  push   %rbx
    0.00 :   82c9d:  sub    $0x8,%rsp
    0.00 :   82ca1:  test   %rdx,%rdx
    0.00 :   82ca4:  jle    82d28 <_IO_file_write@@GLIBC_2.2.5+0x98>
    0.00 :   82caa:  mov    %rsi,%rbp
    0.00 :   82cad:  mov    %rdx,%r12
    0.00 :   82cb0:  mov    %rdx,%rbx
    0.00 :   82cb3:  jmp    82ccd <_IO_file_write@@GLIBC_2.2.5+0x3d>
    0.00 :   82cb5:  nopl   (%rax)
    0.00 :   82cb8:  call   fb270 <__write>
    0.00 :   82cbd:  test   %rax,%rax
    0.00 :   82cc0:  js     82cf0 <_IO_file_write@@GLIBC_2.2.5+0x60>
    0.00 :   82cc2:  sub    %rax,%rbx
    0.00 :   82cc5:  add    %rax,%rbp
    0.00 :   82cc8:  test   %rbx,%rbx
    0.00 :   82ccb:  jle    82d20 <_IO_file_write@@GLIBC_2.2.5+0x90>
    0.00 :   82ccd:  mov    0x70(%r13),%edi
    0.00 :   82cd1:  mov    %rbx,%rdx
    0.00 :   82cd4:  mov    %rbp,%rsi
    0.00 :   82cd7:  testb  $0x2,0x74(%r13)
    0.00 :   82cdc:  je     82cb8 <_IO_file_write@@GLIBC_2.2.5+0x28>
    0.00 :   82cde:  call   100180 <__write_nocancel>
    0.00 :   82ce3:  test   %rax,%rax
    0.00 :   82ce6:  jns    82cc2 <_IO_file_write@@GLIBC_2.2.5+0x32>
    0.00 :   82ce8:  nopl   0x0(%rax,%rax,1)
    0.00 :   82cf0:  orl    $0x20,0x0(%r13)
    0.00 :   82cf5:  mov    %r12,%rax
    0.00 :   82cf8:  sub    %rbx,%rax
    0.00 :   82cfb:  mov    0x90(%r13),%rdx
    0.00 :   82d02:  test   %rdx,%rdx
    0.00 :   82d05:  js     82d11 <_IO_file_write@@GLIBC_2.2.5+0x81>
    0.00 :   82d07:  add    %rax,%rdx
    0.00 :   82d0a:  mov    %rdx,0x90(%r13)
    0.00 :   82d11:  add    $0x8,%rsp
    0.00 :   82d15:  pop    %rbx
    0.00 :   82d16:  pop    %rbp
    0.00 :   82d17:  pop    %r12
    0.00 :   82d19:  pop    %r13
    0.00 :   82d1b:  ret
    0.00 :   82d1c:  nopl   0x0(%rax)
    0.00 :   82d20:  mov    %r12,%rax
    0.00 :   82d23:  sub    %rbx,%rax
    0.00 :   82d26:  jmp    82cfb <_IO_file_write@@GLIBC_2.2.5+0x6b>
    0.00 :   82d28:  xor    %eax,%eax
    0.00 :   82d2a:  jmp    82cfb <_IO_file_write@@GLIBC_2.2.5+0x6b>
