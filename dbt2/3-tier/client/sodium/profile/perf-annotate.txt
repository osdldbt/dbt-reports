
Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   61.80 [nf_tables][16a]
   21.38 [nf_tables][1d5]
   19.82 [nf_tables][167]
   19.82 [nf_tables][163]
   15.87 [nf_tables][22d]
    9.49 [nf_tables][e0]
    3.35 [nf_tables][11e]
    3.35 [nf_tables][11c]
    2.45 [nf_tables][126]
    2.45 [nf_tables][125]
    2.29 [nf_tables][13e]
    2.29 [nf_tables][139]
    1.84 [nf_tables][179]
    1.73 [nf_tables][2e1]
    1.55 [nf_tables][1f6]
    1.55 [nf_tables][1f1]
    1.50 [nf_tables][182]
    1.50 [nf_tables][180]
    1.09 [nf_tables][150]
    1.09 [nf_tables][14e]
    0.93 [nf_tables][58c]
    0.81 [nf_tables][287]
    0.79 [nf_tables][322]
    0.78 [nf_tables][1a0]
    0.78 [nf_tables][19f]
    0.72 [nf_tables][43f]
    0.67 [nf_tables][670]
    0.67 [nf_tables][26b]
    0.66 [nf_tables][274]
    0.62 [nf_tables][23e]
    0.60 [nf_tables][27b]
    0.59 [nf_tables][116]
    0.59 [nf_tables][115]
    0.55 [nf_tables][5c8]
    0.55 [nf_tables][29f]
    0.54 [nf_tables][267]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (334 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000000e0 <nft_do_chain>:
         : 6   nft_do_chain():
    4.74 :    e0:     call   e5 <nft_do_chain+0x5> // [nf_tables][e0]
    0.00 :    e5:     push   %r15
    0.00 :    e7:     mov    $0xa,%ecx
    0.00 :    ec:     push   %r14
    0.32 :    ee:     mov    %rdi,%r14
    0.00 :    f1:     push   %r13
    0.00 :    f3:     push   %r12
    0.00 :    f5:     push   %rbp
    0.00 :    f6:     mov    %rsi,%rbp
    0.00 :    f9:     push   %rbx
    0.00 :    fa:     sub    $0x218,%rsp
    0.00 :   101:    mov    0x8(%rdi),%rax
    0.00 :   105:    lea    0x48(%rsp),%rbx
    0.00 :   10a:    lea    0x98(%rsp),%rdx
    0.00 :   112:    mov    0x20(%rax),%rsi
    0.59 :   116:    mov    %rbx,%rdi // [nf_tables][116]
    0.00 :   119:    xor    %eax,%eax
    0.00 :   11b:    rep stos %rax,%es:(%rdi)
    3.35 :   11e:    mov    $0x30,%ecx // [nf_tables][11e]
    0.36 :   123:    mov    %rdx,%rdi
    2.45 :   126:    rep stos %rax,%es:(%rdi) // [nf_tables][126]
    0.00 :   129:    mov    $0x6,%ecx
    0.00 :   12e:    lea    0x18(%rsp),%rdi
    0.00 :   133:    movzbl 0xc20(%rsi),%r15d
    0.00 :   13b:    rep stos %rax,%es:(%rdi)
    2.29 :   13e:    nopl   0x0(%rax,%rax,1) // [nf_tables][13e]
    0.38 :   143:    mov    %r15b,0xf(%rsp)
    0.00 :   148:    xor    %r12d,%r12d
    0.00 :   14b:    cmpb   $0x0,0xf(%rsp)
    1.09 :   150:    mov    %rbp,(%rsp) // [nf_tables][150]
    0.00 :   154:    mov    (%rsp),%rax
    0.00 :   158:    mov    %rbp,0x10(%rsp)
    0.00 :   15d:    je     328 <nft_do_chain+0x248>
    0.00 :   163:    mov    0x8(%rax),%rax
   19.82 :   167:    mov    (%rax),%rbp // [nf_tables][167]
   30.90 :   16a:    lea    0x8(%rax),%r13 // [nf_tables][16a]
    0.00 :   16e:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   176:    add    %r13,%rbp
    0.92 :   179:    cmp    %rbp,%r13 // [nf_tables][179]
    0.00 :   17c:    jae    454 <nft_do_chain+0x374>
    1.50 :   182:    mov    %r12d,0x8(%rsp) // [nf_tables][182]
    0.00 :   187:    mov    %rbp,%r12
    0.00 :   18a:    movzwl 0x0(%r13),%eax
    0.40 :   18f:    lea    0x8(%r13),%rbp
    0.28 :   193:    shr    %ax
    0.00 :   196:    and    $0xfff,%eax
    0.37 :   19b:    lea    0x8(%r13,%rax,1),%r15
    0.78 :   1a0:    cmp    %r15,%rbp // [nf_tables][1a0]
    0.00 :   1a3:    jne    287 <nft_do_chain+0x1a7>
    0.00 :   1a9:    jmp    5d5 <nft_do_chain+0x4f5>
    0.27 :   1ae:    cmp    $0x0,%rax
    0.00 :   1b4:    je     34b <nft_do_chain+0x26b>
    0.00 :   1ba:    cmp    $0x0,%rax
    0.00 :   1c0:    je     330 <nft_do_chain+0x250>
    0.00 :   1c6:    cmp    $0x0,%rax
    0.00 :   1cc:    je     384 <nft_do_chain+0x2a4>
    0.00 :   1d2:    mov    (%rax),%rax
   10.62 :   1d5:    mov    %r14,%rdx // [nf_tables][1d5]
    0.00 :   1d8:    mov    %rbx,%rsi
    0.14 :   1db:    mov    %rbp,%rdi
    0.19 :   1de:    cmp    $0x0,%rax
    0.00 :   1e4:    je     474 <nft_do_chain+0x394>
    0.25 :   1ea:    cmp    $0x0,%rax
    0.00 :   1f0:    je     4b6 <nft_do_chain+0x3d6>
    1.55 :   1f6:    cmp    $0x0,%rax // [nf_tables][1f6]
    0.00 :   1fc:    je     4c0 <nft_do_chain+0x3e0>
    0.48 :   202:    cmp    $0x0,%rax
    0.00 :   208:    je     4d5 <nft_do_chain+0x3f5>
    0.00 :   20e:    cmp    $0x0,%rax
    0.00 :   214:    je     4df <nft_do_chain+0x3ff>
    0.00 :   21a:    cmp    $0x0,%rax
    0.00 :   220:    je     521 <nft_do_chain+0x441>
    0.09 :   226:    cmp    $0x0,%rax
    0.00 :   22c:    je     52b <nft_do_chain+0x44b>
    0.00 :   232:    cmp    $0x0,%rax
    0.00 :   238:    je     564 <nft_do_chain+0x484>
    0.62 :   23e:    cmp    $0x0,%rax // [nf_tables][23e]
    0.00 :   244:    je     56e <nft_do_chain+0x48e>
    0.00 :   24a:    cmp    $0x0,%rax
    0.00 :   250:    je     578 <nft_do_chain+0x498>
    0.00 :   256:    cmp    $0x0,%rax
    0.00 :   25c:    je     582 <nft_do_chain+0x4a2>
    0.00 :   262:    call   267 <nft_do_chain+0x187>
    0.54 :   267:    mov    0x48(%rsp),%edx // [nf_tables][267]
    0.67 :   26b:    cmp    $0xffffffff,%edx // [nf_tables][26b]
    0.00 :   26e:    jne    670 <nft_do_chain+0x590>
    0.66 :   274:    mov    0x0(%rbp),%rax // [nf_tables][274]
    0.00 :   278:    mov    0x10(%rax),%eax
    0.60 :   27b:    add    %rax,%rbp // [nf_tables][27b]
    0.00 :   27e:    cmp    %rbp,%r15
    0.00 :   281:    je     47e <nft_do_chain+0x39e>
    0.81 :   287:    mov    0x0(%rbp),%rax // [nf_tables][287]
    0.35 :   28b:    cmp    $0x0,%rax
    0.00 :   291:    jne    1ae <nft_do_chain+0xce>
    0.00 :   297:    movzbl 0x10(%rbp),%eax
    0.00 :   29b:    mov    0x48(%rsp,%rax,4),%eax
    0.55 :   29f:    and    0xc(%rbp),%eax // [nf_tables][29f]
    0.00 :   2a2:    cmp    0x8(%rbp),%eax
    0.33 :   2a5:    sete   %al
    0.00 :   2a8:    cmp    0x12(%rbp),%al
    0.00 :   2ab:    jne    267 <nft_do_chain+0x187>
    0.26 :   2ad:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   2b5:    nopl   0x0(%rax,%rax,1)
    0.00 :   2ba:    movzwl 0x0(%r13),%eax
    0.00 :   2bf:    shr    %ax
    0.00 :   2c2:    and    $0xfff,%eax
    0.00 :   2c7:    lea    0x8(%r13,%rax,1),%r13
    0.00 :   2cc:    cmp    %r12,%r13
    0.00 :   2cf:    jb     18a <nft_do_chain+0xaa>
    0.00 :   2d5:    mov    %r12,%rbp
    0.32 :   2d8:    mov    0x48(%rsp),%edx
    0.00 :   2dc:    mov    0x8(%rsp),%r12d
    1.73 :   2e1:    nopl   0x0(%rax,%rax,1) // [nf_tables][2e1]
    0.00 :   2e6:    test   $0xfc,%dl
    0.00 :   2e9:    je     509 <nft_do_chain+0x429>
    0.00 :   2ef:    cmp    $0xfffffffd,%edx
    0.00 :   2f2:    je     58c <nft_do_chain+0x4ac>
    0.00 :   2f8:    ja     407 <nft_do_chain+0x327>
    0.42 :   2fe:    cmp    $0xfffffffb,%edx
    0.00 :   301:    je     40e <nft_do_chain+0x32e>
    0.00 :   307:    cmp    $0xfffffffc,%edx
    0.00 :   30a:    jne    40c <nft_do_chain+0x32c>
    0.00 :   310:    mov    0x50(%rsp),%rax
    0.00 :   315:    cmpb   $0x0,0xf(%rsp)
    0.00 :   31a:    mov    %rax,(%rsp)
    0.00 :   31e:    mov    (%rsp),%rax
    0.79 :   322:    jne    163 <nft_do_chain+0x83> // [nf_tables][322]
    0.00 :   328:    mov    (%rax),%rax
    0.00 :   32b:    jmp    167 <nft_do_chain+0x87>
    0.00 :   330:    movzbl 0x10(%rbp),%eax
    0.00 :   334:    movzbl 0x11(%rbp),%edx
    0.00 :   338:    mov    0x48(%rsp,%rax,4),%eax
    0.00 :   33c:    and    0x8(%rbp),%eax
    0.00 :   33f:    xor    0xc(%rbp),%eax
    0.00 :   342:    mov    %eax,0x48(%rsp,%rdx,4)
    0.00 :   346:    jmp    267 <nft_do_chain+0x187>
    0.46 :   34b:    movzbl 0x28(%rbp),%eax
    0.00 :   34f:    xor    %edx,%edx
    0.00 :   351:    lea    (%rbx,%rax,4),%rcx
    0.00 :   355:    mov    (%rcx),%rax
    0.00 :   358:    and    0x18(%rbp),%rax
    0.00 :   35c:    cmp    0x8(%rbp),%rax
    0.00 :   360:    jne    373 <nft_do_chain+0x293>
    0.00 :   362:    xor    %edx,%edx
    0.00 :   364:    mov    0x8(%rcx),%rax
    0.00 :   368:    and    0x20(%rbp),%rax
    0.00 :   36c:    cmp    0x10(%rbp),%rax
    0.00 :   370:    sete   %dl
    0.00 :   373:    movzbl 0x2a(%rbp),%eax
    0.00 :   377:    cmp    %edx,%eax
    0.00 :   379:    jne    267 <nft_do_chain+0x187>
    0.00 :   37f:    jmp    2ad <nft_do_chain+0x1cd>
    0.00 :   384:    cmpb   $0x1,0x8(%rbp)
    0.00 :   388:    mov    (%r14),%rsi
    0.00 :   38b:    je     45e <nft_do_chain+0x37e>
    0.00 :   391:    testb  $0x1,0x10(%r14)
    0.00 :   396:    je     1d2 <nft_do_chain+0xf2>
    0.00 :   39c:    movzwl 0xb8(%rsi),%edx
    0.00 :   3a3:    mov    0x14(%r14),%edi
    0.00 :   3a7:    mov    0xc8(%rsi),%rcx
    0.00 :   3ae:    add    %rdi,%rdx
    0.00 :   3b1:    add    %rcx,%rdx
    0.00 :   3b4:    movzbl 0x9(%rbp),%edi
    0.00 :   3b8:    mov    0xbc(%rsi),%esi
    0.00 :   3be:    add    %rdi,%rdx
    0.00 :   3c1:    movzbl 0xa(%rbp),%edi
    0.00 :   3c5:    add    %rsi,%rcx
    0.00 :   3c8:    add    %rdx,%rdi
    0.00 :   3cb:    cmp    %rdi,%rcx
    0.00 :   3ce:    jb     1d2 <nft_do_chain+0xf2>
    0.00 :   3d4:    movzbl 0xb(%rbp),%ecx
    0.00 :   3d8:    movl   $0x0,0x48(%rsp,%rcx,4)
    0.00 :   3e0:    lea    (%rbx,%rcx,4),%rsi
    0.00 :   3e4:    mov    %rcx,%rax
    0.00 :   3e7:    movzbl 0xa(%rbp),%ecx
    0.00 :   3eb:    cmp    $0x2,%cl
    0.00 :   3ee:    je     4ca <nft_do_chain+0x3ea>
    0.00 :   3f4:    cmp    $0x4,%cl
    0.00 :   3f7:    je     535 <nft_do_chain+0x455>
    0.00 :   3fd:    movzbl (%rdx),%eax
    0.00 :   400:    mov    %al,(%rsi)
    0.00 :   402:    jmp    267 <nft_do_chain+0x187>
    0.50 :   407:    cmp    $0xffffffff,%edx
    0.00 :   40a:    je     40e <nft_do_chain+0x32e>
    0.00 :   40c:    ud2
    0.00 :   40e:    test   %r12d,%r12d
    0.00 :   411:    je     619 <nft_do_chain+0x539>
    0.00 :   417:    lea    -0x1(%r12),%eax
    0.00 :   41c:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   424:    mov    %rax,%r12
    0.26 :   427:    lea    (%rax,%rax,2),%rax
    0.00 :   42b:    shl    $0x3,%rax
    0.00 :   42f:    mov    0x98(%rsp,%rax,1),%rdi
    0.00 :   437:    mov    0xa0(%rsp,%rax,1),%r13
    0.72 :   43f:    mov    0xa8(%rsp,%rax,1),%rbp // [nf_tables][43f]
    0.00 :   447:    mov    %rdi,(%rsp)
    0.00 :   44b:    cmp    %rbp,%r13
    0.00 :   44e:    jb     182 <nft_do_chain+0xa2>
    0.24 :   454:    mov    $0xffffffff,%edx
    0.00 :   459:    jmp    2e1 <nft_do_chain+0x201>
    0.00 :   45e:    mov    0xc8(%rsi),%rcx
    0.00 :   465:    movzwl 0xb8(%rsi),%edx
    0.00 :   46c:    add    %rcx,%rdx
    0.00 :   46f:    jmp    3b4 <nft_do_chain+0x2d4>
    0.00 :   474:    call   479 <nft_do_chain+0x399>
    0.00 :   479:    jmp    267 <nft_do_chain+0x187>
    0.00 :   47e:    xchg   %ax,%ax
    0.00 :   480:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   485:    mov    (%r14),%rax
    0.00 :   488:    mov    (%rsp),%rsi
    0.00 :   48c:    mov    $0x3,%edx
    0.00 :   491:    lea    0x18(%rsp),%rdi
    0.00 :   496:    mov    %r13,0x38(%rsp)
    0.00 :   49b:    movzbl 0x80(%rax),%eax
    0.00 :   4a2:    shr    $0x4,%al
    0.00 :   4a5:    and    $0x1,%eax
    0.00 :   4a8:    mov    %al,0x19(%rsp)
    0.00 :   4ac:    call   0 <__nft_trace_packet>
    0.00 :   4b1:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   4b6:    call   4bb <nft_do_chain+0x3db>
    0.00 :   4bb:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4c0:    call   4c5 <nft_do_chain+0x3e5>
    0.00 :   4c5:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4ca:    movzwl (%rdx),%eax
    0.00 :   4cd:    mov    %ax,(%rsi)
    0.00 :   4d0:    jmp    267 <nft_do_chain+0x187>
    0.35 :   4d5:    call   4da <nft_do_chain+0x3fa>
    0.00 :   4da:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4df:    call   4e4 <nft_do_chain+0x404>
    0.00 :   4e4:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4e9:    mov    (%rsp),%rsi
    0.00 :   4ed:    lea    0x18(%rsp),%rdi
    0.00 :   4f2:    mov    %r13,0x38(%rsp)
    0.00 :   4f7:    call   90 <__nft_trace_verdict.isra.0>
    0.00 :   4fc:    mov    0x48(%rsp),%edx
    0.00 :   500:    test   $0xfc,%dl
    0.00 :   503:    jne    2ef <nft_do_chain+0x20f>
    0.00 :   509:    add    $0x218,%rsp
    0.00 :   510:    mov    %edx,%eax
    0.00 :   512:    pop    %rbx
    0.00 :   513:    pop    %rbp
    0.00 :   514:    pop    %r12
    0.00 :   516:    pop    %r13
    0.00 :   518:    pop    %r14
    0.38 :   51a:    pop    %r15
    0.00 :   51c:    jmp    521 <nft_do_chain+0x441>
    0.00 :   521:    call   526 <nft_do_chain+0x446>
    0.00 :   526:    jmp    267 <nft_do_chain+0x187>
    0.00 :   52b:    call   530 <nft_do_chain+0x450>
    0.23 :   530:    jmp    267 <nft_do_chain+0x187>
    0.00 :   535:    mov    (%rdx),%edx
    0.00 :   537:    mov    %edx,0x48(%rsp,%rax,4)
    0.00 :   53b:    jmp    267 <nft_do_chain+0x187>
    0.00 :   540:    cmpb   $0x0,0x18(%rsp)
    0.00 :   545:    je     2ba <nft_do_chain+0x1da>
    0.00 :   54b:    mov    (%r14),%rax
    0.00 :   54e:    movzbl 0x80(%rax),%eax
    0.00 :   555:    shr    $0x4,%al
    0.00 :   558:    and    $0x1,%eax
    0.00 :   55b:    mov    %al,0x19(%rsp)
    0.00 :   55f:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   564:    call   569 <nft_do_chain+0x489>
    0.00 :   569:    jmp    267 <nft_do_chain+0x187>
    0.00 :   56e:    call   573 <nft_do_chain+0x493>
    0.00 :   573:    jmp    267 <nft_do_chain+0x187>
    0.00 :   578:    call   57d <nft_do_chain+0x49d>
    0.00 :   57d:    jmp    267 <nft_do_chain+0x187>
    0.00 :   582:    call   587 <nft_do_chain+0x4a7>
    0.00 :   587:    jmp    267 <nft_do_chain+0x187>
    0.93 :   58c:    cmp    $0xf,%r12d // [nf_tables][58c]
    0.00 :   590:    ja     610 <nft_do_chain+0x530>
    0.38 :   592:    movzwl 0x0(%r13),%edx
    0.00 :   597:    mov    %r12d,%eax
    0.00 :   59a:    mov    (%rsp),%rdi
    0.00 :   59e:    add    $0x1,%r12d
    0.00 :   5a2:    lea    (%rax,%rax,2),%rax
    0.36 :   5a6:    shr    %dx
    0.00 :   5a9:    shl    $0x3,%rax
    0.00 :   5ad:    and    $0xfff,%edx
    0.00 :   5b3:    mov    %rdi,0x98(%rsp,%rax,1)
    0.48 :   5bb:    lea    0x8(%r13,%rdx,1),%rdx
    0.00 :   5c0:    mov    %rbp,0xa8(%rsp,%rax,1)
    0.55 :   5c8:    mov    %rdx,0xa0(%rsp,%rax,1) // [nf_tables][5c8]
    0.00 :   5d0:    jmp    310 <nft_do_chain+0x230>
    0.00 :   5d5:    mov    0x48(%rsp),%edx
    0.00 :   5d9:    cmp    $0xfffffffe,%edx
    0.00 :   5dc:    je     2ad <nft_do_chain+0x1cd>
    0.00 :   5e2:    cmp    $0xffffffff,%edx
    0.00 :   5e5:    je     47e <nft_do_chain+0x39e>
    0.37 :   5eb:    mov    %r12,%rbp
    0.00 :   5ee:    mov    0x8(%rsp),%r12d
    0.00 :   5f3:    jmp    2e1 <nft_do_chain+0x201>
    0.00 :   5f8:    mov    %rbp,%rcx
    0.00 :   5fb:    mov    %rbx,%rdx
    0.00 :   5fe:    lea    0x18(%rsp),%rdi
    0.00 :   603:    mov    %r14,%rsi
    0.00 :   606:    call   60b <nft_do_chain+0x52b>
    0.00 :   60b:    jmp    143 <nft_do_chain+0x63>
    0.00 :   610:    ud2
    0.00 :   612:    xor    %edx,%edx
    0.00 :   614:    jmp    509 <nft_do_chain+0x429>
    0.36 :   619:    mov    0x10(%rsp),%rbp
    0.00 :   61e:    xchg   %ax,%ax
    0.00 :   620:    xchg   %ax,%ax
    0.00 :   622:    movzbl -0x10(%rbp),%edx
    0.00 :   626:    jmp    509 <nft_do_chain+0x429>
    0.00 :   62b:    mov    %r14,%rsi
    0.00 :   62e:    mov    %rbp,%rdi
    0.00 :   631:    call   30 <nft_update_chain_stats>
    0.00 :   636:    movzbl -0x10(%rbp),%edx
    0.00 :   63a:    jmp    509 <nft_do_chain+0x429>
    0.00 :   63f:    mov    (%r14),%rax
    0.00 :   642:    mov    $0x1,%edx
    0.00 :   647:    mov    %rbp,%rsi
    0.00 :   64a:    lea    0x18(%rsp),%rdi
    0.00 :   64f:    movq   $0x0,0x38(%rsp)
    0.00 :   658:    movzbl 0x80(%rax),%eax
    0.00 :   65f:    shr    $0x4,%al
    0.00 :   662:    and    $0x1,%eax
    0.00 :   665:    mov    %al,0x19(%rsp)
    0.00 :   669:    call   0 <__nft_trace_packet>
    0.00 :   66e:    jmp    620 <nft_do_chain+0x540>
    0.67 :   670:    cmp    $0xfffffffe,%edx // [nf_tables][670]
    0.00 :   673:    jne    5eb <nft_do_chain+0x50b>
    0.00 :   679:    jmp    2ad <nft_do_chain+0x1cd>
         :
         : 333 Disassembly of section .init.text:
         :
         : 335 00000000000000e0 <init_module+0x3b>:
         : 336 nf_tables_module_init():
    4.74 :    e0:     mov    $0x0,%edi // [nf_tables][e0]
    0.00 :    e6:     call   eb <init_module+0x46>
    0.00 :    eb:     mov    %eax,%ebx
    0.32 :    ed:     test   %eax,%eax
    0.00 :    ef:     js     16f <init_module+0xca>
    0.00 :    f1:     mov    $0x0,%rsi
    0.00 :    f8:     mov    $0x0,%rdi
    0.00 :    ff:     call   104 <init_module+0x5f>
    0.00 :   104:    mov    %eax,%ebx
    0.00 :   106:    test   %eax,%eax
    0.00 :   108:    js     163 <init_module+0xbe>
    0.00 :   10a:    call   10f <init_module+0x6a>
    0.00 :   10f:    mov    %eax,%ebx
    0.00 :   111:    test   %eax,%eax
    0.00 :   113:    js     153 <init_module+0xae>
    0.59 :   115:    mov    $0x0,%rdi // [nf_tables][115]
    3.35 :   11c:    call   121 <init_module+0x7c> // [nf_tables][11c]
    0.00 :   121:    mov    %eax,%ebx
    0.36 :   123:    test   %eax,%eax
    2.45 :   125:    js     14e <init_module+0xa9> // [nf_tables][125]
    0.00 :   127:    mov    $0x0,%rdi
    0.00 :   12e:    call   133 <init_module+0x8e>
    0.00 :   133:    mov    %eax,%ebx
    0.00 :   135:    test   %eax,%eax
    0.00 :   137:    jns    147 <init_module+0xa2>
    2.29 :   139:    mov    $0x0,%rdi // [nf_tables][139]
    0.38 :   140:    call   145 <init_module+0xa0>
    0.00 :   145:    jmp    14e <init_module+0xa9>
    0.00 :   147:    call   14c <init_module+0xa7>
    0.00 :   14c:    jmp    185 <init_module+0xe0>
    1.09 :   14e:    call   153 <init_module+0xae> // [nf_tables][14e]
    0.00 :   153:    xor    %edx,%edx
    0.00 :   155:    xor    %esi,%esi
    0.00 :   157:    mov    $0x0,%rdi
    0.00 :   15e:    call   163 <init_module+0xbe>
   19.82 :   163:    mov    $0x0,%rdi // [nf_tables][163]
   30.90 :   16a:    call   16f <init_module+0xca> // [nf_tables][16a]
    0.00 :   16f:    call   174 <init_module+0xcf>
    0.00 :   174:    call   179 <init_module+0xd4>
    0.92 :   179:    mov    $0x0,%rdi // [nf_tables][179]
    1.50 :   180:    call   185 <init_module+0xe0> // [nf_tables][180]
    0.00 :   185:    mov    %ebx,%eax
    0.00 :   187:    pop    %rbx
    0.00 :   188:    jmp    18d <nft_chain_filter_init>
         :
         : 382 000000000000018d <nft_chain_filter_init>:
         : 383 nft_chain_filter_init():
    0.40 :   18d:    call   192 <nft_chain_filter_init+0x5>
    0.00 :   192:    push   %rbx
    0.28 :   193:    mov    $0x0,%rdi
    0.37 :   19a:    call   19f <nft_chain_filter_init+0x12>
    0.78 :   19f:    mov    $0x0,%rdi // [nf_tables][19f]
    0.00 :   1a6:    call   1ab <nft_chain_filter_init+0x1e>
    0.00 :   1ab:    test   %eax,%eax
    0.27 :   1ad:    jne    1ef <nft_chain_filter_init+0x62>
    0.00 :   1af:    mov    $0x0,%rdi
    0.00 :   1b6:    xor    %ebx,%ebx
    0.00 :   1b8:    call   1bd <nft_chain_filter_init+0x30>
    0.00 :   1bd:    mov    $0x0,%rdi
    0.00 :   1c4:    call   1c9 <nft_chain_filter_init+0x3c>
    0.00 :   1c9:    mov    $0x0,%rdi
    0.00 :   1d0:    call   1d5 <nft_chain_filter_init+0x48>
   10.76 :   1d5:    mov    $0x0,%rdi // [nf_tables][1d5]
    0.19 :   1dc:    call   1e1 <nft_chain_filter_init+0x54>
    0.00 :   1e1:    mov    $0x0,%rdi
    0.25 :   1e8:    call   1ed <nft_chain_filter_init+0x60>
    0.00 :   1ed:    jmp    201 <nft_chain_filter_init+0x74>
    0.00 :   1ef:    mov    %eax,%ebx
    1.55 :   1f1:    mov    $0x0,%rdi // [nf_tables][1f1]
    0.00 :   1f8:    call   1fd <nft_chain_filter_init+0x70>
    0.00 :   1fd:    test   %ebx,%ebx
    0.00 :   1ff:    jns    1af <nft_chain_filter_init+0x22>
    0.48 :   201:    mov    %ebx,%eax
    0.00 :   203:    pop    %rbx
    0.00 :   204:    jmp    209 <nft_chain_route_init>
         :
         : 413 0000000000000209 <nft_chain_route_init>:
         : 414 nft_chain_route_init():
    0.00 :   209:    call   20e <nft_chain_route_init+0x5>
    0.00 :   20e:    mov    $0x0,%rdi
    0.00 :   215:    call   21a <nft_chain_route_init+0x11>
    0.00 :   21a:    mov    $0x0,%rdi
    0.00 :   221:    call   226 <nft_chain_route_init+0x1d>
    0.09 :   226:    mov    $0x0,%rdi
   15.87 :   22d:    jmp    232 <__kstrtab_nf_tables_trans_destroy_flush_work+0x4> // [nf_tables][22d]

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   66.13 [nf_conntrack][332d]
   23.06 [nf_conntrack][3364]
    2.74 [nf_conntrack][32fe]
    2.68 [nf_conntrack][3382]
    0.90 [nf_conntrack][347e]
    0.89 [nf_conntrack][32c0]
    0.88 [nf_conntrack][3302]
    0.87 [nf_conntrack][34f2]
    0.79 [nf_conntrack][3448]
    0.56 [nf_conntrack][3504]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (118 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000032c0 <__nf_conntrack_find_get>:
         : 6    __nf_conntrack_find_get():
    0.89 :   32c0:   call   32c5 <__nf_conntrack_find_get+0x5> // [nf_conntrack][32c0]
    0.00 :   32c5:   push   %r15
    0.00 :   32c7:   mov    %rdx,%r15
    0.00 :   32ca:   push   %r14
    0.00 :   32cc:   mov    %rsi,%r14
    0.00 :   32cf:   push   %r13
    0.00 :   32d1:   mov    %ecx,%r13d
    0.00 :   32d4:   push   %r12
    0.00 :   32d6:   push   %rbp
    0.00 :   32d7:   push   %rbx
    0.00 :   32d8:   sub    $0x10,%rsp
    0.00 :   32dc:   mov    %rdi,0x8(%rsp)
    0.00 :   32e1:   call   32e6 <__nf_conntrack_find_get+0x26>
    0.00 :   32e6:   mov    %r13d,%eax
    0.00 :   32e9:   mov    $0xfffffffffffffff0,%r13
    0.00 :   32f0:   mov    %rax,(%rsp)
    0.00 :   32f4:   jmp    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   32f6:   pause
    0.00 :   32f8:   mov    0x0(%rip),%eax        # 32fe <__nf_conntrack_find_get+0x3e>
    2.74 :   32fe:   test   $0x1,%al // [nf_conntrack][32fe]
    0.00 :   3300:   jne    32f6 <__nf_conntrack_find_get+0x36>
    0.88 :   3302:   mov    0x0(%rip),%r12d        # 3309 <__nf_conntrack_find_get+0x49> // [nf_conntrack][3302]
    0.00 :   3309:   mov    0x0(%rip),%rsi        # 3310 <__nf_conntrack_find_get+0x50>
    0.00 :   3310:   mov    0x0(%rip),%ecx        # 3316 <__nf_conntrack_find_get+0x56>
    0.00 :   3316:   cmp    %eax,%ecx
    0.00 :   3318:   jne    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   331a:   mov    (%rsp),%rax
    0.00 :   331e:   imul   %rax,%r12
    0.00 :   3322:   shr    $0x20,%r12
    0.00 :   3326:   lea    (%rsi,%r12,8),%rax
    0.00 :   332a:   mov    (%rax),%rbx
   66.13 :   332d:   test   $0x1,%bl // [nf_conntrack][332d]
    0.00 :   3330:   je     3360 <__nf_conntrack_find_get+0xa0>
    0.00 :   3332:   jmp    33c6 <__nf_conntrack_find_get+0x106>
    0.00 :   3337:   mov    (%r15),%rax
    0.00 :   333a:   mov    0x8(%r15),%rsi
    0.00 :   333e:   xor    0x10(%rbx),%rax
    0.00 :   3342:   xor    0x18(%rbx),%rsi
    0.00 :   3346:   or     %rsi,%rax
    0.00 :   3349:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   334b:   mov    0x20(%rbx),%eax
    0.00 :   334e:   cmp    %eax,0x10(%r15)
    0.00 :   3352:   je     33e7 <__nf_conntrack_find_get+0x127>
    0.00 :   3358:   mov    (%rbx),%rbx
    0.00 :   335b:   test   $0x1,%bl
    0.00 :   335e:   jne    33c6 <__nf_conntrack_find_get+0x106>
    0.00 :   3360:   movzbl 0x37(%rbx),%esi
   23.06 :   3364:   mov    %r13,%rbp // [nf_conntrack][3364]
    0.00 :   3367:   lea    0x0(,%rsi,8),%rax
    0.00 :   336f:   mov    %rsi,%rcx
    0.00 :   3372:   sub    %rsi,%rax
    0.00 :   3375:   shl    $0x3,%rax
    0.00 :   3379:   sub    %rax,%rbp
    0.00 :   337c:   add    %rbx,%rbp
    0.00 :   337f:   mov    0x8(%rbp),%eax
    2.68 :   3382:   mov    0x0(%rip),%rsi        # 3389 <__nf_conntrack_find_get+0xc9> // [nf_conntrack][3382]
    0.00 :   3389:   sub    %esi,%eax
    0.00 :   338b:   test   %eax,%eax
    0.00 :   338d:   jg     3337 <__nf_conntrack_find_get+0x77>
    0.00 :   338f:   mov    0x0(%rbp),%ecx
    0.00 :   3392:   test   %ecx,%ecx
    0.00 :   3394:   je     3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3396:   lea    0x1(%rcx),%esi
    0.00 :   3399:   mov    %ecx,%eax
    0.00 :   339b:   lock cmpxchg %esi,0x0(%rbp)
    0.00 :   33a0:   jne    352f <__nf_conntrack_find_get+0x26f>
    0.00 :   33a6:   test   %ecx,%ecx
    0.00 :   33a8:   js     3520 <__nf_conntrack_find_get+0x260>
    0.00 :   33ae:   test   %esi,%esi
    0.00 :   33b0:   js     3520 <__nf_conntrack_find_get+0x260>
    0.00 :   33b6:   mov    %rbp,%rdi
    0.00 :   33b9:   call   18e0 <nf_ct_gc_expired.part.0>
    0.00 :   33be:   mov    (%rbx),%rbx
    0.00 :   33c1:   test   $0x1,%bl
    0.00 :   33c4:   je     3360 <__nf_conntrack_find_get+0xa0>
    0.00 :   33c6:   shr    %rbx
    0.00 :   33c9:   cmp    %rbx,%r12
    0.00 :   33cc:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   33d2:   mov    0x8(%rsp),%rax
    0.00 :   33d7:   mov    0xb40(%rax),%rax
    0.00 :   33de:   incl   %gs:0x2c(%rax)
    0.00 :   33e2:   jmp    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   33e7:   mov    0x14(%r15),%rax
    0.00 :   33eb:   mov    0x1c(%r15),%rsi
    0.00 :   33ef:   xor    0x24(%rbx),%rax
    0.00 :   33f3:   xor    0x2c(%rbx),%rsi
    0.00 :   33f7:   or     %rsi,%rax
    0.00 :   33fa:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3400:   mov    0x24(%r15),%eax
    0.00 :   3404:   xor    0x34(%rbx),%eax
    0.00 :   3407:   test   $0xffffff,%eax
    0.00 :   340c:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3412:   mov    $0x1,%eax
    0.00 :   3417:   movzbl 0xf(%rbp),%esi
    0.00 :   341b:   shl    %cl,%eax
    0.00 :   341d:   movzbl 0x3(%r14),%ecx
    0.00 :   3422:   and    %eax,%ecx
    0.00 :   3424:   test   %eax,%esi
    0.00 :   3426:   jne    3500 <__nf_conntrack_find_get+0x240>
    0.00 :   342c:   test   %ecx,%ecx
    0.00 :   342e:   jne    351c <__nf_conntrack_find_get+0x25c>
    0.00 :   3434:   mov    0x80(%rbp),%rax
    0.00 :   343b:   test   $0x8,%al
    0.00 :   343d:   je     3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3443:   mov    0x8(%rsp),%rax
    0.79 :   3448:   cmp    0x88(%rbp),%rax // [nf_conntrack][3448]
    0.00 :   344f:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3455:   test   %rbx,%rbx
    0.00 :   3458:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   345e:   movzbl 0x37(%rbx),%edx
    0.00 :   3462:   lea    0x0(,%rdx,8),%rax
    0.00 :   346a:   sub    %rdx,%rax
    0.00 :   346d:   mov    %rbx,%rdx
    0.00 :   3470:   shl    $0x3,%rax
    0.00 :   3474:   sub    %rax,%rdx
    0.00 :   3477:   lea    -0x10(%rdx),%rbp
    0.00 :   347b:   mov    0x0(%rbp),%edx
    0.90 :   347e:   test   %edx,%edx // [nf_conntrack][347e]
    0.00 :   3480:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   3482:   lea    0x1(%rdx),%ecx
    0.00 :   3485:   mov    %edx,%eax
    0.00 :   3487:   lock cmpxchg %ecx,0x0(%rbp)
    0.00 :   348c:   jne    35f1 <__nf_conntrack_find_get+0x331>
    0.00 :   3492:   test   %edx,%edx
    0.00 :   3494:   js     35de <__nf_conntrack_find_get+0x31e>
    0.00 :   349a:   test   %ecx,%ecx
    0.00 :   349c:   js     35de <__nf_conntrack_find_get+0x31e>
    0.00 :   34a2:   mov    (%r15),%rax
    0.00 :   34a5:   mov    0x8(%r15),%rdx
    0.00 :   34a9:   xor    0x10(%rbx),%rax
    0.00 :   34ad:   xor    0x18(%rbx),%rdx
    0.00 :   34b1:   or     %rdx,%rax
    0.00 :   34b4:   movzbl 0x37(%rbx),%ecx
    0.00 :   34b8:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   34ba:   mov    0x20(%rbx),%eax
    0.00 :   34bd:   cmp    %eax,0x10(%r15)
    0.00 :   34c1:   je     3536 <__nf_conntrack_find_get+0x276>
    0.00 :   34c3:   test   %rbp,%rbp
    0.00 :   34c6:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   34c8:   mov    $0xffffffff,%eax
    0.00 :   34cd:   lock xadd %eax,0x0(%rbp)
    0.00 :   34d2:   cmp    $0x1,%eax
    0.00 :   34d5:   je     360a <__nf_conntrack_find_get+0x34a>
    0.00 :   34db:   test   %eax,%eax
    0.00 :   34dd:   jle    35f8 <__nf_conntrack_find_get+0x338>
    0.00 :   34e3:   xor    %ebx,%ebx
    0.00 :   34e5:   call   34ea <__nf_conntrack_find_get+0x22a>
    0.50 :   34ea:   mov    %rbx,%rax
    0.00 :   34ed:   add    $0x10,%rsp
    0.00 :   34f1:   pop    %rbx
    0.87 :   34f2:   pop    %rbp // [nf_conntrack][34f2]
    0.00 :   34f3:   pop    %r12
    0.00 :   34f5:   pop    %r13
    0.00 :   34f7:   pop    %r14
    0.00 :   34f9:   pop    %r15
    0.00 :   34fb:   jmp    3500 <__nf_conntrack_find_get+0x240>
    0.00 :   3500:   movzwl 0xc(%rbp),%esi
    0.56 :   3504:   xor    %eax,%eax // [nf_conntrack][3504]
    0.00 :   3506:   test   %ecx,%ecx
    0.00 :   3508:   je     350e <__nf_conntrack_find_get+0x24e>
    0.00 :   350a:   movzwl (%r14),%eax
    0.00 :   350e:   cmp    %si,%ax
    0.00 :   3511:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3517:   jmp    3434 <__nf_conntrack_find_get+0x174>
    0.00 :   351c:   xor    %esi,%esi
    0.00 :   351e:   jmp    350a <__nf_conntrack_find_get+0x24a>
    0.00 :   3520:   xor    %esi,%esi
    0.00 :   3522:   mov    %rbp,%rdi
    0.00 :   3525:   call   352a <__nf_conntrack_find_get+0x26a>
    0.00 :   352a:   jmp    33b6 <__nf_conntrack_find_get+0xf6>
    0.00 :   352f:   mov    %eax,%ecx
    0.00 :   3531:   jmp    3392 <__nf_conntrack_find_get+0xd2>
    0.00 :   3536:   mov    0x14(%r15),%rax
    0.00 :   353a:   mov    0x1c(%r15),%rdx
    0.00 :   353e:   xor    0x24(%rbx),%rax
    0.00 :   3542:   xor    0x2c(%rbx),%rdx
    0.00 :   3546:   or     %rdx,%rax
    0.00 :   3549:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   354f:   mov    0x24(%r15),%eax
    0.00 :   3553:   xor    0x34(%rbx),%eax
    0.00 :   3556:   test   $0xffffff,%eax
    0.00 :   355b:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   3561:   movzbl %cl,%edx
    0.00 :   3564:   mov    %rbx,%rsi
    0.00 :   3567:   lea    0x0(,%rdx,8),%rax
    0.00 :   356f:   sub    %rdx,%rax
    0.00 :   3572:   movzbl 0x3(%r14),%edx
    0.00 :   3577:   shl    $0x3,%rax
    0.00 :   357b:   sub    %rax,%rsi
    0.00 :   357e:   mov    $0x1,%eax
    0.00 :   3583:   shl    %cl,%eax
    0.00 :   3585:   movzbl -0x1(%rsi),%ecx
    0.00 :   3589:   lea    -0x10(%rsi),%rdi
    0.00 :   358d:   and    %eax,%edx
    0.00 :   358f:   test   %eax,%ecx
    0.00 :   3591:   jne    35bd <__nf_conntrack_find_get+0x2fd>
    0.00 :   3593:   test   %edx,%edx
    0.00 :   3595:   jne    35ed <__nf_conntrack_find_get+0x32d>
    0.00 :   3597:   mov    0x80(%rdi),%rax
    0.00 :   359e:   test   $0x8,%al
    0.00 :   35a0:   je     34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   35a6:   mov    0x8(%rsp),%rax
    0.00 :   35ab:   cmp    0x88(%rdi),%rax
    0.00 :   35b2:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   35b8:   jmp    34e5 <__nf_conntrack_find_get+0x225>
    0.00 :   35bd:   movzwl 0xc(%rdi),%ecx
    0.00 :   35c1:   xor    %eax,%eax
    0.00 :   35c3:   test   %edx,%edx
    0.00 :   35c5:   je     35cb <__nf_conntrack_find_get+0x30b>
    0.00 :   35c7:   movzwl (%r14),%eax
    0.00 :   35cb:   cmp    %cx,%ax
    0.00 :   35ce:   je     3597 <__nf_conntrack_find_get+0x2d7>
    0.00 :   35d0:   test   %rbp,%rbp
    0.00 :   35d3:   jne    34c8 <__nf_conntrack_find_get+0x208>
    0.00 :   35d9:   jmp    34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   35de:   xor    %esi,%esi
    0.00 :   35e0:   mov    %rbp,%rdi
    0.00 :   35e3:   call   35e8 <__nf_conntrack_find_get+0x328>
    0.00 :   35e8:   jmp    34a2 <__nf_conntrack_find_get+0x1e2>
    0.00 :   35ed:   xor    %ecx,%ecx
    0.00 :   35ef:   jmp    35c7 <__nf_conntrack_find_get+0x307>
    0.00 :   35f1:   mov    %eax,%edx
    0.00 :   35f3:   jmp    347e <__nf_conntrack_find_get+0x1be>
    0.00 :   35f8:   mov    $0x3,%esi
    0.00 :   35fd:   mov    %rbp,%rdi
    0.00 :   3600:   call   3605 <__nf_conntrack_find_get+0x345>
    0.00 :   3605:   jmp    34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   360a:   mov    %rbp,%rdi
    0.00 :   360d:   call   3612 <__nf_conntrack_find_get+0x352>
    0.00 :   3612:   jmp    34e3 <__nf_conntrack_find_get+0x223>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

    6.79 [nf_conntrack][948a]
    5.80 [nf_conntrack][93d0]
    5.27 [nf_conntrack][9539]
    5.21 [nf_conntrack][949e]
    3.57 [nf_conntrack][9734]
    3.15 [nf_conntrack][9c00]
    2.97 [nf_conntrack][99bb]
    2.85 [nf_conntrack][9977]
    2.73 [nf_conntrack][9e55]
    2.52 [nf_conntrack][9d84]
    2.45 [nf_conntrack][9580]
    2.34 [nf_conntrack][9614]
    2.24 [nf_conntrack][96be]
    2.14 [nf_conntrack][9ebd]
    2.03 [nf_conntrack][94cb]
    1.93 [nf_conntrack][a3ca]
    1.85 [nf_conntrack][9600]
    1.71 [nf_conntrack][a752]
    1.67 [nf_conntrack][9adc]
    1.45 [nf_conntrack][9e85]
    1.35 [nf_conntrack][a73d]
    1.35 [nf_conntrack][a744]
    1.33 [nf_conntrack][9f45]
    1.31 [nf_conntrack][9605]
    1.29 [nf_conntrack][a18e]
    1.28 [nf_conntrack][93fc]
    1.27 [nf_conntrack][9b20]
    1.26 [nf_conntrack][960f]
    1.25 [nf_conntrack][9e2a]
    1.22 [nf_conntrack][9f2c]
    1.22 [nf_conntrack][9584]
    1.20 [nf_conntrack][9a8d]
    1.18 [nf_conntrack][972c]
    1.14 [nf_conntrack][9f3d]
    1.12 [nf_conntrack][9462]
    1.12 [nf_conntrack][9e44]
    1.08 [nf_conntrack][9e2c]
    1.06 [nf_conntrack][a193]
    1.05 [nf_conntrack][9be3]
    1.04 [nf_conntrack][9bed]
    1.04 [nf_conntrack][a780]
    1.02 [nf_conntrack][9b9a]
    0.98 [nf_conntrack][947f]
    0.98 [nf_conntrack][9ef2]
    0.94 [nf_conntrack][9e6f]
    0.94 [nf_conntrack][9aa4]
    0.93 [nf_conntrack][9c54]
    0.92 [nf_conntrack][9dde]
    0.91 [nf_conntrack][a84c]
    0.84 [nf_conntrack][9a95]
    0.80 [nf_conntrack][9b48]
    0.79 [nf_conntrack][9d94]
    0.72 [nf_conntrack][93d7]
    0.68 [nf_conntrack][9ae1]
    0.66 [nf_conntrack][9da4]
    0.62 [nf_conntrack][9df1]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (97 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000093d0 <nf_conntrack_tcp_packet>:
         : 6    nf_conntrack_tcp_packet():
    5.80 :   93d0:   call   93d5 <nf_conntrack_tcp_packet+0x5> // [nf_conntrack][93d0]
    0.00 :   93d5:   push   %r15
    0.72 :   93d7:   push   %r14 // [nf_conntrack][93d7]
    0.00 :   93d9:   mov    %edx,%r14d
    0.00 :   93dc:   push   %r13
    0.00 :   93de:   mov    %rsi,%r13
    0.00 :   93e1:   push   %r12
    0.00 :   93e3:   push   %rbp
    0.00 :   93e4:   push   %rbx
    0.00 :   93e5:   mov    %rdi,%rbx
    0.00 :   93e8:   sub    $0xc0,%rsp
    0.00 :   93ef:   mov    0x70(%rsi),%edx
    0.00 :   93f2:   mov    0xd0(%rsi),%rbp
    0.00 :   93f9:   mov    %ecx,(%rsp)
    1.28 :   93fc:   mov    %r8,0x10(%rsp) // [nf_conntrack][93fc]
    0.00 :   9401:   mov    %gs:0x28,%rax
    0.00 :   940a:   mov    %rax,0xb8(%rsp)
    0.00 :   9412:   mov    0x88(%rdi),%rax
    0.00 :   9419:   movl   $0x0,0x78(%rsp)
    0.00 :   9421:   movq   $0x0,0x68(%rsp)
    0.00 :   942a:   movq   $0x0,0x70(%rsp)
    0.00 :   9433:   mov    %rax,0x30(%rsp)
    0.00 :   9438:   mov    %edx,%eax
    0.00 :   943a:   sub    0x74(%rsi),%eax
    0.00 :   943d:   sub    %r14d,%eax
    0.00 :   9440:   cmp    $0x13,%eax
    0.00 :   9443:   jle    a427 <nf_conntrack_tcp_packet+0x1057>
    0.00 :   9449:   movslq %r14d,%rax
    0.00 :   944c:   add    %rax,%rbp
    0.00 :   944f:   je     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   9455:   movzbl 0xc(%rbp),%eax
    0.00 :   9459:   sub    %r14d,%edx
    0.00 :   945c:   shr    $0x4,%al
    0.00 :   945f:   movzbl %al,%eax
    1.12 :   9462:   shl    $0x2,%eax // [nf_conntrack][9462]
    0.00 :   9465:   cmp    %eax,%edx
    0.00 :   9467:   setb   %r12b
    0.00 :   946b:   cmp    $0x13,%eax
    0.00 :   946e:   setle  %al
    0.00 :   9471:   or     %al,%r12b
    0.00 :   9474:   jne    947a <nf_conntrack_tcp_packet+0xaa>
    0.00 :   947a:   mov    0x10(%rsp),%rsi
    0.98 :   947f:   mov    0x20(%rsi),%rax // [nf_conntrack][947f]
    0.00 :   9483:   cmpb   $0x0,0xb3e(%rax)
    6.79 :   948a:   jne    96a6 <nf_conntrack_tcp_packet+0x2d6> // [nf_conntrack][948a]
    0.00 :   9490:   movzbl 0xd(%rbp),%eax
    0.00 :   9494:   and    $0x37,%eax
    0.00 :   9497:   cmpb   $0x0,0x0(%rax)
    5.21 :   949e:   je     94a4 <nf_conntrack_tcp_packet+0xd4> // [nf_conntrack][949e]
    0.00 :   94a4:   mov    0x80(%rbx),%rax
    0.00 :   94ab:   test   $0x8,%al
    0.00 :   94ad:   je     96d4 <nf_conntrack_tcp_packet+0x304>
    0.00 :   94b3:   lea    0x4(%rbx),%rax
    0.00 :   94b7:   mov    %rax,%rdi
    0.00 :   94ba:   mov    %rax,0x28(%rsp)
    0.00 :   94bf:   call   94c4 <nf_conntrack_tcp_packet+0xf4>
    0.00 :   94c4:   movzbl 0xe0(%rbx),%eax
    2.03 :   94cb:   cmpl   $0x2,(%rsp) // [nf_conntrack][94cb]
    0.00 :   94cf:   seta   0x5d(%rsp)
    0.00 :   94d4:   mov    %eax,0x4(%rsp)
    0.00 :   94d8:   mov    %eax,%ecx
    0.00 :   94da:   seta   %al
    0.00 :   94dd:   movzbl %al,%eax
    0.00 :   94e0:   mov    %eax,0x24(%rsp)
    0.30 :   94e4:   movzbl 0xd(%rbp),%eax
    0.00 :   94e8:   mov    %al,0x8(%rsp)
    0.00 :   94ec:   test   $0x4,%al
    0.00 :   94ee:   jne    9f9c <nf_conntrack_tcp_packet+0xbcc>
    0.00 :   94f4:   movzbl 0x8(%rsp),%eax
    0.00 :   94f9:   testb  $0x2,0x8(%rsp)
    0.00 :   94fe:   jne    96f2 <nf_conntrack_tcp_packet+0x322>
    0.00 :   9504:   mov    0x4(%rsp),%r15d
    0.00 :   9509:   mov    0x24(%rsp),%r10d
    0.00 :   950e:   test   $0x1,%al
    0.00 :   9510:   jne    a3ff <nf_conntrack_tcp_packet+0x102f>
    0.00 :   9516:   test   $0x10,%al
    0.00 :   9518:   mov    %r10,%rax
    0.00 :   951b:   je     a147 <nf_conntrack_tcp_packet+0xd77>
    0.00 :   9521:   shl    $0x4,%rax
    0.00 :   9525:   movl   $0x3,0x1c(%rsp)
    0.00 :   952d:   sub    %r10,%rax
    0.00 :   9530:   movzbl 0x0(%r15,%rax,4),%eax
    5.27 :   9539:   cmp    $0x8,%al // [nf_conntrack][9539]
    0.00 :   953b:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   9541:   xor    %r9d,%r9d
    0.00 :   9544:   cmpl   $0x2,(%rsp)
    0.00 :   9548:   mov    0x4(%rbp),%eax
    0.00 :   954b:   movl   $0x8,0x20(%rsp)
    0.00 :   9553:   setbe  %r8b
    0.00 :   9557:   setbe  %r9b
    0.00 :   955b:   movzbl %r8b,%r8d
    0.00 :   955f:   mov    %eax,0x58(%rsp)
    0.00 :   9563:   bswap  %eax
    0.00 :   9565:   mov    %eax,0x18(%rsp)
    0.00 :   9569:   lea    (%r8,%r8,4),%rax
    0.00 :   956d:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   9575:   cmpl   $0x3,(%rsp)
    0.00 :   9579:   movzbl 0xc(%rbp),%edi
    0.00 :   957d:   sbb    %r12,%r12
    2.45 :   9580:   mov    0x70(%r13),%ecx // [nf_conntrack][9580]
    1.22 :   9584:   movzbl 0x8(%rsp),%edx // [nf_conntrack][9584]
    0.00 :   9589:   not    %r12
    0.00 :   958c:   shr    $0x4,%dil
    0.00 :   9590:   mov    0x8(%rbp),%r11d
    0.00 :   9594:   and    $0x14,%r12d
    0.00 :   9598:   movzbl %dil,%edi
    0.00 :   959c:   lea    0xb8(%rbx,%r12,1),%rax
    0.00 :   95a4:   shl    $0x2,%edi
    0.00 :   95a7:   bswap  %r11d
    0.00 :   95aa:   mov    %rax,0x38(%rsp)
    0.00 :   95af:   movzwl 0xe(%rbp),%eax
    0.00 :   95b3:   rol    $0x8,%ax
    0.00 :   95b7:   mov    %ax,0x5e(%rsp)
    0.00 :   95bc:   movzwl %ax,%eax
    0.00 :   95bf:   mov    %eax,0x54(%rsp)
    0.00 :   95c3:   mov    %ecx,%eax
    0.00 :   95c5:   sub    %r14d,%eax
    0.00 :   95c8:   sub    %edi,%eax
    0.00 :   95ca:   mov    0x18(%rsp),%edi
    0.00 :   95ce:   add    %edi,%eax
    0.00 :   95d0:   mov    %edx,%edi
    0.00 :   95d2:   shr    %dl
    0.00 :   95d4:   and    $0x1,%edi
    0.00 :   95d7:   and    $0x1,%edx
    0.00 :   95da:   add    %edi,%eax
    0.00 :   95dc:   add    %edx,%eax
    0.00 :   95de:   and    $0x2,%esi
    0.00 :   95e1:   mov    %eax,0x8(%rsp)
    0.00 :   95e5:   jne    9ee6 <nf_conntrack_tcp_packet+0xb16>
    0.00 :   95eb:   mov    %r11d,%r15d
    0.00 :   95ee:   lea    -0x1(%r11),%edx
    0.00 :   95f2:   mov    %rbx,%rdi
    0.00 :   95f5:   add    %rbx,%r12
    0.00 :   95f8:   mov    %r9d,%esi
    0.00 :   95fb:   mov    %r8,0x48(%rsp)
    1.85 :   9600:   mov    %r10,0x40(%rsp) // [nf_conntrack][9600]
    1.31 :   9605:   mov    %r11d,0x50(%rsp) // [nf_conntrack][9605]
    0.00 :   960a:   call   960f <nf_conntrack_tcp_packet+0x23f>
    1.26 :   960f:   mov    0x50(%rsp),%r11d // [nf_conntrack][960f]
    2.34 :   9614:   mov    0x40(%rsp),%r10 // [nf_conntrack][9614]
    0.00 :   9619:   mov    0xc0(%r12),%edi
    0.00 :   9621:   sub    %eax,%r15d
    0.00 :   9624:   mov    0x48(%rsp),%r8
    0.00 :   9629:   test   %edi,%edi
    0.00 :   962b:   jne    9973 <nf_conntrack_tcp_packet+0x5a3>
    0.00 :   9631:   testb  $0x2,0xd(%rbp)
    0.00 :   9635:   jne    9cd2 <nf_conntrack_tcp_packet+0x902>
    0.00 :   963b:   mov    0x8(%rsp),%edi
    0.00 :   963f:   lea    (%r10,%r10,4),%rdx
    0.00 :   9643:   mov    %edi,0xb8(%r12)
    0.00 :   964b:   movzbl 0xc8(%rbx,%rdx,4),%ecx
    0.00 :   9653:   mov    0x54(%rsp),%edx
    0.00 :   9657:   shl    %cl,%edx
    0.00 :   9659:   mov    $0x1,%ecx
    0.00 :   965e:   test   %edx,%edx
    0.00 :   9660:   cmove  %ecx,%edx
    0.00 :   9663:   lea    (%r8,%r8,4),%rcx
    0.00 :   9667:   lea    (%rbx,%rcx,4),%rcx
    0.00 :   966b:   mov    %edx,0xc0(%r12)
    0.00 :   9673:   add    %edi,%edx
    0.00 :   9675:   mov    %edx,0xbc(%r12)
    0.00 :   967d:   mov    0xc0(%rcx),%esi
    0.00 :   9683:   test   %esi,%esi
    0.00 :   9685:   je     a16c <nf_conntrack_tcp_packet+0xd9c>
    0.00 :   968b:   mov    0xb8(%rcx),%esi
    0.00 :   9691:   lea    0x1(%rsi),%edi
    0.00 :   9694:   cmp    %edi,%r15d
    0.00 :   9697:   je     a722 <nf_conntrack_tcp_packet+0x1352>
    0.00 :   969d:   movzbl 0xd(%rbp),%ecx
    0.00 :   96a1:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    0.00 :   96a6:   cmpb   $0x0,(%rsi)
    0.00 :   96a9:   jne    9490 <nf_conntrack_tcp_packet+0xc0>
    0.00 :   96af:   movzbl 0x1(%rsi),%r8d
    0.00 :   96b4:   mov    $0x6,%ecx
    0.00 :   96b9:   xor    %esi,%esi
    0.00 :   96bb:   mov    %r14d,%edx
    2.24 :   96be:   mov    %r13,%rdi // [nf_conntrack][96be]
    0.00 :   96c1:   call   96c6 <nf_conntrack_tcp_packet+0x2f6>
    0.00 :   96c6:   test   %ax,%ax
    0.00 :   96c9:   je     9490 <nf_conntrack_tcp_packet+0xc0>
    0.00 :   96cf:   jmp    96d4 <nf_conntrack_tcp_packet+0x304>
    0.00 :   96d4:   mov    %rbp,%rcx
    0.00 :   96d7:   mov    %r14d,%edx
    0.00 :   96da:   mov    %r13,%rsi
    0.00 :   96dd:   mov    %rbx,%rdi
    0.00 :   96e0:   call   9200 <tcp_new>
    0.00 :   96e5:   test   %al,%al
    0.00 :   96e7:   jne    94b3 <nf_conntrack_tcp_packet+0xe3>
    0.00 :   96ed:   jmp    a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   96f2:   mov    0x24(%rsp),%r10d
    0.00 :   96f7:   shr    $0x4,%al
    0.00 :   96fa:   mov    0x4(%rsp),%r15d
    0.00 :   96ff:   and    $0x1,%eax
    0.00 :   9702:   mov    %r10,%rcx
    0.00 :   9705:   mov    %eax,0x1c(%rsp)
    0.00 :   9709:   lea    (%rax,%rax,4),%rax
    0.00 :   970d:   shl    $0x4,%rcx
    0.00 :   9711:   add    %rax,%rax
    0.00 :   9714:   sub    %r10,%rcx
    0.00 :   9717:   lea    0x0(%rax,%rcx,4),%rax
    0.00 :   971f:   movzbl (%rax,%r15,1),%eax
    0.00 :   9724:   cmp    $0x8,%al
    0.00 :   9726:   je     9541 <nf_conntrack_tcp_packet+0x171>
    1.18 :   972c:   cmp    $0x8,%al // [nf_conntrack][972c]
    0.00 :   972e:   ja     97b6 <nf_conntrack_tcp_packet+0x3e6>
    3.57 :   9734:   cmp    $0x2,%al // [nf_conntrack][9734]
    0.00 :   9736:   je     a2bf <nf_conntrack_tcp_packet+0xeef>
    0.00 :   973c:   cmp    $0x7,%al
    0.00 :   973e:   jne    98d3 <nf_conntrack_tcp_packet+0x503>
    0.00 :   9744:   cmpl   $0x6,0x4(%rsp)
    0.00 :   9749:   jne    a213 <nf_conntrack_tcp_packet+0xe43>
    0.00 :   974f:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   9754:   jne    a213 <nf_conntrack_tcp_packet+0xe43>
    0.00 :   975a:   movzbl 0x5d(%rsp),%eax
    0.00 :   975f:   cmp    %al,0xe1(%rbx)
    0.00 :   9765:   je     a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   976b:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   9772:   jne    a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   9778:   movzbl 0xf3(%rbx),%eax
    0.00 :   977f:   test   $0x40,%al
    0.00 :   9781:   je     a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   9787:   and    $0xffffffbf,%eax
    0.00 :   978a:   mov    0x28(%rsp),%rdi
    0.00 :   978f:   mov    %al,0xf3(%rbx)
    0.00 :   9795:   call   979a <nf_conntrack_tcp_packet+0x3ca>
    0.00 :   979a:   mov    0x10(%rsp),%rdx
    0.00 :   979f:   mov    %rbx,%rsi
    0.00 :   97a2:   mov    %r13,%rdi
    0.00 :   97a5:   mov    $0x0,%rcx
    0.00 :   97ac:   call   97b1 <nf_conntrack_tcp_packet+0x3e1>
    0.00 :   97b1:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   97b6:   cmp    $0xa,%al
    0.00 :   97b8:   je     a32c <nf_conntrack_tcp_packet+0xf5c>
    0.00 :   97be:   cmpl   $0x2,(%rsp)
    0.00 :   97c2:   setbe  %cl
    0.00 :   97c5:   cmp    $0xb,%al
    0.00 :   97c7:   jne    9923 <nf_conntrack_tcp_packet+0x553>
    0.00 :   97cd:   cmpl   $0x1,0x1c(%rsp)
    0.00 :   97d2:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97d8:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   97df:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97e5:   movzbl 0xe1(%rbx),%edx
    0.00 :   97ec:   cmp    0x5d(%rsp),%dl
    0.00 :   97f0:   je     a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97f6:   mov    0x8(%rbp),%eax
    0.00 :   97f9:   bswap  %eax
    0.00 :   97fb:   cmp    0xec(%rbx),%eax
    0.00 :   9801:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   9807:   lea    (%rdx,%rdx,4),%rdx
    0.00 :   980b:   mov    $0x1,%edi
    0.00 :   9810:   mov    %rcx,%r8
    0.00 :   9813:   movl   $0x1,0x4(%rsp)
    0.00 :   981b:   lea    0x0(,%rdx,4),%r9
    0.00 :   9823:   movl   $0x2,0x20(%rsp)
    0.00 :   982b:   lea    (%rbx,%r9,1),%rsi
    0.00 :   982f:   mov    %eax,0xb8(%rsi)
    0.00 :   9835:   mov    %eax,0xbc(%rsi)
    0.00 :   983b:   movzwl 0xf0(%rbx),%eax
    0.00 :   9842:   test   %ax,%ax
    0.00 :   9845:   cmove  %edi,%eax
    0.00 :   9848:   and    $0x1,%r8d
    0.00 :   984c:   mov    %eax,0xc0(%rsi)
    0.00 :   9852:   movzwl 0x0(%rip),%esi        # 9859 <nf_conntrack_tcp_packet+0x489>
    0.00 :   9859:   movzbl 0xf3(%rbx),%eax
    0.00 :   9860:   mov    0xf2(%rbx),%sil
    0.00 :   9867:   and    $0xffffffbf,%eax
    0.00 :   986a:   mov    %esi,%edx
    0.00 :   986c:   mov    %al,0xf3(%rbx)
    0.00 :   9872:   mov    %al,%dh
    0.00 :   9874:   lea    (%r10,%r10,4),%rax
    0.00 :   9878:   mov    %dx,0xc8(%rbx,%r9,1)
    0.00 :   9881:   lea    (%rbx,%rax,4),%rax
    0.00 :   9885:   movzbl %cl,%r9d
    0.00 :   9889:   andb   $0x8,0xc9(%rax)
    0.00 :   9890:   movq   $0x0,0xb8(%rax)
    0.00 :   989b:   movq   $0x0,0xc0(%rax)
    0.00 :   98a6:   movb   $0x0,0xc8(%rax)
    0.00 :   98ad:   movzbl 0xd(%rbp),%eax
    0.00 :   98b1:   mov    %al,0x8(%rsp)
    0.00 :   98b5:   mov    0x4(%rbp),%eax
    0.00 :   98b8:   mov    %eax,0x58(%rsp)
    0.00 :   98bc:   bswap  %eax
    0.00 :   98be:   mov    %eax,0x18(%rsp)
    0.00 :   98c2:   lea    (%r8,%r8,4),%rax
    0.00 :   98c6:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   98ce:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   98d3:   cmp    $0x1,%al
    0.00 :   98d5:   jne    a3ca <nf_conntrack_tcp_packet+0xffa>
    0.00 :   98db:   cmpl   $0x2,(%rsp)
    0.00 :   98df:   setbe  %r8b
    0.00 :   98e3:   setbe  %r9b
    0.00 :   98e7:   setbe  %cl
    0.00 :   98ea:   cmpl   $0x6,0x4(%rsp)
    0.00 :   98ef:   movzbl %r8b,%r8d
    0.00 :   98f3:   movzbl %r9b,%r9d
    0.00 :   98f7:   lea    (%r8,%r8,4),%rax
    0.00 :   98fb:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   9903:   ja     a1c2 <nf_conntrack_tcp_packet+0xdf2>
    0.00 :   9909:   mov    0x4(%rbp),%eax
    0.00 :   990c:   movl   $0x1,0x20(%rsp)
    0.00 :   9914:   mov    %eax,0x58(%rsp)
    0.00 :   9918:   bswap  %eax
    0.00 :   991a:   mov    %eax,0x18(%rsp)
    0.00 :   991e:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   9923:   cmp    $0x9,%al
    0.00 :   9925:   jne    a3ca <nf_conntrack_tcp_packet+0xffa>
    0.00 :   992b:   orb    $0x80,0xf3(%rbx)
    0.00 :   9932:   movzbl 0xd(%rbp),%eax
    0.00 :   9936:   xor    %r9d,%r9d
    0.00 :   9939:   cmpl   $0x2,(%rsp)
    0.00 :   993d:   movl   $0x9,0x20(%rsp)
    0.00 :   9945:   mov    %al,0x8(%rsp)
    0.00 :   9949:   setbe  %r8b
    0.00 :   994d:   mov    0x4(%rbp),%eax
    0.00 :   9950:   setbe  %r9b
    0.00 :   9954:   movzbl %r8b,%r8d
    0.00 :   9958:   mov    %eax,0x58(%rsp)
    0.00 :   995c:   bswap  %eax
    0.00 :   995e:   mov    %eax,0x18(%rsp)
    0.00 :   9962:   lea    (%r8,%r8,4),%rax
    0.00 :   9966:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   996e:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   9973:   movzbl 0xd(%rbp),%ecx
    2.85 :   9977:   test   $0x2,%cl // [nf_conntrack][9977]
    0.00 :   997a:   jne    a056 <nf_conntrack_tcp_packet+0xc86>
    0.00 :   9980:   lea    (%r8,%r8,4),%rdx
    0.00 :   9984:   mov    0xb8(%rbx,%rdx,4),%esi
    0.43 :   998b:   mov    0xbc(%r12),%edx
    0.00 :   9993:   test   $0x10,%cl
    0.00 :   9996:   jne    9d84 <nf_conntrack_tcp_packet+0x9b4>
    0.00 :   999c:   mov    %esi,%eax
    0.00 :   999e:   mov    %esi,%r15d
    0.00 :   99a1:   test   $0x4,%cl
    0.00 :   99a4:   je     99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   99a6:   mov    0x58(%rsp),%r14d
    0.00 :   99ab:   test   %r14d,%r14d
    0.00 :   99ae:   je     a295 <nf_conntrack_tcp_packet+0xec5>
    0.00 :   99b4:   lea    0x1(%rdx),%edi
    0.00 :   99b7:   cmp    %edi,0x18(%rsp)
    2.97 :   99bb:   js     9da9 <nf_conntrack_tcp_packet+0x9d9> // [nf_conntrack][99bb]
    0.00 :   99c1:   lea    (%r8,%r8,4),%rcx
    0.00 :   99c5:   mov    0xc0(%r12),%r9d
    0.00 :   99cd:   mov    0xc0(%rbx,%rcx,4),%esi
    0.00 :   99d4:   test   %esi,%esi
    0.00 :   99d6:   je     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   99d8:   mov    0x8(%rsp),%r14d
    0.00 :   99dd:   mov    %r14d,%ecx
    0.00 :   99e0:   sub    %edx,%ecx
    0.00 :   99e2:   mov    $0x101d0,%edx
    0.00 :   99e7:   lea    0x1(%rcx),%r8d
    0.00 :   99eb:   mov    %esi,%ecx
    0.00 :   99ed:   not    %ecx
    0.00 :   99ef:   add    0xb8(%r12),%ecx
    0.00 :   99f7:   sub    %r14d,%ecx
    0.00 :   99fa:   shr    $0x1f,%ecx
    0.00 :   99fd:   cmp    %edx,%r9d
    0.00 :   9a00:   cmovb  %edx,%r9d
    0.00 :   9a04:   mov    %eax,%edx
    0.00 :   9a06:   sub    %r9d,%edx
    0.00 :   9a09:   sub    $0x1,%edx
    0.00 :   9a0c:   sub    %r15d,%edx
    0.00 :   9a0f:   shr    $0x1f,%edx
    0.00 :   9a12:   test   %dl,%cl
    0.00 :   9a14:   je     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a16:   cmp    %r8d,%esi
    0.00 :   9a19:   jb     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a1b:   sub    $0x1,%r15d
    0.00 :   9a1f:   cmp    %eax,%r15d
    0.00 :   9a22:   jns    9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a24:   lea    (%r10,%r10,4),%rax
    0.00 :   9a28:   mov    %r14d,0xb8(%r12)
    0.00 :   9a30:   mov    $0x0,%r9
    0.00 :   9a37:   orb    $0x10,0xc9(%rbx,%rax,4)
    0.00 :   9a3f:   mov    %r10,0x8(%rsp)
    0.00 :   9a44:   push   %r8
    0.00 :   9a46:   xor    %r8d,%r8d
    0.00 :   9a49:   jmp    9a5e <nf_conntrack_tcp_packet+0x68e>
    0.00 :   9a4b:   mov    %r10,0x8(%rsp)
    0.00 :   9a50:   mov    $0x0,%r9
    0.00 :   9a57:   mov    $0x1,%r8d
    0.00 :   9a5d:   push   %rdi
    0.00 :   9a5e:   mov    0x40(%rsp),%rcx
    0.00 :   9a63:   mov    0x18(%rsp),%rdx
    0.00 :   9a68:   mov    %rbx,%rsi
    0.00 :   9a6b:   mov    %r13,%rdi
    0.00 :   9a6e:   call   8d20 <nf_tcp_log_invalid>
    0.00 :   9a73:   pop    %r11
    0.00 :   9a75:   mov    0x8(%rsp),%r10
    0.00 :   9a7a:   test   %eax,%eax
    0.00 :   9a7c:   jne    9aba <nf_conntrack_tcp_packet+0x6ea>
    0.00 :   9a7e:   mov    0x28(%rsp),%rdi
    0.00 :   9a83:   call   9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9a88:   mov    $0x1,%eax
    1.20 :   9a8d:   mov    0xb8(%rsp),%rdx // [nf_conntrack][9a8d]
    0.84 :   9a95:   sub    %gs:0x28,%rdx // [nf_conntrack][9a95]
    0.00 :   9a9e:   jne    aa6a <nf_conntrack_tcp_packet+0x169a>
    0.94 :   9aa4:   add    $0xc0,%rsp // [nf_conntrack][9aa4]
    0.00 :   9aab:   pop    %rbx
    0.00 :   9aac:   pop    %rbp
    0.00 :   9aad:   pop    %r12
    0.00 :   9aaf:   pop    %r13
    0.00 :   9ab1:   pop    %r14
    0.00 :   9ab3:   pop    %r15
    0.00 :   9ab5:   jmp    9aba <nf_conntrack_tcp_packet+0x6ea>
    0.00 :   9aba:   cmp    $0x1,%eax
    0.00 :   9abd:   je     9ac3 <nf_conntrack_tcp_packet+0x6f3>
    0.00 :   9ac3:   mov    0x20(%rsp),%ecx
    0.00 :   9ac7:   mov    0x4(%rsp),%esi
    0.00 :   9acb:   cmp    $0x4,%ecx
    0.00 :   9ace:   mov    %ecx,%eax
    0.00 :   9ad0:   sete   %r12b
    0.00 :   9ad4:   cmp    %esi,%ecx
    0.00 :   9ad6:   setne  %dl
    0.00 :   9ad9:   and    %edx,%r12d
    1.67 :   9adc:   movzbl 0x1c(%rsp),%ecx // [nf_conntrack][9adc]
    0.68 :   9ae1:   movzbl 0x5d(%rsp),%esi // [nf_conntrack][9ae1]
    0.00 :   9ae6:   mov    %cl,0xe3(%rbx)
    0.00 :   9aec:   mov    %sil,0xe1(%rbx)
    0.00 :   9af3:   nopl   0x0(%rax,%rax,1)
    0.00 :   9af8:   nopl   0x0(%rax,%rax,1)
    0.00 :   9afd:   mov    %al,0xe0(%rbx)
    0.00 :   9b03:   test   %r12b,%r12b
    0.00 :   9b06:   je     9b14 <nf_conntrack_tcp_packet+0x744>
    0.00 :   9b08:   lea    (%r10,%r10,4),%rax
    0.00 :   9b0c:   orb    $0x4,0xc9(%rbx,%rax,4)
    0.00 :   9b14:   mov    0x30(%rsp),%rsi
    0.00 :   9b19:   movzbl 0xb8e(%rsi),%ecx
    1.27 :   9b20:   lea    0xb54(%rsi),%rax // [nf_conntrack][9b20]
    0.00 :   9b27:   cmp    %cl,0xe2(%rbx)
    0.00 :   9b2d:   jb     9bed <nf_conntrack_tcp_packet+0x81d>
    0.00 :   9b33:   mov    0x20(%rsp),%edx
    0.00 :   9b37:   mov    0xb84(%rsi),%r12d
    0.00 :   9b3e:   cmp    (%rax,%rdx,4),%r12d
    0.00 :   9b42:   jae    9bed <nf_conntrack_tcp_packet+0x81d>
    0.80 :   9b48:   mov    0x28(%rsp),%rdi // [nf_conntrack][9b48]
    0.00 :   9b4d:   call   9b52 <nf_conntrack_tcp_packet+0x782>
    0.00 :   9b52:   mov    0x4(%rsp),%esi
    0.00 :   9b56:   cmp    %esi,0x20(%rsp)
    0.00 :   9b5a:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b5c:   mov    0x88(%rbx),%rax
    0.00 :   9b63:   mov    0xb48(%rax),%rax
    0.00 :   9b6a:   test   %rax,%rax
    0.00 :   9b6d:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b6f:   mov    0xb0(%rbx),%rdi
    0.00 :   9b76:   test   %rdi,%rdi
    0.00 :   9b79:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b7b:   movzbl 0x4(%rdi),%eax
    0.00 :   9b7f:   test   %al,%al
    0.00 :   9b81:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b83:   mov    0xc(%rdi),%esi
    0.00 :   9b86:   add    %rdi,%rax
    0.00 :   9b89:   test   %esi,%esi
    0.00 :   9b8b:   jne    a896 <nf_conntrack_tcp_packet+0x14c6>
    0.00 :   9b91:   test   %rax,%rax
    0.00 :   9b94:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b96:   lock orb $0x20,(%rax)
    1.02 :   9b9a:   mov    0x80(%rbx),%rax // [nf_conntrack][9b9a]
    0.00 :   9ba1:   test   $0x2,%al
    0.00 :   9ba3:   jne    9c4d <nf_conntrack_tcp_packet+0x87d>
    0.00 :   9ba9:   testb  $0x4,0xd(%rbp)
    0.00 :   9bad:   jne    a4f3 <nf_conntrack_tcp_packet+0x1123>
    0.00 :   9bb3:   mov    0x1c(%rsp),%ecx
    0.00 :   9bb7:   test   %ecx,%ecx
    0.00 :   9bb9:   jne    9bc6 <nf_conntrack_tcp_packet+0x7f6>
    0.00 :   9bbb:   cmpl   $0x1,0x4(%rsp)
    0.00 :   9bc0:   je     9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9bc6:   cmpl   $0x3,0x20(%rsp)
    0.00 :   9bcb:   je     a506 <nf_conntrack_tcp_packet+0x1136>
    0.00 :   9bd1:   mov    (%rsp),%esi
    0.00 :   9bd4:   mov    $0x1,%r8d
    0.00 :   9bda:   mov    %r12d,%ecx
    0.00 :   9bdd:   mov    %r13,%rdx
    0.00 :   9be0:   mov    %rbx,%rdi
    1.05 :   9be3:   call   9be8 <nf_conntrack_tcp_packet+0x818> // [nf_conntrack][9be3]
    0.00 :   9be8:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    1.04 :   9bed:   cmpl   $0x4,0x1c(%rsp) // [nf_conntrack][9bed]
    0.00 :   9bf2:   je     a791 <nf_conntrack_tcp_packet+0x13c1>
    0.00 :   9bf8:   mov    0x20(%rsp),%edx
    0.00 :   9bfc:   mov    (%rax,%rdx,4),%r12d
    3.15 :   9c00:   movzbl 0xc9(%rbx),%eax // [nf_conntrack][9c00]
    0.00 :   9c07:   or     0xdd(%rbx),%al
    0.00 :   9c0d:   test   $0x10,%al
    0.00 :   9c0f:   je     9c29 <nf_conntrack_tcp_packet+0x859>
    0.00 :   9c11:   mov    0x30(%rsp),%rax
    0.00 :   9c16:   mov    0xb88(%rax),%eax
    0.00 :   9c1c:   cmp    %r12d,%eax
    0.00 :   9c1f:   jae    9c29 <nf_conntrack_tcp_packet+0x859>
    0.00 :   9c21:   mov    %eax,%r12d
    0.00 :   9c24:   jmp    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c29:   cmpw   $0x0,0xf0(%rbx)
    0.00 :   9c31:   jne    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c37:   mov    0x30(%rsp),%rax
    0.00 :   9c3c:   mov    0xb84(%rax),%eax
    0.00 :   9c42:   cmp    %r12d,%eax
    0.00 :   9c45:   jae    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c4b:   jmp    9c21 <nf_conntrack_tcp_packet+0x851>
    0.00 :   9c4d:   mov    0x80(%rbx),%rax
    0.93 :   9c54:   test   $0x4,%al // [nf_conntrack][9c54]
    0.00 :   9c56:   jne    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c5c:   mov    0x4(%rsp),%eax
    0.00 :   9c60:   sub    $0x2,%eax
    0.00 :   9c63:   cmp    $0x1,%eax
    0.00 :   9c66:   ja     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c6c:   cmpl   $0x3,0x20(%rsp)
    0.00 :   9c71:   jne    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c77:   lock orb $0x4,0x80(%rbx)
    0.00 :   9c7f:   mov    0x88(%rbx),%rax
    0.00 :   9c86:   mov    0xb48(%rax),%rax
    0.00 :   9c8d:   test   %rax,%rax
    0.00 :   9c90:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c96:   mov    0xb0(%rbx),%rdi
    0.00 :   9c9d:   test   %rdi,%rdi
    0.00 :   9ca0:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9ca6:   movzbl 0x4(%rdi),%eax
    0.00 :   9caa:   test   %al,%al
    0.00 :   9cac:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cb2:   mov    0xc(%rdi),%edx
    0.00 :   9cb5:   add    %rdi,%rax
    0.00 :   9cb8:   test   %edx,%edx
    0.00 :   9cba:   jne    a9dd <nf_conntrack_tcp_packet+0x160d>
    0.00 :   9cc0:   test   %rax,%rax
    0.00 :   9cc3:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cc9:   lock orb $0x10,(%rax)
    0.00 :   9ccd:   jmp    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cd2:   mov    %eax,0x40(%rsp)
    0.00 :   9cd6:   mov    0x8(%rsp),%eax
    0.00 :   9cda:   mov    $0x1,%edx
    0.00 :   9cdf:   mov    %r14d,%esi
    0.00 :   9ce2:   mov    0x38(%rsp),%rcx
    0.00 :   9ce7:   mov    %r13,%rdi
    0.00 :   9cea:   mov    %r8,0x60(%rsp)
    0.00 :   9cef:   mov    %eax,0xbc(%r12)
    0.00 :   9cf7:   mov    %eax,0xb8(%r12)
    0.00 :   9cff:   mov    0x54(%rsp),%eax
    0.00 :   9d03:   mov    %r10,0x48(%rsp)
    0.00 :   9d08:   test   %eax,%eax
    0.00 :   9d0a:   cmovne %eax,%edx
    0.00 :   9d0d:   mov    %edx,0xc0(%r12)
    0.00 :   9d15:   mov    %rbp,%rdx
    0.00 :   9d18:   call   90c0 <tcp_options>
    0.00 :   9d1d:   mov    0x48(%rsp),%r10
    0.00 :   9d22:   mov    0x50(%rsp),%r11d
    0.00 :   9d27:   mov    0x40(%rsp),%eax
    0.00 :   9d2b:   mov    0x60(%rsp),%r8
    0.00 :   9d30:   lea    (%r10,%r10,4),%rdx
    0.00 :   9d34:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   9d3c:   je     9d4c <nf_conntrack_tcp_packet+0x97c>
    0.00 :   9d3e:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d42:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   9d4a:   jne    9d64 <nf_conntrack_tcp_packet+0x994>
    0.00 :   9d4c:   lea    (%r10,%r10,4),%rdx
    0.00 :   9d50:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   9d58:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d5c:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   9d64:   movzbl 0xd(%rbp),%ecx
    0.00 :   9d68:   test   $0x10,%cl
    0.00 :   9d6b:   je     a129 <nf_conntrack_tcp_packet+0xd59>
    0.00 :   9d71:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d75:   mov    0xb8(%rbx,%rdx,4),%esi
    0.00 :   9d7c:   mov    0xbc(%r12),%edx
    2.52 :   9d84:   sub    %eax,%r11d // [nf_conntrack][9d84]
    0.00 :   9d87:   mov    0xc(%rbp),%eax
    0.00 :   9d8a:   and    $0x1400,%eax
    0.00 :   9d8f:   cmp    $0x1400,%eax
    0.79 :   9d94:   mov    %esi,%eax // [nf_conntrack][9d94]
    0.00 :   9d96:   jne    9da1 <nf_conntrack_tcp_packet+0x9d1>
    0.00 :   9d98:   test   %r11d,%r11d
    0.00 :   9d9b:   je     a1ba <nf_conntrack_tcp_packet+0xdea>
    0.00 :   9da1:   mov    %r11d,%esi
    0.66 :   9da4:   jmp    99a1 <nf_conntrack_tcp_packet+0x5d1> // [nf_conntrack][9da4]
    0.00 :   9da9:   lea    0x1(%rax),%edi
    0.00 :   9dac:   cmp    %edi,%r15d
    0.00 :   9daf:   jns    a4bc <nf_conntrack_tcp_packet+0x10ec>
    0.00 :   9db5:   lea    (%r8,%r8,4),%rdi
    0.00 :   9db9:   lea    (%rbx,%rdi,4),%rdi
    0.00 :   9dbd:   mov    0xc0(%rdi),%r9d
    0.00 :   9dc4:   test   %r9d,%r9d
    0.00 :   9dc7:   jne    a18e <nf_conntrack_tcp_packet+0xdbe>
    0.38 :   9dcd:   mov    0xc0(%r12),%r9d
    0.00 :   9dd5:   mov    $0x101d0,%r11d
    0.00 :   9ddb:   cmp    %r11d,%r9d
    0.92 :   9dde:   cmovae %r9d,%r11d // [nf_conntrack][9dde]
    0.00 :   9de2:   sub    %r11d,%eax
    0.00 :   9de5:   sub    $0x1,%eax
    0.00 :   9de8:   cmp    %r15d,%eax
    0.00 :   9deb:   jns    a4d4 <nf_conntrack_tcp_packet+0x1104>
    0.62 :   9df1:   and    $0x2,%ecx // [nf_conntrack][9df1]
    0.00 :   9df4:   jne    9e06 <nf_conntrack_tcp_packet+0xa36>
    0.00 :   9df6:   lea    (%r10,%r10,4),%rax
    0.00 :   9dfa:   movzbl 0xc8(%rbx,%rax,4),%ecx
    0.00 :   9e02:   shll   %cl,0x54(%rsp)
    0.00 :   9e06:   mov    0x54(%rsp),%ecx
    0.00 :   9e0a:   mov    %r15d,%eax
    0.00 :   9e0d:   sub    %esi,%eax
    0.00 :   9e0f:   add    %ecx,%eax
    0.00 :   9e11:   cmp    %eax,%r9d
    0.00 :   9e14:   jae    9e1e <nf_conntrack_tcp_packet+0xa4e>
    0.00 :   9e16:   mov    %eax,0xc0(%r12)
    0.00 :   9e1e:   mov    0x8(%rsp),%eax
    0.00 :   9e22:   cmp    %eax,0xb8(%r12)
    1.25 :   9e2a:   jns    9e40 <nf_conntrack_tcp_packet+0xa70> // [nf_conntrack][9e2a]
    1.08 :   9e2c:   mov    %eax,0xb8(%r12) // [nf_conntrack][9e2c]
    0.00 :   9e34:   lea    (%r10,%r10,4),%rax
    0.00 :   9e38:   orb    $0x10,0xc9(%rbx,%rax,4)
    0.00 :   9e40:   testb  $0x10,0xd(%rbp)
    1.12 :   9e44:   je     9e6f <nf_conntrack_tcp_packet+0xa9f> // [nf_conntrack][9e44]
    0.00 :   9e46:   lea    (%r10,%r10,4),%rax
    0.00 :   9e4a:   lea    (%rbx,%rax,4),%rcx
    0.00 :   9e4e:   movzbl 0xc9(%rcx),%eax
    2.73 :   9e55:   test   $0x20,%al // [nf_conntrack][9e55]
    0.00 :   9e57:   je     a51d <nf_conntrack_tcp_packet+0x114d>
    0.00 :   9e5d:   cmp    %esi,0xc4(%r12)
    0.00 :   9e65:   jns    9e6f <nf_conntrack_tcp_packet+0xa9f>
    0.00 :   9e67:   mov    %esi,0xc4(%r12)
    0.94 :   9e6f:   mov    0xc0(%rdi),%eax // [nf_conntrack][9e6f]
    0.00 :   9e75:   test   %eax,%eax
    0.00 :   9e77:   je     9e85 <nf_conntrack_tcp_packet+0xab5>
    0.00 :   9e79:   mov    0x8(%rsp),%ecx
    0.00 :   9e7d:   cmp    %ecx,%edx
    0.00 :   9e7f:   js     a5ed <nf_conntrack_tcp_packet+0x121d>
    1.45 :   9e85:   mov    0x54(%rsp),%ecx // [nf_conntrack][9e85]
    0.00 :   9e89:   lea    (%rcx,%r15,1),%eax
    0.00 :   9e8d:   mov    %eax,%edx
    0.00 :   9e8f:   not    %edx
    0.00 :   9e91:   add    0xbc(%rdi),%edx
    0.00 :   9e97:   jns    9ea9 <nf_conntrack_tcp_packet+0xad9>
    0.00 :   9e99:   add    $0x1,%r15d
    0.00 :   9e9d:   test   %ecx,%ecx
    0.00 :   9e9f:   cmove  %r15d,%eax
    0.00 :   9ea3:   mov    %eax,0xbc(%rdi)
    0.00 :   9ea9:   cmp    0xb8(%rdi),%esi
    0.00 :   9eaf:   jne    9ebd <nf_conntrack_tcp_packet+0xaed>
    0.00 :   9eb1:   lea    (%r8,%r8,4),%rax
    0.00 :   9eb5:   andb   $0xef,0xc9(%rbx,%rax,4)
    2.14 :   9ebd:   cmpl   $0x3,0x1c(%rsp) // [nf_conntrack][9ebd]
    0.00 :   9ec2:   je     a73d <nf_conntrack_tcp_packet+0x136d>
    0.00 :   9ec8:   mov    0x20(%rsp),%esi
    0.00 :   9ecc:   mov    0x4(%rsp),%edi
    0.00 :   9ed0:   cmp    %edi,%esi
    0.00 :   9ed2:   mov    %esi,%eax
    0.00 :   9ed4:   setne  %r12b
    0.00 :   9ed8:   cmp    $0x4,%esi
    0.00 :   9edb:   sete   %dl
    0.00 :   9ede:   and    %edx,%r12d
    0.00 :   9ee1:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   9ee6:   movq   $0x0,0x90(%rsp)
    0.98 :   9ef2:   movq   $0x0,0x98(%rsp) // [nf_conntrack][9ef2]
    0.00 :   9efe:   movq   $0x0,0xa0(%rsp)
    0.00 :   9f0a:   movq   $0x0,0xa8(%rsp)
    0.00 :   9f16:   movq   $0x0,0xb0(%rsp)
    0.00 :   9f22:   movzbl 0xc(%rbp),%eax
    0.00 :   9f26:   shr    $0x4,%al
    0.00 :   9f29:   movzbl %al,%eax
    1.22 :   9f2c:   lea    -0x14(,%rax,4),%r15d // [nf_conntrack][9f2c]
    0.00 :   9f34:   test   %r15d,%r15d
    0.00 :   9f37:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    1.14 :   9f3d:   lea    0x14(%r14),%esi // [nf_conntrack][9f3d]
    0.00 :   9f41:   sub    0x74(%r13),%ecx
    1.33 :   9f45:   mov    0xd0(%r13),%rax // [nf_conntrack][9f45]
    0.00 :   9f4c:   sub    %esi,%ecx
    0.00 :   9f4e:   cmp    %ecx,%r15d
    0.00 :   9f51:   jg     a7f3 <nf_conntrack_tcp_packet+0x1423>
    0.00 :   9f57:   movslq %esi,%rsi
    0.00 :   9f5a:   add    %rsi,%rax
    0.00 :   9f5d:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f63:   cmp    $0xc,%r15d
    0.00 :   9f67:   je     a780 <nf_conntrack_tcp_packet+0x13b0>
    0.00 :   9f6d:   test   %r15d,%r15d
    0.00 :   9f70:   jle    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f76:   movzbl (%rax),%ecx
    0.00 :   9f79:   test   %cl,%cl
    0.00 :   9f7b:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f81:   cmp    $0x1,%cl
    0.00 :   9f84:   jne    a45b <nf_conntrack_tcp_packet+0x108b>
    0.00 :   9f8a:   sub    $0x1,%r15d
    0.00 :   9f8e:   add    $0x1,%rax
    0.00 :   9f92:   test   %r15d,%r15d
    0.00 :   9f95:   jg     9f76 <nf_conntrack_tcp_packet+0xba6>
    0.00 :   9f97:   jmp    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f9c:   mov    0x24(%rsp),%r10d
    0.00 :   9fa1:   mov    0x4(%rsp),%r15d
    0.00 :   9fa6:   mov    %r10,%rax
    0.00 :   9fa9:   shl    $0x4,%rax
    0.00 :   9fad:   sub    %r10,%rax
    0.00 :   9fb0:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   9fb9:   cmp    $0x8,%al
    0.00 :   9fbb:   je     a533 <nf_conntrack_tcp_packet+0x1163>
    0.00 :   9fc1:   movl   $0x4,0x1c(%rsp)
    0.00 :   9fc9:   jmp    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   9fce:   mov    %al,0x8(%rsp)
    0.00 :   9fd2:   mov    0x20(%rsp),%eax
    0.00 :   9fd6:   mov    $0x0,%rdi
    0.00 :   9fdd:   mov    $0x0,%rsi
    0.00 :   9fe4:   movzbl 0xd(%rbp),%r8d
    0.00 :   9fe9:   mov    %r10,0x10(%rsp)
    0.00 :   9fee:   push   %rax
    0.00 :   9fef:   mov    0xc(%rsp),%eax
    0.00 :   9ff3:   mov    %r8d,%r9d
    0.00 :   9ff6:   mov    %r8d,%ecx
    0.00 :   9ff9:   mov    %r8d,%edx
    0.00 :   9ffc:   and    $0x1,%r8d
    0.00 :   a000:   push   %rax
    0.00 :   a001:   shr    $0x2,%r9b
    0.00 :   a005:   shr    $0x4,%cl
    0.00 :   a008:   shr    %dl
    0.00 :   a00a:   and    $0x1,%ecx
    0.00 :   a00d:   and    $0x1,%r9d
    0.00 :   a011:   and    $0x1,%edx
    0.00 :   a014:   call   a019 <nf_conntrack_tcp_packet+0xc49>
    0.00 :   a019:   pop    %rdi
    0.00 :   a01a:   pop    %r8
    0.00 :   a01c:   mov    0x10(%rsp),%r10
    0.00 :   a021:   movzbl 0x8(%rsp),%eax
    0.00 :   a026:   jmp    9afd <nf_conntrack_tcp_packet+0x72d>
    0.00 :   a02b:   mov    $0x0,%rsi
    0.00 :   a032:   mov    $0x0,%rdi
    0.00 :   a039:   mov    %r10,0x10(%rsp)
    0.00 :   a03e:   mov    %al,0x8(%rsp)
    0.00 :   a042:   call   a047 <nf_conntrack_tcp_packet+0xc77>
    0.00 :   a047:   mov    0x10(%rsp),%r10
    0.00 :   a04c:   movzbl 0x8(%rsp),%eax
    0.00 :   a051:   jmp    9af8 <nf_conntrack_tcp_packet+0x728>
    0.00 :   a056:   mov    0x8(%rsp),%edi
    0.00 :   a05a:   cmp    %edi,0xb8(%r12)
    0.00 :   a062:   jns    9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a068:   movzbl 0xe0(%rbx),%esi
    0.00 :   a06f:   lea    -0x1(%rsi),%edx
    0.00 :   a072:   cmp    $0x1,%dl
    0.00 :   a075:   ja     9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a07b:   mov    %eax,0x40(%rsp)
    0.00 :   a07f:   mov    0x8(%rsp),%eax
    0.00 :   a083:   mov    $0x1,%edx
    0.00 :   a088:   mov    %r14d,%esi
    0.00 :   a08b:   mov    0x38(%rsp),%rcx
    0.00 :   a090:   mov    %r13,%rdi
    0.00 :   a093:   mov    %r8,0x60(%rsp)
    0.00 :   a098:   mov    %eax,0xbc(%r12)
    0.00 :   a0a0:   mov    %eax,0xb8(%r12)
    0.00 :   a0a8:   mov    0x54(%rsp),%eax
    0.00 :   a0ac:   mov    %r10,0x48(%rsp)
    0.00 :   a0b1:   test   %eax,%eax
    0.00 :   a0b3:   mov    %r11d,0x50(%rsp)
    0.00 :   a0b8:   cmovne %eax,%edx
    0.00 :   a0bb:   mov    %edx,0xc0(%r12)
    0.00 :   a0c3:   mov    %rbp,%rdx
    0.00 :   a0c6:   call   90c0 <tcp_options>
    0.00 :   a0cb:   mov    0x48(%rsp),%r10
    0.00 :   a0d0:   mov    0x50(%rsp),%r11d
    0.00 :   a0d5:   mov    0x40(%rsp),%eax
    0.00 :   a0d9:   mov    0x60(%rsp),%r8
    0.00 :   a0de:   lea    (%r10,%r10,4),%rdx
    0.00 :   a0e2:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   a0ea:   je     a0fa <nf_conntrack_tcp_packet+0xd2a>
    0.00 :   a0ec:   lea    (%r8,%r8,4),%rdx
    0.00 :   a0f0:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   a0f8:   jne    a112 <nf_conntrack_tcp_packet+0xd42>
    0.00 :   a0fa:   lea    (%r10,%r10,4),%rdx
    0.00 :   a0fe:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   a106:   lea    (%r8,%r8,4),%rdx
    0.00 :   a10a:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   a112:   cmpl   $0x2,(%rsp)
    0.00 :   a116:   movzbl 0xd(%rbp),%ecx
    0.00 :   a11a:   jbe    9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a120:   test   $0x10,%cl
    0.00 :   a123:   jne    9d71 <nf_conntrack_tcp_packet+0x9a1>
    0.00 :   a129:   mov    0x20(%rsp),%esi
    0.00 :   a12d:   mov    0x4(%rsp),%edi
    0.00 :   a131:   cmp    $0x4,%esi
    0.00 :   a134:   mov    %esi,%eax
    0.00 :   a136:   sete   %r12b
    0.00 :   a13a:   cmp    %edi,%esi
    0.00 :   a13c:   setne  %dl
    0.00 :   a13f:   and    %edx,%r12d
    0.00 :   a142:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a147:   shl    $0x4,%rax
    0.00 :   a14b:   movl   $0x5,0x1c(%rsp)
    0.00 :   a153:   sub    %r10,%rax
    0.00 :   a156:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   a15f:   cmp    $0x8,%al
    0.00 :   a161:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   a167:   jmp    9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   a16c:   mov    %r15d,0xbc(%rcx)
    0.00 :   a173:   mov    %r15d,%esi
    0.00 :   a176:   mov    %r15d,0xb8(%rcx)
    0.00 :   a17d:   movzbl 0xd(%rbp),%ecx
    0.00 :   a181:   mov    0xbc(%r12),%edx
    0.00 :   a189:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    1.29 :   a18e:   mov    0x8(%rsp),%r11d // [nf_conntrack][a18e]
    1.06 :   a193:   not    %r9d // [nf_conntrack][a193]
    0.00 :   a196:   add    0xb8(%r12),%r9d
    0.00 :   a19e:   cmp    %r11d,%r9d
    0.32 :   a1a1:   js     9dcd <nf_conntrack_tcp_packet+0x9fd>
    0.00 :   a1a7:   mov    %r10,0x8(%rsp)
    0.00 :   a1ac:   push   %r9
    0.00 :   a1ae:   mov    $0x0,%r9
    0.00 :   a1b5:   jmp    9a46 <nf_conntrack_tcp_packet+0x676>
    0.00 :   a1ba:   mov    %esi,%r15d
    0.00 :   a1bd:   jmp    99a1 <nf_conntrack_tcp_packet+0x5d1>
    0.00 :   a1c2:   lea    (%r10,%r10,4),%rax
    0.00 :   a1c6:   or     0xc9(%rbx,%rax,4),%sil
    0.00 :   a1ce:   and    $0x4,%esi
    0.00 :   a1d1:   jne    a1f1 <nf_conntrack_tcp_packet+0xe21>
    0.00 :   a1d3:   movzbl 0x5d(%rsp),%eax
    0.00 :   a1d8:   cmp    %al,0xe1(%rbx)
    0.00 :   a1de:   jne    97cd <nf_conntrack_tcp_packet+0x3fd>
    0.00 :   a1e4:   cmpb   $0x4,0xe3(%rbx)
    0.00 :   a1eb:   jne    97cd <nf_conntrack_tcp_packet+0x3fd>
    0.00 :   a1f1:   mov    0x28(%rsp),%rdi
    0.00 :   a1f6:   call   a1fb <nf_conntrack_tcp_packet+0xe2b>
    0.00 :   a1fb:   xor    %edx,%edx
    0.00 :   a1fd:   xor    %esi,%esi
    0.00 :   a1ff:   mov    %rbx,%rdi
    0.00 :   a202:   call   a207 <nf_conntrack_tcp_packet+0xe37>
    0.00 :   a207:   neg    %al
    0.00 :   a209:   sbb    %eax,%eax
    0.00 :   a20b:   and    $0xfffffffc,%eax
    0.00 :   a20e:   jmp    9a8d <nf_conntrack_tcp_packet+0x6bd>
    0.00 :   a213:   xor    %r9d,%r9d
    0.00 :   a216:   cmpl   $0x2,(%rsp)
    0.00 :   a21a:   mov    0x4(%rbp),%eax
    0.00 :   a21d:   movl   $0x7,0x20(%rsp)
    0.00 :   a225:   setbe  %r8b
    0.00 :   a229:   setbe  %r9b
    0.00 :   a22d:   movzbl %r8b,%r8d
    0.00 :   a231:   mov    %eax,0x58(%rsp)
    0.00 :   a235:   bswap  %eax
    0.00 :   a237:   mov    %eax,0x18(%rsp)
    0.00 :   a23b:   lea    (%r8,%r8,4),%rax
    0.00 :   a23f:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a247:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a24c:   xor    %r9d,%r9d
    0.00 :   a24f:   cmpl   $0x2,(%rsp)
    0.00 :   a253:   mov    0x4(%rbp),%eax
    0.00 :   a256:   setbe  %r8b
    0.00 :   a25a:   setbe  %r9b
    0.00 :   a25e:   movzbl %r8b,%r8d
    0.00 :   a262:   mov    %eax,0x58(%rsp)
    0.00 :   a266:   bswap  %eax
    0.00 :   a268:   mov    %eax,0x18(%rsp)
    0.00 :   a26c:   lea    (%r8,%r8,4),%rax
    0.00 :   a270:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a278:   movl   $0x3,0x1c(%rsp)
    0.00 :   a280:   movl   $0x6,0x4(%rsp)
    0.00 :   a288:   movl   $0x7,0x20(%rsp)
    0.00 :   a290:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a295:   cmpb   $0x1,0xe0(%rbx)
    0.00 :   a29c:   movl   $0x0,0x18(%rsp)
    0.00 :   a2a4:   jne    99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   a2aa:   mov    0xb8(%r12),%edi
    0.00 :   a2b2:   mov    %edi,0x18(%rsp)
    0.00 :   a2b6:   mov    %edi,0x8(%rsp)
    0.00 :   a2ba:   jmp    99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   a2bf:   xor    %r9d,%r9d
    0.00 :   a2c2:   cmpl   $0x2,(%rsp)
    0.00 :   a2c6:   mov    0x1c(%rsp),%ecx
    0.00 :   a2ca:   setbe  %r8b
    0.00 :   a2ce:   setbe  %r9b
    0.00 :   a2d2:   movzbl %r8b,%r8d
    0.00 :   a2d6:   lea    (%r8,%r8,4),%rax
    0.00 :   a2da:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a2e2:   mov    0x4(%rbp),%eax
    0.00 :   a2e5:   mov    %eax,0x58(%rsp)
    0.00 :   a2e9:   bswap  %eax
    0.00 :   a2eb:   mov    %eax,0x18(%rsp)
    0.00 :   a2ef:   cmp    $0x3,%ecx
    0.00 :   a2f2:   jne    a4e6 <nf_conntrack_tcp_packet+0x1116>
    0.00 :   a2f8:   cmpb   $0x0,0x5d(%rsp)
    0.00 :   a2fd:   je     a4e6 <nf_conntrack_tcp_packet+0x1116>
    0.00 :   a303:   cmpb   $0x0,0xf3(%rbx)
    0.00 :   a30a:   mov    $0x3,%eax
    0.00 :   a30f:   cmovns %ecx,%eax
    0.00 :   a312:   mov    %eax,0x1c(%rsp)
    0.00 :   a316:   movsbl 0xf3(%rbx),%eax
    0.00 :   a31d:   cltd
    0.00 :   a31e:   not    %edx
    0.00 :   a320:   add    $0x3,%edx
    0.00 :   a323:   mov    %edx,0x20(%rsp)
    0.00 :   a327:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a32c:   mov    0xb0(%rbx),%rdi
    0.00 :   a333:   test   %rdi,%rdi
    0.00 :   a336:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a33c:   movzbl 0x7(%rdi),%eax
    0.00 :   a340:   test   %al,%al
    0.00 :   a342:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a348:   mov    0xc(%rdi),%r12d
    0.00 :   a34c:   add    %rdi,%rax
    0.00 :   a34f:   test   %r12d,%r12d
    0.00 :   a352:   jne    a931 <nf_conntrack_tcp_packet+0x1561>
    0.00 :   a358:   test   %rax,%rax
    0.00 :   a35b:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a361:   cmpl   $0x1,0x4(%rsp)
    0.00 :   a366:   sete   %dl
    0.00 :   a369:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   a36e:   sete   %al
    0.00 :   a371:   test   %al,%dl
    0.00 :   a373:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a379:   cmpl   $0x2,(%rsp)
    0.00 :   a37d:   ja     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a383:   cmpb   $0x0,0xe1(%rbx)
    0.00 :   a38a:   jne    a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a390:   lea    (%r10,%r10,4),%rdx
    0.00 :   a394:   mov    0x4(%rbp),%eax
    0.00 :   a397:   mov    0xb8(%rbx,%rdx,4),%edx
    0.00 :   a39e:   bswap  %eax
    0.00 :   a3a0:   sub    $0x1,%edx
    0.00 :   a3a3:   cmp    %eax,%edx
    0.00 :   a3a5:   jne    a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a3ab:   xchg   %ax,%ax
    0.00 :   a3ad:   jmp    9a7e <nf_conntrack_tcp_packet+0x6ae>
    0.00 :   a3b2:   mov    $0x0,%rsi
    0.00 :   a3b9:   mov    $0x0,%rdi
    0.00 :   a3c0:   call   a3c5 <nf_conntrack_tcp_packet+0xff5>
    0.00 :   a3c5:   jmp    9a7e <nf_conntrack_tcp_packet+0x6ae>
    1.93 :   a3ca:   xor    %r9d,%r9d // [nf_conntrack][a3ca]
    0.00 :   a3cd:   cmpl   $0x2,(%rsp)
    0.00 :   a3d1:   mov    %eax,0x20(%rsp)
    0.00 :   a3d5:   setbe  %r8b
    0.00 :   a3d9:   mov    0x4(%rbp),%eax
    0.00 :   a3dc:   setbe  %r9b
    0.00 :   a3e0:   movzbl %r8b,%r8d
    0.00 :   a3e4:   mov    %eax,0x58(%rsp)
    0.00 :   a3e8:   bswap  %eax
    0.00 :   a3ea:   mov    %eax,0x18(%rsp)
    0.00 :   a3ee:   lea    (%r8,%r8,4),%rax
    0.00 :   a3f2:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a3fa:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a3ff:   mov    %r10,%rax
    0.00 :   a402:   movl   $0x2,0x1c(%rsp)
    0.00 :   a40a:   shl    $0x4,%rax
    0.00 :   a40e:   sub    %r10,%rax
    0.00 :   a411:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   a41a:   cmp    $0x8,%al
    0.00 :   a41c:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   a422:   jmp    9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   a427:   test   %rsi,%rsi
    0.00 :   a42a:   je     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   a430:   mov    $0x14,%ecx
    0.00 :   a435:   lea    0x68(%rsp),%rdx
    0.00 :   a43a:   mov    %r14d,%esi
    0.00 :   a43d:   mov    %r13,%rdi
    0.00 :   a440:   call   a445 <nf_conntrack_tcp_packet+0x1075>
    0.00 :   a445:   test   %eax,%eax
    0.00 :   a447:   js     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   a44d:   mov    0x70(%r13),%edx
    0.00 :   a451:   lea    0x68(%rsp),%rbp
    0.00 :   a456:   jmp    9455 <nf_conntrack_tcp_packet+0x85>
    0.00 :   a45b:   cmp    $0x1,%r15d
    0.00 :   a45f:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a465:   movzbl 0x1(%rax),%edx
    0.00 :   a469:   lea    0x2(%rax),%rsi
    0.00 :   a46d:   cmp    %r15d,%edx
    0.00 :   a470:   jg     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a476:   cmp    $0x1,%edx
    0.00 :   a479:   jle    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a47f:   lea    -0x2(%rdx),%eax
    0.00 :   a482:   cmp    $0x5,%cl
    0.00 :   a485:   jne    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a487:   cmp    $0x9,%edx
    0.00 :   a48a:   jle    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a48c:   test   $0x7,%al
    0.00 :   a48e:   jne    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a490:   mov    %r11d,%r15d
    0.00 :   a493:   xor    %ecx,%ecx
    0.00 :   a495:   mov    0x4(%rsi,%rcx,1),%edx
    0.00 :   a499:   bswap  %edx
    0.00 :   a49b:   cmp    %edx,%r15d
    0.00 :   a49e:   cmovs  %edx,%r15d
    0.00 :   a4a2:   add    $0x8,%rcx
    0.00 :   a4a6:   cmp    %ecx,%eax
    0.00 :   a4a8:   jg     a495 <nf_conntrack_tcp_packet+0x10c5>
    0.00 :   a4aa:   jmp    95ee <nf_conntrack_tcp_packet+0x21e>
    0.00 :   a4af:   cltq
    0.00 :   a4b1:   sub    %edx,%r15d
    0.00 :   a4b4:   add    %rsi,%rax
    0.00 :   a4b7:   jmp    9f6d <nf_conntrack_tcp_packet+0xb9d>
    0.00 :   a4bc:   mov    %r10,0x8(%rsp)
    0.00 :   a4c1:   mov    $0x0,%r9
    0.00 :   a4c8:   mov    $0x1,%r8d
    0.00 :   a4ce:   push   %rdi
    0.00 :   a4cf:   jmp    9a5e <nf_conntrack_tcp_packet+0x68e>
    0.00 :   a4d4:   mov    %r10,0x8(%rsp)
    0.00 :   a4d9:   mov    $0x0,%r9
    0.00 :   a4e0:   push   %rax
    0.00 :   a4e1:   jmp    9a46 <nf_conntrack_tcp_packet+0x676>
    0.00 :   a4e6:   movl   $0x2,0x20(%rsp)
    0.00 :   a4ee:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a4f3:   mov    (%rsp),%esi
    0.00 :   a4f6:   mov    %r13,%rdx
    0.00 :   a4f9:   mov    %rbx,%rdi
    0.00 :   a4fc:   call   a501 <nf_conntrack_tcp_packet+0x1131>
    0.00 :   a501:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   a506:   mov    0x30(%rsp),%rax
    0.00 :   a50b:   mov    0xb88(%rax),%eax
    0.00 :   a511:   cmp    %rax,%r12
    0.00 :   a514:   cmova  %rax,%r12
    0.00 :   a518:   jmp    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   a51d:   or     $0x20,%eax
    0.00 :   a520:   mov    %esi,0xc4(%r12)
    0.00 :   a528:   mov    %al,0xc9(%rcx)
    0.00 :   a52e:   jmp    9e6f <nf_conntrack_tcp_packet+0xa9f>
    0.00 :   a533:   movzbl %cl,%edi
    0.00 :   a536:   lea    -0x4(%rdi),%esi
    0.00 :   a539:   cmp    $0x4,%esi
    0.00 :   a53c:   jbe    a7de <nf_conntrack_tcp_packet+0x140e>
    0.00 :   a542:   xor    %r9d,%r9d
    0.00 :   a545:   cmpl   $0x2,(%rsp)
    0.00 :   a549:   setbe  %r8b
    0.00 :   a54d:   setbe  %r9b
    0.00 :   a551:   movzbl %r8b,%r8d
    0.00 :   a555:   lea    (%r8,%r8,4),%rax
    0.00 :   a559:   lea    (%rbx,%rax,4),%rax
    0.00 :   a55d:   movzbl 0xc9(%rax),%esi
    0.00 :   a564:   test   $0x20,%sil
    0.00 :   a568:   jne    a8a5 <nf_conntrack_tcp_packet+0x14d5>
    0.00 :   a56e:   mov    0x80(%rbx),%rax
    0.00 :   a575:   test   $0x2,%al
    0.00 :   a577:   jne    a94a <nf_conntrack_tcp_packet+0x157a>
    0.00 :   a57d:   movl   $0x8,0x20(%rsp)
    0.00 :   a585:   mov    0x80(%rbx),%rax
    0.00 :   a58c:   test   $0x4,%al
    0.00 :   a58e:   jne    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a590:   cmpb   $0x3,0xe3(%rbx)
    0.00 :   a597:   je     a95f <nf_conntrack_tcp_packet+0x158f>
    0.00 :   a59d:   mov    0x4(%rbp),%eax
    0.00 :   a5a0:   cmpl   $0x1,0x4(%rsp)
    0.00 :   a5a5:   movl   $0x4,0x1c(%rsp)
    0.00 :   a5ad:   mov    %eax,0x58(%rsp)
    0.00 :   a5b1:   bswap  %eax
    0.00 :   a5b3:   mov    %eax,0x18(%rsp)
    0.00 :   a5b7:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5bd:   mov    0xe0(%rbx),%eax
    0.00 :   a5c3:   and    $0xff00ff00,%eax
    0.00 :   a5c8:   cmp    $0x3000100,%eax
    0.00 :   a5cd:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5d3:   mov    0x18(%rsp),%eax
    0.00 :   a5d7:   cmp    %eax,0xe8(%rbx)
    0.00 :   a5dd:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5e3:   movzbl 0x20(%rsp),%eax
    0.00 :   a5e8:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a5ed:   sub    %edx,%eax
    0.00 :   a5ef:   add    %ecx,%eax
    0.00 :   a5f1:   mov    %eax,0xc0(%rdi)
    0.00 :   a5f7:   jmp    9e85 <nf_conntrack_tcp_packet+0xab5>
    0.00 :   a5fc:   movzbl 0x5d(%rsp),%eax
    0.00 :   a601:   mov    0x1c(%rsp),%r9d
    0.00 :   a606:   mov    %al,0xe1(%rbx)
    0.00 :   a60c:   mov    %r9b,0xe3(%rbx)
    0.00 :   a613:   mov    0x4(%rbp),%eax
    0.00 :   a616:   bswap  %eax
    0.00 :   a618:   mov    %eax,0xe4(%rbx)
    0.00 :   a61e:   movzbl 0xd(%rbp),%edx
    0.00 :   a622:   mov    0x70(%r13),%eax
    0.00 :   a626:   mov    0x4(%rbp),%esi
    0.00 :   a629:   mov    %edx,%edi
    0.00 :   a62b:   shr    %dl
    0.00 :   a62d:   sub    %r14d,%eax
    0.00 :   a630:   and    $0x1,%edi
    0.00 :   a633:   and    $0x1,%edx
    0.00 :   a636:   bswap  %esi
    0.00 :   a638:   add    %edi,%eax
    0.00 :   a63a:   add    %edx,%eax
    0.00 :   a63c:   movzbl 0xc(%rbp),%edx
    0.00 :   a640:   shr    $0x4,%dl
    0.00 :   a643:   movzbl %dl,%edx
    0.00 :   a646:   shl    $0x2,%edx
    0.00 :   a649:   sub    %edx,%eax
    0.00 :   a64b:   add    %esi,%eax
    0.00 :   a64d:   mov    %eax,0xec(%rbx)
    0.00 :   a653:   movzwl 0xe(%rbp),%eax
    0.00 :   a657:   rol    $0x8,%ax
    0.00 :   a65b:   mov    %ax,0xf0(%rbx)
    0.00 :   a662:   test   %r9d,%r9d
    0.00 :   a665:   jne    aa94 <nf_conntrack_tcp_packet+0x16c4>
    0.00 :   a66b:   test   %cl,%cl
    0.00 :   a66d:   je     aa94 <nf_conntrack_tcp_packet+0x16c4>
    0.00 :   a673:   movzwl 0x0(%rip),%r12d        # a67b <nf_conntrack_tcp_packet+0x12ab>
    0.00 :   a67b:   xor    %eax,%eax
    0.00 :   a67d:   mov    %rbp,%rdx
    0.00 :   a680:   mov    %r14d,%esi
    0.00 :   a683:   lea    0x7c(%rsp),%rdi
    0.00 :   a688:   mov    $0x5,%ecx
    0.00 :   a68d:   rep stos %eax,%es:(%rdi)
    0.00 :   a68f:   mov    %r12w,0xf2(%rbx)
    0.00 :   a697:   lea    0x7c(%rsp),%rcx
    0.00 :   a69c:   mov    %r13,%rdi
    0.00 :   a69f:   call   90c0 <tcp_options>
    0.00 :   a6a4:   movzbl 0x8d(%rsp),%ecx
    0.00 :   a6ac:   test   $0x1,%cl
    0.00 :   a6af:   je     a6ce <nf_conntrack_tcp_packet+0x12fe>
    0.00 :   a6b1:   movzbl 0xf3(%rbx),%edx
    0.00 :   a6b8:   mov    %r12d,%eax
    0.00 :   a6bb:   mov    0x8c(%rsp),%al
    0.00 :   a6c2:   or     $0x1,%edx
    0.00 :   a6c5:   mov    %dl,%ah
    0.00 :   a6c7:   mov    %ax,0xf2(%rbx)
    0.00 :   a6ce:   and    $0x2,%cl
    0.00 :   a6d1:   je     a6da <nf_conntrack_tcp_packet+0x130a>
    0.00 :   a6d3:   orb    $0x2,0xf3(%rbx)
    0.00 :   a6da:   cmpl   $0x6,0x4(%rsp)
    0.00 :   a6df:   jne    a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   a6e1:   orb    $0x40,0xf3(%rbx)
    0.00 :   a6e8:   mov    0x28(%rsp),%rdi
    0.00 :   a6ed:   call   a6f2 <nf_conntrack_tcp_packet+0x1322>
    0.00 :   a6f2:   push   0x0(,%r15,8)
    0.00 :   a6fa:   mov    0x2c(%rsp),%r9d
    0.00 :   a6ff:   mov    %r13,%rdi
    0.00 :   a702:   mov    0x24(%rsp),%r8d
    0.00 :   a707:   mov    $0x0,%rcx
    0.00 :   a70e:   mov    %rbx,%rsi
    0.00 :   a711:   mov    0x18(%rsp),%rdx
    0.00 :   a716:   call   a71b <nf_conntrack_tcp_packet+0x134b>
    0.00 :   a71b:   pop    %r13
    0.00 :   a71d:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   a722:   mov    %r15d,0xb8(%rcx)
    0.00 :   a729:   mov    %r15d,%esi
    0.00 :   a72c:   movzbl 0xd(%rbp),%ecx
    0.00 :   a730:   mov    0xbc(%r12),%edx
    0.00 :   a738:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    1.35 :   a73d:   movzbl 0xe1(%rbx),%eax // [nf_conntrack][a73d]
    1.35 :   a744:   cmp    %eax,0x24(%rsp) // [nf_conntrack][a744]
    0.00 :   a748:   je     a84c <nf_conntrack_tcp_packet+0x147c>
    0.00 :   a74e:   mov    0x18(%rsp),%eax
    1.71 :   a752:   mov    %esi,0xe8(%rbx) // [nf_conntrack][a752]
    0.00 :   a758:   movb   $0x0,0xe2(%rbx)
    0.00 :   a75f:   mov    %eax,0xe4(%rbx)
    0.00 :   a765:   mov    0x8(%rsp),%eax
    0.00 :   a769:   mov    %eax,0xec(%rbx)
    0.00 :   a76f:   movzwl 0x5e(%rsp),%eax
    0.00 :   a774:   mov    %ax,0xf0(%rbx)
    0.00 :   a77b:   jmp    9ec8 <nf_conntrack_tcp_packet+0xaf8>
    1.04 :   a780:   cmpl   $0xa080101,(%rax) // [nf_conntrack][a780]
    0.00 :   a786:   jne    9f76 <nf_conntrack_tcp_packet+0xba6>
    0.00 :   a78c:   jmp    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a791:   mov    0x30(%rsp),%rax
    0.00 :   a796:   mov    0xb74(%rax),%r12d
    0.00 :   a79d:   jmp    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   a7a2:   mov    0x28(%rsp),%rdi
    0.00 :   a7a7:   call   a7ac <nf_conntrack_tcp_packet+0x13dc>
    0.00 :   a7ac:   push   0x0(,%r15,8)
    0.00 :   a7b4:   mov    0x2c(%rsp),%r9d
    0.00 :   a7b9:   mov    %rbx,%rsi
    0.00 :   a7bc:   mov    0x24(%rsp),%r8d
    0.00 :   a7c1:   mov    $0x0,%rcx
    0.00 :   a7c8:   mov    %r13,%rdi
    0.00 :   a7cb:   mov    0x18(%rsp),%rdx
    0.00 :   a7d0:   call   a7d5 <nf_conntrack_tcp_packet+0x1405>
    0.00 :   a7d5:   pop    %rbx
    0.00 :   a7d6:   or     $0xffffffff,%eax
    0.00 :   a7d9:   jmp    9a8d <nf_conntrack_tcp_packet+0x6bd>
    0.00 :   a7de:   movl   $0x4,0x1c(%rsp)
    0.00 :   a7e6:   movl   $0x8,0x20(%rsp)
    0.00 :   a7ee:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a7f3:   test   %r13,%r13
    0.00 :   a7f6:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a7fc:   mov    %r15d,%ecx
    0.00 :   a7ff:   lea    0x90(%rsp),%rdx
    0.00 :   a807:   mov    %r13,%rdi
    0.00 :   a80a:   mov    %r9d,0x60(%rsp)
    0.00 :   a80f:   mov    %r8,0x48(%rsp)
    0.00 :   a814:   mov    %r10,0x40(%rsp)
    0.00 :   a819:   mov    %r11d,0x50(%rsp)
    0.00 :   a81e:   call   a823 <nf_conntrack_tcp_packet+0x1453>
    0.00 :   a823:   mov    0x50(%rsp),%r11d
    0.00 :   a828:   mov    0x40(%rsp),%r10
    0.00 :   a82d:   test   %eax,%eax
    0.00 :   a82f:   mov    0x48(%rsp),%r8
    0.00 :   a834:   mov    0x60(%rsp),%r9d
    0.00 :   a839:   js     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a83f:   lea    0x90(%rsp),%rax
    0.00 :   a847:   jmp    9f63 <nf_conntrack_tcp_packet+0xb93>
    0.91 :   a84c:   mov    0x18(%rsp),%eax // [nf_conntrack][a84c]
    0.00 :   a850:   cmp    0xe4(%rbx),%eax
    0.00 :   a856:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a85c:   cmp    0xe8(%rbx),%esi
    0.00 :   a862:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a868:   mov    0x8(%rsp),%eax
    0.00 :   a86c:   cmp    0xec(%rbx),%eax
    0.00 :   a872:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a878:   movzwl 0x5e(%rsp),%eax
    0.00 :   a87d:   cmp    0xf0(%rbx),%ax
    0.00 :   a884:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a88a:   addb   $0x1,0xe2(%rbx)
    0.00 :   a891:   jmp    9ec8 <nf_conntrack_tcp_packet+0xaf8>
    0.00 :   a896:   mov    $0x4,%esi
    0.00 :   a89b:   call   a8a0 <nf_conntrack_tcp_packet+0x14d0>
    0.00 :   a8a0:   jmp    9b91 <nf_conntrack_tcp_packet+0x7c1>
    0.00 :   a8a5:   movzbl 0xe3(%rbx),%edi
    0.00 :   a8ac:   test   %dil,%dil
    0.00 :   a8af:   je     a982 <nf_conntrack_tcp_packet+0x15b2>
    0.00 :   a8b5:   mov    0x4(%rbp),%edx
    0.00 :   a8b8:   mov    %edx,%r11d
    0.00 :   a8bb:   mov    %edx,0x58(%rsp)
    0.00 :   a8bf:   bswap  %r11d
    0.00 :   a8c2:   mov    %r11d,0x18(%rsp)
    0.00 :   a8c7:   test   %edx,%edx
    0.00 :   a8c9:   je     a9a1 <nf_conntrack_tcp_packet+0x15d1>
    0.00 :   a8cf:   mov    0xc4(%rax),%eax
    0.00 :   a8d5:   cmp    %eax,0x18(%rsp)
    0.00 :   a8d9:   jns    a8ed <nf_conntrack_tcp_packet+0x151d>
    0.00 :   a8db:   mov    0x30(%rsp),%rdx
    0.00 :   a8e0:   cmpb   $0x0,0xb8f(%rdx)
    0.00 :   a8e7:   je     aa1e <nf_conntrack_tcp_packet+0x164e>
    0.00 :   a8ed:   movl   $0x4,0x1c(%rsp)
    0.00 :   a8f5:   movl   $0x8,0x20(%rsp)
    0.00 :   a8fd:   cmp    $0x3,%cl
    0.00 :   a900:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a906:   mov    0x80(%rbx),%rcx
    0.00 :   a90d:   and    $0x4,%ecx
    0.00 :   a910:   je     a91c <nf_conntrack_tcp_packet+0x154c>
    0.00 :   a912:   cmp    %eax,0x18(%rsp)
    0.00 :   a916:   jne    a9c3 <nf_conntrack_tcp_packet+0x15f3>
    0.00 :   a91c:   movl   $0x4,0x1c(%rsp)
    0.00 :   a924:   movl   $0x8,0x20(%rsp)
    0.00 :   a92c:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a931:   mov    $0x7,%esi
    0.00 :   a936:   mov    %r10,0x8(%rsp)
    0.00 :   a93b:   call   a940 <nf_conntrack_tcp_packet+0x1570>
    0.00 :   a940:   mov    0x8(%rsp),%r10
    0.00 :   a945:   jmp    a358 <nf_conntrack_tcp_packet+0xf88>
    0.00 :   a94a:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   a951:   movl   $0x8,0x20(%rsp)
    0.00 :   a959:   jne    a585 <nf_conntrack_tcp_packet+0x11b5>
    0.00 :   a95f:   mov    0x8(%rbp),%eax
    0.00 :   a962:   bswap  %eax
    0.00 :   a964:   cmp    0xec(%rbx),%eax
    0.00 :   a96a:   jne    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a970:   movl   $0x4,0x1c(%rsp)
    0.00 :   a978:   movzbl 0x20(%rsp),%eax
    0.00 :   a97d:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a982:   mov    0x80(%rbx),%rax
    0.00 :   a989:   movl   $0x8,0x20(%rsp)
    0.00 :   a991:   test   $0x2,%al
    0.00 :   a993:   jne    a95f <nf_conntrack_tcp_packet+0x158f>
    0.00 :   a995:   mov    0x80(%rbx),%rax
    0.00 :   a99c:   jmp    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a9a1:   cmp    $0x3,%cl
    0.00 :   a9a4:   je     a9ec <nf_conntrack_tcp_packet+0x161c>
    0.00 :   a9a6:   movl   $0x0,0x18(%rsp)
    0.00 :   a9ae:   movl   $0x4,0x1c(%rsp)
    0.00 :   a9b6:   movl   $0x8,0x20(%rsp)
    0.00 :   a9be:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a9c3:   cmp    $0x3,%dil
    0.00 :   a9c7:   je     aa44 <nf_conntrack_tcp_packet+0x1674>
    0.00 :   a9c9:   mov    0x80(%rbx),%rax
    0.00 :   a9d0:   mov    0x4(%rsp),%eax
    0.00 :   a9d4:   mov    %eax,0x20(%rsp)
    0.00 :   a9d8:   jmp    a585 <nf_conntrack_tcp_packet+0x11b5>
    0.00 :   a9dd:   mov    $0x4,%esi
    0.00 :   a9e2:   call   a9e7 <nf_conntrack_tcp_packet+0x1617>
    0.00 :   a9e7:   jmp    9cc0 <nf_conntrack_tcp_packet+0x8f0>
    0.00 :   a9ec:   mov    0x80(%rbx),%rax
    0.00 :   a9f3:   test   $0x4,%al
    0.00 :   a9f5:   je     aa6f <nf_conntrack_tcp_packet+0x169f>
    0.00 :   a9f7:   imul   $0x14,%r8,%rax
    0.00 :   a9fb:   mov    0xc4(%rbx,%rax,1),%eax
    0.00 :   aa02:   mov    %eax,%ecx
    0.00 :   aa04:   neg    %ecx
    0.00 :   aa06:   jns    a906 <nf_conntrack_tcp_packet+0x1536>
    0.00 :   aa0c:   mov    0x30(%rsp),%rcx
    0.00 :   aa11:   cmpb   $0x0,0xb8f(%rcx)
    0.00 :   aa18:   jne    a906 <nf_conntrack_tcp_packet+0x1536>
    0.00 :   aa1e:   mov    0x28(%rsp),%rdi
    0.00 :   aa23:   call   aa28 <nf_conntrack_tcp_packet+0x1658>
    0.00 :   aa28:   mov    0x10(%rsp),%rdx
    0.00 :   aa2d:   mov    %rbx,%rsi
    0.00 :   aa30:   mov    %r13,%rdi
    0.00 :   aa33:   mov    $0x0,%rcx
    0.00 :   aa3a:   call   aa3f <nf_conntrack_tcp_packet+0x166f>
    0.00 :   aa3f:   jmp    a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   aa44:   movzbl 0x5d(%rsp),%eax
    0.00 :   aa49:   cmp    %al,0xe1(%rbx)
    0.00 :   aa4f:   jne    a9c9 <nf_conntrack_tcp_packet+0x15f9>
    0.00 :   aa55:   mov    0x18(%rsp),%eax
    0.00 :   aa59:   cmp    %eax,0xec(%rbx)
    0.00 :   aa5f:   jne    a9c9 <nf_conntrack_tcp_packet+0x15f9>
    0.00 :   aa65:   jmp    a91c <nf_conntrack_tcp_packet+0x154c>
    0.00 :   aa6a:   call   aa6f <nf_conntrack_tcp_packet+0x169f>
    0.00 :   aa6f:   xor    %r11d,%r11d
    0.00 :   aa72:   movl   $0x4,0x1c(%rsp)
    0.00 :   aa7a:   mov    %r11d,0x18(%rsp)
    0.00 :   aa7f:   movl   $0x3,0x4(%rsp)
    0.00 :   aa87:   movl   $0x8,0x20(%rsp)
    0.00 :   aa8f:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   aa94:   cmpl   $0x1,0x4(%rsp)
    0.00 :   aa99:   sete   %al
    0.00 :   aa9c:   test   %al,0x5d(%rsp)
    0.00 :   aaa0:   je     a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   aaa6:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   aaab:   jne    a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   aab1:   mov    0x8(%rbp),%eax
    0.00 :   aab4:   bswap  %eax
    0.00 :   aab6:   mov    %eax,0xe8(%rbx)
    0.00 :   aabc:   jmp    a6e8 <nf_conntrack_tcp_packet+0x1318>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   48.29 libc.so.6[9aec2]
   13.99 libc.so.6[9ae9c]
   12.40 libc.so.6[9ad50]
   11.39 libc.so.6[9ad66]
    3.70 libc.so.6[9af08]
    3.48 libc.so.6[9addc]
    1.81 libc.so.6[9adc7]
    1.62 libc.so.6[9add0]
    1.31 libc.so.6[9aead]
    1.31 libc.so.6[9adfb]
    0.69 libc.so.6[9ad7f]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (65 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000009ad50 <__libc_malloc>:
         : 6     __GI___libc_malloc():
   12.40 :   9ad50:  endbr64 // libc.so.6[9ad50]
    0.00 :   9ad54:  push   %r12
    0.00 :   9ad56:  push   %rbp
    0.00 :   9ad57:  push   %rbx
    0.00 :   9ad58:  mov    %rdi,%rbx
    0.00 :   9ad5b:  sub    $0x10,%rsp
    0.00 :   9ad5f:  cmpb   $0x0,0x13f742(%rip)        # 1da4a8 <__malloc_initialized>
   11.39 :   9ad66:  je     9af68 <__libc_malloc+0x218> // libc.so.6[9ad66]
    0.00 :   9ad6c:  test   %rbx,%rbx
    0.00 :   9ad6f:  js     9af76 <__libc_malloc+0x226>
    0.00 :   9ad75:  lea    0x17(%rbx),%rax
    0.00 :   9ad79:  xor    %ebp,%ebp
    0.00 :   9ad7b:  cmp    $0x1f,%rax
    0.69 :   9ad7f:  jbe    9ad8d <__libc_malloc+0x3d> // libc.so.6[9ad7f]
    0.00 :   9ad81:  and    $0xfffffffffffffff0,%rax
    0.00 :   9ad85:  lea    -0x11(%rax),%rbp
    0.00 :   9ad89:  shr    $0x4,%rbp
    0.00 :   9ad8d:  mov    0x138014(%rip),%r12        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9ad94:  mov    %fs:(%r12),%rdx
    0.00 :   9ad99:  test   %rdx,%rdx
    0.00 :   9ad9c:  je     9ae60 <__libc_malloc+0x110>
    0.00 :   9ada2:  cmp    0x13861f(%rip),%rbp        # 1d33c8 <mp_+0x68>
    0.00 :   9ada9:  jb     9ae98 <__libc_malloc+0x148>
    0.00 :   9adaf:  cmpb   $0x0,0x140842(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   9adb6:  jne    9aee0 <__libc_malloc+0x190>
    0.00 :   9adbc:  mov    0x137fdd(%rip),%rax        # 1d2da0 <_DYNAMIC+0x220>
    0.00 :   9adc3:  mov    %fs:(%rax),%rbp
    1.81 :   9adc7:  test   %rbp,%rbp // libc.so.6[9adc7]
    0.00 :   9adca:  je     9af90 <__libc_malloc+0x240>
    1.62 :   9add0:  xor    %eax,%eax // libc.so.6[9add0]
    0.00 :   9add2:  mov    $0x1,%edx
    0.00 :   9add7:  lock cmpxchg %edx,0x0(%rbp)
    3.48 :   9addc:  jne    9b020 <__libc_malloc+0x2d0> // libc.so.6[9addc]
    0.00 :   9ade2:  mov    %rbx,%rsi
    0.00 :   9ade5:  mov    %rbp,%rdi
    0.00 :   9ade8:  call   99760 <_int_malloc>
    0.00 :   9aded:  test   %rax,%rax
    0.00 :   9adf0:  je     9afd0 <__libc_malloc+0x280>
    0.00 :   9adf6:  xor    %edx,%edx
    0.00 :   9adf8:  xchg   %edx,0x0(%rbp)
    1.31 :   9adfb:  cmp    $0x1,%edx // libc.so.6[9adfb]
    0.00 :   9adfe:  jg     9b030 <__libc_malloc+0x2e0>
    0.00 :   9ae04:  test   %rax,%rax
    0.00 :   9ae07:  je     9af84 <__libc_malloc+0x234>
    0.00 :   9ae0d:  mov    -0x8(%rax),%rdx
    0.00 :   9ae11:  test   $0x2,%dl
    0.00 :   9ae14:  jne    9ae55 <__libc_malloc+0x105>
    0.00 :   9ae16:  and    $0x4,%edx
    0.00 :   9ae19:  lea    0x138e60(%rip),%rcx        # 1d3c80 <main_arena>
    0.00 :   9ae20:  je     9ae4c <__libc_malloc+0xfc>
    0.00 :   9ae22:  mov    0x138567(%rip),%rcx        # 1d3390 <mp_+0x30>
    0.00 :   9ae29:  lea    0x0(,%rcx,4),%rdx
    0.00 :   9ae31:  neg    %rdx
    0.00 :   9ae34:  test   %rcx,%rcx
    0.00 :   9ae37:  mov    $0xfffffffffc000000,%rcx
    0.00 :   9ae3e:  cmove  %rcx,%rdx
    0.00 :   9ae42:  lea    -0x10(%rax),%rcx
    0.00 :   9ae46:  and    %rcx,%rdx
    0.00 :   9ae49:  mov    (%rdx),%rcx
    0.00 :   9ae4c:  cmp    %rbp,%rcx
    0.00 :   9ae4f:  jne    9aff8 <__libc_malloc+0x2a8>
    0.00 :   9ae55:  add    $0x10,%rsp
    0.00 :   9ae59:  pop    %rbx
    0.00 :   9ae5a:  pop    %rbp
    0.00 :   9ae5b:  pop    %r12
    0.00 :   9ae5d:  ret
    0.00 :   9ae5e:  xchg   %ax,%ax
    0.00 :   9ae60:  mov    0x137f49(%rip),%rax        # 1d2db0 <_DYNAMIC+0x230>
    0.00 :   9ae67:  cmpb   $0x0,%fs:(%rax)
    0.00 :   9ae6b:  jne    9adaf <__libc_malloc+0x5f>
    0.00 :   9ae71:  call   9a650 <tcache_init.part.0>
    0.00 :   9ae76:  cmp    0x13854b(%rip),%rbp        # 1d33c8 <mp_+0x68>
    0.00 :   9ae7d:  jae    9adaf <__libc_malloc+0x5f>
    0.00 :   9ae83:  mov    %fs:(%r12),%rdx
    0.00 :   9ae88:  test   %rdx,%rdx
    0.00 :   9ae8b:  je     9adaf <__libc_malloc+0x5f>
    0.00 :   9ae91:  nopl   0x0(%rax)
    0.00 :   9ae98:  movzwl (%rdx,%rbp,2),%ecx
   13.99 :   9ae9c:  test   %cx,%cx // libc.so.6[9ae9c]
    0.00 :   9ae9f:  je     9adaf <__libc_malloc+0x5f>
    0.00 :   9aea5:  lea    0x10(%rbp),%rdi
    0.00 :   9aea9:  mov    (%rdx,%rdi,8),%rax
    1.31 :   9aead:  test   $0xf,%al // libc.so.6[9aead]
    0.00 :   9aeaf:  jne    9b050 <__libc_malloc+0x300>
    0.00 :   9aeb5:  mov    %rax,%rsi
    0.00 :   9aeb8:  sub    $0x1,%ecx
    0.00 :   9aebb:  shr    $0xc,%rsi
    0.00 :   9aebf:  xor    (%rax),%rsi
   48.29 :   9aec2:  mov    %rsi,(%rdx,%rdi,8) // libc.so.6[9aec2]
    0.00 :   9aec6:  mov    %cx,(%rdx,%rbp,2)
    0.00 :   9aeca:  movq   $0x0,0x8(%rax)
    0.00 :   9aed2:  add    $0x10,%rsp
    0.00 :   9aed6:  pop    %rbx
    0.00 :   9aed7:  pop    %rbp
    0.00 :   9aed8:  pop    %r12
    0.00 :   9aeda:  ret
    0.00 :   9aedb:  nopl   0x0(%rax,%rax,1)
    0.00 :   9aee0:  mov    %rbx,%rsi
    0.00 :   9aee3:  lea    0x138d96(%rip),%rbx        # 1d3c80 <main_arena>
    0.00 :   9aeea:  mov    %rbx,%rdi
    0.00 :   9aeed:  call   99760 <_int_malloc>
    0.00 :   9aef2:  test   %rax,%rax
    0.00 :   9aef5:  je     9af84 <__libc_malloc+0x234>
    0.00 :   9aefb:  mov    -0x8(%rax),%rdx
    0.00 :   9aeff:  test   $0x2,%dl
    0.00 :   9af02:  jne    9ae55 <__libc_malloc+0x105>
    3.70 :   9af08:  and    $0x4,%edx // libc.so.6[9af08]
    0.00 :   9af0b:  je     9ae55 <__libc_malloc+0x105>
    0.00 :   9af11:  mov    0x138478(%rip),%rcx        # 1d3390 <mp_+0x30>
    0.00 :   9af18:  lea    0x0(,%rcx,4),%rdx
    0.00 :   9af20:  neg    %rdx
    0.00 :   9af23:  test   %rcx,%rcx
    0.00 :   9af26:  mov    $0xfffffffffc000000,%rcx
    0.00 :   9af2d:  cmove  %rcx,%rdx
    0.00 :   9af31:  lea    -0x10(%rax),%rcx
    0.00 :   9af35:  and    %rcx,%rdx
    0.00 :   9af38:  cmp    %rbx,(%rdx)
    0.00 :   9af3b:  je     9ae55 <__libc_malloc+0x105>
    0.00 :   9af41:  lea    0x102800(%rip),%rcx        # 19d748 <aliasfile.0+0x1d00>
    0.00 :   9af48:  lea    0x102be1(%rip),%rdx        # 19db30 <aliasfile.0+0x20e8>
    0.00 :   9af4f:  mov    $0x1,%edi
    0.00 :   9af54:  xor    %eax,%eax
    0.00 :   9af56:  lea    0x101b73(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9af5d:  call   80df0 <__libc_message>
    0.00 :   9af62:  nopw   0x0(%rax,%rax,1)
    0.00 :   9af68:  call   97830 <ptmalloc_init.part.0>
    0.00 :   9af6d:  test   %rbx,%rbx
    0.00 :   9af70:  jns    9ad75 <__libc_malloc+0x25>
    0.00 :   9af76:  mov    0x137e93(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   9af7d:  movl   $0xc,%fs:(%rax)
    0.00 :   9af84:  add    $0x10,%rsp
    0.00 :   9af88:  xor    %eax,%eax
    0.00 :   9af8a:  pop    %rbx
    0.00 :   9af8b:  pop    %rbp
    0.00 :   9af8c:  pop    %r12
    0.00 :   9af8e:  ret
    0.00 :   9af8f:  nop
    0.00 :   9af90:  call   96ed0 <get_free_list>
    0.00 :   9af95:  mov    %rax,%rbp
    0.00 :   9af98:  test   %rax,%rax
    0.00 :   9af9b:  jne    9ade2 <__libc_malloc+0x92>
    0.00 :   9afa1:  xor    %esi,%esi
    0.00 :   9afa3:  mov    %rbx,%rdi
    0.00 :   9afa6:  call   97cd0 <arena_get2.part.0>
    0.00 :   9afab:  mov    %rbx,%rsi
    0.00 :   9afae:  mov    %rax,%rdi
    0.00 :   9afb1:  mov    %rax,%rbp
    0.00 :   9afb4:  call   99760 <_int_malloc>
    0.00 :   9afb9:  test   %rax,%rax
    0.00 :   9afbc:  jne    9afea <__libc_malloc+0x29a>
    0.00 :   9afbe:  test   %rbp,%rbp
    0.00 :   9afc1:  je     9ae04 <__libc_malloc+0xb4>
    0.00 :   9afc7:  nopw   0x0(%rax,%rax,1)
    0.00 :   9afd0:  nop
    0.00 :   9afd1:  mov    %rbp,%rdi
    0.00 :   9afd4:  mov    %rbx,%rsi
    0.00 :   9afd7:  call   98140 <arena_get_retry>
    0.00 :   9afdc:  mov    %rbx,%rsi
    0.00 :   9afdf:  mov    %rax,%rdi
    0.00 :   9afe2:  mov    %rax,%rbp
    0.00 :   9afe5:  call   99760 <_int_malloc>
    0.00 :   9afea:  test   %rbp,%rbp
    0.00 :   9afed:  je     9ae04 <__libc_malloc+0xb4>
    0.00 :   9aff3:  jmp    9adf6 <__libc_malloc+0xa6>
    0.00 :   9aff8:  lea    0x1027b1(%rip),%rcx        # 19d7b0 <aliasfile.0+0x1d68>
    0.00 :   9afff:  lea    0x102b2a(%rip),%rdx        # 19db30 <aliasfile.0+0x20e8>
    0.00 :   9b006:  mov    $0x1,%edi
    0.00 :   9b00b:  xor    %eax,%eax
    0.00 :   9b00d:  lea    0x101abc(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9b014:  call   80df0 <__libc_message>
    0.00 :   9b019:  nopl   0x0(%rax)
    0.00 :   9b020:  mov    %rbp,%rdi
    0.00 :   9b023:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   9b028:  jmp    9ade2 <__libc_malloc+0x92>
    0.00 :   9b02d:  nopl   (%rax)
    0.00 :   9b030:  mov    %rbp,%rdi
    0.00 :   9b033:  mov    %rax,0x8(%rsp)
    0.00 :   9b038:  call   87f80 <__lll_lock_wake_private>
    0.00 :   9b03d:  mov    0x8(%rsp),%rax
    0.00 :   9b042:  jmp    9ae04 <__libc_malloc+0xb4>
    0.00 :   9b047:  nopw   0x0(%rax,%rax,1)
    0.00 :   9b050:  lea    0x1025c1(%rip),%rdi        # 19d618 <aliasfile.0+0x1bd0>
    0.00 :   9b057:  call   96b80 <malloc_printerr>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   79.53 [nf_tables][16842]
   12.73 [nf_tables][167d0]
    5.42 [nf_tables][16839]
    1.29 [nf_tables][167fd]
    1.03 [nf_tables][1681f]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (61 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000167d0 <nft_immediate_eval>:
         : 6     nft_immediate_eval():
   12.73 :   167d0:  call   167d5 <nft_immediate_eval+0x5> // [nf_tables][167d0]
    0.00 :   167d5:  movzbl 0x18(%rdi),%edx
    0.00 :   167d9:  movzbl 0x19(%rdi),%ecx
    0.00 :   167dd:  mov    %rsi,%rax
    0.00 :   167e0:  lea    0x8(%rdi),%rsi
    0.00 :   167e4:  lea    (%rax,%rdx,4),%rax
    0.00 :   167e8:  test   $0x3,%cl
    0.00 :   167eb:  je     167fd <nft_immediate_eval+0x2d>
    0.00 :   167ed:  mov    %rcx,%rdx
    0.00 :   167f0:  and    $0xfc,%edx
    0.00 :   167f6:  movl   $0x0,(%rdx,%rax,1)
    1.29 :   167fd:  cmp    $0x8,%ecx // [nf_tables][167fd]
    0.00 :   16800:  jae    1681b <nft_immediate_eval+0x4b>
    0.00 :   16802:  test   $0x4,%cl
    0.00 :   16805:  jne    16847 <nft_immediate_eval+0x77>
    0.00 :   16807:  test   %ecx,%ecx
    0.00 :   16809:  je     16816 <nft_immediate_eval+0x46>
    0.00 :   1680b:  movzbl 0x8(%rdi),%edx
    0.00 :   1680f:  mov    %dl,(%rax)
    0.00 :   16811:  test   $0x2,%cl
    0.00 :   16814:  jne    16859 <nft_immediate_eval+0x89>
    0.00 :   16816:  jmp    1681b <nft_immediate_eval+0x4b>
    0.00 :   1681b:  mov    0x8(%rdi),%rdx
    1.03 :   1681f:  lea    0x8(%rax),%rdi // [nf_tables][1681f]
    0.00 :   16823:  and    $0xfffffffffffffff8,%rdi
    0.00 :   16827:  mov    %rdx,(%rax)
    0.00 :   1682a:  mov    -0x8(%rsi,%rcx,1),%rdx
    0.00 :   1682f:  mov    %rdx,-0x8(%rax,%rcx,1)
    0.00 :   16834:  sub    %rdi,%rax
    0.00 :   16837:  add    %eax,%ecx
    5.42 :   16839:  sub    %rax,%rsi // [nf_tables][16839]
    0.00 :   1683c:  shr    $0x3,%ecx
    0.00 :   1683f:  rep movsq %ds:(%rsi),%es:(%rdi)
   79.53 :   16842:  jmp    16847 <nft_immediate_eval+0x77> // [nf_tables][16842]
    0.00 :   16847:  mov    0x8(%rdi),%edx
    0.00 :   1684a:  mov    %edx,(%rax)
    0.00 :   1684c:  mov    -0x4(%rsi,%rcx,1),%edx
    0.00 :   16850:  mov    %edx,-0x4(%rax,%rcx,1)
    0.00 :   16854:  jmp    16859 <nft_immediate_eval+0x89>
    0.00 :   16859:  movzwl -0x2(%rsi,%rcx,1),%edx
    0.00 :   1685e:  mov    %dx,-0x2(%rax,%rcx,1)
    0.00 :   16863:  jmp    16868 <nft_immediate_eval+0x98>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   14.61 [nf_conntrack][3ca0]
   11.69 [nf_conntrack][3cc6]
    8.35 [nf_conntrack][3dcb]
    8.07 [nf_conntrack][3f82]
    7.85 [nf_conntrack][435d]
    6.32 [nf_conntrack][3e4b]
    6.01 [nf_conntrack][3ca7]
    5.64 [nf_conntrack][41dd]
    4.39 [nf_conntrack][3dbe]
    3.17 [nf_conntrack][3e30]
    3.12 [nf_conntrack][3ce8]
    2.41 [nf_conntrack][3cb9]
    2.40 [nf_conntrack][3dc4]
    2.20 [nf_conntrack][3f88]
    2.11 [nf_conntrack][3cb1]
    2.04 [nf_conntrack][3ea7]
    2.03 [nf_conntrack][3d6e]
    2.03 [nf_conntrack][3d2b]
    2.02 [nf_conntrack][3db6]
    1.84 [nf_conntrack][41c9]
    1.69 [nf_conntrack][4360]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (48 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003ca0 <nf_conntrack_in>:
         : 6    nf_conntrack_in():
   14.61 :   3ca0:   call   3ca5 <nf_conntrack_in+0x5> // [nf_conntrack][3ca0]
    0.00 :   3ca5:   push   %r15
    6.01 :   3ca7:   push   %r14 // [nf_conntrack][3ca7]
    0.00 :   3ca9:   mov    %rdi,%r14
    0.00 :   3cac:   push   %r13
    0.00 :   3cae:   push   %r12
    0.00 :   3cb0:   push   %rbp
    2.11 :   3cb1:   mov    %rsi,%rbp // [nf_conntrack][3cb1]
    0.00 :   3cb4:   push   %rbx
    0.00 :   3cb5:   sub    $0x50,%rsp
    2.41 :   3cb9:   mov    0x68(%rdi),%rbx // [nf_conntrack][3cb9]
    0.00 :   3cbd:   mov    %gs:0x28,%rax
   11.69 :   3cc6:   mov    %rax,0x48(%rsp) // [nf_conntrack][3cc6]
    0.00 :   3ccb:   xor    %eax,%eax
    0.00 :   3ccd:   movb   $0x0,0x1b(%rsp)
    0.00 :   3cd2:   mov    %rbx,%rcx
    0.00 :   3cd5:   mov    %ebx,%eax
    0.00 :   3cd7:   mov    %rbx,0x8(%rsp)
    0.00 :   3cdc:   and    $0xfffffffffffffff8,%rcx
    0.00 :   3ce0:   and    $0x7,%eax
    0.00 :   3ce3:   mov    %rcx,0x10(%rsp)
    3.12 :   3ce8:   cmp    $0x7,%rbx // [nf_conntrack][3ce8]
    0.00 :   3cec:   ja     4309 <nf_conntrack_in+0x669>
    0.00 :   3cf2:   mov    $0x1,%ebx
    0.00 :   3cf7:   cmp    $0x7,%eax
    0.00 :   3cfa:   je     3f8e <nf_conntrack_in+0x2ee>
    0.00 :   3d00:   movzbl 0x1(%rbp),%edx
    0.00 :   3d04:   movzwl 0xb8(%r14),%esi
    0.00 :   3d0c:   lea    0x1b(%rsp),%rcx
    0.00 :   3d11:   mov    %r14,%rdi
    0.00 :   3d14:   add    0xc8(%r14),%rsi
    0.00 :   3d1b:   sub    0xd0(%r14),%esi
    0.00 :   3d22:   call   930 <get_l4proto>
    0.00 :   3d27:   mov    %eax,0x4(%rsp)
    2.03 :   3d2b:   test   %eax,%eax // [nf_conntrack][3d2b]
    0.00 :   3d2d:   jle    3f69 <nf_conntrack_in+0x2c9>
    0.00 :   3d33:   movzbl 0x1b(%rsp),%r8d
    0.00 :   3d39:   movzbl 0x1(%rbp),%edx
    0.00 :   3d3d:   cmp    $0x3a,%r8b
    0.00 :   3d41:   sete   %al
    0.00 :   3d44:   cmp    $0x1,%r8b
    0.00 :   3d48:   je     3d4e <nf_conntrack_in+0xae>
    0.00 :   3d4e:   test   %al,%al
    0.00 :   3d50:   jne    3d56 <nf_conntrack_in+0xb6>
    0.00 :   3d56:   lea    0x20(%rsp),%rbx
    0.00 :   3d5b:   movzbl 0x1(%rbp),%ecx
    0.00 :   3d5f:   movzwl 0xb8(%r14),%esi
    0.00 :   3d67:   movq   $0x0,(%rbx)
    2.03 :   3d6e:   mov    %r14,%rdi // [nf_conntrack][3d6e]
    0.00 :   3d71:   add    0xc8(%r14),%rsi
    0.00 :   3d78:   movq   $0x0,0x8(%rbx)
    0.00 :   3d80:   movq   $0x0,0x10(%rbx)
    0.00 :   3d88:   movq   $0x0,0x18(%rbx)
    0.00 :   3d90:   movq   $0x0,0x20(%rbx)
    0.00 :   3d98:   movl   $0x0,0x1c(%rsp)
    0.00 :   3da0:   push   %rbx
    0.00 :   3da1:   mov    0x20(%rbp),%r9
    0.00 :   3da5:   mov    0xc(%rsp),%edx
    0.00 :   3da9:   sub    0xd0(%r14),%esi
    0.00 :   3db0:   call   6b0 <nf_ct_get_tuple>
    0.00 :   3db5:   pop    %rcx
    2.02 :   3db6:   test   %al,%al // [nf_conntrack][3db6]
    0.00 :   3db8:   je     403e <nf_conntrack_in+0x39e>
    4.39 :   3dbe:   cmpq   $0x7,0x8(%rsp) // [nf_conntrack][3dbe]
    2.40 :   3dc4:   movzbl 0x0(%rip),%eax        # 3dcb <nf_conntrack_in+0x12b> // [nf_conntrack][3dc4]
    8.35 :   3dcb:   mov    $0x0,%r12 // [nf_conntrack][3dcb]
    0.00 :   3dd2:   jbe    3e01 <nf_conntrack_in+0x161>
    0.00 :   3dd4:   mov    0x10(%rsp),%rdi
    0.00 :   3dd9:   movzbl 0xf(%rdi),%eax
    0.00 :   3ddd:   lea    0xc(%rdi),%r12
    0.00 :   3de1:   testb  $0x1,0xe(%rdi)
    0.00 :   3de5:   je     3e01 <nf_conntrack_in+0x161>
    0.00 :   3de7:   mov    0xa8(%r14),%edx
    0.00 :   3dee:   movb   $0x0,0x1e(%rsp)
    0.00 :   3df3:   lea    0x1c(%rsp),%r12
    0.00 :   3df8:   mov    %al,0x1f(%rsp)
    0.00 :   3dfc:   mov    %dx,0x1c(%rsp)
    0.00 :   3e01:   xor    %r15d,%r15d
    0.00 :   3e04:   test   $0x1,%al
    0.00 :   3e06:   je     3e0d <nf_conntrack_in+0x16d>
    0.00 :   3e08:   movzwl (%r12),%r15d
    0.00 :   3e0d:   mov    0x20(%rbp),%rdx
    0.00 :   3e11:   mov    %r15d,%esi
    0.00 :   3e14:   mov    %rbx,%rdi
    0.00 :   3e17:   call   3c0 <hash_conntrack_raw>
    0.00 :   3e1c:   mov    0x20(%rbp),%rdi
    0.00 :   3e20:   mov    %rbx,%rdx
    0.00 :   3e23:   mov    %r12,%rsi
    0.00 :   3e26:   mov    %eax,%ecx
    0.00 :   3e28:   mov    %eax,%r13d
    0.00 :   3e2b:   call   32c0 <__nf_conntrack_find_get>
    3.17 :   3e30:   test   %rax,%rax // [nf_conntrack][3e30]
    0.00 :   3e33:   je     40be <nf_conntrack_in+0x41e>
    0.00 :   3e39:   movzbl 0x37(%rax),%esi
    0.00 :   3e3d:   lea    0x0(,%rsi,8),%rdx
    0.00 :   3e45:   mov    %rsi,%rcx
    0.00 :   3e48:   sub    %rsi,%rdx
    6.32 :   3e4b:   mov    $0x3,%esi // [nf_conntrack][3e4b]
    0.00 :   3e50:   shl    $0x3,%rdx
    0.00 :   3e54:   sub    %rdx,%rax
    0.00 :   3e57:   lea    -0x10(%rax),%r12
    0.00 :   3e5b:   cmp    $0x1,%cl
    0.00 :   3e5e:   je     3e78 <nf_conntrack_in+0x1d8>
    0.00 :   3e60:   mov    0x80(%r12),%rdx
    0.00 :   3e68:   and    $0x2,%edx
    0.00 :   3e6b:   je     409f <nf_conntrack_in+0x3ff>
    0.00 :   3e71:   nopl   0x0(%rax,%rax,1)
    0.00 :   3e76:   xor    %esi,%esi
    0.00 :   3e78:   movzbl 0x84(%r14),%ecx
    0.00 :   3e80:   mov    %r12,%rax
    0.00 :   3e83:   mov    %ecx,%edx
    0.00 :   3e85:   shr    $0x3,%dl
    0.00 :   3e88:   and    $0x1,%edx
    0.00 :   3e8b:   or     %rsi,%rax
    0.00 :   3e8e:   setne  %sil
    0.00 :   3e92:   and    $0xfffffff7,%ecx
    0.00 :   3e95:   mov    %rax,0x68(%r14)
    0.00 :   3e99:   or     %esi,%edx
    0.00 :   3e9b:   shl    $0x3,%edx
    0.00 :   3e9e:   or     %edx,%ecx
    0.00 :   3ea0:   mov    %cl,0x84(%r14)
    2.04 :   3ea7:   mov    %eax,%r12d // [nf_conntrack][3ea7]
    0.00 :   3eaa:   mov    %rax,%r15
    0.00 :   3ead:   and    $0x7,%r12d
    0.00 :   3eb1:   and    $0xfffffffffffffff8,%r15
    0.00 :   3eb5:   cmp    $0x7,%rax
    0.00 :   3eb9:   jbe    3f6e <nf_conntrack_in+0x2ce>
    0.00 :   3ebf:   movzbl 0x46(%r15),%eax
    0.00 :   3ec4:   cmp    $0x2f,%al
    0.00 :   3ec6:   je     4186 <nf_conntrack_in+0x4e6>
    0.00 :   3ecc:   ja     3fdc <nf_conntrack_in+0x33c>
    0.00 :   3ed2:   cmp    $0x11,%al
    0.00 :   3ed4:   je     4169 <nf_conntrack_in+0x4c9>
    0.00 :   3eda:   ja     3fb7 <nf_conntrack_in+0x317>
    0.00 :   3ee0:   cmp    $0x1,%al
    0.00 :   3ee2:   je     4236 <nf_conntrack_in+0x596>
    0.00 :   3ee8:   cmp    $0x6,%al
    0.00 :   3eea:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   3ef0:   mov    0x4(%rsp),%edx
    0.00 :   3ef4:   mov    %rbp,%r8
    0.00 :   3ef7:   mov    %r12d,%ecx
    0.00 :   3efa:   mov    %r14,%rsi
    0.00 :   3efd:   mov    %r15,%rdi
    0.00 :   3f00:   call   3f05 <nf_conntrack_in+0x265>
    0.00 :   3f05:   mov    %eax,%r13d
    0.00 :   3f08:   test   %r13d,%r13d
    0.00 :   3f0b:   jg     435d <nf_conntrack_in+0x6bd>
    0.00 :   3f11:   nopl   0x0(%rax,%rax,1)
    0.00 :   3f16:   mov    $0xffffffff,%eax
    0.00 :   3f1b:   lock xadd %eax,(%r15)
    0.00 :   3f20:   cmp    $0x1,%eax
    0.00 :   3f23:   je     404c <nf_conntrack_in+0x3ac>
    0.00 :   3f29:   test   %eax,%eax
    0.00 :   3f2b:   jle    4148 <nf_conntrack_in+0x4a8>
    0.00 :   3f31:   movq   $0x0,0x68(%r14)
    0.00 :   3f39:   cmp    $0xfffffffc,%r13d
    0.00 :   3f3d:   jne    4066 <nf_conntrack_in+0x3c6>
    0.00 :   3f43:   movzbl 0x1b(%rsp),%r8d
    0.00 :   3f49:   jmp    3d5b <nf_conntrack_in+0xbb>
    0.00 :   3f4e:   mov    %r12,%rdx
    0.00 :   3f51:   mov    $0x0,%rsi
    0.00 :   3f58:   mov    $0x0,%rdi
    0.00 :   3f5f:   call   3f64 <nf_conntrack_in+0x2c4>
    0.00 :   3f64:   jmp    3e76 <nf_conntrack_in+0x1d6>
    0.00 :   3f69:   nopl   0x0(%rax,%rax,1)
    0.00 :   3f6e:   mov    0x20(%rbp),%rax
    0.00 :   3f72:   mov    0xb40(%rax),%rax
    0.00 :   3f79:   incl   %gs:0x4(%rax)
    0.00 :   3f7d:   mov    $0x1,%ebx
    8.07 :   3f82:   cmpq   $0x7,0x8(%rsp) // [nf_conntrack][3f82]
    2.20 :   3f88:   ja     42da <nf_conntrack_in+0x63a> // [nf_conntrack][3f88]
    0.00 :   3f8e:   mov    0x48(%rsp),%rax
    0.00 :   3f93:   sub    %gs:0x28,%rax
    0.00 :   3f9c:   jne    4374 <nf_conntrack_in+0x6d4>
    0.00 :   3fa2:   add    $0x50,%rsp
    0.00 :   3fa6:   mov    %ebx,%eax
    0.00 :   3fa8:   pop    %rbx
    0.00 :   3fa9:   pop    %rbp
    0.00 :   3faa:   pop    %r12
    0.00 :   3fac:   pop    %r13
    0.00 :   3fae:   pop    %r14
    0.00 :   3fb0:   pop    %r15
    0.00 :   3fb2:   jmp    3fb7 <nf_conntrack_in+0x317>
    0.00 :   3fb7:   cmp    $0x21,%al
    0.00 :   3fb9:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   3fbf:   mov    0x4(%rsp),%edx
    0.00 :   3fc3:   mov    %rbp,%r8
    0.00 :   3fc6:   mov    %r12d,%ecx
    0.00 :   3fc9:   mov    %r14,%rsi
    0.00 :   3fcc:   mov    %r15,%rdi
    0.00 :   3fcf:   call   3fd4 <nf_conntrack_in+0x334>
    0.00 :   3fd4:   mov    %eax,%r13d
    0.00 :   3fd7:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   3fdc:   cmp    $0x84,%al
    0.00 :   3fde:   je     424f <nf_conntrack_in+0x5af>
    0.00 :   3fe4:   cmp    $0x88,%al
    0.00 :   3fe6:   jne    4005 <nf_conntrack_in+0x365>
    0.00 :   3fe8:   mov    0x4(%rsp),%edx
    0.00 :   3fec:   mov    %rbp,%r8
    0.00 :   3fef:   mov    %r12d,%ecx
    0.00 :   3ff2:   mov    %r14,%rsi
    0.00 :   3ff5:   mov    %r15,%rdi
    0.00 :   3ff8:   call   3ffd <nf_conntrack_in+0x35d>
    0.00 :   3ffd:   mov    %eax,%r13d
    0.00 :   4000:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4005:   cmp    $0x3a,%al
    0.00 :   4007:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   400d:   mov    %rbp,%rcx
    0.00 :   4010:   mov    %r12d,%edx
    0.00 :   4013:   mov    %r14,%rsi
    0.00 :   4016:   mov    %r15,%rdi
    0.00 :   4019:   call   401e <nf_conntrack_in+0x37e>
    0.00 :   401e:   mov    %eax,%r13d
    0.00 :   4021:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4026:   mov    $0x0,%rsi
    0.00 :   402d:   mov    $0x0,%rdi
    0.00 :   4034:   call   4039 <nf_conntrack_in+0x399>
    0.00 :   4039:   jmp    3f16 <nf_conntrack_in+0x276>
    0.00 :   403e:   nopl   0x0(%rax,%rax,1)
    0.00 :   4043:   mov    0x68(%r14),%rax
    0.00 :   4047:   jmp    3ea7 <nf_conntrack_in+0x207>
    0.00 :   404c:   mov    %r15,%rdi
    0.00 :   404f:   call   4054 <nf_conntrack_in+0x3b4>
    0.00 :   4054:   movq   $0x0,0x68(%r14)
    0.00 :   405c:   cmp    $0xfffffffc,%r13d
    0.00 :   4060:   je     3f43 <nf_conntrack_in+0x2a3>
    0.00 :   4066:   mov    0x20(%rbp),%rax
    0.00 :   406a:   mov    0xb40(%rax),%rax
    0.00 :   4071:   incl   %gs:0x4(%rax)
    0.00 :   4075:   test   %r13d,%r13d
    0.00 :   4078:   jne    4089 <nf_conntrack_in+0x3e9>
    0.00 :   407a:   mov    0x20(%rbp),%rax
    0.00 :   407e:   mov    0xb40(%rax),%rax
    0.00 :   4085:   incl   %gs:0x14(%rax)
    0.00 :   4089:   mov    %r13d,%ebx
    0.00 :   408c:   neg    %ebx
    0.00 :   408e:   cmpq   $0x7,0x8(%rsp)
    0.00 :   4094:   jbe    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   409a:   jmp    42da <nf_conntrack_in+0x63a>
    0.00 :   409f:   mov    0x80(%r12),%rax
    0.00 :   40a7:   test   $0x1,%al
    0.00 :   40a9:   je     415a <nf_conntrack_in+0x4ba>
    0.00 :   40af:   nopl   0x0(%rax,%rax,1)
    0.00 :   40b4:   mov    $0x1,%esi
    0.00 :   40b9:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   40be:   xor    %esi,%esi
    0.00 :   40c0:   testb  $0x2,0x3(%r12)
    0.00 :   40c6:   je     40cd <nf_conntrack_in+0x42d>
    0.00 :   40c8:   movzwl (%r12),%esi
    0.00 :   40cd:   mov    0x20(%rbp),%rdi
    0.00 :   40d1:   cmp    %r15d,%esi
    0.00 :   40d4:   jne    426c <nf_conntrack_in+0x5cc>
    0.00 :   40da:   mov    0x10(%rsp),%rsi
    0.00 :   40df:   mov    %r13d,%r8d
    0.00 :   40e2:   mov    %r14,%rcx
    0.00 :   40e5:   mov    %rbx,%rdx
    0.00 :   40e8:   call   1fd0 <init_conntrack.constprop.0>
    0.00 :   40ed:   test   %rax,%rax
    0.00 :   40f0:   je     4043 <nf_conntrack_in+0x3a3>
    0.00 :   40f6:   cmp    $0xfffffffffffff000,%rax
    0.00 :   40fc:   jbe    3e39 <nf_conntrack_in+0x199>
    0.00 :   4102:   test   %eax,%eax
    0.00 :   4104:   jns    4043 <nf_conntrack_in+0x3a3>
    0.00 :   410a:   mov    0x20(%rbp),%rax
    0.00 :   410e:   mov    0xb40(%rax),%rax
    0.00 :   4115:   incl   %gs:0x14(%rax)
    0.00 :   4119:   xor    %ebx,%ebx
    0.00 :   411b:   cmpq   $0x7,0x8(%rsp)
    0.00 :   4121:   jbe    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   4127:   jmp    42da <nf_conntrack_in+0x63a>
    0.00 :   412c:   mov    $0x0,%rsi
    0.00 :   4133:   mov    $0x0,%rdi
    0.00 :   413a:   call   413f <nf_conntrack_in+0x49f>
    0.00 :   413f:   mov    0x68(%r14),%rax
    0.00 :   4143:   jmp    3ea7 <nf_conntrack_in+0x207>
    0.00 :   4148:   mov    $0x3,%esi
    0.00 :   414d:   mov    %r15,%rdi
    0.00 :   4150:   call   4155 <nf_conntrack_in+0x4b5>
    0.00 :   4155:   jmp    3f31 <nf_conntrack_in+0x291>
    0.00 :   415a:   nopl   0x0(%rax,%rax,1)
    0.00 :   415f:   mov    $0x2,%esi
    0.00 :   4164:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   4169:   mov    0x4(%rsp),%edx
    0.00 :   416d:   mov    %rbp,%r8
    0.00 :   4170:   mov    %r12d,%ecx
    0.00 :   4173:   mov    %r14,%rsi
    0.00 :   4176:   mov    %r15,%rdi
    0.00 :   4179:   call   417e <nf_conntrack_in+0x4de>
    0.00 :   417e:   mov    %eax,%r13d
    0.00 :   4181:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4186:   mov    0x4(%rsp),%edx
    0.00 :   418a:   mov    %rbp,%r8
    0.00 :   418d:   mov    %r12d,%ecx
    0.00 :   4190:   mov    %r14,%rsi
    0.00 :   4193:   mov    %r15,%rdi
    0.00 :   4196:   call   419b <nf_conntrack_in+0x4fb>
    0.00 :   419b:   mov    %eax,%r13d
    0.00 :   419e:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   41a3:   mov    0x88(%r15),%rax
    0.00 :   41aa:   mov    %r14,%rdx
    0.00 :   41ad:   mov    %r12d,%esi
    0.00 :   41b0:   mov    %r15,%rdi
    0.00 :   41b3:   mov    $0x1,%r8d
    0.00 :   41b9:   mov    $0x1,%ebx
    0.00 :   41be:   mov    0xb50(%rax),%ecx
    0.00 :   41c4:   call   41c9 <nf_conntrack_in+0x529>
    1.84 :   41c9:   cmp    $0x3,%r12d // [nf_conntrack][41c9]
    0.00 :   41cd:   jne    3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41d3:   lock btsq $0x1,0x80(%r15)
    5.64 :   41dd:   jb     3f82 <nf_conntrack_in+0x2e2> // [nf_conntrack][41dd]
    0.00 :   41e3:   mov    0x88(%r15),%rax
    0.00 :   41ea:   mov    0xb48(%rax),%rax
    0.00 :   41f1:   test   %rax,%rax
    0.00 :   41f4:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41fa:   mov    0xb0(%r15),%rdi
    0.00 :   4201:   test   %rdi,%rdi
    0.00 :   4204:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   420a:   movzbl 0x4(%rdi),%eax
    0.00 :   420e:   test   %al,%al
    0.00 :   4210:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   4216:   mov    0xc(%rdi),%edx
    0.00 :   4219:   add    %rdi,%rax
    0.00 :   421c:   test   %edx,%edx
    0.00 :   421e:   jne    4365 <nf_conntrack_in+0x6c5>
    0.00 :   4224:   test   %rax,%rax
    0.00 :   4227:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   422d:   lock orb $0x8,(%rax)
    0.00 :   4231:   jmp    3f82 <nf_conntrack_in+0x2e2>
    0.00 :   4236:   mov    %rbp,%rcx
    0.00 :   4239:   mov    %r12d,%edx
    0.00 :   423c:   mov    %r14,%rsi
    0.00 :   423f:   mov    %r15,%rdi
    0.00 :   4242:   call   4247 <nf_conntrack_in+0x5a7>
    0.00 :   4247:   mov    %eax,%r13d
    0.00 :   424a:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   424f:   mov    0x4(%rsp),%edx
    0.00 :   4253:   mov    %rbp,%r8
    0.00 :   4256:   mov    %r12d,%ecx
    0.00 :   4259:   mov    %r14,%rsi
    0.00 :   425c:   mov    %r15,%rdi
    0.00 :   425f:   call   4264 <nf_conntrack_in+0x5c4>
    0.00 :   4264:   mov    %eax,%r13d
    0.00 :   4267:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   426c:   mov    %rdi,%rdx
    0.00 :   426f:   mov    %rbx,%rdi
    0.00 :   4272:   call   3c0 <hash_conntrack_raw>
    0.00 :   4277:   mov    0x20(%rbp),%rdi
    0.00 :   427b:   mov    %rbx,%rdx
    0.00 :   427e:   mov    %r12,%rsi
    0.00 :   4281:   mov    %eax,%ecx
    0.00 :   4283:   call   32c0 <__nf_conntrack_find_get>
    0.00 :   4288:   test   %rax,%rax
    0.00 :   428b:   jne    3e39 <nf_conntrack_in+0x199>
    0.00 :   4291:   mov    0x20(%rbp),%rdi
    0.00 :   4295:   jmp    40da <nf_conntrack_in+0x43a>
    0.00 :   429a:   mov    $0x0,%rsi
    0.00 :   42a1:   mov    %r12,%rdx
    0.00 :   42a4:   mov    $0x0,%rdi
    0.00 :   42ab:   call   42b0 <nf_conntrack_in+0x610>
    0.00 :   42b0:   mov    $0x1,%esi
    0.00 :   42b5:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   42ba:   mov    $0x0,%rsi
    0.00 :   42c1:   mov    %r12,%rdx
    0.00 :   42c4:   mov    $0x0,%rdi
    0.00 :   42cb:   call   42d0 <nf_conntrack_in+0x630>
    0.00 :   42d0:   mov    $0x2,%esi
    0.00 :   42d5:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   42da:   mov    0x10(%rsp),%rcx
    0.00 :   42df:   mov    $0xffffffff,%eax
    0.00 :   42e4:   lock xadd %eax,(%rcx)
    0.00 :   42e8:   cmp    $0x1,%eax
    0.00 :   42eb:   je     434e <nf_conntrack_in+0x6ae>
    0.00 :   42ed:   test   %eax,%eax
    0.00 :   42ef:   jg     3f8e <nf_conntrack_in+0x2ee>
    0.00 :   42f5:   mov    0x10(%rsp),%rdi
    0.00 :   42fa:   mov    $0x3,%esi
    0.00 :   42ff:   call   4304 <nf_conntrack_in+0x664>
    0.00 :   4304:   jmp    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   4309:   mov    0x10(%rsp),%rbx
    0.00 :   430e:   mov    0x80(%rbx),%rdx
    0.00 :   4315:   and    $0x8,%dh
    0.00 :   4318:   je     4344 <nf_conntrack_in+0x6a4>
    0.00 :   431a:   cmp    $0x7,%eax
    0.00 :   431d:   je     4344 <nf_conntrack_in+0x6a4>
    0.00 :   431f:   movq   $0x0,0x68(%rdi)
    0.00 :   4327:   jmp    3d00 <nf_conntrack_in+0x60>
    0.00 :   432c:   mov    $0x0,%rsi
    0.00 :   4333:   mov    $0x0,%rdi
    0.00 :   433a:   call   433f <nf_conntrack_in+0x69f>
    0.00 :   433f:   jmp    3f6e <nf_conntrack_in+0x2ce>
    0.00 :   4344:   mov    $0x1,%ebx
    0.00 :   4349:   jmp    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   434e:   mov    0x10(%rsp),%rdi
    0.00 :   4353:   call   4358 <nf_conntrack_in+0x6b8>
    0.00 :   4358:   jmp    3f8e <nf_conntrack_in+0x2ee>
    7.85 :   435d:   mov    %r13d,%ebx // [nf_conntrack][435d]
    1.69 :   4360:   jmp    41c9 <nf_conntrack_in+0x529> // [nf_conntrack][4360]
    0.00 :   4365:   mov    $0x4,%esi
    0.00 :   436a:   call   436f <nf_conntrack_in+0x6cf>
    0.00 :   436f:   jmp    4224 <nf_conntrack_in+0x584>
    0.00 :   4374:   call   4379 <nf_conntrack_in+0x6d9>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   16.59 [virtio_net][3c80]
   11.70 [virtio_net][3cdb]
   11.19 [virtio_net][4181]
    6.31 [virtio_net][3d2b]
    5.55 [virtio_net][3ea2]
    5.00 [virtio_net][3c87]
    4.48 [virtio_net][4027]
    4.22 [virtio_net][3c9d]
    3.16 [virtio_net][3f84]
    2.99 [virtio_net][3efb]
    2.74 [virtio_net][3d1e]
    2.71 [virtio_net][3d6b]
    2.53 [virtio_net][3d11]
    2.48 [virtio_net][4001]
    2.44 [virtio_net][4171]
    2.42 [virtio_net][3ee5]
    2.33 [virtio_net][3eff]
    2.28 [virtio_net][3cc2]
    2.04 [virtio_net][3dba]
    1.91 [virtio_net][3dfe]
    1.80 [virtio_net][3ffc]
    1.66 [virtio_net][3f25]
    1.48 [virtio_net][3ec3]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (43 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003c80 <start_xmit>:
         : 6    start_xmit():
   16.59 :   3c80:   call   3c85 <start_xmit+0x5> // [virtio_net][3c80]
    0.00 :   3c85:   push   %r15
    5.00 :   3c87:   mov    %rdi,%r15 // [virtio_net][3c87]
    0.00 :   3c8a:   push   %r14
    0.00 :   3c8c:   push   %r13
    0.00 :   3c8e:   push   %r12
    0.00 :   3c90:   push   %rbp
    0.00 :   3c91:   mov    %rsi,%rbp
    0.00 :   3c94:   push   %rbx
    0.00 :   3c95:   sub    $0x20,%rsp
    0.00 :   3c99:   movzwl 0x7c(%rdi),%eax
    4.22 :   3c9d:   mov    0x400(%rsi),%rcx // [virtio_net][3c9d]
    0.00 :   3ca4:   mov    $0x0,%rdi
    0.00 :   3cab:   mov    %ax,0x1e(%rsp)
    0.00 :   3cb0:   imul   $0x458,%rax,%rbx
    0.00 :   3cb7:   lea    (%rax,%rax,4),%rax
    0.00 :   3cbb:   add    0x9d8(%rsi),%rbx
    2.28 :   3cc2:   shl    $0x6,%rax // [virtio_net][3cc2]
    0.00 :   3cc6:   mov    %rcx,0x8(%rsp)
    0.00 :   3ccb:   mov    %rax,(%rsp)
    0.00 :   3ccf:   call   3cd4 <start_xmit+0x54>
    0.00 :   3cd4:   mov    0x2d8(%rbx),%r13d
   11.70 :   3cdb:   mov    %gs:0x0(%rip),%r14b        # 3ce3 <start_xmit+0x63> // [virtio_net][3cdb]
    0.00 :   3ce3:   test   %r13d,%r13d
    0.00 :   3ce6:   jne    3f0a <start_xmit+0x28a>
    0.00 :   3cec:   xor    %esi,%esi
    0.00 :   3cee:   mov    %rbx,%rdi
    0.00 :   3cf1:   call   390 <free_old_xmit_skbs>
    0.00 :   3cf6:   mov    %r15,%rdi
    0.00 :   3cf9:   call   3cfe <start_xmit+0x7e>
    0.00 :   3cfe:   mov    0xc0(%r15),%eax
    0.00 :   3d05:   mov    0xc8(%r15),%rdx
    0.00 :   3d0c:   testb  $0x2,0x3(%rdx,%rax,1)
    2.53 :   3d11:   jne    4050 <start_xmit+0x3d0> // [virtio_net][3d11]
    0.00 :   3d17:   mov    (%rbx),%rax
    0.00 :   3d1a:   mov    0x20(%rax),%rax
    2.74 :   3d1e:   mov    0x330(%rax),%r12 // [virtio_net][3d1e]
    0.00 :   3d25:   movzbl 0x4a(%r12),%eax
    6.31 :   3d2b:   mov    %eax,%r10d // [virtio_net][3d2b]
    0.00 :   3d2e:   mov    %eax,0x18(%rsp)
    0.00 :   3d32:   nopl   0x0(%rax,%rax,1)
    0.00 :   3d37:   movzbl 0x49(%r12),%ecx
    0.00 :   3d3d:   test   %cl,%cl
    0.00 :   3d3f:   jne    3f37 <start_xmit+0x2b7>
    0.00 :   3d45:   lea    0x28(%r15),%rax
    0.00 :   3d49:   xor    %ecx,%ecx
    0.00 :   3d4b:   xor    %esi,%esi
    0.00 :   3d4d:   movq   $0x0,(%rax)
    0.00 :   3d54:   mov    %si,0x8(%rax)
    0.00 :   3d58:   mov    0xc0(%r15),%edx
    0.00 :   3d5f:   add    0xc8(%r15),%rdx
    0.00 :   3d66:   cmpw   $0x0,0x4(%rdx)
    2.71 :   3d6b:   je     3da7 <start_xmit+0x127> // [virtio_net][3d6b]
    0.00 :   3d6d:   mov    0x70(%r15),%esi
    0.00 :   3d71:   sub    0x74(%r15),%esi
    0.00 :   3d75:   mov    %si,0x2(%rax)
    0.00 :   3d79:   movzwl 0x4(%rdx),%esi
    0.00 :   3d7d:   mov    %si,0x4(%rax)
    0.00 :   3d81:   mov    0x18(%rdx),%esi
    0.00 :   3d84:   test   $0x1,%sil
    0.00 :   3d88:   je     403d <start_xmit+0x3bd>
    0.00 :   3d8e:   mov    $0x1,%edi
    0.00 :   3d93:   mov    %edi,%esi
    0.00 :   3d95:   mov    %dil,0x1(%rax)
    0.00 :   3d99:   or     $0xffffff80,%esi
    0.00 :   3d9c:   testb  $0x4,0x18(%rdx)
    0.00 :   3da0:   cmovne %esi,%edi
    0.00 :   3da3:   mov    %dil,0x1(%rax)
    0.00 :   3da7:   movzbl 0x80(%r15),%edx
    0.00 :   3daf:   and    $0x60,%edx
    0.00 :   3db2:   cmp    $0x60,%dl
    0.00 :   3db5:   jne    3de2 <start_xmit+0x162>
    0.00 :   3db7:   movb   $0x1,(%rax)
    2.04 :   3dba:   movzwl 0x88(%r15),%edx // [virtio_net][3dba]
    0.00 :   3dc2:   mov    0xd0(%r15),%rsi
    0.00 :   3dc9:   sub    0xc8(%r15),%rsi
    0.00 :   3dd0:   sub    %esi,%edx
    0.00 :   3dd2:   mov    %dx,0x6(%rax)
    0.00 :   3dd6:   movzwl 0x8a(%r15),%edx
    0.00 :   3dde:   mov    %dx,0x8(%rax)
    0.00 :   3de2:   cmpb   $0x0,0x38(%r12)
    0.00 :   3de8:   je     3df0 <start_xmit+0x170>
    0.00 :   3dea:   xor    %edx,%edx
    0.00 :   3dec:   mov    %dx,0xa(%rax)
    0.00 :   3df0:   mov    0xc0(%r15),%edx
    0.00 :   3df7:   mov    0xc8(%r15),%rsi
    1.91 :   3dfe:   mov    %rax,0x10(%rsp) // [virtio_net][3dfe]
    0.00 :   3e03:   lea    0x8(%rbx),%r12
    0.00 :   3e07:   movzbl 0x2(%rsi,%rdx,1),%esi
    0.00 :   3e0c:   test   %cl,%cl
    0.00 :   3e0e:   jne    3fcf <start_xmit+0x34f>
    0.00 :   3e14:   add    $0x2,%esi
    0.00 :   3e17:   mov    %r12,%rdi
    0.00 :   3e1a:   call   3e1f <start_xmit+0x19f>
    0.00 :   3e1f:   mov    0x10(%rsp),%rax
    0.00 :   3e24:   mov    $0x80000000,%ecx
    0.00 :   3e29:   mov    %eax,%edx
    0.00 :   3e2b:   and    $0xfff,%edx
    0.00 :   3e31:   add    %rcx,%rax
    0.00 :   3e34:   jb     41df <start_xmit+0x55f>
    0.00 :   3e3a:   mov    $0xffffffff80000000,%rcx
    0.00 :   3e41:   sub    0x0(%rip),%rcx        # 3e48 <start_xmit+0x1c8>
    0.00 :   3e48:   add    %rcx,%rax
    0.00 :   3e4b:   mov    0x8(%rbx),%rcx
    0.00 :   3e4f:   shr    $0xc,%rax
    0.00 :   3e53:   shl    $0x6,%rax
    0.00 :   3e57:   add    0x0(%rip),%rax        # 3e5e <start_xmit+0x1de>
    0.00 :   3e5e:   and    $0x3,%ecx
    0.00 :   3e61:   test   $0x3,%al
    0.00 :   3e63:   jne    41c2 <start_xmit+0x542>
    0.00 :   3e69:   or     %rcx,%rax
    0.00 :   3e6c:   mov    %edx,0x10(%rbx)
    0.00 :   3e6f:   lea    0x28(%rbx),%rsi
    0.00 :   3e73:   xor    %edx,%edx
    0.00 :   3e75:   mov    %rax,0x8(%rbx)
    0.00 :   3e79:   mov    0x18(%rsp),%eax
    0.00 :   3e7d:   mov    %r15,%rdi
    0.00 :   3e80:   mov    %eax,0x14(%rbx)
    0.00 :   3e83:   mov    0x70(%r15),%ecx
    0.00 :   3e87:   call   3e8c <start_xmit+0x20c>
    0.00 :   3e8c:   mov    %eax,%edx
    0.00 :   3e8e:   test   %eax,%eax
    0.00 :   3e90:   js     418b <start_xmit+0x50b>
    0.00 :   3e96:   add    $0x1,%edx
    0.00 :   3e99:   mov    (%rbx),%rdi
    0.00 :   3e9c:   mov    $0xa20,%r8d
    5.55 :   3ea2:   mov    %r15,%rcx // [virtio_net][3ea2]
    0.00 :   3ea5:   mov    %r12,%rsi
    0.00 :   3ea8:   call   3ead <start_xmit+0x22d>
    0.00 :   3ead:   mov    %eax,%edx
    0.00 :   3eaf:   test   %eax,%eax
    0.00 :   3eb1:   jne    418b <start_xmit+0x50b>
    0.00 :   3eb7:   test   %r13d,%r13d
    0.00 :   3eba:   je     405f <start_xmit+0x3df>
    0.00 :   3ec0:   mov    (%rbx),%rax
    1.48 :   3ec3:   cmpl   $0x12,0x2c(%rax) // [virtio_net][3ec3]
    0.00 :   3ec7:   jbe    40c1 <start_xmit+0x441>
    0.00 :   3ecd:   test   %r14b,%r14b
    0.00 :   3ed0:   je     3ee5 <start_xmit+0x265>
    0.00 :   3ed2:   mov    0x8(%rsp),%rax
    0.00 :   3ed7:   mov    (%rsp),%rcx
    0.00 :   3edb:   testb  $0x3,0x90(%rax,%rcx,1)
    0.00 :   3ee3:   je     3ef5 <start_xmit+0x275>
    2.42 :   3ee5:   mov    (%rbx),%rdi // [virtio_net][3ee5]
    0.00 :   3ee8:   call   3eed <start_xmit+0x26d>
    0.00 :   3eed:   test   %al,%al
    0.00 :   3eef:   jne    4169 <start_xmit+0x4e9>
    0.00 :   3ef5:   add    $0x20,%rsp
    0.00 :   3ef9:   xor    %eax,%eax
    2.99 :   3efb:   pop    %rbx // [virtio_net][3efb]
    0.00 :   3efc:   pop    %rbp
    0.00 :   3efd:   pop    %r12
    2.33 :   3eff:   pop    %r13 // [virtio_net][3eff]
    0.00 :   3f01:   pop    %r14
    0.00 :   3f03:   pop    %r15
    0.00 :   3f05:   jmp    3f0a <start_xmit+0x28a>
    0.00 :   3f0a:   mov    (%rbx),%rdi
    0.00 :   3f0d:   call   3f12 <start_xmit+0x292>
    0.00 :   3f12:   xor    %esi,%esi
    0.00 :   3f14:   mov    %rbx,%rdi
    0.00 :   3f17:   call   390 <free_old_xmit_skbs>
    0.00 :   3f1c:   test   %r14b,%r14b
    0.00 :   3f1f:   jne    3cf6 <start_xmit+0x76>
    1.66 :   3f25:   mov    (%rbx),%rdi // [virtio_net][3f25]
    0.00 :   3f28:   call   3f2d <start_xmit+0x2ad>
    0.00 :   3f2d:   test   %al,%al
    0.00 :   3f2f:   jne    3cf6 <start_xmit+0x76>
    0.00 :   3f35:   jmp    3f0a <start_xmit+0x28a>
    0.00 :   3f37:   mov    0xd0(%r15),%rax
    0.00 :   3f3e:   test   $0x1,%al
    0.00 :   3f40:   jne    3d45 <start_xmit+0xc5>
    0.00 :   3f46:   mov    0xc8(%r15),%rdi
    0.00 :   3f4d:   testb  $0x1,0x7e(%r15)
    0.00 :   3f52:   je     3f72 <start_xmit+0x2f2>
    0.00 :   3f54:   mov    0xc0(%r15),%edx
    0.00 :   3f5b:   add    %rdi,%rdx
    0.00 :   3f5e:   mov    0x20(%rdx),%edx
    0.00 :   3f61:   movzwl %dx,%esi
    0.00 :   3f64:   sar    $0x10,%edx
    0.00 :   3f67:   sub    %edx,%esi
    0.00 :   3f69:   cmp    $0x1,%esi
    0.00 :   3f6c:   jne    3d45 <start_xmit+0xc5>
    0.00 :   3f72:   mov    %rax,%rdx
    0.00 :   3f75:   mov    0x18(%rsp),%esi
    0.00 :   3f79:   sub    %rdi,%rdx
    0.00 :   3f7c:   cmp    %esi,%edx
    0.00 :   3f7e:   jb     3d45 <start_xmit+0xc5>
    3.16 :   3f84:   movzbl %r10b,%edx // [virtio_net][3f84]
    0.00 :   3f88:   sub    %rdx,%rax
    0.00 :   3f8b:   jmp    3d4b <start_xmit+0xcb>
    0.00 :   3f90:   mov    0x10(%r12),%rdx
    0.00 :   3f95:   mov    %r15,%rcx
    0.00 :   3f98:   mov    0xd0(%r15),%r8
    0.00 :   3f9f:   mov    $0x0,%rsi
    0.00 :   3fa6:   mov    $0x0,%rdi
    0.00 :   3fad:   mov    %al,0x10(%rsp)
    0.00 :   3fb1:   call   3fb6 <start_xmit+0x336>
    0.00 :   3fb6:   movzbl 0x49(%r12),%ecx
    0.00 :   3fbc:   movzbl 0x10(%rsp),%r10d
    0.00 :   3fc2:   test   %cl,%cl
    0.00 :   3fc4:   je     3d45 <start_xmit+0xc5>
    0.00 :   3fca:   jmp    3f37 <start_xmit+0x2b7>
    0.00 :   3fcf:   add    $0x1,%esi
    0.00 :   3fd2:   mov    %r12,%rdi
    0.00 :   3fd5:   mov    %r10b,0x10(%rsp)
    0.00 :   3fda:   call   3fdf <start_xmit+0x35f>
    0.00 :   3fdf:   movzbl 0x10(%rsp),%r10d
    0.00 :   3fe5:   xor    %edx,%edx
    0.00 :   3fe7:   mov    %r12,%rsi
    0.00 :   3fea:   mov    0x18(%rsp),%ecx
    0.00 :   3fee:   sub    %r10,0xd0(%r15)
    0.00 :   3ff5:   mov    %r15,%rdi
    0.00 :   3ff8:   add    0x70(%r15),%ecx
    1.80 :   3ffc:   mov    %r10,0x10(%rsp) // [virtio_net][3ffc]
    2.48 :   4001:   mov    %ecx,0x70(%r15) // [virtio_net][4001]
    0.00 :   4005:   call   400a <start_xmit+0x38a>
    0.00 :   400a:   mov    %eax,%edx
    0.00 :   400c:   test   %eax,%eax
    0.00 :   400e:   js     418b <start_xmit+0x50b>
    0.00 :   4014:   mov    0x70(%r15),%eax
    0.00 :   4018:   mov    0x18(%rsp),%ecx
    0.00 :   401c:   mov    0x10(%rsp),%r10
    0.00 :   4021:   sub    %ecx,%eax
    0.00 :   4023:   cmp    0x74(%r15),%eax
    4.48 :   4027:   mov    %eax,0x70(%r15) // [virtio_net][4027]
    0.00 :   402b:   jb     41ce <start_xmit+0x54e>
    0.00 :   4031:   add    %r10,0xd0(%r15)
    0.00 :   4038:   jmp    3e99 <start_xmit+0x219>
    0.00 :   403d:   and    $0x10,%esi
    0.00 :   4040:   je     4186 <start_xmit+0x506>
    0.00 :   4046:   mov    $0x4,%edi
    0.00 :   404b:   jmp    3d93 <start_xmit+0x113>
    0.00 :   4050:   xor    %esi,%esi
    0.00 :   4052:   mov    %r15,%rdi
    0.00 :   4055:   call   405a <start_xmit+0x3da>
    0.00 :   405a:   jmp    3d17 <start_xmit+0x97>
    0.00 :   405f:   mov    0x60(%r15),%rax
    0.00 :   4063:   test   %rax,%rax
    0.00 :   4066:   je     415c <start_xmit+0x4dc>
    0.00 :   406c:   mov    %r15,%rdi
    0.00 :   406f:   call   4074 <start_xmit+0x3f4>
    0.00 :   4074:   movq   $0x0,0x60(%r15)
    0.00 :   407c:   movq   $0x0,0x18(%r15)
    0.00 :   4084:   mov    0x68(%r15),%rdi
    0.00 :   4088:   cmp    $0x7,%rdi
    0.00 :   408c:   jbe    40ac <start_xmit+0x42c>
    0.00 :   408e:   and    $0xfffffffffffffff8,%rdi
    0.00 :   4092:   mov    $0xffffffff,%eax
    0.00 :   4097:   lock xadd %eax,(%rdi)
    0.00 :   409b:   cmp    $0x1,%eax
    0.00 :   409e:   je     41c4 <start_xmit+0x544>
    0.00 :   40a4:   test   %eax,%eax
    0.00 :   40a6:   jle    41d0 <start_xmit+0x550>
    0.00 :   40ac:   movq   $0x0,0x68(%r15)
    0.00 :   40b4:   mov    (%rbx),%rax
    0.00 :   40b7:   cmpl   $0x12,0x2c(%rax)
    0.00 :   40bb:   ja     3ecd <start_xmit+0x24d>
    0.00 :   40c1:   mov    (%rsp),%rax
    0.00 :   40c5:   add    0x400(%rbp),%rax
    0.00 :   40cc:   lock orb $0x1,0x90(%rax)
    0.00 :   40d4:   mov    (%rbx),%rdi
    0.00 :   40d7:   test   %r13d,%r13d
    0.00 :   40da:   je     4118 <start_xmit+0x498>
    0.00 :   40dc:   call   40e1 <start_xmit+0x461>
    0.00 :   40e1:   test   %al,%al
    0.00 :   40e3:   jne    3ecd <start_xmit+0x24d>
    0.00 :   40e9:   lea    0x2c0(%rbx),%rbp
    0.00 :   40f0:   mov    (%rbx),%r12
    0.00 :   40f3:   mov    %rbp,%rdi
    0.00 :   40f6:   call   40fb <start_xmit+0x47b>
    0.00 :   40fb:   test   %al,%al
    0.00 :   40fd:   je     3ecd <start_xmit+0x24d>
    0.00 :   4103:   mov    %r12,%rdi
    0.00 :   4106:   call   410b <start_xmit+0x48b>
    0.00 :   410b:   mov    %rbp,%rdi
    0.00 :   410e:   call   4113 <start_xmit+0x493>
    0.00 :   4113:   jmp    3ecd <start_xmit+0x24d>
    0.00 :   4118:   call   411d <start_xmit+0x49d>
    0.00 :   411d:   test   %al,%al
    0.00 :   411f:   jne    3ecd <start_xmit+0x24d>
    0.00 :   4125:   xor    %esi,%esi
    0.00 :   4127:   mov    %rbx,%rdi
    0.00 :   412a:   call   390 <free_old_xmit_skbs>
    0.00 :   412f:   mov    (%rbx),%rax
    0.00 :   4132:   cmpl   $0x12,0x2c(%rax)
    0.00 :   4136:   jbe    3ecd <start_xmit+0x24d>
    0.00 :   413c:   mov    (%rsp),%rax
    0.00 :   4140:   add    0x400(%rbp),%rax
    0.00 :   4147:   lock andb $0xfe,0x90(%rax)
    0.00 :   414f:   mov    (%rbx),%rdi
    0.00 :   4152:   call   4157 <start_xmit+0x4d7>
    0.00 :   4157:   jmp    3ecd <start_xmit+0x24d>
    0.00 :   415c:   cmpq   $0x0,0x18(%r15)
    0.00 :   4161:   je     4084 <start_xmit+0x404>
    0.00 :   4167:   ud2
    0.00 :   4169:   mov    (%rbx),%rdi
    0.00 :   416c:   call   4171 <start_xmit+0x4f1>
    2.44 :   4171:   test   %al,%al // [virtio_net][4171]
    0.00 :   4173:   je     3ef5 <start_xmit+0x275>
    0.00 :   4179:   addq   $0x1,0x2b0(%rbx)
   11.19 :   4181:   jmp    3ef5 <start_xmit+0x275> // [virtio_net][4181]
    0.00 :   4186:   mov    $0xffffffb9,%edx
    0.00 :   418b:   addq   $0x1,0x1c0(%rbp)
    0.00 :   4193:   mov    %edx,0x18(%rsp)
    0.00 :   4197:   call   419c <start_xmit+0x51c>
    0.00 :   419c:   mov    0x18(%rsp),%edx
    0.00 :   41a0:   test   %eax,%eax
    0.00 :   41a2:   jne    41a8 <start_xmit+0x528>
    0.00 :   41a8:   addq   $0x1,0x168(%rbp)
    0.00 :   41b0:   mov    $0x1,%esi
    0.00 :   41b5:   mov    %r15,%rdi
    0.00 :   41b8:   call   41bd <start_xmit+0x53d>
    0.00 :   41bd:   jmp    3ef5 <start_xmit+0x275>
    0.00 :   41c2:   ud2
    0.00 :   41c4:   call   41c9 <start_xmit+0x549>
    0.00 :   41c9:   jmp    40ac <start_xmit+0x42c>
    0.00 :   41ce:   ud2
    0.00 :   41d0:   mov    $0x3,%esi
    0.00 :   41d5:   call   41da <start_xmit+0x55a>
    0.00 :   41da:   jmp    40ac <start_xmit+0x42c>
    0.00 :   41df:   mov    0x0(%rip),%rcx        # 41e6 <start_xmit+0x566>
    0.00 :   41e6:   jmp    3e48 <start_xmit+0x1c8>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   19.89 [virtio_net][6481]
   14.74 [virtio_net][64b9]
    6.34 [virtio_net][6178]
    5.91 [virtio_net][66a4]
    5.41 [virtio_net][61e0]
    3.05 [virtio_net][6541]
    2.85 [virtio_net][6226]
    2.76 [virtio_net][6577]
    2.75 [virtio_net][642e]
    2.67 [virtio_net][65df]
    2.60 [virtio_net][6e1b]
    2.57 [virtio_net][6398]
    2.55 [virtio_net][64a7]
    2.54 [virtio_net][6429]
    2.47 [virtio_net][6218]
    2.41 [virtio_net][6eb3]
    2.36 [virtio_net][6452]
    2.30 [virtio_net][687e]
    2.19 [virtio_net][63cf]
    2.07 [virtio_net][6501]
    1.95 [virtio_net][6488]
    1.71 [virtio_net][6168]
    1.71 [virtio_net][617d]
    1.50 [virtio_net][6416]
    1.43 [virtio_net][64c5]
    1.28 [virtio_net][644f]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (45 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000006140 <receive_buf>:
         : 6    receive_buf():
    0.00 :   6140:   call   6145 <receive_buf+0x5>
    0.00 :   6145:   push   %r15
    0.00 :   6147:   push   %r14
    0.00 :   6149:   push   %r13
    0.00 :   614b:   mov    %ecx,%r13d
    0.00 :   614e:   push   %r12
    0.00 :   6150:   push   %rbp
    0.00 :   6151:   mov    %rsi,%rbp
    0.00 :   6154:   push   %rbx
    0.00 :   6155:   mov    %rdi,%rbx
    0.00 :   6158:   sub    $0xa0,%rsp
    0.00 :   615f:   mov    0x10(%rdi),%rax
    0.00 :   6163:   mov    %rdx,0x8(%rsp)
    1.71 :   6168:   mov    0xd8(%rsp),%r12 // [virtio_net][6168]
    0.00 :   6170:   mov    %rax,(%rsp)
    0.00 :   6174:   movzbl 0x4a(%rdi),%eax
    6.34 :   6178:   lea    0xe(%rax),%edx // [virtio_net][6178]
    0.00 :   617b:   cmp    %edx,%ecx
    1.71 :   617d:   jb     6a2a <receive_buf+0x8ea> // [virtio_net][617d]
    0.00 :   6183:   cmpb   $0x0,0x38(%rdi)
    0.00 :   6187:   mov    %r9,%r14
    0.00 :   618a:   jne    645d <receive_buf+0x31d>
    0.00 :   6190:   cmpb   $0x0,0x33(%rdi)
    0.00 :   6194:   je     626a <receive_buf+0x12a>
    0.00 :   619a:   push   $0x0
    0.00 :   619c:   mov    %ecx,%r8d
    0.00 :   619f:   mov    $0x1000,%r9d
    0.00 :   61a5:   xor    %ecx,%ecx
    0.00 :   61a7:   push   $0x0
    0.00 :   61a9:   push   $0x1
    0.00 :   61ab:   mov    0x20(%rsp),%rdx
    0.00 :   61b0:   call   2170 <page_to_skb>
    0.00 :   61b5:   mov    %rax,%r14
    0.00 :   61b8:   movzbl 0x4a(%rbx),%eax
    0.00 :   61bc:   add    $0x18,%rsp
    0.00 :   61c0:   sub    %eax,%r13d
    0.00 :   61c3:   add    %r13,0x8(%r12)
    0.00 :   61c8:   test   %r14,%r14
    0.00 :   61cb:   je     6e71 <receive_buf+0xd31>
    0.00 :   61d1:   lea    0x28(%r14),%rdx
    0.00 :   61d5:   mov    (%rsp),%rax
    0.00 :   61d9:   testb  $0x80,0xec(%rax)
    5.41 :   61e0:   je     61ec <receive_buf+0xac> // [virtio_net][61e0]
    0.00 :   61e2:   cmpb   $0x0,0x3a(%rbx)
    0.00 :   61e6:   jne    69cc <receive_buf+0x88c>
    0.00 :   61ec:   movzbl 0x28(%r14),%edx
    0.00 :   61f1:   test   $0x2,%dl
    0.00 :   61f4:   je     620b <receive_buf+0xcb>
    0.00 :   61f6:   movzbl 0x80(%r14),%eax
    0.00 :   61fe:   and    $0xffffff9f,%eax
    0.00 :   6201:   or     $0x20,%eax
    0.00 :   6204:   mov    %al,0x80(%r14)
    0.00 :   620b:   movzbl 0x29(%r14),%eax
    0.00 :   6210:   test   %al,%al
    0.00 :   6212:   je     637f <receive_buf+0x23f>
    2.47 :   6218:   mov    %eax,%esi // [virtio_net][6218]
    0.00 :   621a:   and    $0x7f,%esi
    0.00 :   621d:   cmp    $0x3,%esi
    0.00 :   6220:   je     6a14 <receive_buf+0x8d4>
    2.85 :   6226:   cmp    $0x4,%esi // [virtio_net][6226]
    0.00 :   6229:   je     686d <receive_buf+0x72d>
    0.00 :   622f:   cmp    $0x1,%esi
    0.00 :   6232:   je     69b6 <receive_buf+0x876>
    0.00 :   6238:   call   623d <receive_buf+0xfd>
    0.00 :   623d:   test   %eax,%eax
    0.00 :   623f:   jne    6245 <receive_buf+0x105>
    0.00 :   6245:   mov    (%rsp),%rax
    0.00 :   6249:   mov    %r14,%rdi
    0.00 :   624c:   addq   $0x1,0x198(%rax)
    0.00 :   6254:   add    $0xa0,%rsp
    0.00 :   625b:   pop    %rbx
    0.00 :   625c:   pop    %rbp
    0.00 :   625d:   pop    %r12
    0.00 :   625f:   pop    %r13
    0.00 :   6261:   pop    %r14
    0.00 :   6263:   pop    %r15
    0.00 :   6265:   jmp    626a <receive_buf+0x12a>
    0.00 :   626a:   lea    0x40(%r8),%esi
    0.00 :   626e:   mov    0x8(%rsp),%rcx
    0.00 :   6273:   lea    (%rsi,%rax,1),%r11d
    0.00 :   6277:   mov    %esi,0x38(%rsp)
    0.00 :   627b:   lea    0x62d(%r11),%edx
    0.00 :   6282:   and    $0xffffffc0,%edx
    0.00 :   6285:   lea    0x140(%rdx),%edi
    0.00 :   628b:   mov    $0x80000000,%edx
    0.00 :   6290:   mov    %edi,0x10(%rsp)
    0.00 :   6294:   add    %rcx,%rdx
    0.00 :   6297:   jb     7b9b <receive_buf+0x1a5b>
    0.00 :   629d:   mov    $0xffffffff80000000,%rcx
    0.00 :   62a4:   sub    0x0(%rip),%rcx        # 62ab <receive_buf+0x16b>
    0.00 :   62ab:   add    %rcx,%rdx
    0.00 :   62ae:   shr    $0xc,%rdx
    0.00 :   62b2:   shl    $0x6,%rdx
    0.00 :   62b6:   add    0x0(%rip),%rdx        # 62bd <receive_buf+0x17d>
    0.00 :   62bd:   mov    0x8(%rdx),%rcx
    0.00 :   62c1:   mov    %rdx,0x30(%rsp)
    0.00 :   62c6:   test   $0x1,%cl
    0.00 :   62c9:   jne    6e63 <receive_buf+0xd23>
    0.00 :   62cf:   nopl   0x0(%rax,%rax,1)
    0.00 :   62d4:   mov    %r13d,%edx
    0.00 :   62d7:   sub    %eax,%edx
    0.00 :   62d9:   mov    %edx,%r10d
    0.00 :   62dc:   add    %r10,0x8(%r12)
    0.00 :   62e1:   cmp    $0x5ee,%edx
    0.00 :   62e7:   ja     6c0b <receive_buf+0xacb>
    0.00 :   62ed:   movq   $0x0,0x18(%rsp)
    0.00 :   62f6:   xor    %r13d,%r13d
    0.00 :   62f9:   xor    %r15d,%r15d
    0.00 :   62fc:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6300:   jne    6ebc <receive_buf+0xd7c>
    0.00 :   6306:   mov    0x10(%rsp),%esi
    0.00 :   630a:   mov    0x8(%rsp),%rdi
    0.00 :   630f:   mov    %edx,0x28(%rsp)
    0.00 :   6313:   mov    %r11d,0x20(%rsp)
    0.00 :   6318:   call   631d <receive_buf+0x1dd>
    0.00 :   631d:   mov    %rax,%r14
    0.00 :   6320:   test   %rax,%rax
    0.00 :   6323:   je     6c1c <receive_buf+0xadc>
    0.00 :   6329:   mov    0x20(%rsp),%r11d
    0.00 :   632e:   mov    0x28(%rsp),%esi
    0.00 :   6332:   mov    %r14,%rdi
    0.00 :   6335:   sub    %r15d,%r11d
    0.00 :   6338:   add    %r11d,0xbc(%r14)
    0.00 :   633f:   movslq %r11d,%rax
    0.00 :   6342:   add    %rax,0xd0(%r14)
    0.00 :   6349:   call   634e <receive_buf+0x20e>
    0.00 :   634e:   cmpq   $0x0,0x18(%rsp)
    0.00 :   6354:   lea    0x28(%r14),%rdx
    0.00 :   6358:   je     67d8 <receive_buf+0x698>
    0.00 :   635e:   test   %r13d,%r13d
    0.00 :   6361:   je     61d5 <receive_buf+0x95>
    0.00 :   6367:   mov    0xc0(%r14),%eax
    0.00 :   636e:   mov    0xc8(%r14),%rcx
    0.00 :   6375:   mov    %r13b,0x1(%rcx,%rax,1)
    0.00 :   637a:   jmp    61d5 <receive_buf+0x95>
    0.00 :   637f:   mov    0xd0(%r14),%rax
    0.00 :   6386:   sub    0xc8(%r14),%rax
    0.00 :   638d:   and    $0x1,%edx
    0.00 :   6390:   mov    %ax,0xba(%r14)
    2.57 :   6398:   je     6416 <receive_buf+0x2d6> // [virtio_net][6398]
    0.00 :   639a:   xor    %r12d,%r12d
    0.00 :   639d:   xor    %r15d,%r15d
    0.00 :   63a0:   movzwl 0x30(%r14),%edx
    0.00 :   63a5:   mov    0x70(%r14),%ecx
    0.00 :   63a9:   movzwl 0x2e(%r14),%ebx
    0.00 :   63ae:   mov    0x74(%r14),%esi
    0.00 :   63b2:   lea    0x2(%rdx),%eax
    0.00 :   63b5:   mov    %ecx,%edi
    0.00 :   63b7:   cmp    %r15d,%eax
    0.00 :   63ba:   cmovb  %r15d,%eax
    0.00 :   63be:   sub    %esi,%edi
    0.00 :   63c0:   add    %ebx,%eax
    0.00 :   63c2:   cmp    %eax,%edi
    0.00 :   63c4:   jb     6e17 <receive_buf+0xcd7>
    0.00 :   63ca:   mov    %ebx,%esi
    0.00 :   63cc:   mov    %r14,%rdi
    2.19 :   63cf:   call   63d4 <receive_buf+0x294> // [virtio_net][63cf]
    0.00 :   63d4:   test   %al,%al
    0.00 :   63d6:   je     6238 <receive_buf+0xf8>
    0.00 :   63dc:   mov    0x70(%r14),%eax
    0.00 :   63e0:   mov    0x74(%r14),%esi
    0.00 :   63e4:   movzwl 0xb6(%r14),%ebx
    0.00 :   63ec:   add    0xc8(%r14),%rbx
    0.00 :   63f3:   mov    %eax,%edx
    0.00 :   63f5:   sub    0xd0(%r14),%rbx
    0.00 :   63fc:   add    %r15d,%ebx
    0.00 :   63ff:   sub    %esi,%edx
    0.00 :   6401:   cmp    %ebx,%edx
    0.00 :   6403:   jb     6e41 <receive_buf+0xd01>
    0.00 :   6409:   movzbl 0x29(%r14),%eax
    0.00 :   640e:   test   %al,%al
    0.00 :   6410:   jne    681f <receive_buf+0x6df>
    1.50 :   6416:   mov    0x0(%rbp),%rax // [virtio_net][6416]
    0.00 :   641a:   mov    (%rsp),%rsi
    0.00 :   641e:   mov    %r14,%rdi
    0.00 :   6421:   mov    0x28(%rax),%eax
    0.00 :   6424:   shr    %eax
    0.00 :   6426:   add    $0x1,%eax
    2.54 :   6429:   mov    %ax,0x7c(%r14) // [virtio_net][6429]
    2.75 :   642e:   call   6433 <receive_buf+0x2f3> // [virtio_net][642e]
    0.00 :   6433:   mov    %ax,0xb4(%r14)
    0.00 :   643b:   nopl   0x0(%rax,%rax,1)
    0.00 :   6440:   add    $0xa0,%rsp
    0.00 :   6447:   lea    0x8(%rbp),%rdi
    0.00 :   644b:   mov    %r14,%rsi
    0.00 :   644e:   pop    %rbx
    1.28 :   644f:   pop    %rbp // [virtio_net][644f]
    0.00 :   6450:   pop    %r12
    2.36 :   6452:   pop    %r13 // [virtio_net][6452]
    0.00 :   6454:   pop    %r14
    0.00 :   6456:   pop    %r15
    0.00 :   6458:   jmp    645d <receive_buf+0x31d>
    0.00 :   645d:   mov    0x8(%rsp),%rsi
    0.00 :   6462:   mov    $0x80000000,%edx
    0.00 :   6467:   xor    %edi,%edi
    0.00 :   6469:   mov    %ecx,0x54(%rsp)
    0.00 :   646d:   mov    $0xffffffff80000000,%rcx
    0.00 :   6474:   mov    %r8,0x58(%rsp)
    0.00 :   6479:   add    %rsi,%rdx
    0.00 :   647c:   movzwl 0xa(%rsi),%r9d
   19.89 :   6481:   mov    0x0(%rip),%rsi        # 6488 <receive_buf+0x348> // [virtio_net][6481]
    1.95 :   6488:   setb   %dil // [virtio_net][6488]
    0.00 :   648c:   sub    %rsi,%rcx
    0.00 :   648f:   test   %rdi,%rdi
    0.00 :   6492:   cmovne 0x0(%rip),%rcx        # 649a <receive_buf+0x35a>
    0.00 :   649a:   mov    0x0(%rip),%rdi        # 64a1 <receive_buf+0x361>
    0.00 :   64a1:   mov    %r9w,0x52(%rsp)
    2.55 :   64a7:   add    %rcx,%rdx // [virtio_net][64a7]
    0.00 :   64aa:   shr    $0xc,%rdx
    0.00 :   64ae:   shl    $0x6,%rdx
    0.00 :   64b2:   add    %rdi,%rdx
    0.00 :   64b5:   mov    0x8(%rdx),%rcx
   14.74 :   64b9:   mov    %rdx,%r10 // [virtio_net][64b9]
    0.00 :   64bc:   test   $0x1,%cl
    0.00 :   64bf:   jne    6eb3 <receive_buf+0xd73>
    1.43 :   64c5:   nopl   0x0(%rax,%rax,1) // [virtio_net][64c5]
    0.00 :   64ca:   mov    %r10,%rcx
    0.00 :   64cd:   mov    0x8(%rsp),%rdx
    0.00 :   64d2:   mov    %r8d,%r11d
    0.00 :   64d5:   sub    %rdi,%rcx
    0.00 :   64d8:   and    $0x3fffff,%r11d
    0.00 :   64df:   mov    %r13d,%edi
    0.00 :   64e2:   sar    $0x6,%rcx
    0.00 :   64e6:   sub    %eax,%edi
    0.00 :   64e8:   add    %rdi,0x8(%r12)
    0.00 :   64ed:   shl    $0xc,%rcx
    0.00 :   64f1:   add    %rsi,%rcx
    0.00 :   64f4:   mov    %r8,%rsi
    0.00 :   64f7:   sub    %rcx,%rdx
    0.00 :   64fa:   shr    $0x16,%rsi
    0.00 :   64fe:   mov    %edx,%r15d
    2.07 :   6501:   mov    %esi,%ecx // [virtio_net][6501]
    0.00 :   6503:   cmp    %r13d,%r11d
    0.00 :   6506:   jb     6e9a <receive_buf+0xd5a>
    0.00 :   650c:   xor    %edi,%edi
    0.00 :   650e:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6512:   mov    $0x1,%eax
    0.00 :   6517:   jne    7020 <receive_buf+0xee0>
    0.00 :   651d:   push   %rcx
    0.00 :   651e:   mov    %r10,%rdx
    0.00 :   6521:   mov    %r11d,%r9d
    0.00 :   6524:   mov    %r13d,%r8d
    0.00 :   6527:   push   %rdi
    0.00 :   6528:   mov    %r15d,%ecx
    0.00 :   652b:   mov    %rbp,%rsi
    0.00 :   652e:   mov    %rbx,%rdi
    0.00 :   6531:   push   %rax
    0.00 :   6532:   mov    %r10,0x28(%rsp)
    0.00 :   6537:   call   2170 <page_to_skb>
    0.00 :   653c:   mov    0x28(%rsp),%r10
    3.05 :   6541:   add    $0x18,%rsp // [virtio_net][6541]
    0.00 :   6545:   test   %rax,%rax
    0.00 :   6548:   mov    %rax,%r14
    0.00 :   654b:   je     6eab <receive_buf+0xd6b>
    0.00 :   6551:   movzwl 0x52(%rsp),%eax
    0.00 :   6556:   mov    %r14,%r15
    0.00 :   6559:   lea    0x54(%rsp),%rdx
    0.00 :   655e:   lea    -0x1(%rax),%r13d
    0.00 :   6562:   mov    %r13w,0x52(%rsp)
    0.00 :   6568:   test   %r13w,%r13w
    0.00 :   656c:   je     669d <receive_buf+0x55d>
    0.00 :   6572:   mov    %rdx,0x10(%rsp)
    2.76 :   6577:   mov    %rbx,0x20(%rsp) // [virtio_net][6577]
    0.00 :   657c:   mov    %r13d,%ebx
    0.00 :   657f:   mov    0x0(%rbp),%rdi
    0.00 :   6583:   mov    0x10(%rsp),%rsi
    0.00 :   6588:   lea    0x58(%rsp),%rdx
    0.00 :   658d:   call   6592 <receive_buf+0x452>
    0.00 :   6592:   mov    %rax,%r13
    0.00 :   6595:   test   %rax,%rax
    0.00 :   6598:   je     6ace <receive_buf+0x98e>
    0.00 :   659e:   mov    0x54(%rsp),%eax
    0.00 :   65a2:   add    %rax,0x8(%r12)
    0.00 :   65a7:   mov    %rax,%rcx
    0.00 :   65aa:   mov    $0x80000000,%eax
    0.00 :   65af:   add    %r13,%rax
    0.00 :   65b2:   jb     7ab2 <receive_buf+0x1972>
    0.00 :   65b8:   mov    $0xffffffff80000000,%rsi
    0.00 :   65bf:   sub    0x0(%rip),%rsi        # 65c6 <receive_buf+0x486>
    0.00 :   65c6:   add    %rsi,%rax
    0.00 :   65c9:   mov    0x0(%rip),%rdx        # 65d0 <receive_buf+0x490>
    0.00 :   65d0:   shr    $0xc,%rax
    0.00 :   65d4:   shl    $0x6,%rax
    0.00 :   65d8:   add    %rdx,%rax
    0.00 :   65db:   mov    0x8(%rax),%rsi
    2.67 :   65df:   mov    %rax,%rbx // [virtio_net][65df]
    0.00 :   65e2:   test   $0x1,%sil
    0.00 :   65e6:   jne    6c02 <receive_buf+0xac2>
    0.00 :   65ec:   nopl   0x0(%rax,%rax,1)
    0.00 :   65f1:   mov    0x58(%rsp),%r8
    0.00 :   65f6:   mov    %r8d,%r9d
    0.00 :   65f9:   and    $0x3fffff,%r9d
    0.00 :   6600:   cmp    %ecx,%r9d
    0.00 :   6603:   jb     6b03 <receive_buf+0x9c3>
    0.00 :   6609:   mov    0xc0(%r15),%eax
    0.00 :   6610:   mov    0xc8(%r15),%rcx
    0.00 :   6617:   movzbl 0x2(%rcx,%rax,1),%esi
    0.00 :   661c:   cmp    $0x11,%esi
    0.00 :   661f:   je     6c3d <receive_buf+0xafd>
    0.00 :   6625:   mov    %rbx,%rax
    0.00 :   6628:   mov    %r13,%rcx
    0.00 :   662b:   sub    %rdx,%rax
    0.00 :   662e:   sar    $0x6,%rax
    0.00 :   6632:   shl    $0xc,%rax
    0.00 :   6636:   add    0x0(%rip),%rax        # 663d <receive_buf+0x4fd>
    0.00 :   663d:   sub    %rax,%rcx
    0.00 :   6640:   cmp    %r15,%r14
    0.00 :   6643:   je     6658 <receive_buf+0x518>
    0.00 :   6645:   mov    0x54(%rsp),%eax
    0.00 :   6649:   add    %r9d,0xd8(%r14)
    0.00 :   6650:   add    %eax,0x74(%r14)
    0.00 :   6654:   add    %eax,0x70(%r14)
    0.00 :   6658:   mov    0xc0(%r15),%eax
    0.00 :   665f:   add    0xc8(%r15),%rax
    0.00 :   6666:   testb  $0x1,(%rax)
    0.00 :   6669:   je     66ce <receive_buf+0x58e>
    0.00 :   666b:   cmpq   $0x0,0x28(%rax)
    0.00 :   6670:   je     66ce <receive_buf+0x58e>
    0.00 :   6672:   mov    0x54(%rsp),%r8d
    0.00 :   6677:   mov    %rbx,%rdx
    0.00 :   667a:   mov    %r15,%rdi
    0.00 :   667d:   call   6682 <receive_buf+0x542>
    0.00 :   6682:   movzwl 0x52(%rsp),%eax
    0.00 :   6687:   lea    -0x1(%rax),%ebx
    0.00 :   668a:   mov    %bx,0x52(%rsp)
    0.00 :   668f:   test   %bx,%bx
    0.00 :   6692:   jne    657f <receive_buf+0x43f>
    0.00 :   6698:   mov    0x20(%rsp),%rbx
    0.00 :   669d:   mov    0x1e8(%rbp),%rdx
    5.91 :   66a4:   mov    0x70(%r14),%eax // [virtio_net][66a4]
    0.00 :   66a8:   test   %rdx,%rdx
    0.00 :   66ab:   je     66be <receive_buf+0x57e>
    0.00 :   66ad:   mov    %rdx,%rcx
    0.00 :   66b0:   shl    $0x6,%rcx
    0.00 :   66b4:   sub    %rdx,%rcx
    0.00 :   66b7:   add    %rcx,%rax
    0.00 :   66ba:   shr    $0x6,%rax
    0.00 :   66be:   mov    %rax,0x1e8(%rbp)
    0.00 :   66c5:   lea    0x28(%r14),%rdx
    0.00 :   66c9:   jmp    61d5 <receive_buf+0x95>
    0.00 :   66ce:   test   %esi,%esi
    0.00 :   66d0:   je     6672 <receive_buf+0x532>
    0.00 :   66d2:   lea    -0x1(%rsi),%r13d
    0.00 :   66d6:   movslq %r13d,%rdx
    0.00 :   66d9:   shl    $0x4,%rdx
    0.00 :   66dd:   add    %rdx,%rax
    0.00 :   66e0:   cmp    0x30(%rax),%rbx
    0.00 :   66e4:   jne    6672 <receive_buf+0x532>
    0.00 :   66e6:   mov    0x38(%rax),%edx
    0.00 :   66e9:   add    0x3c(%rax),%edx
    0.00 :   66ec:   cmp    %ecx,%edx
    0.00 :   66ee:   jne    6672 <receive_buf+0x532>
    0.00 :   66f0:   mov    %rbx,%rdi
    0.00 :   66f3:   mov    %r9d,0x18(%rsp)
    0.00 :   66f8:   call   1ef0 <put_page>
    0.00 :   66fd:   mov    0x18(%rsp),%ecx
    0.00 :   6701:   mov    0x54(%rsp),%edx
    0.00 :   6705:   mov    %r13d,%esi
    0.00 :   6708:   mov    %r15,%rdi
    0.00 :   670b:   call   6710 <receive_buf+0x5d0>
    0.00 :   6710:   jmp    6682 <receive_buf+0x542>
    0.00 :   6715:   test   $0xfff,%eax
    0.00 :   671a:   jne    65f1 <receive_buf+0x4b1>
    0.00 :   6720:   mov    (%rax),%rsi
    0.00 :   6723:   test   $0x10000,%esi
    0.00 :   6729:   je     65f1 <receive_buf+0x4b1>
    0.00 :   672f:   mov    0x48(%rax),%rsi
    0.00 :   6733:   lea    -0x1(%rsi),%r10
    0.00 :   6737:   and    $0x1,%esi
    0.00 :   673a:   cmovne %r10,%rax
    0.00 :   673e:   mov    %rax,%rbx
    0.00 :   6741:   jmp    65f1 <receive_buf+0x4b1>
    0.00 :   6746:   movzbl 0x80(%r14),%r8d
    0.00 :   674e:   rol    $0x8,%ax
    0.00 :   6752:   mov    0x70(%r14),%ecx
    0.00 :   6756:   mov    $0x0,%rsi
    0.00 :   675d:   movzwl %ax,%edx
    0.00 :   6760:   mov    $0x0,%rdi
    0.00 :   6767:   and    $0x7,%r8d
    0.00 :   676b:   call   6770 <receive_buf+0x630>
    0.00 :   6770:   jmp    6440 <receive_buf+0x300>
    0.00 :   6775:   test   $0xfff,%edx
    0.00 :   677b:   jne    62d4 <receive_buf+0x194>
    0.00 :   6781:   mov    (%rdx),%rcx
    0.00 :   6784:   test   $0x10000,%ecx
    0.00 :   678a:   je     62d4 <receive_buf+0x194>
    0.00 :   6790:   mov    0x48(%rdx),%rcx
    0.00 :   6794:   lea    -0x1(%rcx),%rsi
    0.00 :   6798:   and    $0x1,%ecx
    0.00 :   679b:   cmovne %rsi,%rdx
    0.00 :   679f:   mov    %rdx,0x30(%rsp)
    0.00 :   67a4:   jmp    62d4 <receive_buf+0x194>
    0.00 :   67a9:   test   $0xfff,%edx
    0.00 :   67af:   jne    64ca <receive_buf+0x38a>
    0.00 :   67b5:   mov    (%rdx),%rcx
    0.00 :   67b8:   test   $0x10000,%ecx
    0.00 :   67be:   je     64ca <receive_buf+0x38a>
    0.00 :   67c4:   mov    0x48(%rdx),%rcx
    0.00 :   67c8:   lea    -0x1(%rcx),%r10
    0.00 :   67cc:   and    $0x1,%ecx
    0.00 :   67cf:   cmove  %rdx,%r10
    0.00 :   67d3:   jmp    64ca <receive_buf+0x38a>
    0.00 :   67d8:   mov    0x38(%rsp),%eax
    0.00 :   67dc:   mov    0x8(%rsp),%rsi
    0.00 :   67e1:   movzbl 0x4a(%rbx),%ecx
    0.00 :   67e5:   add    %rax,%rsi
    0.00 :   67e8:   cmp    $0x8,%ecx
    0.00 :   67eb:   jae    6d3d <receive_buf+0xbfd>
    0.00 :   67f1:   test   $0x4,%cl
    0.00 :   67f4:   jne    77fd <receive_buf+0x16bd>
    0.00 :   67fa:   test   %ecx,%ecx
    0.00 :   67fc:   je     635e <receive_buf+0x21e>
    0.00 :   6802:   movzbl (%rsi),%eax
    0.00 :   6805:   mov    %al,(%rdx)
    0.00 :   6807:   test   $0x2,%cl
    0.00 :   680a:   je     635e <receive_buf+0x21e>
    0.00 :   6810:   movzwl -0x2(%rcx,%rsi,1),%eax
    0.00 :   6815:   mov    %ax,-0x2(%rdx,%rcx,1)
    0.00 :   681a:   jmp    635e <receive_buf+0x21e>
    0.00 :   681f:   mov    0x70(%r14),%eax
    0.00 :   6823:   mov    %ebx,%edi
    0.00 :   6825:   movzwl 0x2c(%r14),%esi
    0.00 :   682a:   mov    0xc8(%r14),%rdx
    0.00 :   6831:   sub    %r15d,%edi
    0.00 :   6834:   test   $0x10000,%r12d
    0.00 :   683b:   mov    0xc0(%r14),%ecx
    0.00 :   6842:   cmovne %edi,%ebx
    0.00 :   6845:   movzwl %si,%edi
    0.00 :   6848:   sub    %ebx,%eax
    0.00 :   684a:   cmp    %eax,%edi
    0.00 :   684c:   jae    6416 <receive_buf+0x2d6>
    0.00 :   6852:   lea    (%rdx,%rcx,1),%rax
    0.00 :   6856:   or     $0x2,%r12d
    0.00 :   685a:   xor    %edx,%edx
    0.00 :   685c:   mov    %si,0x4(%rax)
    0.00 :   6860:   mov    %r12d,0x18(%rax)
    0.00 :   6864:   mov    %dx,0x6(%rax)
    0.00 :   6868:   jmp    6416 <receive_buf+0x2d6>
    0.00 :   686d:   mov    $0x6,%ecx
    0.00 :   6872:   mov    $0x14,%r15d
    0.00 :   6878:   mov    $0x10,%r12d
    2.30 :   687e:   mov    %r12d,%edi // [virtio_net][687e]
    0.00 :   6881:   or     $0x4,%edi
    0.00 :   6884:   test   %al,%al
    0.00 :   6886:   cmovs  %edi,%r12d
    0.00 :   688a:   cmpw   $0x0,0x2c(%r14)
    0.00 :   6890:   je     6238 <receive_buf+0xf8>
    0.00 :   6896:   mov    0xd0(%r14),%rax
    0.00 :   689d:   sub    0xc8(%r14),%rax
    0.00 :   68a4:   and    $0x1,%edx
    0.00 :   68a7:   mov    %ax,0xba(%r14)
    0.00 :   68af:   jne    63a0 <receive_buf+0x260>
    0.00 :   68b5:   cmpw   $0x0,0xb8(%r14)
    0.00 :   68be:   je     6c95 <receive_buf+0xb55>
    0.00 :   68c4:   movq   $0x0,0x68(%rsp)
    0.00 :   68cd:   movl   $0x0,0x70(%rsp)
    0.00 :   68d5:   cmpw   $0x0,0xb4(%r14)
    0.00 :   68de:   je     6da3 <receive_buf+0xc63>
    0.00 :   68e4:   mov    %rbp,%rax
    0.00 :   68e7:   mov    %r12d,%ebx
    0.00 :   68ea:   mov    %r14,%rbp
    0.00 :   68ed:   mov    %ecx,0x8(%rsp)
    0.00 :   68f1:   lea    0x68(%rsp),%r13
    0.00 :   68f6:   and    $0x10000,%ebx
    0.00 :   68fc:   mov    %rax,%r14
    0.00 :   68ff:   jmp    6923 <receive_buf+0x7e3>
    0.00 :   6901:   test   %ebx,%ebx
    0.00 :   6903:   je     6c8d <receive_buf+0xb4d>
    0.00 :   6909:   cmpw   $0x8,0xb4(%rbp)
    0.00 :   6911:   jne    6c8d <receive_buf+0xb4d>
    0.00 :   6917:   mov    $0xffffdd86,%ecx
    0.00 :   691c:   mov    %cx,0xb4(%rbp)
    0.00 :   6923:   movq   $0x0,0x0(%r13)
    0.00 :   692b:   xor    %r9d,%r9d
    0.00 :   692e:   xor    %r8d,%r8d
    0.00 :   6931:   xor    %edi,%edi
    0.00 :   6933:   movl   $0x0,0x8(%r13)
    0.00 :   693b:   mov    %r13,%rcx
    0.00 :   693e:   mov    $0x0,%rdx
    0.00 :   6945:   mov    %rbp,%rsi
    0.00 :   6948:   push   $0x0
    0.00 :   694a:   push   $0x0
    0.00 :   694c:   push   $0x0
    0.00 :   694e:   call   6953 <receive_buf+0x813>
    0.00 :   6953:   add    $0x18,%rsp
    0.00 :   6957:   test   %al,%al
    0.00 :   6959:   je     6901 <receive_buf+0x7c1>
    0.00 :   695b:   mov    %r14,%rax
    0.00 :   695e:   mov    %rbp,%r14
    0.00 :   6961:   movzwl 0x68(%rsp),%ebx
    0.00 :   6966:   mov    0x8(%rsp),%ecx
    0.00 :   696a:   mov    %rax,%rbp
    0.00 :   696d:   mov    0x70(%r14),%eax
    0.00 :   6971:   mov    0x74(%r14),%edx
    0.00 :   6975:   add    %r15d,%ebx
    0.00 :   6978:   mov    %eax,%esi
    0.00 :   697a:   sub    %edx,%esi
    0.00 :   697c:   cmp    %ebx,%esi
    0.00 :   697e:   jb     7768 <receive_buf+0x1628>
    0.00 :   6984:   movzbl 0x72(%rsp),%eax
    0.00 :   6989:   cmp    %ecx,%eax
    0.00 :   698b:   jne    6238 <receive_buf+0xf8>
    0.00 :   6991:   mov    0xd0(%r14),%rax
    0.00 :   6998:   sub    0xc8(%r14),%rax
    0.00 :   699f:   add    0x68(%rsp),%ax
    0.00 :   69a4:   mov    %ax,0xb6(%r14)
    0.00 :   69ac:   movzbl 0x29(%r14),%eax
    0.00 :   69b1:   jmp    640e <receive_buf+0x2ce>
    0.00 :   69b6:   mov    $0x6,%ecx
    0.00 :   69bb:   mov    $0x14,%r15d
    0.00 :   69c1:   mov    $0x1,%r12d
    0.00 :   69c7:   jmp    687e <receive_buf+0x73e>
    0.00 :   69cc:   test   %rdx,%rdx
    0.00 :   69cf:   je     61ec <receive_buf+0xac>
    0.00 :   69d5:   movzwl 0x38(%r14),%eax
    0.00 :   69da:   cmp    $0x9,%ax
    0.00 :   69de:   ja     7267 <receive_buf+0x1127>
    0.00 :   69e4:   mov    $0x36c,%edx
    0.00 :   69e9:   bt     %rax,%rdx
    0.00 :   69ed:   setb   %cl
    0.00 :   69f0:   movzbl 0x81(%r14),%eax
    0.00 :   69f8:   mov    0x34(%r14),%edx
    0.00 :   69fc:   and    $0xfffffffc,%eax
    0.00 :   69ff:   mov    %edx,0x94(%r14)
    0.00 :   6a06:   or     %ecx,%eax
    0.00 :   6a08:   mov    %al,0x81(%r14)
    0.00 :   6a0f:   jmp    61ec <receive_buf+0xac>
    0.00 :   6a14:   mov    $0x11,%ecx
    0.00 :   6a19:   mov    $0x8,%r15d
    0.00 :   6a1f:   mov    $0x10000,%r12d
    0.00 :   6a25:   jmp    687e <receive_buf+0x73e>
    0.00 :   6a2a:   nopl   0x0(%rax,%rax,1)
    0.00 :   6a2f:   mov    (%rsp),%rax
    0.00 :   6a33:   addq   $0x1,0x180(%rax)
    0.00 :   6a3b:   cmpb   $0x0,0x38(%rbx)
    0.00 :   6a3f:   jne    6a7e <receive_buf+0x93e>
    0.00 :   6a41:   cmpb   $0x0,0x33(%rbx)
    0.00 :   6a45:   je     6a7e <receive_buf+0x93e>
    0.00 :   6a47:   mov    0x8(%rsp),%rax
    0.00 :   6a4c:   mov    0x28(%rax),%rax
    0.00 :   6a50:   test   %rax,%rax
    0.00 :   6a53:   je     748a <receive_buf+0x134a>
    0.00 :   6a59:   mov    %rax,%rdx
    0.00 :   6a5c:   mov    0x28(%rax),%rax
    0.00 :   6a60:   test   %rax,%rax
    0.00 :   6a63:   jne    6a59 <receive_buf+0x919>
    0.00 :   6a65:   mov    0x1e0(%rbp),%rax
    0.00 :   6a6c:   mov    %rax,0x28(%rdx)
    0.00 :   6a70:   mov    0x8(%rsp),%rax
    0.00 :   6a75:   mov    %rax,0x1e0(%rbp)
    0.00 :   6a7c:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   6a7e:   mov    0x8(%rsp),%rbx
    0.00 :   6a83:   mov    $0x80000000,%eax
    0.00 :   6a88:   add    %rax,%rbx
    0.00 :   6a8b:   mov    %rbx,%rax
    0.00 :   6a8e:   jb     7ba7 <receive_buf+0x1a67>
    0.00 :   6a94:   mov    $0xffffffff80000000,%rdx
    0.00 :   6a9b:   sub    0x0(%rip),%rdx        # 6aa2 <receive_buf+0x962>
    0.00 :   6aa2:   add    %rdx,%rax
    0.00 :   6aa5:   shr    $0xc,%rax
    0.00 :   6aa9:   shl    $0x6,%rax
    0.00 :   6aad:   add    0x0(%rip),%rax        # 6ab4 <receive_buf+0x974>
    0.00 :   6ab4:   mov    0x8(%rax),%rdx
    0.00 :   6ab8:   mov    %rax,%rdi
    0.00 :   6abb:   test   $0x1,%dl
    0.00 :   6abe:   jne    6d9a <receive_buf+0xc5a>
    0.00 :   6ac4:   nopl   0x0(%rax,%rax,1)
    0.00 :   6ac9:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6ace:   nopl   0x0(%rax,%rax,1)
    0.00 :   6ad3:   mov    (%rsp),%rax
    0.00 :   6ad7:   addq   $0x1,0x180(%rax)
    0.00 :   6adf:   addq   $0x1,0x10(%r12)
    0.00 :   6ae5:   mov    %r14,%rdi
    0.00 :   6ae8:   call   6aed <receive_buf+0x9ad>
    0.00 :   6aed:   add    $0xa0,%rsp
    0.00 :   6af4:   pop    %rbx
    0.00 :   6af5:   pop    %rbp
    0.00 :   6af6:   pop    %r12
    0.00 :   6af8:   pop    %r13
    0.00 :   6afa:   pop    %r14
    0.00 :   6afc:   pop    %r15
    0.00 :   6afe:   jmp    6b03 <receive_buf+0x9c3>
    0.00 :   6b03:   mov    %rbx,%r10
    0.00 :   6b06:   nopl   0x0(%rax,%rax,1)
    0.00 :   6b0b:   mov    (%rsp),%rax
    0.00 :   6b0f:   addq   $0x1,0x180(%rax)
    0.00 :   6b17:   mov    %r10,%rdi
    0.00 :   6b1a:   call   1ef0 <put_page>
    0.00 :   6b1f:   movzwl 0x52(%rsp),%eax
    0.00 :   6b24:   lea    -0x1(%rax),%r13d
    0.00 :   6b28:   mov    %r13w,0x52(%rsp)
    0.00 :   6b2e:   cmp    $0x1,%ax
    0.00 :   6b32:   jbe    6adf <receive_buf+0x99f>
    0.00 :   6b34:   lea    0x54(%rsp),%rdx
    0.00 :   6b39:   mov    $0x80000000,%ebx
    0.00 :   6b3e:   mov    %rdx,%r15
    0.00 :   6b41:   jmp    6ba1 <receive_buf+0xa61>
    0.00 :   6b43:   mov    0x54(%rsp),%edx
    0.00 :   6b47:   add    %rdx,0x8(%r12)
    0.00 :   6b4c:   add    %rbx,%rax
    0.00 :   6b4f:   jb     7aa6 <receive_buf+0x1966>
    0.00 :   6b55:   mov    $0xffffffff80000000,%rdx
    0.00 :   6b5c:   sub    0x0(%rip),%rdx        # 6b63 <receive_buf+0xa23>
    0.00 :   6b63:   add    %rdx,%rax
    0.00 :   6b66:   shr    $0xc,%rax
    0.00 :   6b6a:   shl    $0x6,%rax
    0.00 :   6b6e:   add    0x0(%rip),%rax        # 6b75 <receive_buf+0xa35>
    0.00 :   6b75:   mov    0x8(%rax),%rdx
    0.00 :   6b79:   mov    %rax,%rdi
    0.00 :   6b7c:   test   $0x1,%dl
    0.00 :   6b7f:   jne    6bfc <receive_buf+0xabc>
    0.00 :   6b81:   xchg   %ax,%ax
    0.00 :   6b83:   call   1ef0 <put_page>
    0.00 :   6b88:   movzwl 0x52(%rsp),%eax
    0.00 :   6b8d:   lea    -0x1(%rax),%r13d
    0.00 :   6b91:   mov    %r13w,0x52(%rsp)
    0.00 :   6b97:   cmp    $0x1,%ax
    0.00 :   6b9b:   jbe    6adf <receive_buf+0x99f>
    0.00 :   6ba1:   mov    0x0(%rbp),%rdi
    0.00 :   6ba5:   mov    %r15,%rsi
    0.00 :   6ba8:   call   6bad <receive_buf+0xa6d>
    0.00 :   6bad:   test   %rax,%rax
    0.00 :   6bb0:   jne    6b43 <receive_buf+0xa03>
    0.00 :   6bb2:   xchg   %ax,%ax
    0.00 :   6bb4:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6bb9:   mov    (%rsp),%rdx
    0.00 :   6bbd:   movzwl %r13w,%ecx
    0.00 :   6bc1:   mov    $0x0,%rsi
    0.00 :   6bc8:   mov    $0x0,%rdi
    0.00 :   6bcf:   call   6bd4 <receive_buf+0xa94>
    0.00 :   6bd4:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6bd9:   test   $0xfff,%eax
    0.00 :   6bde:   jne    6b83 <receive_buf+0xa43>
    0.00 :   6be0:   mov    (%rax),%rdx
    0.00 :   6be3:   test   $0x10000,%edx
    0.00 :   6be9:   je     6b83 <receive_buf+0xa43>
    0.00 :   6beb:   mov    0x48(%rax),%rdx
    0.00 :   6bef:   lea    -0x1(%rdx),%rdi
    0.00 :   6bf3:   and    $0x1,%edx
    0.00 :   6bf6:   cmove  %rax,%rdi
    0.00 :   6bfa:   jmp    6b83 <receive_buf+0xa43>
    0.00 :   6bfc:   lea    -0x1(%rdx),%rdi
    0.00 :   6c00:   jmp    6b83 <receive_buf+0xa43>
    0.00 :   6c02:   lea    -0x1(%rsi),%rbx
    0.00 :   6c06:   jmp    65f1 <receive_buf+0x4b1>
    0.00 :   6c0b:   nopl   0x0(%rax,%rax,1)
    0.00 :   6c10:   mov    (%rsp),%rax
    0.00 :   6c14:   addq   $0x1,0x180(%rax)
    0.00 :   6c1c:   addq   $0x1,0x10(%r12)
    0.00 :   6c22:   mov    0x30(%rsp),%rdi
    0.00 :   6c27:   add    $0xa0,%rsp
    0.00 :   6c2e:   pop    %rbx
    0.00 :   6c2f:   pop    %rbp
    0.00 :   6c30:   pop    %r12
    0.00 :   6c32:   pop    %r13
    0.00 :   6c34:   pop    %r14
    0.00 :   6c36:   pop    %r15
    0.00 :   6c38:   jmp    1ef0 <put_page>
    0.00 :   6c3d:   xor    %edx,%edx
    0.00 :   6c3f:   xor    %edi,%edi
    0.00 :   6c41:   mov    $0xffffffff,%ecx
    0.00 :   6c46:   mov    $0xa20,%esi
    0.00 :   6c4b:   mov    %r9d,0x18(%rsp)
    0.00 :   6c50:   call   6c55 <receive_buf+0xb15>
    0.00 :   6c55:   test   %rax,%rax
    0.00 :   6c58:   je     74c7 <receive_buf+0x1387>
    0.00 :   6c5e:   cmp    %r15,%r14
    0.00 :   6c61:   mov    0x18(%rsp),%r9d
    0.00 :   6c66:   je     71cd <receive_buf+0x108d>
    0.00 :   6c6c:   mov    %rax,(%r15)
    0.00 :   6c6f:   mov    0xd8(%rax),%edx
    0.00 :   6c75:   mov    %rax,%r15
    0.00 :   6c78:   xor    %esi,%esi
    0.00 :   6c7a:   add    %edx,0xd8(%r14)
    0.00 :   6c81:   mov    0x0(%rip),%rdx        # 6c88 <receive_buf+0xb48>
    0.00 :   6c88:   jmp    6625 <receive_buf+0x4e5>
    0.00 :   6c8d:   mov    %rbp,%r14
    0.00 :   6c90:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6c95:   mov    0x70(%r14),%eax
    0.00 :   6c99:   mov    0x74(%r14),%edx
    0.00 :   6c9d:   mov    %r15d,%ebx
    0.00 :   6ca0:   mov    %eax,%ecx
    0.00 :   6ca2:   sub    %edx,%ecx
    0.00 :   6ca4:   cmp    %r15d,%ecx
    0.00 :   6ca7:   jae    6823 <receive_buf+0x6e3>
    0.00 :   6cad:   cmp    %r15d,%eax
    0.00 :   6cb0:   jb     6238 <receive_buf+0xf8>
    0.00 :   6cb6:   sub    %eax,%edx
    0.00 :   6cb8:   mov    %r14,%rdi
    0.00 :   6cbb:   lea    (%rdx,%r15,1),%esi
    0.00 :   6cbf:   call   6cc4 <receive_buf+0xb84>
    0.00 :   6cc4:   test   %rax,%rax
    0.00 :   6cc7:   jne    6409 <receive_buf+0x2c9>
    0.00 :   6ccd:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6cd2:   mov    (%rsp),%rdx
    0.00 :   6cd6:   mov    $0x0,%rsi
    0.00 :   6cdd:   mov    $0x0,%rdi
    0.00 :   6ce4:   call   6ce9 <receive_buf+0xba9>
    0.00 :   6ce9:   jmp    6a2f <receive_buf+0x8ef>
    0.00 :   6cee:   mov    0x8(%rsp),%rax
    0.00 :   6cf3:   mov    (%rsp),%rdx
    0.00 :   6cf7:   movzwl %bx,%ecx
    0.00 :   6cfa:   mov    $0x0,%rsi
    0.00 :   6d01:   mov    $0x0,%rdi
    0.00 :   6d08:   movzwl 0xa(%rax),%r8d
    0.00 :   6d0d:   call   6d12 <receive_buf+0xbd2>
    0.00 :   6d12:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6d17:   mov    (%rsp),%rdx
    0.00 :   6d1b:   mov    $0x0,%rsi
    0.00 :   6d22:   mov    %rbx,0x8(%rsp)
    0.00 :   6d27:   mov    $0x0,%rdi
    0.00 :   6d2e:   call   6d33 <receive_buf+0xbf3>
    0.00 :   6d33:   mov    0x8(%rsp),%r10
    0.00 :   6d38:   jmp    6b0b <receive_buf+0x9cb>
    0.00 :   6d3d:   mov    (%rsi),%rax
    0.00 :   6d40:   lea    0x30(%r14),%rdi
    0.00 :   6d44:   and    $0xfffffffffffffff8,%rdi
    0.00 :   6d48:   mov    %rax,(%rdx)
    0.00 :   6d4b:   mov    -0x8(%rcx,%rsi,1),%rax
    0.00 :   6d50:   mov    %rax,-0x8(%rdx,%rcx,1)
    0.00 :   6d55:   mov    %rdx,%rax
    0.00 :   6d58:   sub    %rdi,%rax
    0.00 :   6d5b:   add    %eax,%ecx
    0.00 :   6d5d:   sub    %rax,%rsi
    0.00 :   6d60:   shr    $0x3,%ecx
    0.00 :   6d63:   rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   6d66:   jmp    635e <receive_buf+0x21e>
    0.00 :   6d6b:   test   $0xfff,%eax
    0.00 :   6d70:   jne    6c27 <receive_buf+0xae7>
    0.00 :   6d76:   mov    (%rax),%rdx
    0.00 :   6d79:   test   $0x10000,%edx
    0.00 :   6d7f:   je     6c27 <receive_buf+0xae7>
    0.00 :   6d85:   mov    0x48(%rax),%rax
    0.00 :   6d89:   test   $0x1,%al
    0.00 :   6d8b:   je     6c27 <receive_buf+0xae7>
    0.00 :   6d91:   lea    -0x1(%rax),%rdi
    0.00 :   6d95:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6d9a:   lea    -0x1(%rdx),%rdi
    0.00 :   6d9e:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6da3:   mov    0x10(%r14),%rax
    0.00 :   6da7:   mov    0x230(%rax),%rax
    0.00 :   6dae:   test   %rax,%rax
    0.00 :   6db1:   je     7461 <receive_buf+0x1321>
    0.00 :   6db7:   mov    0x28(%rax),%rax
    0.00 :   6dbb:   test   %rax,%rax
    0.00 :   6dbe:   je     7461 <receive_buf+0x1321>
    0.00 :   6dc4:   mov    %ecx,0x8(%rsp)
    0.00 :   6dc8:   mov    %r14,%rdi
    0.00 :   6dcb:   call   6dd0 <receive_buf+0xc90>
    0.00 :   6dd0:   mov    0x8(%rsp),%ecx
    0.00 :   6dd4:   test   %ax,%ax
    0.00 :   6dd7:   je     7449 <receive_buf+0x1309>
    0.00 :   6ddd:   movzbl 0x29(%r14),%edx
    0.00 :   6de2:   and    $0x7f,%dl
    0.00 :   6de5:   cmp    $0x3,%edx
    0.00 :   6de8:   je     7390 <receive_buf+0x1250>
    0.00 :   6dee:   cmp    $0x4,%edx
    0.00 :   6df1:   je     739a <receive_buf+0x125a>
    0.00 :   6df7:   cmp    $0x1,%edx
    0.00 :   6dfa:   jne    6238 <receive_buf+0xf8>
    0.00 :   6e00:   cmp    $0x8,%ax
    0.00 :   6e04:   jne    6238 <receive_buf+0xf8>
    0.00 :   6e0a:   mov    %ax,0xb4(%r14)
    0.00 :   6e12:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   6e17:   mov    %edx,0x8(%rsp)
    2.60 :   6e1b:   cmp    %eax,%ecx // [virtio_net][6e1b]
    0.00 :   6e1d:   jb     6238 <receive_buf+0xf8>
    0.00 :   6e23:   sub    %ecx,%esi
    0.00 :   6e25:   mov    %r14,%rdi
    0.00 :   6e28:   add    %eax,%esi
    0.00 :   6e2a:   call   6e2f <receive_buf+0xcef>
    0.00 :   6e2f:   mov    0x8(%rsp),%edx
    0.00 :   6e33:   test   %rax,%rax
    0.00 :   6e36:   jne    63ca <receive_buf+0x28a>
    0.00 :   6e3c:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6e41:   cmp    %ebx,%eax
    0.00 :   6e43:   jb     6238 <receive_buf+0xf8>
    0.00 :   6e49:   sub    %eax,%esi
    0.00 :   6e4b:   mov    %r14,%rdi
    0.00 :   6e4e:   add    %ebx,%esi
    0.00 :   6e50:   call   6e55 <receive_buf+0xd15>
    0.00 :   6e55:   test   %rax,%rax
    0.00 :   6e58:   jne    6409 <receive_buf+0x2c9>
    0.00 :   6e5e:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6e63:   lea    -0x1(%rcx),%rdi
    0.00 :   6e67:   mov    %rdi,0x30(%rsp)
    0.00 :   6e6c:   jmp    62d4 <receive_buf+0x194>
    0.00 :   6e71:   mov    0x8(%rsp),%rax
    0.00 :   6e76:   addq   $0x1,0x10(%r12)
    0.00 :   6e7c:   mov    0x28(%rax),%rax
    0.00 :   6e80:   test   %rax,%rax
    0.00 :   6e83:   je     748a <receive_buf+0x134a>
    0.00 :   6e89:   mov    %rax,%rdx
    0.00 :   6e8c:   mov    0x28(%rax),%rax
    0.00 :   6e90:   test   %rax,%rax
    0.00 :   6e93:   jne    6e89 <receive_buf+0xd49>
    0.00 :   6e95:   jmp    6a65 <receive_buf+0x925>
    0.00 :   6e9a:   nopl   0x0(%rax,%rax,1)
    0.00 :   6e9f:   mov    (%rsp),%rax
    0.00 :   6ea3:   addq   $0x1,0x180(%rax)
    0.00 :   6eab:   xor    %r14d,%r14d
    0.00 :   6eae:   jmp    6b17 <receive_buf+0x9d7>
    2.41 :   6eb3:   lea    -0x1(%rcx),%r10 // [virtio_net][6eb3]
    0.00 :   6eb7:   jmp    64ca <receive_buf+0x38a>
    0.00 :   6ebc:   mov    %edx,0x28(%rsp)
    0.00 :   6ec0:   mov    %r11d,0x20(%rsp)
    0.00 :   6ec5:   mov    %r8,0x48(%rsp)
    0.00 :   6eca:   mov    %r10,0x40(%rsp)
    0.00 :   6ecf:   call   6ed4 <receive_buf+0xd94>
    0.00 :   6ed4:   mov    0x198(%rbp),%rax
    0.00 :   6edb:   mov    0x20(%rsp),%r11d
    0.00 :   6ee0:   mov    0x28(%rsp),%edx
    0.00 :   6ee4:   test   %rax,%rax
    0.00 :   6ee7:   mov    %rax,0x18(%rsp)
    0.00 :   6eec:   je     74ab <receive_buf+0x136b>
    0.00 :   6ef2:   lea    0x68(%rsp),%r13
    0.00 :   6ef7:   xor    %eax,%eax
    0.00 :   6ef9:   mov    $0x7,%ecx
    0.00 :   6efe:   mov    0x38(%rsp),%esi
    0.00 :   6f02:   movq   $0x0,0x60(%rsp)
    0.00 :   6f0b:   mov    %r13,%rdi
    0.00 :   6f0e:   rep stos %rax,%es:(%rdi)
    0.00 :   6f11:   mov    0x8(%rsp),%rax
    0.00 :   6f16:   cmpb   $0x0,0x1(%rax,%rsi,1)
    0.00 :   6f1b:   jne    7010 <receive_buf+0xed0>
    0.00 :   6f21:   mov    0x48(%rsp),%r8
    0.00 :   6f26:   movzbl 0x4a(%rbx),%eax
    0.00 :   6f2a:   mov    0x40(%rsp),%r10
    0.00 :   6f2f:   cmp    $0xff,%r8d
    0.00 :   6f36:   ja     6f42 <receive_buf+0xe02>
    0.00 :   6f38:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6f3c:   jne    78db <receive_buf+0x179b>
    0.00 :   6f42:   movslq %r8d,%r8
    0.00 :   6f45:   mov    0x10(%rsp),%eax
    0.00 :   6f49:   mov    0x8(%rsp),%rdi
    0.00 :   6f4e:   movl   $0x0,0x9c(%rsp)
    0.00 :   6f59:   mov    %eax,0x98(%rsp)
    0.00 :   6f60:   lea    0x4c0(%rbp),%rax
    0.00 :   6f67:   mov    %rax,0x88(%rsp)
    0.00 :   6f6f:   movzbl 0x4a(%rbx),%eax
    0.00 :   6f73:   lea    0x40(%rdi,%rax,1),%rax
    0.00 :   6f78:   add    %rax,%r8
    0.00 :   6f7b:   mov    %rax,0x80(%rsp)
    0.00 :   6f83:   add    %r8,%r10
    0.00 :   6f86:   mov    %r8,0x68(%rsp)
    0.00 :   6f8b:   mov    %r10,0x70(%rsp)
    0.00 :   6f90:   mov    %r8,0x78(%rsp)
    0.00 :   6f95:   nopl   0x0(%rax,%rax,1)
    0.00 :   6f9a:   mov    0x18(%rsp),%rax
    0.00 :   6f9f:   mov    %r13,%rdi
    0.00 :   6fa2:   mov    %r8,0x28(%rsp)
    0.00 :   6fa7:   mov    %r11d,0x20(%rsp)
    0.00 :   6fac:   mov    0x30(%rax),%rdx
    0.00 :   6fb0:   lea    0x48(%rax),%rsi
    0.00 :   6fb4:   call   6fb9 <receive_buf+0xe79>
    0.00 :   6fb9:   mov    0x28(%rsp),%r8
    0.00 :   6fbe:   mov    0x20(%rsp),%r11d
    0.00 :   6fc3:   mov    %eax,%ecx
    0.00 :   6fc5:   nopl   0x0(%rax,%rax,1)
    0.00 :   6fca:   addq   $0x1,0x18(%r12)
    0.00 :   6fd0:   cmp    $0x2,%ecx
    0.00 :   6fd3:   je     7494 <receive_buf+0x1354>
    0.00 :   6fd9:   jbe    7203 <receive_buf+0x10c3>
    0.00 :   6fdf:   cmp    $0x3,%ecx
    0.00 :   6fe2:   je     750d <receive_buf+0x13cd>
    0.00 :   6fe8:   cmp    $0x4,%ecx
    0.00 :   6feb:   jne    77e2 <receive_buf+0x16a2>
    0.00 :   6ff1:   addq   $0x1,0x28(%r12)
    0.00 :   6ff7:   mov    0x18(%rsp),%rdx
    0.00 :   6ffc:   mov    %r13,%rsi
    0.00 :   6fff:   mov    (%rsp),%rdi
    0.00 :   7003:   call   7008 <receive_buf+0xec8>
    0.00 :   7008:   test   %eax,%eax
    0.00 :   700a:   je     79bf <receive_buf+0x187f>
    0.00 :   7010:   call   7015 <receive_buf+0xed5>
    0.00 :   7015:   addq   $0x1,0x30(%r12)
    0.00 :   701b:   jmp    6c1c <receive_buf+0xadc>
    0.00 :   7020:   mov    %r10,0x30(%rsp)
    0.00 :   7025:   mov    %edi,0x28(%rsp)
    0.00 :   7029:   mov    %r11d,0x18(%rsp)
    0.00 :   702e:   mov    %rsi,0x40(%rsp)
    0.00 :   7033:   mov    %rdx,0x48(%rsp)
    0.00 :   7038:   mov    %esi,0x20(%rsp)
    0.00 :   703c:   mov    %r9d,0x38(%rsp)
    0.00 :   7041:   call   7046 <receive_buf+0xf06>
    0.00 :   7046:   mov    0x198(%rbp),%rax
    0.00 :   704d:   mov    0x18(%rsp),%r11d
    0.00 :   7052:   mov    0x20(%rsp),%ecx
    0.00 :   7056:   mov    0x28(%rsp),%edi
    0.00 :   705a:   test   %rax,%rax
    0.00 :   705d:   mov    %rax,0x10(%rsp)
    0.00 :   7062:   mov    0x30(%rsp),%r10
    0.00 :   7067:   je     74cf <receive_buf+0x138f>
    0.00 :   706d:   lea    0x68(%rsp),%r13
    0.00 :   7072:   xor    %eax,%eax
    0.00 :   7074:   mov    $0x7,%ecx
    0.00 :   7079:   movq   $0x0,0x60(%rsp)
    0.00 :   7082:   mov    %r13,%rdi
    0.00 :   7085:   rep stos %rax,%es:(%rdi)
    0.00 :   7088:   mov    0x8(%rsp),%rax
    0.00 :   708d:   cmpb   $0x0,0x1(%rax)
    0.00 :   7091:   jne    71b3 <receive_buf+0x1073>
    0.00 :   7097:   mov    0x40(%rsp),%rsi
    0.00 :   709c:   mov    0x38(%rsp),%r9d
    0.00 :   70a1:   mov    $0x1000,%ecx
    0.00 :   70a6:   test   %esi,%esi
    0.00 :   70a8:   cmove  %r11d,%ecx
    0.00 :   70ac:   cmp    $0x1,%r9w
    0.00 :   70b1:   ja     7793 <receive_buf+0x1653>
    0.00 :   70b7:   cmpb   $0x0,0x32(%rbx)
    0.00 :   70bb:   mov    0x48(%rsp),%rdx
    0.00 :   70c0:   je     70ce <receive_buf+0xf8e>
    0.00 :   70c2:   cmp    $0xff,%esi
    0.00 :   70c8:   jbe    7793 <receive_buf+0x1653>
    0.00 :   70ce:   mov    %r10,0x18(%rsp)
    0.00 :   70d3:   movslq %edx,%rdx
    0.00 :   70d6:   movzbl 0x4a(%rbx),%edi
    0.00 :   70da:   mov    0x18(%rsp),%rax
    0.00 :   70df:   movl   $0x0,0x9c(%rsp)
    0.00 :   70ea:   sub    0x0(%rip),%rax        # 70f1 <receive_buf+0xfb1>
    0.00 :   70f1:   sar    $0x6,%rax
    0.00 :   70f5:   sub    %edi,%ecx
    0.00 :   70f7:   shl    $0xc,%rax
    0.00 :   70fb:   add    0x0(%rip),%rax        # 7102 <receive_buf+0xfc2>
    0.00 :   7102:   mov    %ecx,0x98(%rsp)
    0.00 :   7109:   lea    0x4c0(%rbp),%rcx
    0.00 :   7110:   mov    %rax,%rsi
    0.00 :   7113:   mov    %edi,%eax
    0.00 :   7115:   mov    %rcx,0x88(%rsp)
    0.00 :   711d:   mov    0x54(%rsp),%ecx
    0.00 :   7121:   or     $0xffffffffffffff00,%rax
    0.00 :   7127:   add    %rdx,%rax
    0.00 :   712a:   sub    %edi,%ecx
    0.00 :   712c:   add    %rsi,%rax
    0.00 :   712f:   lea    0x100(%rax),%rdx
    0.00 :   7136:   mov    %rax,0x80(%rsp)
    0.00 :   713e:   movslq %ecx,%rax
    0.00 :   7141:   add    %rdx,%rax
    0.00 :   7144:   mov    %rdx,0x68(%rsp)
    0.00 :   7149:   mov    %rax,0x70(%rsp)
    0.00 :   714e:   mov    %rdx,0x78(%rsp)
    0.00 :   7153:   nopl   0x0(%rax,%rax,1)
    0.00 :   7158:   mov    0x10(%rsp),%rax
    0.00 :   715d:   mov    %r13,%rdi
    0.00 :   7160:   mov    %r10,0x28(%rsp)
    0.00 :   7165:   mov    %r11d,0x20(%rsp)
    0.00 :   716a:   mov    0x30(%rax),%rdx
    0.00 :   716e:   lea    0x48(%rax),%rsi
    0.00 :   7172:   call   7177 <receive_buf+0x1037>
    0.00 :   7177:   mov    0x28(%rsp),%r10
    0.00 :   717c:   mov    0x20(%rsp),%r11d
    0.00 :   7181:   mov    %eax,%r15d
    0.00 :   7184:   nopl   0x0(%rax,%rax,1)
    0.00 :   7189:   addq   $0x1,0x18(%r12)
    0.00 :   718f:   cmp    $0x2,%r15d
    0.00 :   7193:   je     780e <receive_buf+0x16ce>
    0.00 :   7199:   ja     726e <receive_buf+0x112e>
    0.00 :   719f:   test   %r15d,%r15d
    0.00 :   71a2:   je     7701 <receive_buf+0x15c1>
    0.00 :   71a8:   cmp    %r10,0x18(%rsp)
    0.00 :   71ad:   jne    79cd <receive_buf+0x188d>
    0.00 :   71b3:   mov    %r10,0x8(%rsp)
    0.00 :   71b8:   call   71bd <receive_buf+0x107d>
    0.00 :   71bd:   addq   $0x1,0x30(%r12)
    0.00 :   71c3:   mov    0x8(%rsp),%r10
    0.00 :   71c8:   jmp    6eab <receive_buf+0xd6b>
    0.00 :   71cd:   mov    0xc0(%r14),%edx
    0.00 :   71d4:   mov    0xc8(%r14),%rcx
    0.00 :   71db:   mov    %rax,0x8(%rcx,%rdx,1)
    0.00 :   71e0:   jmp    6c6f <receive_buf+0xb2f>
    0.00 :   71e5:   cmp    $0x3,%ecx
    0.00 :   71e8:   je     7a4b <receive_buf+0x190b>
    0.00 :   71ee:   addq   $0x1,0x18(%r12)
    0.00 :   71f4:   cmp    $0x2,%ecx
    0.00 :   71f7:   je     7494 <receive_buf+0x1354>
    0.00 :   71fd:   ja     6fe8 <receive_buf+0xea8>
    0.00 :   7203:   test   %ecx,%ecx
    0.00 :   7205:   jne    7010 <receive_buf+0xed0>
    0.00 :   720b:   xor    %ecx,%ecx
    0.00 :   720d:   xchg   %ax,%ax
    0.00 :   720f:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7214:   mov    0x10(%rbx),%rsi
    0.00 :   7218:   mov    %gs:0x0(%rip),%eax        # 721f <receive_buf+0x10df>
    0.00 :   721f:   mov    %eax,%eax
    0.00 :   7221:   bt     %rax,0x0(%rip)        # 7229 <receive_buf+0x10e9>
    0.00 :   7229:   jae    7010 <receive_buf+0xed0>
    0.00 :   722f:   incl   %gs:0x0(%rip)        # 7236 <receive_buf+0x10f6>
    0.00 :   7236:   mov    0x0(%rip),%rax        # 723d <receive_buf+0x10fd>
    0.00 :   723d:   test   %rax,%rax
    0.00 :   7240:   je     7250 <receive_buf+0x1110>
    0.00 :   7242:   mov    0x8(%rax),%rdi
    0.00 :   7246:   mov    0x18(%rsp),%rdx
    0.00 :   724b:   call   7250 <receive_buf+0x1110>
    0.00 :   7250:   decl   %gs:0x0(%rip)        # 7257 <receive_buf+0x1117>
    0.00 :   7257:   jne    7010 <receive_buf+0xed0>
    0.00 :   725d:   call   7262 <receive_buf+0x1122>
    0.00 :   7262:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7267:   xor    %ecx,%ecx
    0.00 :   7269:   jmp    69f0 <receive_buf+0x8b0>
    0.00 :   726e:   cmp    $0x3,%r15d
    0.00 :   7272:   je     75eb <receive_buf+0x14ab>
    0.00 :   7278:   cmp    $0x4,%r15d
    0.00 :   727c:   jne    76e6 <receive_buf+0x15a6>
    0.00 :   7282:   addq   $0x1,0x28(%r12)
    0.00 :   7288:   mov    0x10(%rsp),%rdx
    0.00 :   728d:   mov    %r13,%rsi
    0.00 :   7290:   mov    (%rsp),%rdi
    0.00 :   7294:   mov    %r10,0x8(%rsp)
    0.00 :   7299:   call   729e <receive_buf+0x115e>
    0.00 :   729e:   mov    0x8(%rsp),%r10
    0.00 :   72a3:   test   %eax,%eax
    0.00 :   72a5:   je     79ab <receive_buf+0x186b>
    0.00 :   72ab:   cmp    %r10,0x18(%rsp)
    0.00 :   72b0:   je     71b3 <receive_buf+0x1073>
    0.00 :   72b6:   mov    0x18(%rsp),%rdi
    0.00 :   72bb:   call   1ef0 <put_page>
    0.00 :   72c0:   mov    0x8(%rsp),%r10
    0.00 :   72c5:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   72ca:   mov    %edx,%ecx
    0.00 :   72cc:   mov    (%rsp),%rdx
    0.00 :   72d0:   mov    $0x5ee,%r8d
    0.00 :   72d6:   mov    $0x0,%rsi
    0.00 :   72dd:   mov    $0x0,%rdi
    0.00 :   72e4:   call   72e9 <receive_buf+0x11a9>
    0.00 :   72e9:   jmp    6c10 <receive_buf+0xad0>
    0.00 :   72ee:   mov    (%rsp),%rdx
    0.00 :   72f2:   mov    %r13d,%ecx
    0.00 :   72f5:   mov    $0x0,%rsi
    0.00 :   72fc:   mov    $0x0,%rdi
    0.00 :   7303:   mov    %r10,0x8(%rsp)
    0.00 :   7308:   call   730d <receive_buf+0x11cd>
    0.00 :   730d:   mov    0x8(%rsp),%r10
    0.00 :   7312:   jmp    6e9f <receive_buf+0xd5f>
    0.00 :   7317:   mov    %r8,0x48(%rsp)
    0.00 :   731c:   mov    %r11d,0x40(%rsp)
    0.00 :   7321:   call   7326 <receive_buf+0x11e6>
    0.00 :   7326:   mov    %r13,%rdi
    0.00 :   7329:   mov    %rax,%r15
    0.00 :   732c:   mov    0x18(%rsp),%rax
    0.00 :   7331:   mov    0x30(%rax),%rdx
    0.00 :   7335:   lea    0x48(%rax),%rsi
    0.00 :   7339:   call   733e <receive_buf+0x11fe>
    0.00 :   733e:   mov    %eax,0x28(%rsp)
    0.00 :   7342:   mov    0x18(%rsp),%rax
    0.00 :   7347:   mov    0x20(%rax),%rdx
    0.00 :   734b:   mov    %rdx,0x20(%rsp)
    0.00 :   7350:   call   7355 <receive_buf+0x1215>
    0.00 :   7355:   mov    0x20(%rsp),%rdx
    0.00 :   735a:   mov    %eax,%eax
    0.00 :   735c:   add    0x0(,%rax,8),%rdx
    0.00 :   7364:   incq   (%rdx)
    0.00 :   7367:   mov    %rdx,0x20(%rsp)
    0.00 :   736c:   call   7371 <receive_buf+0x1231>
    0.00 :   7371:   mov    0x20(%rsp),%rdx
    0.00 :   7376:   sub    %r15,%rax
    0.00 :   7379:   add    %rax,0x8(%rdx)
    0.00 :   737d:   mov    0x28(%rsp),%ecx
    0.00 :   7381:   mov    0x40(%rsp),%r11d
    0.00 :   7386:   mov    0x48(%rsp),%r8
    0.00 :   738b:   jmp    6fc5 <receive_buf+0xe85>
    0.00 :   7390:   cmp    $0x8,%ax
    0.00 :   7394:   je     6e0a <receive_buf+0xcca>
    0.00 :   739a:   cmp    $0xdd86,%ax
    0.00 :   739e:   je     6e0a <receive_buf+0xcca>
    0.00 :   73a4:   jmp    6238 <receive_buf+0xf8>
    0.00 :   73a9:   cmp    $0x3,%r15d
    0.00 :   73ad:   je     79e8 <receive_buf+0x18a8>
    0.00 :   73b3:   addq   $0x1,0x18(%r12)
    0.00 :   73b9:   cmp    $0x2,%r15d
    0.00 :   73bd:   je     780e <receive_buf+0x16ce>
    0.00 :   73c3:   jbe    719f <receive_buf+0x105f>
    0.00 :   73c9:   jmp    7278 <receive_buf+0x1138>
    0.00 :   73ce:   mov    %r10,0x38(%rsp)
    0.00 :   73d3:   mov    %r11d,0x30(%rsp)
    0.00 :   73d8:   call   73dd <receive_buf+0x129d>
    0.00 :   73dd:   mov    %r13,%rdi
    0.00 :   73e0:   mov    %rax,0x28(%rsp)
    0.00 :   73e5:   mov    0x10(%rsp),%rax
    0.00 :   73ea:   mov    0x30(%rax),%rdx
    0.00 :   73ee:   lea    0x48(%rax),%rsi
    0.00 :   73f2:   call   73f7 <receive_buf+0x12b7>
    0.00 :   73f7:   mov    %eax,%r15d
    0.00 :   73fa:   mov    0x10(%rsp),%rax
    0.00 :   73ff:   mov    0x20(%rax),%rdx
    0.00 :   7403:   mov    %rdx,0x20(%rsp)
    0.00 :   7408:   call   740d <receive_buf+0x12cd>
    0.00 :   740d:   mov    0x20(%rsp),%rdx
    0.00 :   7412:   mov    %eax,%eax
    0.00 :   7414:   add    0x0(,%rax,8),%rdx
    0.00 :   741c:   incq   (%rdx)
    0.00 :   741f:   mov    %rdx,0x20(%rsp)
    0.00 :   7424:   call   7429 <receive_buf+0x12e9>
    0.00 :   7429:   mov    0x28(%rsp),%r8
    0.00 :   742e:   mov    0x20(%rsp),%rdx
    0.00 :   7433:   sub    %r8,%rax
    0.00 :   7436:   add    %rax,0x8(%rdx)
    0.00 :   743a:   mov    0x30(%rsp),%r11d
    0.00 :   743f:   mov    0x38(%rsp),%r10
    0.00 :   7444:   jmp    7184 <receive_buf+0x1044>
    0.00 :   7449:   cmpw   $0x0,0xb4(%r14)
    0.00 :   7452:   jne    68e4 <receive_buf+0x7a4>
    0.00 :   7458:   movzbl 0x29(%r14),%esi
    0.00 :   745d:   and    $0x7f,%sil
    0.00 :   7461:   cmp    $0x3,%esi
    0.00 :   7464:   je     7478 <receive_buf+0x1338>
    0.00 :   7466:   cmp    $0x4,%esi
    0.00 :   7469:   je     78c9 <receive_buf+0x1789>
    0.00 :   746f:   cmp    $0x1,%esi
    0.00 :   7472:   jne    68e4 <receive_buf+0x7a4>
    0.00 :   7478:   mov    $0x8,%edi
    0.00 :   747d:   mov    %di,0xb4(%r14)
    0.00 :   7485:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   748a:   mov    0x8(%rsp),%rdx
    0.00 :   748f:   jmp    6a65 <receive_buf+0x925>
    0.00 :   7494:   mov    0x68(%rsp),%r13
    0.00 :   7499:   mov    0x70(%rsp),%edx
    0.00 :   749d:   mov    %r8d,%r15d
    0.00 :   74a0:   sub    %r13d,%r15d
    0.00 :   74a3:   sub    %r13d,%edx
    0.00 :   74a6:   sub    0x78(%rsp),%r13d
    0.00 :   74ab:   mov    %edx,0x28(%rsp)
    0.00 :   74af:   mov    %r11d,0x20(%rsp)
    0.00 :   74b4:   call   74b9 <receive_buf+0x1379>
    0.00 :   74b9:   mov    0x28(%rsp),%edx
    0.00 :   74bd:   mov    0x20(%rsp),%r11d
    0.00 :   74c2:   jmp    6306 <receive_buf+0x1c6>
    0.00 :   74c7:   mov    %rbx,%r10
    0.00 :   74ca:   jmp    6b17 <receive_buf+0x9d7>
    0.00 :   74cf:   mov    %r10,0x30(%rsp)
    0.00 :   74d4:   mov    %edi,0x28(%rsp)
    0.00 :   74d8:   mov    %ecx,0x20(%rsp)
    0.00 :   74dc:   mov    %r11d,0x18(%rsp)
    0.00 :   74e1:   call   74e6 <receive_buf+0x13a6>
    0.00 :   74e6:   xor    %eax,%eax
    0.00 :   74e8:   mov    0x54(%rsp),%r13d
    0.00 :   74ed:   mov    0x28(%rsp),%edi
    0.00 :   74f1:   cmpq   $0x0,0x10(%rsp)
    0.00 :   74f7:   mov    0x30(%rsp),%r10
    0.00 :   74fc:   mov    0x20(%rsp),%ecx
    0.00 :   7500:   mov    0x18(%rsp),%r11d
    0.00 :   7505:   sete   %al
    0.00 :   7508:   jmp    651d <receive_buf+0x3dd>
    0.00 :   750d:   mov    0x88(%rsp),%rax
    0.00 :   7515:   addq   $0x1,0x20(%r12)
    0.00 :   751b:   cmpl   $0x3,0x10(%rax)
    0.00 :   751f:   je     7a8b <receive_buf+0x194b>
    0.00 :   7525:   mov    0x68(%rsp),%rsi
    0.00 :   752a:   mov    0x80(%rsp),%rbp
    0.00 :   7532:   xor    %ecx,%ecx
    0.00 :   7534:   mov    %rsi,%rdx
    0.00 :   7537:   mov    %rsi,%rax
    0.00 :   753a:   sub    0x78(%rsp),%rax
    0.00 :   753f:   sub    %rbp,%rdx
    0.00 :   7542:   test   %eax,%eax
    0.00 :   7544:   cmovs  %ecx,%eax
    0.00 :   7547:   mov    %edx,%ecx
    0.00 :   7549:   sub    %eax,%ecx
    0.00 :   754b:   cmp    $0x27,%ecx
    0.00 :   754e:   jbe    7010 <receive_buf+0xed0>
    0.00 :   7554:   mov    0x98(%rsp),%ecx
    0.00 :   755b:   lea    -0x140(%rbp,%rcx,1),%rcx
    0.00 :   7563:   cmp    0x70(%rsp),%rcx
    0.00 :   7568:   jb     7b7e <receive_buf+0x1a3e>
    0.00 :   756e:   mov    %rsi,0x0(%rbp)
    0.00 :   7572:   mov    0x70(%rsp),%rcx
    0.00 :   7577:   sub    $0x28,%edx
    0.00 :   757a:   mov    %dx,0xa(%rbp)
    0.00 :   757e:   sub    %rsi,%rcx
    0.00 :   7581:   mov    %eax,0xc(%rbp)
    0.00 :   7584:   mov    %cx,0x8(%rbp)
    0.00 :   7588:   mov    0x98(%rsp),%eax
    0.00 :   758f:   mov    %eax,0x20(%rbp)
    0.00 :   7592:   mov    0x9c(%rsp),%eax
    0.00 :   7599:   mov    %eax,0x24(%rbp)
    0.00 :   759c:   mov    0x88(%rsp),%rax
    0.00 :   75a4:   mov    0x10(%rax),%rax
    0.00 :   75a8:   mov    %rax,0x10(%rbp)
    0.00 :   75ac:   mov    %rbp,0x60(%rsp)
    0.00 :   75b1:   test   %rbp,%rbp
    0.00 :   75b4:   je     7010 <receive_buf+0xed0>
    0.00 :   75ba:   mov    (%rsp),%rdi
    0.00 :   75be:   xor    %ecx,%ecx
    0.00 :   75c0:   lea    0x60(%rsp),%rdx
    0.00 :   75c5:   mov    $0x1,%esi
    0.00 :   75ca:   call   740 <virtnet_xdp_xmit>
    0.00 :   75cf:   test   %eax,%eax
    0.00 :   75d1:   je     7b2c <receive_buf+0x19ec>
    0.00 :   75d7:   js     7b66 <receive_buf+0x1a26>
    0.00 :   75dd:   orl    $0x1,(%r14)
    0.00 :   75e1:   call   75e6 <receive_buf+0x14a6>
    0.00 :   75e6:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   75eb:   mov    0x88(%rsp),%rax
    0.00 :   75f3:   addq   $0x1,0x20(%r12)
    0.00 :   75f9:   cmpl   $0x3,0x10(%rax)
    0.00 :   75fd:   je     7a31 <receive_buf+0x18f1>
    0.00 :   7603:   mov    0x68(%rsp),%rsi
    0.00 :   7608:   mov    0x80(%rsp),%r13
    0.00 :   7610:   xor    %ecx,%ecx
    0.00 :   7612:   mov    %rsi,%rdx
    0.00 :   7615:   mov    %rsi,%rax
    0.00 :   7618:   sub    0x78(%rsp),%rax
    0.00 :   761d:   sub    %r13,%rdx
    0.00 :   7620:   test   %eax,%eax
    0.00 :   7622:   cmovs  %ecx,%eax
    0.00 :   7625:   mov    %edx,%ecx
    0.00 :   7627:   sub    %eax,%ecx
    0.00 :   7629:   cmp    $0x27,%ecx
    0.00 :   762c:   jbe    7aeb <receive_buf+0x19ab>
    0.00 :   7632:   mov    0x98(%rsp),%ecx
    0.00 :   7639:   lea    -0x140(%r13,%rcx,1),%rcx
    0.00 :   7641:   cmp    0x70(%rsp),%rcx
    0.00 :   7646:   jb     7ac9 <receive_buf+0x1989>
    0.00 :   764c:   mov    %rsi,0x0(%r13)
    0.00 :   7650:   mov    0x70(%rsp),%rcx
    0.00 :   7655:   sub    $0x28,%edx
    0.00 :   7658:   mov    %dx,0xa(%r13)
    0.00 :   765d:   sub    %rsi,%rcx
    0.00 :   7660:   mov    %eax,0xc(%r13)
    0.00 :   7664:   mov    %cx,0x8(%r13)
    0.00 :   7669:   mov    0x98(%rsp),%eax
    0.00 :   7670:   mov    %eax,0x20(%r13)
    0.00 :   7674:   mov    0x9c(%rsp),%eax
    0.00 :   767b:   mov    %eax,0x24(%r13)
    0.00 :   767f:   mov    0x88(%rsp),%rax
    0.00 :   7687:   mov    0x10(%rax),%rax
    0.00 :   768b:   mov    %rax,0x10(%r13)
    0.00 :   768f:   mov    %r13,0x60(%rsp)
    0.00 :   7694:   test   %r13,%r13
    0.00 :   7697:   je     7af3 <receive_buf+0x19b3>
    0.00 :   769d:   mov    (%rsp),%rdi
    0.00 :   76a1:   xor    %ecx,%ecx
    0.00 :   76a3:   lea    0x60(%rsp),%rdx
    0.00 :   76a8:   mov    $0x1,%esi
    0.00 :   76ad:   mov    %r10,0x8(%rsp)
    0.00 :   76b2:   call   740 <virtnet_xdp_xmit>
    0.00 :   76b7:   mov    0x8(%rsp),%r10
    0.00 :   76bc:   test   %eax,%eax
    0.00 :   76be:   je     7b17 <receive_buf+0x19d7>
    0.00 :   76c4:   js     7b39 <receive_buf+0x19f9>
    0.00 :   76ca:   orl    $0x1,(%r14)
    0.00 :   76ce:   cmp    %r10,0x18(%rsp)
    0.00 :   76d3:   je     75e1 <receive_buf+0x14a1>
    0.00 :   76d9:   mov    %r10,%rdi
    0.00 :   76dc:   call   1ef0 <put_page>
    0.00 :   76e1:   jmp    75e1 <receive_buf+0x14a1>
    0.00 :   76e6:   mov    0x10(%rbx),%rdi
    0.00 :   76ea:   mov    0x10(%rsp),%rsi
    0.00 :   76ef:   mov    %r15d,%edx
    0.00 :   76f2:   mov    %r10,0x8(%rsp)
    0.00 :   76f7:   call   76fc <receive_buf+0x15bc>
    0.00 :   76fc:   mov    0x8(%rsp),%r10
    0.00 :   7701:   mov    0x10(%rbx),%rsi
    0.00 :   7705:   xchg   %ax,%ax
    0.00 :   7707:   jmp    71a8 <receive_buf+0x1068>
    0.00 :   770c:   mov    %gs:0x0(%rip),%eax        # 7713 <receive_buf+0x15d3>
    0.00 :   7713:   mov    %eax,%eax
    0.00 :   7715:   bt     %rax,0x0(%rip)        # 771d <receive_buf+0x15dd>
    0.00 :   771d:   jae    71a8 <receive_buf+0x1068>
    0.00 :   7723:   incl   %gs:0x0(%rip)        # 772a <receive_buf+0x15ea>
    0.00 :   772a:   mov    0x0(%rip),%rax        # 7731 <receive_buf+0x15f1>
    0.00 :   7731:   test   %rax,%rax
    0.00 :   7734:   je     7751 <receive_buf+0x1611>
    0.00 :   7736:   mov    0x8(%rax),%rdi
    0.00 :   773a:   mov    0x10(%rsp),%rdx
    0.00 :   773f:   mov    %r15d,%ecx
    0.00 :   7742:   mov    %r10,0x8(%rsp)
    0.00 :   7747:   call   774c <receive_buf+0x160c>
    0.00 :   774c:   mov    0x8(%rsp),%r10
    0.00 :   7751:   decl   %gs:0x0(%rip)        # 7758 <receive_buf+0x1618>
    0.00 :   7758:   jne    71a8 <receive_buf+0x1068>
    0.00 :   775e:   call   7763 <receive_buf+0x1623>
    0.00 :   7763:   jmp    71a8 <receive_buf+0x1068>
    0.00 :   7768:   mov    %ecx,0x8(%rsp)
    0.00 :   776c:   cmp    %ebx,%eax
    0.00 :   776e:   jb     6238 <receive_buf+0xf8>
    0.00 :   7774:   sub    %eax,%edx
    0.00 :   7776:   mov    %r14,%rdi
    0.00 :   7779:   lea    (%rdx,%rbx,1),%esi
    0.00 :   777c:   call   7781 <receive_buf+0x1641>
    0.00 :   7781:   mov    0x8(%rsp),%ecx
    0.00 :   7785:   test   %rax,%rax
    0.00 :   7788:   jne    6984 <receive_buf+0x844>
    0.00 :   778e:   jmp    6238 <receive_buf+0xf8>
    0.00 :   7793:   mov    %r10,%rdx
    0.00 :   7796:   lea    0x54(%rsp),%r9
    0.00 :   779b:   mov    %r15d,%ecx
    0.00 :   779e:   mov    %rbp,%rdi
    0.00 :   77a1:   mov    $0x100,%r8d
    0.00 :   77a7:   lea    0x52(%rsp),%rsi
    0.00 :   77ac:   mov    %r10,0x20(%rsp)
    0.00 :   77b1:   mov    %r11d,0x28(%rsp)
    0.00 :   77b6:   call   1f80 <xdp_linearize_page>
    0.00 :   77bb:   mov    0x20(%rsp),%r10
    0.00 :   77c0:   test   %rax,%rax
    0.00 :   77c3:   mov    %rax,0x18(%rsp)
    0.00 :   77c8:   je     71b3 <receive_buf+0x1073>
    0.00 :   77ce:   mov    0x28(%rsp),%r11d
    0.00 :   77d3:   mov    $0x100,%edx
    0.00 :   77d8:   mov    $0x1000,%ecx
    0.00 :   77dd:   jmp    70d6 <receive_buf+0xf96>
    0.00 :   77e2:   mov    0x10(%rbx),%rdi
    0.00 :   77e6:   mov    0x18(%rsp),%rsi
    0.00 :   77eb:   mov    %ecx,%edx
    0.00 :   77ed:   mov    %ecx,(%rsp)
    0.00 :   77f0:   call   77f5 <receive_buf+0x16b5>
    0.00 :   77f5:   mov    (%rsp),%ecx
    0.00 :   77f8:   jmp    720d <receive_buf+0x10cd>
    0.00 :   77fd:   mov    (%rsi),%eax
    0.00 :   77ff:   mov    %eax,(%rdx)
    0.00 :   7801:   mov    -0x4(%rcx,%rsi,1),%eax
    0.00 :   7805:   mov    %eax,-0x4(%rdx,%rcx,1)
    0.00 :   7809:   jmp    635e <receive_buf+0x21e>
    0.00 :   780e:   mov    0x18(%rsp),%r8
    0.00 :   7813:   mov    0x68(%rsp),%rcx
    0.00 :   7818:   movzbl 0x4a(%rbx),%edx
    0.00 :   781c:   mov    %r8,%rax
    0.00 :   781f:   sub    0x0(%rip),%rax        # 7826 <receive_buf+0x16e6>
    0.00 :   7826:   mov    %rcx,%rsi
    0.00 :   7829:   mov    %rcx,%r13
    0.00 :   782c:   sar    $0x6,%rax
    0.00 :   7830:   sub    0x78(%rsp),%r13
    0.00 :   7835:   shl    $0xc,%rax
    0.00 :   7839:   add    0x0(%rip),%rax        # 7840 <receive_buf+0x1700>
    0.00 :   7840:   mov    %r13d,%edi
    0.00 :   7843:   sub    %rax,%rsi
    0.00 :   7846:   lea    (%rdx,%r13,1),%eax
    0.00 :   784a:   mov    %esi,%r15d
    0.00 :   784d:   sub    %eax,%r15d
    0.00 :   7850:   mov    0x70(%rsp),%rax
    0.00 :   7855:   sub    %rcx,%rax
    0.00 :   7858:   sub    0x80(%rsp),%rcx
    0.00 :   7860:   add    %r13d,%eax
    0.00 :   7863:   sub    %r13d,%ecx
    0.00 :   7866:   add    %edx,%eax
    0.00 :   7868:   mov    %eax,0x54(%rsp)
    0.00 :   786c:   cmp    %r10,%r8
    0.00 :   786f:   je     74cf <receive_buf+0x138f>
    0.00 :   7875:   mov    %r10,0x10(%rsp)
    0.00 :   787a:   mov    %ecx,0x8(%rsp)
    0.00 :   787e:   call   7883 <receive_buf+0x1743>
    0.00 :   7883:   mov    0x10(%rsp),%rdi
    0.00 :   7888:   call   1ef0 <put_page>
    0.00 :   788d:   mov    0x8(%rsp),%ecx
    0.00 :   7891:   mov    %rbp,%rsi
    0.00 :   7894:   mov    %rbx,%rdi
    0.00 :   7897:   mov    0x54(%rsp),%r8d
    0.00 :   789c:   mov    $0x1000,%r9d
    0.00 :   78a2:   push   %rcx
    0.00 :   78a3:   mov    %r15d,%ecx
    0.00 :   78a6:   push   %r13
    0.00 :   78a8:   push   $0x0
    0.00 :   78aa:   mov    0x30(%rsp),%rdx
    0.00 :   78af:   call   2170 <page_to_skb>
    0.00 :   78b4:   mov    %rax,%r14
    0.00 :   78b7:   add    $0x18,%rsp
    0.00 :   78bb:   test   %rax,%rax
    0.00 :   78be:   jne    61d1 <receive_buf+0x91>
    0.00 :   78c4:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   78c9:   mov    $0xffffdd86,%esi
    0.00 :   78ce:   mov    %si,0xb4(%r14)
    0.00 :   78d6:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   78db:   mov    0x30(%rsp),%rdi
    0.00 :   78e0:   mov    0x8(%rsp),%rcx
    0.00 :   78e5:   add    %eax,%edx
    0.00 :   78e7:   mov    $0x1,%r8d
    0.00 :   78ed:   lea    0x140(%rax),%r11d
    0.00 :   78f4:   mov    %edx,0x58(%rsp)
    0.00 :   78f8:   add    $0x76d,%eax
    0.00 :   78fd:   lea    0x58(%rsp),%r9
    0.00 :   7902:   mov    %rdi,%rsi
    0.00 :   7905:   sub    0x0(%rip),%rsi        # 790c <receive_buf+0x17cc>
    0.00 :   790c:   and    $0xffffffc0,%eax
    0.00 :   790f:   mov    %rdi,%rdx
    0.00 :   7912:   sar    $0x6,%rsi
    0.00 :   7916:   add    $0x140,%eax
    0.00 :   791b:   mov    %rbp,%rdi
    0.00 :   791e:   mov    %r10,0x28(%rsp)
    0.00 :   7923:   shl    $0xc,%rsi
    0.00 :   7927:   add    0x0(%rip),%rsi        # 792e <receive_buf+0x17ee>
    0.00 :   792e:   mov    %r8w,0x54(%rsp)
    0.00 :   7934:   mov    $0x140,%r8d
    0.00 :   793a:   sub    %rsi,%rcx
    0.00 :   793d:   mov    0x38(%rsp),%esi
    0.00 :   7941:   mov    %r11d,0x20(%rsp)
    0.00 :   7946:   mov    %eax,0x10(%rsp)
    0.00 :   794a:   add    %ecx,%esi
    0.00 :   794c:   mov    %esi,%ecx
    0.00 :   794e:   lea    0x54(%rsp),%rsi
    0.00 :   7953:   call   1f80 <xdp_linearize_page>
    0.00 :   7958:   mov    %rax,%r15
    0.00 :   795b:   test   %rax,%rax
    0.00 :   795e:   je     7010 <receive_buf+0xed0>
    0.00 :   7964:   sub    0x0(%rip),%rax        # 796b <receive_buf+0x182b>
    0.00 :   796b:   mov    0x30(%rsp),%rdi
    0.00 :   7970:   sar    $0x6,%rax
    0.00 :   7974:   shl    $0xc,%rax
    0.00 :   7978:   add    0x0(%rip),%rax        # 797f <receive_buf+0x183f>
    0.00 :   797f:   mov    %rax,0x8(%rsp)
    0.00 :   7984:   call   1ef0 <put_page>
    0.00 :   7989:   mov    $0x100,%r8d
    0.00 :   798f:   mov    0x28(%rsp),%r10
    0.00 :   7994:   mov    0x20(%rsp),%r11d
    0.00 :   7999:   mov    %r15,0x30(%rsp)
    0.00 :   799e:   movl   $0x140,0x38(%rsp)
    0.00 :   79a6:   jmp    6f45 <receive_buf+0xe05>
    0.00 :   79ab:   orl    $0x2,(%r14)
    0.00 :   79af:   cmp    %r10,0x18(%rsp)
    0.00 :   79b4:   je     75e1 <receive_buf+0x14a1>
    0.00 :   79ba:   jmp    76d9 <receive_buf+0x1599>
    0.00 :   79bf:   orl    $0x2,(%r14)
    0.00 :   79c3:   call   79c8 <receive_buf+0x1888>
    0.00 :   79c8:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   79cd:   mov    0x18(%rsp),%rdi
    0.00 :   79d2:   xor    %esi,%esi
    0.00 :   79d4:   mov    %r10,0x8(%rsp)
    0.00 :   79d9:   call   79de <receive_buf+0x189e>
    0.00 :   79de:   mov    0x8(%rsp),%r10
    0.00 :   79e3:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   79e8:   mov    0x88(%rsp),%rax
    0.00 :   79f0:   mov    (%rax),%rdx
    0.00 :   79f3:   testb  $0x8,0xc1(%rdx)
    0.00 :   79fa:   je     7abe <receive_buf+0x197e>
    0.00 :   7a00:   mov    %r11d,0x28(%rsp)
    0.00 :   7a05:   testb  $0x4,0xc8(%rdx)
    0.00 :   7a0c:   je     7abe <receive_buf+0x197e>
    0.00 :   7a12:   mov    %r13,%rdi
    0.00 :   7a15:   mov    %r10,0x20(%rsp)
    0.00 :   7a1a:   call   7a1f <receive_buf+0x18df>
    0.00 :   7a1f:   mov    0x28(%rsp),%r11d
    0.00 :   7a24:   mov    0x20(%rsp),%r10
    0.00 :   7a29:   mov    %eax,%r15d
    0.00 :   7a2c:   jmp    7189 <receive_buf+0x1049>
    0.00 :   7a31:   mov    %r13,%rdi
    0.00 :   7a34:   mov    %r10,0x8(%rsp)
    0.00 :   7a39:   call   7a3e <receive_buf+0x18fe>
    0.00 :   7a3e:   mov    0x8(%rsp),%r10
    0.00 :   7a43:   mov    %rax,%r13
    0.00 :   7a46:   jmp    768f <receive_buf+0x154f>
    0.00 :   7a4b:   mov    0x88(%rsp),%rax
    0.00 :   7a53:   mov    (%rax),%rdx
    0.00 :   7a56:   testb  $0x8,0xc1(%rdx)
    0.00 :   7a5d:   je     7a9b <receive_buf+0x195b>
    0.00 :   7a5f:   mov    %r8,0x28(%rsp)
    0.00 :   7a64:   mov    %r11d,0x20(%rsp)
    0.00 :   7a69:   testb  $0x4,0xc8(%rdx)
    0.00 :   7a70:   je     7a9b <receive_buf+0x195b>
    0.00 :   7a72:   mov    %r13,%rdi
    0.00 :   7a75:   call   7a7a <receive_buf+0x193a>
    0.00 :   7a7a:   mov    0x28(%rsp),%r8
    0.00 :   7a7f:   mov    0x20(%rsp),%r11d
    0.00 :   7a84:   mov    %eax,%ecx
    0.00 :   7a86:   jmp    6fca <receive_buf+0xe8a>
    0.00 :   7a8b:   mov    %r13,%rdi
    0.00 :   7a8e:   call   7a93 <receive_buf+0x1953>
    0.00 :   7a93:   mov    %rax,%rbp
    0.00 :   7a96:   jmp    75ac <receive_buf+0x146c>
    0.00 :   7a9b:   addq   $0x1,0x18(%r12)
    0.00 :   7aa1:   jmp    7515 <receive_buf+0x13d5>
    0.00 :   7aa6:   mov    0x0(%rip),%rdx        # 7aad <receive_buf+0x196d>
    0.00 :   7aad:   jmp    6b63 <receive_buf+0xa23>
    0.00 :   7ab2:   mov    0x0(%rip),%rsi        # 7ab9 <receive_buf+0x1979>
    0.00 :   7ab9:   jmp    65c6 <receive_buf+0x486>
    0.00 :   7abe:   addq   $0x1,0x18(%r12)
    0.00 :   7ac4:   jmp    75f3 <receive_buf+0x14b3>
    0.00 :   7ac9:   mov    $0x112,%edx
    0.00 :   7ace:   mov    $0x0,%rsi
    0.00 :   7ad5:   mov    %r10,0x8(%rsp)
    0.00 :   7ada:   mov    $0x0,%rdi
    0.00 :   7ae1:   call   7ae6 <receive_buf+0x19a6>
    0.00 :   7ae6:   mov    0x8(%rsp),%r10
    0.00 :   7aeb:   xor    %r9d,%r9d
    0.00 :   7aee:   mov    %r9,0x60(%rsp)
    0.00 :   7af3:   cmp    %r10,0x18(%rsp)
    0.00 :   7af8:   je     71b3 <receive_buf+0x1073>
    0.00 :   7afe:   mov    0x18(%rsp),%rdi
    0.00 :   7b03:   mov    %r10,0x8(%rsp)
    0.00 :   7b08:   call   1ef0 <put_page>
    0.00 :   7b0d:   mov    0x8(%rsp),%r10
    0.00 :   7b12:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   7b17:   mov    %r13,%rdi
    0.00 :   7b1a:   mov    %r10,(%rsp)
    0.00 :   7b1e:   call   7b23 <receive_buf+0x19e3>
    0.00 :   7b23:   mov    (%rsp),%r10
    0.00 :   7b27:   jmp    76ca <receive_buf+0x158a>
    0.00 :   7b2c:   mov    %rbp,%rdi
    0.00 :   7b2f:   call   7b34 <receive_buf+0x19f4>
    0.00 :   7b34:   jmp    75dd <receive_buf+0x149d>
    0.00 :   7b39:   mov    0x10(%rbx),%rdi
    0.00 :   7b3d:   mov    0x10(%rsp),%rsi
    0.00 :   7b42:   mov    $0x3,%edx
    0.00 :   7b47:   mov    %r10,0x8(%rsp)
    0.00 :   7b4c:   call   e00 <trace_xdp_exception>
    0.00 :   7b51:   mov    0x8(%rsp),%r10
    0.00 :   7b56:   cmp    %r10,0x18(%rsp)
    0.00 :   7b5b:   je     71b3 <receive_buf+0x1073>
    0.00 :   7b61:   jmp    72b6 <receive_buf+0x1176>
    0.00 :   7b66:   mov    0x10(%rbx),%rdi
    0.00 :   7b6a:   mov    0x18(%rsp),%rsi
    0.00 :   7b6f:   mov    $0x3,%edx
    0.00 :   7b74:   call   e00 <trace_xdp_exception>
    0.00 :   7b79:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7b7e:   mov    $0x112,%edx
    0.00 :   7b83:   mov    $0x0,%rsi
    0.00 :   7b8a:   mov    $0x0,%rdi
    0.00 :   7b91:   call   7b96 <receive_buf+0x1a56>
    0.00 :   7b96:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7b9b:   mov    0x0(%rip),%rcx        # 7ba2 <receive_buf+0x1a62>
    0.00 :   7ba2:   jmp    62ab <receive_buf+0x16b>
    0.00 :   7ba7:   mov    0x0(%rip),%rdx        # 7bae <receive_buf+0x1a6e>
    0.00 :   7bae:   jmp    6aa2 <receive_buf+0x962>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   15.51 [virtio_net][7bc0]
    9.32 [virtio_net][7e7e]
    8.33 [virtio_net][7c47]
    7.47 [virtio_net][7e4f]
    6.34 [virtio_net][7c12]
    6.13 [virtio_net][7e5c]
    5.94 [virtio_net][7bc7]
    4.87 [virtio_net][7fbc]
    3.74 [virtio_net][7ce8]
    3.38 [virtio_net][7cba]
    3.33 [virtio_net][7c9a]
    3.18 [virtio_net][7c6d]
    2.60 [virtio_net][7d8c]
    2.59 [virtio_net][7dee]
    2.48 [virtio_net][7cbe]
    2.48 [virtio_net][7e01]
    2.46 [virtio_net][7d7e]
    2.43 [virtio_net][7fc0]
    2.23 [virtio_net][7cee]
    1.98 [virtio_net][7ed5]
    1.76 [virtio_net][7dd5]
    1.42 [virtio_net][7d87]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (43 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000007bc0 <virtnet_poll>:
         : 6    virtnet_poll():
   15.51 :   7bc0:   call   7bc5 <virtnet_poll+0x5> // [virtio_net][7bc0]
    0.00 :   7bc5:   push   %r15
    5.94 :   7bc7:   push   %r14 // [virtio_net][7bc7]
    0.00 :   7bc9:   lea    -0x8(%rdi),%r14
    0.00 :   7bcd:   push   %r13
    0.00 :   7bcf:   push   %r12
    0.00 :   7bd1:   push   %rbp
    0.00 :   7bd2:   push   %rbx
    0.00 :   7bd3:   mov    %rdi,%rbx
    0.00 :   7bd6:   sub    $0x68,%rsp
    0.00 :   7bda:   mov    -0x8(%rdi),%r9
    0.00 :   7bde:   mov    %esi,0x8(%rsp)
    0.00 :   7be2:   mov    0x20(%r9),%rax
    0.00 :   7be6:   movl   $0x0,0x18(%rsp)
    0.00 :   7bee:   mov    0x330(%rax),%r15
    0.00 :   7bf5:   mov    0x28(%r9),%eax
    0.00 :   7bf9:   shr    %eax
    0.00 :   7bfb:   mov    %r15,%rbp
    0.00 :   7bfe:   mov    %eax,%edx
    0.00 :   7c00:   imul   $0x458,%rdx,%r13
    0.00 :   7c07:   add    0x18(%r15),%r13
    0.00 :   7c0b:   mov    0x2d8(%r13),%edi
    6.34 :   7c12:   test   %edi,%edi // [virtio_net][7c12]
    0.00 :   7c14:   je     7cc5 <virtnet_poll+0x105>
    0.00 :   7c1a:   movzwl 0x2e(%r15),%ecx
    0.00 :   7c1f:   movzwl 0x30(%r15),%edi
    0.00 :   7c24:   mov    %ecx,%esi
    0.00 :   7c26:   sub    %edi,%esi
    0.00 :   7c28:   cmp    %esi,%eax
    0.00 :   7c2a:   jl     7c34 <virtnet_poll+0x74>
    0.00 :   7c2c:   cmp    %ecx,%eax
    0.00 :   7c2e:   jl     7cc5 <virtnet_poll+0x105>
    0.00 :   7c34:   mov    0x10(%r15),%rax
    0.00 :   7c38:   lea    (%rdx,%rdx,4),%rbp
    0.00 :   7c3c:   shl    $0x6,%rbp
    0.00 :   7c40:   add    0x400(%rax),%rbp
    8.33 :   7c47:   lea    0x80(%rbp),%r12 // [virtio_net][7c47]
    0.00 :   7c4e:   mov    %r12,%rdi
    0.00 :   7c51:   call   7c56 <virtnet_poll+0x96>
    0.00 :   7c56:   test   %eax,%eax
    0.00 :   7c58:   je     7cb6 <virtnet_poll+0xf6>
    0.00 :   7c5a:   call   7c5f <virtnet_poll+0x9f>
    0.00 :   7c5f:   mov    %eax,0x84(%rbp)
    0.00 :   7c65:   cmpb   $0x0,0x450(%r13)
    3.18 :   7c6d:   jne    7ca4 <virtnet_poll+0xe4> // [virtio_net][7c6d]
    0.00 :   7c6f:   mov    0x0(%r13),%rdi
    0.00 :   7c73:   call   7c78 <virtnet_poll+0xb8>
    0.00 :   7c78:   mov    %r13,%rdi
    0.00 :   7c7b:   mov    $0x1,%esi
    0.00 :   7c80:   call   390 <free_old_xmit_skbs>
    0.00 :   7c85:   mov    0x0(%r13),%rdi
    0.00 :   7c89:   call   7c8e <virtnet_poll+0xce>
    0.00 :   7c8e:   test   %al,%al
    0.00 :   7c90:   je     7c6f <virtnet_poll+0xaf>
    0.00 :   7c92:   mov    0x0(%r13),%rax
    0.00 :   7c96:   cmpl   $0x12,0x2c(%rax)
    3.33 :   7c9a:   jbe    7ca4 <virtnet_poll+0xe4> // [virtio_net][7c9a]
    0.00 :   7c9c:   mov    %rbp,%rdi
    0.00 :   7c9f:   call   7ca4 <virtnet_poll+0xe4>
    0.00 :   7ca4:   movl   $0xffffffff,0x84(%rbp)
    0.00 :   7cae:   mov    %r12,%rdi
    0.00 :   7cb1:   call   7cb6 <virtnet_poll+0xf6>
    0.00 :   7cb6:   mov    -0x8(%rbx),%r9
    3.38 :   7cba:   mov    0x20(%r9),%rax // [virtio_net][7cba]
    2.48 :   7cbe:   mov    0x330(%rax),%rbp // [virtio_net][7cbe]
    0.00 :   7cc5:   lea    0x28(%rsp),%r12
    0.00 :   7cca:   xor    %eax,%eax
    0.00 :   7ccc:   mov    $0x8,%ecx
    0.00 :   7cd1:   cmpb   $0x0,0x33(%rbp)
    0.00 :   7cd5:   mov    %r12,%rdi
    0.00 :   7cd8:   movl   $0x0,0x1c(%rsp)
    0.00 :   7ce0:   movslq 0x8(%rsp),%r13
    0.00 :   7ce5:   rep stos %rax,%es:(%rdi)
    3.74 :   7ce8:   je     7d7e <virtnet_poll+0x1be> // [virtio_net][7ce8]
    2.23 :   7cee:   cmpb   $0x0,0x38(%rbp) // [virtio_net][7cee]
    0.00 :   7cf2:   jne    7d7e <virtnet_poll+0x1be>
    0.00 :   7cf8:   lea    0x1c(%rsp),%rcx
    0.00 :   7cfd:   mov    %rcx,(%rsp)
    0.00 :   7d01:   test   %r13d,%r13d
    0.00 :   7d04:   jne    7d40 <virtnet_poll+0x180>
    0.00 :   7d06:   jmp    80c4 <virtnet_poll+0x504>
    0.00 :   7d0b:   push   %r12
    0.00 :   7d0d:   mov    0x24(%rsp),%ecx
    0.00 :   7d11:   xor    %r8d,%r8d
    0.00 :   7d14:   mov    %r14,%rsi
    0.00 :   7d17:   mov    %rbp,%rdi
    0.00 :   7d1a:   lea    0x20(%rsp),%r9
    0.00 :   7d1f:   call   6140 <receive_buf>
    0.00 :   7d24:   mov    0x30(%rsp),%rax
    0.00 :   7d29:   lea    0x1(%rax),%r8
    0.00 :   7d2d:   mov    %r8,0x30(%rsp)
    0.00 :   7d32:   pop    %rcx
    0.00 :   7d33:   cmp    %r13,%r8
    0.00 :   7d36:   jae    800e <virtnet_poll+0x44e>
    0.00 :   7d3c:   mov    -0x8(%rbx),%r9
    0.00 :   7d40:   mov    (%rsp),%rsi
    0.00 :   7d44:   mov    %r9,%rdi
    0.00 :   7d47:   call   7d4c <virtnet_poll+0x18c>
    0.00 :   7d4c:   mov    %rax,%rdx
    0.00 :   7d4f:   test   %rax,%rax
    0.00 :   7d52:   jne    7d0b <virtnet_poll+0x14b>
    0.00 :   7d54:   mov    0x18(%rsp),%eax
    0.00 :   7d58:   mov    0x28(%rsp),%r8
    0.00 :   7d5d:   mov    -0x8(%rbx),%r9
    0.00 :   7d61:   mov    %eax,%edi
    0.00 :   7d63:   and    $0x1,%eax
    0.00 :   7d66:   mov    %r8d,0xc(%rsp)
    0.00 :   7d6b:   mov    %r8d,%r12d
    0.00 :   7d6e:   and    $0x2,%edi
    0.00 :   7d71:   mov    %eax,0x14(%rsp)
    0.00 :   7d75:   mov    %edi,0x10(%rsp)
    0.00 :   7d79:   jmp    7e0f <virtnet_poll+0x24f>
    2.46 :   7d7e:   movq   $0x0,0x20(%rsp) // [virtio_net][7d7e]
    1.42 :   7d87:   lea    0x1c(%rsp),%rax // [virtio_net][7d87]
    2.60 :   7d8c:   mov    %rax,(%rsp) // [virtio_net][7d8c]
    0.00 :   7d90:   test   %r13,%r13
    0.00 :   7d93:   jne    7dd1 <virtnet_poll+0x211>
    0.00 :   7d95:   jmp    8081 <virtnet_poll+0x4c1>
    0.00 :   7d9a:   push   %r12
    0.00 :   7d9c:   mov    0x28(%rsp),%r8
    0.00 :   7da1:   mov    %r14,%rsi
    0.00 :   7da4:   mov    %rbp,%rdi
    0.00 :   7da7:   mov    0x24(%rsp),%ecx
    0.00 :   7dab:   lea    0x20(%rsp),%r9
    0.00 :   7db0:   call   6140 <receive_buf>
    0.00 :   7db5:   mov    0x30(%rsp),%rax
    0.00 :   7dba:   mov    -0x8(%rbx),%r9
    0.00 :   7dbe:   lea    0x1(%rax),%r8
    0.00 :   7dc2:   mov    %r8,0x30(%rsp)
    0.00 :   7dc7:   pop    %rsi
    0.00 :   7dc8:   cmp    %r13,%r8
    0.00 :   7dcb:   jae    7ea0 <virtnet_poll+0x2e0>
    0.00 :   7dd1:   mov    (%rsp),%rsi
    1.76 :   7dd5:   lea    0x20(%rsp),%rdx // [virtio_net][7dd5]
    0.00 :   7dda:   mov    %r9,%rdi
    0.00 :   7ddd:   call   7de2 <virtnet_poll+0x222>
    0.00 :   7de2:   mov    %rax,%rdx
    0.00 :   7de5:   test   %rax,%rax
    0.00 :   7de8:   jne    7d9a <virtnet_poll+0x1da>
    0.00 :   7dea:   mov    0x18(%rsp),%eax
    2.59 :   7dee:   mov    0x28(%rsp),%r8 // [virtio_net][7dee]
    0.00 :   7df3:   mov    -0x8(%rbx),%r9
    0.00 :   7df7:   mov    %eax,%ecx
    0.00 :   7df9:   and    $0x1,%eax
    0.00 :   7dfc:   mov    %r8d,0xc(%rsp)
    2.48 :   7e01:   mov    %r8d,%r12d // [virtio_net][7e01]
    0.00 :   7e04:   and    $0x2,%ecx
    0.00 :   7e07:   mov    %eax,0x14(%rsp)
    0.00 :   7e0b:   mov    %ecx,0x10(%rsp)
    0.00 :   7e0f:   mov    %r9,%rdi
    0.00 :   7e12:   mov    %r8,(%rsp)
    0.00 :   7e16:   mov    0x2c(%r9),%r13d
    0.00 :   7e1a:   call   7e1f <virtnet_poll+0x25f>
    0.00 :   7e1f:   mov    0x8(%rsp),%ecx
    0.00 :   7e23:   mov    (%rsp),%r8
    0.00 :   7e27:   cmp    %eax,%ecx
    0.00 :   7e29:   cmovbe %ecx,%eax
    0.00 :   7e2c:   shr    %eax
    0.00 :   7e2e:   cmp    %r13d,%eax
    0.00 :   7e31:   jb     7ec1 <virtnet_poll+0x301>
    0.00 :   7e37:   add    %r8,0x198(%rbx)
    0.00 :   7e3e:   lea    0x198(%rbx),%rcx
    0.00 :   7e45:   mov    $0x0,%rax
    0.00 :   7e4c:   mov    (%rax),%rdx
    7.47 :   7e4f:   add    $0x28,%rax // [virtio_net][7e4f]
    0.00 :   7e53:   mov    0x28(%rsp,%rdx,1),%rsi
    0.00 :   7e58:   add    %rsi,(%rcx,%rdx,1)
    6.13 :   7e5c:   cmp    $0x0,%rax // [virtio_net][7e5c]
    0.00 :   7e62:   jne    7e4c <virtnet_poll+0x28c>
    0.00 :   7e64:   mov    0x10(%rsp),%edx
    0.00 :   7e68:   test   %edx,%edx
    0.00 :   7e6a:   jne    7ff7 <virtnet_poll+0x437>
    0.00 :   7e70:   mov    0x8(%rsp),%ecx
    0.00 :   7e74:   cmp    %ecx,0xc(%rsp)
    0.00 :   7e78:   jb     7fa3 <virtnet_poll+0x3e3>
    9.32 :   7e7e:   mov    0x14(%rsp),%eax // [virtio_net][7e7e]
    0.00 :   7e82:   test   %eax,%eax
    0.00 :   7e84:   jne    7f12 <virtnet_poll+0x352>
    0.00 :   7e8a:   add    $0x68,%rsp
    0.00 :   7e8e:   mov    %r12d,%eax
    0.00 :   7e91:   pop    %rbx
    0.00 :   7e92:   pop    %rbp
    0.00 :   7e93:   pop    %r12
    0.00 :   7e95:   pop    %r13
    0.00 :   7e97:   pop    %r14
    0.00 :   7e99:   pop    %r15
    0.00 :   7e9b:   jmp    7ea0 <virtnet_poll+0x2e0>
    0.00 :   7ea0:   mov    0x18(%rsp),%eax
    0.00 :   7ea4:   mov    %r8d,0xc(%rsp)
    0.00 :   7ea9:   mov    %r8d,%r12d
    0.00 :   7eac:   mov    %eax,%edi
    0.00 :   7eae:   and    $0x1,%eax
    0.00 :   7eb1:   and    $0x2,%edi
    0.00 :   7eb4:   mov    %eax,0x14(%rsp)
    0.00 :   7eb8:   mov    %edi,0x10(%rsp)
    0.00 :   7ebc:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   7ec1:   mov    $0xa20,%edx
    0.00 :   7ec6:   mov    %r14,%rsi
    0.00 :   7ec9:   mov    %rbp,%rdi
    0.00 :   7ecc:   call   4fc0 <try_fill_recv>
    0.00 :   7ed1:   mov    (%rsp),%r8
    1.98 :   7ed5:   test   %al,%al // [virtio_net][7ed5]
    0.00 :   7ed7:   jne    7e37 <virtnet_poll+0x277>
    0.00 :   7edd:   lea    0xac(%rbp),%r14
    0.00 :   7ee4:   mov    %r14,%rdi
    0.00 :   7ee7:   call   7eec <virtnet_poll+0x32c>
    0.00 :   7eec:   cmpb   $0x0,0xa8(%rbp)
    0.00 :   7ef3:   mov    (%rsp),%r8
    0.00 :   7ef7:   jne    80a4 <virtnet_poll+0x4e4>
    0.00 :   7efd:   mov    %r14,%rdi
    0.00 :   7f00:   mov    %r8,(%rsp)
    0.00 :   7f04:   call   7f09 <virtnet_poll+0x349>
    0.00 :   7f09:   mov    (%rsp),%r8
    0.00 :   7f0d:   jmp    7e37 <virtnet_poll+0x277>
    0.00 :   7f12:   call   7f17 <virtnet_poll+0x357>
    0.00 :   7f17:   movzwl 0x2e(%r15),%ebx
    0.00 :   7f1c:   cmp    %ebx,0x0(%rip)        # 7f22 <virtnet_poll+0x362>
    0.00 :   7f22:   mov    %eax,%ebp
    0.00 :   7f24:   jae    8050 <virtnet_poll+0x490>
    0.00 :   7f2a:   movzwl 0x30(%r15),%eax
    0.00 :   7f2f:   sub    %eax,%ebx
    0.00 :   7f31:   lea    0x0(%rbp,%rbx,1),%ebx
    0.00 :   7f35:   imul   $0x458,%rbx,%rbx
    0.00 :   7f3c:   add    0x18(%r15),%rbx
    0.00 :   7f40:   mov    (%rbx),%rdi
    0.00 :   7f43:   call   7f48 <virtnet_poll+0x388>
    0.00 :   7f48:   test   %al,%al
    0.00 :   7f4a:   jne    8033 <virtnet_poll+0x473>
    0.00 :   7f50:   mov    0x10(%r15),%rax
    0.00 :   7f54:   mov    0x18(%r15),%rcx
    0.00 :   7f58:   mov    0x400(%rax),%rdx
    0.00 :   7f5f:   movzwl 0x2e(%r15),%eax
    0.00 :   7f64:   cmp    %eax,0x0(%rip)        # 7f6a <virtnet_poll+0x3aa>
    0.00 :   7f6a:   jb     7e8a <virtnet_poll+0x2ca>
    0.00 :   7f70:   sub    %rcx,%rbx
    0.00 :   7f73:   sar    $0x3,%rbx
    0.00 :   7f77:   imul   $0x70586723,%ebx,%eax
    0.00 :   7f7d:   lea    (%rax,%rax,4),%rax
    0.00 :   7f81:   shl    $0x6,%rax
    0.00 :   7f85:   add    %rax,%rdx
    0.00 :   7f88:   movl   $0xffffffff,0x84(%rdx)
    0.00 :   7f92:   lea    0x80(%rdx),%rdi
    0.00 :   7f99:   call   7f9e <virtnet_poll+0x3de>
    0.00 :   7f9e:   jmp    7e8a <virtnet_poll+0x2ca>
    0.00 :   7fa3:   mov    -0x8(%rbx),%r13
    0.00 :   7fa7:   mov    %r13,%rdi
    0.00 :   7faa:   call   7faf <virtnet_poll+0x3ef>
    0.00 :   7faf:   mov    %r12d,%esi
    0.00 :   7fb2:   mov    %rbx,%rdi
    0.00 :   7fb5:   mov    %eax,%ebp
    0.00 :   7fb7:   call   7fbc <virtnet_poll+0x3fc>
    4.87 :   7fbc:   test   %al,%al // [virtio_net][7fbc]
    0.00 :   7fbe:   je     8001 <virtnet_poll+0x441>
    2.43 :   7fc0:   mov    %ebp,%esi // [virtio_net][7fc0]
    0.00 :   7fc2:   mov    %r13,%rdi
    0.00 :   7fc5:   call   7fca <virtnet_poll+0x40a>
    0.00 :   7fca:   test   %al,%al
    0.00 :   7fcc:   je     7e7e <virtnet_poll+0x2be>
    0.00 :   7fd2:   mov    %rbx,%rdi
    0.00 :   7fd5:   call   7fda <virtnet_poll+0x41a>
    0.00 :   7fda:   test   %al,%al
    0.00 :   7fdc:   je     7e7e <virtnet_poll+0x2be>
    0.00 :   7fe2:   mov    %r13,%rdi
    0.00 :   7fe5:   call   7fea <virtnet_poll+0x42a>
    0.00 :   7fea:   mov    %rbx,%rdi
    0.00 :   7fed:   call   7ff2 <virtnet_poll+0x432>
    0.00 :   7ff2:   jmp    7e7e <virtnet_poll+0x2be>
    0.00 :   7ff7:   call   7ffc <virtnet_poll+0x43c>
    0.00 :   7ffc:   jmp    7e70 <virtnet_poll+0x2b0>
    0.00 :   8001:   mov    %r13,%rdi
    0.00 :   8004:   call   8009 <virtnet_poll+0x449>
    0.00 :   8009:   jmp    7e7e <virtnet_poll+0x2be>
    0.00 :   800e:   mov    0x18(%rsp),%eax
    0.00 :   8012:   mov    -0x8(%rbx),%r9
    0.00 :   8016:   mov    %r8d,0xc(%rsp)
    0.00 :   801b:   mov    %r8d,%r12d
    0.00 :   801e:   mov    %eax,%ecx
    0.00 :   8020:   and    $0x1,%eax
    0.00 :   8023:   and    $0x2,%ecx
    0.00 :   8026:   mov    %eax,0x14(%rsp)
    0.00 :   802a:   mov    %ecx,0x10(%rsp)
    0.00 :   802e:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   8033:   mov    (%rbx),%rdi
    0.00 :   8036:   call   803b <virtnet_poll+0x47b>
    0.00 :   803b:   test   %al,%al
    0.00 :   803d:   je     7f50 <virtnet_poll+0x390>
    0.00 :   8043:   addq   $0x1,0x2b0(%rbx)
    0.00 :   804b:   jmp    7f50 <virtnet_poll+0x390>
    0.00 :   8050:   cltd
    0.00 :   8051:   idiv   %ebx
    0.00 :   8053:   mov    0x10(%r15),%rax
    0.00 :   8057:   lea    (%rdx,%rdx,4),%r13
    0.00 :   805b:   mov    %rdx,%rbx
    0.00 :   805e:   shl    $0x6,%r13
    0.00 :   8062:   add    0x400(%rax),%r13
    0.00 :   8069:   lea    0x80(%r13),%rdi
    0.00 :   8070:   call   8075 <virtnet_poll+0x4b5>
    0.00 :   8075:   mov    %ebp,0x84(%r13)
    0.00 :   807c:   jmp    7f35 <virtnet_poll+0x375>
    0.00 :   8081:   movl   $0x0,0x14(%rsp)
    0.00 :   8089:   xor    %r8d,%r8d
    0.00 :   808c:   xor    %r12d,%r12d
    0.00 :   808f:   movl   $0x0,0x10(%rsp)
    0.00 :   8097:   movl   $0x0,0xc(%rsp)
    0.00 :   809f:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   80a4:   mov    0x0(%rip),%rsi        # 80ab <virtnet_poll+0x4eb>
    0.00 :   80ab:   lea    0x50(%rbp),%rdx
    0.00 :   80af:   xor    %ecx,%ecx
    0.00 :   80b1:   mov    $0x2000,%edi
    0.00 :   80b6:   call   80bb <virtnet_poll+0x4fb>
    0.00 :   80bb:   mov    (%rsp),%r8
    0.00 :   80bf:   jmp    7efd <virtnet_poll+0x33d>
    0.00 :   80c4:   movl   $0x0,0xc(%rsp)
    0.00 :   80cc:   xor    %r12d,%r12d
    0.00 :   80cf:   xor    %r8d,%r8d
    0.00 :   80d2:   movl   $0x0,0x14(%rsp)
    0.00 :   80da:   movl   $0x0,0x10(%rsp)
    0.00 :   80e2:   jmp    7e0f <virtnet_poll+0x24f>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   56.85 [nf_tables][1f6aa]
   17.46 [nf_tables][1f697]
    6.21 [nf_tables][1f68b]
    5.15 [nf_tables][1f6b4]
    3.29 [nf_tables][1f666]
    3.18 [nf_tables][1f610]
    3.08 [nf_tables][1f6a1]
    2.92 [nf_tables][1f663]
    1.86 [nf_tables][1f6a6]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (37 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001f610 <nft_hash_lookup_fast>:
         : 6     nft_hash_lookup_fast():
    3.18 :   1f610:  call   1f615 <nft_hash_lookup_fast+0x5> // [nf_tables][1f610]
    0.00 :   1f615:  mov    %rsi,%r9
    0.00 :   1f618:  mov    %rcx,%r8
    0.00 :   1f61b:  movzbl 0xc20(%rdi),%ecx
    0.00 :   1f622:  mov    $0x1,%esi
    0.00 :   1f627:  mov    0xf0(%r9),%eax
    0.00 :   1f62e:  shl    %cl,%esi
    0.00 :   1f630:  mov    (%rdx),%ecx
    0.00 :   1f632:  lea    -0x2152410d(%rax),%edx
    0.00 :   1f638:  mov    %edx,%eax
    0.00 :   1f63a:  lea    (%rcx,%rdx,1),%edi
    0.00 :   1f63d:  rol    $0xe,%eax
    0.00 :   1f640:  neg    %eax
    0.00 :   1f642:  mov    %eax,%r10d
    0.00 :   1f645:  xor    %eax,%edi
    0.00 :   1f647:  rol    $0xb,%r10d
    0.00 :   1f64b:  sub    %r10d,%edi
    0.00 :   1f64e:  mov    %edi,%r10d
    0.00 :   1f651:  xor    %edi,%edx
    0.00 :   1f653:  ror    $0x7,%r10d
    0.00 :   1f657:  sub    %r10d,%edx
    0.00 :   1f65a:  mov    %edx,%r10d
    0.00 :   1f65d:  xor    %edx,%eax
    0.00 :   1f65f:  rol    $0x10,%r10d
    2.92 :   1f663:  sub    %r10d,%eax // [nf_tables][1f663]
    3.29 :   1f666:  mov    %eax,%r10d // [nf_tables][1f666]
    0.00 :   1f669:  xor    %eax,%edi
    0.00 :   1f66b:  rol    $0x4,%r10d
    0.00 :   1f66f:  sub    %r10d,%edi
    0.00 :   1f672:  xor    %edi,%edx
    0.00 :   1f674:  rol    $0xe,%edi
    0.00 :   1f677:  sub    %edi,%edx
    0.00 :   1f679:  xor    %edx,%eax
    0.00 :   1f67b:  ror    $0x8,%edx
    0.00 :   1f67e:  sub    %edx,%eax
    0.00 :   1f680:  mov    0xf4(%r9),%edx
    0.00 :   1f687:  imul   %rdx,%rax
    6.21 :   1f68b:  shr    $0x20,%rax // [nf_tables][1f68b]
    0.00 :   1f68f:  mov    0xf8(%r9,%rax,8),%rax
   17.46 :   1f697:  test   %rax,%rax // [nf_tables][1f697]
    0.00 :   1f69a:  jne    1f6a6 <nft_hash_lookup_fast+0x96>
    0.00 :   1f69c:  jmp    1f6cd <nft_hash_lookup_fast+0xbd>
    0.00 :   1f69e:  mov    (%rax),%rax
    3.08 :   1f6a1:  test   %rax,%rax // [nf_tables][1f6a1]
    0.00 :   1f6a4:  je     1f6c8 <nft_hash_lookup_fast+0xb8>
    1.86 :   1f6a6:  movzbl 0x11(%rax),%edx // [nf_tables][1f6a6]
   56.85 :   1f6aa:  lea    0x10(%rax),%rdi // [nf_tables][1f6aa]
    0.00 :   1f6ae:  cmp    0x10(%rax,%rdx,1),%ecx
    0.00 :   1f6b2:  jne    1f69e <nft_hash_lookup_fast+0x8e>
    5.15 :   1f6b4:  mov    %esi,%edx // [nf_tables][1f6b4]
    0.00 :   1f6b6:  and    0x10(%rax),%dl
    0.00 :   1f6b9:  jne    1f69e <nft_hash_lookup_fast+0x8e>
    0.00 :   1f6bb:  mov    %rdi,(%r8)
    0.00 :   1f6be:  mov    $0x1,%eax
    0.00 :   1f6c3:  jmp    1f6c8 <nft_hash_lookup_fast+0xb8>
    0.00 :   1f6c8:  jmp    1f6cd <nft_hash_lookup_fast+0xbd>
    0.00 :   1f6cd:  xor    %eax,%eax
    0.00 :   1f6cf:  jmp    1f6d4 <nft_hash_lookup_fast+0xc4>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   45.58 libc.so.6[9b312]
   33.42 libc.so.6[9b35c]
    9.55 libc.so.6[9b2f0]
    6.49 libc.so.6[9b30e]
    2.82 libc.so.6[9b303]
    2.14 libc.so.6[9b366]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (32 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000009b2f0 <__libc_free>:
         : 6     __free():
    9.55 :   9b2f0:  endbr64 // libc.so.6[9b2f0]
    0.00 :   9b2f4:  test   %rdi,%rdi
    0.00 :   9b2f7:  je     9b3b8 <__libc_free+0xc8>
    0.00 :   9b2fd:  push   %rbp
    0.00 :   9b2fe:  lea    -0x10(%rdi),%rsi
    0.00 :   9b302:  push   %rbx
    2.82 :   9b303:  sub    $0x18,%rsp // libc.so.6[9b303]
    0.00 :   9b307:  mov    0x137b02(%rip),%rbx        # 1d2e10 <_DYNAMIC+0x290>
    6.49 :   9b30e:  mov    -0x8(%rdi),%rax // libc.so.6[9b30e]
   45.58 :   9b312:  mov    %fs:(%rbx),%ebp // libc.so.6[9b312]
    0.00 :   9b315:  test   $0x2,%al
    0.00 :   9b317:  jne    9b370 <__libc_free+0x80>
    0.00 :   9b319:  mov    0x137a88(%rip),%rdx        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9b320:  cmpq   $0x0,%fs:(%rdx)
    0.00 :   9b325:  je     9b3c0 <__libc_free+0xd0>
    0.00 :   9b32b:  lea    0x13894e(%rip),%rdi        # 1d3c80 <main_arena>
    0.00 :   9b332:  test   $0x4,%al
    0.00 :   9b334:  je     9b35c <__libc_free+0x6c>
    0.00 :   9b336:  mov    0x138053(%rip),%rdx        # 1d3390 <mp_+0x30>
    0.00 :   9b33d:  lea    0x0(,%rdx,4),%rax
    0.00 :   9b345:  neg    %rax
    0.00 :   9b348:  test   %rdx,%rdx
    0.00 :   9b34b:  mov    $0xfffffffffc000000,%rdx
    0.00 :   9b352:  cmove  %rdx,%rax
    0.00 :   9b356:  and    %rsi,%rax
    0.00 :   9b359:  mov    (%rax),%rdi
   33.42 :   9b35c:  xor    %edx,%edx // libc.so.6[9b35c]
    0.00 :   9b35e:  call   98500 <_int_free>
    0.00 :   9b363:  mov    %ebp,%fs:(%rbx)
    2.14 :   9b366:  add    $0x18,%rsp // libc.so.6[9b366]
    0.00 :   9b36a:  pop    %rbx
    0.00 :   9b36b:  pop    %rbp
    0.00 :   9b36c:  ret
    0.00 :   9b36d:  nopl   (%rax)
    0.00 :   9b370:  mov    0x138032(%rip),%edx        # 1d33a8 <mp_+0x48>
    0.00 :   9b376:  test   %edx,%edx
    0.00 :   9b378:  jne    9b3a2 <__libc_free+0xb2>
    0.00 :   9b37a:  cmp    %rax,0x137fef(%rip)        # 1d3370 <mp_+0x10>
    0.00 :   9b381:  jae    9b3a2 <__libc_free+0xb2>
    0.00 :   9b383:  cmp    $0x2000000,%rax
    0.00 :   9b389:  ja     9b3a2 <__libc_free+0xb2>
    0.00 :   9b38b:  and    $0xfffffffffffffff8,%rax
    0.00 :   9b38f:  lea    (%rax,%rax,1),%rdx
    0.00 :   9b393:  mov    %rax,0x137fd6(%rip)        # 1d3370 <mp_+0x10>
    0.00 :   9b39a:  mov    %rdx,0x137fbf(%rip)        # 1d3360 <mp_>
    0.00 :   9b3a1:  nop
    0.00 :   9b3a2:  mov    %rsi,%rdi
    0.00 :   9b3a5:  call   96da0 <munmap_chunk>
    0.00 :   9b3aa:  mov    %ebp,%fs:(%rbx)
    0.00 :   9b3ad:  add    $0x18,%rsp
    0.00 :   9b3b1:  pop    %rbx
    0.00 :   9b3b2:  pop    %rbp
    0.00 :   9b3b3:  ret
    0.00 :   9b3b4:  nopl   0x0(%rax)
    0.00 :   9b3b8:  ret
    0.00 :   9b3b9:  nopl   0x0(%rax)
    0.00 :   9b3c0:  mov    0x1379e9(%rip),%rdx        # 1d2db0 <_DYNAMIC+0x230>
    0.00 :   9b3c7:  mov    %rdi,(%rsp)
    0.00 :   9b3cb:  cmpb   $0x0,%fs:(%rdx)
    0.00 :   9b3cf:  jne    9b32b <__libc_free+0x3b>
    0.00 :   9b3d5:  mov    %rsi,0x8(%rsp)
    0.00 :   9b3da:  call   9a650 <tcache_init.part.0>
    0.00 :   9b3df:  mov    (%rsp),%rdi
    0.00 :   9b3e3:  mov    0x8(%rsp),%rsi
    0.00 :   9b3e8:  mov    -0x8(%rdi),%rax
    0.00 :   9b3ec:  jmp    9b32b <__libc_free+0x3b>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   59.38 [nf_tables][155e0]
    7.21 [nf_tables][15695]
    7.10 [nf_tables][156a6]
    6.39 [nf_tables][1568c]
    6.22 [nf_tables][155e6]
    3.66 [nf_tables][15685]
    3.43 [nf_tables][15691]
    2.62 [nf_tables][155fd]
    2.61 [nf_tables][1560b]
    1.38 [nf_tables][156b7]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (31 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000155e0 <nft_do_chain_inet>:
         : 6     nft_do_chain_inet():
   59.38 :   155e0:  call   155e5 <nft_do_chain_inet+0x5> // [nf_tables][155e0]
    0.00 :   155e5:  push   %rbx
    6.22 :   155e6:  mov    %rdi,%rbx // [nf_tables][155e6]
    0.00 :   155e9:  mov    %rsi,%rdi
    0.00 :   155ec:  sub    $0x30,%rsp
    0.00 :   155f0:  movzbl 0x1(%rdx),%eax
    0.00 :   155f4:  movq   $0x0,0x20(%rsp)
    2.62 :   155fd:  movq   $0x0,0x28(%rsp) // [nf_tables][155fd]
    0.00 :   15606:  mov    %rsi,0x10(%rsp)
    2.61 :   1560b:  mov    %rdx,0x18(%rsp) // [nf_tables][1560b]
    0.00 :   15610:  cmp    $0x2,%al
    0.00 :   15612:  je     1567e <nft_do_chain_inet+0x9e>
    0.00 :   15614:  cmp    $0xa,%al
    0.00 :   15616:  jne    15667 <nft_do_chain_inet+0x87>
    0.00 :   15618:  xor    %eax,%eax
    0.00 :   1561a:  lea    0x8(%rsp),%r8
    0.00 :   1561f:  lea    0x6(%rsp),%rcx
    0.00 :   15624:  mov    $0xffffffff,%edx
    0.00 :   15629:  lea    0xc(%rsp),%rsi
    0.00 :   1562e:  movl   $0x2,0x8(%rsp)
    0.00 :   15636:  movl   $0x0,0xc(%rsp)
    0.00 :   1563e:  mov    %ax,0x6(%rsp)
    0.00 :   15643:  call   15648 <nft_do_chain_inet+0x68>
    0.00 :   15648:  test   %eax,%eax
    0.00 :   1564a:  js     156b9 <nft_do_chain_inet+0xd9>
    0.00 :   1564c:  mov    %al,0x21(%rsp)
    0.00 :   15650:  mov    0xc(%rsp),%eax
    0.00 :   15654:  movb   $0x1,0x20(%rsp)
    0.00 :   15659:  mov    %eax,0x24(%rsp)
    0.00 :   1565d:  movzwl 0x6(%rsp),%eax
    0.00 :   15662:  mov    %ax,0x22(%rsp)
    0.00 :   15667:  mov    %rbx,%rsi
    0.00 :   1566a:  lea    0x10(%rsp),%rdi
    0.00 :   1566f:  call   15674 <nft_do_chain_inet+0x94>
    0.00 :   15674:  add    $0x30,%rsp
    0.00 :   15678:  pop    %rbx
    0.00 :   15679:  jmp    1567e <nft_do_chain_inet+0x9e>
    0.00 :   1567e:  movzwl 0xb8(%rsi),%eax
    3.66 :   15685:  add    0xc8(%rsi),%rax // [nf_tables][15685]
    6.39 :   1568c:  movb   $0x1,0x20(%rsp) // [nf_tables][1568c]
    3.43 :   15691:  movzbl 0x9(%rax),%edx // [nf_tables][15691]
    7.21 :   15695:  mov    %dl,0x21(%rsp) // [nf_tables][15695]
    0.00 :   15699:  movzbl (%rax),%edx
    0.00 :   1569c:  and    $0xf,%edx
    0.00 :   1569f:  shl    $0x2,%edx
    0.00 :   156a2:  mov    %edx,0x24(%rsp)
    7.10 :   156a6:  movzwl 0x6(%rax),%eax // [nf_tables][156a6]
    0.00 :   156aa:  rol    $0x8,%ax
    0.00 :   156ae:  and    $0x1fff,%ax
    0.00 :   156b2:  mov    %ax,0x22(%rsp)
    1.38 :   156b7:  jmp    15667 <nft_do_chain_inet+0x87> // [nf_tables][156b7]
    0.00 :   156b9:  movq   $0x0,0x20(%rsp)
    0.00 :   156c2:  jmp    15667 <nft_do_chain_inet+0x87>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   22.79 [nf_nat][1710]
   10.27 [nf_nat][1715]
    6.23 [nf_nat][1717]
    6.16 [nf_nat][1785]
    6.02 [nf_nat][18c5]
    4.72 [nf_nat][18dc]
    3.88 [nf_nat][18df]
    3.80 [nf_nat][19ee]
    3.78 [nf_nat][1922]
    3.37 [nf_nat][18d2]
    3.25 [nf_nat][1735]
    3.16 [nf_nat][18c9]
    3.08 [nf_nat][189a]
    3.00 [nf_nat][1929]
    2.97 [nf_nat][1756]
    2.97 [nf_nat][1908]
    2.96 [nf_nat][171b]
    2.76 [nf_nat][178a]
    2.76 [nf_nat][18f5]
    2.07 [nf_nat][18ff]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (32 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001710 <nf_nat_inet_fn>:
         : 6    nf_nat_inet_fn():
   22.79 :   1710:   call   1715 <nf_nat_inet_fn+0x5> // [nf_nat][1710]
   10.27 :   1715:   push   %r15 // [nf_nat][1715]
    6.23 :   1717:   push   %r14 // [nf_nat][1717]
    0.00 :   1719:   push   %r13
    2.96 :   171b:   push   %r12 // [nf_nat][171b]
    0.00 :   171d:   push   %rbp
    0.00 :   171e:   push   %rbx
    0.00 :   171f:   sub    $0x10,%rsp
    0.00 :   1723:   mov    0x68(%rsi),%rbx
    0.00 :   1727:   movzbl (%rdx),%r15d
    0.00 :   172b:   cmp    $0x7,%rbx
    0.00 :   172f:   jbe    18d2 <nf_nat_inet_fn+0x1c2>
    3.25 :   1735:   mov    %rdi,%rcx // [nf_nat][1735]
    0.00 :   1738:   mov    %rsi,%r13
    0.00 :   173b:   mov    %rdx,%r12
    0.00 :   173e:   cmp    $0x4,%r15b
    0.00 :   1742:   je     18ea <nf_nat_inet_fn+0x1da>
    0.00 :   1748:   mov    %rbx,%r14
    0.00 :   174b:   and    $0xfffffffffffffff8,%r14
    0.00 :   174f:   mov    0xb0(%r14),%rax
    2.97 :   1756:   test   %rax,%rax // [nf_nat][1756]
    0.00 :   1759:   je     19e2 <nf_nat_inet_fn+0x2d2>
    0.00 :   175f:   movzbl 0x1(%rax),%edx
    0.00 :   1763:   test   %dl,%dl
    0.00 :   1765:   je     17d8 <nf_nat_inet_fn+0xc8>
    0.00 :   1767:   mov    0xc(%rax),%esi
    0.00 :   176a:   test   %esi,%esi
    0.00 :   176c:   jne    19fb <nf_nat_inet_fn+0x2eb>
    0.00 :   1772:   add    %rdx,%rax
    0.00 :   1775:   and    $0x7,%ebx
    0.00 :   1778:   cmp    $0x2,%ebx
    0.00 :   177b:   ja     18ff <nf_nat_inet_fn+0x1ef>
    0.00 :   1781:   test   %ebx,%ebx
    0.00 :   1783:   jne    17ee <nf_nat_inet_fn+0xde>
    6.16 :   1785:   mov    0x10(%r12),%rdx // [nf_nat][1785]
    2.76 :   178a:   movzbl (%r12),%r15d // [nf_nat][178a]
    0.00 :   178f:   test   %rax,%rax
    0.00 :   1792:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   1798:   mov    0x4(%rax),%eax
    0.00 :   179b:   test   %eax,%eax
    0.00 :   179d:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17a3:   cmp    $0x4,%r15b
    0.00 :   17a7:   jne    189a <nf_nat_inet_fn+0x18a>
    0.00 :   17ad:   cmp    $0x2,%ebx
    0.00 :   17b0:   ja     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17b6:   xor    %ebx,%ebx
    0.00 :   17b8:   cmp    0xd8(%rdx),%eax
    0.00 :   17be:   je     1a15 <nf_nat_inet_fn+0x305>
    0.00 :   17c4:   mov    %r13,%rdx
    0.00 :   17c7:   mov    %ebx,%esi
    0.00 :   17c9:   mov    %r14,%rdi
    0.00 :   17cc:   call   17d1 <nf_nat_inet_fn+0xc1>
    0.00 :   17d1:   xor    %eax,%eax
    0.00 :   17d3:   jmp    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   17d8:   and    $0x7,%ebx
    0.00 :   17db:   cmp    $0x2,%ebx
    0.00 :   17de:   ja     18fd <nf_nat_inet_fn+0x1ed>
    0.00 :   17e4:   test   %ebx,%ebx
    0.00 :   17e6:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17ec:   xor    %eax,%eax
    0.00 :   17ee:   cmp    $0x4,%r15b
    0.00 :   17f2:   mov    0x80(%r14),%r8
    0.00 :   17f9:   setne  %bpl
    0.00 :   17fd:   cmp    $0x1,%r15b
    0.00 :   1801:   setne  %dl
    0.00 :   1804:   mov    %r8d,%esi
    0.00 :   1807:   mov    %r8d,%r15d
    0.00 :   180a:   and    $0x80,%esi
    0.00 :   1810:   and    $0x100,%r15d
    0.00 :   1817:   and    %dl,%bpl
    0.00 :   181a:   cmove  %esi,%r15d
    0.00 :   181e:   mov    %bpl,(%rsp)
    0.00 :   1822:   test   %r15d,%r15d
    0.00 :   1825:   jne    1946 <nf_nat_inet_fn+0x236>
    0.00 :   182b:   mov    (%rcx),%rbp
    0.00 :   182e:   test   %rbp,%rbp
    0.00 :   1831:   je     19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1837:   cmpw   $0x0,0x0(%rbp)
    0.00 :   183c:   jne    1854 <nf_nat_inet_fn+0x144>
    0.00 :   183e:   jmp    19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1843:   movzwl 0x0(%rbp),%eax
    0.00 :   1847:   add    $0x1,%r15d
    0.00 :   184b:   cmp    %r15d,%eax
    0.00 :   184e:   jle    19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1854:   movslq %r15d,%rax
    0.00 :   1857:   mov    %r12,%rdx
    0.00 :   185a:   mov    %r13,%rsi
    0.00 :   185d:   shl    $0x4,%rax
    0.00 :   1861:   add    %rbp,%rax
    0.00 :   1864:   mov    0x10(%rax),%rdi
    0.00 :   1868:   mov    0x8(%rax),%rax
    0.00 :   186c:   call   1871 <nf_nat_inet_fn+0x161>
    0.00 :   1871:   cmp    $0x1,%eax
    0.00 :   1874:   jne    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   1876:   mov    0x80(%r14),%rax
    0.00 :   187d:   mov    %eax,%edx
    0.00 :   187f:   and    $0x100,%eax
    0.00 :   1884:   and    $0x80,%edx
    0.00 :   188a:   cmpb   $0x0,(%rsp)
    0.00 :   188e:   cmove  %edx,%eax
    0.00 :   1891:   test   %eax,%eax
    0.00 :   1893:   je     1843 <nf_nat_inet_fn+0x133>
    0.00 :   1895:   movzbl (%r12),%r15d
    3.08 :   189a:   xor    %ecx,%ecx // [nf_nat][189a]
    0.00 :   189c:   cmp    $0x2,%ebx
    0.00 :   189f:   movzbl %r15b,%eax
    0.00 :   18a3:   seta   %cl
    0.00 :   18a6:   cmp    $0x4,%r15b
    0.00 :   18aa:   je     1922 <nf_nat_inet_fn+0x212>
    0.00 :   18ac:   cmp    $0x1,%eax
    0.00 :   18af:   je     1922 <nf_nat_inet_fn+0x212>
    0.00 :   18b1:   mov    $0x1,%esi
    0.00 :   18b6:   mov    $0x20,%eax
    0.00 :   18bb:   mov    %rax,%rdx
    0.00 :   18be:   xor    $0x30,%rdx
    0.00 :   18c2:   cmp    $0x2,%ebx
    6.02 :   18c5:   cmova  %rdx,%rax // [nf_nat][18c5]
    3.16 :   18c9:   and    0x80(%r14),%rax // [nf_nat][18c9]
    0.00 :   18d0:   jne    192b <nf_nat_inet_fn+0x21b>
    3.37 :   18d2:   mov    $0x1,%eax // [nf_nat][18d2]
    0.00 :   18d7:   add    $0x10,%rsp
    0.00 :   18db:   pop    %rbx
    4.72 :   18dc:   pop    %rbp // [nf_nat][18dc]
    0.00 :   18dd:   pop    %r12
    3.88 :   18df:   pop    %r13 // [nf_nat][18df]
    0.00 :   18e1:   pop    %r14
    0.00 :   18e3:   pop    %r15
    0.00 :   18e5:   jmp    18ea <nf_nat_inet_fn+0x1da>
    0.00 :   18ea:   mov    0x10(%rdx),%rax
    0.00 :   18ee:   testb  $0x4,0xca(%rax)
    2.76 :   18f5:   je     1748 <nf_nat_inet_fn+0x38> // [nf_nat][18f5]
    0.00 :   18fb:   jmp    18d2 <nf_nat_inet_fn+0x1c2>
    0.00 :   18fd:   xor    %eax,%eax
    2.07 :   18ff:   cmp    $0x4,%ebx // [nf_nat][18ff]
    0.00 :   1902:   je     17ee <nf_nat_inet_fn+0xde>
    2.97 :   1908:   mov    $0x9,%edx // [nf_nat][1908]
    0.00 :   190d:   mov    %ebx,%ecx
    0.00 :   190f:   shr    %cl,%rdx
    0.00 :   1912:   test   %rdx,%rdx
    0.00 :   1915:   jne    1785 <nf_nat_inet_fn+0x75>
    0.00 :   191b:   ud2
    0.00 :   191d:   jmp    1785 <nf_nat_inet_fn+0x75>
    3.78 :   1922:   xor    %esi,%esi // [nf_nat][1922]
    0.00 :   1924:   mov    $0x10,%eax
    3.00 :   1929:   jmp    18bb <nf_nat_inet_fn+0x1ab> // [nf_nat][1929]
    0.00 :   192b:   add    $0x10,%rsp
    0.00 :   192f:   mov    %esi,%edx
    0.00 :   1931:   mov    %r13,%rdi
    0.00 :   1934:   mov    %r14,%rsi
    0.00 :   1937:   pop    %rbx
    0.00 :   1938:   pop    %rbp
    0.00 :   1939:   pop    %r12
    0.00 :   193b:   pop    %r13
    0.00 :   193d:   pop    %r14
    0.00 :   193f:   pop    %r15
    0.00 :   1941:   jmp    1946 <nf_nat_inet_fn+0x236>
    0.00 :   1946:   xchg   %ax,%ax
    0.00 :   1948:   mov    0x10(%r12),%rdx
    0.00 :   194d:   movzbl (%r12),%r15d
    0.00 :   1952:   test   %rax,%rax
    0.00 :   1955:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   195b:   mov    0x4(%rax),%eax
    0.00 :   195e:   test   %eax,%eax
    0.00 :   1960:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   1966:   cmp    $0x4,%r15b
    0.00 :   196a:   jne    189a <nf_nat_inet_fn+0x18a>
    0.00 :   1970:   cmp    $0x2,%ebx
    0.00 :   1973:   jbe    17b8 <nf_nat_inet_fn+0xa8>
    0.00 :   1979:   jmp    189a <nf_nat_inet_fn+0x18a>
    0.00 :   197e:   cmpb   $0x0,(%rsp)
    0.00 :   1982:   mov    $0x0,%rcx
    0.00 :   1989:   mov    $0x0,%rdx
    0.00 :   1990:   mov    $0x0,%rsi
    0.00 :   1997:   cmove  %rcx,%rdx
    0.00 :   199b:   mov    $0x0,%rdi
    0.00 :   19a2:   mov    %r14,%rcx
    0.00 :   19a5:   mov    %rax,0x8(%rsp)
    0.00 :   19aa:   call   19af <nf_nat_inet_fn+0x29f>
    0.00 :   19af:   mov    0x8(%rsp),%rax
    0.00 :   19b4:   jmp    1948 <nf_nat_inet_fn+0x238>
    0.00 :   19b6:   movzbl (%r12),%eax
    0.00 :   19bb:   mov    %r14,%rdi
    0.00 :   19be:   cmp    $0x4,%eax
    0.00 :   19c1:   setne  %dl
    0.00 :   19c4:   xor    %esi,%esi
    0.00 :   19c6:   cmp    $0x1,%eax
    0.00 :   19c9:   setne  %sil
    0.00 :   19cd:   and    %edx,%esi
    0.00 :   19cf:   call   1340 <__nf_nat_alloc_null_binding>
    0.00 :   19d4:   cmp    $0x1,%eax
    0.00 :   19d7:   jne    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   19dd:   jmp    1895 <nf_nat_inet_fn+0x185>
    0.00 :   19e2:   and    $0x7,%ebx
    0.00 :   19e5:   cmp    $0x2,%ebx
    0.00 :   19e8:   ja     18ff <nf_nat_inet_fn+0x1ef>
    3.80 :   19ee:   test   %ebx,%ebx // [nf_nat][19ee]
    0.00 :   19f0:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   19f6:   jmp    17ee <nf_nat_inet_fn+0xde>
    0.00 :   19fb:   mov    $0x1,%esi
    0.00 :   1a00:   mov    %rax,%rdi
    0.00 :   1a03:   mov    %rcx,(%rsp)
    0.00 :   1a07:   call   1a0c <nf_nat_inet_fn+0x2fc>
    0.00 :   1a0c:   mov    (%rsp),%rcx
    0.00 :   1a10:   jmp    1775 <nf_nat_inet_fn+0x65>
    0.00 :   1a15:   xor    %esi,%esi
    0.00 :   1a17:   xor    %ecx,%ecx
    0.00 :   1a19:   mov    $0x10,%eax
    0.00 :   1a1e:   jmp    18c9 <nf_nat_inet_fn+0x1b9>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   44.76 libc.so.6[87659]
   21.44 libc.so.6[87671]
   19.04 libc.so.6[8765f]
   14.76 libc.so.6[87640]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (33 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000087640 <__GI___pthread_disable_asynccancel>:
         : 6     __GI___pthread_disable_asynccancel():
   14.76 :   87640:  endbr64 // libc.so.6[87640]
    0.00 :   87644:  and    $0x2,%edi
    0.00 :   87647:  je     87650 <__GI___pthread_disable_asynccancel+0x10>
    0.00 :   87649:  ret
    0.00 :   8764a:  nopw   0x0(%rax,%rax,1)
    0.00 :   87650:  mov    %fs:0x10,%rax
   44.76 :   87659:  mov    0x308(%rax),%edx // libc.so.6[87659]
   19.04 :   8765f:  lea    0x308(%rax),%rdi // libc.so.6[8765f]
    0.00 :   87666:  mov    %edx,%ecx
    0.00 :   87668:  mov    %edx,%eax
    0.00 :   8766a:  and    $0xfffffffd,%ecx
    0.00 :   8766d:  lock cmpxchg %ecx,(%rdi)
   21.44 :   87671:  jne    876bc <__GI___pthread_disable_asynccancel+0x7c> // libc.so.6[87671]
    0.00 :   87673:  and    $0xc,%edx
    0.00 :   87676:  cmp    $0x4,%edx
    0.00 :   87679:  jne    87649 <__GI___pthread_disable_asynccancel+0x9>
    0.00 :   8767b:  mov    $0xca,%r8d
    0.00 :   87681:  xor    %r10d,%r10d
    0.00 :   87684:  mov    %ecx,%edx
    0.00 :   87686:  mov    $0x80,%esi
    0.00 :   8768b:  mov    %r8d,%eax
    0.00 :   8768e:  syscall
    0.00 :   87690:  cmp    $0xfffffffffffff000,%rax
    0.00 :   87696:  ja     876a5 <__GI___pthread_disable_asynccancel+0x65>
    0.00 :   87698:  mov    (%rdi),%ecx
    0.00 :   8769a:  mov    %ecx,%eax
    0.00 :   8769c:  and    $0xc,%eax
    0.00 :   8769f:  cmp    $0x4,%eax
    0.00 :   876a2:  je     87681 <__GI___pthread_disable_asynccancel+0x41>
    0.00 :   876a4:  ret
    0.00 :   876a5:  cmp    $0xfffffff5,%eax
    0.00 :   876a8:  je     87698 <__GI___pthread_disable_asynccancel+0x58>
    0.00 :   876aa:  cmp    $0xfffffffc,%eax
    0.00 :   876ad:  je     87698 <__GI___pthread_disable_asynccancel+0x58>
    0.00 :   876af:  push   %rax
    0.00 :   876b0:  lea    0x114f39(%rip),%rdi        # 19c5f0 <aliasfile.0+0xba8>
    0.00 :   876b7:  call   810e0 <__libc_fatal>
    0.00 :   876bc:  mov    %eax,%edx
    0.00 :   876be:  jmp    87666 <__GI___pthread_disable_asynccancel+0x26>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   40.14 libc.so.6[ff1d0]
   28.48 libc.so.6[ff227]
   25.02 libc.so.6[ff22e]
    6.35 libc.so.6[ff1db]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (29 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000ff1d0 <__poll>:
         : 6     __libc_poll():
   40.14 :   ff1d0:  endbr64 // libc.so.6[ff1d0]
    0.00 :   ff1d4:  cmpb   $0x0,0xdc41d(%rip)        # 1db5f8 <__libc_single_threaded>
    6.35 :   ff1db:  je     ff1f0 <__poll+0x20> // libc.so.6[ff1db]
    0.00 :   ff1dd:  mov    $0x7,%eax
    0.00 :   ff1e2:  syscall
    0.00 :   ff1e4:  cmp    $0xfffffffffffff000,%rax
    0.00 :   ff1ea:  ja     ff240 <__poll+0x70>
    0.00 :   ff1ec:  ret
    0.00 :   ff1ed:  nopl   (%rax)
    0.00 :   ff1f0:  sub    $0x28,%rsp
    0.00 :   ff1f4:  mov    %edx,0x1c(%rsp)
    0.00 :   ff1f8:  mov    %rsi,0x10(%rsp)
    0.00 :   ff1fd:  mov    %rdi,0x8(%rsp)
    0.00 :   ff202:  call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   ff207:  mov    0x1c(%rsp),%edx
    0.00 :   ff20b:  mov    0x10(%rsp),%rsi
    0.00 :   ff210:  mov    %eax,%r8d
    0.00 :   ff213:  mov    0x8(%rsp),%rdi
    0.00 :   ff218:  mov    $0x7,%eax
    0.00 :   ff21d:  syscall
    0.00 :   ff21f:  cmp    $0xfffffffffffff000,%rax
    0.00 :   ff225:  ja     ff258 <__poll+0x88>
   28.48 :   ff227:  mov    %r8d,%edi // libc.so.6[ff227]
    0.00 :   ff22a:  mov    %eax,0x8(%rsp)
   25.02 :   ff22e:  call   87640 <__GI___pthread_disable_asynccancel> // libc.so.6[ff22e]
    0.00 :   ff233:  mov    0x8(%rsp),%eax
    0.00 :   ff237:  add    $0x28,%rsp
    0.00 :   ff23b:  ret
    0.00 :   ff23c:  nopl   0x0(%rax)
    0.00 :   ff240:  mov    0xd3bc9(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   ff247:  neg    %eax
    0.00 :   ff249:  mov    %eax,%fs:(%rdx)
    0.00 :   ff24c:  mov    $0xffffffff,%eax
    0.00 :   ff251:  ret
    0.00 :   ff252:  nopw   0x0(%rax,%rax,1)
    0.00 :   ff258:  mov    0xd3bb1(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   ff25f:  neg    %eax
    0.00 :   ff261:  mov    %eax,%fs:(%rdx)
    0.00 :   ff264:  mov    $0xffffffff,%eax
    0.00 :   ff269:  jmp    ff227 <__poll+0x57>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   49.00 libc.so.6[156041]
   38.97 libc.so.6[156020]
    4.87 libc.so.6[1560ef]
    4.28 libc.so.6[156029]
    2.88 libc.so.6[1560b6]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (29 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000156020 <__strlen_avx2>:
         : 6      __strlen_avx2():
   38.97 :   156020: endbr64 // libc.so.6[156020]
    0.00 :   156024: mov    %edi,%eax
    0.00 :   156026: mov    %rdi,%rdx
    4.28 :   156029: vpxor  %xmm0,%xmm0,%xmm0 // libc.so.6[156029]
    0.00 :   15602d: and    $0xfff,%eax
    0.00 :   156032: cmp    $0xfe0,%eax
    0.00 :   156037: ja     156170 <__strlen_avx2+0x150>
    0.00 :   15603d: vpcmpeqb (%rdi),%ymm0,%ymm1
   49.00 :   156041: vpmovmskb %ymm1,%eax // libc.so.6[156041]
    0.00 :   156045: test   %eax,%eax
    0.00 :   156047: je     1560a0 <__strlen_avx2+0x80>
    0.00 :   156049: tzcnt  %eax,%eax
    0.00 :   15604d: vzeroupper
    0.00 :   156050: ret
    0.00 :   156051: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15605c: nopl   0x0(%rax)
    0.00 :   156060: tzcnt  %eax,%eax
    0.00 :   156064: sub    %edx,%edi
    0.00 :   156066: inc    %edi
    0.00 :   156068: add    %edi,%eax
    0.00 :   15606a: vzeroupper
    0.00 :   15606d: ret
    0.00 :   15606e: xchg   %ax,%ax
    0.00 :   156070: tzcnt  %eax,%eax
    0.00 :   156074: sub    %edx,%edi
    0.00 :   156076: add    $0x21,%edi
    0.00 :   156079: add    %edi,%eax
    0.00 :   15607b: vzeroupper
    0.00 :   15607e: ret
    0.00 :   15607f: nop
    0.00 :   156080: tzcnt  %eax,%eax
    0.00 :   156084: sub    %edx,%edi
    0.00 :   156086: add    $0x41,%edi
    0.00 :   156089: add    %edi,%eax
    0.00 :   15608b: vzeroupper
    0.00 :   15608e: ret
    0.00 :   15608f: nop
    0.00 :   156090: tzcnt  %eax,%eax
    0.00 :   156094: sub    %edx,%edi
    0.00 :   156096: add    $0x61,%edi
    0.00 :   156099: add    %edi,%eax
    0.00 :   15609b: vzeroupper
    0.00 :   15609e: ret
    0.00 :   15609f: nop
    0.00 :   1560a0: or     $0x1f,%rdi
    0.00 :   1560a4: vpcmpeqb 0x1(%rdi),%ymm0,%ymm1
    0.00 :   1560a9: vpmovmskb %ymm1,%eax
    0.00 :   1560ad: test   %eax,%eax
    0.00 :   1560af: jne    156060 <__strlen_avx2+0x40>
    0.00 :   1560b1: vpcmpeqb 0x21(%rdi),%ymm0,%ymm1
    2.88 :   1560b6: vpmovmskb %ymm1,%eax // libc.so.6[1560b6]
    0.00 :   1560ba: test   %eax,%eax
    0.00 :   1560bc: jne    156070 <__strlen_avx2+0x50>
    0.00 :   1560be: vpcmpeqb 0x41(%rdi),%ymm0,%ymm1
    0.00 :   1560c3: vpmovmskb %ymm1,%eax
    0.00 :   1560c7: test   %eax,%eax
    0.00 :   1560c9: jne    156080 <__strlen_avx2+0x60>
    0.00 :   1560cb: vpcmpeqb 0x61(%rdi),%ymm0,%ymm1
    0.00 :   1560d0: vpmovmskb %ymm1,%eax
    0.00 :   1560d4: test   %eax,%eax
    0.00 :   1560d6: jne    156090 <__strlen_avx2+0x70>
    0.00 :   1560d8: inc    %rdi
    0.00 :   1560db: or     $0x7f,%rdi
    0.00 :   1560df: nop
    0.00 :   1560e0: vmovdqa 0x1(%rdi),%ymm1
    0.00 :   1560e5: vpminub 0x21(%rdi),%ymm1,%ymm2
    0.00 :   1560ea: vmovdqa 0x41(%rdi),%ymm3
    4.87 :   1560ef: vpminub 0x61(%rdi),%ymm3,%ymm4 // libc.so.6[1560ef]
    0.00 :   1560f4: vpminub %ymm2,%ymm4,%ymm5
    0.00 :   1560f8: vpcmpeqb %ymm5,%ymm0,%ymm5
    0.00 :   1560fc: vpmovmskb %ymm5,%ecx
    0.00 :   156100: sub    $0xffffffffffffff80,%rdi
    0.00 :   156104: test   %ecx,%ecx
    0.00 :   156106: je     1560e0 <__strlen_avx2+0xc0>
    0.00 :   156108: vpcmpeqb %ymm1,%ymm0,%ymm1
    0.00 :   15610c: vpmovmskb %ymm1,%eax
    0.00 :   156110: sub    %rdx,%rdi
    0.00 :   156113: test   %eax,%eax
    0.00 :   156115: jne    156150 <__strlen_avx2+0x130>
    0.00 :   156117: vpcmpeqb %ymm2,%ymm0,%ymm2
    0.00 :   15611b: vpmovmskb %ymm2,%eax
    0.00 :   15611f: test   %eax,%eax
    0.00 :   156121: jne    156160 <__strlen_avx2+0x140>
    0.00 :   156123: vpcmpeqb %ymm3,%ymm0,%ymm3
    0.00 :   156127: vpmovmskb %ymm3,%eax
    0.00 :   15612b: shl    $0x20,%rcx
    0.00 :   15612f: or     %rcx,%rax
    0.00 :   156132: tzcnt  %rax,%rax
    0.00 :   156137: sub    $0x3f,%rdi
    0.00 :   15613b: add    %rdi,%rax
    0.00 :   15613e: vzeroupper
    0.00 :   156141: ret
    0.00 :   156142: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15614d: nopl   (%rax)
    0.00 :   156150: tzcnt  %eax,%eax
    0.00 :   156154: sub    $0x7f,%rdi
    0.00 :   156158: add    %rdi,%rax
    0.00 :   15615b: vzeroupper
    0.00 :   15615e: ret
    0.00 :   15615f: nop
    0.00 :   156160: tzcnt  %eax,%eax
    0.00 :   156164: sub    $0x5f,%rdi
    0.00 :   156168: add    %rdi,%rax
    0.00 :   15616b: vzeroupper
    0.00 :   15616e: ret
    0.00 :   15616f: nop
    0.00 :   156170: or     $0x1f,%rdi
    0.00 :   156174: vpcmpeqb -0x1f(%rdi),%ymm0,%ymm1
    0.00 :   156179: vpmovmskb %ymm1,%eax
    0.00 :   15617d: sarx   %edx,%eax,%eax
    0.00 :   156182: test   %eax,%eax
    0.00 :   156184: je     1560a4 <__strlen_avx2+0x84>
    0.00 :   15618a: tzcnt  %eax,%eax
    0.00 :   15618e: vzeroupper
    0.00 :   156191: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/ipv4/netfilter/nf_defrag_ipv4.ko.xz
----------------------------------------------

   65.32 [nf_defrag_ipv4][70]
    8.08 [nf_defrag_ipv4][ba]
    6.70 [nf_defrag_ipv4][b3]
    4.83 [nf_defrag_ipv4][7f]
    4.58 [nf_defrag_ipv4][75]
    4.25 [nf_defrag_ipv4][cf]
    3.17 [nf_defrag_ipv4][93]
    3.07 [nf_defrag_ipv4][a5]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/ipv4/netfilter/nf_defrag_ipv4.ko.xz for cycles (29 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000070 <ipv4_conntrack_defrag>:
         : 6   ipv4_conntrack_defrag():
   65.32 :    70:     call   75 <ipv4_conntrack_defrag+0x5> // [nf_defrag_ipv4][70]
    4.58 :    75:     push   %r12 // [nf_defrag_ipv4][75]
    0.00 :    77:     push   %rbp
    0.00 :    78:     push   %rbx
    0.00 :    79:     mov    %rsi,%rbx
    0.00 :    7c:     mov    %rdx,%rsi
    4.83 :    7f:     mov    0x18(%rbx),%rax // [nf_defrag_ipv4][7f]
    0.00 :    83:     test   %rax,%rax
    0.00 :    86:     je     9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    88:     movzbl 0x12(%rax),%ecx
    0.00 :    8c:     mov    $0x1,%edx
    0.00 :    91:     shl    %cl,%edx
    3.17 :    93:     and    $0xffffefbf,%edx // [nf_defrag_ipv4][93]
    0.00 :    99:     jne    ca <ipv4_conntrack_defrag+0x5a>
    0.00 :    9b:     mov    0x68(%rbx),%rax
    0.00 :    9f:     cmp    $0x7,%rax
    0.00 :    a3:     je     bc <ipv4_conntrack_defrag+0x4c>
    3.07 :    a5:     movzwl 0xb8(%rbx),%edx // [nf_defrag_ipv4][a5]
    0.00 :    ac:     mov    0xc8(%rbx),%rcx
    6.70 :    b3:     testw  $0xff3f,0x6(%rcx,%rdx,1) // [nf_defrag_ipv4][b3]
    8.08 :    ba:     jne    dc <ipv4_conntrack_defrag+0x6c> // [nf_defrag_ipv4][ba]
    0.00 :    bc:     mov    $0x1,%eax
    0.00 :    c1:     pop    %rbx
    0.00 :    c2:     pop    %rbp
    0.00 :    c3:     pop    %r12
    0.00 :    c5:     jmp    ca <ipv4_conntrack_defrag+0x5a>
    0.00 :    ca:     cmpw   $0x2,0x10(%rax)
    4.25 :    cf:     jne    9b <ipv4_conntrack_defrag+0x2b> // [nf_defrag_ipv4][cf]
    0.00 :    d1:     cmpb   $0x0,0x328(%rax)
    0.00 :    d8:     jns    9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    da:     jmp    bc <ipv4_conntrack_defrag+0x4c>
    0.00 :    dc:     movzbl (%rsi),%edi
    0.00 :    df:     xor    %edx,%edx
    0.00 :    e1:     cmp    $0x7,%rax
    0.00 :    e5:     jbe    10c <ipv4_conntrack_defrag+0x9c>
    0.00 :    e7:     mov    %rax,%r8
    0.00 :    ea:     and    $0x7,%eax
    0.00 :    ed:     mov    $0x1,%edx
    0.00 :    f2:     and    $0xfffffffffffffff8,%r8
    0.00 :    f6:     cmp    $0x2,%eax
    0.00 :    f9:     seta   %cl
    0.00 :    fc:     movzbl 0xf(%r8),%eax
    0.00 :   101:    shl    %cl,%edx
    0.00 :   103:    and    %eax,%edx
    0.00 :   105:    je     10c <ipv4_conntrack_defrag+0x9c>
    0.00 :   107:    movzwl 0xc(%r8),%edx
    0.00 :   10c:    testb  $0x1,0x7f(%rbx)
    0.00 :   110:    je     133 <ipv4_conntrack_defrag+0xc3>
    0.00 :   112:    mov    0xe0(%rbx),%rcx
    0.00 :   119:    movzbl 0x4(%rcx),%eax
    0.00 :   11d:    shl    $0x3,%eax
    0.00 :   120:    cltq
    0.00 :   122:    add    %rax,%rcx
    0.00 :   125:    je     133 <ipv4_conntrack_defrag+0xc3>
    0.00 :   127:    lea    0x20002(%rdx),%ebp
    0.00 :   12d:    testb  $0x2,0x1(%rcx)
    0.00 :   131:    jne    144 <ipv4_conntrack_defrag+0xd4>
    0.00 :   133:    lea    0x2(%rdx),%eax
    0.00 :   136:    add    $0x10002,%edx
    0.00 :   13c:    test   %dil,%dil
    0.00 :   13f:    cmovne %edx,%eax
    0.00 :   142:    mov    %eax,%ebp
    0.00 :   144:    mov    $0x200,%edi
    0.00 :   149:    mov    0x20(%rsi),%r12
    0.00 :   14d:    call   152 <ipv4_conntrack_defrag+0xe2>
    0.00 :   152:    mov    %ebp,%edx
    0.00 :   154:    mov    %rbx,%rsi
    0.00 :   157:    mov    %r12,%rdi
    0.00 :   15a:    call   15f <ipv4_conntrack_defrag+0xef>
    0.00 :   15f:    mov    $0x200,%esi
    0.00 :   164:    mov    $0x0,%rdi
    0.00 :   16b:    mov    %eax,%ebp
    0.00 :   16d:    call   172 <ipv4_conntrack_defrag+0x102>
    0.00 :   172:    mov    $0x2,%eax
    0.00 :   177:    test   %ebp,%ebp
    0.00 :   179:    jne    c1 <ipv4_conntrack_defrag+0x51>
    0.00 :   17f:    orb    $0x8,0x80(%rbx)
    0.00 :   186:    jmp    bc <ipv4_conntrack_defrag+0x4c>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   38.21 libpq.so.private14-5.14[27913]
   33.56 libpq.so.private14-5.14[278f0]
   21.53 libpq.so.private14-5.14[278fc]
    6.70 libpq.so.private14-5.14[278f4]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (27 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000278f0 <resetPQExpBuffer@@Base>:
   33.56 :   278f0:  endbr64 // libpq.so.private14-5.14[278f0]
    6.70 :   278f4:  test   %rdi,%rdi // libpq.so.private14-5.14[278f4]
    0.00 :   278f7:  je     27918 <resetPQExpBuffer@@Base+0x28>
    0.00 :   278f9:  mov    (%rdi),%rax
   21.53 :   278fc:  lea    0x1f133(%rip),%rdx        # 46a36 <PQencryptPasswordConn@@Base+0x190b6> // libpq.so.private14-5.14[278fc]
    0.00 :   27903:  cmp    %rdx,%rax
    0.00 :   27906:  je     27920 <resetPQExpBuffer@@Base+0x30>
    0.00 :   27908:  movq   $0x0,0x8(%rdi)
    0.00 :   27910:  movb   $0x0,(%rax)
   38.21 :   27913:  ret // libpq.so.private14-5.14[27913]
    0.00 :   27914:  nopl   0x0(%rax)
    0.00 :   27918:  ret
    0.00 :   27919:  nopl   0x0(%rax)
    0.00 :   27920:  jmp    c260 <initPQExpBuffer@plt>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   19.98 libc.so.6[999f2]
   11.80 libc.so.6[99a18]
    8.39 libc.so.6[9a0ea]
    8.29 libc.so.6[9a51e]
    5.47 libc.so.6[99b7e]
    5.32 libc.so.6[9a4e9]
    4.74 libc.so.6[9a24f]
    4.39 libc.so.6[99c22]
    4.25 libc.so.6[9a232]
    3.98 libc.so.6[99cb4]
    3.73 libc.so.6[99b00]
    3.68 libc.so.6[99779]
    3.57 libc.so.6[99760]
    3.51 libc.so.6[99a0b]
    3.23 libc.so.6[99e85]
    2.83 libc.so.6[99eaa]
    2.83 libc.so.6[99925]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (27 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000099760 <_int_malloc>:
         : 6     _int_malloc():
    3.57 :   99760:  test   %rsi,%rsi // libc.so.6[99760]
    0.00 :   99763:  js     99d58 <_int_malloc+0x5f8>
    0.00 :   99769:  push   %r15
    0.00 :   9976b:  push   %r14
    0.00 :   9976d:  push   %r13
    0.00 :   9976f:  push   %r12
    0.00 :   99771:  mov    %rsi,%r12
    0.00 :   99774:  push   %rbp
    0.00 :   99775:  mov    %rdi,%rbp
    0.00 :   99778:  push   %rbx
    3.68 :   99779:  lea    0x17(%rsi),%rbx // libc.so.6[99779]
    0.00 :   9977d:  sub    $0x28,%rsp
    0.00 :   99781:  cmp    $0x1f,%rbx
    0.00 :   99785:  jbe    99b50 <_int_malloc+0x3f0>
    0.00 :   9978b:  and    $0xfffffffffffffff0,%rbx
    0.00 :   9978f:  test   %rdi,%rdi
    0.00 :   99792:  je     99d75 <_int_malloc+0x615>
    0.00 :   99798:  cmp    %rbx,0x140d21(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   9979f:  jb     99918 <_int_malloc+0x1b8>
    0.00 :   997a5:  mov    %ebx,%r13d
    0.00 :   997a8:  shr    $0x4,%r13d
    0.00 :   997ac:  lea    -0x2(%r13),%eax
    0.00 :   997b0:  mov    %r13d,%esi
    0.00 :   997b3:  lea    0x0(%rbp,%rax,8),%r8
    0.00 :   997b8:  shl    $0x3,%rsi
    0.00 :   997bc:  mov    0x10(%r8),%rdx
    0.00 :   997c0:  test   %rdx,%rdx
    0.00 :   997c3:  je     99cb4 <_int_malloc+0x554>
    0.00 :   997c9:  test   $0xf,%dl
    0.00 :   997cc:  jne    9a078 <_int_malloc+0x918>
    0.00 :   997d2:  add    %rbp,%rsi
    0.00 :   997d5:  cmpb   $0x0,0x141e1c(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   997dc:  je     998f8 <_int_malloc+0x198>
    0.00 :   997e2:  lea    0x10(%rdx),%rcx
    0.00 :   997e6:  mov    %rcx,%rax
    0.00 :   997e9:  shr    $0xc,%rax
    0.00 :   997ed:  xor    0x10(%rdx),%rax
    0.00 :   997f1:  mov    %rax,0x10(%r8)
    0.00 :   997f5:  mov    0x8(%rdx),%rax
    0.00 :   997f9:  shr    $0x4,%eax
    0.00 :   997fc:  cmp    %r13d,%eax
    0.00 :   997ff:  jne    99ff0 <_int_malloc+0x890>
    0.00 :   99805:  mov    0x13959c(%rip),%r14        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9980c:  sub    $0x11,%rbx
    0.00 :   99810:  shr    $0x4,%rbx
    0.00 :   99814:  mov    %fs:(%r14),%rax
    0.00 :   99818:  test   %rax,%rax
    0.00 :   9981b:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   99821:  cmp    0x139ba0(%rip),%rbx        # 1d33c8 <mp_+0x68>
    0.00 :   99828:  jae    99d20 <_int_malloc+0x5c0>
    0.00 :   9982e:  movzwl (%rax,%rbx,2),%eax
    0.00 :   99832:  cmp    0x139b9f(%rip),%rax        # 1d33d8 <mp_+0x78>
    0.00 :   99839:  lea    0x10(%rbx),%r11
    0.00 :   9983d:  jb     99896 <_int_malloc+0x136>
    0.00 :   9983f:  jmp    99d20 <_int_malloc+0x5c0>
    0.00 :   99844:  nopl   0x0(%rax)
    0.00 :   99848:  lea    0x10(%rdx),%r10
    0.00 :   9984c:  mov    0x10(%rdx),%rax
    0.00 :   99850:  mov    %r10,%rdi
    0.00 :   99853:  shr    $0xc,%rdi
    0.00 :   99857:  xor    %rdi,%rax
    0.00 :   9985a:  mov    %rax,0x10(%r8)
    0.00 :   9985e:  mov    0x140c33(%rip),%rax        # 1da498 <tcache_key>
    0.00 :   99865:  mov    %rax,0x18(%rdx)
    0.00 :   99869:  mov    %fs:(%r14),%r9
    0.00 :   9986d:  movzwl (%r9,%rbx,2),%eax
    0.00 :   99872:  xor    (%r9,%r11,8),%rdi
    0.00 :   99876:  mov    %rdi,0x10(%rdx)
    0.00 :   9987a:  add    $0x1,%eax
    0.00 :   9987d:  mov    %r10,(%r9,%r11,8)
    0.00 :   99881:  mov    %ax,(%r9,%rbx,2)
    0.00 :   99886:  movzwl %ax,%eax
    0.00 :   99889:  cmp    0x139b48(%rip),%rax        # 1d33d8 <mp_+0x78>
    0.00 :   99890:  jae    99d20 <_int_malloc+0x5c0>
    0.00 :   99896:  mov    0x10(%r8),%rdx
    0.00 :   9989a:  test   %rdx,%rdx
    0.00 :   9989d:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   998a3:  test   $0xf,%dl
    0.00 :   998a6:  jne    99f40 <_int_malloc+0x7e0>
    0.00 :   998ac:  cmpb   $0x0,0x141d45(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   998b3:  jne    99848 <_int_malloc+0xe8>
    0.00 :   998b5:  jmp    99c70 <_int_malloc+0x510>
    0.00 :   998ba:  nopw   0x0(%rax,%rax,1)
    0.00 :   998c0:  test   $0xf,%dil
    0.00 :   998c4:  jne    9a000 <_int_malloc+0x8a0>
    0.00 :   998ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   998d0:  mov    %rdx,%rax
    0.00 :   998d3:  cmpl   $0x0,%fs:0x18
    0.00 :   998dc:  je     998df <_int_malloc+0x17f>
    0.00 :   998de:  lock cmpxchg %rdi,(%rsi)
    0.00 :   998e3:  cmp    %rdx,%rax
    0.00 :   998e6:  je     997f5 <_int_malloc+0x95>
    0.00 :   998ec:  test   %rax,%rax
    0.00 :   998ef:  je     9a088 <_int_malloc+0x928>
    0.00 :   998f5:  mov    %rax,%rdx
    0.00 :   998f8:  lea    0x10(%rdx),%rcx
    0.00 :   998fc:  mov    0x10(%rdx),%rax
    0.00 :   99900:  mov    %rcx,%r9
    0.00 :   99903:  shr    $0xc,%r9
    0.00 :   99907:  mov    %r9,%rdi
    0.00 :   9990a:  xor    %rax,%rdi
    0.00 :   9990d:  cmp    %rax,%r9
    0.00 :   99910:  je     998d0 <_int_malloc+0x170>
    0.00 :   99912:  jmp    998c0 <_int_malloc+0x160>
    0.00 :   99914:  nopl   0x0(%rax)
    0.00 :   99918:  cmp    $0x3ff,%rbx
    0.00 :   9991f:  jbe    9a088 <_int_malloc+0x928>
    2.83 :   99925:  mov    %rbx,%r13 // libc.so.6[99925]
    0.00 :   99928:  shr    $0x6,%r13
    0.00 :   9992c:  add    $0x30,%r13d
    0.00 :   99930:  cmp    $0xc3f,%rbx
    0.00 :   99937:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99939:  mov    %rbx,%r13
    0.00 :   9993c:  shr    $0x9,%r13
    0.00 :   99940:  add    $0x5b,%r13d
    0.00 :   99944:  cmp    $0x29ff,%rbx
    0.00 :   9994b:  jbe    99990 <_int_malloc+0x230>
    0.00 :   9994d:  mov    %rbx,%r13
    0.00 :   99950:  shr    $0xc,%r13
    0.00 :   99954:  add    $0x6e,%r13d
    0.00 :   99958:  cmp    $0xafff,%rbx
    0.00 :   9995f:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99961:  mov    %rbx,%r13
    0.00 :   99964:  shr    $0xf,%r13
    0.00 :   99968:  add    $0x77,%r13d
    0.00 :   9996c:  cmp    $0x27fff,%rbx
    0.00 :   99973:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99975:  mov    %rbx,%r13
    0.00 :   99978:  mov    $0x2,%eax
    0.00 :   9997d:  shr    $0x12,%r13
    0.00 :   99981:  cmp    %rax,%r13
    0.00 :   99984:  cmova  %rax,%r13
    0.00 :   99988:  add    $0x7c,%r13d
    0.00 :   9998c:  nopl   0x0(%rax)
    0.00 :   99990:  mov    0x8(%rbp),%eax
    0.00 :   99993:  test   %eax,%eax
    0.00 :   99995:  jne    99cc8 <_int_malloc+0x568>
    0.00 :   9999b:  mov    0x139406(%rip),%r14        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   999a2:  lea    -0x11(%rbx),%rax
    0.00 :   999a6:  xor    %r9d,%r9d
    0.00 :   999a9:  shr    $0x4,%rax
    0.00 :   999ad:  cmpq   $0x0,%fs:(%r14)
    0.00 :   999b2:  mov    %rax,%r11
    0.00 :   999b5:  je     999c2 <_int_malloc+0x262>
    0.00 :   999b7:  cmp    0x139a0a(%rip),%rax        # 1d33c8 <mp_+0x68>
    0.00 :   999be:  cmovb  %rbx,%r9
    0.00 :   999c2:  movq   $0x0,(%rsp)
    0.00 :   999ca:  lea    0x60(%rbp),%r15
    0.00 :   999ce:  mov    %r12,%r8
    0.00 :   999d1:  mov    %r13d,0x10(%rsp)
    0.00 :   999d6:  mov    0x78(%rbp),%rdx
    0.00 :   999da:  cmp    %r15,%rdx
    0.00 :   999dd:  je     99e6c <_int_malloc+0x70c>
    0.00 :   999e3:  mov    %r8,0x8(%rsp)
    0.00 :   999e8:  xor    %r12d,%r12d
    0.00 :   999eb:  xor    %r10d,%r10d
    0.00 :   999ee:  mov    0x8(%rdx),%rax
   19.98 :   999f2:  and    $0xfffffffffffffff8,%rax // libc.so.6[999f2]
    0.00 :   999f6:  lea    (%rdx,%rax,1),%rsi
    0.00 :   999fa:  cmp    $0x10,%rax
    0.00 :   999fe:  jbe    99d48 <_int_malloc+0x5e8>
    0.00 :   99a04:  mov    0x888(%rbp),%rdi
    3.51 :   99a0b:  cmp    %rax,%rdi // libc.so.6[99a0b]
    0.00 :   99a0e:  jb     99d48 <_int_malloc+0x5e8>
    0.00 :   99a14:  mov    0x8(%rsi),%rcx
   11.80 :   99a18:  cmp    %rcx,%rdi // libc.so.6[99a18]
    0.00 :   99a1b:  jb     99d90 <_int_malloc+0x630>
    0.00 :   99a21:  cmp    $0xf,%rcx
    0.00 :   99a25:  jbe    99d90 <_int_malloc+0x630>
    0.00 :   99a2b:  mov    (%rsi),%rdi
    0.00 :   99a2e:  and    $0xfffffffffffffff8,%rdi
    0.00 :   99a32:  cmp    %rax,%rdi
    0.00 :   99a35:  jne    9a010 <_int_malloc+0x8b0>
    0.00 :   99a3b:  mov    0x18(%rdx),%rdi
    0.00 :   99a3f:  cmp    0x10(%rdi),%rdx
    0.00 :   99a43:  jne    99f30 <_int_malloc+0x7d0>
    0.00 :   99a49:  cmp    %r15,0x10(%rdx)
    0.00 :   99a4d:  jne    99f30 <_int_malloc+0x7d0>
    0.00 :   99a53:  test   $0x1,%cl
    0.00 :   99a56:  jne    9a098 <_int_malloc+0x938>
    0.00 :   99a5c:  cmp    %r15,%rdi
    0.00 :   99a5f:  jne    99a6e <_int_malloc+0x30e>
    0.00 :   99a61:  cmp    $0x3ff,%rbx
    0.00 :   99a68:  jbe    99fa0 <_int_malloc+0x840>
    0.00 :   99a6e:  mov    %rdi,0x78(%rbp)
    0.00 :   99a72:  mov    %r15,0x10(%rdi)
    0.00 :   99a76:  cmp    %rax,%rbx
    0.00 :   99a79:  je     99cd8 <_int_malloc+0x578>
    0.00 :   99a7f:  cmp    $0x3ff,%rax
    0.00 :   99a85:  jbe    99da0 <_int_malloc+0x640>
    0.00 :   99a8b:  mov    %rax,%rcx
    0.00 :   99a8e:  shr    $0x6,%rcx
    0.00 :   99a92:  cmp    $0xc3f,%rax
    0.00 :   99a98:  jbe    99fe0 <_int_malloc+0x880>
    0.00 :   99a9e:  mov    %rax,%rcx
    0.00 :   99aa1:  shr    $0x9,%rcx
    0.00 :   99aa5:  lea    0x5b(%rcx),%r13d
    0.00 :   99aa9:  cmp    $0x29ff,%rax
    0.00 :   99aaf:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ab1:  mov    %rax,%rcx
    0.00 :   99ab4:  shr    $0xc,%rcx
    0.00 :   99ab8:  lea    0x6e(%rcx),%r13d
    0.00 :   99abc:  cmp    $0xafff,%rax
    0.00 :   99ac2:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ac4:  mov    %rax,%rcx
    0.00 :   99ac7:  shr    $0xf,%rcx
    0.00 :   99acb:  lea    0x77(%rcx),%r13d
    0.00 :   99acf:  cmp    $0x27fff,%rax
    0.00 :   99ad5:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ad7:  mov    %rax,%rcx
    0.00 :   99ada:  mov    $0x2,%esi
    0.00 :   99adf:  shr    $0x12,%rcx
    0.00 :   99ae3:  cmp    %rsi,%rcx
    0.00 :   99ae6:  cmova  %rsi,%rcx
    0.00 :   99aea:  lea    0x7c(%rcx),%r13d
    0.00 :   99aee:  xchg   %ax,%ax
    0.00 :   99af0:  lea    0xc(%r13,%r13,1),%ecx
    0.00 :   99af5:  movslq %ecx,%rcx
    0.00 :   99af8:  lea    0x0(%rbp,%rcx,8),%rdi
    0.00 :   99afd:  mov    (%rdi),%rcx
    3.73 :   99b00:  lea    -0x10(%rdi),%rsi // libc.so.6[99b00]
    0.00 :   99b04:  cmp    %rcx,%rsi
    0.00 :   99b07:  je     9a0a8 <_int_malloc+0x948>
    0.00 :   99b0d:  mov    0x8(%rdi),%rdi
    0.00 :   99b11:  or     $0x1,%rax
    0.00 :   99b15:  mov    0x8(%rdi),%r8
    0.00 :   99b19:  test   $0x4,%r8b
    0.00 :   99b1d:  jne    9a621 <_int_malloc+0xec1>
    0.00 :   99b23:  cmp    %r8,%rax
    0.00 :   99b26:  jae    9a164 <_int_malloc+0xa04>
    0.00 :   99b2c:  mov    0x28(%rcx),%rax
    0.00 :   99b30:  movq   %rcx,%xmm0
    0.00 :   99b35:  movq   %rax,%xmm1
    0.00 :   99b3a:  punpcklqdq %xmm1,%xmm0
    0.00 :   99b3e:  movups %xmm0,0x20(%rdx)
    0.00 :   99b42:  mov    %rdx,0x20(%rax)
    0.00 :   99b46:  mov    %rdx,0x28(%rcx)
    0.00 :   99b4a:  jmp    99dba <_int_malloc+0x65a>
    0.00 :   99b4f:  nop
    0.00 :   99b50:  test   %rdi,%rdi
    0.00 :   99b53:  je     99d70 <_int_malloc+0x610>
    0.00 :   99b59:  cmpq   $0x1f,0x14095f(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   99b61:  ja     99c90 <_int_malloc+0x530>
    0.00 :   99b67:  mov    $0x80,%eax
    0.00 :   99b6c:  mov    $0x2,%r13d
    0.00 :   99b72:  mov    $0x20,%ebx
    0.00 :   99b77:  add    %rbp,%rax
    0.00 :   99b7a:  mov    0x8(%rax),%rcx
    5.47 :   99b7e:  lea    -0x10(%rax),%rsi // libc.so.6[99b7e]
    0.00 :   99b82:  cmp    %rcx,%rsi
    0.00 :   99b85:  je     9999b <_int_malloc+0x23b>
    0.00 :   99b8b:  mov    0x18(%rcx),%rdx
    0.00 :   99b8f:  cmp    %rcx,0x10(%rdx)
    0.00 :   99b93:  jne    9a158 <_int_malloc+0x9f8>
    0.00 :   99b99:  lea    0x13a0e0(%rip),%r11        # 1d3c80 <main_arena>
    0.00 :   99ba0:  orq    $0x1,0x8(%rcx,%rbx,1)
    0.00 :   99ba6:  mov    %rdx,0x8(%rax)
    0.00 :   99baa:  mov    %rsi,0x10(%rdx)
    0.00 :   99bae:  cmp    %r11,%rbp
    0.00 :   99bb1:  je     99bb8 <_int_malloc+0x458>
    0.00 :   99bb3:  orq    $0x4,0x8(%rcx)
    0.00 :   99bb8:  mov    0x1391e9(%rip),%rdx        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   99bbf:  mov    %fs:(%rdx),%r10
    0.00 :   99bc3:  test   %r10,%r10
    0.00 :   99bc6:  je     99c10 <_int_malloc+0x4b0>
    0.00 :   99bc8:  lea    -0x11(%rbx),%r9
    0.00 :   99bcc:  shr    $0x4,%r9
    0.00 :   99bd0:  cmp    0x1397f1(%rip),%r9        # 1d33c8 <mp_+0x68>
    0.00 :   99bd7:  jae    99c10 <_int_malloc+0x4b0>
    0.00 :   99bd9:  mov    0x1397f8(%rip),%r8        # 1d33d8 <mp_+0x78>
    0.00 :   99be0:  movzwl (%r10,%r9,2),%r13d
    0.00 :   99be5:  movzwl %r13w,%edi
    0.00 :   99be9:  jmp    99c02 <_int_malloc+0x4a2>
    0.00 :   99beb:  nopl   0x0(%rax,%rax,1)
    0.00 :   99bf0:  mov    0x8(%rax),%rdx
    0.00 :   99bf4:  cmp    %rdx,%rsi
    0.00 :   99bf7:  je     99c10 <_int_malloc+0x4b0>
    0.00 :   99bf9:  test   %rdx,%rdx
    0.00 :   99bfc:  jne    9a020 <_int_malloc+0x8c0>
    0.00 :   99c02:  cmp    %r8,%rdi
    0.00 :   99c05:  jb     99bf0 <_int_malloc+0x490>
    0.00 :   99c07:  nopw   0x0(%rax,%rax,1)
    0.00 :   99c10:  mov    0x1408a6(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   99c16:  add    $0x10,%rcx
    0.00 :   99c1a:  test   %esi,%esi
    0.00 :   99c1c:  jne    99d2e <_int_malloc+0x5ce>
    4.39 :   99c22:  add    $0x28,%rsp // libc.so.6[99c22]
    0.00 :   99c26:  mov    %rcx,%rax
    0.00 :   99c29:  pop    %rbx
    0.00 :   99c2a:  pop    %rbp
    0.00 :   99c2b:  pop    %r12
    0.00 :   99c2d:  pop    %r13
    0.00 :   99c2f:  pop    %r14
    0.00 :   99c31:  pop    %r15
    0.00 :   99c33:  ret
    0.00 :   99c34:  nopl   0x0(%rax)
    0.00 :   99c38:  test   $0xf,%r9b
    0.00 :   99c3c:  jne    9a000 <_int_malloc+0x8a0>
    0.00 :   99c42:  nopw   0x0(%rax,%rax,1)
    0.00 :   99c48:  mov    %rdx,%rax
    0.00 :   99c4b:  cmpl   $0x0,%fs:0x18
    0.00 :   99c54:  je     99c57 <_int_malloc+0x4f7>
    0.00 :   99c56:  lock cmpxchg %r9,(%rsi)
    0.00 :   99c5b:  cmp    %rdx,%rax
    0.00 :   99c5e:  je     9985e <_int_malloc+0xfe>
    0.00 :   99c64:  test   %rax,%rax
    0.00 :   99c67:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   99c6d:  mov    %rax,%rdx
    0.00 :   99c70:  lea    0x10(%rdx),%r10
    0.00 :   99c74:  mov    0x10(%rdx),%rax
    0.00 :   99c78:  mov    %r10,%rdi
    0.00 :   99c7b:  shr    $0xc,%rdi
    0.00 :   99c7f:  mov    %rdi,%r9
    0.00 :   99c82:  xor    %rax,%r9
    0.00 :   99c85:  cmp    %rax,%rdi
    0.00 :   99c88:  je     99c48 <_int_malloc+0x4e8>
    0.00 :   99c8a:  jmp    99c38 <_int_malloc+0x4d8>
    0.00 :   99c8c:  nopl   0x0(%rax)
    0.00 :   99c90:  xor    %eax,%eax
    0.00 :   99c92:  mov    $0x10,%esi
    0.00 :   99c97:  mov    $0x2,%r13d
    0.00 :   99c9d:  mov    $0x20,%ebx
    0.00 :   99ca2:  lea    0x0(%rbp,%rax,8),%r8
    0.00 :   99ca7:  mov    0x10(%r8),%rdx
    0.00 :   99cab:  test   %rdx,%rdx
    0.00 :   99cae:  jne    997c9 <_int_malloc+0x69>
    3.98 :   99cb4:  lea    0xc(%r13,%r13,1),%eax // libc.so.6[99cb4]
    0.00 :   99cb9:  shl    $0x3,%rax
    0.00 :   99cbd:  jmp    99b77 <_int_malloc+0x417>
    0.00 :   99cc2:  nopw   0x0(%rax,%rax,1)
    0.00 :   99cc8:  mov    %rbp,%rdi
    0.00 :   99ccb:  call   97680 <malloc_consolidate>
    0.00 :   99cd0:  jmp    9999b <_int_malloc+0x23b>
    0.00 :   99cd5:  nopl   (%rax)
    0.00 :   99cd8:  or     $0x1,%rcx
    0.00 :   99cdc:  lea    0x139f9d(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   99ce3:  mov    %rcx,0x8(%rsi)
    0.00 :   99ce7:  cmp    %rax,%rbp
    0.00 :   99cea:  je     99cf1 <_int_malloc+0x591>
    0.00 :   99cec:  orq    $0x4,0x8(%rdx)
    0.00 :   99cf1:  lea    0x10(%rdx),%rcx
    0.00 :   99cf5:  test   %r9,%r9
    0.00 :   99cf8:  je     99d13 <_int_malloc+0x5b3>
    0.00 :   99cfa:  mov    %fs:(%r14),%rax
    0.00 :   99cfe:  movzwl (%rax,%r11,2),%edi
    0.00 :   99d03:  cmp    0x1396ce(%rip),%rdi        # 1d33d8 <mp_+0x78>
    0.00 :   99d0a:  mov    %rdi,%rsi
    0.00 :   99d0d:  jb     99f50 <_int_malloc+0x7f0>
    0.00 :   99d13:  mov    0x8(%rsp),%r12
    0.00 :   99d18:  nopl   0x0(%rax,%rax,1)
    0.00 :   99d20:  mov    0x140796(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   99d26:  test   %esi,%esi
    0.00 :   99d28:  je     99c22 <_int_malloc+0x4c2>
    0.00 :   99d2e:  mov    %rcx,%rdi
    0.00 :   99d31:  xor    $0xff,%sil
    0.00 :   99d35:  mov    %r12,%rdx
    0.00 :   99d38:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   99d3d:  mov    %rax,%rcx
    0.00 :   99d40:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99d45:  nopl   (%rax)
    0.00 :   99d48:  lea    0x103769(%rip),%rdi        # 19d4b8 <aliasfile.0+0x1a70>
    0.00 :   99d4f:  call   96b80 <malloc_printerr>
    0.00 :   99d54:  nopl   0x0(%rax)
    0.00 :   99d58:  mov    0x1390b1(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   99d5f:  movl   $0xc,%fs:(%rax)
    0.00 :   99d66:  xor    %eax,%eax
    0.00 :   99d68:  ret
    0.00 :   99d69:  nopl   0x0(%rax)
    0.00 :   99d70:  mov    $0x20,%ebx
    0.00 :   99d75:  xor    %esi,%esi
    0.00 :   99d77:  mov    %rbx,%rdi
    0.00 :   99d7a:  call   98f10 <sysmalloc>
    0.00 :   99d7f:  mov    %rax,%rcx
    0.00 :   99d82:  test   %rax,%rax
    0.00 :   99d85:  jne    99d20 <_int_malloc+0x5c0>
    0.00 :   99d87:  xor    %ecx,%ecx
    0.00 :   99d89:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99d8e:  xchg   %ax,%ax
    0.00 :   99d90:  lea    0x103749(%rip),%rdi        # 19d4e0 <aliasfile.0+0x1a98>
    0.00 :   99d97:  call   96b80 <malloc_printerr>
    0.00 :   99d9c:  nopl   0x0(%rax)
    0.00 :   99da0:  mov    %eax,%r13d
    0.00 :   99da3:  shr    $0x4,%r13d
    0.00 :   99da7:  lea    0xc(%r13,%r13,1),%eax
    0.00 :   99dac:  cltq
    0.00 :   99dae:  lea    0x0(%rbp,%rax,8),%rax
    0.00 :   99db3:  mov    (%rax),%rsi
    0.00 :   99db6:  lea    -0x10(%rax),%rdi
    0.00 :   99dba:  mov    %r13d,%eax
    0.00 :   99dbd:  mov    %r13d,%ecx
    0.00 :   99dc0:  mov    $0x1,%r8d
    0.00 :   99dc6:  addq   $0x1,(%rsp)
    0.00 :   99dcb:  sar    $0x5,%eax
    0.00 :   99dce:  shl    %cl,%r8d
    0.00 :   99dd1:  mov    (%rsp),%rcx
    0.00 :   99dd5:  cltq
    0.00 :   99dd7:  or     %r8d,0x860(%rbp,%rax,4)
    0.00 :   99ddf:  mov    %rdi,0x18(%rdx)
    0.00 :   99de3:  mov    %rsi,0x10(%rdx)
    0.00 :   99de7:  mov    %rdx,0x18(%rsi)
    0.00 :   99deb:  mov    %rdx,0x10(%rdi)
    0.00 :   99def:  test   %r10d,%r10d
    0.00 :   99df2:  je     99f10 <_int_malloc+0x7b0>
    0.00 :   99df8:  mov    0x1395e1(%rip),%rax        # 1d33e0 <mp_+0x80>
    0.00 :   99dff:  test   %rax,%rax
    0.00 :   99e02:  je     99e40 <_int_malloc+0x6e0>
    0.00 :   99e04:  cmp    %rcx,%rax
    0.00 :   99e07:  jae    99e40 <_int_malloc+0x6e0>
    0.00 :   99e09:  mov    %fs:(%r14),%rax
    0.00 :   99e0d:  lea    0x10(%r11),%rsi
    0.00 :   99e11:  mov    (%rax,%rsi,8),%rcx
    0.00 :   99e15:  test   $0xf,%cl
    0.00 :   99e18:  jne    9a4eb <_int_malloc+0xd8b>
    0.00 :   99e1e:  mov    %rcx,%rdx
    0.00 :   99e21:  shr    $0xc,%rdx
    0.00 :   99e25:  xor    (%rcx),%rdx
    0.00 :   99e28:  mov    %rdx,(%rax,%rsi,8)
    0.00 :   99e2c:  xor    %edx,%edx
    0.00 :   99e2e:  subw   $0x1,(%rax,%r11,2)
    0.00 :   99e34:  mov    %rdx,0x8(%rcx)
    0.00 :   99e38:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99e3d:  nopl   (%rax)
    0.00 :   99e40:  add    $0x1,%r12d
    0.00 :   99e44:  cmp    $0x270f,%r12d
    0.00 :   99e4b:  jg     9a3b8 <_int_malloc+0xc58>
    0.00 :   99e51:  mov    0x78(%rbp),%rdx
    0.00 :   99e55:  cmp    %r15,%rdx
    0.00 :   99e58:  jne    999ee <_int_malloc+0x28e>
    0.00 :   99e5e:  mov    0x8(%rsp),%r8
    0.00 :   99e63:  test   %r10d,%r10d
    0.00 :   99e66:  jne    9a3b8 <_int_malloc+0xc58>
    0.00 :   99e6c:  cmp    $0x3ff,%rbx
    0.00 :   99e73:  jbe    99e98 <_int_malloc+0x738>
    0.00 :   99e75:  mov    0x10(%rsp),%eax
    0.00 :   99e79:  lea    0xc(%rax,%rax,1),%eax
    0.00 :   99e7d:  lea    0x0(%rbp,%rax,8),%rax
    0.00 :   99e82:  mov    (%rax),%rdx
    3.23 :   99e85:  lea    -0x10(%rax),%rcx // libc.so.6[99e85]
    0.00 :   99e89:  cmp    %rcx,%rdx
    0.00 :   99e8c:  je     99e98 <_int_malloc+0x738>
    0.00 :   99e8e:  cmp    %rbx,0x8(%rdx)
    0.00 :   99e92:  jae    9a51e <_int_malloc+0xdbe>
    0.00 :   99e98:  mov    0x10(%rsp),%eax
    0.00 :   99e9c:  lea    0x1(%rax),%ecx
    0.00 :   99e9f:  lea    0xe(%rax,%rax,1),%eax
    0.00 :   99ea3:  mov    %ecx,%edi
    0.00 :   99ea5:  lea    -0x10(%rbp,%rax,8),%rdx
    2.83 :   99eaa:  shr    $0x5,%edi // libc.so.6[99eaa]
    0.00 :   99ead:  mov    %edi,%eax
    0.00 :   99eaf:  mov    0x860(%rbp,%rax,4),%esi
    0.00 :   99eb6:  mov    $0x1,%eax
    0.00 :   99ebb:  shl    %cl,%eax
    0.00 :   99ebd:  nopl   (%rax)
    0.00 :   99ec0:  cmp    %eax,%esi
    0.00 :   99ec2:  jb     9a0c0 <_int_malloc+0x960>
    0.00 :   99ec8:  test   %eax,%eax
    0.00 :   99eca:  jne    99ee4 <_int_malloc+0x784>
    0.00 :   99ecc:  jmp    9a0c0 <_int_malloc+0x960>
    0.00 :   99ed1:  nopl   0x0(%rax)
    0.00 :   99ed8:  add    $0x10,%rdx
    0.00 :   99edc:  add    %eax,%eax
    0.00 :   99ede:  je     9a37a <_int_malloc+0xc1a>
    0.00 :   99ee4:  test   %esi,%eax
    0.00 :   99ee6:  je     99ed8 <_int_malloc+0x778>
    0.00 :   99ee8:  mov    0x18(%rdx),%r13
    0.00 :   99eec:  cmp    %r13,%rdx
    0.00 :   99eef:  jne    9a22e <_int_malloc+0xace>
    0.00 :   99ef5:  mov    %eax,%ecx
    0.00 :   99ef7:  add    $0x10,%rdx
    0.00 :   99efb:  add    %eax,%eax
    0.00 :   99efd:  not    %ecx
    0.00 :   99eff:  and    %ecx,%esi
    0.00 :   99f01:  mov    %edi,%ecx
    0.00 :   99f03:  mov    %esi,0x860(%rbp,%rcx,4)
    0.00 :   99f0a:  jmp    99ec0 <_int_malloc+0x760>
    0.00 :   99f0c:  nopl   0x0(%rax)
    0.00 :   99f10:  add    $0x1,%r12d
    0.00 :   99f14:  cmp    $0x270f,%r12d
    0.00 :   99f1b:  jle    99e51 <_int_malloc+0x6f1>
    0.00 :   99f21:  mov    0x8(%rsp),%r8
    0.00 :   99f26:  jmp    99e6c <_int_malloc+0x70c>
    0.00 :   99f2b:  nopl   0x0(%rax,%rax,1)
    0.00 :   99f30:  lea    0x103609(%rip),%rdi        # 19d540 <aliasfile.0+0x1af8>
    0.00 :   99f37:  call   96b80 <malloc_printerr>
    0.00 :   99f3c:  nopl   0x0(%rax)
    0.00 :   99f40:  lea    0x103511(%rip),%rdi        # 19d458 <aliasfile.0+0x1a10>
    0.00 :   99f47:  call   96b80 <malloc_printerr>
    0.00 :   99f4c:  nopl   0x0(%rax)
    0.00 :   99f50:  mov    0x140541(%rip),%rdi        # 1da498 <tcache_key>
    0.00 :   99f57:  lea    0x10(%r11),%r10
    0.00 :   99f5b:  add    $0x1,%esi
    0.00 :   99f5e:  mov    %rdi,0x18(%rdx)
    0.00 :   99f62:  mov    %rcx,%rdi
    0.00 :   99f65:  shr    $0xc,%rdi
    0.00 :   99f69:  xor    0x80(%rax,%r11,8),%rdi
    0.00 :   99f71:  mov    %rdi,0x10(%rdx)
    0.00 :   99f75:  mov    0x78(%rbp),%rdx
    0.00 :   99f79:  mov    %rcx,(%rax,%r10,8)
    0.00 :   99f7d:  mov    %si,(%rax,%r11,2)
    0.00 :   99f82:  cmp    %rdx,%r15
    0.00 :   99f85:  je     9a3bc <_int_malloc+0xc5c>
    0.00 :   99f8b:  mov    $0x1,%r10d
    0.00 :   99f91:  jmp    999ee <_int_malloc+0x28e>
    0.00 :   99f96:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   99fa0:  cmp    0x68(%rbp),%rdx
    0.00 :   99fa4:  jne    99a6e <_int_malloc+0x30e>
    0.00 :   99faa:  lea    0x20(%rbx),%r13
    0.00 :   99fae:  cmp    %rax,%r13
    0.00 :   99fb1:  jb     9a42d <_int_malloc+0xccd>
    0.00 :   99fb7:  mov    %rdi,0x78(%rbp)
    0.00 :   99fbb:  mov    %r15,0x10(%rdi)
    0.00 :   99fbf:  cmp    %rax,%rbx
    0.00 :   99fc2:  je     99cd8 <_int_malloc+0x578>
    0.00 :   99fc8:  cmp    $0x3ff,%rax
    0.00 :   99fce:  jbe    99da0 <_int_malloc+0x640>
    0.00 :   99fd4:  mov    $0x10,%ecx
    0.00 :   99fd9:  nopl   0x0(%rax)
    0.00 :   99fe0:  lea    0x30(%rcx),%r13d
    0.00 :   99fe4:  jmp    99af0 <_int_malloc+0x390>
    0.00 :   99fe9:  nopl   0x0(%rax)
    0.00 :   99ff0:  lea    0x103439(%rip),%rdi        # 19d430 <aliasfile.0+0x19e8>
    0.00 :   99ff7:  call   96b80 <malloc_printerr>
    0.00 :   99ffc:  nopl   0x0(%rax)
    0.00 :   9a000:  lea    0x1033f9(%rip),%rdi        # 19d400 <aliasfile.0+0x19b8>
    0.00 :   9a007:  call   96b80 <malloc_printerr>
    0.00 :   9a00c:  nopl   0x0(%rax)
    0.00 :   9a010:  lea    0x1034f1(%rip),%rdi        # 19d508 <aliasfile.0+0x1ac0>
    0.00 :   9a017:  call   96b80 <malloc_printerr>
    0.00 :   9a01c:  nopl   0x0(%rax)
    0.00 :   9a020:  mov    0x18(%rdx),%rdi
    0.00 :   9a024:  orq    $0x1,0x8(%rdx,%rbx,1)
    0.00 :   9a02a:  cmp    %r11,%rbp
    0.00 :   9a02d:  je     9a034 <_int_malloc+0x8d4>
    0.00 :   9a02f:  orq    $0x4,0x8(%rdx)
    0.00 :   9a034:  mov    %rdi,0x8(%rax)
    0.00 :   9a038:  lea    0x10(%rdx),%r14
    0.00 :   9a03c:  add    $0x1,%r13d
    0.00 :   9a040:  mov    %rsi,0x10(%rdi)
    0.00 :   9a044:  mov    0x14044d(%rip),%rdi        # 1da498 <tcache_key>
    0.00 :   9a04b:  mov    %rdi,0x18(%rdx)
    0.00 :   9a04f:  mov    %r14,%rdi
    0.00 :   9a052:  shr    $0xc,%rdi
    0.00 :   9a056:  xor    0x80(%r10,%r9,8),%rdi
    0.00 :   9a05e:  mov    %rdi,0x10(%rdx)
    0.00 :   9a062:  mov    %r14,0x80(%r10,%r9,8)
    0.00 :   9a06a:  mov    %r13w,(%r10,%r9,2)
    0.00 :   9a06f:  jmp    99be5 <_int_malloc+0x485>
    0.00 :   9a074:  nopl   0x0(%rax)
    0.00 :   9a078:  lea    0x103351(%rip),%rdi        # 19d3d0 <aliasfile.0+0x1988>
    0.00 :   9a07f:  call   96b80 <malloc_printerr>
    0.00 :   9a084:  nopl   0x0(%rax)
    0.00 :   9a088:  mov    %ebx,%r13d
    0.00 :   9a08b:  shr    $0x4,%r13d
    0.00 :   9a08f:  jmp    99cb4 <_int_malloc+0x554>
    0.00 :   9a094:  nopl   0x0(%rax)
    0.00 :   9a098:  lea    0x1034d1(%rip),%rdi        # 19d570 <aliasfile.0+0x1b28>
    0.00 :   9a09f:  call   96b80 <malloc_printerr>
    0.00 :   9a0a4:  nopl   0x0(%rax)
    0.00 :   9a0a8:  movq   %rdx,%xmm0
    0.00 :   9a0ad:  mov    %rsi,%rdi
    0.00 :   9a0b0:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a0b4:  movups %xmm0,0x20(%rdx)
    0.00 :   9a0b8:  jmp    99dba <_int_malloc+0x65a>
    0.00 :   9a0bd:  nopl   (%rax)
    0.00 :   9a0c0:  lea    0x1(%rdi),%eax
    0.00 :   9a0c3:  jmp    9a0db <_int_malloc+0x97b>
    0.00 :   9a0c5:  nopl   (%rax)
    0.00 :   9a0c8:  add    $0x1,%rax
    0.00 :   9a0cc:  mov    0x85c(%rbp,%rax,4),%esi
    0.00 :   9a0d3:  test   %esi,%esi
    0.00 :   9a0d5:  jne    9a1f0 <_int_malloc+0xa90>
    0.00 :   9a0db:  mov    %eax,%edi
    0.00 :   9a0dd:  cmp    $0x4,%eax
    0.00 :   9a0e0:  jne    9a0c8 <_int_malloc+0x968>
    0.00 :   9a0e2:  mov    0x60(%rbp),%rcx
    0.00 :   9a0e6:  mov    0x8(%rcx),%rax
    8.39 :   9a0ea:  and    $0xfffffffffffffff8,%rax // libc.so.6[9a0ea]
    0.00 :   9a0ee:  cmp    %rax,0x888(%rbp)
    0.00 :   9a0f5:  jb     9a342 <_int_malloc+0xbe2>
    0.00 :   9a0fb:  lea    0x20(%rbx),%rdx
    0.00 :   9a0ff:  cmp    %rdx,%rax
    0.00 :   9a102:  jae    9a4b0 <_int_malloc+0xd50>
    0.00 :   9a108:  mov    %r11,0x18(%rsp)
    0.00 :   9a10d:  mov    %r9,0x10(%rsp)
    0.00 :   9a112:  mov    0x8(%rbp),%eax
    0.00 :   9a115:  test   %eax,%eax
    0.00 :   9a117:  je     9a4f7 <_int_malloc+0xd97>
    0.00 :   9a11d:  mov    %rbp,%rdi
    0.00 :   9a120:  mov    %r8,0x8(%rsp)
    0.00 :   9a125:  call   97680 <malloc_consolidate>
    0.00 :   9a12a:  mov    0x8(%rsp),%r8
    0.00 :   9a12f:  mov    0x10(%rsp),%r9
    0.00 :   9a134:  cmp    $0x3ff,%rbx
    0.00 :   9a13b:  mov    0x18(%rsp),%r11
    0.00 :   9a140:  ja     9a20d <_int_malloc+0xaad>
    0.00 :   9a146:  mov    %ebx,%eax
    0.00 :   9a148:  shr    $0x4,%eax
    0.00 :   9a14b:  mov    %eax,0x10(%rsp)
    0.00 :   9a14f:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a154:  nopl   0x0(%rax)
    0.00 :   9a158:  lea    0x103329(%rip),%rdi        # 19d488 <aliasfile.0+0x1a40>
    0.00 :   9a15f:  call   96b80 <malloc_printerr>
    0.00 :   9a164:  mov    0x8(%rcx),%rsi
    0.00 :   9a168:  test   $0x4,%sil
    0.00 :   9a16c:  jne    9a40c <_int_malloc+0xcac>
    0.00 :   9a172:  mov    0x8(%rsp),%r8
    0.00 :   9a177:  jmp    9a192 <_int_malloc+0xa32>
    0.00 :   9a179:  nopl   0x0(%rax)
    0.00 :   9a180:  mov    0x20(%rcx),%rcx
    0.00 :   9a184:  mov    0x8(%rcx),%rsi
    0.00 :   9a188:  test   $0x4,%sil
    0.00 :   9a18c:  jne    9a40c <_int_malloc+0xcac>
    0.00 :   9a192:  cmp    %rsi,%rax
    0.00 :   9a195:  jb     9a180 <_int_malloc+0xa20>
    0.00 :   9a197:  mov    %r8,0x8(%rsp)
    0.00 :   9a19c:  je     9a207 <_int_malloc+0xaa7>
    0.00 :   9a19e:  mov    0x28(%rcx),%rax
    0.00 :   9a1a2:  movq   %rcx,%xmm0
    0.00 :   9a1a7:  movq   %rax,%xmm2
    0.00 :   9a1ac:  punpcklqdq %xmm2,%xmm0
    0.00 :   9a1b0:  movups %xmm0,0x20(%rdx)
    0.00 :   9a1b4:  cmp    %rcx,0x20(%rax)
    0.00 :   9a1b8:  jne    9a34e <_int_malloc+0xbee>
    0.00 :   9a1be:  mov    %rdx,0x28(%rcx)
    0.00 :   9a1c2:  mov    0x28(%rdx),%rax
    0.00 :   9a1c6:  mov    %rcx,%rsi
    0.00 :   9a1c9:  mov    %rdx,0x20(%rax)
    0.00 :   9a1cd:  mov    0x18(%rsi),%rdi
    0.00 :   9a1d1:  cmp    %rsi,0x10(%rdi)
    0.00 :   9a1d5:  je     99dba <_int_malloc+0x65a>
    0.00 :   9a1db:  lea    0x1033fe(%rip),%rdi        # 19d5e0 <aliasfile.0+0x1b98>
    0.00 :   9a1e2:  call   96b80 <malloc_printerr>
    0.00 :   9a1e7:  nopw   0x0(%rax,%rax,1)
    0.00 :   9a1f0:  mov    %edi,%eax
    0.00 :   9a1f2:  shl    $0x6,%eax
    0.00 :   9a1f5:  add    $0xc,%eax
    0.00 :   9a1f8:  lea    -0x10(%rbp,%rax,8),%rdx
    0.00 :   9a1fd:  mov    $0x1,%eax
    0.00 :   9a202:  jmp    99ee4 <_int_malloc+0x784>
    0.00 :   9a207:  mov    0x10(%rcx),%rsi
    0.00 :   9a20b:  jmp    9a1cd <_int_malloc+0xa6d>
    0.00 :   9a20d:  mov    %rbx,%r13
    0.00 :   9a210:  shr    $0x6,%r13
    0.00 :   9a214:  cmp    $0xc3f,%rbx
    0.00 :   9a21b:  ja     9a308 <_int_malloc+0xba8>
    0.00 :   9a221:  lea    0x30(%r13),%eax
    0.00 :   9a225:  mov    %eax,0x10(%rsp)
    0.00 :   9a229:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a22e:  mov    0x8(%r13),%r14
    4.25 :   9a232:  mov    %r8,%r12 // libc.so.6[9a232]
    0.00 :   9a235:  and    $0xfffffffffffffff8,%r14
    0.00 :   9a239:  cmp    %rbx,%r14
    0.00 :   9a23c:  jb     9a600 <_int_malloc+0xea0>
    0.00 :   9a242:  mov    %r14,%rcx
    0.00 :   9a245:  mov    %r13,%rdi
    0.00 :   9a248:  sub    %rbx,%rcx
    0.00 :   9a24b:  mov    %rcx,(%rsp)
    4.74 :   9a24f:  call   975a0 <unlink_chunk.constprop.0> // libc.so.6[9a24f]
    0.00 :   9a254:  mov    (%rsp),%rcx
    0.00 :   9a258:  cmp    $0x1f,%rcx
    0.00 :   9a25c:  jbe    9a35a <_int_malloc+0xbfa>
    0.00 :   9a262:  mov    0x70(%rbp),%rax
    0.00 :   9a266:  movq   %r15,%xmm4
    0.00 :   9a26b:  lea    0x0(%r13,%rbx,1),%rdx
    0.00 :   9a270:  movq   %rax,%xmm0
    0.00 :   9a275:  punpcklqdq %xmm4,%xmm0
    0.00 :   9a279:  cmp    %r15,0x18(%rax)
    0.00 :   9a27d:  jne    9a512 <_int_malloc+0xdb2>
    0.00 :   9a283:  movups %xmm0,0x10(%rdx)
    0.00 :   9a287:  mov    %rdx,0x70(%rbp)
    0.00 :   9a28b:  mov    %rdx,0x18(%rax)
    0.00 :   9a28f:  cmp    $0x3ff,%rbx
    0.00 :   9a296:  ja     9a29c <_int_malloc+0xb3c>
    0.00 :   9a298:  mov    %rdx,0x68(%rbp)
    0.00 :   9a29c:  cmp    $0x3ff,%rcx
    0.00 :   9a2a3:  jbe    9a2ad <_int_malloc+0xb4d>
    0.00 :   9a2a5:  pxor   %xmm0,%xmm0
    0.00 :   9a2a9:  movups %xmm0,0x20(%rdx)
    0.00 :   9a2ad:  lea    0x1399cc(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a2b4:  cmp    %rax,%rbp
    0.00 :   9a2b7:  setne  %al
    0.00 :   9a2ba:  movzbl %al,%eax
    0.00 :   9a2bd:  shl    $0x2,%rax
    0.00 :   9a2c1:  or     %rbx,%rax
    0.00 :   9a2c4:  or     $0x1,%rax
    0.00 :   9a2c8:  mov    %rax,0x8(%r13)
    0.00 :   9a2cc:  mov    %rcx,%rax
    0.00 :   9a2cf:  or     $0x1,%rax
    0.00 :   9a2d3:  mov    %rax,0x8(%rdx)
    0.00 :   9a2d7:  mov    %rcx,0x0(%r13,%r14,1)
    0.00 :   9a2dc:  mov    0x1401da(%rip),%eax        # 1da4bc <perturb_byte>
    0.00 :   9a2e2:  lea    0x10(%r13),%rcx
    0.00 :   9a2e6:  test   %eax,%eax
    0.00 :   9a2e8:  je     99c22 <_int_malloc+0x4c2>
    0.00 :   9a2ee:  xor    $0xff,%al
    0.00 :   9a2f0:  mov    %rcx,%rdi
    0.00 :   9a2f3:  mov    %r12,%rdx
    0.00 :   9a2f6:  mov    %eax,%esi
    0.00 :   9a2f8:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   9a2fd:  mov    %rax,%rcx
    0.00 :   9a300:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a305:  nopl   (%rax)
    0.00 :   9a308:  mov    %rbx,%r13
    0.00 :   9a30b:  shr    $0x9,%r13
    0.00 :   9a30f:  cmp    $0x29ff,%rbx
    0.00 :   9a316:  ja     9a325 <_int_malloc+0xbc5>
    0.00 :   9a318:  lea    0x5b(%r13),%eax
    0.00 :   9a31c:  mov    %eax,0x10(%rsp)
    0.00 :   9a320:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a325:  mov    %rbx,%r13
    0.00 :   9a328:  shr    $0xc,%r13
    0.00 :   9a32c:  cmp    $0xafff,%rbx
    0.00 :   9a333:  ja     9a39b <_int_malloc+0xc3b>
    0.00 :   9a335:  lea    0x6e(%r13),%eax
    0.00 :   9a339:  mov    %eax,0x10(%rsp)
    0.00 :   9a33d:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a342:  lea    0xfde10(%rip),%rdi        # 198159 <null+0xf9f>
    0.00 :   9a349:  call   96b80 <malloc_printerr>
    0.00 :   9a34e:  lea    0x10324b(%rip),%rdi        # 19d5a0 <aliasfile.0+0x1b58>
    0.00 :   9a355:  call   96b80 <malloc_printerr>
    0.00 :   9a35a:  lea    0x13991f(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a361:  orq    $0x1,0x8(%r13,%r14,1)
    0.00 :   9a367:  cmp    %rax,%rbp
    0.00 :   9a36a:  je     9a2dc <_int_malloc+0xb7c>
    0.00 :   9a370:  orq    $0x4,0x8(%r13)
    0.00 :   9a375:  jmp    9a2dc <_int_malloc+0xb7c>
    0.00 :   9a37a:  lea    0xfddcf(%rip),%rcx        # 198150 <null+0xf96>
    0.00 :   9a381:  lea    0x103778(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a388:  mov    $0x1,%edi
    0.00 :   9a38d:  xor    %eax,%eax
    0.00 :   9a38f:  lea    0x10273a(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a396:  call   80df0 <__libc_message>
    0.00 :   9a39b:  mov    %rbx,%r13
    0.00 :   9a39e:  shr    $0xf,%r13
    0.00 :   9a3a2:  cmp    $0x27fff,%rbx
    0.00 :   9a3a9:  ja     9a3ec <_int_malloc+0xc8c>
    0.00 :   9a3ab:  lea    0x77(%r13),%eax
    0.00 :   9a3af:  mov    %eax,0x10(%rsp)
    0.00 :   9a3b3:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a3b8:  lea    0x10(%r11),%r10
    0.00 :   9a3bc:  mov    %fs:(%r14),%rax
    0.00 :   9a3c0:  mov    (%rax,%r10,8),%rcx
    0.00 :   9a3c4:  test   $0xf,%cl
    0.00 :   9a3c7:  jne    9a4eb <_int_malloc+0xd8b>
    0.00 :   9a3cd:  mov    %rcx,%rdx
    0.00 :   9a3d0:  shr    $0xc,%rdx
    0.00 :   9a3d4:  xor    (%rcx),%rdx
    0.00 :   9a3d7:  mov    %rdx,(%rax,%r10,8)
    0.00 :   9a3db:  subw   $0x1,(%rax,%r11,2)
    0.00 :   9a3e1:  xor    %eax,%eax
    0.00 :   9a3e3:  mov    %rax,0x8(%rcx)
    0.00 :   9a3e7:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a3ec:  mov    %rbx,%r13
    0.00 :   9a3ef:  mov    $0x2,%eax
    0.00 :   9a3f4:  shr    $0x12,%r13
    0.00 :   9a3f8:  cmp    %rax,%r13
    0.00 :   9a3fb:  cmova  %rax,%r13
    0.00 :   9a3ff:  lea    0x7c(%r13),%eax
    0.00 :   9a403:  mov    %eax,0x10(%rsp)
    0.00 :   9a407:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a40c:  lea    0xfdd26(%rip),%rcx        # 198139 <null+0xf7f>
    0.00 :   9a413:  lea    0x1036e6(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a41a:  mov    $0x1,%edi
    0.00 :   9a41f:  xor    %eax,%eax
    0.00 :   9a421:  lea    0x1026a8(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a428:  call   80df0 <__libc_message>
    0.00 :   9a42d:  lea    (%rdx,%rbx,1),%rdi
    0.00 :   9a431:  sub    %rbx,%rax
    0.00 :   9a434:  mov    0x8(%rsp),%r12
    0.00 :   9a439:  movq   %rdi,%xmm0
    0.00 :   9a43e:  mov    %rdi,0x78(%rbp)
    0.00 :   9a442:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a446:  movups %xmm0,0x68(%rbp)
    0.00 :   9a44a:  movq   %r15,%xmm0
    0.00 :   9a44f:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a453:  movups %xmm0,0x10(%rdi)
    0.00 :   9a457:  cmp    $0x3ff,%rax
    0.00 :   9a45d:  jbe    9a467 <_int_malloc+0xd07>
    0.00 :   9a45f:  pxor   %xmm0,%xmm0
    0.00 :   9a463:  movups %xmm0,0x20(%rdi)
    0.00 :   9a467:  lea    0x139812(%rip),%rcx        # 1d3c80 <main_arena>
    0.00 :   9a46e:  cmp    %rcx,%rbp
    0.00 :   9a471:  setne  %cl
    0.00 :   9a474:  movzbl %cl,%ecx
    0.00 :   9a477:  shl    $0x2,%rcx
    0.00 :   9a47b:  or     %rbx,%rcx
    0.00 :   9a47e:  or     $0x1,%rcx
    0.00 :   9a482:  mov    %rcx,0x8(%rdx)
    0.00 :   9a486:  mov    %rax,%rcx
    0.00 :   9a489:  or     $0x1,%rcx
    0.00 :   9a48d:  mov    %rcx,0x8(%rdi)
    0.00 :   9a491:  lea    0x10(%rdx),%rcx
    0.00 :   9a495:  mov    %rax,(%rsi)
    0.00 :   9a498:  mov    %rcx,%rdi
    0.00 :   9a49b:  mov    %r12,%rsi
    0.00 :   9a49e:  mov    %rcx,(%rsp)
    0.00 :   9a4a2:  call   96d80 <alloc_perturb>
    0.00 :   9a4a7:  mov    (%rsp),%rcx
    0.00 :   9a4ab:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a4b0:  lea    0x1397c9(%rip),%rdx        # 1d3c80 <main_arena>
    0.00 :   9a4b7:  lea    (%rcx,%rbx,1),%rsi
    0.00 :   9a4bb:  mov    %r8,%r12
    0.00 :   9a4be:  cmp    %rdx,%rbp
    0.00 :   9a4c1:  mov    %rsi,0x60(%rbp)
    0.00 :   9a4c5:  setne  %dl
    0.00 :   9a4c8:  sub    %rbx,%rax
    0.00 :   9a4cb:  add    $0x10,%rcx
    0.00 :   9a4cf:  movzbl %dl,%edx
    0.00 :   9a4d2:  or     $0x1,%rax
    0.00 :   9a4d6:  shl    $0x2,%rdx
    0.00 :   9a4da:  or     %rbx,%rdx
    0.00 :   9a4dd:  or     $0x1,%rdx
    0.00 :   9a4e1:  mov    %rdx,-0x8(%rcx)
    0.00 :   9a4e5:  mov    %rax,0x8(%rsi)
    5.32 :   9a4e9:  jmp    9a498 <_int_malloc+0xd38> // libc.so.6[9a4e9]
    0.00 :   9a4eb:  lea    0x103126(%rip),%rdi        # 19d618 <aliasfile.0+0x1bd0>
    0.00 :   9a4f2:  call   96b80 <malloc_printerr>
    0.00 :   9a4f7:  mov    %rbp,%rsi
    0.00 :   9a4fa:  mov    %rbx,%rdi
    0.00 :   9a4fd:  mov    %r8,%r12
    0.00 :   9a500:  call   98f10 <sysmalloc>
    0.00 :   9a505:  mov    %rax,%rcx
    0.00 :   9a508:  test   %rax,%rax
    0.00 :   9a50b:  jne    9a498 <_int_malloc+0xd38>
    0.00 :   9a50d:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a512:  lea    0x103187(%rip),%rdi        # 19d6a0 <aliasfile.0+0x1c58>
    0.00 :   9a519:  call   96b80 <malloc_printerr>
    8.29 :   9a51e:  mov    0x28(%rdx),%r13 // libc.so.6[9a51e]
    0.00 :   9a522:  mov    %r8,%r12
    0.00 :   9a525:  jmp    9a52b <_int_malloc+0xdcb>
    0.00 :   9a527:  mov    0x28(%r13),%r13
    0.00 :   9a52b:  mov    0x8(%r13),%rdx
    0.00 :   9a52f:  mov    %rdx,%r14
    0.00 :   9a532:  and    $0xfffffffffffffff8,%r14
    0.00 :   9a536:  cmp    %rbx,%r14
    0.00 :   9a539:  jb     9a527 <_int_malloc+0xdc7>
    0.00 :   9a53b:  cmp    %r13,0x8(%rax)
    0.00 :   9a53f:  je     9a54d <_int_malloc+0xded>
    0.00 :   9a541:  mov    0x10(%r13),%rax
    0.00 :   9a545:  cmp    0x8(%rax),%rdx
    0.00 :   9a549:  cmove  %rax,%r13
    0.00 :   9a54d:  mov    %r14,%rcx
    0.00 :   9a550:  mov    %r13,%rdi
    0.00 :   9a553:  sub    %rbx,%rcx
    0.00 :   9a556:  mov    %rcx,(%rsp)
    0.00 :   9a55a:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   9a55f:  mov    (%rsp),%rcx
    0.00 :   9a563:  cmp    $0x1f,%rcx
    0.00 :   9a567:  jbe    9a5e7 <_int_malloc+0xe87>
    0.00 :   9a569:  mov    0x70(%rbp),%rax
    0.00 :   9a56d:  movq   %r15,%xmm3
    0.00 :   9a572:  lea    0x0(%r13,%rbx,1),%rdx
    0.00 :   9a577:  movq   %rax,%xmm0
    0.00 :   9a57c:  punpcklqdq %xmm3,%xmm0
    0.00 :   9a580:  cmp    %r15,0x18(%rax)
    0.00 :   9a584:  jne    9a5db <_int_malloc+0xe7b>
    0.00 :   9a586:  movups %xmm0,0x10(%rdx)
    0.00 :   9a58a:  mov    %rdx,0x70(%rbp)
    0.00 :   9a58e:  mov    %rdx,0x18(%rax)
    0.00 :   9a592:  cmp    $0x3ff,%rcx
    0.00 :   9a599:  jbe    9a5a3 <_int_malloc+0xe43>
    0.00 :   9a59b:  pxor   %xmm0,%xmm0
    0.00 :   9a59f:  movups %xmm0,0x20(%rdx)
    0.00 :   9a5a3:  lea    0x1396d6(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a5aa:  cmp    %rax,%rbp
    0.00 :   9a5ad:  setne  %al
    0.00 :   9a5b0:  movzbl %al,%eax
    0.00 :   9a5b3:  shl    $0x2,%rax
    0.00 :   9a5b7:  or     %rbx,%rax
    0.00 :   9a5ba:  or     $0x1,%rax
    0.00 :   9a5be:  mov    %rax,0x8(%r13)
    0.00 :   9a5c2:  mov    %rcx,%rax
    0.00 :   9a5c5:  or     $0x1,%rax
    0.00 :   9a5c9:  mov    %rax,0x8(%rdx)
    0.00 :   9a5cd:  mov    %rcx,0x0(%r13,%r14,1)
    0.00 :   9a5d2:  lea    0x10(%r13),%rcx
    0.00 :   9a5d6:  jmp    9a498 <_int_malloc+0xd38>
    0.00 :   9a5db:  lea    0x103066(%rip),%rdi        # 19d648 <aliasfile.0+0x1c00>
    0.00 :   9a5e2:  call   96b80 <malloc_printerr>
    0.00 :   9a5e7:  lea    0x139692(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a5ee:  orq    $0x1,0x8(%r13,%r14,1)
    0.00 :   9a5f4:  cmp    %rax,%rbp
    0.00 :   9a5f7:  je     9a5d2 <_int_malloc+0xe72>
    0.00 :   9a5f9:  orq    $0x4,0x8(%r13)
    0.00 :   9a5fe:  jmp    9a5d2 <_int_malloc+0xe72>
    0.00 :   9a600:  lea    0x103069(%rip),%rcx        # 19d670 <aliasfile.0+0x1c28>
    0.00 :   9a607:  lea    0x1034f2(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a60e:  mov    $0x1,%edi
    0.00 :   9a613:  xor    %eax,%eax
    0.00 :   9a615:  lea    0x1024b4(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a61c:  call   80df0 <__libc_message>
    0.00 :   9a621:  lea    0xfdaf6(%rip),%rcx        # 19811e <null+0xf64>
    0.00 :   9a628:  lea    0x1034d1(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a62f:  mov    $0x1,%edi
    0.00 :   9a634:  xor    %eax,%eax
    0.00 :   9a636:  lea    0x102493(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a63d:  call   80df0 <__libc_message>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   43.99 libc.so.6[152880]
   17.83 libc.so.6[1528d5]
   12.28 libc.so.6[152900]
   10.24 libc.so.6[1528df]
    7.40 libc.so.6[1528d9]
    5.17 libc.so.6[1528c6]
    3.10 libc.so.6[1528db]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (26 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000152880 <__memcpy_avx_unaligned_erms>:
         : 6      __memcpy_avx_unaligned_erms():
   43.99 :   152880: endbr64 // libc.so.6[152880]
    0.00 :   152884: mov    %rdi,%rax
    0.00 :   152887: cmp    $0x20,%rdx
    0.00 :   15288b: jb     1528b0 <__memcpy_avx_unaligned_erms+0x30>
    0.00 :   15288d: vmovdqu (%rsi),%ymm0
    0.00 :   152891: cmp    $0x40,%rdx
    0.00 :   152895: ja     152940 <__memcpy_avx_unaligned_erms+0xc0>
    0.00 :   15289b: vmovdqu -0x20(%rsi,%rdx,1),%ymm1
    0.00 :   1528a1: vmovdqu %ymm0,(%rdi)
    0.00 :   1528a5: vmovdqu %ymm1,-0x20(%rdi,%rdx,1)
    0.00 :   1528ab: vzeroupper
    0.00 :   1528ae: ret
    0.00 :   1528af: nop
    0.00 :   1528b0: cmp    $0x10,%edx
    0.00 :   1528b3: jae    1528e2 <__memcpy_avx_unaligned_erms+0x62>
    0.00 :   1528b5: cmp    $0x8,%edx
    0.00 :   1528b8: jae    152900 <__memcpy_avx_unaligned_erms+0x80>
    0.00 :   1528ba: cmp    $0x4,%edx
    0.00 :   1528bd: jae    1528d5 <__memcpy_avx_unaligned_erms+0x55>
    0.00 :   1528bf: cmp    $0x1,%edx
    0.00 :   1528c2: jl     1528d4 <__memcpy_avx_unaligned_erms+0x54>
    0.00 :   1528c4: mov    (%rsi),%cl
    5.17 :   1528c6: je     1528d2 <__memcpy_avx_unaligned_erms+0x52> // libc.so.6[1528c6]
    0.00 :   1528c8: movzwl -0x2(%rsi,%rdx,1),%esi
    0.00 :   1528cd: mov    %si,-0x2(%rdi,%rdx,1)
    0.00 :   1528d2: mov    %cl,(%rdi)
    0.00 :   1528d4: ret
   17.83 :   1528d5: mov    -0x4(%rsi,%rdx,1),%ecx // libc.so.6[1528d5]
    7.40 :   1528d9: mov    (%rsi),%esi // libc.so.6[1528d9]
    3.10 :   1528db: mov    %ecx,-0x4(%rdi,%rdx,1) // libc.so.6[1528db]
   10.24 :   1528df: mov    %esi,(%rdi) // libc.so.6[1528df]
    0.00 :   1528e1: ret
    0.00 :   1528e2: vmovdqu (%rsi),%xmm0
    0.00 :   1528e6: vmovdqu -0x10(%rsi,%rdx,1),%xmm1
    0.00 :   1528ec: vmovdqu %xmm0,(%rdi)
    0.00 :   1528f0: vmovdqu %xmm1,-0x10(%rdi,%rdx,1)
    0.00 :   1528f6: ret
    0.00 :   1528f7: nopw   0x0(%rax,%rax,1)
   12.28 :   152900: mov    -0x8(%rsi,%rdx,1),%rcx // libc.so.6[152900]
    0.00 :   152905: mov    (%rsi),%rsi
    0.00 :   152908: mov    %rsi,(%rdi)
    0.00 :   15290b: mov    %rcx,-0x8(%rdi,%rdx,1)
    0.00 :   152910: ret
    0.00 :   152911: vmovdqu -0x20(%rsi,%rdx,1),%ymm2
    0.00 :   152917: vmovdqu -0x40(%rsi,%rdx,1),%ymm3
    0.00 :   15291d: vmovdqu %ymm0,(%rdi)
    0.00 :   152921: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   152926: vmovdqu %ymm2,-0x20(%rdi,%rdx,1)
    0.00 :   15292c: vmovdqu %ymm3,-0x40(%rdi,%rdx,1)
    0.00 :   152932: vzeroupper
    0.00 :   152935: ret
    0.00 :   152936: cs nopw 0x0(%rax,%rax,1)
    0.00 :   152940: cmp    0x80ab1(%rip),%rdx        # 1d33f8 <__x86_rep_movsb_threshold>
    0.00 :   152947: ja     152b40 <__memcpy_avx_unaligned_erms+0x2c0>
    0.00 :   15294d: cmp    $0x100,%rdx
    0.00 :   152954: ja     1529b5 <__memcpy_avx_unaligned_erms+0x135>
    0.00 :   152956: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   15295b: cmp    $0x80,%rdx
    0.00 :   152962: jbe    152911 <__memcpy_avx_unaligned_erms+0x91>
    0.00 :   152964: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152969: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   15296e: vmovdqu -0x20(%rsi,%rdx,1),%ymm4
    0.00 :   152974: vmovdqu -0x40(%rsi,%rdx,1),%ymm5
    0.00 :   15297a: vmovdqu -0x60(%rsi,%rdx,1),%ymm6
    0.00 :   152980: vmovdqu -0x80(%rsi,%rdx,1),%ymm7
    0.00 :   152986: vmovdqu %ymm0,(%rdi)
    0.00 :   15298a: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   15298f: vmovdqu %ymm2,0x40(%rdi)
    0.00 :   152994: vmovdqu %ymm3,0x60(%rdi)
    0.00 :   152999: vmovdqu %ymm4,-0x20(%rdi,%rdx,1)
    0.00 :   15299f: vmovdqu %ymm5,-0x40(%rdi,%rdx,1)
    0.00 :   1529a5: vmovdqu %ymm6,-0x60(%rdi,%rdx,1)
    0.00 :   1529ab: vmovdqu %ymm7,-0x80(%rdi,%rdx,1)
    0.00 :   1529b1: vzeroupper
    0.00 :   1529b4: ret
    0.00 :   1529b5: mov    %rdi,%rcx
    0.00 :   1529b8: sub    %rsi,%rcx
    0.00 :   1529bb: cmp    %rdx,%rcx
    0.00 :   1529be: jb     152a70 <__memcpy_avx_unaligned_erms+0x1f0>
    0.00 :   1529c4: cmp    0x87ba5(%rip),%rdx        # 1da570 <__x86_shared_non_temporal_threshold>
    0.00 :   1529cb: ja     152ba0 <__memcpy_avx_unaligned_erms+0x320>
    0.00 :   1529d1: lea    (%rcx,%rdx,1),%r8
    0.00 :   1529d5: xor    %rcx,%r8
    0.00 :   1529d8: shr    $0x3f,%r8
    0.00 :   1529dc: and    $0xf00,%ecx
    0.00 :   1529e2: add    %r8d,%ecx
    0.00 :   1529e5: je     152a75 <__memcpy_avx_unaligned_erms+0x1f5>
    0.00 :   1529eb: vmovdqu -0x20(%rsi,%rdx,1),%ymm5
    0.00 :   1529f1: vmovdqu -0x40(%rsi,%rdx,1),%ymm6
    0.00 :   1529f7: mov    %rdi,%rcx
    0.00 :   1529fa: or     $0x1f,%rdi
    0.00 :   1529fe: vmovdqu -0x60(%rsi,%rdx,1),%ymm7
    0.00 :   152a04: vmovdqu -0x80(%rsi,%rdx,1),%ymm8
    0.00 :   152a0a: sub    %rcx,%rsi
    0.00 :   152a0d: inc    %rdi
    0.00 :   152a10: add    %rdi,%rsi
    0.00 :   152a13: lea    -0x80(%rcx,%rdx,1),%rdx
    0.00 :   152a18: nopl   0x0(%rax,%rax,1)
    0.00 :   152a20: vmovdqu (%rsi),%ymm1
    0.00 :   152a24: vmovdqu 0x20(%rsi),%ymm2
    0.00 :   152a29: vmovdqu 0x40(%rsi),%ymm3
    0.00 :   152a2e: vmovdqu 0x60(%rsi),%ymm4
    0.00 :   152a33: sub    $0xffffffffffffff80,%rsi
    0.00 :   152a37: vmovdqa %ymm1,(%rdi)
    0.00 :   152a3b: vmovdqa %ymm2,0x20(%rdi)
    0.00 :   152a40: vmovdqa %ymm3,0x40(%rdi)
    0.00 :   152a45: vmovdqa %ymm4,0x60(%rdi)
    0.00 :   152a4a: sub    $0xffffffffffffff80,%rdi
    0.00 :   152a4e: cmp    %rdi,%rdx
    0.00 :   152a51: ja     152a20 <__memcpy_avx_unaligned_erms+0x1a0>
    0.00 :   152a53: vmovdqu %ymm5,0x60(%rdx)
    0.00 :   152a58: vmovdqu %ymm6,0x40(%rdx)
    0.00 :   152a5d: vmovdqu %ymm7,0x20(%rdx)
    0.00 :   152a62: vmovdqu %ymm8,(%rdx)
    0.00 :   152a66: vmovdqu %ymm0,(%rcx)
    0.00 :   152a6a: vzeroupper
    0.00 :   152a6d: ret
    0.00 :   152a6e: xchg   %ax,%ax
    0.00 :   152a70: test   %rcx,%rcx
    0.00 :   152a73: je     152a6a <__memcpy_avx_unaligned_erms+0x1ea>
    0.00 :   152a75: vmovdqu 0x20(%rsi),%ymm5
    0.00 :   152a7a: vmovdqu 0x40(%rsi),%ymm6
    0.00 :   152a7f: lea    -0x81(%rdi,%rdx,1),%rcx
    0.00 :   152a87: vmovdqu 0x60(%rsi),%ymm7
    0.00 :   152a8c: vmovdqu -0x20(%rsi,%rdx,1),%ymm8
    0.00 :   152a92: sub    %rdi,%rsi
    0.00 :   152a95: and    $0xffffffffffffffe0,%rcx
    0.00 :   152a99: add    %rcx,%rsi
    0.00 :   152a9c: nopl   0x0(%rax)
    0.00 :   152aa0: vmovdqu 0x60(%rsi),%ymm1
    0.00 :   152aa5: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152aaa: vmovdqu 0x20(%rsi),%ymm3
    0.00 :   152aaf: vmovdqu (%rsi),%ymm4
    0.00 :   152ab3: add    $0xffffffffffffff80,%rsi
    0.00 :   152ab7: vmovdqa %ymm1,0x60(%rcx)
    0.00 :   152abc: vmovdqa %ymm2,0x40(%rcx)
    0.00 :   152ac1: vmovdqa %ymm3,0x20(%rcx)
    0.00 :   152ac6: vmovdqa %ymm4,(%rcx)
    0.00 :   152aca: add    $0xffffffffffffff80,%rcx
    0.00 :   152ace: cmp    %rcx,%rdi
    0.00 :   152ad1: jb     152aa0 <__memcpy_avx_unaligned_erms+0x220>
    0.00 :   152ad3: vmovdqu %ymm0,(%rdi)
    0.00 :   152ad7: vmovdqu %ymm5,0x20(%rdi)
    0.00 :   152adc: vmovdqu %ymm6,0x40(%rdi)
    0.00 :   152ae1: vmovdqu %ymm7,0x60(%rdi)
    0.00 :   152ae6: vmovdqu %ymm8,-0x20(%rdx,%rdi,1)
    0.00 :   152aec: vzeroupper
    0.00 :   152aef: ret
    0.00 :   152af0: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   152afb: nopl   0x0(%rax,%rax,1)
    0.00 :   152b00: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152b05: test   $0xe00,%ecx
    0.00 :   152b0b: jne    152b75 <__memcpy_avx_unaligned_erms+0x2f5>
    0.00 :   152b0d: mov    %rcx,%r9
    0.00 :   152b10: lea    -0x1(%rsi,%rdx,1),%rcx
    0.00 :   152b15: or     $0x3f,%rsi
    0.00 :   152b19: lea    0x1(%rsi,%r9,1),%rdi
    0.00 :   152b1e: sub    %rsi,%rcx
    0.00 :   152b21: inc    %rsi
    0.00 :   152b24: rep movsb %ds:(%rsi),%es:(%rdi)
    0.00 :   152b26: vmovdqu %ymm0,(%r8)
    0.00 :   152b2b: vmovdqu %ymm1,0x20(%r8)
    0.00 :   152b31: vzeroupper
    0.00 :   152b34: ret
    0.00 :   152b35: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   152b40: mov    %rdi,%rcx
    0.00 :   152b43: sub    %rsi,%rcx
    0.00 :   152b46: cmp    %rdx,%rcx
    0.00 :   152b49: jb     152a70 <__memcpy_avx_unaligned_erms+0x1f0>
    0.00 :   152b4f: mov    %rdi,%r8
    0.00 :   152b52: cmp    0x87a0f(%rip),%rdx        # 1da568 <__x86_rep_movsb_stop_threshold>
    0.00 :   152b59: jae    152ba0 <__memcpy_avx_unaligned_erms+0x320>
    0.00 :   152b5b: testl  $0x1,0x879fb(%rip)        # 1da560 <__x86_string_control>
    0.00 :   152b65: je     152b00 <__memcpy_avx_unaligned_erms+0x280>
    0.00 :   152b67: cmp    $0xffffffc0,%ecx
    0.00 :   152b6a: ja     1529eb <__memcpy_avx_unaligned_erms+0x16b>
    0.00 :   152b70: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152b75: sub    %rdi,%rsi
    0.00 :   152b78: add    $0x3f,%rdi
    0.00 :   152b7c: lea    (%r8,%rdx,1),%rcx
    0.00 :   152b80: and    $0xffffffffffffffc0,%rdi
    0.00 :   152b84: add    %rdi,%rsi
    0.00 :   152b87: sub    %rdi,%rcx
    0.00 :   152b8a: rep movsb %ds:(%rsi),%es:(%rdi)
    0.00 :   152b8c: vmovdqu %ymm0,(%r8)
    0.00 :   152b91: vmovdqu %ymm1,0x20(%r8)
    0.00 :   152b97: vzeroupper
    0.00 :   152b9a: ret
    0.00 :   152b9b: nopl   0x0(%rax,%rax,1)
    0.00 :   152ba0: mov    0x879c9(%rip),%r11        # 1da570 <__x86_shared_non_temporal_threshold>
    0.00 :   152ba7: cmp    %r11,%rdx
    0.00 :   152baa: jb     1529d1 <__memcpy_avx_unaligned_erms+0x151>
    0.00 :   152bb0: neg    %rcx
    0.00 :   152bb3: cmp    %rcx,%rdx
    0.00 :   152bb6: ja     1529eb <__memcpy_avx_unaligned_erms+0x16b>
    0.00 :   152bbc: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152bc1: vmovdqu %ymm0,(%rdi)
    0.00 :   152bc5: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   152bca: mov    %rdi,%r8
    0.00 :   152bcd: and    $0x3f,%r8
    0.00 :   152bd1: sub    $0x40,%r8
    0.00 :   152bd5: sub    %r8,%rsi
    0.00 :   152bd8: sub    %r8,%rdi
    0.00 :   152bdb: add    %r8,%rdx
    0.00 :   152bde: not    %ecx
    0.00 :   152be0: mov    %rdx,%r10
    0.00 :   152be3: test   $0xf00,%ecx
    0.00 :   152be9: je     152d70 <__memcpy_avx_unaligned_erms+0x4f0>
    0.00 :   152bef: shl    $0x4,%r11
    0.00 :   152bf3: cmp    %r11,%rdx
    0.00 :   152bf6: jae    152d70 <__memcpy_avx_unaligned_erms+0x4f0>
    0.00 :   152bfc: and    $0x1fff,%edx
    0.00 :   152c02: shr    $0xd,%r10
    0.00 :   152c06: cs nopw 0x0(%rax,%rax,1)
    0.00 :   152c10: mov    $0x20,%ecx
    0.00 :   152c15: prefetcht0 0x80(%rsi)
    0.00 :   152c1c: prefetcht0 0xc0(%rsi)
    0.00 :   152c23: prefetcht0 0x100(%rsi)
    0.00 :   152c2a: prefetcht0 0x140(%rsi)
    0.00 :   152c31: prefetcht0 0x1080(%rsi)
    0.00 :   152c38: prefetcht0 0x10c0(%rsi)
    0.00 :   152c3f: prefetcht0 0x1100(%rsi)
    0.00 :   152c46: prefetcht0 0x1140(%rsi)
    0.00 :   152c4d: vmovdqu (%rsi),%ymm0
    0.00 :   152c51: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152c56: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152c5b: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152c60: vmovdqu 0x1000(%rsi),%ymm4
    0.00 :   152c68: vmovdqu 0x1020(%rsi),%ymm5
    0.00 :   152c70: vmovdqu 0x1040(%rsi),%ymm6
    0.00 :   152c78: vmovdqu 0x1060(%rsi),%ymm7
    0.00 :   152c80: sub    $0xffffffffffffff80,%rsi
    0.00 :   152c84: vmovntdq %ymm0,(%rdi)
    0.00 :   152c88: vmovntdq %ymm1,0x20(%rdi)
    0.00 :   152c8d: vmovntdq %ymm2,0x40(%rdi)
    0.00 :   152c92: vmovntdq %ymm3,0x60(%rdi)
    0.00 :   152c97: vmovntdq %ymm4,0x1000(%rdi)
    0.00 :   152c9f: vmovntdq %ymm5,0x1020(%rdi)
    0.00 :   152ca7: vmovntdq %ymm6,0x1040(%rdi)
    0.00 :   152caf: vmovntdq %ymm7,0x1060(%rdi)
    0.00 :   152cb7: sub    $0xffffffffffffff80,%rdi
    0.00 :   152cbb: dec    %ecx
    0.00 :   152cbd: jne    152c15 <__memcpy_avx_unaligned_erms+0x395>
    0.00 :   152cc3: add    $0x1000,%rdi
    0.00 :   152cca: add    $0x1000,%rsi
    0.00 :   152cd1: dec    %r10
    0.00 :   152cd4: jne    152c10 <__memcpy_avx_unaligned_erms+0x390>
    0.00 :   152cda: sfence
    0.00 :   152cdd: cmp    $0x80,%edx
    0.00 :   152ce3: jbe    152d3a <__memcpy_avx_unaligned_erms+0x4ba>
    0.00 :   152ce5: prefetcht0 0x80(%rsi)
    0.00 :   152cec: prefetcht0 0xc0(%rsi)
    0.00 :   152cf3: prefetcht0 0x80(%rdi)
    0.00 :   152cfa: prefetcht0 0xc0(%rdi)
    0.00 :   152d01: vmovdqu (%rsi),%ymm0
    0.00 :   152d05: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152d0a: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152d0f: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152d14: sub    $0xffffffffffffff80,%rsi
    0.00 :   152d18: add    $0xffffff80,%edx
    0.00 :   152d1b: vmovdqa %ymm0,(%rdi)
    0.00 :   152d1f: vmovdqa %ymm1,0x20(%rdi)
    0.00 :   152d24: vmovdqa %ymm2,0x40(%rdi)
    0.00 :   152d29: vmovdqa %ymm3,0x60(%rdi)
    0.00 :   152d2e: sub    $0xffffffffffffff80,%rdi
    0.00 :   152d32: cmp    $0x80,%edx
    0.00 :   152d38: ja     152ce5 <__memcpy_avx_unaligned_erms+0x465>
    0.00 :   152d3a: vmovdqu -0x80(%rsi,%rdx,1),%ymm0
    0.00 :   152d40: vmovdqu -0x60(%rsi,%rdx,1),%ymm1
    0.00 :   152d46: vmovdqu -0x40(%rsi,%rdx,1),%ymm2
    0.00 :   152d4c: vmovdqu -0x20(%rsi,%rdx,1),%ymm3
    0.00 :   152d52: vmovdqu %ymm0,-0x80(%rdi,%rdx,1)
    0.00 :   152d58: vmovdqu %ymm1,-0x60(%rdi,%rdx,1)
    0.00 :   152d5e: vmovdqu %ymm2,-0x40(%rdi,%rdx,1)
    0.00 :   152d64: vmovdqu %ymm3,-0x20(%rdi,%rdx,1)
    0.00 :   152d6a: vzeroupper
    0.00 :   152d6d: ret
    0.00 :   152d6e: xchg   %ax,%ax
    0.00 :   152d70: and    $0x3fff,%edx
    0.00 :   152d76: shr    $0xe,%r10
    0.00 :   152d7a: nopw   0x0(%rax,%rax,1)
    0.00 :   152d80: mov    $0x20,%ecx
    0.00 :   152d85: prefetcht0 0x80(%rsi)
    0.00 :   152d8c: prefetcht0 0xc0(%rsi)
    0.00 :   152d93: prefetcht0 0x1080(%rsi)
    0.00 :   152d9a: prefetcht0 0x10c0(%rsi)
    0.00 :   152da1: prefetcht0 0x2080(%rsi)
    0.00 :   152da8: prefetcht0 0x20c0(%rsi)
    0.00 :   152daf: prefetcht0 0x3080(%rsi)
    0.00 :   152db6: prefetcht0 0x30c0(%rsi)
    0.00 :   152dbd: vmovdqu (%rsi),%ymm0
    0.00 :   152dc1: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152dc6: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152dcb: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152dd0: vmovdqu 0x1000(%rsi),%ymm4
    0.00 :   152dd8: vmovdqu 0x1020(%rsi),%ymm5
    0.00 :   152de0: vmovdqu 0x1040(%rsi),%ymm6
    0.00 :   152de8: vmovdqu 0x1060(%rsi),%ymm7
    0.00 :   152df0: vmovdqu 0x2000(%rsi),%ymm8
    0.00 :   152df8: vmovdqu 0x2020(%rsi),%ymm9
    0.00 :   152e00: vmovdqu 0x2040(%rsi),%ymm10
    0.00 :   152e08: vmovdqu 0x2060(%rsi),%ymm11
    0.00 :   152e10: vmovdqu 0x3000(%rsi),%ymm12
    0.00 :   152e18: vmovdqu 0x3020(%rsi),%ymm13
    0.00 :   152e20: vmovdqu 0x3040(%rsi),%ymm14
    0.00 :   152e28: vmovdqu 0x3060(%rsi),%ymm15
    0.00 :   152e30: sub    $0xffffffffffffff80,%rsi
    0.00 :   152e34: vmovntdq %ymm0,(%rdi)
    0.00 :   152e38: vmovntdq %ymm1,0x20(%rdi)
    0.00 :   152e3d: vmovntdq %ymm2,0x40(%rdi)
    0.00 :   152e42: vmovntdq %ymm3,0x60(%rdi)
    0.00 :   152e47: vmovntdq %ymm4,0x1000(%rdi)
    0.00 :   152e4f: vmovntdq %ymm5,0x1020(%rdi)
    0.00 :   152e57: vmovntdq %ymm6,0x1040(%rdi)
    0.00 :   152e5f: vmovntdq %ymm7,0x1060(%rdi)
    0.00 :   152e67: vmovntdq %ymm8,0x2000(%rdi)
    0.00 :   152e6f: vmovntdq %ymm9,0x2020(%rdi)
    0.00 :   152e77: vmovntdq %ymm10,0x2040(%rdi)
    0.00 :   152e7f: vmovntdq %ymm11,0x2060(%rdi)
    0.00 :   152e87: vmovntdq %ymm12,0x3000(%rdi)
    0.00 :   152e8f: vmovntdq %ymm13,0x3020(%rdi)
    0.00 :   152e97: vmovntdq %ymm14,0x3040(%rdi)
    0.00 :   152e9f: vmovntdq %ymm15,0x3060(%rdi)
    0.00 :   152ea7: sub    $0xffffffffffffff80,%rdi
    0.00 :   152eab: dec    %ecx
    0.00 :   152ead: jne    152d85 <__memcpy_avx_unaligned_erms+0x505>
    0.00 :   152eb3: add    $0x3000,%rdi
    0.00 :   152eba: add    $0x3000,%rsi
    0.00 :   152ec1: dec    %r10
    0.00 :   152ec4: jne    152d80 <__memcpy_avx_unaligned_erms+0x500>
    0.00 :   152eca: sfence
    0.00 :   152ecd: cmp    $0x80,%edx
    0.00 :   152ed3: jbe    152f2a <__memcpy_avx_unaligned_erms+0x6aa>
    0.00 :   152ed5: prefetcht0 0x80(%rsi)
    0.00 :   152edc: prefetcht0 0xc0(%rsi)
    0.00 :   152ee3: prefetcht0 0x80(%rdi)
    0.00 :   152eea: prefetcht0 0xc0(%rdi)
    0.00 :   152ef1: vmovdqu (%rsi),%ymm0
    0.00 :   152ef5: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152efa: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152eff: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152f04: sub    $0xffffffffffffff80,%rsi
    0.00 :   152f08: add    $0xffffff80,%edx
    0.00 :   152f0b: vmovdqa %ymm0,(%rdi)
    0.00 :   152f0f: vmovdqa %ymm1,0x20(%rdi)
    0.00 :   152f14: vmovdqa %ymm2,0x40(%rdi)
    0.00 :   152f19: vmovdqa %ymm3,0x60(%rdi)
    0.00 :   152f1e: sub    $0xffffffffffffff80,%rdi
    0.00 :   152f22: cmp    $0x80,%edx
    0.00 :   152f28: ja     152ed5 <__memcpy_avx_unaligned_erms+0x655>
    0.00 :   152f2a: vmovdqu -0x80(%rsi,%rdx,1),%ymm0
    0.00 :   152f30: vmovdqu -0x60(%rsi,%rdx,1),%ymm1
    0.00 :   152f36: vmovdqu -0x40(%rsi,%rdx,1),%ymm2
    0.00 :   152f3c: vmovdqu -0x20(%rsi,%rdx,1),%ymm3
    0.00 :   152f42: vmovdqu %ymm0,-0x80(%rdi,%rdx,1)
    0.00 :   152f48: vmovdqu %ymm1,-0x60(%rdi,%rdx,1)
    0.00 :   152f4e: vmovdqu %ymm2,-0x40(%rdi,%rdx,1)
    0.00 :   152f54: vmovdqu %ymm3,-0x20(%rdi,%rdx,1)
    0.00 :   152f5a: vzeroupper
    0.00 :   152f5d: ret

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   22.39 libpq.so.private14-5.14[2236e]
    8.96 libpq.so.private14-5.14[221e0]
    7.00 libpq.so.private14-5.14[22070]
    6.11 libpq.so.private14-5.14[221fe]
    5.48 libpq.so.private14-5.14[221ae]
    5.17 libpq.so.private14-5.14[22078]
    5.09 libpq.so.private14-5.14[22020]
    4.81 libpq.so.private14-5.14[2207e]
    4.74 libpq.so.private14-5.14[22366]
    4.72 libpq.so.private14-5.14[220b2]
    4.31 libpq.so.private14-5.14[22047]
    4.17 libpq.so.private14-5.14[22010]
    4.03 libpq.so.private14-5.14[2235a]
    3.31 libpq.so.private14-5.14[22056]
    3.29 libpq.so.private14-5.14[220c8]
    3.22 libpq.so.private14-5.14[2209d]
    3.18 libpq.so.private14-5.14[221a9]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (24 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000022010 <PQgetResult@@Base>:
    4.17 :   22010:  endbr64 // libpq.so.private14-5.14[22010]
    0.00 :   22014:  push   %r14
    0.00 :   22016:  push   %r13
    0.00 :   22018:  push   %r12
    0.00 :   2201a:  push   %rbp
    0.00 :   2201b:  push   %rbx
    0.00 :   2201c:  sub    $0x20,%rsp
    5.09 :   22020:  mov    %fs:0x28,%rax // libpq.so.private14-5.14[22020]
    0.00 :   22029:  mov    %rax,0x18(%rsp)
    0.00 :   2202e:  xor    %eax,%eax
    0.00 :   22030:  test   %rdi,%rdi
    0.00 :   22033:  je     221fe <PQgetResult@@Base+0x1ee>
    0.00 :   22039:  mov    %rdi,%rbx
    0.00 :   2203c:  call   20b70 <PQgetline@@Base+0x140>
    0.00 :   22041:  mov    0x15c(%rbx),%ebp
    4.31 :   22047:  cmp    $0x1,%ebp // libpq.so.private14-5.14[22047]
    0.00 :   2204a:  jne    220b2 <PQgetResult@@Base+0xa2>
    0.00 :   2204c:  nopl   0x0(%rax)
    0.00 :   22050:  mov    0x35c(%rbx),%esi
    3.31 :   22056:  test   %esi,%esi // libpq.so.private14-5.14[22056]
    0.00 :   22058:  jg     220d0 <PQgetResult@@Base+0xc0>
    0.00 :   2205a:  xor    %edx,%edx
    0.00 :   2205c:  mov    $0xffffffffffffffff,%rcx
    0.00 :   22063:  mov    $0x1,%esi
    0.00 :   22068:  mov    %rbx,%rdi
    0.00 :   2206b:  call   1bc10 <PQescapeBytea@@Base+0x470>
    7.00 :   22070:  test   %eax,%eax // libpq.so.private14-5.14[22070]
    0.00 :   22072:  js     22132 <PQgetResult@@Base+0x122>
    5.17 :   22078:  je     22117 <PQgetResult@@Base+0x107> // libpq.so.private14-5.14[22078]
    4.81 :   2207e:  mov    %rbx,%rdi // libpq.so.private14-5.14[2207e]
    0.00 :   22081:  call   1d860 <PQresultVerboseErrorMessage@@Base+0xa60>
    0.00 :   22086:  test   %eax,%eax
    0.00 :   22088:  js     22132 <PQgetResult@@Base+0x122>
    0.00 :   2208e:  mov    %rbx,%rdi
    0.00 :   22091:  call   20b70 <PQgetline@@Base+0x140>
    0.00 :   22096:  cmpb   $0x0,0x2dc(%rbx)
    3.22 :   2209d:  mov    0x15c(%rbx),%ebp // libpq.so.private14-5.14[2209d]
    0.00 :   220a3:  je     221d0 <PQgetResult@@Base+0x1c0>
    0.00 :   220a9:  cmp    $0x1,%ebp
    0.00 :   220ac:  je     22217 <PQgetResult@@Base+0x207>
    4.72 :   220b2:  cmp    $0x6,%ebp // libpq.so.private14-5.14[220b2]
    0.00 :   220b5:  ja     223d0 <PQgetResult@@Base+0x3c0>
    0.00 :   220bb:  lea    0x105be(%rip),%rcx        # 32680 <PQencryptPasswordConn@@Base+0x4d00>
    0.00 :   220c2:  mov    %ebp,%eax
    0.00 :   220c4:  movslq (%rcx,%rax,4),%rax
    3.29 :   220c8:  add    %rcx,%rax // libpq.so.private14-5.14[220c8]
    0.00 :   220cb:  notrack jmp *%rax
    0.00 :   220ce:  xchg   %ax,%ax
    0.00 :   220d0:  mov    0x118(%rbx),%rdi
    0.00 :   220d7:  test   %rdi,%rdi
    0.00 :   220da:  je     220e7 <PQgetResult@@Base+0xd7>
    0.00 :   220dc:  call   cb00 <fflush@plt>
    0.00 :   220e1:  mov    0x35c(%rbx),%esi
    0.00 :   220e7:  mov    %rbx,%rdi
    0.00 :   220ea:  call   1dad0 <PQresultVerboseErrorMessage@@Base+0xcd0>
    0.00 :   220ef:  test   %eax,%eax
    0.00 :   220f1:  jle    224ea <PQgetResult@@Base+0x4da>
    0.00 :   220f7:  xor    %esi,%esi
    0.00 :   220f9:  mov    $0xffffffffffffffff,%rcx
    0.00 :   22100:  mov    $0x1,%edx
    0.00 :   22105:  mov    %rbx,%rdi
    0.00 :   22108:  call   1bc10 <PQescapeBytea@@Base+0x470>
    0.00 :   2210d:  test   %eax,%eax
    0.00 :   2210f:  js     22132 <PQgetResult@@Base+0x122>
    0.00 :   22111:  jne    22050 <PQgetResult@@Base+0x40>
    0.00 :   22117:  lea    0xd40f(%rip),%rdi        # 2f52d <PQencryptPasswordConn@@Base+0x1bad>
    0.00 :   2211e:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   22123:  lea    0x418(%rbx),%rdi
    0.00 :   2212a:  mov    %rax,%rsi
    0.00 :   2212d:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   22132:  mov    0x378(%rbx),%rdi
    0.00 :   22139:  test   %rdi,%rdi
    0.00 :   2213c:  je     22143 <PQgetResult@@Base+0x133>
    0.00 :   2213e:  call   c1a0 <PQclear@plt>
    0.00 :   22143:  mov    0x380(%rbx),%rdi
    0.00 :   2214a:  movq   $0x0,0x378(%rbx)
    0.00 :   22155:  test   %rdi,%rdi
    0.00 :   22158:  je     2215f <PQgetResult@@Base+0x14f>
    0.00 :   2215a:  call   c1a0 <PQclear@plt>
    0.00 :   2215f:  movq   $0x0,0x380(%rbx)
    0.00 :   2216a:  mov    $0x7,%esi
    0.00 :   2216f:  mov    %rbx,%rdi
    0.00 :   22172:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   22177:  movl   $0x0,0x15c(%rbx)
    0.00 :   22181:  mov    %rax,0x378(%rbx)
    0.00 :   22188:  mov    %rax,%rbp
    0.00 :   2218b:  test   %rax,%rax
    0.00 :   2218e:  je     22202 <PQgetResult@@Base+0x1f2>
    0.00 :   22190:  mov    0x380(%rbx),%rax
    0.00 :   22197:  movq   $0x0,0x380(%rbx)
    0.00 :   221a2:  mov    %rax,0x378(%rbx)
    3.18 :   221a9:  mov    0x18(%rsp),%rax // libpq.so.private14-5.14[221a9]
    5.48 :   221ae:  sub    %fs:0x28,%rax // libpq.so.private14-5.14[221ae]
    0.00 :   221b7:  jne    224e5 <PQgetResult@@Base+0x4d5>
    0.00 :   221bd:  add    $0x20,%rsp
    0.00 :   221c1:  mov    %rbp,%rax
    0.00 :   221c4:  pop    %rbx
    0.00 :   221c5:  pop    %rbp
    0.00 :   221c6:  pop    %r12
    0.00 :   221c8:  pop    %r13
    0.00 :   221ca:  pop    %r14
    0.00 :   221cc:  ret
    0.00 :   221cd:  nopl   (%rax)
    0.00 :   221d0:  cmp    $0x1,%ebp
    0.00 :   221d3:  je     22050 <PQgetResult@@Base+0x40>
    0.00 :   221d9:  jmp    220b2 <PQgetResult@@Base+0xa2>
    0.00 :   221de:  xchg   %ax,%ax
    8.96 :   221e0:  mov    0x16c(%rbx),%edi // libpq.so.private14-5.14[221e0]
    0.00 :   221e6:  test   %edi,%edi
    0.00 :   221e8:  je     221fe <PQgetResult@@Base+0x1ee>
    0.00 :   221ea:  lea    0x418(%rbx),%rdi
    0.00 :   221f1:  call   cc10 <resetPQExpBuffer@plt>
    0.00 :   221f6:  mov    %rbx,%rdi
    0.00 :   221f9:  call   1ad10 <PQenterPipelineMode@@Base+0x70>
    6.11 :   221fe:  xor    %ebp,%ebp // libpq.so.private14-5.14[221fe]
    0.00 :   22200:  jmp    221a9 <PQgetResult@@Base+0x199>
    0.00 :   22202:  mov    $0x7,%esi
    0.00 :   22207:  mov    %rbx,%rdi
    0.00 :   2220a:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   2220f:  mov    %rax,%rbp
    0.00 :   22212:  jmp    22190 <PQgetResult@@Base+0x180>
    0.00 :   22217:  mov    0x2e0(%rbx),%rsi
    0.00 :   2221e:  lea    0x418(%rbx),%rbp
    0.00 :   22225:  test   %rsi,%rsi
    0.00 :   22228:  je     22404 <PQgetResult@@Base+0x3f4>
    0.00 :   2222e:  mov    %rbp,%rdi
    0.00 :   22231:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   22236:  mov    0x2e0(%rbx),%rax
    0.00 :   2223d:  movb   $0x0,(%rax)
    0.00 :   22240:  jmp    22132 <PQgetResult@@Base+0x122>
    0.00 :   22245:  mov    $0x8,%esi
    0.00 :   2224a:  mov    %rbx,%rdi
    0.00 :   2224d:  call   1a940 <PQparamtype@@Base+0x60>
    0.00 :   22252:  mov    %rax,%rbp
    0.00 :   22255:  test   %rbp,%rbp
    0.00 :   22258:  je     221fe <PQgetResult@@Base+0x1ee>
    0.00 :   2225a:  mov    0x98(%rbp),%eax
    0.00 :   22260:  test   %eax,%eax
    0.00 :   22262:  jle    221a9 <PQgetResult@@Base+0x199>
    0.00 :   22268:  xor    %r13d,%r13d
    0.00 :   2226b:  mov    %rsp,%r14
    0.00 :   2226e:  jmp    22287 <PQgetResult@@Base+0x277>
    0.00 :   22270:  movb   $0x1,0x20(%rax,%r12,1)
    0.00 :   22276:  add    $0x1,%r13d
    0.00 :   2227a:  cmp    %r13d,0x98(%rbp)
    0.00 :   22281:  jle    221a9 <PQgetResult@@Base+0x199>
    0.00 :   22287:  movslq %r13d,%rax
    0.00 :   2228a:  mov    %rbx,(%rsp)
    0.00 :   2228e:  mov    %r14,%rsi
    0.00 :   22291:  mov    $0x3,%edi
    0.00 :   22296:  lea    (%rax,%rax,4),%r12
    0.00 :   2229a:  mov    0x90(%rbp),%rax
    0.00 :   222a1:  mov    %rbp,0x8(%rsp)
    0.00 :   222a6:  shl    $0x3,%r12
    0.00 :   222aa:  add    %r12,%rax
    0.00 :   222ad:  mov    0x10(%rax),%rdx
    0.00 :   222b1:  call   *(%rax)
    0.00 :   222b3:  test   %eax,%eax
    0.00 :   222b5:  mov    0x90(%rbp),%rax
    0.00 :   222bc:  jne    22270 <PQgetResult@@Base+0x260>
    0.00 :   222be:  mov    0x8(%rax,%r12,1),%r12
    0.00 :   222c3:  lea    0xfe26(%rip),%rdi        # 320f0 <PQencryptPasswordConn@@Base+0x4770>
    0.00 :   222ca:  add    $0x418,%rbx
    0.00 :   222d1:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   222d6:  mov    %rbx,%rdi
    0.00 :   222d9:  mov    %rax,%rsi
    0.00 :   222dc:  mov    %r12,%rdx
    0.00 :   222df:  xor    %eax,%eax
    0.00 :   222e1:  call   cdd0 <appendPQExpBuffer@plt>
    0.00 :   222e6:  mov    %rbx,%rsi
    0.00 :   222e9:  mov    %rbp,%rdi
    0.00 :   222ec:  call   182c0 <PQdsplen@@Base+0xd0>
    0.00 :   222f1:  movl   $0x7,0x28(%rbp)
    0.00 :   222f8:  jmp    221a9 <PQgetResult@@Base+0x199>
    0.00 :   222fd:  mov    $0x3,%esi
    0.00 :   22302:  mov    %rbx,%rdi
    0.00 :   22305:  call   1a940 <PQparamtype@@Base+0x60>
    0.00 :   2230a:  mov    %rax,%rbp
    0.00 :   2230d:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22312:  mov    $0x4,%esi
    0.00 :   22317:  mov    %rbx,%rdi
    0.00 :   2231a:  call   1a940 <PQparamtype@@Base+0x60>
    0.00 :   2231f:  mov    %rax,%rbp
    0.00 :   22322:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22327:  mov    0x378(%rbx),%rbp
    0.00 :   2232e:  test   %rbp,%rbp
    0.00 :   22331:  je     22460 <PQgetResult@@Base+0x450>
    0.00 :   22337:  mov    0x380(%rbx),%rax
    0.00 :   2233e:  movq   $0x0,0x380(%rbx)
    0.00 :   22349:  mov    %rax,0x378(%rbx)
    0.00 :   22350:  movl   $0x1,0x15c(%rbx)
    4.03 :   2235a:  jmp    2225a <PQgetResult@@Base+0x24a> // libpq.so.private14-5.14[2235a]
    0.00 :   2235f:  mov    0x1a0(%rbx),%rbp
    4.74 :   22366:  test   %rbp,%rbp // libpq.so.private14-5.14[22366]
    0.00 :   22369:  je     22376 <PQgetResult@@Base+0x366>
    0.00 :   2236b:  mov    0x0(%rbp),%esi
   22.39 :   2236e:  test   %esi,%esi // libpq.so.private14-5.14[2236e]
    0.00 :   22370:  jne    22420 <PQgetResult@@Base+0x410>
    0.00 :   22376:  mov    0x378(%rbx),%rbp
    0.00 :   2237d:  test   %rbp,%rbp
    0.00 :   22380:  je     22498 <PQgetResult@@Base+0x488>
    0.00 :   22386:  mov    0x380(%rbx),%rax
    0.00 :   2238d:  mov    0x16c(%rbx),%ecx
    0.00 :   22393:  movq   $0x0,0x380(%rbx)
    0.00 :   2239e:  mov    %rax,0x378(%rbx)
    0.00 :   223a5:  test   %ecx,%ecx
    0.00 :   223a7:  je     22350 <PQgetResult@@Base+0x340>
    0.00 :   223a9:  movl   $0x0,0x15c(%rbx)
    0.00 :   223b3:  cmpl   $0xa,0x28(%rbp)
    0.00 :   223b7:  jne    2225a <PQgetResult@@Base+0x24a>
    0.00 :   223bd:  mov    %rbx,%rdi
    0.00 :   223c0:  call   1ad10 <PQenterPipelineMode@@Base+0x70>
    0.00 :   223c5:  jmp    2225a <PQgetResult@@Base+0x24a>
    0.00 :   223ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   223d0:  lea    0xf1be(%rip),%rdi        # 31595 <PQencryptPasswordConn@@Base+0x3c15>
    0.00 :   223d7:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   223dc:  mov    %ebp,%edx
    0.00 :   223de:  lea    0x418(%rbx),%rdi
    0.00 :   223e5:  mov    %rax,%rsi
    0.00 :   223e8:  xor    %eax,%eax
    0.00 :   223ea:  call   cdd0 <appendPQExpBuffer@plt>
    0.00 :   223ef:  mov    $0x7,%esi
    0.00 :   223f4:  mov    %rbx,%rdi
    0.00 :   223f7:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   223fc:  mov    %rax,%rbp
    0.00 :   223ff:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22404:  lea    0xf172(%rip),%rdi        # 3157d <PQencryptPasswordConn@@Base+0x3bfd>
    0.00 :   2240b:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   22410:  mov    %rbp,%rdi
    0.00 :   22413:  mov    %rax,%rsi
    0.00 :   22416:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   2241b:  jmp    22132 <PQgetResult@@Base+0x122>
    0.00 :   22420:  mov    0x10(%rbp),%rax
    0.00 :   22424:  mov    %rax,0x1a0(%rbx)
    0.00 :   2242b:  mov    0x8(%rbp),%rdi
    0.00 :   2242f:  movq   $0x0,0x10(%rbp)
    0.00 :   22437:  test   %rdi,%rdi
    0.00 :   2243a:  je     22449 <PQgetResult@@Base+0x439>
    0.00 :   2243c:  call   cb30 <free@plt>
    0.00 :   22441:  movq   $0x0,0x8(%rbp)
    0.00 :   22449:  mov    0x1b0(%rbx),%rax
    0.00 :   22450:  mov    %rax,0x10(%rbp)
    0.00 :   22454:  mov    %rbp,0x1b0(%rbx)
    0.00 :   2245b:  jmp    22376 <PQgetResult@@Base+0x366>
    0.00 :   22460:  mov    $0x7,%esi
    0.00 :   22465:  mov    %rbx,%rdi
    0.00 :   22468:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   2246d:  mov    %rax,%rbp
    0.00 :   22470:  mov    0x380(%rbx),%rax
    0.00 :   22477:  movq   $0x0,0x380(%rbx)
    0.00 :   22482:  mov    %rax,0x378(%rbx)
    0.00 :   22489:  movl   $0x1,0x15c(%rbx)
    0.00 :   22493:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22498:  mov    $0x7,%esi
    0.00 :   2249d:  mov    %rbx,%rdi
    0.00 :   224a0:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   224a5:  mov    0x16c(%rbx),%edx
    0.00 :   224ab:  mov    %rax,%rbp
    0.00 :   224ae:  mov    0x380(%rbx),%rax
    0.00 :   224b5:  movq   $0x0,0x380(%rbx)
    0.00 :   224c0:  mov    %rax,0x378(%rbx)
    0.00 :   224c7:  test   %edx,%edx
    0.00 :   224c9:  je     22489 <PQgetResult@@Base+0x479>
    0.00 :   224cb:  movl   $0x0,0x15c(%rbx)
    0.00 :   224d5:  test   %rbp,%rbp
    0.00 :   224d8:  jne    223b3 <PQgetResult@@Base+0x3a3>
    0.00 :   224de:  xor    %ebp,%ebp
    0.00 :   224e0:  jmp    221a9 <PQgetResult@@Base+0x199>
    0.00 :   224e5:  call   ca70 <__stack_chk_fail@plt>
    0.00 :   224ea:  je     2205a <PQgetResult@@Base+0x4a>
    0.00 :   224f0:  jmp    22132 <PQgetResult@@Base+0x122>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   39.75 libc.so.6[8e300]
   20.33 libc.so.6[8e307]
   16.22 libc.so.6[8e32d]
   14.69 libc.so.6[8e351]
    4.92 libc.so.6[8e332]
    4.09 libc.so.6[8e344]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (23 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008e300 <__pthread_mutex_lock@GLIBC_2.2.5>:
         : 6     ___pthread_mutex_lock():
   39.75 :   8e300:  endbr64 // libc.so.6[8e300]
    0.00 :   8e304:  mov    0x10(%rdi),%eax
   20.33 :   8e307:  mov    %eax,%edx // libc.so.6[8e307]
    0.00 :   8e309:  and    $0x17f,%edx
    0.00 :   8e30f:  nop
    0.00 :   8e310:  and    $0x7c,%eax
    0.00 :   8e313:  jne    8e3c0 <__pthread_mutex_lock@GLIBC_2.2.5+0xc0>
    0.00 :   8e319:  push   %rbx
    0.00 :   8e31a:  sub    $0x10,%rsp
    0.00 :   8e31e:  test   %edx,%edx
    0.00 :   8e320:  jne    8e3c8 <__pthread_mutex_lock@GLIBC_2.2.5+0xc8>
    0.00 :   8e326:  mov    0x147723(%rip),%r9d        # 1d5a50 <__GI___pthread_force_elision>
   16.22 :   8e32d:  test   %r9d,%r9d // libc.so.6[8e32d]
    0.00 :   8e330:  jne    8e390 <__pthread_mutex_lock@GLIBC_2.2.5+0x90>
    4.92 :   8e332:  mov    0x10(%rdi),%esi // libc.so.6[8e332]
    0.00 :   8e335:  and    $0x80,%esi
    0.00 :   8e33b:  jne    8e346 <__pthread_mutex_lock@GLIBC_2.2.5+0x46>
    0.00 :   8e33d:  cmpb   $0x0,0x14d2b4(%rip)        # 1db5f8 <__libc_single_threaded>
    4.09 :   8e344:  jne    8e380 <__pthread_mutex_lock@GLIBC_2.2.5+0x80> // libc.so.6[8e344]
    0.00 :   8e346:  xor    %eax,%eax
    0.00 :   8e348:  mov    $0x1,%edx
    0.00 :   8e34d:  lock cmpxchg %edx,(%rdi)
   14.69 :   8e351:  jne    8e408 <__pthread_mutex_lock@GLIBC_2.2.5+0x108> // libc.so.6[8e351]
    0.00 :   8e357:  mov    0x8(%rdi),%ecx
    0.00 :   8e35a:  test   %ecx,%ecx
    0.00 :   8e35c:  jne    8e4be <__pthread_mutex_lock@GLIBC_2.2.5+0x1be>
    0.00 :   8e362:  mov    %fs:0x2d0,%eax
    0.00 :   8e36a:  mov    %eax,0x8(%rdi)
    0.00 :   8e36d:  addl   $0x1,0xc(%rdi)
    0.00 :   8e371:  nop
    0.00 :   8e372:  xor    %eax,%eax
    0.00 :   8e374:  add    $0x10,%rsp
    0.00 :   8e378:  pop    %rbx
    0.00 :   8e379:  ret
    0.00 :   8e37a:  nopw   0x0(%rax,%rax,1)
    0.00 :   8e380:  mov    (%rdi),%r8d
    0.00 :   8e383:  test   %r8d,%r8d
    0.00 :   8e386:  jne    8e346 <__pthread_mutex_lock@GLIBC_2.2.5+0x46>
    0.00 :   8e388:  movl   $0x1,(%rdi)
    0.00 :   8e38e:  jmp    8e357 <__pthread_mutex_lock@GLIBC_2.2.5+0x57>
    0.00 :   8e390:  mov    0x10(%rdi),%eax
    0.00 :   8e393:  test   $0x3,%ah
    0.00 :   8e396:  je     8e3a0 <__pthread_mutex_lock@GLIBC_2.2.5+0xa0>
    0.00 :   8e398:  test   $0x1,%ah
    0.00 :   8e39b:  je     8e332 <__pthread_mutex_lock@GLIBC_2.2.5+0x32>
    0.00 :   8e39d:  jmp    8e3a6 <__pthread_mutex_lock@GLIBC_2.2.5+0xa6>
    0.00 :   8e39f:  nop
    0.00 :   8e3a0:  or     $0x1,%ah
    0.00 :   8e3a3:  mov    %eax,0x10(%rdi)
    0.00 :   8e3a6:  mov    0x10(%rdi),%edx
    0.00 :   8e3a9:  add    $0x10,%rsp
    0.00 :   8e3ad:  lea    0x16(%rdi),%rsi
    0.00 :   8e3b1:  pop    %rbx
    0.00 :   8e3b2:  and    $0x80,%edx
    0.00 :   8e3b8:  jmp    879b0 <__GI___lll_lock_elision>
    0.00 :   8e3bd:  nopl   (%rax)
    0.00 :   8e3c0:  jmp    8dc00 <__pthread_mutex_lock_full>
    0.00 :   8e3c5:  nopl   (%rax)
    0.00 :   8e3c8:  cmp    $0x100,%edx
    0.00 :   8e3ce:  je     8e3a6 <__pthread_mutex_lock@GLIBC_2.2.5+0xa6>
    0.00 :   8e3d0:  mov    0x10(%rdi),%edx
    0.00 :   8e3d3:  and    $0x7f,%edx
    0.00 :   8e3d6:  cmp    $0x1,%edx
    0.00 :   8e3d9:  jne    8e471 <__pthread_mutex_lock@GLIBC_2.2.5+0x171>
    0.00 :   8e3df:  mov    %fs:0x2d0,%eax
    0.00 :   8e3e7:  cmp    %eax,0x8(%rdi)
    0.00 :   8e3ea:  jne    8e41c <__pthread_mutex_lock@GLIBC_2.2.5+0x11c>
    0.00 :   8e3ec:  mov    0x4(%rdi),%eax
    0.00 :   8e3ef:  cmp    $0xffffffff,%eax
    0.00 :   8e3f2:  je     8e4b4 <__pthread_mutex_lock@GLIBC_2.2.5+0x1b4>
    0.00 :   8e3f8:  add    $0x1,%eax
    0.00 :   8e3fb:  mov    %eax,0x4(%rdi)
    0.00 :   8e3fe:  jmp    8e372 <__pthread_mutex_lock@GLIBC_2.2.5+0x72>
    0.00 :   8e403:  nopl   0x0(%rax,%rax,1)
    0.00 :   8e408:  mov    %rdi,0x8(%rsp)
    0.00 :   8e40d:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8e412:  mov    0x8(%rsp),%rdi
    0.00 :   8e417:  jmp    8e357 <__pthread_mutex_lock@GLIBC_2.2.5+0x57>
    0.00 :   8e41c:  mov    0x10(%rdi),%esi
    0.00 :   8e41f:  and    $0x80,%esi
    0.00 :   8e425:  jne    8e453 <__pthread_mutex_lock@GLIBC_2.2.5+0x153>
    0.00 :   8e427:  cmpb   $0x0,0x14d1ca(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   8e42e:  je     8e453 <__pthread_mutex_lock@GLIBC_2.2.5+0x153>
    0.00 :   8e430:  mov    (%rdi),%edx
    0.00 :   8e432:  test   %edx,%edx
    0.00 :   8e434:  jne    8e453 <__pthread_mutex_lock@GLIBC_2.2.5+0x153>
    0.00 :   8e436:  movl   $0x1,(%rdi)
    0.00 :   8e43c:  mov    0x8(%rdi),%eax
    0.00 :   8e43f:  test   %eax,%eax
    0.00 :   8e441:  jne    8e598 <__pthread_mutex_lock@GLIBC_2.2.5+0x298>
    0.00 :   8e447:  movl   $0x1,0x4(%rdi)
    0.00 :   8e44e:  jmp    8e362 <__pthread_mutex_lock@GLIBC_2.2.5+0x62>
    0.00 :   8e453:  xor    %eax,%eax
    0.00 :   8e455:  mov    $0x1,%edx
    0.00 :   8e45a:  lock cmpxchg %edx,(%rdi)
    0.00 :   8e45e:  je     8e43c <__pthread_mutex_lock@GLIBC_2.2.5+0x13c>
    0.00 :   8e460:  mov    %rdi,0x8(%rsp)
    0.00 :   8e465:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8e46a:  mov    0x8(%rsp),%rdi
    0.00 :   8e46f:  jmp    8e43c <__pthread_mutex_lock@GLIBC_2.2.5+0x13c>
    0.00 :   8e471:  mov    0x10(%rdi),%edx
    0.00 :   8e474:  and    $0x7f,%edx
    0.00 :   8e477:  cmp    $0x3,%edx
    0.00 :   8e47a:  jne    8e54b <__pthread_mutex_lock@GLIBC_2.2.5+0x24b>
    0.00 :   8e480:  mov    $0x1,%edx
    0.00 :   8e485:  lock cmpxchg %edx,(%rdi)
    0.00 :   8e489:  jne    8e4dd <__pthread_mutex_lock@GLIBC_2.2.5+0x1dd>
    0.00 :   8e48b:  cmpl   $0x0,0x8(%rdi)
    0.00 :   8e48f:  je     8e362 <__pthread_mutex_lock@GLIBC_2.2.5+0x62>
    0.00 :   8e495:  lea    0x111cd4(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e49c:  mov    $0xa7,%edx
    0.00 :   8e4a1:  lea    0x109a44(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e4a8:  lea    0x109a68(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8e4af:  call   35610 <__assert_fail>
    0.00 :   8e4b4:  mov    $0xb,%eax
    0.00 :   8e4b9:  jmp    8e374 <__pthread_mutex_lock@GLIBC_2.2.5+0x74>
    0.00 :   8e4be:  lea    0x111cab(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e4c5:  mov    $0x5e,%edx
    0.00 :   8e4ca:  lea    0x109a1b(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e4d1:  lea    0x109a3f(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8e4d8:  call   35610 <__assert_fail>
    0.00 :   8e4dd:  movswl 0x14(%rdi),%eax
    0.00 :   8e4e1:  movswl 0x144dc4(%rip),%edx        # 1d32ac <__GI___mutex_aconf>
    0.00 :   8e4e8:  lea    0xa(%rax,%rax,1),%eax
    0.00 :   8e4ec:  mov    %edx,%ecx
    0.00 :   8e4ee:  cmp    %edx,%eax
    0.00 :   8e4f0:  cmovle %eax,%ecx
    0.00 :   8e4f3:  rdtsc
    0.00 :   8e4f5:  mov    $0x1,%edx
    0.00 :   8e4fa:  xor    %ebx,%ebx
    0.00 :   8e4fc:  mov    %eax,%esi
    0.00 :   8e4fe:  lea    -0x1(%rdx),%eax
    0.00 :   8e501:  and    %esi,%eax
    0.00 :   8e503:  add    %edx,%eax
    0.00 :   8e505:  add    %eax,%ebx
    0.00 :   8e507:  cmp    %ebx,%ecx
    0.00 :   8e509:  jle    8e571 <__pthread_mutex_lock@GLIBC_2.2.5+0x271>
    0.00 :   8e50b:  pause
    0.00 :   8e50d:  sub    $0x1,%eax
    0.00 :   8e510:  test   %eax,%eax
    0.00 :   8e512:  jg     8e50b <__pthread_mutex_lock@GLIBC_2.2.5+0x20b>
    0.00 :   8e514:  cmp    $0xf,%edx
    0.00 :   8e517:  jg     8e51b <__pthread_mutex_lock@GLIBC_2.2.5+0x21b>
    0.00 :   8e519:  add    %edx,%edx
    0.00 :   8e51b:  mov    (%rdi),%eax
    0.00 :   8e51d:  test   %eax,%eax
    0.00 :   8e51f:  jne    8e4fe <__pthread_mutex_lock@GLIBC_2.2.5+0x1fe>
    0.00 :   8e521:  mov    $0x1,%r8d
    0.00 :   8e527:  lock cmpxchg %r8d,(%rdi)
    0.00 :   8e52c:  jne    8e4fe <__pthread_mutex_lock@GLIBC_2.2.5+0x1fe>
    0.00 :   8e52e:  movswl 0x14(%rdi),%edx
    0.00 :   8e532:  mov    %ebx,%eax
    0.00 :   8e534:  mov    $0x8,%esi
    0.00 :   8e539:  sub    %edx,%eax
    0.00 :   8e53b:  mov    %edx,%ecx
    0.00 :   8e53d:  cltd
    0.00 :   8e53e:  idiv   %esi
    0.00 :   8e540:  add    %eax,%ecx
    0.00 :   8e542:  mov    %cx,0x14(%rdi)
    0.00 :   8e546:  jmp    8e48b <__pthread_mutex_lock@GLIBC_2.2.5+0x18b>
    0.00 :   8e54b:  mov    %fs:0x2d0,%edx
    0.00 :   8e553:  mov    0x10(%rdi),%eax
    0.00 :   8e556:  and    $0x7f,%eax
    0.00 :   8e559:  cmp    $0x2,%eax
    0.00 :   8e55c:  jne    8e5b7 <__pthread_mutex_lock@GLIBC_2.2.5+0x2b7>
    0.00 :   8e55e:  cmp    %edx,0x8(%rdi)
    0.00 :   8e561:  jne    8e332 <__pthread_mutex_lock@GLIBC_2.2.5+0x32>
    0.00 :   8e567:  mov    $0x23,%eax
    0.00 :   8e56c:  jmp    8e374 <__pthread_mutex_lock@GLIBC_2.2.5+0x74>
    0.00 :   8e571:  xor    %eax,%eax
    0.00 :   8e573:  mov    $0x1,%edx
    0.00 :   8e578:  lock cmpxchg %edx,(%rdi)
    0.00 :   8e57c:  je     8e52e <__pthread_mutex_lock@GLIBC_2.2.5+0x22e>
    0.00 :   8e57e:  mov    0x10(%rdi),%esi
    0.00 :   8e581:  mov    %rdi,0x8(%rsp)
    0.00 :   8e586:  and    $0x80,%esi
    0.00 :   8e58c:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8e591:  mov    0x8(%rsp),%rdi
    0.00 :   8e596:  jmp    8e52e <__pthread_mutex_lock@GLIBC_2.2.5+0x22e>
    0.00 :   8e598:  lea    0x111bd1(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e59f:  mov    $0x82,%edx
    0.00 :   8e5a4:  lea    0x109941(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e5ab:  lea    0x109965(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8e5b2:  call   35610 <__assert_fail>
    0.00 :   8e5b7:  lea    0x111bb2(%rip),%rcx        # 1a0170 <blanks+0x150>
    0.00 :   8e5be:  mov    $0xac,%edx
    0.00 :   8e5c3:  lea    0x109922(%rip),%rsi        # 197eec <null+0xd32>
    0.00 :   8e5ca:  lea    0x10e1b7(%rip),%rdi        # 19c788 <aliasfile.0+0xd40>
    0.00 :   8e5d1:  call   35610 <__assert_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   52.88 libc.so.6[10dc00]
   21.76 libc.so.6[10dc74]
   12.37 libc.so.6[10dc0b]
    8.13 libc.so.6[10dc6c]
    4.87 libc.so.6[10dc04]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (22 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000010dc00 <__recv>:
         : 6      __libc_recv():
   52.88 :   10dc00: endbr64 // libc.so.6[10dc00]
    4.87 :   10dc04: cmpb   $0x0,0xcd9ed(%rip)        # 1db5f8 <__libc_single_threaded> // libc.so.6[10dc04]
   12.37 :   10dc0b: mov    %ecx,%r10d // libc.so.6[10dc0b]
    0.00 :   10dc0e: je     10dc30 <__recv+0x30>
    0.00 :   10dc10: xor    %r9d,%r9d
    0.00 :   10dc13: xor    %r8d,%r8d
    0.00 :   10dc16: mov    $0x2d,%eax
    0.00 :   10dc1b: syscall
    0.00 :   10dc1d: cmp    $0xfffffffffffff000,%rax
    0.00 :   10dc23: ja     10dc90 <__recv+0x90>
    0.00 :   10dc25: ret
    0.00 :   10dc26: cs nopw 0x0(%rax,%rax,1)
    0.00 :   10dc30: push   %rbp
    0.00 :   10dc31: sub    $0x20,%rsp
    0.00 :   10dc35: mov    %rdx,0x10(%rsp)
    0.00 :   10dc3a: mov    %rsi,0x8(%rsp)
    0.00 :   10dc3f: mov    %edi,(%rsp)
    0.00 :   10dc42: mov    %ecx,0x1c(%rsp)
    0.00 :   10dc46: call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   10dc4b: mov    0x1c(%rsp),%r10d
    0.00 :   10dc50: mov    (%rsp),%edi
    0.00 :   10dc53: xor    %r9d,%r9d
    0.00 :   10dc56: mov    %eax,%ebp
    0.00 :   10dc58: mov    0x10(%rsp),%rdx
    0.00 :   10dc5d: mov    0x8(%rsp),%rsi
    0.00 :   10dc62: xor    %r8d,%r8d
    0.00 :   10dc65: mov    $0x2d,%eax
    0.00 :   10dc6a: syscall
    8.13 :   10dc6c: cmp    $0xfffffffffffff000,%rax // libc.so.6[10dc6c]
    0.00 :   10dc72: ja     10dca8 <__recv+0xa8>
   21.76 :   10dc74: mov    %ebp,%edi // libc.so.6[10dc74]
    0.00 :   10dc76: mov    %rax,(%rsp)
    0.00 :   10dc7a: call   87640 <__GI___pthread_disable_asynccancel>
    0.00 :   10dc7f: mov    (%rsp),%rax
    0.00 :   10dc83: add    $0x20,%rsp
    0.00 :   10dc87: pop    %rbp
    0.00 :   10dc88: ret
    0.00 :   10dc89: nopl   0x0(%rax)
    0.00 :   10dc90: mov    0xc5179(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dc97: neg    %eax
    0.00 :   10dc99: mov    %eax,%fs:(%rdx)
    0.00 :   10dc9c: mov    $0xffffffffffffffff,%rax
    0.00 :   10dca3: ret
    0.00 :   10dca4: nopl   0x0(%rax)
    0.00 :   10dca8: mov    0xc5161(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dcaf: neg    %eax
    0.00 :   10dcb1: mov    %eax,%fs:(%rdx)
    0.00 :   10dcb4: mov    $0xffffffffffffffff,%rax
    0.00 :   10dcbb: jmp    10dc74 <__recv+0x74>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   33.30 [nf_nat][2da0]
   16.60 [nf_nat][2e40]
   13.58 [nf_nat][2e93]
   10.30 [nf_nat][2e6c]
    9.97 [nf_nat][2da5]
    5.28 [nf_nat][2e56]
    3.86 [nf_nat][2e67]
    3.77 [nf_nat][2da6]
    3.34 [nf_nat][2e13]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (21 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002da0 <nf_nat_ipv4_local_fn>:
         : 6    nf_nat_ipv4_local_fn():
   33.30 :   2da0:   call   2da5 <nf_nat_ipv4_local_fn+0x5> // [nf_nat][2da0]
    9.97 :   2da5:   push   %rbp // [nf_nat][2da5]
    3.77 :   2da6:   push   %rbx // [nf_nat][2da6]
    0.00 :   2da7:   mov    %rsi,%rbx
    0.00 :   2daa:   mov    0x68(%rsi),%rsi
    0.00 :   2dae:   cmp    $0x7,%rsi
    0.00 :   2db2:   jbe    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2db8:   mov    %rdx,%rbp
    0.00 :   2dbb:   mov    %esi,%edx
    0.00 :   2dbd:   mov    $0x12,%eax
    0.00 :   2dc2:   and    $0x7,%edx
    0.00 :   2dc5:   bt     %rdx,%rax
    0.00 :   2dc9:   jae    2de0 <nf_nat_ipv4_local_fn+0x40>
    0.00 :   2dcb:   movzwl 0xb8(%rbx),%eax
    0.00 :   2dd2:   mov    0xc8(%rbx),%rcx
    0.00 :   2dd9:   cmpb   $0x1,0x9(%rcx,%rax,1)
    0.00 :   2dde:   je     2df7 <nf_nat_ipv4_local_fn+0x57>
    0.00 :   2de0:   mov    %rbp,%rdx
    0.00 :   2de3:   mov    %rbx,%rsi
    0.00 :   2de6:   call   2deb <nf_nat_ipv4_local_fn+0x4b>
    0.00 :   2deb:   cmp    $0x1,%eax
    0.00 :   2dee:   je     2e0f <nf_nat_ipv4_local_fn+0x6f>
    0.00 :   2df0:   pop    %rbx
    0.00 :   2df1:   pop    %rbp
    0.00 :   2df2:   jmp    2df7 <nf_nat_ipv4_local_fn+0x57>
    0.00 :   2df7:   movzbl 0x0(%rbp),%ecx
    0.00 :   2dfb:   and    $0xfffffffffffffff8,%rsi
    0.00 :   2dff:   mov    %rbx,%rdi
    0.00 :   2e02:   call   2e07 <nf_nat_ipv4_local_fn+0x67>
    0.00 :   2e07:   mov    %eax,%edx
    0.00 :   2e09:   xor    %eax,%eax
    0.00 :   2e0b:   test   %edx,%edx
    0.00 :   2e0d:   je     2df0 <nf_nat_ipv4_local_fn+0x50>
    0.00 :   2e0f:   mov    0x68(%rbx),%rax
    3.34 :   2e13:   mov    %eax,%edx // [nf_nat][2e13]
    0.00 :   2e15:   mov    %rax,%rcx
    0.00 :   2e18:   and    $0x7,%edx
    0.00 :   2e1b:   and    $0xfffffffffffffff8,%rcx
    0.00 :   2e1f:   cmp    $0x7,%rax
    0.00 :   2e23:   jbe    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e25:   xor    %eax,%eax
    0.00 :   2e27:   cmp    $0x2,%edx
    0.00 :   2e2a:   seta   %sil
    0.00 :   2e2e:   setbe  %al
    0.00 :   2e31:   movzbl %sil,%esi
    0.00 :   2e35:   lea    0x0(,%rsi,8),%rdx
    0.00 :   2e3d:   sub    %rsi,%rdx
   16.60 :   2e40:   lea    (%rcx,%rdx,8),%rsi // [nf_nat][2e40]
    0.00 :   2e44:   lea    0x0(,%rax,8),%rdx
    0.00 :   2e4c:   sub    %rax,%rdx
    0.00 :   2e4f:   lea    (%rcx,%rdx,8),%rax
    0.00 :   2e53:   mov    0x20(%rax),%ecx
    5.28 :   2e56:   cmp    %ecx,0x34(%rsi) // [nf_nat][2e56]
    0.00 :   2e59:   jne    2e73 <nf_nat_ipv4_local_fn+0xd3>
    0.00 :   2e5b:   testb  $0x4,0x3c(%rbx)
    0.00 :   2e5f:   jne    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e61:   cmpb   $0x1,0x46(%rsi)
    0.00 :   2e65:   jne    2e93 <nf_nat_ipv4_local_fn+0xf3>
    3.86 :   2e67:   mov    $0x1,%eax // [nf_nat][2e67]
   10.30 :   2e6c:   pop    %rbx // [nf_nat][2e6c]
    0.00 :   2e6d:   pop    %rbp
    0.00 :   2e6e:   jmp    2e73 <nf_nat_ipv4_local_fn+0xd3>
    0.00 :   2e73:   mov    0x18(%rbp),%rsi
    0.00 :   2e77:   mov    0x20(%rbp),%rdi
    0.00 :   2e7b:   xor    %ecx,%ecx
    0.00 :   2e7d:   mov    %rbx,%rdx
    0.00 :   2e80:   call   2e85 <nf_nat_ipv4_local_fn+0xe5>
    0.00 :   2e85:   test   %eax,%eax
    0.00 :   2e87:   jns    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e89:   neg    %eax
    0.00 :   2e8b:   shl    $0x10,%eax
    0.00 :   2e8e:   jmp    2df0 <nf_nat_ipv4_local_fn+0x50>
   13.58 :   2e93:   movzwl 0x30(%rax),%eax // [nf_nat][2e93]
    0.00 :   2e97:   cmp    %ax,0x44(%rsi)
    0.00 :   2e9b:   je     2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e9d:   mov    0x20(%rbp),%rdi
    0.00 :   2ea1:   mov    $0x2,%edx
    0.00 :   2ea6:   mov    %rbx,%rsi
    0.00 :   2ea9:   call   2c40 <nf_xfrm_me_harder>
    0.00 :   2eae:   test   %eax,%eax
    0.00 :   2eb0:   jns    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2eb2:   jmp    2e89 <nf_nat_ipv4_local_fn+0xe9>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   35.65 dbt2-client[409b68]
   21.90 dbt2-client[409a7f]
   11.00 dbt2-client[409de0]
    9.87 dbt2-client[409a0d]
    5.73 dbt2-client[409d75]
    5.45 dbt2-client[409c48]
    5.21 dbt2-client[409d92]
    5.18 dbt2-client[409c9a]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (18 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040979b <execute_new_order_libpq>:
         : 6      execute_new_order_libpq():
    0.00 :   40979b: push   %rbp
    0.00 :   40979c: mov    %rsp,%rbp
    0.00 :   40979f: sub    $0x420,%rsp
    0.00 :   4097a6: mov    %rdi,-0x418(%rbp)
    0.00 :   4097ad: mov    %rsi,-0x420(%rbp)
    0.00 :   4097b4: movl   $0x1,-0x270(%rbp)
    0.00 :   4097be: movl   $0x1,-0x26c(%rbp)
    0.00 :   4097c8: movl   $0x1,-0x268(%rbp)
    0.00 :   4097d2: movl   $0x1,-0x264(%rbp)
    0.00 :   4097dc: movl   $0x1,-0x260(%rbp)
    0.00 :   4097e6: movl   $0x1,-0x25c(%rbp)
    0.00 :   4097f0: movl   $0x1,-0x258(%rbp)
    0.00 :   4097fa: movl   $0x1,-0x254(%rbp)
    0.00 :   409804: movl   $0x1,-0x250(%rbp)
    0.00 :   40980e: movl   $0x1,-0x24c(%rbp)
    0.00 :   409818: movl   $0x1,-0x248(%rbp)
    0.00 :   409822: movl   $0x1,-0x244(%rbp)
    0.00 :   40982c: movl   $0x1,-0x240(%rbp)
    0.00 :   409836: movl   $0x1,-0x23c(%rbp)
    0.00 :   409840: movl   $0x1,-0x238(%rbp)
    0.00 :   40984a: movl   $0x1,-0x234(%rbp)
    0.00 :   409854: movl   $0x1,-0x230(%rbp)
    0.00 :   40985e: movl   $0x1,-0x22c(%rbp)
    0.00 :   409868: movl   $0x1,-0x228(%rbp)
    0.00 :   409872: movl   $0x1,-0x224(%rbp)
    0.00 :   40987c: movl   $0x1,-0x220(%rbp)
    0.00 :   409886: movl   $0x1,-0x21c(%rbp)
    0.00 :   409890: movl   $0x1,-0x218(%rbp)
    0.00 :   40989a: movl   $0x1,-0x214(%rbp)
    0.00 :   4098a4: movl   $0x1,-0x210(%rbp)
    0.00 :   4098ae: movl   $0x1,-0x20c(%rbp)
    0.00 :   4098b8: movl   $0x1,-0x208(%rbp)
    0.00 :   4098c2: movl   $0x1,-0x204(%rbp)
    0.00 :   4098cc: movl   $0x1,-0x200(%rbp)
    0.00 :   4098d6: movl   $0x1,-0x1fc(%rbp)
    0.00 :   4098e0: movl   $0x1,-0x1f8(%rbp)
    0.00 :   4098ea: movl   $0x1,-0x1f4(%rbp)
    0.00 :   4098f4: movl   $0x1,-0x1f0(%rbp)
    0.00 :   4098fe: movl   $0x1,-0x1ec(%rbp)
    0.00 :   409908: movl   $0x1,-0x1e8(%rbp)
    0.00 :   409912: movl   $0x1,-0x1e4(%rbp)
    0.00 :   40991c: movl   $0x1,-0x1e0(%rbp)
    0.00 :   409926: movl   $0x1,-0x1dc(%rbp)
    0.00 :   409930: movl   $0x1,-0x1d8(%rbp)
    0.00 :   40993a: movl   $0x1,-0x1d4(%rbp)
    0.00 :   409944: movl   $0x1,-0x1d0(%rbp)
    0.00 :   40994e: movl   $0x1,-0x1cc(%rbp)
    0.00 :   409958: movl   $0x1,-0x1c8(%rbp)
    0.00 :   409962: movl   $0x1,-0x1c4(%rbp)
    0.00 :   40996c: movl   $0x1,-0x1c0(%rbp)
    0.00 :   409976: movl   $0x1,-0x1bc(%rbp)
    0.00 :   409980: movl   $0x1,-0x1b8(%rbp)
    0.00 :   40998a: movl   $0x1,-0x1b4(%rbp)
    0.00 :   409994: movl   $0x1,-0x1b0(%rbp)
    0.00 :   40999e: movl   $0x1,-0x1ac(%rbp)
    0.00 :   4099a8: lea    -0x340(%rbp),%rdx
    0.00 :   4099af: mov    $0x0,%eax
    0.00 :   4099b4: mov    $0x19,%ecx
    0.00 :   4099b9: mov    %rdx,%rdi
    0.00 :   4099bc: rep stos %rax,%es:(%rdi)
    0.00 :   4099bf: movl   $0x4,-0x340(%rbp)
    0.00 :   4099c9: movl   $0x4,-0x33c(%rbp)
    0.00 :   4099d3: movl   $0x4,-0x338(%rbp)
    0.00 :   4099dd: movl   $0x4,-0x334(%rbp)
    0.00 :   4099e7: movl   $0x4,-0x330(%rbp)
    0.00 :   4099f1: mov    -0x418(%rbp),%rax
    0.00 :   4099f8: mov    0x78(%rax),%rax
    0.00 :   4099fc: mov    $0x414cb0,%esi
    0.00 :   409a01: mov    %rax,%rdi
    0.00 :   409a04: call   407130 <PQexec@plt>
    0.00 :   409a09: mov    %rax,-0x10(%rbp)
    9.87 :   409a0d: cmpq   $0x0,-0x10(%rbp) // dbt2-client[409a0d]
    0.00 :   409a12: je     409a25 <execute_new_order_libpq+0x28a>
    0.00 :   409a14: mov    -0x10(%rbp),%rax
    0.00 :   409a18: mov    %rax,%rdi
    0.00 :   409a1b: call   407040 <PQresultStatus@plt>
    0.00 :   409a20: cmp    $0x1,%eax
    0.00 :   409a23: je     409a6a <execute_new_order_libpq+0x2cf>
    0.00 :   409a25: mov    -0x418(%rbp),%rax
    0.00 :   409a2c: mov    0x78(%rax),%rax
    0.00 :   409a30: mov    %rax,%rdi
    0.00 :   409a33: call   4071c0 <PQerrorMessage@plt>
    0.00 :   409a38: mov    %rax,%rcx
    0.00 :   409a3b: mov    $0x414cb6,%edx
    0.00 :   409a40: mov    $0x41,%esi
    0.00 :   409a45: mov    $0x414cc0,%edi
    0.00 :   409a4a: mov    $0x0,%eax
    0.00 :   409a4f: call   40840f <log_error_message>
    0.00 :   409a54: mov    -0x10(%rbp),%rax
    0.00 :   409a58: mov    %rax,%rdi
    0.00 :   409a5b: call   407080 <PQclear@plt>
    0.00 :   409a60: mov    $0x0,%eax
    0.00 :   409a65: jmp    409e84 <execute_new_order_libpq+0x6e9>
    0.00 :   409a6a: mov    -0x10(%rbp),%rax
    0.00 :   409a6e: mov    %rax,%rdi
    0.00 :   409a71: call   407080 <PQclear@plt>
    0.00 :   409a76: mov    -0x420(%rbp),%rax
    0.00 :   409a7d: mov    (%rax),%eax
   21.90 :   409a7f: mov    %eax,%edi // dbt2-client[409a7f]
    0.00 :   409a81: call   4071b0 <htonl@plt>
    0.00 :   409a86: mov    %eax,-0x344(%rbp)
    0.00 :   409a8c: mov    -0x420(%rbp),%rax
    0.00 :   409a93: mov    0x4(%rax),%eax
    0.00 :   409a96: mov    %eax,%edi
    0.00 :   409a98: call   4071b0 <htonl@plt>
    0.00 :   409a9d: mov    %eax,-0x348(%rbp)
    0.00 :   409aa3: mov    -0x420(%rbp),%rax
    0.00 :   409aaa: mov    0x8(%rax),%eax
    0.00 :   409aad: mov    %eax,%edi
    0.00 :   409aaf: call   4071b0 <htonl@plt>
    0.00 :   409ab4: mov    %eax,-0x34c(%rbp)
    0.00 :   409aba: mov    -0x420(%rbp),%rax
    0.00 :   409ac1: mov    0x10(%rax),%eax
    0.00 :   409ac4: mov    %eax,%edi
    0.00 :   409ac6: call   4071b0 <htonl@plt>
    0.00 :   409acb: mov    %eax,-0x350(%rbp)
    0.00 :   409ad1: mov    -0x420(%rbp),%rax
    0.00 :   409ad8: mov    0xc(%rax),%eax
    0.00 :   409adb: mov    %eax,%edi
    0.00 :   409add: call   4071b0 <htonl@plt>
    0.00 :   409ae2: mov    %eax,-0x354(%rbp)
    0.00 :   409ae8: lea    -0x344(%rbp),%rax
    0.00 :   409aef: mov    %rax,-0x1a0(%rbp)
    0.00 :   409af6: lea    -0x348(%rbp),%rax
    0.00 :   409afd: mov    %rax,-0x198(%rbp)
    0.00 :   409b04: lea    -0x34c(%rbp),%rax
    0.00 :   409b0b: mov    %rax,-0x190(%rbp)
    0.00 :   409b12: lea    -0x350(%rbp),%rax
    0.00 :   409b19: mov    %rax,-0x188(%rbp)
    0.00 :   409b20: lea    -0x354(%rbp),%rax
    0.00 :   409b27: mov    %rax,-0x180(%rbp)
    0.00 :   409b2e: movl   $0x0,-0x4(%rbp)
    0.00 :   409b35: jmp    409cd0 <execute_new_order_libpq+0x535>
    0.00 :   409b3a: mov    -0x420(%rbp),%rcx
    0.00 :   409b41: mov    -0x4(%rbp),%eax
    0.00 :   409b44: movslq %eax,%rdx
    0.00 :   409b47: mov    %rdx,%rax
    0.00 :   409b4a: add    %rax,%rax
    0.00 :   409b4d: add    %rdx,%rax
    0.00 :   409b50: lea    0x0(,%rax,8),%rdx
    0.00 :   409b58: add    %rdx,%rax
    0.00 :   409b5b: shl    $0x4,%rax
    0.00 :   409b5f: add    %rcx,%rax
    0.00 :   409b62: add    $0x18,%rax
    0.00 :   409b66: mov    (%rax),%eax
   35.65 :   409b68: mov    %eax,%edi // dbt2-client[409b68]
    0.00 :   409b6a: call   4071b0 <htonl@plt>
    0.00 :   409b6f: mov    -0x4(%rbp),%edx
    0.00 :   409b72: movslq %edx,%rdx
    0.00 :   409b75: mov    %eax,-0x390(%rbp,%rdx,4)
    0.00 :   409b7c: mov    -0x420(%rbp),%rcx
    0.00 :   409b83: mov    -0x4(%rbp),%eax
    0.00 :   409b86: movslq %eax,%rdx
    0.00 :   409b89: mov    %rdx,%rax
    0.00 :   409b8c: add    %rax,%rax
    0.00 :   409b8f: add    %rdx,%rax
    0.00 :   409b92: lea    0x0(,%rax,8),%rdx
    0.00 :   409b9a: add    %rdx,%rax
    0.00 :   409b9d: shl    $0x4,%rax
    0.00 :   409ba1: add    %rcx,%rax
    0.00 :   409ba4: add    $0x1c,%rax
    0.00 :   409ba8: mov    (%rax),%eax
    0.00 :   409baa: mov    %eax,%edi
    0.00 :   409bac: call   4071b0 <htonl@plt>
    0.00 :   409bb1: mov    -0x4(%rbp),%edx
    0.00 :   409bb4: movslq %edx,%rdx
    0.00 :   409bb7: mov    %eax,-0x3d0(%rbp,%rdx,4)
    0.00 :   409bbe: mov    -0x420(%rbp),%rcx
    0.00 :   409bc5: mov    -0x4(%rbp),%eax
    0.00 :   409bc8: movslq %eax,%rdx
    0.00 :   409bcb: mov    %rdx,%rax
    0.00 :   409bce: add    %rax,%rax
    0.00 :   409bd1: add    %rdx,%rax
    0.00 :   409bd4: lea    0x0(,%rax,8),%rdx
    0.00 :   409bdc: add    %rdx,%rax
    0.00 :   409bdf: shl    $0x4,%rax
    0.00 :   409be3: add    %rcx,%rax
    0.00 :   409be6: add    $0x20,%rax
    0.00 :   409bea: mov    (%rax),%eax
    0.00 :   409bec: mov    %eax,%edi
    0.00 :   409bee: call   4071b0 <htonl@plt>
    0.00 :   409bf3: mov    -0x4(%rbp),%edx
    0.00 :   409bf6: movslq %edx,%rdx
    0.00 :   409bf9: mov    %eax,-0x410(%rbp,%rdx,4)
    0.00 :   409c00: mov    -0x4(%rbp),%edx
    0.00 :   409c03: mov    %edx,%eax
    0.00 :   409c05: add    %eax,%eax
    0.00 :   409c07: add    %edx,%eax
    0.00 :   409c09: lea    0x5(%rax),%ecx
    0.00 :   409c0c: lea    -0x390(%rbp),%rax
    0.00 :   409c13: mov    -0x4(%rbp),%edx
    0.00 :   409c16: movslq %edx,%rdx
    0.00 :   409c19: shl    $0x2,%rdx
    0.00 :   409c1d: add    %rax,%rdx
    0.00 :   409c20: movslq %ecx,%rax
    0.00 :   409c23: mov    %rdx,-0x1a0(%rbp,%rax,8)
    0.00 :   409c2b: mov    -0x4(%rbp),%edx
    0.00 :   409c2e: mov    %edx,%eax
    0.00 :   409c30: add    %eax,%eax
    0.00 :   409c32: add    %edx,%eax
    0.00 :   409c34: lea    0x6(%rax),%ecx
    0.00 :   409c37: lea    -0x3d0(%rbp),%rax
    0.00 :   409c3e: mov    -0x4(%rbp),%edx
    0.00 :   409c41: movslq %edx,%rdx
    0.00 :   409c44: shl    $0x2,%rdx
    5.45 :   409c48: add    %rax,%rdx // dbt2-client[409c48]
    0.00 :   409c4b: movslq %ecx,%rax
    0.00 :   409c4e: mov    %rdx,-0x1a0(%rbp,%rax,8)
    0.00 :   409c56: mov    -0x4(%rbp),%edx
    0.00 :   409c59: mov    %edx,%eax
    0.00 :   409c5b: add    %eax,%eax
    0.00 :   409c5d: add    %edx,%eax
    0.00 :   409c5f: lea    0x7(%rax),%ecx
    0.00 :   409c62: lea    -0x410(%rbp),%rax
    0.00 :   409c69: mov    -0x4(%rbp),%edx
    0.00 :   409c6c: movslq %edx,%rdx
    0.00 :   409c6f: shl    $0x2,%rdx
    0.00 :   409c73: add    %rax,%rdx
    0.00 :   409c76: movslq %ecx,%rax
    0.00 :   409c79: mov    %rdx,-0x1a0(%rbp,%rax,8)
    0.00 :   409c81: mov    -0x4(%rbp),%edx
    0.00 :   409c84: mov    %edx,%eax
    0.00 :   409c86: add    %eax,%eax
    0.00 :   409c88: add    %edx,%eax
    0.00 :   409c8a: add    $0x5,%eax
    0.00 :   409c8d: cltq
    0.00 :   409c8f: movl   $0x4,-0x340(%rbp,%rax,4)
    5.18 :   409c9a: mov    -0x4(%rbp),%edx // dbt2-client[409c9a]
    0.00 :   409c9d: mov    %edx,%eax
    0.00 :   409c9f: add    %eax,%eax
    0.00 :   409ca1: add    %edx,%eax
    0.00 :   409ca3: add    $0x6,%eax
    0.00 :   409ca6: cltq
    0.00 :   409ca8: movl   $0x4,-0x340(%rbp,%rax,4)
    0.00 :   409cb3: mov    -0x4(%rbp),%edx
    0.00 :   409cb6: mov    %edx,%eax
    0.00 :   409cb8: add    %eax,%eax
    0.00 :   409cba: add    %edx,%eax
    0.00 :   409cbc: add    $0x7,%eax
    0.00 :   409cbf: cltq
    0.00 :   409cc1: movl   $0x4,-0x340(%rbp,%rax,4)
    0.00 :   409ccc: addl   $0x1,-0x4(%rbp)
    0.00 :   409cd0: mov    -0x420(%rbp),%rax
    0.00 :   409cd7: mov    0xc(%rax),%eax
    0.00 :   409cda: cmp    %eax,-0x4(%rbp)
    0.00 :   409cdd: jl     409b3a <execute_new_order_libpq+0x39f>
    0.00 :   409ce3: mov    -0x420(%rbp),%rax
    0.00 :   409cea: mov    0xc(%rax),%eax
    0.00 :   409ced: mov    %eax,-0x4(%rbp)
    0.00 :   409cf0: jmp    409d92 <execute_new_order_libpq+0x5f7>
    0.00 :   409cf5: mov    -0x4(%rbp),%edx
    0.00 :   409cf8: mov    %edx,%eax
    0.00 :   409cfa: add    %eax,%eax
    0.00 :   409cfc: add    %edx,%eax
    0.00 :   409cfe: add    $0x5,%eax
    0.00 :   409d01: cltq
    0.00 :   409d03: movq   $0x0,-0x1a0(%rbp,%rax,8)
    0.00 :   409d0f: mov    -0x4(%rbp),%edx
    0.00 :   409d12: mov    %edx,%eax
    0.00 :   409d14: add    %eax,%eax
    0.00 :   409d16: add    %edx,%eax
    0.00 :   409d18: add    $0x6,%eax
    0.00 :   409d1b: cltq
    0.00 :   409d1d: movq   $0x0,-0x1a0(%rbp,%rax,8)
    0.00 :   409d29: mov    -0x4(%rbp),%edx
    0.00 :   409d2c: mov    %edx,%eax
    0.00 :   409d2e: add    %eax,%eax
    0.00 :   409d30: add    %edx,%eax
    0.00 :   409d32: add    $0x7,%eax
    0.00 :   409d35: cltq
    0.00 :   409d37: movq   $0x0,-0x1a0(%rbp,%rax,8)
    0.00 :   409d43: mov    -0x4(%rbp),%edx
    0.00 :   409d46: mov    %edx,%eax
    0.00 :   409d48: add    %eax,%eax
    0.00 :   409d4a: add    %edx,%eax
    0.00 :   409d4c: add    $0x5,%eax
    0.00 :   409d4f: cltq
    0.00 :   409d51: movl   $0x0,-0x340(%rbp,%rax,4)
    0.00 :   409d5c: mov    -0x4(%rbp),%edx
    0.00 :   409d5f: mov    %edx,%eax
    0.00 :   409d61: add    %eax,%eax
    0.00 :   409d63: add    %edx,%eax
    0.00 :   409d65: add    $0x6,%eax
    0.00 :   409d68: cltq
    0.00 :   409d6a: movl   $0x0,-0x340(%rbp,%rax,4)
    5.73 :   409d75: mov    -0x4(%rbp),%edx // dbt2-client[409d75]
    0.00 :   409d78: mov    %edx,%eax
    0.00 :   409d7a: add    %eax,%eax
    0.00 :   409d7c: add    %edx,%eax
    0.00 :   409d7e: add    $0x7,%eax
    0.00 :   409d81: cltq
    0.00 :   409d83: movl   $0x0,-0x340(%rbp,%rax,4)
    0.00 :   409d8e: addl   $0x1,-0x4(%rbp)
    5.21 :   409d92: cmpl   $0xe,-0x4(%rbp) // dbt2-client[409d92]
    0.00 :   409d96: jle    409cf5 <execute_new_order_libpq+0x55a>
    0.00 :   409d9c: mov    -0x418(%rbp),%rax
    0.00 :   409da3: mov    0x78(%rax),%rax
    0.00 :   409da7: lea    -0x340(%rbp),%rsi
    0.00 :   409dae: lea    -0x1a0(%rbp),%rcx
    0.00 :   409db5: push   $0x1
    0.00 :   409db7: lea    -0x270(%rbp),%rdx
    0.00 :   409dbe: push   %rdx
    0.00 :   409dbf: mov    %rsi,%r9
    0.00 :   409dc2: mov    %rcx,%r8
    0.00 :   409dc5: mov    $0x0,%ecx
    0.00 :   409dca: mov    $0x32,%edx
    0.00 :   409dcf: mov    $0x414cf0,%esi
    0.00 :   409dd4: mov    %rax,%rdi
    0.00 :   409dd7: call   407280 <PQexecParams@plt>
    0.00 :   409ddc: add    $0x10,%rsp
   11.00 :   409de0: mov    %rax,-0x10(%rbp) // dbt2-client[409de0]
    0.00 :   409de4: mov    -0x10(%rbp),%rax
    0.00 :   409de8: mov    %rax,%rdi
    0.00 :   409deb: call   407040 <PQresultStatus@plt>
    0.00 :   409df0: cmp    $0x2,%eax
    0.00 :   409df3: je     409e48 <execute_new_order_libpq+0x6ad>
    0.00 :   409df5: mov    -0x420(%rbp),%rax
    0.00 :   409dfc: movl   $0x0,0x19d8(%rax)
    0.00 :   409e06: mov    -0x418(%rbp),%rax
    0.00 :   409e0d: mov    0x78(%rax),%rax
    0.00 :   409e11: mov    %rax,%rdi
    0.00 :   409e14: call   4071c0 <PQerrorMessage@plt>
    0.00 :   409e19: mov    %rax,%rcx
    0.00 :   409e1c: mov    $0x414e17,%edx
    0.00 :   409e21: mov    $0x7a,%esi
    0.00 :   409e26: mov    $0x414cc0,%edi
    0.00 :   409e2b: mov    $0x0,%eax
    0.00 :   409e30: call   40840f <log_error_message>
    0.00 :   409e35: mov    -0x10(%rbp),%rax
    0.00 :   409e39: mov    %rax,%rdi
    0.00 :   409e3c: call   407080 <PQclear@plt>
    0.00 :   409e41: mov    $0x0,%eax
    0.00 :   409e46: jmp    409e84 <execute_new_order_libpq+0x6e9>
    0.00 :   409e48: mov    -0x10(%rbp),%rax
    0.00 :   409e4c: mov    $0x0,%edx
    0.00 :   409e51: mov    $0x0,%esi
    0.00 :   409e56: mov    %rax,%rdi
    0.00 :   409e59: call   407050 <PQgetvalue@plt>
    0.00 :   409e5e: mov    %rax,%rdi
    0.00 :   409e61: call   407460 <atoi@plt>
    0.00 :   409e66: mov    -0x420(%rbp),%rdx
    0.00 :   409e6d: mov    %eax,0x19d8(%rdx)
    0.00 :   409e73: mov    -0x10(%rbp),%rax
    0.00 :   409e77: mov    %rax,%rdi
    0.00 :   409e7a: call   407080 <PQclear@plt>
    0.00 :   409e7f: mov    $0x1,%eax
    0.00 :   409e84: leave
    0.00 :   409e85: ret

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   27.55 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:408
   15.56 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:406
   15.19 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:413
   15.17 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:416
   14.63 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:370
   11.90 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:362
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (7 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009210 <do_lookup_x>:
         : 6    do_lookup_x():
    0.00 :   9210:   push   %r15
    0.00 :   9212:   push   %r14
    0.00 :   9214:   push   %r13
    0.00 :   9216:   push   %r12
    0.00 :   9218:   mov    %esi,%r12d
    0.00 :   921b:   push   %rbp
    0.00 :   921c:   push   %rbx
    0.00 :   921d:   sub    $0x88,%rsp
    0.00 :   9224:   mov    0x8(%r9),%esi
    0.00 :   9228:   mov    %r8,0x18(%rsp)
    0.00 :   922d:   mov    0xc0(%rsp),%rbp
    0.00 :   9235:   mov    %rdi,0x8(%rsp)
    0.00 :   923a:   mov    0xd8(%rsp),%r8
    0.00 :   9242:   mov    %rsi,%r10
    0.00 :   9245:   mov    %rdx,0x20(%rsp)
    0.00 :   924a:   mov    %rcx,0x10(%rsp)
    0.00 :   924f:   mov    (%r9),%r13
    0.00 :   9252:   mov    %r12d,%r11d
    0.00 :   9255:   mov    0xe0(%rsp),%r9d
    0.00 :   925d:   mov    %r8,%r14
    0.00 :   9260:   shr    $0x6,%r11d
    0.00 :   9264:   mov    %r11d,%r8d
    0.00 :   9267:   and    $0x2,%r9d
    0.00 :   926b:   mov    %r12d,%r11d
    0.00 :   926e:   jmp    9306 <do_lookup_x+0xf6>
    0.00 :   9273:   nopl   0x0(%rax,%rax,1)
    0.00 :   9278:   mov    0x30c(%rbx),%edi
    0.00 :   927e:   test   %edi,%edi
    0.00 :   9280:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9282:   mov    0x70(%rbx),%rax
    0.00 :   9286:   movl   $0x0,0x74(%rsp)
    0.00 :   928e:   movq   $0x0,0x78(%rsp)
    0.00 :   9297:   mov    0x8(%rax),%rsi
    0.00 :   929b:   xor    %eax,%eax
    0.00 :   929d:   testb  $0x20,0x336(%rbx)
    0.00 :   92a4:   je     92ac <do_lookup_x+0x9c>
    0.00 :   92a6:   mov    (%rbx),%rax
    0.00 :   92a9:   add    %rax,%rsi
    0.00 :   92ac:   mov    0x68(%rbx),%rdx
    0.00 :   92b0:   add    0x8(%rdx),%rax
    0.00 :   92b4:   mov    0x318(%rbx),%rdx
    0.00 :   92bb:   mov    %rax,%r15
    0.00 :   92be:   test   %rdx,%rdx
    0.00 :   92c1:   je     93a8 <do_lookup_x+0x198>
    0.00 :   92c7:   mov    0x314(%rbx),%ecx
    0.00 :   92cd:   mov    %r8d,%eax
    0.00 :   92d0:   and    0x310(%rbx),%eax
    0.00 :   92d6:   mov    (%rdx,%rax,8),%rax
    0.00 :   92da:   mov    %r11d,%edx
    0.00 :   92dd:   shr    %cl,%edx
    0.00 :   92df:   mov    %edx,%ecx
    0.00 :   92e1:   mov    %rax,%rdx
    0.00 :   92e4:   shr    %cl,%rdx
    0.00 :   92e7:   mov    %r11d,%ecx
    0.00 :   92ea:   shr    %cl,%rax
    0.00 :   92ed:   and    %rax,%rdx
    0.00 :   92f0:   and    $0x1,%edx
    0.00 :   92f3:   jne    9508 <do_lookup_x+0x2f8>
    0.00 :   92f9:   add    $0x1,%rbp
    0.00 :   92fd:   cmp    %r10,%rbp
    0.00 :   9300:   jae    95e0 <do_lookup_x+0x3d0>
    0.00 :   9306:   mov    0x0(%r13,%rbp,8),%rax
    0.00 :   930b:   mov    0x28(%rax),%rbx
   11.90 :   930f:   cmp    %r14,%rbx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:362
    0.00 :   9312:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9314:   test   %r9d,%r9d
    0.00 :   9317:   je     9322 <do_lookup_x+0x112>
    0.00 :   9319:   testb  $0x3,0x334(%rbx)
    0.00 :   9320:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9322:   testb  $0x4,0x336(%rbx)
   14.63 :   9329:   jne    92f9 <do_lookup_x+0xe9> // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:370
    0.00 :   932b:   testb  $0x8,0x2b72e(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9332:   je     9278 <do_lookup_x+0x68>
    0.00 :   9338:   mov    0x8(%rbx),%rdx
    0.00 :   933c:   mov    0x30(%rbx),%rcx
    0.00 :   9340:   cmpb   $0x0,(%rdx)
    0.00 :   9343:   je     9388 <do_lookup_x+0x178>
    0.00 :   9345:   mov    0x8(%rsp),%rsi
    0.00 :   934a:   lea    0x229ff(%rip),%rdi        # 2bd50 <__PRETTY_FUNCTION__.9+0x60>
    0.00 :   9351:   xor    %eax,%eax
    0.00 :   9353:   mov    %r9d,0x40(%rsp)
    0.00 :   9358:   mov    %r10,0x38(%rsp)
    0.00 :   935d:   mov    %r11d,0x30(%rsp)
    0.00 :   9362:   mov    %r8d,0x28(%rsp)
    0.00 :   9367:   call   d1d0 <_dl_debug_printf>
    0.00 :   936c:   mov    0x40(%rsp),%r9d
    0.00 :   9371:   mov    0x38(%rsp),%r10
    0.00 :   9376:   mov    0x30(%rsp),%r11d
    0.00 :   937b:   mov    0x28(%rsp),%r8d
    0.00 :   9380:   jmp    9278 <do_lookup_x+0x68>
    0.00 :   9385:   nopl   (%rax)
    0.00 :   9388:   mov    0x2b6a9(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   938f:   mov    (%rax),%rdx
    0.00 :   9392:   lea    0x20593(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   9399:   test   %rdx,%rdx
    0.00 :   939c:   cmove  %rax,%rdx
    0.00 :   93a0:   jmp    9345 <do_lookup_x+0x135>
    0.00 :   93a2:   nopw   0x0(%rax,%rax,1)
    0.00 :   93a8:   mov    0x20(%rsp),%rax
    0.00 :   93ad:   mov    $0xffffffff,%edx
    0.00 :   93b2:   mov    (%rax),%rax
    0.00 :   93b5:   cmp    %rdx,%rax
    0.00 :   93b8:   je     99fc <do_lookup_x+0x7ec>
    0.00 :   93be:   xor    %edx,%edx
    0.00 :   93c0:   div    %rdi
    0.00 :   93c3:   shl    $0x2,%rdx
    0.00 :   93c7:   mov    0x328(%rbx),%rax
    0.00 :   93ce:   mov    (%rax,%rdx,1),%eax
    0.00 :   93d1:   test   %eax,%eax
    0.00 :   93d3:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   93d9:   lea    0x78(%rsp),%rdi
    0.00 :   93de:   mov    %r13,0x30(%rsp)
    0.00 :   93e3:   lea    0x74(%rsp),%r12
    0.00 :   93e8:   mov    %rbp,0xc0(%rsp)
    0.00 :   93f0:   mov    %rdi,%r13
    0.00 :   93f3:   mov    %rsi,%rbp
    0.00 :   93f6:   mov    %r8d,0x28(%rsp)
    0.00 :   93fb:   mov    %r11d,0x38(%rsp)
    0.00 :   9400:   mov    %r14,0xd8(%rsp)
    0.00 :   9408:   mov    %r10,0x40(%rsp)
    0.00 :   940d:   mov    %r9d,0x48(%rsp)
    0.00 :   9412:   jmp    942b <do_lookup_x+0x21b>
    0.00 :   9414:   nopl   0x0(%rax)
    0.00 :   9418:   mov    0x320(%rbx),%rax
    0.00 :   941f:   mov    (%rax,%r14,4),%eax
    0.00 :   9423:   test   %eax,%eax
    0.00 :   9425:   je     9818 <do_lookup_x+0x608>
    0.00 :   942b:   sub    $0x8,%rsp
    0.00 :   942f:   mov    %eax,%r14d
    0.00 :   9432:   push   %r12
    0.00 :   9434:   lea    (%r14,%r14,2),%rdx
    0.00 :   9438:   push   %r13
    0.00 :   943a:   lea    0x0(%rbp,%rdx,8),%r9
    0.00 :   943f:   push   %rbx
    0.00 :   9440:   push   %r15
    0.00 :   9442:   push   %rax
    0.00 :   9443:   mov    0x110(%rsp),%r8d
    0.00 :   944b:   mov    0x100(%rsp),%ecx
    0.00 :   9452:   mov    0xf8(%rsp),%rdx
    0.00 :   945a:   mov    0x40(%rsp),%rsi
    0.00 :   945f:   mov    0x38(%rsp),%rdi
    0.00 :   9464:   call   9070 <check_match>
    0.00 :   9469:   add    $0x30,%rsp
    0.00 :   946d:   test   %rax,%rax
    0.00 :   9470:   je     9418 <do_lookup_x+0x208>
    0.00 :   9472:   mov    0x28(%rsp),%r8d
    0.00 :   9477:   mov    0x30(%rsp),%r13
    0.00 :   947c:   mov    %rax,%rcx
    0.00 :   947f:   mov    0x38(%rsp),%r11d
    0.00 :   9484:   mov    0xc0(%rsp),%rbp
    0.00 :   948c:   mov    0xd8(%rsp),%r14
    0.00 :   9494:   mov    0x40(%rsp),%r10
    0.00 :   9499:   mov    0x48(%rsp),%r9d
    0.00 :   949e:   xchg   %ax,%ax
    0.00 :   94a0:   movzbl 0x5(%rcx),%eax
    0.00 :   94a4:   mov    %eax,%edx
    0.00 :   94a6:   and    $0x3,%eax
    0.00 :   94a9:   sub    $0x1,%eax
    0.00 :   94ac:   and    $0x3,%edx
    0.00 :   94af:   cmp    $0x1,%eax
    0.00 :   94b2:   jbe    92f9 <do_lookup_x+0xe9>
    0.00 :   94b8:   cmpq   $0x0,0xe8(%rsp)
    0.00 :   94c1:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   94c3:   cmp    $0x3,%dl
    0.00 :   94c6:   je     95f8 <do_lookup_x+0x3e8>
    0.00 :   94cc:   movzbl 0x4(%rcx),%eax
    0.00 :   94d0:   shr    $0x4,%al
    0.00 :   94d3:   cmp    $0x2,%al
    0.00 :   94d5:   je     97e0 <do_lookup_x+0x5d0>
    0.00 :   94db:   cmp    $0xa,%al
    0.00 :   94dd:   je     9690 <do_lookup_x+0x480>
    0.00 :   94e3:   cmp    $0x1,%al
    0.00 :   94e5:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   94eb:   mov    0x18(%rsp),%rax
    0.00 :   94f0:   mov    %rcx,(%rax)
    0.00 :   94f3:   mov    %rbx,0x8(%rax)
    0.00 :   94f7:   mov    $0x1,%eax
    0.00 :   94fc:   jmp    95e2 <do_lookup_x+0x3d2>
    0.00 :   9501:   nopl   0x0(%rax)
    0.00 :   9508:   mov    %r11d,%eax
    0.00 :   950b:   xor    %edx,%edx
    0.00 :   950d:   div    %edi
   15.56 :   950f:   mov    0x320(%rbx),%rax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:406
    0.00 :   9516:   mov    (%rax,%rdx,4),%eax
   27.55 :   9519:   test   %eax,%eax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:408
    0.00 :   951b:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9521:   mov    0x328(%rbx),%rdx
    0.00 :   9528:   mov    %r13,0x30(%rsp)
    0.00 :   952d:   mov    %rsi,%r13
    0.00 :   9530:   mov    %rbp,0xc0(%rsp)
    0.00 :   9538:   mov    %r11d,%ebp
    0.00 :   953b:   lea    (%rdx,%rax,4),%r12
    0.00 :   953f:   lea    0x74(%rsp),%rax
    0.00 :   9544:   mov    %r8d,0x28(%rsp)
    0.00 :   9549:   mov    %r14,0xd8(%rsp)
    0.00 :   9551:   mov    %rax,%r14
    0.00 :   9554:   mov    %r10,0x38(%rsp)
    0.00 :   9559:   mov    %r9d,0x40(%rsp)
    0.00 :   955e:   jmp    956c <do_lookup_x+0x35c>
    0.00 :   9560:   add    $0x4,%r12
    0.00 :   9564:   test   $0x1,%al
    0.00 :   9566:   jne    9b63 <do_lookup_x+0x953>
    0.00 :   956c:   mov    (%r12),%eax
   15.19 :   9570:   mov    %eax,%edx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:413
    0.00 :   9572:   xor    %ebp,%edx
    0.00 :   9574:   shr    %edx
    0.00 :   9576:   jne    9560 <do_lookup_x+0x350>
   15.17 :   9578:   sub    $0x8,%rsp // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:416
    0.00 :   957c:   mov    %r12,%rax
    0.00 :   957f:   sub    0x328(%rbx),%rax
    0.00 :   9586:   push   %r14
    0.00 :   9588:   sar    $0x2,%rax
    0.00 :   958c:   mov    %eax,%edx
    0.00 :   958e:   lea    (%rdx,%rdx,2),%rdx
    0.00 :   9592:   lea    0x88(%rsp),%rcx
    0.00 :   959a:   lea    0x0(%r13,%rdx,8),%r9
    0.00 :   959f:   push   %rcx
    0.00 :   95a0:   push   %rbx
    0.00 :   95a1:   push   %r15
    0.00 :   95a3:   push   %rax
    0.00 :   95a4:   mov    0x110(%rsp),%r8d
    0.00 :   95ac:   mov    0x100(%rsp),%ecx
    0.00 :   95b3:   mov    0xf8(%rsp),%rdx
    0.00 :   95bb:   mov    0x40(%rsp),%rsi
    0.00 :   95c0:   mov    0x38(%rsp),%rdi
    0.00 :   95c5:   call   9070 <check_match>
    0.00 :   95ca:   add    $0x30,%rsp
    0.00 :   95ce:   test   %rax,%rax
    0.00 :   95d1:   jne    9d69 <do_lookup_x+0xb59>
    0.00 :   95d7:   mov    (%r12),%eax
    0.00 :   95db:   jmp    9560 <do_lookup_x+0x350>
    0.00 :   95dd:   nopl   (%rax)
    0.00 :   95e0:   xor    %eax,%eax
    0.00 :   95e2:   add    $0x88,%rsp
    0.00 :   95e9:   pop    %rbx
    0.00 :   95ea:   pop    %rbp
    0.00 :   95eb:   pop    %r12
    0.00 :   95ed:   pop    %r13
    0.00 :   95ef:   pop    %r14
    0.00 :   95f1:   pop    %r15
    0.00 :   95f3:   ret
    0.00 :   95f4:   nopl   0x0(%rax)
    0.00 :   95f8:   mov    0xe8(%rsp),%rax
    0.00 :   9600:   testb  $0x3,0x334(%rax)
    0.00 :   9607:   jne    94cc <do_lookup_x+0x2bc>
    0.00 :   960d:   test   %r9d,%r9d
    0.00 :   9610:   jne    9b8f <do_lookup_x+0x97f>
    0.00 :   9616:   testb  $0x1,0xe0(%rsp)
    0.00 :   961e:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9624:   mov    0x10(%rsp),%rax
    0.00 :   9629:   cmpq   $0x0,0x8(%rax)
    0.00 :   962e:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9634:   cmpw   $0x0,0x6(%rax)
    0.00 :   9639:   jne    94cc <do_lookup_x+0x2bc>
    0.00 :   963f:   mov    0x8(%rbx),%rdx
    0.00 :   9643:   mov    0x8(%rsp),%rsi
    0.00 :   9648:   xor    %eax,%eax
    0.00 :   964a:   mov    %rcx,0x48(%rsp)
    0.00 :   964f:   lea    0x22772(%rip),%rdi        # 2bdc8 <__PRETTY_FUNCTION__.9+0xd8>
    0.00 :   9656:   mov    %r9d,0x40(%rsp)
    0.00 :   965b:   mov    %r10,0x38(%rsp)
    0.00 :   9660:   mov    %r11d,0x30(%rsp)
    0.00 :   9665:   mov    %r8d,0x28(%rsp)
    0.00 :   966a:   call   d480 <_dl_error_printf>
    0.00 :   966f:   mov    0x48(%rsp),%rcx
    0.00 :   9674:   mov    0x40(%rsp),%r9d
    0.00 :   9679:   mov    0x38(%rsp),%r10
    0.00 :   967e:   mov    0x30(%rsp),%r11d
    0.00 :   9683:   mov    0x28(%rsp),%r8d
    0.00 :   9688:   jmp    9bd8 <do_lookup_x+0x9c8>
    0.00 :   968d:   nopl   (%rax)
    0.00 :   9690:   mov    0x30(%rbx),%rax
    0.00 :   9694:   mov    %r15,0x48(%rsp)
    0.00 :   9699:   lea    0x2b960(%rip),%r15        # 35000 <_rtld_global>
    0.00 :   96a0:   mov    %r11d,%r12d
    0.00 :   96a3:   mov    %rcx,0x40(%rsp)
    0.00 :   96a8:   lea    0x0(,%rax,4),%rsi
    0.00 :   96b0:   mov    %rax,0x20(%rsp)
    0.00 :   96b5:   lea    (%rsi,%rax,1),%rbp
    0.00 :   96b9:   mov    %r9d,0x30(%rsp)
    0.00 :   96be:   shl    $0x5,%rbp
    0.00 :   96c2:   mov    %rsi,0x28(%rsp)
    0.00 :   96c7:   lea    0x28(%r15,%rbp,1),%rax
    0.00 :   96cc:   add    %r15,%rbp
    0.00 :   96cf:   mov    %rax,0x38(%rsp)
    0.00 :   96d4:   mov    %rax,%rdi
    0.00 :   96d7:   call   *0x2b31b(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   96dd:   mov    0x50(%rbp),%r11
    0.00 :   96e1:   mov    0x58(%rbp),%r14
    0.00 :   96e5:   mov    0x30(%rsp),%r9d
    0.00 :   96ea:   mov    0x40(%rsp),%rcx
    0.00 :   96ef:   test   %r11,%r11
    0.00 :   96f2:   je     9aba <do_lookup_x+0x8aa>
    0.00 :   96f8:   mov    %r12d,%eax
    0.00 :   96fb:   xor    %edx,%edx
    0.00 :   96fd:   lea    -0x2(%r14),%rdi
    0.00 :   9701:   mov    %r11,0x30(%rsp)
    0.00 :   9706:   mov    %rax,%r8
    0.00 :   9709:   mov    %rax,0x68(%rsp)
    0.00 :   970e:   div    %r14
    0.00 :   9711:   mov    %r9d,0x5c(%rsp)
    0.00 :   9716:   mov    %rbx,0x50(%rsp)
    0.00 :   971b:   mov    %r8,%rax
    0.00 :   971e:   mov    %r14,%rbx
    0.00 :   9721:   mov    %rdx,%rsi
    0.00 :   9724:   xor    %edx,%edx
    0.00 :   9726:   div    %rdi
    0.00 :   9729:   mov    %rsi,0x60(%rsp)
    0.00 :   972e:   mov    %r12d,%eax
    0.00 :   9731:   mov    %eax,%r13d
    0.00 :   9734:   lea    0x1(%rdx),%r15
    0.00 :   9738:   mov    %r15,%rdx
    0.00 :   973b:   mov    %r15,%r12
    0.00 :   973e:   mov    %rsi,%r15
    0.00 :   9741:   shl    $0x5,%rdx
    0.00 :   9745:   mov    %rdx,%r14
    0.00 :   9748:   mov    0x30(%rsp),%rax
    0.00 :   974d:   mov    %r15,%rbp
    0.00 :   9750:   shl    $0x5,%rbp
    0.00 :   9754:   add    %rax,%rbp
    0.00 :   9757:   mov    %r14,%rax
    0.00 :   975a:   mov    %r12,%r14
    0.00 :   975d:   mov    %rbx,%r12
    0.00 :   9760:   mov    %rax,%rbx
    0.00 :   9763:   jmp    9780 <do_lookup_x+0x570>
    0.00 :   9765:   nopl   (%rax)
    0.00 :   9768:   test   %rdi,%rdi
    0.00 :   976b:   je     9860 <do_lookup_x+0x650>
    0.00 :   9771:   add    %r14,%r15
    0.00 :   9774:   add    %rbx,%rbp
    0.00 :   9777:   cmp    %r12,%r15
    0.00 :   977a:   jae    99e0 <do_lookup_x+0x7d0>
    0.00 :   9780:   mov    0x8(%rbp),%rdi
    0.00 :   9784:   cmp    0x0(%rbp),%r13d
    0.00 :   9788:   jne    9768 <do_lookup_x+0x558>
    0.00 :   978a:   mov    0x8(%rsp),%rsi
    0.00 :   978f:   call   23430 <strcmp>
    0.00 :   9794:   test   %eax,%eax
    0.00 :   9796:   jne    9771 <do_lookup_x+0x561>
    0.00 :   9798:   mov    0x5c(%rsp),%r9d
    0.00 :   979d:   mov    0x40(%rsp),%rcx
    0.00 :   97a2:   mov    0x50(%rsp),%rbx
    0.00 :   97a7:   test   %r9d,%r9d
    0.00 :   97aa:   je     9d98 <do_lookup_x+0xb88>
    0.00 :   97b0:   movq   %rcx,%xmm0
    0.00 :   97b5:   movq   %rbx,%xmm2
    0.00 :   97ba:   punpcklqdq %xmm2,%xmm0
    0.00 :   97be:   mov    0x18(%rsp),%rax
    0.00 :   97c3:   mov    0x38(%rsp),%rdi
    0.00 :   97c8:   movups %xmm0,(%rax)
    0.00 :   97cb:   call   *0x2b21f(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   97d1:   jmp    94f7 <do_lookup_x+0x2e7>
    0.00 :   97d6:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   97e0:   mov    0x2b2ce(%rip),%eax        # 34ab4 <_rtld_global_ro+0x54>
    0.00 :   97e6:   test   %eax,%eax
    0.00 :   97e8:   je     94eb <do_lookup_x+0x2db>
    0.00 :   97ee:   mov    0x18(%rsp),%rax
    0.00 :   97f3:   cmpq   $0x0,(%rax)
    0.00 :   97f7:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   97fd:   movq   %rcx,%xmm0
    0.00 :   9802:   movq   %rbx,%xmm1
    0.00 :   9807:   punpcklqdq %xmm1,%xmm0
    0.00 :   980b:   movups %xmm0,(%rax)
    0.00 :   980e:   jmp    92f9 <do_lookup_x+0xe9>
    0.00 :   9813:   nopl   0x0(%rax,%rax,1)
    0.00 :   9818:   mov    0x28(%rsp),%r8d
    0.00 :   981d:   mov    0x30(%rsp),%r13
    0.00 :   9822:   mov    0x38(%rsp),%r11d
    0.00 :   9827:   mov    0xc0(%rsp),%rbp
    0.00 :   982f:   mov    0xd8(%rsp),%r14
    0.00 :   9837:   mov    0x40(%rsp),%r10
    0.00 :   983c:   mov    0x48(%rsp),%r9d
    0.00 :   9841:   cmpl   $0x1,0x74(%rsp)
    0.00 :   9846:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   984c:   mov    0x78(%rsp),%rcx
    0.00 :   9851:   test   %rcx,%rcx
    0.00 :   9854:   jne    94a0 <do_lookup_x+0x290>
    0.00 :   985a:   jmp    92f9 <do_lookup_x+0xe9>
    0.00 :   985f:   nop
    0.00 :   9860:   mov    0x28(%rsp),%rdi
    0.00 :   9865:   mov    0x20(%rsp),%rdx
    0.00 :   986a:   mov    %r14,%r15
    0.00 :   986d:   mov    %r12,%r14
    0.00 :   9870:   lea    (%r14,%r14,2),%rax
    0.00 :   9874:   mov    0x40(%rsp),%rcx
    0.00 :   9879:   mov    0x50(%rsp),%rbx
    0.00 :   987e:   mov    %r13d,%r12d
    0.00 :   9881:   add    %rdi,%rdx
    0.00 :   9884:   mov    0x30(%rsp),%r11
    0.00 :   9889:   mov    0x60(%rsp),%rsi
    0.00 :   988e:   lea    0x2b76b(%rip),%rdi        # 35000 <_rtld_global>
    0.00 :   9895:   shl    $0x5,%rdx
    0.00 :   9899:   mov    0x5c(%rsp),%r9d
    0.00 :   989e:   mov    0x60(%rdi,%rdx,1),%rdx
    0.00 :   98a3:   shl    $0x2,%rdx
    0.00 :   98a7:   cmp    %rax,%rdx
    0.00 :   98aa:   jae    9c00 <do_lookup_x+0x9f0>
    0.00 :   98b0:   mov    (%rcx),%edx
    0.00 :   98b2:   mov    0x48(%rsp),%rax
    0.00 :   98b7:   mov    %r15,%rdi
    0.00 :   98ba:   shl    $0x5,%rdi
    0.00 :   98be:   add    %rdx,%rax
    0.00 :   98c1:   mov    %rax,%rdx
    0.00 :   98c4:   test   %r9d,%r9d
    0.00 :   98c7:   je     9959 <do_lookup_x+0x749>
    0.00 :   98cd:   mov    %rsi,%rax
    0.00 :   98d0:   shl    $0x5,%rax
    0.00 :   98d4:   add    %r11,%rax
    0.00 :   98d7:   jmp    98ef <do_lookup_x+0x6df>
    0.00 :   98d9:   nopl   0x0(%rax)
    0.00 :   98e0:   add    %r15,%rsi
    0.00 :   98e3:   add    %rdi,%rax
    0.00 :   98e6:   cmp    %r14,%rsi
    0.00 :   98e9:   jae    99f4 <do_lookup_x+0x7e4>
    0.00 :   98ef:   cmpq   $0x0,0x8(%rax)
    0.00 :   98f4:   jne    98e0 <do_lookup_x+0x6d0>
    0.00 :   98f6:   mov    0x10(%rsp),%rsi
    0.00 :   98fb:   mov    %r12d,(%rax)
    0.00 :   98fe:   mov    %rdx,0x8(%rax)
    0.00 :   9902:   mov    %rsi,0x10(%rax)
    0.00 :   9906:   mov    0xe8(%rsp),%rsi
    0.00 :   990e:   mov    %rsi,0x18(%rax)
    0.00 :   9912:   mov    0x20(%rsp),%rsi
    0.00 :   9917:   mov    0x28(%rsp),%rax
    0.00 :   991c:   mov    %rcx,0x8(%rsp)
    0.00 :   9921:   mov    0x38(%rsp),%rdi
    0.00 :   9926:   add    %rsi,%rax
    0.00 :   9929:   lea    0x2b6d0(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   9930:   shl    $0x5,%rax
    0.00 :   9934:   addq   $0x1,0x60(%rsi,%rax,1)
    0.00 :   993a:   call   *0x2b0b0(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   9940:   mov    0x18(%rsp),%rax
    0.00 :   9945:   mov    0x8(%rsp),%rcx
    0.00 :   994a:   mov    %rbx,0x8(%rax)
    0.00 :   994e:   mov    %rcx,(%rax)
    0.00 :   9951:   jmp    94f7 <do_lookup_x+0x2e7>
    0.00 :   9956:   sub    %r14,%rsi
    0.00 :   9959:   mov    %rsi,%rax
    0.00 :   995c:   shl    $0x5,%rax
    0.00 :   9960:   add    %r11,%rax
    0.00 :   9963:   jmp    9973 <do_lookup_x+0x763>
    0.00 :   9965:   nopl   (%rax)
    0.00 :   9968:   add    %r15,%rsi
    0.00 :   996b:   add    %rdi,%rax
    0.00 :   996e:   cmp    %r14,%rsi
    0.00 :   9971:   jae    9956 <do_lookup_x+0x746>
    0.00 :   9973:   cmpq   $0x0,0x8(%rax)
    0.00 :   9978:   jne    9968 <do_lookup_x+0x758>
    0.00 :   997a:   mov    %r12d,(%rax)
    0.00 :   997d:   mov    %rdx,0x8(%rax)
    0.00 :   9981:   mov    %rcx,0x10(%rax)
    0.00 :   9985:   mov    %rbx,0x18(%rax)
    0.00 :   9989:   movzbl 0x334(%rbx),%eax
    0.00 :   9990:   and    $0x3,%eax
    0.00 :   9993:   cmp    $0x2,%al
    0.00 :   9995:   jne    9912 <do_lookup_x+0x702>
    0.00 :   999b:   cmpb   $0x0,0x337(%rbx)
    0.00 :   99a2:   jne    9912 <do_lookup_x+0x702>
    0.00 :   99a8:   testb  $0x8,0xd0(%rsp)
    0.00 :   99b0:   je     9da2 <do_lookup_x+0xb92>
    0.00 :   99b6:   cmpb   $0x0,0x338(%rbx)
    0.00 :   99bd:   jne    9912 <do_lookup_x+0x702>
    0.00 :   99c3:   testb  $0x4,0x2b096(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   99ca:   jne    9dd9 <do_lookup_x+0xbc9>
    0.00 :   99d0:   movb   $0x1,0x338(%rbx)
    0.00 :   99d7:   jmp    9912 <do_lookup_x+0x702>
    0.00 :   99dc:   nopl   0x0(%rax)
    0.00 :   99e0:   mov    %rbx,%rax
    0.00 :   99e3:   mov    %r12,%rbx
    0.00 :   99e6:   mov    %r14,%r12
    0.00 :   99e9:   sub    %rbx,%r15
    0.00 :   99ec:   mov    %rax,%r14
    0.00 :   99ef:   jmp    9748 <do_lookup_x+0x538>
    0.00 :   99f4:   sub    %r14,%rsi
    0.00 :   99f7:   jmp    98cd <do_lookup_x+0x6bd>
    0.00 :   99fc:   mov    0x8(%rsp),%rax
    0.00 :   9a01:   xor    %edx,%edx
    0.00 :   9a03:   movzbl (%rax),%ecx
    0.00 :   9a06:   test   %rcx,%rcx
    0.00 :   9a09:   je     9aad <do_lookup_x+0x89d>
    0.00 :   9a0f:   movzbl 0x1(%rax),%eax
    0.00 :   9a13:   test   %al,%al
    0.00 :   9a15:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a1b:   shl    $0x4,%rcx
    0.00 :   9a1f:   add    %rax,%rcx
    0.00 :   9a22:   mov    0x8(%rsp),%rax
    0.00 :   9a27:   movzbl 0x2(%rax),%eax
    0.00 :   9a2b:   test   %al,%al
    0.00 :   9a2d:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a33:   shl    $0x4,%rcx
    0.00 :   9a37:   add    %rax,%rcx
    0.00 :   9a3a:   mov    0x8(%rsp),%rax
    0.00 :   9a3f:   movzbl 0x3(%rax),%eax
    0.00 :   9a43:   test   %al,%al
    0.00 :   9a45:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a4b:   shl    $0x4,%rcx
    0.00 :   9a4f:   add    %rax,%rcx
    0.00 :   9a52:   mov    0x8(%rsp),%rax
    0.00 :   9a57:   movzbl 0x4(%rax),%eax
    0.00 :   9a5b:   test   %al,%al
    0.00 :   9a5d:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a63:   shl    $0x4,%rcx
    0.00 :   9a67:   add    %rcx,%rax
    0.00 :   9a6a:   mov    0x8(%rsp),%rcx
    0.00 :   9a6f:   lea    0x5(%rcx),%rdx
    0.00 :   9a73:   movzbl 0x5(%rcx),%ecx
    0.00 :   9a77:   test   %cl,%cl
    0.00 :   9a79:   je     9a9c <do_lookup_x+0x88c>
    0.00 :   9a7b:   shl    $0x4,%rax
    0.00 :   9a7f:   add    $0x1,%rdx
    0.00 :   9a83:   add    %rax,%rcx
    0.00 :   9a86:   mov    %rcx,%rax
    0.00 :   9a89:   shr    $0x18,%rax
    0.00 :   9a8d:   and    $0xf0,%eax
    0.00 :   9a92:   xor    %rcx,%rax
    0.00 :   9a95:   movzbl (%rdx),%ecx
    0.00 :   9a98:   test   %cl,%cl
    0.00 :   9a9a:   jne    9a7b <do_lookup_x+0x86b>
    0.00 :   9a9c:   and    $0xfffffff,%eax
    0.00 :   9aa1:   xor    %edx,%edx
    0.00 :   9aa3:   mov    %rax,%rcx
    0.00 :   9aa6:   div    %rdi
    0.00 :   9aa9:   shl    $0x2,%rdx
    0.00 :   9aad:   mov    0x20(%rsp),%rax
    0.00 :   9ab2:   mov    %rcx,(%rax)
    0.00 :   9ab5:   jmp    93c7 <do_lookup_x+0x1b7>
    0.00 :   9aba:   mov    %r9d,0x30(%rsp)
    0.00 :   9abf:   mov    $0x1f,%esi
    0.00 :   9ac4:   mov    $0x20,%edi
    0.00 :   9ac9:   mov    %rcx,0x8(%rsp)
    0.00 :   9ace:   call   *0x2af14(%rip)        # 349e8 <__rtld_calloc>
    0.00 :   9ad4:   mov    %rax,%r11
    0.00 :   9ad7:   test   %rax,%rax
    0.00 :   9ada:   je     9dfe <do_lookup_x+0xbee>
    0.00 :   9ae0:   mov    %rax,0x50(%rbp)
    0.00 :   9ae4:   mov    0x2aef5(%rip),%rax        # 349e0 <__rtld_free>
    0.00 :   9aeb:   mov    %r12d,%r8d
    0.00 :   9aee:   mov    $0x1f,%r14d
    0.00 :   9af4:   movq   $0x1f,0x58(%rbp)
    0.00 :   9afc:   mov    0x30(%rsp),%r9d
    0.00 :   9b01:   mov    %rax,0x68(%rbp)
    0.00 :   9b05:   mov    0x8(%rsp),%rcx
    0.00 :   9b0a:   movabs $0x842108421084211,%rax
    0.00 :   9b14:   mul    %r8
    0.00 :   9b17:   mov    %r8,%rax
    0.00 :   9b1a:   sub    %rdx,%rax
    0.00 :   9b1d:   shr    %rax
    0.00 :   9b20:   lea    (%rdx,%rax,1),%rsi
    0.00 :   9b24:   shr    $0x4,%rsi
    0.00 :   9b28:   mov    %rsi,%rax
    0.00 :   9b2b:   shl    $0x5,%rax
    0.00 :   9b2f:   sub    %rsi,%rax
    0.00 :   9b32:   mov    %r8,%rsi
    0.00 :   9b35:   sub    %rax,%rsi
    0.00 :   9b38:   movabs $0x469ee58469ee5847,%rax
    0.00 :   9b42:   imul   %r8
    0.00 :   9b45:   mov    %rdx,%rax
    0.00 :   9b48:   and    $0xfffffffffffffff8,%rdx
    0.00 :   9b4c:   sar    $0x3,%rax
    0.00 :   9b50:   sub    %rax,%rdx
    0.00 :   9b53:   lea    (%rax,%rdx,4),%rax
    0.00 :   9b57:   sub    %rax,%r8
    0.00 :   9b5a:   lea    0x1(%r8),%r15
    0.00 :   9b5e:   jmp    98b0 <do_lookup_x+0x6a0>
    0.00 :   9b63:   mov    %ebp,%r11d
    0.00 :   9b66:   mov    0x28(%rsp),%r8d
    0.00 :   9b6b:   mov    0x30(%rsp),%r13
    0.00 :   9b70:   mov    0xc0(%rsp),%rbp
    0.00 :   9b78:   mov    0xd8(%rsp),%r14
    0.00 :   9b80:   mov    0x38(%rsp),%r10
    0.00 :   9b85:   mov    0x40(%rsp),%r9d
    0.00 :   9b8a:   jmp    9841 <do_lookup_x+0x631>
    0.00 :   9b8f:   mov    0x8(%rbx),%rdx
    0.00 :   9b93:   mov    0x8(%rsp),%rsi
    0.00 :   9b98:   xor    %eax,%eax
    0.00 :   9b9a:   mov    %rcx,0x48(%rsp)
    0.00 :   9b9f:   lea    0x221d2(%rip),%rdi        # 2bd78 <__PRETTY_FUNCTION__.9+0x88>
    0.00 :   9ba6:   mov    %r9d,0x40(%rsp)
    0.00 :   9bab:   mov    %r10,0x38(%rsp)
    0.00 :   9bb0:   mov    %r11d,0x30(%rsp)
    0.00 :   9bb5:   mov    %r8d,0x28(%rsp)
    0.00 :   9bba:   call   d480 <_dl_error_printf>
    0.00 :   9bbf:   mov    0x28(%rsp),%r8d
    0.00 :   9bc4:   mov    0x30(%rsp),%r11d
    0.00 :   9bc9:   mov    0x38(%rsp),%r10
    0.00 :   9bce:   mov    0x40(%rsp),%r9d
    0.00 :   9bd3:   mov    0x48(%rsp),%rcx
    0.00 :   9bd8:   testb  $0x1,0x344(%rbx)
    0.00 :   9bdf:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9be5:   mov    0x8(%rbx),%rsi
    0.00 :   9be9:   mov    0x8(%rsp),%rdx
    0.00 :   9bee:   lea    0x22233(%rip),%rcx        # 2be28 <__PRETTY_FUNCTION__.9+0x138>
    0.00 :   9bf5:   xor    %edi,%edi
    0.00 :   9bf7:   call   1070 <_dl_signal_error@plt>
    0.00 :   9bfc:   nopl   0x0(%rax)
    0.00 :   9c00:   lea    0x1(%r14),%rdi
    0.00 :   9c04:   mov    %r11,0x50(%rsp)
    0.00 :   9c09:   call   aec0 <_dl_higher_prime_number>
    0.00 :   9c0e:   mov    $0x20,%edi
    0.00 :   9c13:   mov    %rax,%rbp
    0.00 :   9c16:   mov    %rax,%rsi
    0.00 :   9c19:   call   *0x2adc9(%rip)        # 349e8 <__rtld_calloc>
    0.00 :   9c1f:   mov    %rax,0x30(%rsp)
    0.00 :   9c24:   test   %rax,%rax
    0.00 :   9c27:   je     9dfe <do_lookup_x+0xbee>
    0.00 :   9c2d:   lea    -0x2(%rbp),%rax
    0.00 :   9c31:   mov    0x50(%rsp),%r11
    0.00 :   9c36:   mov    0x30(%rsp),%r10
    0.00 :   9c3b:   mov    0x40(%rsp),%rcx
    0.00 :   9c40:   mov    0x5c(%rsp),%r9d
    0.00 :   9c45:   mov    %rax,0x8(%rsp)
    0.00 :   9c4a:   mov    %r14,%rax
    0.00 :   9c4d:   shl    $0x5,%rax
    0.00 :   9c51:   test   %r14,%r14
    0.00 :   9c54:   mov    %r11,%rdi
    0.00 :   9c57:   lea    (%rax,%r11,1),%r15
    0.00 :   9c5b:   je     9cda <do_lookup_x+0xaca>
    0.00 :   9c5d:   nopl   (%rax)
    0.00 :   9c60:   mov    0x8(%rdi),%rax
    0.00 :   9c64:   test   %rax,%rax
    0.00 :   9c67:   je     9cd1 <do_lookup_x+0xac1>
    0.00 :   9c69:   mov    (%rdi),%r14d
    0.00 :   9c6c:   movq   %rax,%xmm0
    0.00 :   9c71:   xor    %edx,%edx
    0.00 :   9c73:   mov    0x18(%rdi),%r13
    0.00 :   9c77:   movhps 0x10(%rdi),%xmm0
    0.00 :   9c7b:   mov    %r14,%rax
    0.00 :   9c7e:   mov    %r14,%r8
    0.00 :   9c81:   div    %rbp
    0.00 :   9c84:   mov    %r14,%rax
    0.00 :   9c87:   mov    %rdx,%rsi
    0.00 :   9c8a:   xor    %edx,%edx
    0.00 :   9c8c:   divq   0x8(%rsp)
    0.00 :   9c91:   add    $0x1,%rdx
    0.00 :   9c95:   mov    %rdx,%r14
    0.00 :   9c98:   shl    $0x5,%r14
    0.00 :   9c9c:   mov    %rsi,%rax
    0.00 :   9c9f:   shl    $0x5,%rax
    0.00 :   9ca3:   add    %r10,%rax
    0.00 :   9ca6:   jmp    9cbf <do_lookup_x+0xaaf>
    0.00 :   9ca8:   nopl   0x0(%rax,%rax,1)
    0.00 :   9cb0:   add    %rdx,%rsi
    0.00 :   9cb3:   add    %r14,%rax
    0.00 :   9cb6:   cmp    %rbp,%rsi
    0.00 :   9cb9:   jae    9d50 <do_lookup_x+0xb40>
    0.00 :   9cbf:   cmpq   $0x0,0x8(%rax)
    0.00 :   9cc4:   jne    9cb0 <do_lookup_x+0xaa0>
    0.00 :   9cc6:   mov    %r8d,(%rax)
    0.00 :   9cc9:   mov    %r13,0x18(%rax)
    0.00 :   9ccd:   movups %xmm0,0x8(%rax)
    0.00 :   9cd1:   add    $0x20,%rdi
    0.00 :   9cd5:   cmp    %rdi,%r15
    0.00 :   9cd8:   jne    9c60 <do_lookup_x+0xa50>
    0.00 :   9cda:   mov    0x28(%rsp),%rax
    0.00 :   9cdf:   mov    0x20(%rsp),%rsi
    0.00 :   9ce4:   mov    %r11,%rdi
    0.00 :   9ce7:   mov    %rbp,%r14
    0.00 :   9cea:   mov    %r9d,0x50(%rsp)
    0.00 :   9cef:   lea    (%rax,%rsi,1),%r13
    0.00 :   9cf3:   lea    0x2b306(%rip),%rax        # 35000 <_rtld_global>
    0.00 :   9cfa:   mov    %rcx,0x40(%rsp)
    0.00 :   9cff:   shl    $0x5,%r13
    0.00 :   9d03:   add    %rax,%r13
    0.00 :   9d06:   call   *0x68(%r13)
    0.00 :   9d0a:   xor    %edx,%edx
    0.00 :   9d0c:   mov    0x30(%rsp),%r11
    0.00 :   9d11:   mov    %rbp,0x58(%r13)
    0.00 :   9d15:   mov    0x2acc4(%rip),%rax        # 349e0 <__rtld_free>
    0.00 :   9d1c:   mov    0x40(%rsp),%rcx
    0.00 :   9d21:   mov    %r11,0x50(%r13)
    0.00 :   9d25:   mov    0x50(%rsp),%r9d
    0.00 :   9d2a:   mov    %rax,0x68(%r13)
    0.00 :   9d2e:   mov    0x68(%rsp),%rax
    0.00 :   9d33:   div    %rbp
    0.00 :   9d36:   mov    0x68(%rsp),%rax
    0.00 :   9d3b:   mov    %rdx,%rsi
    0.00 :   9d3e:   xor    %edx,%edx
    0.00 :   9d40:   divq   0x8(%rsp)
    0.00 :   9d45:   lea    0x1(%rdx),%r15
    0.00 :   9d49:   jmp    98b0 <do_lookup_x+0x6a0>
    0.00 :   9d4e:   xchg   %ax,%ax
    0.00 :   9d50:   sub    %rbp,%rsi
    0.00 :   9d53:   jmp    9c9c <do_lookup_x+0xa8c>
    0.00 :   9d58:   mov    %rcx,%rax
    0.00 :   9d5b:   xor    %edx,%edx
    0.00 :   9d5d:   div    %rdi
    0.00 :   9d60:   shl    $0x2,%rdx
    0.00 :   9d64:   jmp    9aad <do_lookup_x+0x89d>
    0.00 :   9d69:   mov    %ebp,%r11d
    0.00 :   9d6c:   mov    0x28(%rsp),%r8d
    0.00 :   9d71:   mov    0x30(%rsp),%r13
    0.00 :   9d76:   mov    %rax,%rcx
    0.00 :   9d79:   mov    0xc0(%rsp),%rbp
    0.00 :   9d81:   mov    0xd8(%rsp),%r14
    0.00 :   9d89:   mov    0x38(%rsp),%r10
    0.00 :   9d8e:   mov    0x40(%rsp),%r9d
    0.00 :   9d93:   jmp    94a0 <do_lookup_x+0x290>
    0.00 :   9d98:   movdqu 0x10(%rbp),%xmm0
    0.00 :   9d9d:   jmp    97be <do_lookup_x+0x5ae>
    0.00 :   9da2:   testb  $0x4,0x2acb7(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9da9:   jne    9db7 <do_lookup_x+0xba7>
    0.00 :   9dab:   movb   $0x1,0x337(%rbx)
    0.00 :   9db2:   jmp    9912 <do_lookup_x+0x702>
    0.00 :   9db7:   mov    0x30(%rbx),%rdx
    0.00 :   9dbb:   mov    0x8(%rbx),%rsi
    0.00 :   9dbf:   xor    %eax,%eax
    0.00 :   9dc1:   mov    %rcx,0x8(%rsp)
    0.00 :   9dc6:   lea    0x2209b(%rip),%rdi        # 2be68 <__PRETTY_FUNCTION__.9+0x178>
    0.00 :   9dcd:   call   d1d0 <_dl_debug_printf>
    0.00 :   9dd2:   mov    0x8(%rsp),%rcx
    0.00 :   9dd7:   jmp    9dab <do_lookup_x+0xb9b>
    0.00 :   9dd9:   mov    0x30(%rbx),%rdx
    0.00 :   9ddd:   mov    0x8(%rbx),%rsi
    0.00 :   9de1:   xor    %eax,%eax
    0.00 :   9de3:   mov    %rcx,0x8(%rsp)
    0.00 :   9de8:   lea    0x22079(%rip),%rdi        # 2be68 <__PRETTY_FUNCTION__.9+0x178>
    0.00 :   9def:   call   d1d0 <_dl_debug_printf>
    0.00 :   9df4:   mov    0x8(%rsp),%rcx
    0.00 :   9df9:   jmp    99d0 <do_lookup_x+0x7c0>
    0.00 :   9dfe:   mov    0x38(%rsp),%rdi
    0.00 :   9e03:   call   *0x2abe7(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   9e09:   lea    0x1fe4d(%rip),%rdi        # 29c5d <_sys_errname+0x89d>
    0.00 :   9e10:   xor    %eax,%eax
    0.00 :   9e12:   call   d530 <_dl_fatal_printf>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   69.38 [nf_tables][19bcc]
   14.02 [nf_tables][19bc0]
   10.41 [nf_tables][19c14]
    6.18 [nf_tables][19bc5]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (20 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000019bc0 <nft_set_do_lookup>:
         : 6     nft_set_do_lookup():
   14.02 :   19bc0:  call   19bc5 <nft_set_do_lookup+0x5> // [nf_tables][19bc0]
    6.18 :   19bc5:  mov    0xc0(%rsi),%rax // [nf_tables][19bc5]
   69.38 :   19bcc:  cmp    $0x0,%rax // [nf_tables][19bcc]
    0.00 :   19bd2:  je     19c14 <nft_set_do_lookup+0x54>
    0.00 :   19bd4:  cmp    $0x0,%rax
    0.00 :   19bda:  je     19c19 <nft_set_do_lookup+0x59>
    0.00 :   19bdc:  cmp    $0x0,%rax
    0.00 :   19be2:  je     19c1e <nft_set_do_lookup+0x5e>
    0.00 :   19be4:  cmp    $0x0,%rax
    0.00 :   19bea:  je     19c23 <nft_set_do_lookup+0x63>
    0.00 :   19bec:  cmp    $0x0,%rax
    0.00 :   19bf2:  je     19c28 <nft_set_do_lookup+0x68>
    0.00 :   19bf4:  cmp    $0x0,%rax
    0.00 :   19bfa:  je     19c2d <nft_set_do_lookup+0x6d>
    0.00 :   19bfc:  cmp    $0x0,%rax
    0.00 :   19c02:  je     19c0f <nft_set_do_lookup+0x4f>
    0.00 :   19c04:  ud2
    0.00 :   19c06:  mov    (%rax),%rax
    0.00 :   19c09:  jmp    19c0e <nft_set_do_lookup+0x4e>
    0.00 :   19c0e:  int3
    0.00 :   19c0f:  jmp    19c14 <nft_set_do_lookup+0x54>
   10.41 :   19c14:  jmp    19c19 <nft_set_do_lookup+0x59> // [nf_tables][19c14]
    0.00 :   19c19:  jmp    19c1e <nft_set_do_lookup+0x5e>
    0.00 :   19c1e:  jmp    19c23 <nft_set_do_lookup+0x63>
    0.00 :   19c23:  jmp    19c28 <nft_set_do_lookup+0x68>
    0.00 :   19c28:  jmp    19c2d <nft_set_do_lookup+0x6d>
    0.00 :   19c2d:  jmp    19c32 <nft_set_do_lookup+0x72>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   46.34 dbt2-client[412ab5]
   26.24 dbt2-client[412bc6]
    6.89 dbt2-client[412bb7]
    5.84 dbt2-client[412ab2]
    5.47 dbt2-client[412a65]
    4.63 dbt2-client[412b2b]
    4.59 dbt2-client[412afb]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (19 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004129cd <db_worker>:
         : 6      db_worker():
    0.00 :   4129cd: push   %rbp
    0.00 :   4129ce: mov    %rsp,%rbp
    0.00 :   4129d1: sub    $0x130,%rsp
    0.00 :   4129d8: mov    %rdi,-0x128(%rbp)
    0.00 :   4129df: mov    -0x128(%rbp),%rax
    0.00 :   4129e6: mov    (%rax),%eax
    0.00 :   4129e8: mov    %eax,-0x4(%rbp)
    0.00 :   4129eb: lea    -0x120(%rbp),%rax
    0.00 :   4129f2: mov    %rax,%rdi
    0.00 :   4129f5: call   41207f <init_dbc>
    0.00 :   4129fa: test   %eax,%eax
    0.00 :   4129fc: je     412a08 <db_worker+0x3b>
    0.00 :   4129fe: mov    $0x0,%eax
    0.00 :   412a03: jmp    412c13 <db_worker+0x246>
    0.00 :   412a08: mov    0x9b32(%rip),%eax        # 41c540 <exiting>
    0.00 :   412a0e: test   %eax,%eax
    0.00 :   412a10: jne    412be7 <db_worker+0x21a>
    0.00 :   412a16: lea    -0x120(%rbp),%rax
    0.00 :   412a1d: mov    %rax,%rdi
    0.00 :   412a20: call   412747 <connect_to_db>
    0.00 :   412a25: cmp    $0x1,%eax
    0.00 :   412a28: je     412be7 <db_worker+0x21a>
    0.00 :   412a2e: mov    $0x416f08,%edx
    0.00 :   412a33: mov    $0x4a,%esi
    0.00 :   412a38: mov    $0x416f38,%edi
    0.00 :   412a3d: mov    $0x0,%eax
    0.00 :   412a42: call   40840f <log_error_message>
    0.00 :   412a47: mov    $0x416f60,%edi
    0.00 :   412a4c: call   407450 <puts@plt>
    0.00 :   412a51: mov    $0x1,%edi
    0.00 :   412a56: call   407300 <exit@plt>
    0.00 :   412a5b: mov    $0x0,%eax
    0.00 :   412a60: call   4132c8 <dequeue_transaction>
    5.47 :   412a65: mov    %rax,-0x10(%rbp) // dbt2-client[412a65]
    0.00 :   412a69: cmpq   $0x0,-0x10(%rbp)
    0.00 :   412a6e: jne    412a8e <db_worker+0xc1>
    0.00 :   412a70: mov    $0x416fa5,%edx
    0.00 :   412a75: mov    $0x56,%esi
    0.00 :   412a7a: mov    $0x416f38,%edi
    0.00 :   412a7f: mov    $0x0,%eax
    0.00 :   412a84: call   40840f <log_error_message>
    0.00 :   412a89: jmp    412be7 <db_worker+0x21a>
    0.00 :   412a8e: mov    -0x10(%rbp),%rax
    0.00 :   412a92: lea    0x10(%rax),%rdx
    0.00 :   412a96: mov    -0x10(%rbp),%rax
    0.00 :   412a9a: mov    0xc(%rax),%eax
    0.00 :   412a9d: lea    -0x120(%rbp),%rcx
    0.00 :   412aa4: mov    %rcx,%rsi
    0.00 :   412aa7: mov    %eax,%edi
    0.00 :   412aa9: call   4127af <process_transaction>
    0.00 :   412aae: mov    -0x10(%rbp),%rdx
    5.84 :   412ab2: mov    %eax,0x8(%rdx) // dbt2-client[412ab2]
   46.34 :   412ab5: mov    -0x10(%rbp),%rax // dbt2-client[412ab5]
    0.00 :   412ab9: mov    0x8(%rax),%eax
    0.00 :   412abc: test   %eax,%eax
    0.00 :   412abe: jne    412aed <db_worker+0x120>
    0.00 :   412ac0: mov    -0x10(%rbp),%rax
    0.00 :   412ac4: mov    0xc(%rax),%eax
    0.00 :   412ac7: cltq
    0.00 :   412ac9: mov    0x41c320(,%rax,8),%rax
    0.00 :   412ad1: mov    %rax,%rcx
    0.00 :   412ad4: mov    $0x416fb8,%edx
    0.00 :   412ad9: mov    $0x5d,%esi
    0.00 :   412ade: mov    $0x416f38,%edi
    0.00 :   412ae3: mov    $0x0,%eax
    0.00 :   412ae8: call   40840f <log_error_message>
    0.00 :   412aed: mov    -0x10(%rbp),%rax
    0.00 :   412af1: lea    0x8(%rax),%rdx
    0.00 :   412af5: mov    -0x10(%rbp),%rax
    0.00 :   412af9: mov    (%rax),%eax
    4.59 :   412afb: mov    %rdx,%rsi // dbt2-client[412afb]
    0.00 :   412afe: mov    %eax,%edi
    0.00 :   412b00: call   407adb <send_transaction_data>
    0.00 :   412b05: mov    %eax,-0x14(%rbp)
    0.00 :   412b08: cmpl   $0x0,-0x14(%rbp)
    0.00 :   412b0c: jne    412b27 <db_worker+0x15a>
    0.00 :   412b0e: mov    $0x416fda,%edx
    0.00 :   412b13: mov    $0x68,%esi
    0.00 :   412b18: mov    $0x416f38,%edi
    0.00 :   412b1d: mov    $0x0,%eax
    0.00 :   412b22: call   40840f <log_error_message>
    0.00 :   412b27: mov    -0x10(%rbp),%rax
    4.63 :   412b2b: mov    0xc(%rax),%eax // dbt2-client[412b2b]
    0.00 :   412b2e: movslq %eax,%rdx
    0.00 :   412b31: mov    %rdx,%rax
    0.00 :   412b34: shl    $0x2,%rax
    0.00 :   412b38: add    %rdx,%rax
    0.00 :   412b3b: shl    $0x3,%rax
    0.00 :   412b3f: add    $0xc8,%rax
    0.00 :   412b45: add    $0x41c8c0,%rax
    0.00 :   412b4b: mov    %rax,%rdi
    0.00 :   412b4e: call   407400 <pthread_mutex_lock@plt>
    0.00 :   412b53: mov    -0x10(%rbp),%rax
    0.00 :   412b57: mov    0xc(%rax),%eax
    0.00 :   412b5a: movslq %eax,%rdx
    0.00 :   412b5d: add    $0x5,%rdx
    0.00 :   412b61: mov    0x41c880(,%rdx,4),%edx
    0.00 :   412b68: sub    $0x1,%edx
    0.00 :   412b6b: cltq
    0.00 :   412b6d: add    $0x5,%rax
    0.00 :   412b71: mov    %edx,0x41c880(,%rax,4)
    0.00 :   412b78: mov    -0x10(%rbp),%rax
    0.00 :   412b7c: mov    0xc(%rax),%eax
    0.00 :   412b7f: movslq %eax,%rdx
    0.00 :   412b82: mov    %rdx,%rax
    0.00 :   412b85: shl    $0x2,%rax
    0.00 :   412b89: add    %rdx,%rax
    0.00 :   412b8c: shl    $0x3,%rax
    0.00 :   412b90: add    $0xc8,%rax
    0.00 :   412b96: add    $0x41c8c0,%rax
    0.00 :   412b9c: mov    %rax,%rdi
    0.00 :   412b9f: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   412ba4: mov    -0x10(%rbp),%rax
    0.00 :   412ba8: mov    %rax,%rdi
    0.00 :   412bab: call   413244 <recycle_node>
    0.00 :   412bb0: mov    0x9a69(%rip),%rax        # 41c620 <worker_count>
    6.89 :   412bb7: mov    -0x4(%rbp),%edx // dbt2-client[412bb7]
    0.00 :   412bba: movslq %edx,%rdx
    0.00 :   412bbd: shl    $0x2,%rdx
    0.00 :   412bc1: add    %rdx,%rax
    0.00 :   412bc4: mov    (%rax),%edx
   26.24 :   412bc6: add    $0x1,%edx // dbt2-client[412bc6]
    0.00 :   412bc9: mov    %edx,(%rax)
    0.00 :   412bcb: mov    0x9a56(%rip),%rax        # 41c628 <last_txn>
    0.00 :   412bd2: mov    -0x4(%rbp),%edx
    0.00 :   412bd5: movslq %edx,%rdx
    0.00 :   412bd8: shl    $0x3,%rdx
    0.00 :   412bdc: add    %rdx,%rax
    0.00 :   412bdf: mov    %rax,%rdi
    0.00 :   412be2: call   407250 <time@plt>
    0.00 :   412be7: mov    0x9953(%rip),%eax        # 41c540 <exiting>
    0.00 :   412bed: test   %eax,%eax
    0.00 :   412bef: je     412a5b <db_worker+0x8e>
    0.00 :   412bf5: lea    -0x120(%rbp),%rax
    0.00 :   412bfc: mov    %rax,%rdi
    0.00 :   412bff: call   41277b <disconnect_from_db>
    0.00 :   412c04: mov    $0x41c640,%edi
    0.00 :   412c09: call   4119dc <sem_wait>
    0.00 :   412c0e: mov    $0x0,%eax
    0.00 :   412c13: leave
    0.00 :   412c14: ret

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   20.57 dbt2-client[4129a6]
   19.03 dbt2-client[4129b2]
   14.35 dbt2-client[412858]
   14.01 dbt2-client[41289a]
   12.77 dbt2-client[4128ce]
    7.98 dbt2-client[4127af]
    6.15 dbt2-client[4128ba]
    5.13 dbt2-client[412873]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (16 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004127af <process_transaction>:
         : 6      process_transaction():
    7.98 :   4127af: push   %rbp // dbt2-client[4127af]
    0.00 :   4127b0: mov    %rsp,%rbp
    0.00 :   4127b3: sub    $0x30,%rsp
    0.00 :   4127b7: mov    %edi,-0x14(%rbp)
    0.00 :   4127ba: mov    %rsi,-0x20(%rbp)
    0.00 :   4127be: mov    %rdx,-0x28(%rbp)
    0.00 :   4127c2: cmpl   $0xa,-0x14(%rbp)
    0.00 :   4127c6: ja     412973 <process_transaction+0x1c4>
    0.00 :   4127cc: mov    -0x14(%rbp),%eax
    0.00 :   4127cf: mov    0x416ea8(,%rax,8),%rax
    0.00 :   4127d7: jmp    *%rax
    0.00 :   4127d9: mov    -0x20(%rbp),%rax
    0.00 :   4127dd: mov    0x30(%rax),%rcx
    0.00 :   4127e1: mov    -0x28(%rbp),%rdx
    0.00 :   4127e5: mov    -0x20(%rbp),%rax
    0.00 :   4127e9: mov    %rdx,%rsi
    0.00 :   4127ec: mov    %rax,%rdi
    0.00 :   4127ef: call   *%rcx
    0.00 :   4127f1: mov    %eax,-0x4(%rbp)
    0.00 :   4127f4: jmp    412998 <process_transaction+0x1e9>
    0.00 :   4127f9: mov    -0x20(%rbp),%rax
    0.00 :   4127fd: mov    0x28(%rax),%rcx
    0.00 :   412801: mov    -0x28(%rbp),%rdx
    0.00 :   412805: mov    -0x20(%rbp),%rax
    0.00 :   412809: mov    %rdx,%rsi
    0.00 :   41280c: mov    %rax,%rdi
    0.00 :   41280f: call   *%rcx
    0.00 :   412811: mov    %eax,-0x4(%rbp)
    0.00 :   412814: jmp    412998 <process_transaction+0x1e9>
    0.00 :   412819: mov    -0x28(%rbp),%rax
    0.00 :   41281d: movl   $0x1,0x10(%rax)
    0.00 :   412824: movl   $0x0,-0x8(%rbp)
    0.00 :   41282b: jmp    412873 <process_transaction+0xc4>
    0.00 :   41282d: mov    -0x28(%rbp),%rcx
    0.00 :   412831: mov    -0x8(%rbp),%eax
    0.00 :   412834: movslq %eax,%rdx
    0.00 :   412837: mov    %rdx,%rax
    0.00 :   41283a: add    %rax,%rax
    0.00 :   41283d: add    %rdx,%rax
    0.00 :   412840: lea    0x0(,%rax,8),%rdx
    0.00 :   412848: add    %rdx,%rax
    0.00 :   41284b: shl    $0x4,%rax
    0.00 :   41284f: add    %rcx,%rax
    0.00 :   412852: add    $0x1c,%rax
    0.00 :   412856: mov    (%rax),%edx
   14.35 :   412858: mov    -0x28(%rbp),%rax // dbt2-client[412858]
    0.00 :   41285c: mov    (%rax),%eax
    0.00 :   41285e: cmp    %eax,%edx
    0.00 :   412860: je     41286f <process_transaction+0xc0>
    0.00 :   412862: mov    -0x28(%rbp),%rax
    0.00 :   412866: movl   $0x0,0x10(%rax)
    0.00 :   41286d: jmp    41287f <process_transaction+0xd0>
    0.00 :   41286f: addl   $0x1,-0x8(%rbp)
    5.13 :   412873: mov    -0x28(%rbp),%rax // dbt2-client[412873]
    0.00 :   412877: mov    0xc(%rax),%eax
    0.00 :   41287a: cmp    %eax,-0x8(%rbp)
    0.00 :   41287d: jl     41282d <process_transaction+0x7e>
    0.00 :   41287f: mov    -0x20(%rbp),%rax
    0.00 :   412883: mov    0x38(%rax),%rcx
    0.00 :   412887: mov    -0x28(%rbp),%rdx
    0.00 :   41288b: mov    -0x20(%rbp),%rax
    0.00 :   41288f: mov    %rdx,%rsi
    0.00 :   412892: mov    %rax,%rdi
    0.00 :   412895: call   *%rcx
    0.00 :   412897: mov    %eax,-0x4(%rbp)
   14.01 :   41289a: cmpl   $0x0,-0x4(%rbp) // dbt2-client[41289a]
    0.00 :   41289e: je     412913 <process_transaction+0x164>
    0.00 :   4128a0: mov    -0x28(%rbp),%rax
    0.00 :   4128a4: mov    0x19d8(%rax),%eax
    0.00 :   4128aa: test   %eax,%eax
    0.00 :   4128ac: jne    412913 <process_transaction+0x164>
    0.00 :   4128ae: mov    -0x28(%rbp),%rax
    0.00 :   4128b2: movsd  0x1970(%rax),%xmm1
    6.15 :   4128ba: mov    -0x28(%rbp),%rax // dbt2-client[4128ba]
    0.00 :   4128be: movsd  0x19d0(%rax),%xmm2
    0.00 :   4128c6: movsd  0x4632(%rip),%xmm0        # 416f00 <s_dist+0x100>
   12.77 :   4128ce: subsd  %xmm2,%xmm0 // dbt2-client[4128ce]
    0.00 :   4128d2: mulsd  %xmm0,%xmm1
    0.00 :   4128d6: mov    -0x28(%rbp),%rax
    0.00 :   4128da: movsd  0x1978(%rax),%xmm2
    0.00 :   4128e2: movsd  0x4616(%rip),%xmm0        # 416f00 <s_dist+0x100>
    0.00 :   4128ea: addsd  %xmm0,%xmm2
    0.00 :   4128ee: mov    -0x28(%rbp),%rax
    0.00 :   4128f2: movsd  0x1980(%rax),%xmm0
    0.00 :   4128fa: addsd  %xmm2,%xmm0
    0.00 :   4128fe: mulsd  %xmm1,%xmm0
    0.00 :   412902: mov    -0x28(%rbp),%rax
    0.00 :   412906: movsd  %xmm0,0x1970(%rax)
    0.00 :   41290e: jmp    412998 <process_transaction+0x1e9>
    0.00 :   412913: movl   $0x0,-0x4(%rbp)
    0.00 :   41291a: jmp    412998 <process_transaction+0x1e9>
    0.00 :   41291c: mov    -0x20(%rbp),%rax
    0.00 :   412920: mov    0x40(%rax),%rcx
    0.00 :   412924: mov    -0x28(%rbp),%rdx
    0.00 :   412928: mov    -0x20(%rbp),%rax
    0.00 :   41292c: mov    %rdx,%rsi
    0.00 :   41292f: mov    %rax,%rdi
    0.00 :   412932: call   *%rcx
    0.00 :   412934: mov    %eax,-0x4(%rbp)
    0.00 :   412937: jmp    412998 <process_transaction+0x1e9>
    0.00 :   412939: mov    -0x20(%rbp),%rax
    0.00 :   41293d: mov    0x48(%rax),%rcx
    0.00 :   412941: mov    -0x28(%rbp),%rdx
    0.00 :   412945: mov    -0x20(%rbp),%rax
    0.00 :   412949: mov    %rdx,%rsi
    0.00 :   41294c: mov    %rax,%rdi
    0.00 :   41294f: call   *%rcx
    0.00 :   412951: mov    %eax,-0x4(%rbp)
    0.00 :   412954: jmp    412998 <process_transaction+0x1e9>
    0.00 :   412956: mov    -0x20(%rbp),%rax
    0.00 :   41295a: mov    0x50(%rax),%rcx
    0.00 :   41295e: mov    -0x28(%rbp),%rdx
    0.00 :   412962: mov    -0x20(%rbp),%rax
    0.00 :   412966: mov    %rdx,%rsi
    0.00 :   412969: mov    %rax,%rdi
    0.00 :   41296c: call   *%rcx
    0.00 :   41296e: mov    %eax,-0x4(%rbp)
    0.00 :   412971: jmp    412998 <process_transaction+0x1e9>
    0.00 :   412973: mov    -0x14(%rbp),%eax
    0.00 :   412976: mov    %eax,%ecx
    0.00 :   412978: mov    $0x416e6e,%edx
    0.00 :   41297d: mov    $0x81,%esi
    0.00 :   412982: mov    $0x416e8a,%edi
    0.00 :   412987: mov    $0x0,%eax
    0.00 :   41298c: call   40840f <log_error_message>
    0.00 :   412991: mov    $0x0,%eax
    0.00 :   412996: jmp    4129cb <process_transaction+0x21c>
    0.00 :   412998: cmpl   $0x1,-0x4(%rbp)
    0.00 :   41299c: jne    4129b4 <process_transaction+0x205>
    0.00 :   41299e: mov    -0x20(%rbp),%rax
    0.00 :   4129a2: mov    0x10(%rax),%rdx
   20.57 :   4129a6: mov    -0x20(%rbp),%rax // dbt2-client[4129a6]
    0.00 :   4129aa: mov    %rax,%rdi
    0.00 :   4129ad: call   *%rdx
    0.00 :   4129af: mov    %eax,-0xc(%rbp)
   19.03 :   4129b2: jmp    4129c8 <process_transaction+0x219> // dbt2-client[4129b2]
    0.00 :   4129b4: mov    -0x20(%rbp),%rax
    0.00 :   4129b8: mov    0x20(%rax),%rdx
    0.00 :   4129bc: mov    -0x20(%rbp),%rax
    0.00 :   4129c0: mov    %rax,%rdi
    0.00 :   4129c3: call   *%rdx
    0.00 :   4129c5: mov    %eax,-0xc(%rbp)
    0.00 :   4129c8: mov    -0xc(%rbp),%eax
    0.00 :   4129cb: leave
    0.00 :   4129cc: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   85.38 [nf_conntrack][7eb0]
    7.62 [nf_conntrack][7eb8]
    7.00 [nf_conntrack][7eb5]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (17 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000007eb0 <ipv4_conntrack_in>:
         : 6    ipv4_conntrack_in():
   85.38 :   7eb0:   call   7eb5 <ipv4_conntrack_in+0x5> // [nf_conntrack][7eb0]
    7.00 :   7eb5:   mov    %rsi,%rdi // [nf_conntrack][7eb5]
    7.62 :   7eb8:   mov    %rdx,%rsi // [nf_conntrack][7eb8]
    0.00 :   7ebb:   jmp    7ec0 <nf_ct_netns_do_get>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   13.12 [virtio_net][5259]
   12.95 [virtio_net][52d1]
   12.65 [virtio_net][4fc0]
    9.92 [virtio_net][52bb]
    8.07 [virtio_net][5382]
    8.02 [virtio_net][4fe1]
    7.97 [virtio_net][52c2]
    7.80 [virtio_net][52a7]
    6.86 [virtio_net][529c]
    6.46 [virtio_net][5263]
    6.20 [virtio_net][52a3]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (14 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000004fc0 <try_fill_recv>:
         : 6    try_fill_recv():
   12.65 :   4fc0:   call   4fc5 <try_fill_recv+0x5> // [virtio_net][4fc0]
    0.00 :   4fc5:   push   %r15
    0.00 :   4fc7:   mov    %rdi,%r15
    0.00 :   4fca:   push   %r14
    0.00 :   4fcc:   push   %r13
    0.00 :   4fce:   push   %r12
    0.00 :   4fd0:   mov    %edx,%r12d
    0.00 :   4fd3:   push   %rbp
    0.00 :   4fd4:   mov    $0x80000000,%ebp
    0.00 :   4fd9:   push   %rbx
    0.00 :   4fda:   mov    %rsi,%rbx
    0.00 :   4fdd:   sub    $0x18,%rsp
    8.02 :   4fe1:   movzbl 0x38(%r15),%r13d // [virtio_net][4fe1]
    0.00 :   4fe6:   test   %r13b,%r13b
    0.00 :   4fe9:   jne    5276 <try_fill_recv+0x2b6>
    0.00 :   4fef:   cmpb   $0x0,0x33(%r15)
    0.00 :   4ff4:   je     5170 <try_fill_recv+0x1b0>
    0.00 :   4ffa:   mov    0x34(%r15),%eax
    0.00 :   4ffe:   lea    0x200(%rbx),%rdi
    0.00 :   5005:   mov    %rdi,0x10(%rsp)
    0.00 :   500a:   lea    0x2(%rax),%esi
    0.00 :   500d:   call   5012 <try_fill_recv+0x52>
    0.00 :   5012:   mov    0x34(%r15),%edx
    0.00 :   5016:   lea    0x1(%rdx),%eax
    0.00 :   5019:   cmp    $0x1,%eax
    0.00 :   501c:   jle    54a2 <try_fill_recv+0x4e2>
    0.00 :   5022:   lea    0x10(%rax),%r14
    0.00 :   5026:   shl    $0x5,%rax
    0.00 :   502a:   xor    %r8d,%r8d
    0.00 :   502d:   lea    0x1e0(%rbx,%rax,1),%r9
    0.00 :   5035:   lea    -0x1(%rdx),%eax
    0.00 :   5038:   shl    $0x5,%r14
    0.00 :   503c:   shl    $0x5,%rax
    0.00 :   5040:   add    %rbx,%r14
    0.00 :   5043:   sub    %rax,%r9
    0.00 :   5046:   jmp    50de <try_fill_recv+0x11e>
    0.00 :   504b:   mov    0x28(%rdx),%rax
    0.00 :   504f:   mov    %rax,0x1e0(%rbx)
    0.00 :   5056:   movq   $0x0,0x28(%rdx)
    0.00 :   505e:   mov    0x0(%rip),%rsi        # 5065 <try_fill_recv+0xa5>
    0.00 :   5065:   mov    %rdx,%rax
    0.00 :   5068:   mov    0x0(%rip),%r10        # 506f <try_fill_recv+0xaf>
    0.00 :   506f:   sub    %rsi,%rax
    0.00 :   5072:   mov    %r10d,%edi
    0.00 :   5075:   sar    $0x6,%rax
    0.00 :   5079:   and    $0xfff,%edi
    0.00 :   507f:   shl    $0xc,%rax
    0.00 :   5083:   add    %r10,%rax
    0.00 :   5086:   add    %rbp,%rax
    0.00 :   5089:   jb     56fa <try_fill_recv+0x73a>
    0.00 :   508f:   mov    $0xffffffff80000000,%r11
    0.00 :   5096:   sub    %r10,%r11
    0.00 :   5099:   add    %r11,%rax
    0.00 :   509c:   shr    $0xc,%rax
    0.00 :   50a0:   shl    $0x6,%rax
    0.00 :   50a4:   lea    (%rax,%rsi,1),%r10
    0.00 :   50a8:   mov    (%r14),%rax
    0.00 :   50ab:   and    $0x3,%eax
    0.00 :   50ae:   and    $0x3,%esi
    0.00 :   50b1:   jne    5489 <try_fill_recv+0x4c9>
    0.00 :   50b7:   or     %rax,%r10
    0.00 :   50ba:   mov    %edi,0x8(%r14)
    0.00 :   50be:   sub    $0x20,%r14
    0.00 :   50c2:   mov    %r10,0x20(%r14)
    0.00 :   50c6:   movl   $0x1000,0x2c(%r14)
    0.00 :   50ce:   mov    %r8,0x28(%rdx)
    0.00 :   50d2:   cmp    %r9,%r14
    0.00 :   50d5:   je     54a4 <try_fill_recv+0x4e4>
    0.00 :   50db:   mov    %rdx,%r8
    0.00 :   50de:   mov    0x1e0(%rbx),%rdx
    0.00 :   50e5:   test   %rdx,%rdx
    0.00 :   50e8:   jne    504b <try_fill_recv+0x8b>
    0.00 :   50ee:   xor    %esi,%esi
    0.00 :   50f0:   mov    %r12d,%edi
    0.00 :   50f3:   mov    %r9,0x8(%rsp)
    0.00 :   50f8:   mov    %r8,(%rsp)
    0.00 :   50fc:   call   5101 <try_fill_recv+0x141>
    0.00 :   5101:   mov    (%rsp),%r8
    0.00 :   5105:   mov    0x8(%rsp),%r9
    0.00 :   510a:   test   %rax,%rax
    0.00 :   510d:   mov    %rax,%rdx
    0.00 :   5110:   jne    505e <try_fill_recv+0x9e>
    0.00 :   5116:   test   %r8,%r8
    0.00 :   5119:   je     5481 <try_fill_recv+0x4c1>
    0.00 :   511f:   mov    0x28(%r8),%rax
    0.00 :   5123:   test   %rax,%rax
    0.00 :   5126:   je     56ea <try_fill_recv+0x72a>
    0.00 :   512c:   mov    %rax,%rdx
    0.00 :   512f:   mov    0x28(%rax),%rax
    0.00 :   5133:   test   %rax,%rax
    0.00 :   5136:   jne    512c <try_fill_recv+0x16c>
    0.00 :   5138:   mov    0x1e0(%rbx),%rax
    0.00 :   513f:   mov    %rax,0x28(%rdx)
    0.00 :   5143:   mov    (%rbx),%rdi
    0.00 :   5146:   mov    %r8,0x1e0(%rbx)
    0.00 :   514d:   call   5152 <try_fill_recv+0x192>
    0.00 :   5152:   test   %al,%al
    0.00 :   5154:   jne    5408 <try_fill_recv+0x448>
    0.00 :   515a:   add    $0x18,%rsp
    0.00 :   515e:   mov    %r13d,%eax
    0.00 :   5161:   pop    %rbx
    0.00 :   5162:   pop    %rbp
    0.00 :   5163:   pop    %r12
    0.00 :   5165:   pop    %r13
    0.00 :   5167:   pop    %r14
    0.00 :   5169:   pop    %r15
    0.00 :   516b:   jmp    5170 <try_fill_recv+0x1b0>
    0.00 :   5170:   movzbl 0x32(%r15),%r8d
    0.00 :   5175:   lea    0x1f0(%rbx),%rsi
    0.00 :   517c:   mov    %r12d,%edx
    0.00 :   517f:   shl    $0x8,%r8d
    0.00 :   5183:   mov    %r8d,%eax
    0.00 :   5186:   mov    %r8d,0x8(%rsp)
    0.00 :   518b:   mov    %rax,0x10(%rsp)
    0.00 :   5190:   movzbl 0x4a(%r15),%eax
    0.00 :   5195:   lea    0x66d(%r8,%rax,1),%edi
    0.00 :   519d:   and    $0xffffffc0,%edi
    0.00 :   51a0:   add    $0x140,%edi
    0.00 :   51a6:   mov    %edi,(%rsp)
    0.00 :   51a9:   call   51ae <try_fill_recv+0x1ee>
    0.00 :   51ae:   mov    (%rsp),%edi
    0.00 :   51b1:   mov    0x8(%rsp),%r8d
    0.00 :   51b6:   test   %al,%al
    0.00 :   51b8:   mov    %eax,%r13d
    0.00 :   51bb:   je     5481 <try_fill_recv+0x4c1>
    0.00 :   51c1:   mov    0x1f0(%rbx),%rax
    0.00 :   51c8:   mov    0x1f8(%rbx),%edx
    0.00 :   51ce:   mov    %rax,%r14
    0.00 :   51d1:   sub    0x0(%rip),%r14        # 51d8 <try_fill_recv+0x218>
    0.00 :   51d8:   sar    $0x6,%r14
    0.00 :   51dc:   shl    $0xc,%r14
    0.00 :   51e0:   add    0x0(%rip),%r14        # 51e7 <try_fill_recv+0x227>
    0.00 :   51e7:   add    %rdx,%r14
    0.00 :   51ea:   mov    0x8(%rax),%rdx
    0.00 :   51ee:   test   $0x1,%dl
    0.00 :   51f1:   jne    565c <try_fill_recv+0x69c>
    0.00 :   51f7:   nopl   0x0(%rax,%rax,1)
    0.00 :   51fc:   mov    0x34(%rax),%edx
    0.00 :   51ff:   add    $0x7f,%edx
    0.00 :   5202:   cmp    $0x7f,%edx
    0.00 :   5205:   jbe    5665 <try_fill_recv+0x6a5>
    0.00 :   520b:   lock incl 0x34(%rax)
    0.00 :   520f:   add    %edi,0x1f8(%rbx)
    0.00 :   5215:   movzbl 0x4a(%r15),%edx
    0.00 :   521a:   lea    0x40(%r8),%esi
    0.00 :   521e:   lea    0x200(%rbx),%r13
    0.00 :   5225:   add    %r14,%rsi
    0.00 :   5228:   mov    %r13,%rdi
    0.00 :   522b:   add    $0x5ee,%edx
    0.00 :   5231:   call   5236 <try_fill_recv+0x276>
    0.00 :   5236:   mov    (%rbx),%rdi
    0.00 :   5239:   mov    0x10(%rsp),%r8
    0.00 :   523e:   mov    %r12d,%r9d
    0.00 :   5241:   mov    %r14,%rcx
    0.00 :   5244:   mov    $0x1,%edx
    0.00 :   5249:   mov    %r13,%rsi
    0.00 :   524c:   call   5251 <try_fill_recv+0x291>
    0.00 :   5251:   test   %eax,%eax
    0.00 :   5253:   js     5609 <try_fill_recv+0x649>
   13.12 :   5259:   mov    (%rbx),%rdi // [virtio_net][5259]
    0.00 :   525c:   test   %eax,%eax
    0.00 :   525e:   jne    526b <try_fill_recv+0x2ab>
    0.00 :   5260:   mov    0x2c(%rdi),%eax
    6.46 :   5263:   test   %eax,%eax // [virtio_net][5263]
    0.00 :   5265:   jne    4fe1 <try_fill_recv+0x21>
    0.00 :   526b:   mov    $0x1,%r13d
    0.00 :   5271:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   5276:   cmpb   $0x0,0x32(%r15)
    0.00 :   527b:   lea    0x1f0(%rbx),%rsi
    0.00 :   5282:   jne    548b <try_fill_recv+0x4cb>
    0.00 :   5288:   mov    (%rbx),%rax
    0.00 :   528b:   mov    0x1e8(%rbx),%edx
    0.00 :   5291:   movl   $0x0,(%rsp)
    0.00 :   5298:   mov    0x20(%rax),%rax
    6.86 :   529c:   mov    0x330(%rax),%rax // [virtio_net][529c]
    6.20 :   52a3:   movzbl 0x4a(%rax),%ecx // [virtio_net][52a3]
    7.80 :   52a7:   mov    0x460(%rbx),%eax // [virtio_net][52a7]
    0.00 :   52ad:   cmp    %edx,%eax
    0.00 :   52af:   cmovb  %edx,%eax
    0.00 :   52b2:   mov    $0x1000,%edx
    0.00 :   52b7:   sub    %ecx,%edx
    0.00 :   52b9:   cmp    %edx,%eax
    9.92 :   52bb:   cmova  %edx,%eax // [virtio_net][52bb]
    0.00 :   52be:   lea    0x3f(%rcx,%rax,1),%eax
    7.97 :   52c2:   and    $0xffffffc0,%eax // [virtio_net][52c2]
    0.00 :   52c5:   mov    %eax,%r14d
    0.00 :   52c8:   mov    %eax,%edi
    0.00 :   52ca:   mov    %r12d,%edx
    0.00 :   52cd:   mov    %edi,0x8(%rsp)
   12.95 :   52d1:   call   52d6 <try_fill_recv+0x316> // [virtio_net][52d1]
    0.00 :   52d6:   mov    %eax,%r13d
    0.00 :   52d9:   test   %al,%al
    0.00 :   52db:   je     5481 <try_fill_recv+0x4c1>
    0.00 :   52e1:   mov    0x1f0(%rbx),%rax
    0.00 :   52e8:   mov    0x1f8(%rbx),%edx
    0.00 :   52ee:   mov    (%rsp),%ecx
    0.00 :   52f1:   mov    0x8(%rsp),%edi
    0.00 :   52f5:   mov    %rax,%r13
    0.00 :   52f8:   sub    0x0(%rip),%r13        # 52ff <try_fill_recv+0x33f>
    0.00 :   52ff:   sar    $0x6,%r13
    0.00 :   5303:   add    %rcx,%rdx
    0.00 :   5306:   shl    $0xc,%r13
    0.00 :   530a:   add    0x0(%rip),%r13        # 5311 <try_fill_recv+0x351>
    0.00 :   5311:   add    %rdx,%r13
    0.00 :   5314:   mov    0x8(%rax),%rdx
    0.00 :   5318:   test   $0x1,%dl
    0.00 :   531b:   jne    5676 <try_fill_recv+0x6b6>
    0.00 :   5321:   nopl   0x0(%rax,%rax,1)
    0.00 :   5326:   mov    0x34(%rax),%edx
    0.00 :   5329:   add    $0x7f,%edx
    0.00 :   532c:   cmp    $0x7f,%edx
    0.00 :   532f:   jbe    567f <try_fill_recv+0x6bf>
    0.00 :   5335:   lock incl 0x34(%rax)
    0.00 :   5339:   mov    0x1f8(%rbx),%eax
    0.00 :   533f:   mov    0x1fc(%rbx),%edx
    0.00 :   5345:   add    %edi,%eax
    0.00 :   5347:   mov    %edx,%ecx
    0.00 :   5349:   sub    %eax,%ecx
    0.00 :   534b:   mov    %eax,0x1f8(%rbx)
    0.00 :   5351:   cmp    %edi,%ecx
    0.00 :   5353:   jae    535e <try_fill_recv+0x39e>
    0.00 :   5355:   mov    %edx,0x1f8(%rbx)
    0.00 :   535b:   add    %ecx,%r14d
    0.00 :   535e:   lea    0x200(%rbx),%rax
    0.00 :   5365:   mov    %r14d,%edx
    0.00 :   5368:   mov    %r13,%rsi
    0.00 :   536b:   mov    %rax,%rdi
    0.00 :   536e:   mov    %rax,0x8(%rsp)
    0.00 :   5373:   call   5378 <try_fill_recv+0x3b8>
    0.00 :   5378:   mov    (%rsp),%r8d
    0.00 :   537c:   mov    (%rbx),%rdi
    0.00 :   537f:   mov    %r12d,%r9d
    8.07 :   5382:   mov    0x8(%rsp),%rsi // [virtio_net][5382]
    0.00 :   5387:   mov    %r13,%rcx
    0.00 :   538a:   mov    $0x1,%edx
    0.00 :   538f:   shl    $0x16,%r8d
    0.00 :   5393:   or     %r14d,%r8d
    0.00 :   5396:   call   539b <try_fill_recv+0x3db>
    0.00 :   539b:   test   %eax,%eax
    0.00 :   539d:   jns    5259 <try_fill_recv+0x299>
    0.00 :   53a3:   mov    $0x80000000,%edx
    0.00 :   53a8:   add    %rdx,%r13
    0.00 :   53ab:   jb     5712 <try_fill_recv+0x752>
    0.00 :   53b1:   mov    $0xffffffff80000000,%rdx
    0.00 :   53b8:   sub    0x0(%rip),%rdx        # 53bf <try_fill_recv+0x3ff>
    0.00 :   53bf:   add    %r13,%rdx
    0.00 :   53c2:   shr    $0xc,%rdx
    0.00 :   53c6:   shl    $0x6,%rdx
    0.00 :   53ca:   add    0x0(%rip),%rdx        # 53d1 <try_fill_recv+0x411>
    0.00 :   53d1:   mov    0x8(%rdx),%rcx
    0.00 :   53d5:   mov    %rdx,%rdi
    0.00 :   53d8:   test   $0x1,%cl
    0.00 :   53db:   jne    56dd <try_fill_recv+0x71d>
    0.00 :   53e1:   nopl   0x0(%rax,%rax,1)
    0.00 :   53e6:   mov    %eax,(%rsp)
    0.00 :   53e9:   call   1ef0 <put_page>
    0.00 :   53ee:   mov    (%rsp),%eax
    0.00 :   53f1:   mov    (%rbx),%rdi
    0.00 :   53f4:   cmp    $0xfffffff4,%eax
    0.00 :   53f7:   setne  %r13b
    0.00 :   53fb:   call   5400 <try_fill_recv+0x440>
    0.00 :   5400:   test   %al,%al
    0.00 :   5402:   je     515a <try_fill_recv+0x19a>
    0.00 :   5408:   mov    (%rbx),%rdi
    0.00 :   540b:   call   5410 <try_fill_recv+0x450>
    0.00 :   5410:   test   %al,%al
    0.00 :   5412:   je     515a <try_fill_recv+0x19a>
    0.00 :   5418:   addq   $0x1,0x1d8(%rbx)
    0.00 :   5420:   jmp    515a <try_fill_recv+0x19a>
    0.00 :   5425:   test   $0xfff,%eax
    0.00 :   542a:   jne    51fc <try_fill_recv+0x23c>
    0.00 :   5430:   mov    (%rax),%rdx
    0.00 :   5433:   test   $0x10000,%edx
    0.00 :   5439:   je     51fc <try_fill_recv+0x23c>
    0.00 :   543f:   mov    0x48(%rax),%rdx
    0.00 :   5443:   lea    -0x1(%rdx),%rcx
    0.00 :   5447:   and    $0x1,%edx
    0.00 :   544a:   cmovne %rcx,%rax
    0.00 :   544e:   jmp    51fc <try_fill_recv+0x23c>
    0.00 :   5453:   test   $0xfff,%eax
    0.00 :   5458:   jne    5326 <try_fill_recv+0x366>
    0.00 :   545e:   mov    (%rax),%rdx
    0.00 :   5461:   test   $0x10000,%edx
    0.00 :   5467:   je     5326 <try_fill_recv+0x366>
    0.00 :   546d:   mov    0x48(%rax),%rdx
    0.00 :   5471:   lea    -0x1(%rdx),%rcx
    0.00 :   5475:   and    $0x1,%edx
    0.00 :   5478:   cmovne %rcx,%rax
    0.00 :   547c:   jmp    5326 <try_fill_recv+0x366>
    0.00 :   5481:   mov    (%rbx),%rdi
    0.00 :   5484:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   5489:   ud2
    0.00 :   548b:   movl   $0x100,(%rsp)
    0.00 :   5492:   mov    $0x1000,%edi
    0.00 :   5497:   mov    $0xdc0,%r14d
    0.00 :   549d:   jmp    52ca <try_fill_recv+0x30a>
    0.00 :   54a2:   xor    %edx,%edx
    0.00 :   54a4:   mov    0x1e0(%rbx),%r14
    0.00 :   54ab:   test   %r14,%r14
    0.00 :   54ae:   je     5690 <try_fill_recv+0x6d0>
    0.00 :   54b4:   mov    0x28(%r14),%rax
    0.00 :   54b8:   mov    %rax,0x1e0(%rbx)
    0.00 :   54bf:   movq   $0x0,0x28(%r14)
    0.00 :   54c7:   mov    0x0(%rip),%rsi        # 54ce <try_fill_recv+0x50e>
    0.00 :   54ce:   mov    %r14,%rax
    0.00 :   54d1:   mov    $0x80000000,%ecx
    0.00 :   54d6:   mov    0x0(%rip),%rdi        # 54dd <try_fill_recv+0x51d>
    0.00 :   54dd:   movzbl 0x4a(%r15),%r8d
    0.00 :   54e2:   sub    %rsi,%rax
    0.00 :   54e5:   mov    %edi,%r9d
    0.00 :   54e8:   sar    $0x6,%rax
    0.00 :   54ec:   and    $0xfff,%r9d
    0.00 :   54f3:   shl    $0xc,%rax
    0.00 :   54f7:   add    %rdi,%rax
    0.00 :   54fa:   add    %rax,%rcx
    0.00 :   54fd:   jb     572a <try_fill_recv+0x76a>
    0.00 :   5503:   mov    $0xffffffff80000000,%r10
    0.00 :   550a:   sub    %rdi,%r10
    0.00 :   550d:   add    %r10,%rcx
    0.00 :   5510:   shr    $0xc,%rcx
    0.00 :   5514:   shl    $0x6,%rcx
    0.00 :   5518:   lea    (%rcx,%rsi,1),%r10
    0.00 :   551c:   mov    0x200(%rbx),%rcx
    0.00 :   5523:   and    $0x3,%ecx
    0.00 :   5526:   test   $0x3,%sil
    0.00 :   552a:   jne    56e6 <try_fill_recv+0x726>
    0.00 :   5530:   add    $0x20,%rax
    0.00 :   5534:   or     %rcx,%r10
    0.00 :   5537:   mov    %r8d,0x20c(%rbx)
    0.00 :   553e:   mov    $0x80000000,%r8d
    0.00 :   5544:   mov    %eax,%ecx
    0.00 :   5546:   mov    %r10,0x200(%rbx)
    0.00 :   554d:   mov    %r9d,0x208(%rbx)
    0.00 :   5554:   and    $0xfff,%ecx
    0.00 :   555a:   add    %r8,%rax
    0.00 :   555d:   jb     5706 <try_fill_recv+0x746>
    0.00 :   5563:   mov    $0xffffffff80000000,%r8
    0.00 :   556a:   sub    %rdi,%r8
    0.00 :   556d:   add    %r8,%rax
    0.00 :   5570:   shr    $0xc,%rax
    0.00 :   5574:   shl    $0x6,%rax
    0.00 :   5578:   lea    (%rax,%rsi,1),%rdi
    0.00 :   557c:   mov    0x220(%rbx),%rax
    0.00 :   5583:   and    $0x3,%eax
    0.00 :   5586:   and    $0x3,%esi
    0.00 :   5589:   jne    56e8 <try_fill_recv+0x728>
    0.00 :   558f:   or     %rax,%rdi
    0.00 :   5592:   mov    %ecx,0x228(%rbx)
    0.00 :   5598:   mov    0x10(%rsp),%rsi
    0.00 :   559d:   mov    %r12d,%r8d
    0.00 :   55a0:   mov    %rdi,0x220(%rbx)
    0.00 :   55a7:   mov    %r14,%rcx
    0.00 :   55aa:   movl   $0xfe0,0x22c(%rbx)
    0.00 :   55b4:   mov    %rdx,0x28(%r14)
    0.00 :   55b8:   mov    0x34(%r15),%eax
    0.00 :   55bc:   mov    (%rbx),%rdi
    0.00 :   55bf:   lea    0x2(%rax),%edx
    0.00 :   55c2:   call   55c7 <try_fill_recv+0x607>
    0.00 :   55c7:   test   %eax,%eax
    0.00 :   55c9:   jns    5259 <try_fill_recv+0x299>
    0.00 :   55cf:   mov    0x28(%r14),%rdx
    0.00 :   55d3:   test   %rdx,%rdx
    0.00 :   55d6:   je     56f2 <try_fill_recv+0x732>
    0.00 :   55dc:   mov    %rdx,%rcx
    0.00 :   55df:   mov    0x28(%rdx),%rdx
    0.00 :   55e3:   test   %rdx,%rdx
    0.00 :   55e6:   jne    55dc <try_fill_recv+0x61c>
    0.00 :   55e8:   mov    0x1e0(%rbx),%rdx
    0.00 :   55ef:   cmp    $0xfffffff4,%eax
    0.00 :   55f2:   setne  %r13b
    0.00 :   55f6:   mov    %rdx,0x28(%rcx)
    0.00 :   55fa:   mov    (%rbx),%rdi
    0.00 :   55fd:   mov    %r14,0x1e0(%rbx)
    0.00 :   5604:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   5609:   mov    $0x80000000,%edx
    0.00 :   560e:   add    %rdx,%r14
    0.00 :   5611:   jb     571e <try_fill_recv+0x75e>
    0.00 :   5617:   mov    $0xffffffff80000000,%rdx
    0.00 :   561e:   sub    0x0(%rip),%rdx        # 5625 <try_fill_recv+0x665>
    0.00 :   5625:   add    %r14,%rdx
    0.00 :   5628:   jmp    53c2 <try_fill_recv+0x402>
    0.00 :   562d:   test   $0xfff,%edx
    0.00 :   5633:   jne    53e6 <try_fill_recv+0x426>
    0.00 :   5639:   mov    (%rdx),%rcx
    0.00 :   563c:   test   $0x10000,%ecx
    0.00 :   5642:   je     53e6 <try_fill_recv+0x426>
    0.00 :   5648:   mov    0x48(%rdx),%rcx
    0.00 :   564c:   lea    -0x1(%rcx),%rdi
    0.00 :   5650:   and    $0x1,%ecx
    0.00 :   5653:   cmove  %rdx,%rdi
    0.00 :   5657:   jmp    53e6 <try_fill_recv+0x426>
    0.00 :   565c:   lea    -0x1(%rdx),%rax
    0.00 :   5660:   jmp    51fc <try_fill_recv+0x23c>
    0.00 :   5665:   mov    $0x0,%rsi
    0.00 :   566c:   mov    %rax,%rdi
    0.00 :   566f:   call   5674 <try_fill_recv+0x6b4>
    0.00 :   5674:   ud2
    0.00 :   5676:   lea    -0x1(%rdx),%rax
    0.00 :   567a:   jmp    5326 <try_fill_recv+0x366>
    0.00 :   567f:   mov    $0x0,%rsi
    0.00 :   5686:   mov    %rax,%rdi
    0.00 :   5689:   call   568e <try_fill_recv+0x6ce>
    0.00 :   568e:   ud2
    0.00 :   5690:   xor    %esi,%esi
    0.00 :   5692:   mov    %r12d,%edi
    0.00 :   5695:   mov    %rdx,(%rsp)
    0.00 :   5699:   call   569e <try_fill_recv+0x6de>
    0.00 :   569e:   mov    (%rsp),%rdx
    0.00 :   56a2:   test   %rax,%rax
    0.00 :   56a5:   mov    %rax,%r14
    0.00 :   56a8:   jne    54c7 <try_fill_recv+0x507>
    0.00 :   56ae:   mov    0x28(%rdx),%rax
    0.00 :   56b2:   test   %rax,%rax
    0.00 :   56b5:   je     5736 <try_fill_recv+0x776>
    0.00 :   56b7:   mov    %rax,%rsi
    0.00 :   56ba:   mov    0x28(%rax),%rax
    0.00 :   56be:   test   %rax,%rax
    0.00 :   56c1:   jne    56b7 <try_fill_recv+0x6f7>
    0.00 :   56c3:   mov    0x1e0(%rbx),%rax
    0.00 :   56ca:   mov    %rax,0x28(%rsi)
    0.00 :   56ce:   mov    (%rbx),%rdi
    0.00 :   56d1:   mov    %rdx,0x1e0(%rbx)
    0.00 :   56d8:   jmp    53fb <try_fill_recv+0x43b>
    0.00 :   56dd:   lea    -0x1(%rcx),%rdi
    0.00 :   56e1:   jmp    53e6 <try_fill_recv+0x426>
    0.00 :   56e6:   ud2
    0.00 :   56e8:   ud2
    0.00 :   56ea:   mov    %r8,%rdx
    0.00 :   56ed:   jmp    5138 <try_fill_recv+0x178>
    0.00 :   56f2:   mov    %r14,%rcx
    0.00 :   56f5:   jmp    55e8 <try_fill_recv+0x628>
    0.00 :   56fa:   mov    0x0(%rip),%r11        # 5701 <try_fill_recv+0x741>
    0.00 :   5701:   jmp    5099 <try_fill_recv+0xd9>
    0.00 :   5706:   mov    0x0(%rip),%r8        # 570d <try_fill_recv+0x74d>
    0.00 :   570d:   jmp    556d <try_fill_recv+0x5ad>
    0.00 :   5712:   mov    0x0(%rip),%rdx        # 5719 <try_fill_recv+0x759>
    0.00 :   5719:   jmp    53bf <try_fill_recv+0x3ff>
    0.00 :   571e:   mov    0x0(%rip),%rdx        # 5725 <try_fill_recv+0x765>
    0.00 :   5725:   jmp    5625 <try_fill_recv+0x665>
    0.00 :   572a:   mov    0x0(%rip),%r10        # 5731 <try_fill_recv+0x771>
    0.00 :   5731:   jmp    550d <try_fill_recv+0x54d>
    0.00 :   5736:   mov    %rdx,%rsi
    0.00 :   5739:   jmp    56c3 <try_fill_recv+0x703>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nft_ct.ko.xz
----------------------------------------------

   67.38 [nft_ct][1210]
   11.20 [nft_ct][1217]
    7.56 [nft_ct][12b7]
    7.35 [nft_ct][12ce]
    6.52 [nft_ct][12bb]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nft_ct.ko.xz for cycles (14 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001210 <nft_ct_get_eval>:
         : 6    nft_ct_get_eval():
   67.38 :   1210:   call   1215 <nft_ct_get_eval+0x5> // [nft_ct][1210]
    0.00 :   1215:   push   %r13
   11.20 :   1217:   push   %r12 // [nft_ct][1217]
    0.00 :   1219:   push   %rbp
    0.00 :   121a:   mov    %rsi,%rbp
    0.00 :   121d:   push   %rbx
    0.00 :   121e:   mov    (%rdx),%rax
    0.00 :   1221:   movzbl 0xb(%rdi),%r12d
    0.00 :   1226:   mov    0x68(%rax),%rdx
    0.00 :   122a:   movzbl 0x8(%rdi),%eax
    0.00 :   122e:   mov    %edx,%ecx
    0.00 :   1230:   and    $0x7,%ecx
    0.00 :   1233:   test   %al,%al
    0.00 :   1235:   jne    1260 <nft_ct_get_eval+0x50>
    0.00 :   1237:   cmp    $0x7,%rdx
    0.00 :   123b:   ja     12b0 <nft_ct_get_eval+0xa0>
    0.00 :   123d:   cmp    $0x7,%ecx
    0.00 :   1240:   mov    $0x1,%eax
    0.00 :   1245:   mov    $0x40,%edx
    0.00 :   124a:   cmove  %edx,%eax
    0.00 :   124d:   movslq %r12d,%r12
    0.00 :   1250:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   1255:   pop    %rbx
    0.00 :   1256:   pop    %rbp
    0.00 :   1257:   pop    %r12
    0.00 :   1259:   pop    %r13
    0.00 :   125b:   jmp    1260 <nft_ct_get_eval+0x50>
    0.00 :   1260:   cmp    $0x7,%rdx
    0.00 :   1264:   jbe    1336 <nft_ct_get_eval+0x126>
    0.00 :   126a:   lea    0x0(%rbp,%r12,4),%r13
    0.00 :   126f:   and    $0xfffffffffffffff8,%rdx
    0.00 :   1273:   cmp    $0x7,%al
    0.00 :   1275:   je     145a <nft_ct_get_eval+0x24a>
    0.00 :   127b:   jbe    12d3 <nft_ct_get_eval+0xc3>
    0.00 :   127d:   mov    %rdi,%rbx
    0.00 :   1280:   cmp    $0x10,%al
    0.00 :   1282:   je     1486 <nft_ct_get_eval+0x276>
    0.00 :   1288:   jbe    1363 <nft_ct_get_eval+0x153>
    0.00 :   128e:   cmp    $0x11,%al
    0.00 :   1290:   je     1403 <nft_ct_get_eval+0x1f3>
    0.00 :   1296:   cmp    $0x17,%al
    0.00 :   1298:   jne    16b8 <nft_ct_get_eval+0x4a8>
    0.00 :   129e:   mov    %rdx,%rdi
    0.00 :   12a1:   movslq %r12d,%r12
    0.00 :   12a4:   call   12a9 <nft_ct_get_eval+0x99>
    0.00 :   12a9:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   12ae:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   12b0:   mov    %ecx,%eax
    0.00 :   12b2:   mov    $0xaaaaaaab,%edx
    7.56 :   12b7:   imul   %rdx,%rax // [nft_ct][12b7]
    6.52 :   12bb:   shr    $0x21,%rax // [nft_ct][12bb]
    0.00 :   12bf:   lea    (%rax,%rax,2),%eax
    0.00 :   12c2:   sub    %eax,%ecx
    0.00 :   12c4:   mov    $0x1,%eax
    0.00 :   12c9:   add    $0x1,%ecx
    0.00 :   12cc:   shl    %cl,%eax
    7.35 :   12ce:   jmp    124d <nft_ct_get_eval+0x3d> // [nft_ct][12ce]
    0.00 :   12d3:   cmp    $0x4,%al
    0.00 :   12d5:   je     1473 <nft_ct_get_eval+0x263>
    0.00 :   12db:   jbe    1348 <nft_ct_get_eval+0x138>
    0.00 :   12dd:   cmp    $0x5,%al
    0.00 :   12df:   je     13da <nft_ct_get_eval+0x1ca>
    0.00 :   12e5:   mov    0xa0(%rdx),%rax
    0.00 :   12ec:   test   %rax,%rax
    0.00 :   12ef:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   12f1:   mov    0xb0(%rax),%rdi
    0.00 :   12f8:   test   %rdi,%rdi
    0.00 :   12fb:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   12fd:   movzbl (%rdi),%eax
    0.00 :   1300:   test   %al,%al
    0.00 :   1302:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   1304:   mov    0xc(%rdi),%ecx
    0.00 :   1307:   add    %rdi,%rax
    0.00 :   130a:   test   %ecx,%ecx
    0.00 :   130c:   jne    1735 <nft_ct_get_eval+0x525>
    0.00 :   1312:   test   %rax,%rax
    0.00 :   1315:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   1317:   mov    (%rax),%rax
    0.00 :   131a:   test   %rax,%rax
    0.00 :   131d:   je     1336 <nft_ct_get_eval+0x126>
    0.00 :   131f:   pop    %rbx
    0.00 :   1320:   mov    %r13,%rdi
    0.00 :   1323:   pop    %rbp
    0.00 :   1324:   mov    $0x10,%edx
    0.00 :   1329:   pop    %r12
    0.00 :   132b:   lea    0x10(%rax),%rsi
    0.00 :   132f:   pop    %r13
    0.00 :   1331:   jmp    1336 <nft_ct_get_eval+0x126>
    0.00 :   1336:   movl   $0xfffffffe,0x0(%rbp)
    0.00 :   133d:   pop    %rbx
    0.00 :   133e:   pop    %rbp
    0.00 :   133f:   pop    %r12
    0.00 :   1341:   pop    %r13
    0.00 :   1343:   jmp    1348 <nft_ct_get_eval+0x138>
    0.00 :   1348:   cmp    $0x2,%al
    0.00 :   134a:   je     1446 <nft_ct_get_eval+0x236>
    0.00 :   1350:   cmp    $0x3,%al
    0.00 :   1352:   jne    142d <nft_ct_get_eval+0x21d>
    0.00 :   1358:   mov    0xa8(%rdx),%eax
    0.00 :   135e:   jmp    124d <nft_ct_get_eval+0x3d>
    0.00 :   1363:   cmp    $0xd,%al
    0.00 :   1365:   je     1526 <nft_ct_get_eval+0x316>
    0.00 :   136b:   jbe    13b9 <nft_ct_get_eval+0x1a9>
    0.00 :   136d:   mov    0xb0(%rdx),%rdi
    0.00 :   1374:   test   %rdi,%rdi
    0.00 :   1377:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   137d:   movzbl 0x3(%rdi),%eax
    0.00 :   1381:   test   %al,%al
    0.00 :   1383:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   1389:   mov    0xc(%rdi),%edx
    0.00 :   138c:   add    %rdi,%rax
    0.00 :   138f:   test   %edx,%edx
    0.00 :   1391:   jne    1726 <nft_ct_get_eval+0x516>
    0.00 :   1397:   test   %rax,%rax
    0.00 :   139a:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   13a0:   movzbl 0x9(%rbx),%edx
    0.00 :   13a4:   movzbl 0x8(%rbx),%esi
    0.00 :   13a8:   mov    %rax,%rdi
    0.00 :   13ab:   call   fd0 <nft_ct_get_eval_counter>
    0.00 :   13b0:   mov    %rax,0x0(%r13)
    0.00 :   13b4:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   13b9:   cmp    $0xa,%al
    0.00 :   13bb:   jne    14ed <nft_ct_get_eval+0x2dd>
    0.00 :   13c1:   movzbl 0x46(%rdx),%eax
    0.00 :   13c5:   movslq %r12d,%r12
    0.00 :   13c8:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   13d1:   mov    %al,0x0(%r13)
    0.00 :   13d5:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   13da:   mov    0x8(%rdx),%edi
    0.00 :   13dd:   mov    0x0(%rip),%rax        # 13e4 <nft_ct_get_eval+0x1d4>
    0.00 :   13e4:   movslq %r12d,%r12
    0.00 :   13e7:   sub    %eax,%edi
    0.00 :   13e9:   mov    $0x0,%eax
    0.00 :   13ee:   cmovs  %eax,%edi
    0.00 :   13f1:   movslq %edi,%rdi
    0.00 :   13f4:   call   13f9 <nft_ct_get_eval+0x1e9>
    0.00 :   13f9:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   13fe:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1403:   movzbl 0x9(%rdi),%eax
    0.00 :   1407:   cmp    $0x1,%al
    0.00 :   1409:   jbe    15fc <nft_ct_get_eval+0x3ec>
    0.00 :   140f:   movzwl 0xc(%rdx),%ecx
    0.00 :   1413:   movslq %r12d,%r12
    0.00 :   1416:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   141f:   mov    %cx,0x0(%r13)
    0.00 :   1424:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1429:   xor    %eax,%eax
    0.00 :   142b:   jmp    13b0 <nft_ct_get_eval+0x1a0>
    0.00 :   142d:   movslq %r12d,%r12
    0.00 :   1430:   cmp    $0x2,%ecx
    0.00 :   1433:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   143c:   seta   0x0(%r13)
    0.00 :   1441:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1446:   mov    0x80(%rdx),%rax
    0.00 :   144d:   movslq %r12d,%r12
    0.00 :   1450:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   1455:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   145a:   movzwl 0x32(%rdx),%eax
    0.00 :   145e:   movslq %r12d,%r12
    0.00 :   1461:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   146a:   mov    %al,0x0(%r13)
    0.00 :   146e:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1473:   mov    0xac(%rdx),%eax
    0.00 :   1479:   movslq %r12d,%r12
    0.00 :   147c:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   1481:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1486:   mov    0xb0(%rdx),%rdi
    0.00 :   148d:   test   %rdi,%rdi
    0.00 :   1490:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   1492:   movzbl 0x3(%rdi),%ebp
    0.00 :   1496:   test   %bpl,%bpl
    0.00 :   1499:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   149b:   mov    0xc(%rdi),%eax
    0.00 :   149e:   add    %rdi,%rbp
    0.00 :   14a1:   test   %eax,%eax
    0.00 :   14a3:   jne    1714 <nft_ct_get_eval+0x504>
    0.00 :   14a9:   test   %rbp,%rbp
    0.00 :   14ac:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   14b2:   movzbl 0x9(%rbx),%r12d
    0.00 :   14b7:   mov    $0xe,%esi
    0.00 :   14bc:   mov    %rbp,%rdi
    0.00 :   14bf:   mov    %r12d,%edx
    0.00 :   14c2:   call   fd0 <nft_ct_get_eval_counter>
    0.00 :   14c7:   mov    %r12d,%edx
    0.00 :   14ca:   mov    $0xf,%esi
    0.00 :   14cf:   mov    %rbp,%rdi
    0.00 :   14d2:   mov    %rax,%rbx
    0.00 :   14d5:   call   fd0 <nft_ct_get_eval_counter>
    0.00 :   14da:   test   %rbx,%rbx
    0.00 :   14dd:   je     1429 <nft_ct_get_eval+0x219>
    0.00 :   14e3:   xor    %edx,%edx
    0.00 :   14e5:   div    %rbx
    0.00 :   14e8:   jmp    13b0 <nft_ct_get_eval+0x1a0>
    0.00 :   14ed:   movzbl 0x9(%rdi),%ecx
    0.00 :   14f1:   movzbl %cl,%esi
    0.00 :   14f4:   cmp    $0xb,%al
    0.00 :   14f6:   je     16ee <nft_ct_get_eval+0x4de>
    0.00 :   14fc:   cmp    $0xc,%al
    0.00 :   14fe:   jne    155f <nft_ct_get_eval+0x34f>
    0.00 :   1500:   lea    0x0(,%rsi,8),%rax
    0.00 :   1508:   movslq %r12d,%r12
    0.00 :   150b:   sub    %rsi,%rax
    0.00 :   150e:   movzwl 0x44(%rdx,%rax,8),%eax
    0.00 :   1513:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   151c:   mov    %ax,0x0(%r13)
    0.00 :   1521:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1526:   mov    0xb0(%rdx),%rax
    0.00 :   152d:   test   %rax,%rax
    0.00 :   1530:   je     15e7 <nft_ct_get_eval+0x3d7>
    0.00 :   1536:   movzbl 0x6(%rax),%edx
    0.00 :   153a:   test   %dl,%dl
    0.00 :   153c:   je     15e7 <nft_ct_get_eval+0x3d7>
    0.00 :   1542:   add    %rdx,%rax
    0.00 :   1545:   je     15e7 <nft_ct_get_eval+0x3d7>
    0.00 :   154b:   mov    (%rax),%rdx
    0.00 :   154e:   mov    %rdx,0x0(%r13)
    0.00 :   1552:   mov    0x8(%rax),%rax
    0.00 :   1556:   mov    %rax,0x8(%r13)
    0.00 :   155a:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   155f:   cmp    $0x8,%al
    0.00 :   1561:   je     1640 <nft_ct_get_eval+0x430>
    0.00 :   1567:   cmp    $0x9,%al
    0.00 :   1569:   jne    1255 <nft_ct_get_eval+0x45>
    0.00 :   156f:   cmpw   $0x2,0x32(%rdx)
    0.00 :   1574:   mov    $0x4,%eax
    0.00 :   1579:   mov    $0x10,%esi
    0.00 :   157e:   cmove  %rax,%rsi
    0.00 :   1582:   lea    0x0(,%rcx,8),%rax
    0.00 :   158a:   sub    %rcx,%rax
    0.00 :   158d:   lea    0x34(%rdx,%rax,8),%rdx
    0.00 :   1592:   mov    %esi,%eax
    0.00 :   1594:   cmp    $0x8,%esi
    0.00 :   1597:   jb     1610 <nft_ct_get_eval+0x400>
    0.00 :   1599:   mov    (%rdx),%rax
    0.00 :   159c:   lea    0x8(%r13),%rdi
    0.00 :   15a0:   mov    %rdx,%rcx
    0.00 :   15a3:   and    $0xfffffffffffffff8,%rdi
    0.00 :   15a7:   mov    %rax,0x0(%r13)
    0.00 :   15ab:   mov    -0x8(%rsi,%rdx,1),%rax
    0.00 :   15b0:   mov    %rax,-0x8(%r13,%rsi,1)
    0.00 :   15b5:   mov    %r13,%rax
    0.00 :   15b8:   sub    %rdi,%rax
    0.00 :   15bb:   sub    %rax,%rcx
    0.00 :   15be:   add    %esi,%eax
    0.00 :   15c0:   and    $0xfffffff8,%eax
    0.00 :   15c3:   cmp    $0x8,%eax
    0.00 :   15c6:   jb     1255 <nft_ct_get_eval+0x45>
    0.00 :   15cc:   and    $0xfffffff8,%eax
    0.00 :   15cf:   xor    %edx,%edx
    0.00 :   15d1:   mov    %edx,%esi
    0.00 :   15d3:   add    $0x8,%edx
    0.00 :   15d6:   mov    (%rcx,%rsi,1),%r8
    0.00 :   15da:   mov    %r8,(%rdi,%rsi,1)
    0.00 :   15de:   cmp    %eax,%edx
    0.00 :   15e0:   jb     15d1 <nft_ct_get_eval+0x3c1>
    0.00 :   15e2:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   15e7:   movq   $0x0,0x0(%r13)
    0.00 :   15ef:   movq   $0x0,0x8(%r13)
    0.00 :   15f7:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   15fc:   movzbl 0xf(%rdx),%esi
    0.00 :   1600:   xor    %ecx,%ecx
    0.00 :   1602:   bt     %eax,%esi
    0.00 :   1605:   jae    1413 <nft_ct_get_eval+0x203>
    0.00 :   160b:   jmp    140f <nft_ct_get_eval+0x1ff>
    0.00 :   1610:   and    $0x4,%esi
    0.00 :   1613:   jne    1741 <nft_ct_get_eval+0x531>
    0.00 :   1619:   test   %eax,%eax
    0.00 :   161b:   je     1255 <nft_ct_get_eval+0x45>
    0.00 :   1621:   movzbl (%rdx),%ecx
    0.00 :   1624:   mov    %cl,0x0(%r13)
    0.00 :   1628:   test   $0x2,%al
    0.00 :   162a:   je     1255 <nft_ct_get_eval+0x45>
    0.00 :   1630:   movzwl -0x2(%rdx,%rax,1),%edx
    0.00 :   1635:   mov    %dx,-0x2(%r13,%rax,1)
    0.00 :   163b:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1640:   cmpw   $0x2,0x32(%rdx)
    0.00 :   1645:   mov    $0x4,%eax
    0.00 :   164a:   mov    $0x10,%esi
    0.00 :   164f:   cmove  %rax,%rsi
    0.00 :   1653:   lea    0x0(,%rcx,8),%rax
    0.00 :   165b:   sub    %rcx,%rax
    0.00 :   165e:   lea    0x20(%rdx,%rax,8),%rdx
    0.00 :   1663:   mov    %esi,%eax
    0.00 :   1665:   cmp    $0x8,%esi
    0.00 :   1668:   jb     1610 <nft_ct_get_eval+0x400>
    0.00 :   166a:   mov    (%rdx),%rax
    0.00 :   166d:   lea    0x8(%r13),%rdi
    0.00 :   1671:   mov    %rdx,%rcx
    0.00 :   1674:   and    $0xfffffffffffffff8,%rdi
    0.00 :   1678:   mov    %rax,0x0(%r13)
    0.00 :   167c:   mov    -0x8(%rsi,%rdx,1),%rax
    0.00 :   1681:   mov    %rax,-0x8(%r13,%rsi,1)
    0.00 :   1686:   mov    %r13,%rax
    0.00 :   1689:   sub    %rdi,%rax
    0.00 :   168c:   sub    %rax,%rcx
    0.00 :   168f:   add    %esi,%eax
    0.00 :   1691:   and    $0xfffffff8,%eax
    0.00 :   1694:   cmp    $0x8,%eax
    0.00 :   1697:   jb     1255 <nft_ct_get_eval+0x45>
    0.00 :   169d:   and    $0xfffffff8,%eax
    0.00 :   16a0:   xor    %edx,%edx
    0.00 :   16a2:   mov    %edx,%esi
    0.00 :   16a4:   add    $0x8,%edx
    0.00 :   16a7:   mov    (%rcx,%rsi,1),%r8
    0.00 :   16ab:   mov    %r8,(%rdi,%rsi,1)
    0.00 :   16af:   cmp    %eax,%edx
    0.00 :   16b1:   jb     16a2 <nft_ct_get_eval+0x492>
    0.00 :   16b3:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   16b8:   movzbl 0x9(%rdi),%esi
    0.00 :   16bc:   cmp    $0x13,%al
    0.00 :   16be:   jne    1755 <nft_ct_get_eval+0x545>
    0.00 :   16c4:   cmpw   $0x2,0x32(%rdx)
    0.00 :   16c9:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   16cf:   movslq %esi,%rsi
    0.00 :   16d2:   movslq %r12d,%r12
    0.00 :   16d5:   lea    0x0(,%rsi,8),%rax
    0.00 :   16dd:   sub    %rsi,%rax
    0.00 :   16e0:   mov    0x20(%rdx,%rax,8),%eax
    0.00 :   16e4:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   16e9:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   16ee:   lea    0x0(,%rsi,8),%rax
    0.00 :   16f6:   movslq %r12d,%r12
    0.00 :   16f9:   sub    %rsi,%rax
    0.00 :   16fc:   movzwl 0x30(%rdx,%rax,8),%eax
    0.00 :   1701:   movl   $0x0,0x0(%rbp,%r12,4)
    0.00 :   170a:   mov    %ax,0x0(%r13)
    0.00 :   170f:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1714:   mov    $0x3,%esi
    0.00 :   1719:   call   171e <nft_ct_get_eval+0x50e>
    0.00 :   171e:   mov    %rax,%rbp
    0.00 :   1721:   jmp    14a9 <nft_ct_get_eval+0x299>
    0.00 :   1726:   mov    $0x3,%esi
    0.00 :   172b:   call   1730 <nft_ct_get_eval+0x520>
    0.00 :   1730:   jmp    1397 <nft_ct_get_eval+0x187>
    0.00 :   1735:   xor    %esi,%esi
    0.00 :   1737:   call   173c <nft_ct_get_eval+0x52c>
    0.00 :   173c:   jmp    1312 <nft_ct_get_eval+0x102>
    0.00 :   1741:   mov    (%rdx),%ecx
    0.00 :   1743:   mov    %ecx,0x0(%r13)
    0.00 :   1747:   mov    -0x4(%rdx,%rax,1),%edx
    0.00 :   174b:   mov    %edx,-0x4(%r13,%rax,1)
    0.00 :   1750:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   1755:   jbe    1255 <nft_ct_get_eval+0x45>
    0.00 :   175b:   cmp    $0x15,%al
    0.00 :   175d:   je     17b5 <nft_ct_get_eval+0x5a5>
    0.00 :   175f:   cmp    $0x16,%al
    0.00 :   1761:   jne    1783 <nft_ct_get_eval+0x573>
    0.00 :   1763:   cmpw   $0xa,0x32(%rdx)
    0.00 :   1768:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   176e:   lea    0x0(,%rsi,8),%rax
    0.00 :   1776:   sub    %rsi,%rax
    0.00 :   1779:   lea    0x34(%rdx,%rax,8),%rax
    0.00 :   177e:   jmp    154b <nft_ct_get_eval+0x33b>
    0.00 :   1783:   cmp    $0x14,%al
    0.00 :   1785:   jne    1255 <nft_ct_get_eval+0x45>
    0.00 :   178b:   cmpw   $0x2,0x32(%rdx)
    0.00 :   1790:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   1796:   movslq %esi,%rsi
    0.00 :   1799:   movslq %r12d,%r12
    0.00 :   179c:   lea    0x0(,%rsi,8),%rax
    0.00 :   17a4:   sub    %rsi,%rax
    0.00 :   17a7:   mov    0x34(%rdx,%rax,8),%eax
    0.00 :   17ab:   mov    %eax,0x0(%rbp,%r12,4)
    0.00 :   17b0:   jmp    1255 <nft_ct_get_eval+0x45>
    0.00 :   17b5:   cmpw   $0xa,0x32(%rdx)
    0.00 :   17ba:   jne    1336 <nft_ct_get_eval+0x126>
    0.00 :   17c0:   lea    0x0(,%rsi,8),%rax
    0.00 :   17c8:   sub    %rsi,%rax
    0.00 :   17cb:   lea    0x20(%rdx,%rax,8),%rax
    0.00 :   17d0:   mov    (%rax),%rdx
    0.00 :   17d3:   mov    %rdx,0x0(%r13)
    0.00 :   17d7:   mov    0x8(%rax),%rax
    0.00 :   17db:   mov    %rax,0x8(%r13)
    0.00 :   17df:   jmp    1255 <nft_ct_get_eval+0x45>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   28.79 [nf_tables][1b810]
   14.00 [nf_tables][1b83d]
    8.44 [nf_tables][1b85d]
    8.34 [nf_tables][1b839]
    7.78 [nf_tables][1ba11]
    7.75 [nf_tables][1b829]
    6.28 [nf_tables][1b88b]
    6.03 [nf_tables][1ba0a]
    5.33 [nf_tables][1b872]
    4.38 [nf_tables][1b84d]
    2.88 [nf_tables][1b877]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (16 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001b810 <nft_meta_get_eval>:
         : 6     nft_meta_get_eval():
   28.79 :   1b810:  call   1b815 <nft_meta_get_eval+0x5> // [nf_tables][1b810]
    0.00 :   1b815:  push   %rbp
    0.00 :   1b816:  push   %rbx
    0.00 :   1b817:  movzbl 0xa(%rdi),%ebp
    0.00 :   1b81b:  mov    %rsi,%rbx
    0.00 :   1b81e:  movzbl 0x8(%rdi),%edi
    0.00 :   1b822:  mov    (%rdx),%r8
    0.00 :   1b825:  lea    (%rsi,%rbp,4),%rcx
    7.75 :   1b829:  cmp    $0x13,%dil // [nf_tables][1b829]
    0.00 :   1b82d:  je     1ba3f <nft_meta_get_eval+0x22f>
    0.00 :   1b833:  ja     1b8f9 <nft_meta_get_eval+0xe9>
    8.34 :   1b839:  cmp    $0xb,%dil // [nf_tables][1b839]
   14.00 :   1b83d:  ja     1b8c4 <nft_meta_get_eval+0xb4> // [nf_tables][1b83d]
    0.00 :   1b843:  cmp    $0x9,%dil
    0.00 :   1b847:  ja     1ba2a <nft_meta_get_eval+0x21a>
    4.38 :   1b84d:  cmp    $0x2,%dil // [nf_tables][1b84d]
    0.00 :   1b851:  je     1ba18 <nft_meta_get_eval+0x208>
    0.00 :   1b857:  jbe    1bb09 <nft_meta_get_eval+0x2f9>
    8.44 :   1b85d:  cmp    $0x3,%dil // [nf_tables][1b85d]
    0.00 :   1b861:  jne    1b877 <nft_meta_get_eval+0x67>
    0.00 :   1b863:  mov    0xa8(%r8),%eax
    0.00 :   1b86a:  movslq %ebp,%rbp
    0.00 :   1b86d:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1b870:  pop    %rbx
    0.00 :   1b871:  pop    %rbp
    5.33 :   1b872:  jmp    1b877 <nft_meta_get_eval+0x67> // [nf_tables][1b872]
    2.88 :   1b877:  cmp    $0x8,%dil // [nf_tables][1b877]
    0.00 :   1b87b:  je     1ba87 <nft_meta_get_eval+0x277>
    0.00 :   1b881:  cmp    $0x9,%dil
    0.00 :   1b885:  je     1bac3 <nft_meta_get_eval+0x2b3>
    6.28 :   1b88b:  cmp    $0x6,%dil // [nf_tables][1b88b]
    0.00 :   1b88f:  je     1bb5b <nft_meta_get_eval+0x34b>
    0.00 :   1b895:  cmp    $0x7,%dil
    0.00 :   1b899:  jne    1bb37 <nft_meta_get_eval+0x327>
    0.00 :   1b89f:  mov    0x8(%rdx),%rax
    0.00 :   1b8a3:  mov    0x10(%rax),%rax
    0.00 :   1b8a7:  test   %rax,%rax
    0.00 :   1b8aa:  mov    $0x0,%rsi
    0.00 :   1b8b1:  pop    %rbx
    0.00 :   1b8b2:  mov    $0x10,%edx
    0.00 :   1b8b7:  cmovne %rax,%rsi
    0.00 :   1b8bb:  mov    %rcx,%rdi
    0.00 :   1b8be:  pop    %rbp
    0.00 :   1b8bf:  jmp    1b8c4 <nft_meta_get_eval+0xb4>
    0.00 :   1b8c4:  cmp    $0xf,%dil
    0.00 :   1b8c8:  je     1b9ff <nft_meta_get_eval+0x1ef>
    0.00 :   1b8ce:  jbe    1b92c <nft_meta_get_eval+0x11c>
    0.00 :   1b8d0:  cmp    $0x10,%dil
    0.00 :   1b8d4:  jne    1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1b8da:  testb  $0x1,0x10(%rdx)
    0.00 :   1b8de:  je     1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b8e4:  movzbl 0x11(%rdx),%eax
    0.00 :   1b8e8:  movslq %ebp,%rbp
    0.00 :   1b8eb:  movl   $0x0,(%rsi,%rbp,4)
    0.00 :   1b8f2:  mov    %al,(%rcx)
    0.00 :   1b8f4:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b8f9:  cmp    $0x19,%dil
    0.00 :   1b8fd:  je     1ba5f <nft_meta_get_eval+0x24f>
    0.00 :   1b903:  jbe    1b94e <nft_meta_get_eval+0x13e>
    0.00 :   1b905:  cmp    $0x21,%dil
    0.00 :   1b909:  je     1b9bd <nft_meta_get_eval+0x1ad>
    0.00 :   1b90f:  jbe    1bad5 <nft_meta_get_eval+0x2c5>
    0.00 :   1b915:  cmp    $0x22,%dil
    0.00 :   1b919:  jne    1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1b91f:  pop    %rbx
    0.00 :   1b920:  mov    %rdx,%rsi
    0.00 :   1b923:  mov    %rcx,%rdi
    0.00 :   1b926:  pop    %rbp
    0.00 :   1b927:  jmp    1b7b0 <nft_meta_get_eval_sdifname>
    0.00 :   1b92c:  cmp    $0xd,%dil
    0.00 :   1b930:  je     1b9d4 <nft_meta_get_eval+0x1c4>
    0.00 :   1b936:  cmp    $0xe,%dil
    0.00 :   1b93a:  jne    1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1b93c:  mov    0xa4(%r8),%eax
    0.00 :   1b943:  movslq %ebp,%rbp
    0.00 :   1b946:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1b949:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b94e:  cmp    $0x17,%dil
    0.00 :   1b952:  je     1b9ea <nft_meta_get_eval+0x1da>
    0.00 :   1b958:  cmp    $0x18,%dil
    0.00 :   1b95c:  jne    1b96e <nft_meta_get_eval+0x15e>
    0.00 :   1b95e:  call   1b963 <nft_meta_get_eval+0x153>
    0.00 :   1b963:  movslq %ebp,%rbp
    0.00 :   1b966:  mov    %eax,(%rbx,%rbp,4)
    0.00 :   1b969:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b96e:  cmp    $0x14,%dil
    0.00 :   1b972:  jne    1b986 <nft_meta_get_eval+0x176>
    0.00 :   1b974:  mov    %gs:0x0(%rip),%eax        # 1b97b <nft_meta_get_eval+0x16b>
    0.00 :   1b97b:  movslq %ebp,%rbp
    0.00 :   1b97e:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1b981:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b986:  cmp    $0x15,%dil
    0.00 :   1b98a:  je     1baad <nft_meta_get_eval+0x29d>
    0.00 :   1b990:  mov    0x8(%rdx),%rax
    0.00 :   1b994:  mov    0x10(%rax),%rax
    0.00 :   1b998:  test   %rax,%rax
    0.00 :   1b99b:  je     1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b99d:  mov    0x12c(%rax),%eax
    0.00 :   1b9a3:  movslq %ebp,%rbp
    0.00 :   1b9a6:  mov    %eax,(%rbx,%rbp,4)
    0.00 :   1b9a9:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9ae:  ud2
    0.00 :   1b9b0:  movl   $0xfffffffe,(%rbx)
    0.00 :   1b9b6:  pop    %rbx
    0.00 :   1b9b7:  pop    %rbp
    0.00 :   1b9b8:  jmp    1b9bd <nft_meta_get_eval+0x1ad>
    0.00 :   1b9bd:  mov    0x8(%rdx),%rsi
    0.00 :   1b9c1:  mov    %r8,%rdi
    0.00 :   1b9c4:  call   1b5d0 <nft_meta_get_eval_sdif.isra.0>
    0.00 :   1b9c9:  movslq %ebp,%rbp
    0.00 :   1b9cc:  mov    %eax,(%rbx,%rbp,4)
    0.00 :   1b9cf:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9d4:  mov    0x58(%r8),%rdi
    0.00 :   1b9d8:  mov    %rcx,%rsi
    0.00 :   1b9db:  call   1b610 <nft_meta_get_eval_rtclassid.isra.0>
    0.00 :   1b9e0:  test   %al,%al
    0.00 :   1b9e2:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9e8:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b9ea:  mov    %rdx,%rsi
    0.00 :   1b9ed:  mov    %rcx,%rdi
    0.00 :   1b9f0:  call   1ab60 <nft_meta_get_eval_cgroup>
    0.00 :   1b9f5:  test   %al,%al
    0.00 :   1b9f7:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1b9fd:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1b9ff:  mov    0x8(%rdx),%rax
    0.00 :   1ba03:  movslq %ebp,%rbp
    0.00 :   1ba06:  movzbl 0x1(%rax),%eax
    6.03 :   1ba0a:  movl   $0x0,(%rsi,%rbp,4) // [nf_tables][1ba0a]
    7.78 :   1ba11:  mov    %al,(%rcx) // [nf_tables][1ba11]
    0.00 :   1ba13:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba18:  mov    0x8c(%r8),%eax
    0.00 :   1ba1f:  movslq %ebp,%rbp
    0.00 :   1ba22:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1ba25:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba2a:  mov    %rcx,%rsi
    0.00 :   1ba2d:  call   1ad30 <nft_meta_get_eval_skugid>
    0.00 :   1ba32:  test   %al,%al
    0.00 :   1ba34:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba3a:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1ba3f:  movzbl 0x80(%r8),%eax
    0.00 :   1ba47:  and    $0x7,%eax
    0.00 :   1ba4a:  cmp    $0x5,%al
    0.00 :   1ba4c:  je     1ba6b <nft_meta_get_eval+0x25b>
    0.00 :   1ba4e:  movslq %ebp,%rbp
    0.00 :   1ba51:  movl   $0x0,(%rbx,%rbp,4)
    0.00 :   1ba58:  mov    %al,(%rcx)
    0.00 :   1ba5a:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba5f:  movzbl 0x7f(%r8),%eax
    0.00 :   1ba64:  shr    %al
    0.00 :   1ba66:  and    $0x1,%eax
    0.00 :   1ba69:  jmp    1ba4e <nft_meta_get_eval+0x23e>
    0.00 :   1ba6b:  mov    0x8(%rdx),%rsi
    0.00 :   1ba6f:  mov    %r8,%rdi
    0.00 :   1ba72:  mov    %rcx,%rdx
    0.00 :   1ba75:  call   1b690 <nft_meta_get_eval_pkttype_lo.isra.0>
    0.00 :   1ba7a:  test   %al,%al
    0.00 :   1ba7c:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1ba82:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1ba87:  mov    0x10(%r8),%rax
    0.00 :   1ba8b:  test   %rax,%rax
    0.00 :   1ba8e:  je     1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1ba94:  movzwl 0x128(%rax),%eax
    0.00 :   1ba9b:  movslq %ebp,%rbp
    0.00 :   1ba9e:  movl   $0x0,(%rbx,%rbp,4)
    0.00 :   1baa5:  mov    %ax,(%rcx)
    0.00 :   1baa8:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1baad:  mov    0x8(%rdx),%rax
    0.00 :   1bab1:  mov    0x8(%rax),%rax
    0.00 :   1bab5:  test   %rax,%rax
    0.00 :   1bab8:  jne    1b99d <nft_meta_get_eval+0x18d>
    0.00 :   1babe:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1bac3:  mov    0x8(%rdx),%rax
    0.00 :   1bac7:  mov    0x10(%rax),%rax
    0.00 :   1bacb:  test   %rax,%rax
    0.00 :   1bace:  jne    1ba94 <nft_meta_get_eval+0x284>
    0.00 :   1bad0:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1bad5:  cmp    $0x1b,%dil
    0.00 :   1bad9:  ja     1baf4 <nft_meta_get_eval+0x2e4>
    0.00 :   1badb:  mov    0x8(%rdx),%rdx
    0.00 :   1badf:  mov    %rcx,%rsi
    0.00 :   1bae2:  call   1b630 <nft_meta_get_eval_kind.isra.0>
    0.00 :   1bae7:  test   %al,%al
    0.00 :   1bae9:  jne    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1baef:  jmp    1b9b0 <nft_meta_get_eval+0x1a0>
    0.00 :   1baf4:  lea    -0x1e(%rdi),%eax
    0.00 :   1baf7:  cmp    $0x2,%al
    0.00 :   1baf9:  ja     1b9ae <nft_meta_get_eval+0x19e>
    0.00 :   1baff:  pop    %rbx
    0.00 :   1bb00:  mov    %rcx,%rsi
    0.00 :   1bb03:  pop    %rbp
    0.00 :   1bb04:  jmp    1ae00 <nft_meta_get_eval_time>
    0.00 :   1bb09:  test   %dil,%dil
    0.00 :   1bb0c:  je     1bb28 <nft_meta_get_eval+0x318>
    0.00 :   1bb0e:  movzwl 0xb4(%r8),%eax
    0.00 :   1bb16:  movslq %ebp,%rbp
    0.00 :   1bb19:  movl   $0x0,(%rsi,%rbp,4)
    0.00 :   1bb20:  mov    %ax,(%rcx)
    0.00 :   1bb23:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1bb28:  mov    0x70(%r8),%eax
    0.00 :   1bb2c:  movslq %ebp,%rbp
    0.00 :   1bb2f:  mov    %eax,(%rsi,%rbp,4)
    0.00 :   1bb32:  jmp    1b870 <nft_meta_get_eval+0x60>
    0.00 :   1bb37:  cmp    $0x4,%dil
    0.00 :   1bb3b:  je     1bb68 <nft_meta_get_eval+0x358>
    0.00 :   1bb3d:  mov    0x8(%rdx),%rax
    0.00 :   1bb41:  mov    0x10(%rax),%rdx
    0.00 :   1bb45:  xor    %eax,%eax
    0.00 :   1bb47:  test   %rdx,%rdx
    0.00 :   1bb4a:  je     1b9c9 <nft_meta_get_eval+0x1b9>
    0.00 :   1bb50:  mov    0xd8(%rdx),%eax
    0.00 :   1bb56:  jmp    1b9c9 <nft_meta_get_eval+0x1b9>
    0.00 :   1bb5b:  mov    0x8(%rdx),%rax
    0.00 :   1bb5f:  mov    0x8(%rax),%rax
    0.00 :   1bb63:  jmp    1b8a7 <nft_meta_get_eval+0x97>
    0.00 :   1bb68:  mov    0x8(%rdx),%rax
    0.00 :   1bb6c:  mov    0x8(%rax),%rdx
    0.00 :   1bb70:  xor    %eax,%eax
    0.00 :   1bb72:  test   %rdx,%rdx
    0.00 :   1bb75:  jne    1bb50 <nft_meta_get_eval+0x340>
    0.00 :   1bb77:  jmp    1b9c9 <nft_meta_get_eval+0x1b9>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   77.86 libc.so.6[27920]
   15.52 libc.so.6[2792b]
    6.62 libc.so.6[27924]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (14 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000027920 <__errno_location>:
         : 6     __GI___errno_location():
   77.86 :   27920:  endbr64 // libc.so.6[27920]
    6.62 :   27924:  mov    0x1ab4e5(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290> // libc.so.6[27924]
   15.52 :   2792b:  add    %fs:0x0,%rax // libc.so.6[2792b]
    0.00 :   27934:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   88.15 libc.so.6[a0f70]
   11.85 libc.so.6[a0f7d]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (14 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000a0f70 <__strdup>:
         : 6     __GI___strdup():
   88.15 :   a0f70:  endbr64 // libc.so.6[a0f70]
    0.00 :   a0f74:  push   %rbp
    0.00 :   a0f75:  push   %rbx
    0.00 :   a0f76:  mov    %rdi,%rbx
    0.00 :   a0f79:  sub    $0x8,%rsp
   11.85 :   a0f7d:  call   26490 <*ABS*+0xa17f0@plt> // libc.so.6[a0f7d]
    0.00 :   a0f82:  lea    0x1(%rax),%rbp
    0.00 :   a0f86:  mov    %rbp,%rdi
    0.00 :   a0f89:  call   266c0 <malloc@plt>
    0.00 :   a0f8e:  test   %rax,%rax
    0.00 :   a0f91:  je     a0fa7 <__strdup+0x37>
    0.00 :   a0f93:  add    $0x8,%rsp
    0.00 :   a0f97:  mov    %rbp,%rdx
    0.00 :   a0f9a:  mov    %rbx,%rsi
    0.00 :   a0f9d:  mov    %rax,%rdi
    0.00 :   a0fa0:  pop    %rbx
    0.00 :   a0fa1:  pop    %rbp
    0.00 :   a0fa2:  jmp    26610 <*ABS*+0x9e3e0@plt>
    0.00 :   a0fa7:  pop    %rdx
    0.00 :   a0fa8:  xor    %eax,%eax
    0.00 :   a0faa:  pop    %rbx
    0.00 :   a0fab:  pop    %rbp
    0.00 :   a0fac:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   19.45 [virtio_net][256e]
   15.56 [virtio_net][24ff]
   10.03 [virtio_net][22e0]
    8.26 [virtio_net][22d3]
    7.72 [virtio_net][24fa]
    7.54 [virtio_net][24ef]
    7.29 [virtio_net][2380]
    6.70 [virtio_net][236f]
    5.88 [virtio_net][22d8]
    5.79 [virtio_net][2294]
    5.78 [virtio_net][22e4]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (14 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002170 <page_to_skb>:
         : 6    page_to_skb():
    0.00 :   2170:   call   2175 <page_to_skb+0x5>
    0.00 :   2175:   push   %r15
    0.00 :   2177:   mov    %rdi,%r11
    0.00 :   217a:   push   %r14
    0.00 :   217c:   mov    %rdx,%r14
    0.00 :   217f:   push   %r13
    0.00 :   2181:   mov    %ecx,%r13d
    0.00 :   2184:   push   %r12
    0.00 :   2186:   mov    %rsi,%r12
    0.00 :   2189:   push   %rbp
    0.00 :   218a:   mov    %r14,%rbp
    0.00 :   218d:   push   %rbx
    0.00 :   218e:   sub    $0x28,%rsp
    0.00 :   2192:   sub    0x0(%rip),%rbp        # 2199 <page_to_skb+0x29>
    0.00 :   2199:   mov    0x60(%rsp),%eax
    0.00 :   219d:   sar    $0x6,%rbp
    0.00 :   21a1:   mov    0x70(%rsp),%edx
    0.00 :   21a5:   shl    $0xc,%rbp
    0.00 :   21a9:   add    0x0(%rip),%rbp        # 21b0 <page_to_skb+0x40>
    0.00 :   21b0:   mov    %eax,(%rsp)
    0.00 :   21b3:   mov    %ecx,%eax
    0.00 :   21b5:   add    %rax,%rbp
    0.00 :   21b8:   movzbl 0x4a(%rdi),%eax
    0.00 :   21bc:   cmpb   $0x0,0x38(%rdi)
    0.00 :   21c0:   mov    %al,0x7(%rsp)
    0.00 :   21c4:   je     24bb <page_to_skb+0x34b>
    0.00 :   21ca:   movzbl %al,%r10d
    0.00 :   21ce:   mov    %eax,%ecx
    0.00 :   21d0:   test   %edx,%edx
    0.00 :   21d2:   mov    $0x1000,%esi
    0.00 :   21d7:   cmovne %esi,%r9d
    0.00 :   21db:   sub    %eax,%r8d
    0.00 :   21de:   lea    (%rdx,%r8,1),%eax
    0.00 :   21e2:   mov    %r8d,%r15d
    0.00 :   21e5:   add    %ecx,%eax
    0.00 :   21e7:   mov    %r9d,%esi
    0.00 :   21ea:   sub    %eax,%esi
    0.00 :   21ec:   cmp    $0x13f,%esi
    0.00 :   21f2:   jle    2333 <page_to_skb+0x1c3>
    0.00 :   21f8:   cmp    $0x80,%r8d
    0.00 :   21ff:   jbe    2333 <page_to_skb+0x1c3>
    0.00 :   2205:   mov    %edx,%r13d
    0.00 :   2208:   mov    %rbp,%rdi
    0.00 :   220b:   mov    %r9d,%esi
    0.00 :   220e:   mov    %ecx,0x8(%rsp)
    0.00 :   2212:   sub    %r13,%rdi
    0.00 :   2215:   mov    %edx,0x70(%rsp)
    0.00 :   2219:   call   221e <page_to_skb+0xae>
    0.00 :   221e:   mov    %rax,%rbx
    0.00 :   2221:   test   %rax,%rax
    0.00 :   2224:   je     257d <page_to_skb+0x40d>
    0.00 :   222a:   mov    0x8(%rsp),%ecx
    0.00 :   222e:   mov    0x70(%rsp),%edx
    0.00 :   2232:   mov    %r15d,%esi
    0.00 :   2235:   mov    %rbx,%rdi
    0.00 :   2238:   lea    (%rcx,%r13,1),%eax
    0.00 :   223c:   add    %ecx,%edx
    0.00 :   223e:   add    %edx,0xbc(%rbx)
    0.00 :   2244:   cltq
    0.00 :   2246:   add    %rax,0xd0(%rbx)
    0.00 :   224d:   call   2252 <page_to_skb+0xe2>
    0.00 :   2252:   mov    0x28(%r14),%rcx
    0.00 :   2256:   test   %rcx,%rcx
    0.00 :   2259:   je     24e0 <page_to_skb+0x370>
    0.00 :   225f:   mov    0x28(%rcx),%rax
    0.00 :   2263:   mov    %rcx,%rdx
    0.00 :   2266:   test   %rax,%rax
    0.00 :   2269:   je     2277 <page_to_skb+0x107>
    0.00 :   226b:   mov    %rax,%rdx
    0.00 :   226e:   mov    0x28(%rax),%rax
    0.00 :   2272:   test   %rax,%rax
    0.00 :   2275:   jne    226b <page_to_skb+0xfb>
    0.00 :   2277:   mov    0x1e0(%r12),%rax
    0.00 :   227f:   cmpb   $0x0,(%rsp)
    0.00 :   2283:   mov    %rax,0x28(%rdx)
    0.00 :   2287:   mov    %rcx,0x1e0(%r12)
    0.00 :   228f:   je     22e0 <page_to_skb+0x170>
    0.00 :   2291:   xor    %r14d,%r14d
    5.79 :   2294:   movzbl 0x7(%rsp),%r12d // [virtio_net][2294]
    0.00 :   229a:   lea    0x28(%rbx),%r13
    0.00 :   229e:   cmp    $0x30,%r12b
    0.00 :   22a2:   ja     2586 <page_to_skb+0x416>
    0.00 :   22a8:   cmp    $0x8,%r12d
    0.00 :   22ac:   jae    2541 <page_to_skb+0x3d1>
    0.00 :   22b2:   test   $0x4,%r12b
    0.00 :   22b6:   jne    25bc <page_to_skb+0x44c>
    0.00 :   22bc:   test   %r12d,%r12d
    0.00 :   22bf:   je     22d3 <page_to_skb+0x163>
    0.00 :   22c1:   movzbl 0x0(%rbp),%eax
    0.00 :   22c5:   mov    %al,0x0(%r13)
    0.00 :   22c9:   test   $0x2,%r12b
    0.00 :   22cd:   jne    25f4 <page_to_skb+0x484>
    8.26 :   22d3:   test   %r14,%r14 // [virtio_net][22d3]
    0.00 :   22d6:   je     22e0 <page_to_skb+0x170>
    5.88 :   22d8:   mov    %r14,%rdi // [virtio_net][22d8]
    0.00 :   22db:   call   1ef0 <put_page>
   10.03 :   22e0:   mov    0x68(%rsp),%eax // [virtio_net][22e0]
    5.78 :   22e4:   test   %eax,%eax // [virtio_net][22e4]
    0.00 :   22e6:   je     231d <page_to_skb+0x1ad>
    0.00 :   22e8:   mov    0x70(%rbx),%eax
    0.00 :   22eb:   sub    0x68(%rsp),%eax
    0.00 :   22ef:   mov    %eax,0x70(%rbx)
    0.00 :   22f2:   cmp    0x74(%rbx),%eax
    0.00 :   22f5:   jb     2584 <page_to_skb+0x414>
    0.00 :   22fb:   mov    0x68(%rsp),%eax
    0.00 :   22ff:   mov    0xc8(%rbx),%rdx
    0.00 :   2306:   add    %rax,0xd0(%rbx)
    0.00 :   230d:   movzbl 0x68(%rsp),%edi
    0.00 :   2312:   mov    0xc0(%rbx),%eax
    0.00 :   2318:   mov    %dil,0x1(%rdx,%rax,1)
    0.00 :   231d:   add    $0x28,%rsp
    0.00 :   2321:   mov    %rbx,%rax
    0.00 :   2324:   pop    %rbx
    0.00 :   2325:   pop    %rbp
    0.00 :   2326:   pop    %r12
    0.00 :   2328:   pop    %r13
    0.00 :   232a:   pop    %r14
    0.00 :   232c:   pop    %r15
    0.00 :   232e:   jmp    2333 <page_to_skb+0x1c3>
    0.00 :   2333:   lea    0x8(%r12),%rdi
    0.00 :   2338:   mov    $0xa20,%edx
    0.00 :   233d:   mov    $0x80,%esi
    0.00 :   2342:   mov    %r9d,0x20(%rsp)
    0.00 :   2347:   mov    %r11,0x18(%rsp)
    0.00 :   234c:   mov    %r10,0x10(%rsp)
    0.00 :   2351:   mov    %ecx,0x8(%rsp)
    0.00 :   2355:   call   235a <page_to_skb+0x1ea>
    0.00 :   235a:   mov    %rax,%rbx
    0.00 :   235d:   test   %rax,%rax
    0.00 :   2360:   je     257d <page_to_skb+0x40d>
    0.00 :   2366:   mov    0x74(%rbx),%edx
    0.00 :   2369:   xor    %eax,%eax
    0.00 :   236b:   mov    0x8(%rsp),%ecx
    6.70 :   236f:   mov    0x10(%rsp),%r10 // [virtio_net][236f]
    0.00 :   2374:   mov    0x18(%rsp),%r11
    0.00 :   2379:   test   %edx,%edx
    0.00 :   237b:   mov    0x20(%rsp),%r9d
    7.29 :   2380:   jne    238e <page_to_skb+0x21e> // [virtio_net][2380]
    0.00 :   2382:   mov    0xc0(%rbx),%eax
    0.00 :   2388:   sub    0xbc(%rbx),%eax
    0.00 :   238e:   lea    (%rcx,%r13,1),%edi
    0.00 :   2392:   lea    0x0(%rbp,%r10,1),%rdx
    0.00 :   2397:   mov    %r9d,0x18(%rsp)
    0.00 :   239c:   mov    %edi,0x10(%rsp)
    0.00 :   23a0:   mov    %rdx,0x8(%rsp)
    0.00 :   23a5:   cmp    %r15d,%eax
    0.00 :   23a8:   jae    24ef <page_to_skb+0x37f>
    0.00 :   23ae:   mov    0x68(%rsp),%eax
    0.00 :   23b2:   mov    %rbx,%rdi
    0.00 :   23b5:   mov    %r11,0x20(%rsp)
    0.00 :   23ba:   lea    0xe(%rax),%r13d
    0.00 :   23be:   mov    %r13d,%esi
    0.00 :   23c1:   sub    %r13d,%r15d
    0.00 :   23c4:   call   23c9 <page_to_skb+0x259>
    0.00 :   23c9:   mov    0x8(%rsp),%rsi
    0.00 :   23ce:   mov    %r13d,%edx
    0.00 :   23d1:   mov    %rax,%rdi
    0.00 :   23d4:   call   23d9 <page_to_skb+0x269>
    0.00 :   23d9:   mov    0x10(%rsp),%ecx
    0.00 :   23dd:   mov    0x20(%rsp),%r11
    0.00 :   23e2:   mov    0x18(%rsp),%r9d
    0.00 :   23e7:   add    %r13d,%ecx
    0.00 :   23ea:   cmpb   $0x0,0x38(%r11)
    0.00 :   23ef:   jne    24cb <page_to_skb+0x35b>
    0.00 :   23f5:   cmp    $0x11000,%r15d
    0.00 :   23fc:   ja     2573 <page_to_skb+0x403>
    0.00 :   2402:   cmp    $0xfff,%ecx
    0.00 :   2408:   ja     2530 <page_to_skb+0x3c0>
    0.00 :   240e:   test   %r15d,%r15d
    0.00 :   2411:   je     247b <page_to_skb+0x30b>
    0.00 :   2413:   mov    %rbp,0x8(%rsp)
    0.00 :   2418:   mov    $0x1000,%r13d
    0.00 :   241e:   mov    %rbx,%rbp
    0.00 :   2421:   mov    %r9d,%ebx
    0.00 :   2424:   mov    %r12,0x10(%rsp)
    0.00 :   2429:   mov    %r14,%r12
    0.00 :   242c:   mov    %r15d,%r14d
    0.00 :   242f:   mov    %r13d,%r15d
    0.00 :   2432:   mov    0xc8(%rbp),%rdi
    0.00 :   2439:   mov    %r12,%rdx
    0.00 :   243c:   mov    %ebx,%r9d
    0.00 :   243f:   sub    %ecx,%r15d
    0.00 :   2442:   mov    0xc0(%rbp),%esi
    0.00 :   2448:   cmp    %r14d,%r15d
    0.00 :   244b:   cmova  %r14d,%r15d
    0.00 :   244f:   movzbl 0x2(%rdi,%rsi,1),%esi
    0.00 :   2454:   mov    %rbp,%rdi
    0.00 :   2457:   mov    %r15d,%r8d
    0.00 :   245a:   call   245f <page_to_skb+0x2ef>
    0.00 :   245f:   mov    0x28(%r12),%r12
    0.00 :   2464:   xor    %ecx,%ecx
    0.00 :   2466:   sub    %r15d,%r14d
    0.00 :   2469:   jne    242f <page_to_skb+0x2bf>
    0.00 :   246b:   mov    %rbp,%rbx
    0.00 :   246e:   mov    %r12,%r14
    0.00 :   2471:   mov    0x8(%rsp),%rbp
    0.00 :   2476:   mov    0x10(%rsp),%r12
    0.00 :   247b:   test   %r14,%r14
    0.00 :   247e:   je     24e0 <page_to_skb+0x370>
    0.00 :   2480:   mov    0x28(%r14),%rax
    0.00 :   2484:   mov    %r14,%rdx
    0.00 :   2487:   test   %rax,%rax
    0.00 :   248a:   je     2498 <page_to_skb+0x328>
    0.00 :   248c:   mov    %rax,%rdx
    0.00 :   248f:   mov    0x28(%rax),%rax
    0.00 :   2493:   test   %rax,%rax
    0.00 :   2496:   jne    248c <page_to_skb+0x31c>
    0.00 :   2498:   mov    0x1e0(%r12),%rax
    0.00 :   24a0:   cmpb   $0x0,(%rsp)
    0.00 :   24a4:   mov    %rax,0x28(%rdx)
    0.00 :   24a8:   mov    %r14,0x1e0(%r12)
    0.00 :   24b0:   jne    2291 <page_to_skb+0x121>
    0.00 :   24b6:   jmp    22e0 <page_to_skb+0x170>
    0.00 :   24bb:   mov    $0x20,%r10d
    0.00 :   24c1:   mov    $0x20,%ecx
    0.00 :   24c6:   jmp    21d0 <page_to_skb+0x60>
    0.00 :   24cb:   test   %r15d,%r15d
    0.00 :   24ce:   je     2532 <page_to_skb+0x3c2>
    0.00 :   24d0:   mov    %r15d,%r8d
    0.00 :   24d3:   mov    %r14,%rdx
    0.00 :   24d6:   xor    %esi,%esi
    0.00 :   24d8:   mov    %rbx,%rdi
    0.00 :   24db:   call   24e0 <page_to_skb+0x370>
    0.00 :   24e0:   cmpb   $0x0,(%rsp)
    0.00 :   24e4:   je     22e0 <page_to_skb+0x170>
    0.00 :   24ea:   jmp    2291 <page_to_skb+0x121>
    7.54 :   24ef:   mov    %r15d,%esi // [virtio_net][24ef]
    0.00 :   24f2:   mov    %rbx,%rdi
    0.00 :   24f5:   mov    %r11,0x18(%rsp)
    7.72 :   24fa:   call   24ff <page_to_skb+0x38f> // [virtio_net][24fa]
   15.56 :   24ff:   mov    0x8(%rsp),%rsi // [virtio_net][24ff]
    0.00 :   2504:   mov    %r15d,%edx
    0.00 :   2507:   mov    %rax,%rdi
    0.00 :   250a:   call   250f <page_to_skb+0x39f>
    0.00 :   250f:   mov    0x18(%rsp),%r11
    0.00 :   2514:   cmpb   $0x0,0x38(%r11)
    0.00 :   2519:   jne    2532 <page_to_skb+0x3c2>
    0.00 :   251b:   mov    0x10(%rsp),%r8d
    0.00 :   2520:   add    %r15d,%r8d
    0.00 :   2523:   cmp    $0xfff,%r8d
    0.00 :   252a:   jbe    247b <page_to_skb+0x30b>
    0.00 :   2530:   ud2
    0.00 :   2532:   cmpb   $0x0,(%rsp)
    0.00 :   2536:   je     22d3 <page_to_skb+0x163>
    0.00 :   253c:   jmp    2294 <page_to_skb+0x124>
    0.00 :   2541:   mov    0x0(%rbp),%rax
    0.00 :   2545:   lea    0x8(%r13),%rdi
    0.00 :   2549:   mov    %rbp,%rsi
    0.00 :   254c:   and    $0xfffffffffffffff8,%rdi
    0.00 :   2550:   mov    %rax,0x0(%r13)
    0.00 :   2554:   mov    -0x8(%rbp,%r12,1),%rax
    0.00 :   2559:   mov    %rax,-0x8(%r13,%r12,1)
    0.00 :   255e:   sub    %rdi,%r13
    0.00 :   2561:   lea    (%r12,%r13,1),%ecx
    0.00 :   2565:   sub    %r13,%rsi
    0.00 :   2568:   shr    $0x3,%ecx
    0.00 :   256b:   rep movsq %ds:(%rsi),%es:(%rdi)
   19.45 :   256e:   jmp    22d3 <page_to_skb+0x163> // [virtio_net][256e]
    0.00 :   2573:   xchg   %ax,%ax
    0.00 :   2575:   mov    %rbx,%rdi
    0.00 :   2578:   call   257d <page_to_skb+0x40d>
    0.00 :   257d:   xor    %ebx,%ebx
    0.00 :   257f:   jmp    231d <page_to_skb+0x1ad>
    0.00 :   2584:   ud2
    0.00 :   2586:   cmpb   $0x0,0x0(%rip)        # 258d <page_to_skb+0x41d>
    0.00 :   258d:   jne    22a8 <page_to_skb+0x138>
    0.00 :   2593:   mov    $0x30,%ecx
    0.00 :   2598:   mov    $0x0,%rdx
    0.00 :   259f:   mov    %r12,%rsi
    0.00 :   25a2:   mov    $0x0,%rdi
    0.00 :   25a9:   movb   $0x1,0x0(%rip)        # 25b0 <page_to_skb+0x440>
    0.00 :   25b0:   call   25b5 <page_to_skb+0x445>
    0.00 :   25b5:   ud2
    0.00 :   25b7:   jmp    22a8 <page_to_skb+0x138>
    0.00 :   25bc:   mov    0x0(%rbp),%eax
    0.00 :   25bf:   mov    %eax,0x0(%r13)
    0.00 :   25c3:   mov    -0x4(%rbp,%r12,1),%eax
    0.00 :   25c8:   mov    %eax,-0x4(%r13,%r12,1)
    0.00 :   25cd:   jmp    22d3 <page_to_skb+0x163>
    0.00 :   25d2:   call   25d7 <page_to_skb+0x467>
    0.00 :   25d7:   test   %eax,%eax
    0.00 :   25d9:   je     2575 <page_to_skb+0x405>
    0.00 :   25db:   mov    0x10(%rbx),%rdx
    0.00 :   25df:   mov    $0x0,%rsi
    0.00 :   25e6:   mov    $0x0,%rdi
    0.00 :   25ed:   call   25f2 <page_to_skb+0x482>
    0.00 :   25f2:   jmp    2575 <page_to_skb+0x405>
    0.00 :   25f4:   movzwl -0x2(%rbp,%r12,1),%eax
    0.00 :   25fa:   mov    %ax,-0x2(%r13,%r12,1)
    0.00 :   2600:   jmp    22d3 <page_to_skb+0x163>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   18.89 libc.so.6[989b9]
   15.78 libc.so.6[989b5]
   10.45 libc.so.6[985c1]
    8.60 libc.so.6[98683]
    8.41 libc.so.6[98a6a]
    7.64 libc.so.6[98ca4]
    7.49 libc.so.6[98998]
    7.19 libc.so.6[9892e]
    5.80 libc.so.6[9867a]
    5.13 libc.so.6[98720]
    4.60 libc.so.6[98580]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (13 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000098500 <_int_free>:
         : 6     _int_free():
    0.00 :   98500:  push   %r15
    0.00 :   98502:  push   %r14
    0.00 :   98504:  push   %r13
    0.00 :   98506:  mov    %edx,%r13d
    0.00 :   98509:  push   %r12
    0.00 :   9850b:  push   %rbp
    0.00 :   9850c:  push   %rbx
    0.00 :   9850d:  sub    $0x38,%rsp
    0.00 :   98511:  mov    0x8(%rsi),%rdx
    0.00 :   98515:  mov    %fs:0x28,%rax
    0.00 :   9851e:  mov    %rax,0x28(%rsp)
    0.00 :   98523:  xor    %eax,%eax
    0.00 :   98525:  mov    %rdx,%r12
    0.00 :   98528:  and    $0xfffffffffffffff8,%r12
    0.00 :   9852c:  mov    %r12,%rcx
    0.00 :   9852f:  neg    %rcx
    0.00 :   98532:  cmp    %rsi,%rcx
    0.00 :   98535:  jb     989d0 <_int_free+0x4d0>
    0.00 :   9853b:  mov    %rsi,%rbx
    0.00 :   9853e:  test   $0xf,%sil
    0.00 :   98542:  jne    989d0 <_int_free+0x4d0>
    0.00 :   98548:  cmp    $0x1f,%r12
    0.00 :   9854c:  jbe    989e0 <_int_free+0x4e0>
    0.00 :   98552:  and    $0x8,%edx
    0.00 :   98555:  jne    989e0 <_int_free+0x4e0>
    0.00 :   9855b:  mov    0x13a846(%rip),%rax        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   98562:  mov    %rdi,%rbp
    0.00 :   98565:  mov    %fs:(%rax),%rsi
    0.00 :   98569:  test   %rsi,%rsi
    0.00 :   9856c:  je     985ac <_int_free+0xac>
    0.00 :   9856e:  lea    -0x11(%r12),%rcx
    0.00 :   98573:  shr    $0x4,%rcx
    0.00 :   98577:  cmp    0x13ae4a(%rip),%rcx        # 1d33c8 <mp_+0x68>
    0.00 :   9857e:  jae    985ac <_int_free+0xac>
    4.60 :   98580:  mov    0x13ae51(%rip),%rdi        # 1d33d8 <mp_+0x78> // libc.so.6[98580]
    0.00 :   98587:  mov    0x141f0a(%rip),%r11        # 1da498 <tcache_key>
    0.00 :   9858e:  lea    0x10(%rbx),%r8
    0.00 :   98592:  cmp    %r11,0x18(%rbx)
    0.00 :   98596:  je     98c28 <_int_free+0x728>
    0.00 :   9859c:  movzwl (%rsi,%rcx,2),%edx
    0.00 :   985a0:  mov    %rdx,%rax
    0.00 :   985a3:  cmp    %rdi,%rdx
    0.00 :   985a6:  jb     98998 <_int_free+0x498>
    0.00 :   985ac:  cmp    %r12,0x141f0d(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   985b3:  jb     98670 <_int_free+0x170>
    0.00 :   985b9:  lea    (%rbx,%r12,1),%r14
    0.00 :   985bd:  mov    0x8(%r14),%rax
   10.45 :   985c1:  cmp    $0x10,%rax // libc.so.6[985c1]
    0.00 :   985c5:  jbe    989f0 <_int_free+0x4f0>
    0.00 :   985cb:  and    $0xfffffffffffffff8,%rax
    0.00 :   985cf:  cmp    0x888(%rbp),%rax
    0.00 :   985d6:  jae    989f0 <_int_free+0x4f0>
    0.00 :   985dc:  mov    0x141eda(%rip),%eax        # 1da4bc <perturb_byte>
    0.00 :   985e2:  test   %eax,%eax
    0.00 :   985e4:  jne    98b30 <_int_free+0x630>
    0.00 :   985ea:  movl   $0x1,0x8(%rbp)
    0.00 :   985f1:  shr    $0x4,%r12d
    0.00 :   985f5:  lea    -0x2(%r12),%eax
    0.00 :   985fa:  add    $0x2,%rax
    0.00 :   985fe:  cmpb   $0x0,0x142ff3(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   98605:  mov    0x0(%rbp,%rax,8),%rdx
    0.00 :   9860a:  je     98910 <_int_free+0x410>
    0.00 :   98610:  cmp    %rdx,%rbx
    0.00 :   98613:  je     98956 <_int_free+0x456>
    0.00 :   98619:  lea    0x10(%rbx),%rcx
    0.00 :   9861d:  shr    $0xc,%rcx
    0.00 :   98621:  xor    %rdx,%rcx
    0.00 :   98624:  mov    %rcx,0x10(%rbx)
    0.00 :   98628:  mov    %rbx,0x0(%rbp,%rax,8)
    0.00 :   9862d:  test   %rdx,%rdx
    0.00 :   98630:  je     98648 <_int_free+0x148>
    0.00 :   98632:  and    $0x1,%r13d
    0.00 :   98636:  je     98648 <_int_free+0x148>
    0.00 :   98638:  mov    0x8(%rdx),%rax
    0.00 :   9863c:  shr    $0x4,%eax
    0.00 :   9863f:  cmp    %eax,%r12d
    0.00 :   98642:  jne    98d34 <_int_free+0x834>
    0.00 :   98648:  mov    0x28(%rsp),%rax
    0.00 :   9864d:  sub    %fs:0x28,%rax
    0.00 :   98656:  jne    98dea <_int_free+0x8ea>
    0.00 :   9865c:  add    $0x38,%rsp
    0.00 :   98660:  pop    %rbx
    0.00 :   98661:  pop    %rbp
    0.00 :   98662:  pop    %r12
    0.00 :   98664:  pop    %r13
    0.00 :   98666:  pop    %r14
    0.00 :   98668:  pop    %r15
    0.00 :   9866a:  ret
    0.00 :   9866b:  nopl   0x0(%rax,%rax,1)
    0.00 :   98670:  testb  $0x2,0x8(%rbx)
    0.00 :   98674:  jne    98968 <_int_free+0x468>
    5.80 :   9867a:  cmpb   $0x0,0x142f77(%rip)        # 1db5f8 <__libc_single_threaded> // libc.so.6[9867a]
    0.00 :   98681:  jne    9868d <_int_free+0x18d>
    8.60 :   98683:  and    $0x1,%r13d // libc.so.6[98683]
    0.00 :   98687:  je     98b00 <_int_free+0x600>
    0.00 :   9868d:  movl   $0x1,0x14(%rsp)
    0.00 :   98695:  mov    0x60(%rbp),%rax
    0.00 :   98699:  lea    (%rbx,%r12,1),%r14
    0.00 :   9869d:  cmp    %rbx,%rax
    0.00 :   986a0:  je     98c90 <_int_free+0x790>
    0.00 :   986a6:  testb  $0x2,0x4(%rbp)
    0.00 :   986aa:  je     98ca0 <_int_free+0x7a0>
    0.00 :   986b0:  mov    0x8(%r14),%rax
    0.00 :   986b4:  test   $0x1,%al
    0.00 :   986b6:  je     98cc0 <_int_free+0x7c0>
    0.00 :   986bc:  mov    %rax,%r15
    0.00 :   986bf:  and    $0xfffffffffffffff8,%r15
    0.00 :   986c3:  cmp    $0x10,%rax
    0.00 :   986c7:  jbe    98b20 <_int_free+0x620>
    0.00 :   986cd:  cmp    0x888(%rbp),%r15
    0.00 :   986d4:  jae    98b20 <_int_free+0x620>
    0.00 :   986da:  mov    0x141ddc(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   986e0:  test   %esi,%esi
    0.00 :   986e2:  jne    98cd0 <_int_free+0x7d0>
    0.00 :   986e8:  testb  $0x1,0x8(%rbx)
    0.00 :   986ec:  jne    98710 <_int_free+0x210>
    0.00 :   986ee:  mov    (%rbx),%rax
    0.00 :   986f1:  sub    %rax,%rbx
    0.00 :   986f4:  add    %rax,%r12
    0.00 :   986f7:  mov    0x8(%rbx),%rdx
    0.00 :   986fb:  and    $0xfffffffffffffff8,%rdx
    0.00 :   986ff:  cmp    %rax,%rdx
    0.00 :   98702:  jne    98d4c <_int_free+0x84c>
    0.00 :   98708:  mov    %rbx,%rdi
    0.00 :   9870b:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   98710:  cmp    %r14,0x60(%rbp)
    0.00 :   98714:  je     98ae0 <_int_free+0x5e0>
    0.00 :   9871a:  testb  $0x1,0x8(%r14,%r15,1)
    5.13 :   98720:  je     98b70 <_int_free+0x670> // libc.so.6[98720]
    0.00 :   98726:  andq   $0xfffffffffffffffe,0x8(%r14)
    0.00 :   9872b:  mov    0x70(%rbp),%rax
    0.00 :   9872f:  lea    0x60(%rbp),%rdx
    0.00 :   98733:  movq   %rdx,%xmm1
    0.00 :   98738:  movq   %rax,%xmm0
    0.00 :   9873d:  punpcklqdq %xmm1,%xmm0
    0.00 :   98741:  cmp    %rdx,0x18(%rax)
    0.00 :   98745:  jne    98d40 <_int_free+0x840>
    0.00 :   9874b:  mov    %r12,%rcx
    0.00 :   9874e:  movups %xmm0,0x10(%rbx)
    0.00 :   98752:  lea    (%rbx,%r12,1),%rdx
    0.00 :   98756:  or     $0x1,%rcx
    0.00 :   9875a:  cmp    $0x3ff,%r12
    0.00 :   98761:  jbe    98a48 <_int_free+0x548>
    0.00 :   98767:  pxor   %xmm0,%xmm0
    0.00 :   9876b:  movups %xmm0,0x20(%rbx)
    0.00 :   9876f:  mov    %rbx,0x70(%rbp)
    0.00 :   98773:  mov    %rbx,0x18(%rax)
    0.00 :   98777:  mov    %rcx,0x8(%rbx)
    0.00 :   9877b:  mov    %r12,(%rdx)
    0.00 :   9877e:  cmp    $0xffff,%r12
    0.00 :   98785:  jbe    98a57 <_int_free+0x557>
    0.00 :   9878b:  mov    0x8(%rbp),%eax
    0.00 :   9878e:  test   %eax,%eax
    0.00 :   98790:  jne    98ce8 <_int_free+0x7e8>
    0.00 :   98796:  lea    0x13b4e3(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9879d:  cmp    %rax,%rbp
    0.00 :   987a0:  je     98cf8 <_int_free+0x7f8>
    0.00 :   987a6:  mov    0x13abe3(%rip),%rcx        # 1d3390 <mp_+0x30>
    0.00 :   987ad:  mov    0x60(%rbp),%r15
    0.00 :   987b1:  test   %rcx,%rcx
    0.00 :   987b4:  je     98d22 <_int_free+0x822>
    0.00 :   987ba:  lea    0x0(,%rcx,4),%r13
    0.00 :   987c2:  mov    %r13,%r12
    0.00 :   987c5:  neg    %r12
    0.00 :   987c8:  and    %r15,%r12
    0.00 :   987cb:  cmp    %rbp,(%r12)
    0.00 :   987cf:  jne    98ee6 <_int_free+0x9e6>
    0.00 :   987d5:  mov    0x13ab8c(%rip),%rcx        # 1d3368 <mp_+0x8>
    0.00 :   987dc:  lea    0x30(%r12),%rax
    0.00 :   987e1:  mov    %rcx,0x18(%rsp)
    0.00 :   987e6:  cmp    %rax,%r15
    0.00 :   987e9:  jne    98de1 <_int_free+0x8e1>
    0.00 :   987ef:  mov    %rcx,%rax
    0.00 :   987f2:  add    $0x20,%rax
    0.00 :   987f6:  mov    %rax,0x8(%rsp)
    0.00 :   987fb:  jmp    98844 <_int_free+0x344>
    0.00 :   987fd:  nopl   (%rax)
    0.00 :   98800:  mov    0x20(%r12),%rax
    0.00 :   98805:  lea    (%r15,%r14,1),%rsi
    0.00 :   98809:  sub    $0x1,%rax
    0.00 :   9880d:  test   %rax,%rsi
    0.00 :   98810:  jne    98e52 <_int_free+0x952>
    0.00 :   98816:  mov    0x10(%r12),%rax
    0.00 :   9881b:  add    %r12,%rax
    0.00 :   9881e:  cmp    %rax,%rsi
    0.00 :   98821:  jne    98e31 <_int_free+0x931>
    0.00 :   98827:  mov    %r14,%rdx
    0.00 :   9882a:  lea    0x30(%r12),%rax
    0.00 :   9882f:  mov    %r15,0x60(%rbp)
    0.00 :   98833:  or     $0x1,%rdx
    0.00 :   98837:  mov    %rdx,0x8(%r15)
    0.00 :   9883b:  cmp    %rax,%r15
    0.00 :   9883e:  jne    98b87 <_int_free+0x687>
    0.00 :   98844:  mov    %r12,%rdi
    0.00 :   98847:  mov    0x8(%r12),%r12
    0.00 :   9884c:  mov    0x10(%r12),%rsi
    0.00 :   98851:  lea    -0x10(%rsi),%rbx
    0.00 :   98855:  lea    (%r12,%rbx,1),%rdx
    0.00 :   98859:  and    $0xf,%edx
    0.00 :   9885c:  sub    %rdx,%rbx
    0.00 :   9885f:  add    %r12,%rbx
    0.00 :   98862:  cmpq   $0x1,0x8(%rbx)
    0.00 :   98867:  jne    98e73 <_int_free+0x973>
    0.00 :   9886d:  sub    (%rbx),%rbx
    0.00 :   98870:  mov    0x8(%rbx),%r8
    0.00 :   98874:  mov    %r8,%rax
    0.00 :   98877:  and    $0xfffffffffffffff8,%rax
    0.00 :   9887b:  add    %rdx,%rax
    0.00 :   9887e:  lea    0x10(%rax),%r14
    0.00 :   98882:  add    $0xf,%rax
    0.00 :   98886:  cmp    $0x3e,%rax
    0.00 :   9888a:  ja     98def <_int_free+0x8ef>
    0.00 :   98890:  and    $0x1,%r8d
    0.00 :   98894:  jne    98899 <_int_free+0x399>
    0.00 :   98896:  add    (%rbx),%r14
    0.00 :   98899:  test   %r14,%r14
    0.00 :   9889c:  jle    98e10 <_int_free+0x910>
    0.00 :   988a2:  cmp    %r13,%r14
    0.00 :   988a5:  jae    98e10 <_int_free+0x910>
    0.00 :   988ab:  mov    %r13,%rax
    0.00 :   988ae:  sub    %rsi,%rax
    0.00 :   988b1:  mov    0x8(%rsp),%rsi
    0.00 :   988b6:  add    0x20(%rdi),%rsi
    0.00 :   988ba:  add    %r14,%rax
    0.00 :   988bd:  cmp    %rsi,%rax
    0.00 :   988c0:  jb     98b80 <_int_free+0x680>
    0.00 :   988c6:  mov    0x10(%rdi),%rax
    0.00 :   988ca:  sub    %rax,0x888(%rbp)
    0.00 :   988d1:  nop
    0.00 :   988d2:  lea    (%rdi,%r13,1),%rax
    0.00 :   988d6:  cmp    %rax,0x141bc3(%rip)        # 1da4a0 <aligned_heap_area>
    0.00 :   988dd:  je     98ad0 <_int_free+0x5d0>
    0.00 :   988e3:  mov    %r13,%rsi
    0.00 :   988e6:  mov    %rbx,%r15
    0.00 :   988e9:  call   104b10 <__munmap>
    0.00 :   988ee:  testb  $0x1,0x8(%rbx)
    0.00 :   988f2:  jne    98800 <_int_free+0x300>
    0.00 :   988f8:  sub    (%rbx),%r15
    0.00 :   988fb:  mov    %r15,%rdi
    0.00 :   988fe:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   98903:  jmp    98800 <_int_free+0x300>
    0.00 :   98908:  nopl   0x0(%rax,%rax,1)
    0.00 :   98910:  mov    %r12d,%eax
    0.00 :   98913:  lea    0x10(%rbx),%rsi
    0.00 :   98917:  lea    0x0(%rbp,%rax,8),%rcx
    0.00 :   9891c:  shr    $0xc,%rsi
    0.00 :   98920:  jmp    98951 <_int_free+0x451>
    0.00 :   98922:  nopw   0x0(%rax,%rax,1)
    0.00 :   98928:  mov    %rdx,%rax
    0.00 :   9892b:  xor    %rsi,%rax
    7.19 :   9892e:  mov    %rax,0x10(%rbx) // libc.so.6[9892e]
    0.00 :   98932:  mov    %rdx,%rax
    0.00 :   98935:  cmpl   $0x0,%fs:0x18
    0.00 :   9893e:  je     98941 <_int_free+0x441>
    0.00 :   98940:  lock cmpxchg %rbx,(%rcx)
    0.00 :   98945:  cmp    %rax,%rdx
    0.00 :   98948:  je     9862d <_int_free+0x12d>
    0.00 :   9894e:  mov    %rax,%rdx
    0.00 :   98951:  cmp    %rbx,%rdx
    0.00 :   98954:  jne    98928 <_int_free+0x428>
    0.00 :   98956:  lea    0x1046e3(%rip),%rdi        # 19d040 <aliasfile.0+0x15f8>
    0.00 :   9895d:  call   96b80 <malloc_printerr>
    0.00 :   98962:  nopw   0x0(%rax,%rax,1)
    0.00 :   98968:  mov    0x28(%rsp),%rax
    0.00 :   9896d:  sub    %fs:0x28,%rax
    0.00 :   98976:  jne    98dea <_int_free+0x8ea>
    0.00 :   9897c:  add    $0x38,%rsp
    0.00 :   98980:  mov    %rbx,%rdi
    0.00 :   98983:  pop    %rbx
    0.00 :   98984:  pop    %rbp
    0.00 :   98985:  pop    %r12
    0.00 :   98987:  pop    %r13
    0.00 :   98989:  pop    %r14
    0.00 :   9898b:  pop    %r15
    0.00 :   9898d:  jmp    96da0 <munmap_chunk>
    0.00 :   98992:  nopw   0x0(%rax,%rax,1)
    7.49 :   98998:  mov    0x141af9(%rip),%rdx        # 1da498 <tcache_key> // libc.so.6[98998]
    0.00 :   9899f:  add    $0x1,%eax
    0.00 :   989a2:  mov    %rdx,0x18(%rbx)
    0.00 :   989a6:  mov    %r8,%rdx
    0.00 :   989a9:  shr    $0xc,%rdx
    0.00 :   989ad:  xor    0x80(%rsi,%rcx,8),%rdx
   15.78 :   989b5:  mov    %rdx,0x10(%rbx) // libc.so.6[989b5]
   18.89 :   989b9:  mov    %r8,0x80(%rsi,%rcx,8) // libc.so.6[989b9]
    0.00 :   989c1:  mov    %ax,(%rsi,%rcx,2)
    0.00 :   989c5:  jmp    98648 <_int_free+0x148>
    0.00 :   989ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   989d0:  lea    0xff6da(%rip),%rdi        # 1980b1 <null+0xef7>
    0.00 :   989d7:  call   96b80 <malloc_printerr>
    0.00 :   989dc:  nopl   0x0(%rax)
    0.00 :   989e0:  lea    0xff6e2(%rip),%rdi        # 1980c9 <null+0xf0f>
    0.00 :   989e7:  call   96b80 <malloc_printerr>
    0.00 :   989ec:  nopl   0x0(%rax)
    0.00 :   989f0:  test   %r13d,%r13d
    0.00 :   989f3:  jne    98aae <_int_free+0x5ae>
    0.00 :   989f9:  mov    $0x1,%edx
    0.00 :   989fe:  mov    %r13d,%eax
    0.00 :   98a01:  lock cmpxchg %edx,0x0(%rbp)
    0.00 :   98a06:  jne    98ac0 <_int_free+0x5c0>
    0.00 :   98a0c:  mov    0x8(%r14),%rax
    0.00 :   98a10:  cmp    $0x10,%rax
    0.00 :   98a14:  jbe    98aa0 <_int_free+0x5a0>
    0.00 :   98a1a:  and    $0xfffffffffffffff8,%rax
    0.00 :   98a1e:  cmp    0x888(%rbp),%rax
    0.00 :   98a25:  jae    98aa0 <_int_free+0x5a0>
    0.00 :   98a27:  xor    %eax,%eax
    0.00 :   98a29:  xchg   %eax,0x0(%rbp)
    0.00 :   98a2c:  cmp    $0x1,%eax
    0.00 :   98a2f:  jle    985dc <_int_free+0xdc>
    0.00 :   98a35:  mov    %rbp,%rdi
    0.00 :   98a38:  call   87f80 <__lll_lock_wake_private>
    0.00 :   98a3d:  jmp    985dc <_int_free+0xdc>
    0.00 :   98a42:  nopw   0x0(%rax,%rax,1)
    0.00 :   98a48:  mov    %rbx,0x70(%rbp)
    0.00 :   98a4c:  mov    %rbx,0x18(%rax)
    0.00 :   98a50:  mov    %rcx,0x8(%rbx)
    0.00 :   98a54:  mov    %r12,(%rdx)
    0.00 :   98a57:  mov    0x14(%rsp),%eax
    0.00 :   98a5b:  test   %eax,%eax
    0.00 :   98a5d:  jne    98648 <_int_free+0x148>
    0.00 :   98a63:  mov    %eax,%r13d
    0.00 :   98a66:  xchg   %r13d,0x0(%rbp)
    8.41 :   98a6a:  cmp    $0x1,%r13d // libc.so.6[98a6a]
    0.00 :   98a6e:  jle    98648 <_int_free+0x148>
    0.00 :   98a74:  mov    0x28(%rsp),%rax
    0.00 :   98a79:  sub    %fs:0x28,%rax
    0.00 :   98a82:  jne    98dea <_int_free+0x8ea>
    0.00 :   98a88:  add    $0x38,%rsp
    0.00 :   98a8c:  mov    %rbp,%rdi
    0.00 :   98a8f:  pop    %rbx
    0.00 :   98a90:  pop    %rbp
    0.00 :   98a91:  pop    %r12
    0.00 :   98a93:  pop    %r13
    0.00 :   98a95:  pop    %r14
    0.00 :   98a97:  pop    %r15
    0.00 :   98a99:  jmp    87f80 <__lll_lock_wake_private>
    0.00 :   98a9e:  xchg   %ax,%ax
    0.00 :   98aa0:  xor    %eax,%eax
    0.00 :   98aa2:  xchg   %eax,0x0(%rbp)
    0.00 :   98aa5:  cmp    $0x1,%eax
    0.00 :   98aa8:  jg     98d58 <_int_free+0x858>
    0.00 :   98aae:  lea    0x104563(%rip),%rdi        # 19d018 <aliasfile.0+0x15d0>
    0.00 :   98ab5:  call   96b80 <malloc_printerr>
    0.00 :   98aba:  nopw   0x0(%rax,%rax,1)
    0.00 :   98ac0:  mov    %rbp,%rdi
    0.00 :   98ac3:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   98ac8:  jmp    98a0c <_int_free+0x50c>
    0.00 :   98acd:  nopl   (%rax)
    0.00 :   98ad0:  movq   $0x0,0x1419c5(%rip)        # 1da4a0 <aligned_heap_area>
    0.00 :   98adb:  jmp    988e3 <_int_free+0x3e3>
    0.00 :   98ae0:  add    %r15,%r12
    0.00 :   98ae3:  mov    %r12,%rax
    0.00 :   98ae6:  or     $0x1,%rax
    0.00 :   98aea:  mov    %rax,0x8(%rbx)
    0.00 :   98aee:  mov    %rbx,0x60(%rbp)
    0.00 :   98af2:  jmp    9877e <_int_free+0x27e>
    0.00 :   98af7:  nopw   0x0(%rax,%rax,1)
    0.00 :   98b00:  xor    %eax,%eax
    0.00 :   98b02:  mov    $0x1,%edx
    0.00 :   98b07:  lock cmpxchg %edx,0x0(%rbp)
    0.00 :   98b0c:  jne    98d65 <_int_free+0x865>
    0.00 :   98b12:  movl   $0x0,0x14(%rsp)
    0.00 :   98b1a:  jmp    98695 <_int_free+0x195>
    0.00 :   98b1f:  nop
    0.00 :   98b20:  lea    0x1045a9(%rip),%rdi        # 19d0d0 <aliasfile.0+0x1688>
    0.00 :   98b27:  call   96b80 <malloc_printerr>
    0.00 :   98b2c:  nopl   0x0(%rax)
    0.00 :   98b30:  lea    0x18(%rbx),%rdi
    0.00 :   98b34:  lea    0x10(%rbx),%rcx
    0.00 :   98b38:  movzbl %al,%eax
    0.00 :   98b3b:  movabs $0x101010101010101,%rsi
    0.00 :   98b45:  and    $0xfffffffffffffff8,%rdi
    0.00 :   98b49:  imul   %rsi,%rax
    0.00 :   98b4d:  lea    -0x10(%r12),%rdx
    0.00 :   98b52:  sub    %rdi,%rcx
    0.00 :   98b55:  mov    %edx,%esi
    0.00 :   98b57:  add    %edx,%ecx
    0.00 :   98b59:  shr    $0x3,%ecx
    0.00 :   98b5c:  mov    %rax,0x10(%rbx)
    0.00 :   98b60:  mov    %rax,0x8(%rbx,%rsi,1)
    0.00 :   98b65:  rep stos %rax,%es:(%rdi)
    0.00 :   98b68:  jmp    985ea <_int_free+0xea>
    0.00 :   98b6d:  nopl   (%rax)
    0.00 :   98b70:  mov    %r14,%rdi
    0.00 :   98b73:  add    %r15,%r12
    0.00 :   98b76:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   98b7b:  jmp    9872b <_int_free+0x22b>
    0.00 :   98b80:  mov    0x8(%r15),%rdx
    0.00 :   98b84:  mov    %rdi,%r12
    0.00 :   98b87:  mov    %rdx,%rbx
    0.00 :   98b8a:  and    $0xfffffffffffffff8,%rbx
    0.00 :   98b8e:  cmp    0x13a7cb(%rip),%rbx        # 1d3360 <mp_>
    0.00 :   98b95:  jb     98a57 <_int_free+0x557>
    0.00 :   98b9b:  mov    %rbx,%rax
    0.00 :   98b9e:  sub    $0x21,%rax
    0.00 :   98ba2:  js     98a57 <_int_free+0x557>
    0.00 :   98ba8:  mov    0x18(%rsp),%rcx
    0.00 :   98bad:  cmp    %rax,%rcx
    0.00 :   98bb0:  jae    98a57 <_int_free+0x557>
    0.00 :   98bb6:  mov    0x20(%r12),%r14
    0.00 :   98bbb:  sub    %rcx,%rax
    0.00 :   98bbe:  neg    %r14
    0.00 :   98bc1:  and    %rax,%r14
    0.00 :   98bc4:  je     98a57 <_int_free+0x557>
    0.00 :   98bca:  mov    0x10(%r12),%r13
    0.00 :   98bcf:  sub    %r14,%r13
    0.00 :   98bd2:  cmp    $0x2f,%r13
    0.00 :   98bd6:  jle    98a57 <_int_free+0x557>
    0.00 :   98bdc:  mov    0x13a75e(%rip),%eax        # 1d3340 <may_shrink_heap.12>
    0.00 :   98be2:  test   %eax,%eax
    0.00 :   98be4:  js     98d72 <_int_free+0x872>
    0.00 :   98bea:  jne    98db3 <_int_free+0x8b3>
    0.00 :   98bf0:  lea    (%r12,%r13,1),%rdi
    0.00 :   98bf4:  mov    $0x4,%edx
    0.00 :   98bf9:  mov    %r14,%rsi
    0.00 :   98bfc:  call   104c10 <__madvise>
    0.00 :   98c01:  mov    %r13,0x10(%r12)
    0.00 :   98c06:  nop
    0.00 :   98c07:  sub    %r14,%rbx
    0.00 :   98c0a:  sub    %r14,0x888(%rbp)
    0.00 :   98c11:  mov    %rbx,%rdx
    0.00 :   98c14:  or     $0x1,%rdx
    0.00 :   98c18:  mov    %rdx,0x8(%r15)
    0.00 :   98c1c:  jmp    98a57 <_int_free+0x557>
    0.00 :   98c21:  nopl   0x0(%rax)
    0.00 :   98c28:  nop
    0.00 :   98c29:  mov    %fs:(%rax),%rsi
    0.00 :   98c2d:  mov    0x13a7a4(%rip),%rdi        # 1d33d8 <mp_+0x78>
    0.00 :   98c34:  mov    0x80(%rsi,%rcx,8),%rax
    0.00 :   98c3c:  test   %rax,%rax
    0.00 :   98c3f:  jne    98c76 <_int_free+0x776>
    0.00 :   98c41:  jmp    9859c <_int_free+0x9c>
    0.00 :   98c46:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   98c50:  cmp    %r8,%rax
    0.00 :   98c53:  je     98eda <_int_free+0x9da>
    0.00 :   98c59:  mov    (%rax),%r10
    0.00 :   98c5c:  shr    $0xc,%rax
    0.00 :   98c60:  add    $0x1,%rdx
    0.00 :   98c64:  mov    %rax,%r9
    0.00 :   98c67:  mov    %r10,%rax
    0.00 :   98c6a:  xor    %r9,%rax
    0.00 :   98c6d:  cmp    %r9,%r10
    0.00 :   98c70:  je     9859c <_int_free+0x9c>
    0.00 :   98c76:  cmp    %rdi,%rdx
    0.00 :   98c79:  je     98ece <_int_free+0x9ce>
    0.00 :   98c7f:  test   $0xf,%al
    0.00 :   98c81:  je     98c50 <_int_free+0x750>
    0.00 :   98c83:  lea    0x10432e(%rip),%rdi        # 19cfb8 <aliasfile.0+0x1570>
    0.00 :   98c8a:  call   96b80 <malloc_printerr>
    0.00 :   98c8f:  nop
    0.00 :   98c90:  lea    0x1043d1(%rip),%rdi        # 19d068 <aliasfile.0+0x1620>
    0.00 :   98c97:  call   96b80 <malloc_printerr>
    0.00 :   98c9c:  nopl   0x0(%rax)
    0.00 :   98ca0:  mov    0x8(%rax),%rdx
    7.64 :   98ca4:  and    $0xfffffffffffffff8,%rdx // libc.so.6[98ca4]
    0.00 :   98ca8:  add    %rdx,%rax
    0.00 :   98cab:  cmp    %rax,%r14
    0.00 :   98cae:  jb     986b0 <_int_free+0x1b0>
    0.00 :   98cb4:  lea    0x1043cd(%rip),%rdi        # 19d088 <aliasfile.0+0x1640>
    0.00 :   98cbb:  call   96b80 <malloc_printerr>
    0.00 :   98cc0:  lea    0x1043e1(%rip),%rdi        # 19d0a8 <aliasfile.0+0x1660>
    0.00 :   98cc7:  call   96b80 <malloc_printerr>
    0.00 :   98ccc:  nopl   0x0(%rax)
    0.00 :   98cd0:  lea    -0x10(%r12),%rdx
    0.00 :   98cd5:  lea    0x10(%rbx),%rdi
    0.00 :   98cd9:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   98cde:  jmp    986e8 <_int_free+0x1e8>
    0.00 :   98ce3:  nopl   0x0(%rax,%rax,1)
    0.00 :   98ce8:  mov    %rbp,%rdi
    0.00 :   98ceb:  call   97680 <malloc_consolidate>
    0.00 :   98cf0:  jmp    98796 <_int_free+0x296>
    0.00 :   98cf5:  nopl   (%rax)
    0.00 :   98cf8:  mov    0x60(%rbp),%rax
    0.00 :   98cfc:  mov    0x8(%rax),%rax
    0.00 :   98d00:  and    $0xfffffffffffffff8,%rax
    0.00 :   98d04:  cmp    0x13a655(%rip),%rax        # 1d3360 <mp_>
    0.00 :   98d0b:  jb     98a57 <_int_free+0x557>
    0.00 :   98d11:  mov    0x13a650(%rip),%rdi        # 1d3368 <mp_+0x8>
    0.00 :   98d18:  call   98450 <systrim.constprop.0>
    0.00 :   98d1d:  jmp    98a57 <_int_free+0x557>
    0.00 :   98d22:  mov    $0xfffffffffc000000,%r12
    0.00 :   98d29:  mov    $0x4000000,%r13d
    0.00 :   98d2f:  jmp    987c8 <_int_free+0x2c8>
    0.00 :   98d34:  lea    0xff3a3(%rip),%rdi        # 1980de <null+0xf24>
    0.00 :   98d3b:  call   96b80 <malloc_printerr>
    0.00 :   98d40:  lea    0x1043e9(%rip),%rdi        # 19d130 <aliasfile.0+0x16e8>
    0.00 :   98d47:  call   96b80 <malloc_printerr>
    0.00 :   98d4c:  lea    0x1043a5(%rip),%rdi        # 19d0f8 <aliasfile.0+0x16b0>
    0.00 :   98d53:  call   96b80 <malloc_printerr>
    0.00 :   98d58:  mov    %rbp,%rdi
    0.00 :   98d5b:  call   87f80 <__lll_lock_wake_private>
    0.00 :   98d60:  jmp    98aae <_int_free+0x5ae>
    0.00 :   98d65:  mov    %rbp,%rdi
    0.00 :   98d68:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   98d6d:  jmp    98b12 <_int_free+0x612>
    0.00 :   98d72:  mov    0x13a107(%rip),%rax        # 1d2e80 <__libc_enable_secure@GLIBC_PRIVATE>
    0.00 :   98d79:  mov    (%rax),%ecx
    0.00 :   98d7b:  test   %ecx,%ecx
    0.00 :   98d7d:  mov    %ecx,0x13a5bd(%rip)        # 1d3340 <may_shrink_heap.12>
    0.00 :   98d83:  mov    %ecx,0x18(%rsp)
    0.00 :   98d87:  jne    98db3 <_int_free+0x8b3>
    0.00 :   98d89:  lea    0x1044d0(%rip),%rdi        # 19d260 <aliasfile.0+0x1818>
    0.00 :   98d90:  mov    $0x80000,%esi
    0.00 :   98d95:  xor    %eax,%eax
    0.00 :   98d97:  call   fffc0 <__open64_nocancel>
    0.00 :   98d9c:  mov    %eax,%edi
    0.00 :   98d9e:  test   %eax,%eax
    0.00 :   98da0:  jns    98e94 <_int_free+0x994>
    0.00 :   98da6:  cmpl   $0x0,0x13a593(%rip)        # 1d3340 <may_shrink_heap.12>
    0.00 :   98dad:  je     98bf0 <_int_free+0x6f0>
    0.00 :   98db3:  xor    %r9d,%r9d
    0.00 :   98db6:  or     $0xffffffff,%r8d
    0.00 :   98dba:  xor    %edx,%edx
    0.00 :   98dbc:  mov    $0x32,%ecx
    0.00 :   98dc1:  lea    (%r12,%r13,1),%rdi
    0.00 :   98dc5:  mov    %r14,%rsi
    0.00 :   98dc8:  call   104ab0 <__mmap>
    0.00 :   98dcd:  add    $0x1,%rax
    0.00 :   98dd1:  je     98a57 <_int_free+0x557>
    0.00 :   98dd7:  mov    %r13,0x18(%r12)
    0.00 :   98ddc:  jmp    98c01 <_int_free+0x701>
    0.00 :   98de1:  mov    0x8(%r15),%rdx
    0.00 :   98de5:  jmp    98b87 <_int_free+0x687>
    0.00 :   98dea:  call   11ba20 <__stack_chk_fail>
    0.00 :   98def:  lea    0x104392(%rip),%rcx        # 19d188 <aliasfile.0+0x1740>
    0.00 :   98df6:  lea    0x104cc3(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98dfd:  mov    $0x1,%edi
    0.00 :   98e02:  xor    %eax,%eax
    0.00 :   98e04:  lea    0x103cc5(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e0b:  call   80df0 <__libc_message>
    0.00 :   98e10:  lea    0x1043a1(%rip),%rcx        # 19d1b8 <aliasfile.0+0x1770>
    0.00 :   98e17:  lea    0x104ca2(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e1e:  mov    $0x1,%edi
    0.00 :   98e23:  xor    %eax,%eax
    0.00 :   98e25:  lea    0x103ca4(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e2c:  call   80df0 <__libc_message>
    0.00 :   98e31:  lea    0x1043f0(%rip),%rcx        # 19d228 <aliasfile.0+0x17e0>
    0.00 :   98e38:  lea    0x104c81(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e3f:  mov    $0x1,%edi
    0.00 :   98e44:  xor    %eax,%eax
    0.00 :   98e46:  lea    0x103c83(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e4d:  call   80df0 <__libc_message>
    0.00 :   98e52:  lea    0x104387(%rip),%rcx        # 19d1e0 <aliasfile.0+0x1798>
    0.00 :   98e59:  lea    0x104c60(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e60:  mov    $0x1,%edi
    0.00 :   98e65:  xor    %eax,%eax
    0.00 :   98e67:  lea    0x103c62(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e6e:  call   80df0 <__libc_message>
    0.00 :   98e73:  lea    0x1042de(%rip),%rcx        # 19d158 <aliasfile.0+0x1710>
    0.00 :   98e7a:  lea    0x104c3f(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e81:  mov    $0x1,%edi
    0.00 :   98e86:  xor    %eax,%eax
    0.00 :   98e88:  lea    0x103c41(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e8f:  call   80df0 <__libc_message>
    0.00 :   98e94:  lea    0x27(%rsp),%rsi
    0.00 :   98e99:  mov    $0x1,%edx
    0.00 :   98e9e:  mov    %eax,0x8(%rsp)
    0.00 :   98ea2:  call   100110 <__read_nocancel>
    0.00 :   98ea7:  mov    0x8(%rsp),%edi
    0.00 :   98eab:  mov    0x18(%rsp),%ecx
    0.00 :   98eaf:  test   %rax,%rax
    0.00 :   98eb2:  jle    98ebe <_int_free+0x9be>
    0.00 :   98eb4:  xor    %ecx,%ecx
    0.00 :   98eb6:  cmpb   $0x32,0x27(%rsp)
    0.00 :   98ebb:  sete   %cl
    0.00 :   98ebe:  mov    %ecx,0x13a47c(%rip)        # 1d3340 <may_shrink_heap.12>
    0.00 :   98ec4:  call   ffe50 <__close_nocancel>
    0.00 :   98ec9:  jmp    98da6 <_int_free+0x8a6>
    0.00 :   98ece:  lea    0x1040b3(%rip),%rdi        # 19cf88 <aliasfile.0+0x1540>
    0.00 :   98ed5:  call   96b80 <malloc_printerr>
    0.00 :   98eda:  lea    0x104107(%rip),%rdi        # 19cfe8 <aliasfile.0+0x15a0>
    0.00 :   98ee1:  call   96b80 <malloc_printerr>
    0.00 :   98ee6:  lea    0xff20e(%rip),%rcx        # 1980fb <null+0xf41>
    0.00 :   98eed:  lea    0x104bdc(%rip),%rdx        # 19dad0 <aliasfile.0+0x2088>
    0.00 :   98ef4:  mov    $0x1,%edi
    0.00 :   98ef9:  xor    %eax,%eax
    0.00 :   98efb:  lea    0x103bce(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98f02:  call   80df0 <__libc_message>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/arch/x86/kvm/kvm.ko.xz
----------------------------------------------

   50.27 [kvm][1d400]
   49.73 [kvm][1d40c]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/arch/x86/kvm/kvm.ko.xz for cycles (13 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001d400 <pvclock_gtod_notify>:
         : 6     pvclock_gtod_notify():
   50.27 :   1d400:  call   1d405 <pvclock_gtod_notify+0x5> // [kvm][1d400]
    0.00 :   1d405:  addl   $0x1,0x0(%rip)        # 1d40c <pvclock_gtod_notify+0xc>
   49.73 :   1d40c:  mov    %rdx,%rax // [kvm][1d40c]
    0.00 :   1d40f:  mov    (%rdx),%rdx
    0.00 :   1d412:  mov    0x50(%rdx),%edx
    0.00 :   1d415:  mov    %edx,0x0(%rip)        # 1d41b <pvclock_gtod_notify+0x1b>
    0.00 :   1d41b:  mov    0x10(%rax),%rdx
    0.00 :   1d41f:  mov    %rdx,0x0(%rip)        # 1d426 <pvclock_gtod_notify+0x26>
    0.00 :   1d426:  mov    0x8(%rax),%rdx
    0.00 :   1d42a:  mov    %rdx,0x0(%rip)        # 1d431 <pvclock_gtod_notify+0x31>
    0.00 :   1d431:  mov    0x18(%rax),%edx
    0.00 :   1d434:  mov    %edx,0x0(%rip)        # 1d43a <pvclock_gtod_notify+0x3a>
    0.00 :   1d43a:  mov    0x1c(%rax),%edx
    0.00 :   1d43d:  mov    %edx,0x0(%rip)        # 1d443 <pvclock_gtod_notify+0x43>
    0.00 :   1d443:  mov    0x20(%rax),%rdx
    0.00 :   1d447:  mov    %rdx,0x0(%rip)        # 1d44e <pvclock_gtod_notify+0x4e>
    0.00 :   1d44e:  mov    0x28(%rax),%rdx
    0.00 :   1d452:  mov    %rdx,0x0(%rip)        # 1d459 <pvclock_gtod_notify+0x59>
    0.00 :   1d459:  mov    0x38(%rax),%rdx
    0.00 :   1d45d:  mov    0x50(%rdx),%edx
    0.00 :   1d460:  mov    %edx,0x0(%rip)        # 1d466 <pvclock_gtod_notify+0x66>
    0.00 :   1d466:  mov    0x48(%rax),%rdx
    0.00 :   1d46a:  mov    %rdx,0x0(%rip)        # 1d471 <pvclock_gtod_notify+0x71>
    0.00 :   1d471:  mov    0x40(%rax),%rdx
    0.00 :   1d475:  mov    %rdx,0x0(%rip)        # 1d47c <pvclock_gtod_notify+0x7c>
    0.00 :   1d47c:  mov    0x50(%rax),%rdx
    0.00 :   1d480:  mov    %rdx,0x0(%rip)        # 1d487 <pvclock_gtod_notify+0x87>
    0.00 :   1d487:  mov    0x58(%rax),%rdx
    0.00 :   1d48b:  mov    %rdx,0x0(%rip)        # 1d492 <pvclock_gtod_notify+0x92>
    0.00 :   1d492:  mov    0x60(%rax),%rdx
    0.00 :   1d496:  mov    %rdx,0x0(%rip)        # 1d49d <pvclock_gtod_notify+0x9d>
    0.00 :   1d49d:  mov    0x70(%rax),%rdx
    0.00 :   1d4a1:  mov    0x98(%rax),%rax
    0.00 :   1d4a8:  mov    %rdx,0x0(%rip)        # 1d4af <pvclock_gtod_notify+0xaf>
    0.00 :   1d4af:  mov    %rax,0x0(%rip)        # 1d4b6 <pvclock_gtod_notify+0xb6>
    0.00 :   1d4b6:  mov    0x0(%rip),%eax        # 1d4bc <pvclock_gtod_notify+0xbc>
    0.00 :   1d4bc:  addl   $0x1,0x0(%rip)        # 1d4c3 <pvclock_gtod_notify+0xc3>
    0.00 :   1d4c3:  and    $0xfffffffd,%eax
    0.00 :   1d4c6:  cmp    $0x1,%eax
    0.00 :   1d4c9:  je     1d4d5 <pvclock_gtod_notify+0xd5>
    0.00 :   1d4cb:  mov    0x0(%rip),%eax        # 1d4d1 <pvclock_gtod_notify+0xd1>
    0.00 :   1d4d1:  test   %eax,%eax
    0.00 :   1d4d3:  jne    1d4dc <pvclock_gtod_notify+0xdc>
    0.00 :   1d4d5:  xor    %eax,%eax
    0.00 :   1d4d7:  jmp    1d4dc <pvclock_gtod_notify+0xdc>
    0.00 :   1d4dc:  mov    $0x0,%rdi
    0.00 :   1d4e3:  call   1d4e8 <pvclock_gtod_notify+0xe8>
    0.00 :   1d4e8:  xor    %eax,%eax
    0.00 :   1d4ea:  jmp    1d4ef <pvclock_gtod_notify+0xef>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   29.87 [virtio_net][440]
   22.79 [virtio_net][45b]
   17.20 [virtio_net][578]
   10.63 [virtio_net][49c]
   10.30 [virtio_net][447]
    9.21 [virtio_net][4cb]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (11 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000440 <virtnet_poll_tx>:
         : 6   virtnet_poll_tx():
   29.87 :   440:    call   445 <virtnet_poll_tx+0x5> // [virtio_net][440]
    0.00 :   445:    push   %r14
   10.30 :   447:    push   %r13 // [virtio_net][447]
    0.00 :   449:    push   %r12
    0.00 :   44b:    push   %rbp
    0.00 :   44c:    lea    -0x2c0(%rdi),%rbp
    0.00 :   453:    push   %rbx
    0.00 :   454:    mov    -0x2c0(%rdi),%rax
   22.79 :   45b:    mov    %rdi,%rbx // [virtio_net][45b]
    0.00 :   45e:    mov    0x20(%rax),%rdx
    0.00 :   462:    mov    0x28(%rax),%eax
    0.00 :   465:    mov    0x330(%rdx),%rdx
    0.00 :   46c:    sub    $0x1,%eax
    0.00 :   46f:    shr    %eax
    0.00 :   471:    movzwl 0x2e(%rdx),%ecx
    0.00 :   475:    movzwl 0x30(%rdx),%edi
    0.00 :   479:    mov    %ecx,%esi
    0.00 :   47b:    sub    %edi,%esi
    0.00 :   47d:    cmp    %eax,%esi
    0.00 :   47f:    jg     489 <virtnet_poll_tx+0x49>
    0.00 :   481:    cmp    %eax,%ecx
    0.00 :   483:    jg     530 <virtnet_poll_tx+0xf0>
    0.00 :   489:    mov    0x10(%rdx),%rdx
    0.00 :   48d:    lea    (%rax,%rax,4),%r12
    0.00 :   491:    shl    $0x6,%r12
    0.00 :   495:    add    0x400(%rdx),%r12
   10.63 :   49c:    mov    %gs:0x0(%rip),%r14d        # 4a4 <virtnet_poll_tx+0x64> // [virtio_net][49c]
    0.00 :   4a4:    lea    0x80(%r12),%r13
    0.00 :   4ac:    mov    %r13,%rdi
    0.00 :   4af:    call   4b4 <virtnet_poll_tx+0x74>
    0.00 :   4b4:    mov    %r14d,0x84(%r12)
    0.00 :   4bc:    mov    -0x2c0(%rbx),%rdi
    0.00 :   4c3:    call   4c8 <virtnet_poll_tx+0x88>
    0.00 :   4c8:    mov    %rbp,%rdi
    9.21 :   4cb:    mov    $0x1,%esi // [virtio_net][4cb]
    0.00 :   4d0:    call   390 <free_old_xmit_skbs>
    0.00 :   4d5:    mov    -0x2c0(%rbx),%rdi
    0.00 :   4dc:    cmpl   $0x12,0x2c(%rdi)
    0.00 :   4e0:    ja     578 <virtnet_poll_tx+0x138>
    0.00 :   4e6:    call   4eb <virtnet_poll_tx+0xab>
    0.00 :   4eb:    xor    %esi,%esi
    0.00 :   4ed:    mov    %rbx,%rdi
    0.00 :   4f0:    mov    %eax,%ebp
    0.00 :   4f2:    call   4f7 <virtnet_poll_tx+0xb7>
    0.00 :   4f7:    test   %al,%al
    0.00 :   4f9:    je     549 <virtnet_poll_tx+0x109>
    0.00 :   4fb:    movl   $0xffffffff,0x84(%r12)
    0.00 :   507:    mov    %r13,%rdi
    0.00 :   50a:    call   50f <virtnet_poll_tx+0xcf>
    0.00 :   50f:    mov    -0x2c0(%rbx),%rdi
    0.00 :   516:    mov    %ebp,%esi
    0.00 :   518:    call   51d <virtnet_poll_tx+0xdd>
    0.00 :   51d:    test   %al,%al
    0.00 :   51f:    jne    58c <virtnet_poll_tx+0x14c>
    0.00 :   521:    pop    %rbx
    0.00 :   522:    xor    %eax,%eax
    0.00 :   524:    pop    %rbp
    0.00 :   525:    pop    %r12
    0.00 :   527:    pop    %r13
    0.00 :   529:    pop    %r14
    0.00 :   52b:    jmp    530 <virtnet_poll_tx+0xf0>
    0.00 :   530:    mov    %rbx,%rdi
    0.00 :   533:    xor    %esi,%esi
    0.00 :   535:    call   53a <virtnet_poll_tx+0xfa>
    0.00 :   53a:    xor    %eax,%eax
    0.00 :   53c:    pop    %rbx
    0.00 :   53d:    pop    %rbp
    0.00 :   53e:    pop    %r12
    0.00 :   540:    pop    %r13
    0.00 :   542:    pop    %r14
    0.00 :   544:    jmp    549 <virtnet_poll_tx+0x109>
    0.00 :   549:    mov    -0x2c0(%rbx),%rdi
    0.00 :   550:    call   555 <virtnet_poll_tx+0x115>
    0.00 :   555:    mov    %r13,%rdi
    0.00 :   558:    movl   $0xffffffff,0x84(%r12)
    0.00 :   564:    call   569 <virtnet_poll_tx+0x129>
    0.00 :   569:    xor    %eax,%eax
    0.00 :   56b:    pop    %rbx
    0.00 :   56c:    pop    %rbp
    0.00 :   56d:    pop    %r12
    0.00 :   56f:    pop    %r13
    0.00 :   571:    pop    %r14
    0.00 :   573:    jmp    578 <virtnet_poll_tx+0x138>
   17.20 :   578:    mov    %r12,%rdi // [virtio_net][578]
    0.00 :   57b:    call   580 <virtnet_poll_tx+0x140>
    0.00 :   580:    mov    -0x2c0(%rbx),%rdi
    0.00 :   587:    jmp    4e6 <virtnet_poll_tx+0xa6>
    0.00 :   58c:    mov    %rbx,%rdi
    0.00 :   58f:    call   594 <virtnet_poll_tx+0x154>
    0.00 :   594:    test   %al,%al
    0.00 :   596:    je     521 <virtnet_poll_tx+0xe1>
    0.00 :   598:    mov    %gs:0x0(%rip),%ebp        # 59f <virtnet_poll_tx+0x15f>
    0.00 :   59f:    mov    %r13,%rdi
    0.00 :   5a2:    call   5a7 <virtnet_poll_tx+0x167>
    0.00 :   5a7:    mov    %ebp,0x84(%r12)
    0.00 :   5af:    mov    -0x2c0(%rbx),%rdi
    0.00 :   5b6:    call   5bb <virtnet_poll_tx+0x17b>
    0.00 :   5bb:    mov    %r13,%rdi
    0.00 :   5be:    movl   $0xffffffff,0x84(%r12)
    0.00 :   5ca:    call   5cf <virtnet_poll_tx+0x18f>
    0.00 :   5cf:    mov    %rbx,%rdi
    0.00 :   5d2:    call   5d7 <virtnet_poll_tx+0x197>
    0.00 :   5d7:    jmp    521 <virtnet_poll_tx+0xe1>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   49.59 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/generic/dl-new-hash.h:77
   26.49 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/generic/dl-new-hash.h:101
   23.92 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:854
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (4 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009e20 <_dl_lookup_symbol_x>:
         : 6    _dl_lookup_symbol_x():
    0.00 :   9e20:   endbr64
    0.00 :   9e24:   push   %r15
    0.00 :   9e26:   push   %r14
    0.00 :   9e28:   push   %r13
    0.00 :   9e2a:   mov    %rsi,%r13
    0.00 :   9e2d:   push   %r12
    0.00 :   9e2f:   mov    %r8,%r12
    0.00 :   9e32:   push   %rbp
    0.00 :   9e33:   mov    %rdx,%rbp
    0.00 :   9e36:   push   %rbx
    0.00 :   9e37:   mov    %rdi,%rbx
    0.00 :   9e3a:   sub    $0x88,%rsp
    0.00 :   9e41:   mov    %rcx,0x10(%rsp)
    0.00 :   9e46:   mov    %r9d,0x38(%rsp)
    0.00 :   9e4b:   movzbl (%rbx),%eax
   49.59 :   9e4e:   test   %eax,%eax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/generic/dl-new-hash.h:77
    0.00 :   9e50:   je     a0c8 <_dl_lookup_symbol_x+0x2a8>
    0.00 :   9e56:   mov    %rbx,%rcx
    0.00 :   9e59:   mov    $0x1505,%r14d
    0.00 :   9e5f:   nop
    0.00 :   9e60:   movzbl 0x1(%rcx),%edx
    0.00 :   9e64:   test   %edx,%edx
    0.00 :   9e66:   je     a0b0 <_dl_lookup_symbol_x+0x290>
   26.49 :   9e6c:   imul   $0x441,%r14d,%r14d // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/generic/dl-new-hash.h:101
    0.00 :   9e73:   add    %eax,%edx
    0.00 :   9e75:   add    $0x2,%rcx
    0.00 :   9e79:   shl    $0x5,%eax
    0.00 :   9e7c:   add    %edx,%eax
    0.00 :   9e7e:   add    %eax,%r14d
    0.00 :   9e81:   movzbl (%rcx),%eax
    0.00 :   9e84:   test   %eax,%eax
    0.00 :   9e86:   jne    9e60 <_dl_lookup_symbol_x+0x40>
    0.00 :   9e88:   mov    $0xffffffff,%eax
    0.00 :   9e8d:   pxor   %xmm1,%xmm1
    0.00 :   9e91:   addq   $0x1,0x2bbff(%rip)        # 35a98 <_rtld_global+0xa98>
    0.00 :   9e99:   mov    %rax,0x48(%rsp)
    0.00 :   9e9e:   movaps %xmm1,0x50(%rsp)
    0.00 :   9ea3:   test   %r12,%r12
    0.00 :   9ea6:   je     9eb6 <_dl_lookup_symbol_x+0x96>
    0.00 :   9ea8:   testb  $0x2,0xc0(%rsp)
    0.00 :   9eb0:   jne    a626 <_dl_lookup_symbol_x+0x806>
    0.00 :   9eb6:   cmpq   $0x0,0xc8(%rsp)
    0.00 :   9ebf:   mov    0x10(%rsp),%rax
    0.00 :   9ec4:   mov    (%rax),%r9
    0.00 :   9ec7:   jne    a0d8 <_dl_lookup_symbol_x+0x2b8>
    0.00 :   9ecd:   test   %r9,%r9
    0.00 :   9ed0:   je     a107 <_dl_lookup_symbol_x+0x2e7>
    0.00 :   9ed6:   xor    %edx,%edx
    0.00 :   9ed8:   mov    0x10(%rsp),%r15
    0.00 :   9edd:   lea    0x50(%rsp),%rsi
    0.00 :   9ee2:   lea    0x48(%rsp),%rdi
    0.00 :   9ee7:   mov    %rdx,%rax
    0.00 :   9eea:   mov    %rsi,0x8(%rsp)
    0.00 :   9eef:   mov    %rbp,%rsi
    0.00 :   9ef2:   mov    %rdi,(%rsp)
    0.00 :   9ef6:   mov    %r15,%rbp
    0.00 :   9ef9:   mov    %rsi,%r15
    0.00 :   9efc:   mov    %rdx,0x18(%rsp)
    0.00 :   9f01:   jmp    9f17 <_dl_lookup_symbol_x+0xf7>
    0.00 :   9f03:   nopl   0x0(%rax,%rax,1)
    0.00 :   9f08:   mov    0x8(%rbp),%r9
    0.00 :   9f0c:   add    $0x8,%rbp
    0.00 :   9f10:   xor    %eax,%eax
    0.00 :   9f12:   test   %r9,%r9
    0.00 :   9f15:   je     9f50 <_dl_lookup_symbol_x+0x130>
    0.00 :   9f17:   mov    (%r15),%rcx
    0.00 :   9f1a:   push   %r13
    0.00 :   9f1c:   mov    0x40(%rsp),%esi
    0.00 :   9f20:   push   %rsi
    0.00 :   9f21:   mov    %r14d,%esi
    0.00 :   9f24:   push   0xd8(%rsp)
    0.00 :   9f2b:   mov    0xd8(%rsp),%edi
    0.00 :   9f32:   push   %rdi
    0.00 :   9f33:   mov    %rbx,%rdi
    0.00 :   9f36:   push   %r12
    0.00 :   9f38:   push   %rax
    0.00 :   9f39:   mov    0x38(%rsp),%r8
    0.00 :   9f3e:   mov    0x30(%rsp),%rdx
    0.00 :   9f43:   call   9210 <do_lookup_x>
    0.00 :   9f48:   add    $0x30,%rsp
    0.00 :   9f4c:   test   %eax,%eax
    0.00 :   9f4e:   je     9f08 <_dl_lookup_symbol_x+0xe8>
    0.00 :   9f50:   mov    (%r15),%rcx
    0.00 :   9f53:   mov    0x50(%rsp),%rdi
    0.00 :   9f58:   mov    %r15,%rbp
    0.00 :   9f5b:   mov    0x18(%rsp),%rdx
    0.00 :   9f60:   mov    %rcx,%rax
    0.00 :   9f63:   test   %rdi,%rdi
    0.00 :   9f66:   je     a10b <_dl_lookup_symbol_x+0x2eb>
    0.00 :   9f6c:   test   %rcx,%rcx
    0.00 :   9f6f:   je     9f7c <_dl_lookup_symbol_x+0x15c>
    0.00 :   9f71:   movzbl 0x5(%rcx),%eax
    0.00 :   9f75:   and    $0x3,%eax
    0.00 :   9f78:   cmp    $0x3,%al
    0.00 :   9f7a:   je     9fd8 <_dl_lookup_symbol_x+0x1b8>
    0.00 :   9f7c:   mov    0x58(%rsp),%r15
    0.00 :   9f81:   xor    %r9d,%r9d
    0.00 :   9f84:   movzbl 0x334(%r15),%eax
    0.00 :   9f8c:   and    $0x3,%eax
    0.00 :   9f8f:   cmp    $0x2,%al
    0.00 :   9f91:   je     a230 <_dl_lookup_symbol_x+0x410>
    0.00 :   9f97:   mov    0x50(%rsp),%r10
   23.92 :   9f9c:   mov    0x3fc(%r15),%esi // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:854
    0.00 :   9fa3:   test   %esi,%esi
    0.00 :   9fa5:   je     a220 <_dl_lookup_symbol_x+0x400>
    0.00 :   9fab:   testb  $0x4,0x2aaae(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9fb2:   jne    a1a0 <_dl_lookup_symbol_x+0x380>
    0.00 :   9fb8:   mov    %r10,0x0(%rbp)
    0.00 :   9fbc:   add    $0x88,%rsp
    0.00 :   9fc3:   mov    %r15,%rax
    0.00 :   9fc6:   pop    %rbx
    0.00 :   9fc7:   pop    %rbp
    0.00 :   9fc8:   pop    %r12
    0.00 :   9fca:   pop    %r13
    0.00 :   9fcc:   pop    %r14
    0.00 :   9fce:   pop    %r15
    0.00 :   9fd0:   ret
    0.00 :   9fd1:   nopl   0x0(%rax)
    0.00 :   9fd8:   cmpl   $0x1,0x38(%rsp)
    0.00 :   9fdd:   je     a3c8 <_dl_lookup_symbol_x+0x5a8>
    0.00 :   9fe3:   mov    0x10(%rsp),%r15
    0.00 :   9fe8:   pxor   %xmm0,%xmm0
    0.00 :   9fec:   lea    0x60(%rsp),%rax
    0.00 :   9ff1:   movaps %xmm0,0x60(%rsp)
    0.00 :   9ff6:   mov    (%r15),%r9
    0.00 :   9ff9:   mov    %rax,0x8(%rsp)
    0.00 :   9ffe:   test   %r9,%r9
    0.00 :   a001:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a007:   mov    %r14d,0x18(%rsp)
    0.00 :   a00c:   mov    %r15,%r14
    0.00 :   a00f:   mov    0xc8(%rsp),%r15
    0.00 :   a017:   mov    %r13,0x20(%rsp)
    0.00 :   a01c:   mov    0xc0(%rsp),%r13d
    0.00 :   a024:   jmp    a043 <_dl_lookup_symbol_x+0x223>
    0.00 :   a026:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   a030:   mov    0x8(%r14),%r9
    0.00 :   a034:   add    $0x8,%r14
    0.00 :   a038:   test   %r9,%r9
    0.00 :   a03b:   je     a06c <_dl_lookup_symbol_x+0x24c>
    0.00 :   a03d:   mov    0x0(%rbp),%rcx
    0.00 :   a041:   xor    %edx,%edx
    0.00 :   a043:   push   $0x0
    0.00 :   a045:   mov    %rbx,%rdi
    0.00 :   a048:   push   $0x1
    0.00 :   a04a:   push   %r15
    0.00 :   a04c:   push   %r13
    0.00 :   a04e:   push   %r12
    0.00 :   a050:   push   %rdx
    0.00 :   a051:   mov    0x38(%rsp),%r8
    0.00 :   a056:   mov    0x30(%rsp),%rdx
    0.00 :   a05b:   mov    0x48(%rsp),%esi
    0.00 :   a05f:   call   9210 <do_lookup_x>
    0.00 :   a064:   add    $0x30,%rsp
    0.00 :   a068:   test   %eax,%eax
    0.00 :   a06a:   je     a030 <_dl_lookup_symbol_x+0x210>
    0.00 :   a06c:   cmpq   $0x0,0x60(%rsp)
    0.00 :   a072:   mov    0x20(%rsp),%r13
    0.00 :   a077:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a07d:   cmp    %r13,0x68(%rsp)
    0.00 :   a082:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a088:   movq   0x0(%rbp),%xmm0
    0.00 :   a08d:   movq   %r13,%xmm2
    0.00 :   a092:   mov    %r13,%r15
    0.00 :   a095:   punpcklqdq %xmm2,%xmm0
    0.00 :   a099:   movaps %xmm0,0x50(%rsp)
    0.00 :   a09e:   mov    $0x1,%r9d
    0.00 :   a0a4:   jmp    9f84 <_dl_lookup_symbol_x+0x164>
    0.00 :   a0a9:   nopl   0x0(%rax)
    0.00 :   a0b0:   add    %r14d,%eax
    0.00 :   a0b3:   mov    %r14d,%esi
    0.00 :   a0b6:   shl    $0x5,%esi
    0.00 :   a0b9:   lea    (%rax,%rsi,1),%r14d
    0.00 :   a0bd:   jmp    9e88 <_dl_lookup_symbol_x+0x68>
    0.00 :   a0c2:   nopw   0x0(%rax,%rax,1)
    0.00 :   a0c8:   mov    $0x1505,%r14d
    0.00 :   a0ce:   jmp    9e88 <_dl_lookup_symbol_x+0x68>
    0.00 :   a0d3:   nopl   0x0(%rax,%rax,1)
    0.00 :   a0d8:   mov    (%r9),%rax
    0.00 :   a0db:   mov    0xc8(%rsp),%rdi
    0.00 :   a0e3:   xor    %edx,%edx
    0.00 :   a0e5:   cmp    %rdi,(%rax)
    0.00 :   a0e8:   je     9ed8 <_dl_lookup_symbol_x+0xb8>
    0.00 :   a0ee:   mov    %rdi,%rcx
    0.00 :   a0f1:   nopl   0x0(%rax)
    0.00 :   a0f8:   add    $0x1,%rdx
    0.00 :   a0fc:   cmp    %rcx,(%rax,%rdx,8)
    0.00 :   a100:   jne    a0f8 <_dl_lookup_symbol_x+0x2d8>
    0.00 :   a102:   jmp    9ed8 <_dl_lookup_symbol_x+0xb8>
    0.00 :   a107:   mov    0x0(%rbp),%rax
    0.00 :   a10b:   test   %rax,%rax
    0.00 :   a10e:   je     a11b <_dl_lookup_symbol_x+0x2fb>
    0.00 :   a110:   movzbl 0x4(%rax),%eax
    0.00 :   a114:   shr    $0x4,%al
    0.00 :   a117:   cmp    $0x2,%al
    0.00 :   a119:   je     a191 <_dl_lookup_symbol_x+0x371>
    0.00 :   a11b:   testb  $0x1,0x2a93f(%rip)        # 34a61 <_rtld_global_ro+0x1>
    0.00 :   a122:   jne    a191 <_dl_lookup_symbol_x+0x371>
    0.00 :   a124:   test   %r13,%r13
    0.00 :   a127:   je     a44d <_dl_lookup_symbol_x+0x62d>
    0.00 :   a12d:   mov    0x8(%r13),%rsi
    0.00 :   a131:   lea    0x20ae1(%rip),%r8        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a138:   mov    %r8,%r9
    0.00 :   a13b:   movzbl (%rsi),%eax
    0.00 :   a13e:   test   %r12,%r12
    0.00 :   a141:   je     a157 <_dl_lookup_symbol_x+0x337>
    0.00 :   a143:   mov    (%r12),%r9
    0.00 :   a147:   lea    0x1fb1e(%rip),%r8        # 29c6c <_sys_errname+0x8ac>
    0.00 :   a14e:   test   %r9,%r9
    0.00 :   a151:   je     a498 <_dl_lookup_symbol_x+0x678>
    0.00 :   a157:   test   %al,%al
    0.00 :   a159:   je     a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a15f:   lea    0x60(%rsp),%r12
    0.00 :   a164:   mov    %rbx,%rcx
    0.00 :   a167:   lea    0x1fb1a(%rip),%rdx        # 29c88 <_sys_errname+0x8c8>
    0.00 :   a16e:   xor    %eax,%eax
    0.00 :   a170:   mov    %r12,%rdi
    0.00 :   a173:   call   3450 <_dl_exception_create_format>
    0.00 :   a178:   xor    %edi,%edi
    0.00 :   a17a:   lea    0x1fb20(%rip),%rdx        # 29ca1 <_sys_errname+0x8e1>
    0.00 :   a181:   mov    %r12,%rsi
    0.00 :   a184:   call   18e20 <_dl_signal_cexception>
    0.00 :   a189:   mov    %r12,%rdi
    0.00 :   a18c:   call   38c0 <_dl_exception_free>
    0.00 :   a191:   xor    %r10d,%r10d
    0.00 :   a194:   xor    %r15d,%r15d
    0.00 :   a197:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a19c:   nopl   0x0(%rax)
    0.00 :   a1a0:   mov    0x8(%r15),%rcx
    0.00 :   a1a4:   test   %r9d,%r9d
    0.00 :   a1a7:   lea    0x1fac9(%rip),%rax        # 29c77 <_sys_errname+0x8b7>
    0.00 :   a1ae:   mov    0x8(%r13),%rsi
    0.00 :   a1b2:   lea    0x1fac8(%rip),%r9        # 29c81 <_sys_errname+0x8c1>
    0.00 :   a1b9:   mov    0x30(%r15),%r8
    0.00 :   a1bd:   cmovne %rax,%r9
    0.00 :   a1c1:   cmpb   $0x0,(%rcx)
    0.00 :   a1c4:   je     a40b <_dl_lookup_symbol_x+0x5eb>
    0.00 :   a1ca:   cmpb   $0x0,(%rsi)
    0.00 :   a1cd:   mov    0x30(%r13),%rdx
    0.00 :   a1d1:   je     a3ee <_dl_lookup_symbol_x+0x5ce>
    0.00 :   a1d7:   mov    %r10,(%rsp)
    0.00 :   a1db:   sub    $0x8,%rsp
    0.00 :   a1df:   xor    %eax,%eax
    0.00 :   a1e1:   lea    0x21df8(%rip),%rdi        # 2bfe0 <__PRETTY_FUNCTION__.9+0x2f0>
    0.00 :   a1e8:   push   %rbx
    0.00 :   a1e9:   call   d1d0 <_dl_debug_printf>
    0.00 :   a1ee:   test   %r12,%r12
    0.00 :   a1f1:   pop    %rdx
    0.00 :   a1f2:   pop    %rcx
    0.00 :   a1f3:   mov    (%rsp),%r10
    0.00 :   a1f7:   je     a432 <_dl_lookup_symbol_x+0x612>
    0.00 :   a1fd:   mov    (%r12),%rsi
    0.00 :   a201:   lea    0x1faad(%rip),%rdi        # 29cb5 <_sys_errname+0x8f5>
    0.00 :   a208:   xor    %eax,%eax
    0.00 :   a20a:   call   d280 <_dl_debug_printf_c>
    0.00 :   a20f:   mov    (%rsp),%r10
    0.00 :   a213:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a218:   nopl   0x0(%rax,%rax,1)
    0.00 :   a220:   movl   $0x1,0x3fc(%r15)
    0.00 :   a22b:   jmp    9fab <_dl_lookup_symbol_x+0x18b>
    0.00 :   a230:   testb  $0x1,0xc0(%rsp)
    0.00 :   a238:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a23e:   cmp    %r15,%r13
    0.00 :   a241:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a247:   cmpb   $0x0,0x337(%r15)
    0.00 :   a24f:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a255:   mov    0xc0(%rsp),%eax
    0.00 :   a25c:   and    $0x8,%eax
    0.00 :   a25f:   mov    %eax,(%rsp)
    0.00 :   a262:   je     a272 <_dl_lookup_symbol_x+0x452>
    0.00 :   a264:   cmpb   $0x0,0x338(%r15)
    0.00 :   a26c:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a272:   mov    0x3f0(%r13),%rax
    0.00 :   a279:   mov    %rax,0x18(%rsp)
    0.00 :   a27e:   mov    0x3e8(%r13),%r8
    0.00 :   a285:   test   %r8,%r8
    0.00 :   a288:   je     a2ac <_dl_lookup_symbol_x+0x48c>
    0.00 :   a28a:   mov    (%r8),%rax
    0.00 :   a28d:   test   %rax,%rax
    0.00 :   a290:   je     a2ac <_dl_lookup_symbol_x+0x48c>
    0.00 :   a292:   xor    %edx,%edx
    0.00 :   a294:   cmp    %r15,%rax
    0.00 :   a297:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a29d:   lea    0x1(%rdx),%eax
    0.00 :   a2a0:   mov    %rax,%rdx
    0.00 :   a2a3:   mov    (%r8,%rax,8),%rax
    0.00 :   a2a7:   test   %rax,%rax
    0.00 :   a2aa:   jne    a294 <_dl_lookup_symbol_x+0x474>
    0.00 :   a2ac:   mov    0x18(%rsp),%rdi
    0.00 :   a2b1:   mov    %rdi,%rax
    0.00 :   a2b4:   test   %rdi,%rdi
    0.00 :   a2b7:   je     a4a4 <_dl_lookup_symbol_x+0x684>
    0.00 :   a2bd:   mov    (%rdi),%r14d
    0.00 :   a2c0:   test   %r14d,%r14d
    0.00 :   a2c3:   je     a2df <_dl_lookup_symbol_x+0x4bf>
    0.00 :   a2c5:   mov    %r14d,%edx
    0.00 :   a2c8:   lea    (%rdi,%rdx,8),%rdx
    0.00 :   a2cc:   cmp    %r15,0x8(%rax)
    0.00 :   a2d0:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a2d6:   add    $0x8,%rax
    0.00 :   a2da:   cmp    %rax,%rdx
    0.00 :   a2dd:   jne    a2cc <_dl_lookup_symbol_x+0x4ac>
    0.00 :   a2df:   mov    0x498(%r15),%rax
    0.00 :   a2e6:   mov    %rax,0x20(%rsp)
    0.00 :   a2eb:   mov    0xc0(%rsp),%eax
    0.00 :   a2f2:   and    $0x4,%eax
    0.00 :   a2f5:   mov    %eax,0x8(%rsp)
    0.00 :   a2f9:   jne    a555 <_dl_lookup_symbol_x+0x735>
    0.00 :   a2ff:   lea    0x2b702(%rip),%rdi        # 35a08 <_rtld_global+0xa08>
    0.00 :   a306:   mov    %r9d,0x28(%rsp)
    0.00 :   a30b:   mov    %rdi,0x18(%rsp)
    0.00 :   a310:   call   *0x2a6e2(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   a316:   mov    0x18(%rsp),%rdi
    0.00 :   a31b:   mov    0x28(%rsp),%r9d
    0.00 :   a320:   mov    %r15,%rcx
    0.00 :   a323:   mov    0x30(%r13),%rdx
    0.00 :   a327:   lea    0x2acd2(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   a32e:   lea    (%rdx,%rdx,4),%rax
    0.00 :   a332:   shl    $0x5,%rax
    0.00 :   a336:   mov    (%rsi,%rax,1),%rax
    0.00 :   a33a:   test   %rax,%rax
    0.00 :   a33d:   jne    a355 <_dl_lookup_symbol_x+0x535>
    0.00 :   a33f:   jmp    a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a344:   nopl   0x0(%rax)
    0.00 :   a348:   mov    0x18(%rax),%rax
    0.00 :   a34c:   test   %rax,%rax
    0.00 :   a34f:   je     a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a355:   cmp    %rcx,%rax
    0.00 :   a358:   jne    a348 <_dl_lookup_symbol_x+0x528>
    0.00 :   a35a:   test   %rax,%rax
    0.00 :   a35d:   je     a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a363:   mov    0x20(%rsp),%rax
    0.00 :   a368:   cmp    0x498(%rcx),%rax
    0.00 :   a36f:   jne    a4ac <_dl_lookup_symbol_x+0x68c>
    0.00 :   a375:   cmpb   $0x0,0x337(%rcx)
    0.00 :   a37c:   mov    %r14d,0x38(%rsp)
    0.00 :   a381:   mov    %rdx,%r8
    0.00 :   a384:   mov    %rcx,%r14
    0.00 :   a387:   mov    %rdi,0x18(%rsp)
    0.00 :   a38c:   je     a4f1 <_dl_lookup_symbol_x+0x6d1>
    0.00 :   a392:   mov    %r9d,(%rsp)
    0.00 :   a396:   mov    0x18(%rsp),%rdi
    0.00 :   a39b:   call   *0x2a64f(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a3a1:   cmpl   $0x0,0x8(%rsp)
    0.00 :   a3a6:   mov    (%rsp),%r9d
    0.00 :   a3aa:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a3b0:   movl   $0x1,%fs:0x1c
    0.00 :   a3bc:   jmp    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a3c1:   nopl   0x0(%rax)
    0.00 :   a3c8:   mov    %rcx,%r10
    0.00 :   a3cb:   cmp    %r13,0x58(%rsp)
    0.00 :   a3d0:   je     a490 <_dl_lookup_symbol_x+0x670>
    0.00 :   a3d6:   mov    %r10,0x50(%rsp)
    0.00 :   a3db:   mov    %r13,0x58(%rsp)
    0.00 :   a3e0:   mov    $0x1,%r9d
    0.00 :   a3e6:   mov    %r13,%r15
    0.00 :   a3e9:   jmp    9f9c <_dl_lookup_symbol_x+0x17c>
    0.00 :   a3ee:   mov    0x2a643(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a3f5:   mov    (%rax),%rsi
    0.00 :   a3f8:   lea    0x1f52d(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a3ff:   test   %rsi,%rsi
    0.00 :   a402:   cmove  %rax,%rsi
    0.00 :   a406:   jmp    a1d7 <_dl_lookup_symbol_x+0x3b7>
    0.00 :   a40b:   mov    0x2a626(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a412:   mov    (%rax),%rcx
    0.00 :   a415:   lea    0x1f510(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a41c:   test   %rcx,%rcx
    0.00 :   a41f:   cmove  %rax,%rcx
    0.00 :   a423:   jmp    a1ca <_dl_lookup_symbol_x+0x3aa>
    0.00 :   a428:   mov    0x58(%rsp),%r15
    0.00 :   a42d:   jmp    a09e <_dl_lookup_symbol_x+0x27e>
    0.00 :   a432:   lea    0x207df(%rip),%rdi        # 2ac18 <__PRETTY_FUNCTION__.2+0x53d>
    0.00 :   a439:   xor    %eax,%eax
    0.00 :   a43b:   mov    %r10,(%rsp)
    0.00 :   a43f:   call   d280 <_dl_debug_printf_c>
    0.00 :   a444:   mov    (%rsp),%r10
    0.00 :   a448:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a44d:   lea    0x207c5(%rip),%r8        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a454:   mov    %r8,%r9
    0.00 :   a457:   test   %r12,%r12
    0.00 :   a45a:   je     a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a45c:   mov    (%r12),%r9
    0.00 :   a460:   lea    0x1f805(%rip),%r8        # 29c6c <_sys_errname+0x8ac>
    0.00 :   a467:   test   %r9,%r9
    0.00 :   a46a:   jne    a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a46c:   lea    0x207a6(%rip),%r9        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a473:   mov    0x2a5be(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a47a:   mov    (%rax),%rsi
    0.00 :   a47d:   lea    0x1f4a8(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a484:   test   %rsi,%rsi
    0.00 :   a487:   cmove  %rax,%rsi
    0.00 :   a48b:   jmp    a15f <_dl_lookup_symbol_x+0x33f>
    0.00 :   a490:   mov    %rdi,%r10
    0.00 :   a493:   jmp    a3e0 <_dl_lookup_symbol_x+0x5c0>
    0.00 :   a498:   lea    0x2077a(%rip),%r9        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a49f:   jmp    a157 <_dl_lookup_symbol_x+0x337>
    0.00 :   a4a4:   xor    %r14d,%r14d
    0.00 :   a4a7:   jmp    a2df <_dl_lookup_symbol_x+0x4bf>
    0.00 :   a4ac:   mov    %r9d,(%rsp)
    0.00 :   a4b0:   call   *0x2a53a(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a4b6:   mov    0x8(%rsp),%eax
    0.00 :   a4ba:   mov    (%rsp),%r9d
    0.00 :   a4be:   test   %eax,%eax
    0.00 :   a4c0:   je     9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a4c6:   or     $0xffffffff,%r14d
    0.00 :   a4ca:   movl   $0x1,%fs:0x1c
    0.00 :   a4d6:   add    $0x1,%r14d
    0.00 :   a4da:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a4e0:   mov    0x3b0(%r13),%rax
    0.00 :   a4e7:   mov    %rax,0x10(%rsp)
    0.00 :   a4ec:   jmp    9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a4f1:   cmpl   $0x0,(%rsp)
    0.00 :   a4f5:   je     a645 <_dl_lookup_symbol_x+0x825>
    0.00 :   a4fb:   cmpb   $0x0,0x338(%rcx)
    0.00 :   a502:   jne    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a508:   movzbl 0x334(%r13),%eax
    0.00 :   a510:   and    $0x3,%eax
    0.00 :   a513:   cmp    $0x2,%al
    0.00 :   a515:   je     a6a1 <_dl_lookup_symbol_x+0x881>
    0.00 :   a51b:   testb  $0x4,0x2a53e(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a522:   jne    a65d <_dl_lookup_symbol_x+0x83d>
    0.00 :   a528:   movb   $0x1,0x338(%r14)
    0.00 :   a530:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a535:   call   *0x2a4b5(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a53b:   mov    0x8(%rsp),%edi
    0.00 :   a53f:   test   %edi,%edi
    0.00 :   a541:   je     9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a547:   movl   $0x1,%fs:0x1c
    0.00 :   a553:   jmp    a4e0 <_dl_lookup_symbol_x+0x6c0>
    0.00 :   a555:   xor    %eax,%eax
    0.00 :   a557:   xchg   %eax,%fs:0x1c
    0.00 :   a55f:   cmp    $0x2,%eax
    0.00 :   a562:   jne    a585 <_dl_lookup_symbol_x+0x765>
    0.00 :   a564:   xor    %r10d,%r10d
    0.00 :   a567:   mov    $0x1,%edx
    0.00 :   a56c:   mov    $0x81,%esi
    0.00 :   a571:   mov    %fs:0x10,%rax
    0.00 :   a57a:   lea    0x1c(%rax),%rdi
    0.00 :   a57e:   mov    $0xca,%eax
    0.00 :   a583:   syscall
    0.00 :   a585:   lea    0x2b47c(%rip),%rdi        # 35a08 <_rtld_global+0xa08>
    0.00 :   a58c:   mov    %r9d,0x3c(%rsp)
    0.00 :   a591:   mov    %r8,0x30(%rsp)
    0.00 :   a596:   mov    %rdi,0x28(%rsp)
    0.00 :   a59b:   call   *0x2a457(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   a5a1:   mov    0x3e8(%r13),%rax
    0.00 :   a5a8:   mov    0x30(%rsp),%r8
    0.00 :   a5ad:   mov    %r15,%rdx
    0.00 :   a5b0:   cmp    %r8,%rax
    0.00 :   a5b3:   mov    0x28(%rsp),%rdi
    0.00 :   a5b8:   mov    0x3c(%rsp),%r9d
    0.00 :   a5bd:   mov    %rdx,%rcx
    0.00 :   a5c0:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5c6:   test   %rax,%rax
    0.00 :   a5c9:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5cf:   mov    (%rax),%rsi
    0.00 :   a5d2:   test   %rsi,%rsi
    0.00 :   a5d5:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5db:   xor    %r10d,%r10d
    0.00 :   a5de:   jmp    a5f4 <_dl_lookup_symbol_x+0x7d4>
    0.00 :   a5e0:   lea    0x1(%r10),%esi
    0.00 :   a5e4:   mov    %rsi,%r10
    0.00 :   a5e7:   mov    (%rax,%rsi,8),%rsi
    0.00 :   a5eb:   test   %rsi,%rsi
    0.00 :   a5ee:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5f4:   cmp    %rsi,%rdx
    0.00 :   a5f7:   jne    a5e0 <_dl_lookup_symbol_x+0x7c0>
    0.00 :   a5f9:   mov    0x498(%rdx),%rax
    0.00 :   a600:   mov    0x20(%rsp),%rsi
    0.00 :   a605:   mov    %r9d,(%rsp)
    0.00 :   a609:   cmp    %rsi,%rax
    0.00 :   a60c:   setne  %al
    0.00 :   a60f:   movzbl %al,%eax
    0.00 :   a612:   neg    %eax
    0.00 :   a614:   mov    %eax,%r14d
    0.00 :   a617:   call   *0x2a3d3(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a61d:   mov    (%rsp),%r9d
    0.00 :   a621:   jmp    a4ca <_dl_lookup_symbol_x+0x6aa>
    0.00 :   a626:   lea    0x20823(%rip),%rcx        # 2ae50 <__PRETTY_FUNCTION__.2>
    0.00 :   a62d:   mov    $0x2fe,%edx
    0.00 :   a632:   lea    0x1f618(%rip),%rsi        # 29c51 <_sys_errname+0x891>
    0.00 :   a639:   lea    0x21860(%rip),%rdi        # 2bea0 <__PRETTY_FUNCTION__.9+0x1b0>
    0.00 :   a640:   call   19f20 <__GI___assert_fail>
    0.00 :   a645:   movzbl 0x334(%r13),%eax
    0.00 :   a64d:   and    $0x3,%eax
    0.00 :   a650:   cmp    $0x2,%al
    0.00 :   a652:   je     a6a1 <_dl_lookup_symbol_x+0x881>
    0.00 :   a654:   testb  $0x4,0x2a405(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a65b:   je     a694 <_dl_lookup_symbol_x+0x874>
    0.00 :   a65d:   mov    0x8(%r13),%rcx
    0.00 :   a661:   mov    0x30(%r14),%rdx
    0.00 :   a665:   mov    %r9d,0x38(%rsp)
    0.00 :   a66a:   mov    0x8(%r14),%rsi
    0.00 :   a66e:   cmpb   $0x0,(%rcx)
    0.00 :   a671:   jne    a851 <_dl_lookup_symbol_x+0xa31>
    0.00 :   a677:   lea    0x2185a(%rip),%rdi        # 2bed8 <__PRETTY_FUNCTION__.9+0x1e8>
    0.00 :   a67e:   xor    %eax,%eax
    0.00 :   a680:   call   d1d0 <_dl_debug_printf>
    0.00 :   a685:   mov    0x38(%rsp),%r9d
    0.00 :   a68a:   cmpl   $0x0,(%rsp)
    0.00 :   a68e:   jne    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a694:   movb   $0x1,0x337(%r14)
    0.00 :   a69c:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a6a1:   mov    0x3f8(%r13),%eax
    0.00 :   a6a8:   cmp    %eax,0x38(%rsp)
    0.00 :   a6ac:   jae    a73e <_dl_lookup_symbol_x+0x91e>
    0.00 :   a6b2:   mov    0x38(%rsp),%edx
    0.00 :   a6b6:   mov    0x3f0(%r13),%rax
    0.00 :   a6bd:   mov    %rdx,%rdi
    0.00 :   a6c0:   mov    %r14,0x8(%rax,%rdx,8)
    0.00 :   a6c5:   mov    0x3f0(%r13),%rdx
    0.00 :   a6cc:   lea    0x1(%rdi),%eax
    0.00 :   a6cf:   mov    %eax,(%rdx)
    0.00 :   a6d1:   testb  $0x40,0x2a388(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a6d8:   je     a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a6de:   mov    0x8(%r13),%rcx
    0.00 :   a6e2:   mov    0x30(%r13),%r8
    0.00 :   a6e6:   cmpb   $0x0,(%rcx)
    0.00 :   a6e9:   jne    a6fe <_dl_lookup_symbol_x+0x8de>
    0.00 :   a6eb:   mov    0x2a346(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a6f2:   mov    (%rax),%rcx
    0.00 :   a6f5:   test   %rcx,%rcx
    0.00 :   a6f8:   je     a7c4 <_dl_lookup_symbol_x+0x9a4>
    0.00 :   a6fe:   mov    0x8(%r14),%rsi
    0.00 :   a702:   mov    0x30(%r14),%rdx
    0.00 :   a706:   cmpb   $0x0,(%rsi)
    0.00 :   a709:   jne    a71a <_dl_lookup_symbol_x+0x8fa>
    0.00 :   a70b:   mov    0x2a326(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a712:   mov    (%rax),%rsi
    0.00 :   a715:   test   %rsi,%rsi
    0.00 :   a718:   je     a735 <_dl_lookup_symbol_x+0x915>
    0.00 :   a71a:   lea    0x2187f(%rip),%rdi        # 2bfa0 <__PRETTY_FUNCTION__.9+0x2b0>
    0.00 :   a721:   xor    %eax,%eax
    0.00 :   a723:   mov    %r9d,(%rsp)
    0.00 :   a727:   call   d1d0 <_dl_debug_printf>
    0.00 :   a72c:   mov    (%rsp),%r9d
    0.00 :   a730:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a735:   lea    0x1f1f0(%rip),%rsi        # 2992c <_sys_errname+0x56c>
    0.00 :   a73c:   jmp    a71a <_dl_lookup_symbol_x+0x8fa>
    0.00 :   a73e:   movl   $0xa,0x10(%rsp)
    0.00 :   a746:   test   %eax,%eax
    0.00 :   a748:   je     a750 <_dl_lookup_symbol_x+0x930>
    0.00 :   a74a:   add    %eax,%eax
    0.00 :   a74c:   mov    %eax,0x10(%rsp)
    0.00 :   a750:   mov    0x10(%rsp),%eax
    0.00 :   a754:   mov    %r9d,0x20(%rsp)
    0.00 :   a759:   lea    0x8(,%rax,8),%rdi
    0.00 :   a761:   call   *0x2a271(%rip)        # 349d8 <__rtld_malloc>
    0.00 :   a767:   mov    0x20(%rsp),%r9d
    0.00 :   a76c:   test   %rax,%rax
    0.00 :   a76f:   mov    %rax,%rcx
    0.00 :   a772:   je     a80d <_dl_lookup_symbol_x+0x9ed>
    0.00 :   a778:   mov    0x38(%rsp),%r8d
    0.00 :   a77d:   test   %r8d,%r8d
    0.00 :   a780:   jne    a7d0 <_dl_lookup_symbol_x+0x9b0>
    0.00 :   a782:   mov    0x38(%rsp),%eax
    0.00 :   a786:   mov    %r14,0x8(%rcx,%r8,8)
    0.00 :   a78b:   add    $0x1,%eax
    0.00 :   a78e:   mov    %eax,(%rcx)
    0.00 :   a790:   mov    0x3f0(%r13),%rdi
    0.00 :   a797:   mov    0x10(%rsp),%eax
    0.00 :   a79b:   mov    %rcx,0x3f0(%r13)
    0.00 :   a7a2:   mov    %eax,0x3f8(%r13)
    0.00 :   a7a9:   test   %rdi,%rdi
    0.00 :   a7ac:   je     a6d1 <_dl_lookup_symbol_x+0x8b1>
    0.00 :   a7b2:   mov    %r9d,(%rsp)
    0.00 :   a7b6:   call   10a80 <_dl_scope_free>
    0.00 :   a7bb:   mov    (%rsp),%r9d
    0.00 :   a7bf:   jmp    a6d1 <_dl_lookup_symbol_x+0x8b1>
    0.00 :   a7c4:   lea    0x1f161(%rip),%rcx        # 2992c <_sys_errname+0x56c>
    0.00 :   a7cb:   jmp    a6fe <_dl_lookup_symbol_x+0x8de>
    0.00 :   a7d0:   mov    0x3f0(%r13),%rax
    0.00 :   a7d7:   lea    0x8(%rcx),%rdi
    0.00 :   a7db:   mov    %r9d,0x28(%rsp)
    0.00 :   a7e0:   lea    0x0(,%r8,8),%rdx
    0.00 :   a7e8:   mov    %rcx,0x20(%rsp)
    0.00 :   a7ed:   lea    0x8(%rax),%rsi
    0.00 :   a7f1:   mov    %r8,(%rsp)
    0.00 :   a7f5:   call   22660 <memcpy>
    0.00 :   a7fa:   mov    0x28(%rsp),%r9d
    0.00 :   a7ff:   mov    0x20(%rsp),%rcx
    0.00 :   a804:   mov    (%rsp),%r8
    0.00 :   a808:   jmp    a782 <_dl_lookup_symbol_x+0x962>
    0.00 :   a80d:   testb  $0x4,0x2a24c(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a814:   je     a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a81a:   cmpb   $0x0,0x337(%r14)
    0.00 :   a822:   jne    a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a828:   cmpl   $0x0,(%rsp)
    0.00 :   a82c:   jne    a8a3 <_dl_lookup_symbol_x+0xa83>
    0.00 :   a82e:   mov    0x30(%r14),%rdx
    0.00 :   a832:   mov    0x8(%r14),%rsi
    0.00 :   a836:   xor    %eax,%eax
    0.00 :   a838:   mov    %r9d,(%rsp)
    0.00 :   a83c:   lea    0x2171d(%rip),%rdi        # 2bf60 <__PRETTY_FUNCTION__.9+0x270>
    0.00 :   a843:   call   d1d0 <_dl_debug_printf>
    0.00 :   a848:   mov    (%rsp),%r9d
    0.00 :   a84c:   jmp    a694 <_dl_lookup_symbol_x+0x874>
    0.00 :   a851:   lea    0x216c8(%rip),%rdi        # 2bf20 <__PRETTY_FUNCTION__.9+0x230>
    0.00 :   a858:   xor    %eax,%eax
    0.00 :   a85a:   call   d1d0 <_dl_debug_printf>
    0.00 :   a85f:   mov    0x38(%rsp),%r9d
    0.00 :   a864:   jmp    a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a869:   mov    0x3f0(%r13),%rax
    0.00 :   a870:   test   %rax,%rax
    0.00 :   a873:   je     a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a879:   mov    (%rax),%esi
    0.00 :   a87b:   cmp    %rax,0x18(%rsp)
    0.00 :   a880:   je     a8e4 <_dl_lookup_symbol_x+0xac4>
    0.00 :   a882:   test   %esi,%esi
    0.00 :   a884:   je     a8dc <_dl_lookup_symbol_x+0xabc>
    0.00 :   a886:   mov    %esi,%r10d
    0.00 :   a889:   lea    (%rax,%r10,8),%r10
    0.00 :   a88d:   jmp    a898 <_dl_lookup_symbol_x+0xa78>
    0.00 :   a88f:   add    $0x8,%rax
    0.00 :   a893:   cmp    %r10,%rax
    0.00 :   a896:   je     a8d4 <_dl_lookup_symbol_x+0xab4>
    0.00 :   a898:   cmp    %rdx,0x8(%rax)
    0.00 :   a89c:   jne    a88f <_dl_lookup_symbol_x+0xa6f>
    0.00 :   a89e:   jmp    a5f9 <_dl_lookup_symbol_x+0x7d9>
    0.00 :   a8a3:   cmpb   $0x0,0x338(%r14)
    0.00 :   a8ab:   jne    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a8b1:   mov    0x30(%r14),%rdx
    0.00 :   a8b5:   mov    0x8(%r14),%rsi
    0.00 :   a8b9:   xor    %eax,%eax
    0.00 :   a8bb:   mov    %r9d,(%rsp)
    0.00 :   a8bf:   lea    0x2169a(%rip),%rdi        # 2bf60 <__PRETTY_FUNCTION__.9+0x270>
    0.00 :   a8c6:   call   d1d0 <_dl_debug_printf>
    0.00 :   a8cb:   mov    (%rsp),%r9d
    0.00 :   a8cf:   jmp    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a8d4:   mov    %esi,%r14d
    0.00 :   a8d7:   jmp    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8dc:   xor    %r14d,%r14d
    0.00 :   a8df:   jmp    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8e4:   cmp    %esi,%r14d
    0.00 :   a8e7:   jae    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8ed:   mov    0x18(%rsp),%r11
    0.00 :   a8f2:   mov    %r14d,%eax
    0.00 :   a8f5:   lea    (%r11,%rax,8),%rax
    0.00 :   a8f9:   jmp    a908 <_dl_lookup_symbol_x+0xae8>
    0.00 :   a8fb:   add    $0x1,%r14d
    0.00 :   a8ff:   cmp    %esi,%r14d
    0.00 :   a902:   je     a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a908:   add    $0x8,%rax
    0.00 :   a90c:   cmp    %rdx,(%rax)
    0.00 :   a90f:   jne    a8fb <_dl_lookup_symbol_x+0xadb>
    0.00 :   a911:   jmp    a5f9 <_dl_lookup_symbol_x+0x7d9>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   65.84 [nf_conntrack][8910]
   13.19 [nf_conntrack][8915]
   12.26 [nf_conntrack][8959]
    8.70 [nf_conntrack][8963]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (12 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000008910 <ipv4_confirm>:
         : 6    ipv4_confirm():
   65.84 :   8910:   call   8915 <ipv4_confirm+0x5> // [nf_conntrack][8910]
   13.19 :   8915:   mov    0x68(%rsi),%rax // [nf_conntrack][8915]
    0.00 :   8919:   mov    %rsi,%rdi
    0.00 :   891c:   mov    %eax,%ecx
    0.00 :   891e:   mov    %rax,%rsi
    0.00 :   8921:   and    $0x7,%ecx
    0.00 :   8924:   and    $0xfffffffffffffff8,%rsi
    0.00 :   8928:   cmp    $0x7,%rax
    0.00 :   892c:   jbe    8970 <ipv4_confirm+0x60>
    0.00 :   892e:   cmp    $0x4,%ecx
    0.00 :   8931:   je     897a <ipv4_confirm+0x6a>
    0.00 :   8933:   cmpb   $0x4,(%rdx)
    0.00 :   8936:   je     8963 <ipv4_confirm+0x53>
    0.00 :   8938:   movzwl 0xb8(%rdi),%eax
    0.00 :   893f:   add    0xc8(%rdi),%rax
    0.00 :   8946:   mov    %rax,%rdx
    0.00 :   8949:   movzbl (%rax),%eax
    0.00 :   894c:   sub    0xd0(%rdi),%rdx
    0.00 :   8953:   and    $0xf,%eax
    0.00 :   8956:   lea    (%rdx,%rax,4),%eax
   12.26 :   8959:   mov    %rsi,%rdx // [nf_conntrack][8959]
    0.00 :   895c:   mov    %eax,%esi
    0.00 :   895e:   jmp    87f0 <nf_confirm>
    8.70 :   8963:   mov    0x10(%rdx),%rax // [nf_conntrack][8963]
    0.00 :   8967:   testb  $0x4,0xca(%rax)
    0.00 :   896e:   je     8938 <ipv4_confirm+0x28>
    0.00 :   8970:   mov    $0x1,%eax
    0.00 :   8975:   jmp    897a <ipv4_confirm+0x6a>
    0.00 :   897a:   sub    $0x8,%rsp
    0.00 :   897e:   mov    0x80(%rsi),%rax
    0.00 :   8985:   test   $0x8,%al
    0.00 :   8987:   je     89b1 <ipv4_confirm+0xa1>
    0.00 :   8989:   mov    0xb0(%rsi),%rax
    0.00 :   8990:   test   %rax,%rax
    0.00 :   8993:   je     89a3 <ipv4_confirm+0x93>
    0.00 :   8995:   cmpb   $0x0,0x4(%rax)
    0.00 :   8999:   je     89a3 <ipv4_confirm+0x93>
    0.00 :   899b:   mov    %rsi,%rdi
    0.00 :   899e:   call   89a3 <ipv4_confirm+0x93>
    0.00 :   89a3:   mov    $0x1,%eax
    0.00 :   89a8:   add    $0x8,%rsp
    0.00 :   89ac:   jmp    89b1 <ipv4_confirm+0xa1>
    0.00 :   89b1:   mov    %rdi,(%rsp)
    0.00 :   89b5:   call   89ba <ipv4_confirm+0xaa>
    0.00 :   89ba:   mov    (%rsp),%rdi
    0.00 :   89be:   cmp    $0x1,%eax
    0.00 :   89c1:   jne    89a8 <ipv4_confirm+0x98>
    0.00 :   89c3:   mov    0x68(%rdi),%rsi
    0.00 :   89c7:   and    $0xfffffffffffffff8,%rsi
    0.00 :   89cb:   jmp    8989 <ipv4_confirm+0x79>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   41.28 libpq.so.private14-5.14[178b0]
   15.01 libpq.so.private14-5.14[178be]
   10.08 libpq.so.private14-5.14[178b6]
    9.26 libpq.so.private14-5.14[1797b]
    7.61 libpq.so.private14-5.14[17984]
    6.94 libpq.so.private14-5.14[1797f]
    5.12 libpq.so.private14-5.14[17944]
    4.70 libpq.so.private14-5.14[178c7]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (11 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000178b0 <PQclear@@Base>:
   41.28 :   178b0:  endbr64 // libpq.so.private14-5.14[178b0]
    0.00 :   178b4:  push   %r13
   10.08 :   178b6:  push   %r12 // libpq.so.private14-5.14[178b6]
    0.00 :   178b8:  push   %rbp
    0.00 :   178b9:  push   %rbx
    0.00 :   178ba:  sub    $0x18,%rsp
   15.01 :   178be:  mov    %fs:0x28,%rax // libpq.so.private14-5.14[178be]
    4.70 :   178c7:  mov    %rax,0x8(%rsp) // libpq.so.private14-5.14[178c7]
    0.00 :   178cc:  xor    %eax,%eax
    0.00 :   178ce:  test   %rdi,%rdi
    0.00 :   178d1:  je     179b0 <PQclear@@Base+0x100>
    0.00 :   178d7:  mov    0x98(%rdi),%eax
    0.00 :   178dd:  mov    %rdi,%rbx
    0.00 :   178e0:  xor    %r12d,%r12d
    0.00 :   178e3:  mov    %rsp,%r13
    0.00 :   178e6:  test   %eax,%eax
    0.00 :   178e8:  jle    1793d <PQclear@@Base+0x8d>
    0.00 :   178ea:  nopw   0x0(%rax,%rax,1)
    0.00 :   178f0:  movslq %r12d,%rax
    0.00 :   178f3:  lea    (%rax,%rax,4),%rbp
    0.00 :   178f7:  mov    0x90(%rbx),%rax
    0.00 :   178fe:  shl    $0x3,%rbp
    0.00 :   17902:  add    %rbp,%rax
    0.00 :   17905:  cmpb   $0x0,0x20(%rax)
    0.00 :   17909:  je     17927 <PQclear@@Base+0x77>
    0.00 :   1790b:  mov    %rbx,(%rsp)
    0.00 :   1790f:  mov    0x10(%rax),%rdx
    0.00 :   17913:  mov    %r13,%rsi
    0.00 :   17916:  mov    $0x5,%edi
    0.00 :   1791b:  call   *(%rax)
    0.00 :   1791d:  mov    0x90(%rbx),%rax
    0.00 :   17924:  add    %rbp,%rax
    0.00 :   17927:  mov    0x8(%rax),%rdi
    0.00 :   1792b:  add    $0x1,%r12d
    0.00 :   1792f:  call   cb30 <free@plt>
    0.00 :   17934:  cmp    0x98(%rbx),%r12d
    0.00 :   1793b:  jl     178f0 <PQclear@@Base+0x40>
    0.00 :   1793d:  mov    0x90(%rbx),%rdi
    5.12 :   17944:  test   %rdi,%rdi // libpq.so.private14-5.14[17944]
    0.00 :   17947:  je     1794e <PQclear@@Base+0x9e>
    0.00 :   17949:  call   cb30 <free@plt>
    0.00 :   1794e:  mov    0xc0(%rbx),%rdi
    0.00 :   17955:  test   %rdi,%rdi
    0.00 :   17958:  je     1797b <PQclear@@Base+0xcb>
    0.00 :   1795a:  nopw   0x0(%rax,%rax,1)
    0.00 :   17960:  mov    (%rdi),%rax
    0.00 :   17963:  mov    %rax,0xc0(%rbx)
    0.00 :   1796a:  call   cb30 <free@plt>
    0.00 :   1796f:  mov    0xc0(%rbx),%rdi
    0.00 :   17976:  test   %rdi,%rdi
    0.00 :   17979:  jne    17960 <PQclear@@Base+0xb0>
    9.26 :   1797b:  mov    0x10(%rbx),%rdi // libpq.so.private14-5.14[1797b]
    6.94 :   1797f:  test   %rdi,%rdi // libpq.so.private14-5.14[1797f]
    0.00 :   17982:  je     17989 <PQclear@@Base+0xd9>
    7.61 :   17984:  call   cb30 <free@plt> // libpq.so.private14-5.14[17984]
    0.00 :   17989:  mov    0x8(%rsp),%rax
    0.00 :   1798e:  sub    %fs:0x28,%rax
    0.00 :   17997:  jne    179cb <PQclear@@Base+0x11b>
    0.00 :   17999:  add    $0x18,%rsp
    0.00 :   1799d:  mov    %rbx,%rdi
    0.00 :   179a0:  pop    %rbx
    0.00 :   179a1:  pop    %rbp
    0.00 :   179a2:  pop    %r12
    0.00 :   179a4:  pop    %r13
    0.00 :   179a6:  jmp    cb30 <free@plt>
    0.00 :   179ab:  nopl   0x0(%rax,%rax,1)
    0.00 :   179b0:  mov    0x8(%rsp),%rax
    0.00 :   179b5:  sub    %fs:0x28,%rax
    0.00 :   179be:  jne    179cb <PQclear@@Base+0x11b>
    0.00 :   179c0:  add    $0x18,%rsp
    0.00 :   179c4:  pop    %rbx
    0.00 :   179c5:  pop    %rbp
    0.00 :   179c6:  pop    %r12
    0.00 :   179c8:  pop    %r13
    0.00 :   179ca:  ret
    0.00 :   179cb:  call   ca70 <__stack_chk_fail@plt>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   57.71 [nf_conntrack][6b0]
   34.05 [nf_conntrack][734]
   13.38 [nf_conntrack][829]
   13.38 [nf_conntrack][828]
   13.18 [nf_conntrack][6dc]
   13.18 [nf_conntrack][6da]
   10.91 [nf_conntrack][77e]
   10.91 [nf_conntrack][77d]
    9.73 [nf_conntrack][897]
    9.73 [nf_conntrack][893]
    6.92 [nf_conntrack][7a1]
    6.92 [nf_conntrack][7a0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (10 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000006b0 <nf_ct_get_tuple>:
         : 6   nf_ct_get_tuple():
   28.85 :   6b0:    call   6b5 <nf_ct_get_tuple+0x5> // [nf_conntrack][6b0]
    0.00 :   6b5:    push   %r13
    0.00 :   6b7:    mov    %ecx,%r13d
    0.00 :   6ba:    push   %r12
    0.00 :   6bc:    mov    %edx,%r12d
    0.00 :   6bf:    push   %rbp
    0.00 :   6c0:    push   %rbx
    0.00 :   6c1:    sub    $0x40,%rsp
    0.00 :   6c5:    movq   $0x0,0x20(%rsp)
    0.00 :   6ce:    mov    0x68(%rsp),%rbx
    0.00 :   6d3:    movq   $0x0,0x28(%rsp)
   13.18 :   6dc:    movq   $0x0,0x10(%rbx) // [nf_conntrack][6dc]
    0.00 :   6e4:    movq   $0x0,0x30(%rsp)
    0.00 :   6ed:    movq   $0x0,0x38(%rsp)
    0.00 :   6f6:    movq   $0x0,(%rbx)
    0.00 :   6fd:    movq   $0x0,0x8(%rbx)
    0.00 :   705:    movq   $0x0,0x18(%rbx)
    0.00 :   70d:    movq   $0x0,0x20(%rbx)
    0.00 :   715:    mov    %cx,0x12(%rbx)
    0.00 :   719:    cmp    $0x2,%cx
    0.00 :   71d:    je     829 <nf_ct_get_tuple+0x179>
    0.00 :   723:    cmp    $0xa,%cx
    0.00 :   727:    jne    78d <nf_ct_get_tuple+0xdd>
    0.00 :   729:    add    $0x8,%esi
    0.00 :   72c:    mov    $0x20,%ecx
    0.00 :   731:    mov    0x70(%rdi),%eax
   17.03 :   734:    sub    0x74(%rdi),%eax // [nf_conntrack][734]
    0.00 :   737:    sub    %esi,%eax
    0.00 :   739:    mov    0xd0(%rdi),%rdx
    0.00 :   740:    cmp    %ecx,%eax
    0.00 :   742:    jl     8cf <nf_ct_get_tuple+0x21f>
    0.00 :   748:    movslq %esi,%rsi
    0.00 :   74b:    add    %rsi,%rdx
    0.00 :   74e:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   754:    cmp    $0x2,%r13w
    0.00 :   759:    je     885 <nf_ct_get_tuple+0x1d5>
    0.00 :   75f:    cmp    $0xa,%r13w
    0.00 :   764:    je     836 <nf_ct_get_tuple+0x186>
    0.00 :   76a:    mov    %r8b,0x26(%rbx)
    0.00 :   76e:    movb   $0x0,0x27(%rbx)
    0.00 :   772:    cmp    $0x2f,%r8b
    0.00 :   776:    je     8a1 <nf_ct_get_tuple+0x1f1>
    0.00 :   77c:    ja     7ea <nf_ct_get_tuple+0x13a>
   10.91 :   77e:    cmp    $0x1,%r8b // [nf_conntrack][77e]
    0.00 :   782:    je     868 <nf_ct_get_tuple+0x1b8>
    0.00 :   788:    test   %r8b,%r8b
    0.00 :   78b:    jne    7a1 <nf_ct_get_tuple+0xf1>
    0.00 :   78d:    add    $0x40,%rsp
    0.00 :   791:    mov    $0x1,%eax
    0.00 :   796:    pop    %rbx
    0.00 :   797:    pop    %rbp
    0.00 :   798:    pop    %r12
    0.00 :   79a:    pop    %r13
    0.00 :   79c:    jmp    7a1 <nf_ct_get_tuple+0xf1>
    6.92 :   7a1:    lea    -0x11(%r8),%eax // [nf_conntrack][7a1]
    0.00 :   7a5:    test   $0xef,%al
    0.00 :   7a7:    je     7af <nf_ct_get_tuple+0xff>
    0.00 :   7a9:    cmp    $0x6,%r8b
    0.00 :   7ad:    jne    78d <nf_ct_get_tuple+0xdd>
    0.00 :   7af:    mov    0x70(%rdi),%eax
    0.00 :   7b2:    sub    0x74(%rdi),%eax
    0.00 :   7b5:    movl   $0x0,0x1c(%rsp)
    0.00 :   7bd:    sub    %r12d,%eax
    0.00 :   7c0:    mov    0xd0(%rdi),%rdx
    0.00 :   7c7:    cmp    $0x3,%eax
    0.00 :   7ca:    jle    90a <nf_ct_get_tuple+0x25a>
    0.00 :   7d0:    add    %r12,%rdx
    0.00 :   7d3:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   7d9:    movzwl (%rdx),%eax
    0.00 :   7dc:    mov    %ax,0x10(%rbx)
    0.00 :   7e0:    movzwl 0x2(%rdx),%eax
    0.00 :   7e4:    mov    %ax,0x24(%rbx)
    0.00 :   7e8:    jmp    78d <nf_ct_get_tuple+0xdd>
    0.00 :   7ea:    cmp    $0x3a,%r8b
    0.00 :   7ee:    jne    80d <nf_ct_get_tuple+0x15d>
    0.00 :   7f0:    mov    %rbx,%rcx
    0.00 :   7f3:    mov    %r12d,%esi
    0.00 :   7f6:    mov    %r9,%rdx
    0.00 :   7f9:    call   7fe <nf_ct_get_tuple+0x14e>
    0.00 :   7fe:    add    $0x40,%rsp
    0.00 :   802:    pop    %rbx
    0.00 :   803:    pop    %rbp
    0.00 :   804:    pop    %r12
    0.00 :   806:    pop    %r13
    0.00 :   808:    jmp    80d <nf_ct_get_tuple+0x15d>
    0.00 :   80d:    cmp    $0x39,%r8b
    0.00 :   811:    jbe    78d <nf_ct_get_tuple+0xdd>
    0.00 :   817:    lea    0x7c(%r8),%ebp
    0.00 :   81b:    and    $0xfb,%ebp
    0.00 :   821:    jne    78d <nf_ct_get_tuple+0xdd>
    0.00 :   827:    jmp    7af <nf_ct_get_tuple+0xff>
   13.38 :   829:    add    $0xc,%esi // [nf_conntrack][829]
    0.00 :   82c:    mov    $0x8,%ecx
    0.00 :   831:    jmp    731 <nf_ct_get_tuple+0x81>
    0.00 :   836:    mov    (%rdx),%rax
    0.00 :   839:    mov    %rax,(%rbx)
    0.00 :   83c:    mov    0x8(%rdx),%rax
    0.00 :   840:    mov    %rax,0x8(%rbx)
    0.00 :   844:    mov    0x10(%rdx),%rax
    0.00 :   848:    mov    %rax,0x14(%rbx)
    0.00 :   84c:    mov    0x18(%rdx),%rax
    0.00 :   850:    mov    %r8b,0x26(%rbx)
    0.00 :   854:    mov    %rax,0x1c(%rbx)
    0.00 :   858:    movb   $0x0,0x27(%rbx)
    0.00 :   85c:    cmp    $0x2f,%r8b
    0.00 :   860:    jne    77c <nf_ct_get_tuple+0xcc>
    0.00 :   866:    jmp    8a1 <nf_ct_get_tuple+0x1f1>
    0.00 :   868:    mov    %rbx,%rcx
    0.00 :   86b:    mov    %r12d,%esi
    0.00 :   86e:    mov    %r9,%rdx
    0.00 :   871:    call   876 <nf_ct_get_tuple+0x1c6>
    0.00 :   876:    add    $0x40,%rsp
    0.00 :   87a:    pop    %rbx
    0.00 :   87b:    pop    %rbp
    0.00 :   87c:    pop    %r12
    0.00 :   87e:    pop    %r13
    0.00 :   880:    jmp    885 <nf_ct_get_tuple+0x1d5>
    0.00 :   885:    mov    (%rdx),%eax
    0.00 :   887:    mov    %eax,(%rbx)
    0.00 :   889:    mov    0x4(%rdx),%eax
    0.00 :   88c:    mov    %r8b,0x26(%rbx)
    0.00 :   890:    mov    %eax,0x14(%rbx)
    0.00 :   893:    movb   $0x0,0x27(%rbx)
    9.73 :   897:    cmp    $0x2f,%r8b // [nf_conntrack][897]
    0.00 :   89b:    jne    77c <nf_ct_get_tuple+0xcc>
    0.00 :   8a1:    mov    %rbx,%rcx
    0.00 :   8a4:    mov    %r12d,%esi
    0.00 :   8a7:    mov    %r9,%rdx
    0.00 :   8aa:    call   8af <nf_ct_get_tuple+0x1ff>
    0.00 :   8af:    add    $0x40,%rsp
    0.00 :   8b3:    pop    %rbx
    0.00 :   8b4:    pop    %rbp
    0.00 :   8b5:    pop    %r12
    0.00 :   8b7:    pop    %r13
    0.00 :   8b9:    jmp    8be <nf_ct_get_tuple+0x20e>
    0.00 :   8be:    add    $0x40,%rsp
    0.00 :   8c2:    xor    %eax,%eax
    0.00 :   8c4:    pop    %rbx
    0.00 :   8c5:    pop    %rbp
    0.00 :   8c6:    pop    %r12
    0.00 :   8c8:    pop    %r13
    0.00 :   8ca:    jmp    8cf <nf_ct_get_tuple+0x21f>
    0.00 :   8cf:    mov    %r9,0x8(%rsp)
    0.00 :   8d4:    mov    %r8d,0x4(%rsp)
    0.00 :   8d9:    test   %rdi,%rdi
    0.00 :   8dc:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   8de:    lea    0x20(%rsp),%rdx
    0.00 :   8e3:    mov    %rdi,0x10(%rsp)
    0.00 :   8e8:    call   8ed <nf_ct_get_tuple+0x23d>
    0.00 :   8ed:    test   %eax,%eax
    0.00 :   8ef:    js     8be <nf_ct_get_tuple+0x20e>
    0.00 :   8f1:    mov    0x8(%rsp),%r9
    0.00 :   8f6:    mov    0x4(%rsp),%r8d
    0.00 :   8fb:    lea    0x20(%rsp),%rdx
    0.00 :   900:    mov    0x10(%rsp),%rdi
    0.00 :   905:    jmp    754 <nf_ct_get_tuple+0xa4>
    0.00 :   90a:    test   %rdi,%rdi
    0.00 :   90d:    je     8be <nf_ct_get_tuple+0x20e>
    0.00 :   90f:    mov    $0x4,%ecx
    0.00 :   914:    lea    0x1c(%rsp),%rdx
    0.00 :   919:    mov    %r12d,%esi
    0.00 :   91c:    call   921 <nf_ct_get_tuple+0x271>
    0.00 :   921:    test   %eax,%eax
    0.00 :   923:    js     8be <nf_ct_get_tuple+0x20e>
    0.00 :   925:    lea    0x1c(%rsp),%rdx
    0.00 :   92a:    jmp    7d9 <nf_ct_get_tuple+0x129>
         :
         : 174 Disassembly of section .text.unlikely:
         :
         : 176 00000000000006b0 <nf_conntrack_tcp_packet.cold+0x66>:
         : 177 nf_conntrack_tcp_packet.cold():
   28.85 :   6b0:    je     6d6 <nf_conntrack_tcp_packet.cold+0x8c> // [nf_conntrack][6b0]
    0.00 :   6b2:    adc    %cl,-0x39(%rcx)
    0.00 :   6b5:    rolb   $0x0,(%rax)
    0.00 :   6b8:    add    %al,(%rax)
    0.00 :   6ba:    mov    $0x6,%edx
    0.00 :   6bf:    mov    %r13,%rdi
    0.00 :   6c2:    mov    $0x0,%rcx
    0.00 :   6c9:    call   6ce <nf_conntrack_tcp_packet.cold+0x84>
    0.00 :   6ce:    jmp    6d3 <nf_conntrack_tcp_packet.cold+0x89>
    0.00 :   6d3:    mov    0x80(%rbx),%rax
   13.18 :   6da:    test   $0x4,%ah // [nf_conntrack][6da]
    0.00 :   6dd:    jne    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   6df:    mov    0x1c(%rsp),%eax
    0.00 :   6e3:    sub    $0x2,%eax
    0.00 :   6e6:    and    $0xfffffffd,%eax
    0.00 :   6e9:    jne    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   6eb:    movzbl 0xe1(%rbx),%eax
    0.00 :   6f2:    cmp    %eax,0x24(%rsp)
    0.00 :   6f6:    je     772 <nf_conntrack_tcp_packet.cold+0x128>
    0.00 :   6f8:    movzbl 0xe3(%rbx),%edx
    0.00 :   6ff:    lea    -0x2(%rdx),%eax
    0.00 :   702:    test   $0xfd,%al
    0.00 :   704:    jne    772 <nf_conntrack_tcp_packet.cold+0x128>
    0.00 :   706:    mov    0x8(%rbx),%eax
    0.00 :   709:    mov    0x0(%rip),%rcx        # 710 <nf_conntrack_tcp_packet.cold+0xc6>
    0.00 :   710:    sub    %ecx,%eax
    0.00 :   712:    mov    $0x0,%ecx
    0.00 :   717:    cmovns %eax,%ecx
    0.00 :   71a:    cmp    $0x1d4bf,%eax
    0.00 :   71f:    jle    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   725:    mov    0x88(%rbx),%rax
    0.00 :   72c:    mov    0xb88(%rax),%ebp
    0.00 :   732:    cmp    %ecx,%ebp
   17.03 :   734:    jae    69f <nf_conntrack_tcp_packet.cold+0x55> // [nf_conntrack][734]
    0.00 :   73a:    push   %rbp
    0.00 :   73b:    mov    $0x0,%rcx
    0.00 :   742:    mov    %rbx,%rsi
    0.00 :   745:    mov    %r13,%rdi
    0.00 :   748:    push   %rdx
    0.00 :   749:    mov    0x34(%rsp),%r9d
    0.00 :   74e:    mov    0x2c(%rsp),%r8d
    0.00 :   753:    mov    0x20(%rsp),%rdx
    0.00 :   758:    call   75d <nf_conntrack_tcp_packet.cold+0x113>
    0.00 :   75d:    mov    0x0(%rip),%rax        # 764 <nf_conntrack_tcp_packet.cold+0x11a>
    0.00 :   764:    add    %eax,%ebp
    0.00 :   766:    mov    %ebp,0x8(%rbx)
    0.00 :   769:    pop    %r9
    0.00 :   76b:    pop    %r10
    0.00 :   76d:    jmp    69f <nf_conntrack_tcp_packet.cold+0x55>
    0.00 :   772:    movzbl 0x1c(%rsp),%eax
    0.00 :   777:    mov    %al,0xe3(%rbx)
   10.91 :   77d:    movzbl 0x5d(%rsp),%eax // [nf_conntrack][77d]
    0.00 :   782:    mov    %al,0xe1(%rbx)
    0.00 :   788:    jmp    69f <nf_conntrack_tcp_packet.cold+0x55>
         :
         : 233 000000000000078d <nf_conntrack_udp_packet.cold>:
         : 234 nf_conntrack_udp_packet.cold():
    0.00 :   78d:    mov    $0x0,%r8
    0.00 :   794:    mov    $0x0,%rcx
    0.00 :   79b:    mov    $0x11,%edx
    6.92 :   7a0:    mov    %r13,%rsi // [nf_conntrack][7a0]
    0.00 :   7a3:    mov    %rbp,%rdi
    0.00 :   7a6:    call   7ab <nf_conntrack_udp_packet.cold+0x1e>
    0.00 :   7ab:    or     $0xffffffff,%eax
    0.00 :   7ae:    jmp    7b3 <nf_conntrack_udp_packet.cold+0x26>
    0.00 :   7b3:    mov    $0x0,%r8
    0.00 :   7ba:    jmp    794 <nf_conntrack_udp_packet.cold+0x7>
    0.00 :   7bc:    mov    $0x0,%r8
    0.00 :   7c3:    jmp    794 <nf_conntrack_udp_packet.cold+0x7>
         :
         : 248 00000000000007c5 <nf_conntrack_udplite_packet.cold>:
         : 249 nf_conntrack_udplite_packet.cold():
    0.00 :   7c5:    mov    $0x0,%r8
    0.00 :   7cc:    mov    $0x0,%rcx
    0.00 :   7d3:    mov    $0x88,%edx
    0.00 :   7d8:    mov    %r12,%rsi
    0.00 :   7db:    mov    %rbp,%rdi
    0.00 :   7de:    call   7e3 <nf_conntrack_udplite_packet.cold+0x1e>
    0.00 :   7e3:    or     $0xffffffff,%eax
    0.00 :   7e6:    jmp    7eb <nf_conntrack_udplite_packet.cold+0x26>
    0.00 :   7eb:    mov    $0x0,%r8
    0.00 :   7f2:    jmp    7cc <nf_conntrack_udplite_packet.cold+0x7>
    0.00 :   7f4:    mov    $0x0,%r8
    0.00 :   7fb:    jmp    7cc <nf_conntrack_udplite_packet.cold+0x7>
    0.00 :   7fd:    mov    $0x0,%r8
    0.00 :   804:    jmp    7cc <nf_conntrack_udplite_packet.cold+0x7>
         :
         : 265 0000000000000806 <nf_conntrack_inet_error.cold>:
         : 266 nf_conntrack_inet_error.cold():
    0.00 :   806:    movzbl %r13b,%edx
    0.00 :   80a:    mov    %r12,%r8
    0.00 :   80d:    mov    %rbp,%rsi
    0.00 :   810:    mov    %rbx,%rdi
    0.00 :   813:    mov    $0x0,%rcx
    0.00 :   81a:    call   81f <nf_conntrack_inet_error.cold+0x19>
    0.00 :   81f:    jmp    824 <nf_conntrack_inet_error.cold+0x1e>
    0.00 :   824:    movzbl %r13b,%edx
   13.38 :   828:    mov    %r12,%r8 // [nf_conntrack][828]
    0.00 :   82b:    mov    %rbp,%rsi
    0.00 :   82e:    mov    %rbx,%rdi
    0.00 :   831:    mov    $0x0,%rcx
    0.00 :   838:    call   83d <nf_conntrack_inet_error.cold+0x37>
    0.00 :   83d:    jmp    842 <nf_conntrack_icmpv4_error.cold>
         :
         : 282 0000000000000842 <nf_conntrack_icmpv4_error.cold>:
         : 283 nf_conntrack_icmpv4_error.cold():
    0.00 :   842:    mov    $0x0,%r8
    0.00 :   849:    mov    $0x0,%rcx
    0.00 :   850:    mov    $0x1,%edx
    0.00 :   855:    mov    %r13,%rsi
    0.00 :   858:    mov    %rbx,%rdi
    0.00 :   85b:    call   860 <nf_conntrack_icmpv4_error.cold+0x1e>
    0.00 :   860:    or     $0xffffffff,%eax
    0.00 :   863:    jmp    868 <nf_conntrack_icmpv4_error.cold+0x26>
    0.00 :   868:    mov    $0x0,%r8
    0.00 :   86f:    jmp    849 <nf_conntrack_icmpv4_error.cold+0x7>
    0.00 :   871:    mov    $0x0,%r8
    0.00 :   878:    jmp    849 <nf_conntrack_icmpv4_error.cold+0x7>
         :
         : 297 000000000000087a <icmpv6_error_log>:
         : 298 icmpv6_error_log():
    0.00 :   87a:    call   87f <icmpv6_error_log+0x5>
    0.00 :   87f:    mov    %rdx,%r8
    0.00 :   882:    mov    $0x0,%rcx
    0.00 :   889:    mov    $0x3a,%edx
    0.00 :   88e:    jmp    893 <nf_conntrack_icmpv6_redirect.cold>
         :
         : 305 0000000000000893 <nf_conntrack_icmpv6_redirect.cold>:
         : 306 nf_conntrack_icmpv6_redirect.cold():
    9.73 :   893:    mov    $0x0,%rdx // [nf_conntrack][893]
    0.00 :   89a:    mov    %r13,%rsi
    0.00 :   89d:    mov    %rbx,%rdi
    0.00 :   8a0:    call   87a <icmpv6_error_log>
    0.00 :   8a5:    or     $0xffffffff,%eax
    0.00 :   8a8:    jmp    8ad <nf_conntrack_icmpv6_redirect.cold+0x1a>
    0.00 :   8ad:    mov    $0x0,%rdx
    0.00 :   8b4:    mov    %r13,%rsi
    0.00 :   8b7:    mov    %rbx,%rdi
    0.00 :   8ba:    call   87a <icmpv6_error_log>
    0.00 :   8bf:    jmp    8a5 <nf_conntrack_icmpv6_redirect.cold+0x12>
    0.00 :   8c1:    mov    $0x0,%rdx
    0.00 :   8c8:    mov    %r13,%rsi
    0.00 :   8cb:    mov    %rbx,%rdi
    0.00 :   8ce:    call   87a <icmpv6_error_log>
    0.00 :   8d3:    jmp    8a5 <nf_conntrack_icmpv6_redirect.cold+0x12>
         :
         : 324 00000000000008d5 <nf_conntrack_icmpv6_error.cold>:
         : 325 nf_conntrack_icmpv6_error.cold():
    0.00 :   8d5:    mov    $0x0,%rdx
    0.00 :   8dc:    mov    %r13,%rsi
    0.00 :   8df:    mov    %rbx,%rdi
    0.00 :   8e2:    call   87a <icmpv6_error_log>
    0.00 :   8e7:    or     $0xffffffff,%eax
    0.00 :   8ea:    jmp    8ef <nf_conntrack_icmpv6_error.cold+0x1a>
    0.00 :   8ef:    mov    $0x0,%rdx
    0.00 :   8f6:    mov    %r13,%rsi
    0.00 :   8f9:    mov    %rbx,%rdi
    0.00 :   8fc:    call   87a <icmpv6_error_log>
    0.00 :   901:    jmp    8e7 <nf_conntrack_icmpv6_error.cold+0x12>
         :
         : 338 0000000000000903 <dccp_new.cold>:
         : 339 dccp_new.cold():
    0.00 :   903:    mov    $0x0,%r8
    0.00 :   90a:    mov    %rax,%rsi
    0.00 :   90d:    mov    $0x0,%rcx
    0.00 :   914:    call   919 <dccp_new.cold+0x16>
    0.00 :   919:    xor    %eax,%eax
    0.00 :   91b:    jmp    920 <dccp_new.cold+0x1d>
    0.00 :   920:    mov    $0x0,%r8
    0.00 :   927:    jmp    90a <dccp_new.cold+0x7>
         :
         : 349 0000000000000929 <nf_conntrack_dccp_packet.cold>:
         : 350 nf_conntrack_dccp_packet.cold():
    0.00 :   929:    rex.WB
    0.00 :   92a:    .byte 0xc7
    0.00 :   92b:    rolb   $0x0,(%rax)
         : 354 ...

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   23.34 [nf_conntrack][87f7]
   16.65 [nf_conntrack][87f0]
   12.88 [nf_conntrack][8861]
    9.65 [nf_conntrack][8896]
    8.57 [nf_conntrack][87ff]
    8.18 [nf_conntrack][87f5]
    8.06 [nf_conntrack][8881]
    6.56 [nf_conntrack][8800]
    6.11 [nf_conntrack][888b]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (11 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000087f0 <nf_confirm>:
         : 6    nf_confirm():
   16.65 :   87f0:   call   87f5 <nf_confirm+0x5> // [nf_conntrack][87f0]
    8.18 :   87f5:   push   %r13 // [nf_conntrack][87f5]
   23.34 :   87f7:   mov    %esi,%r13d // [nf_conntrack][87f7]
    0.00 :   87fa:   push   %r12
    0.00 :   87fc:   mov    %ecx,%r12d
    8.57 :   87ff:   push   %rbp // [nf_conntrack][87ff]
    6.56 :   8800:   mov    %rdi,%rbp // [nf_conntrack][8800]
    0.00 :   8803:   push   %rbx
    0.00 :   8804:   mov    0xb0(%rdx),%rdi
    0.00 :   880b:   mov    %rdx,%rbx
    0.00 :   880e:   test   %rdi,%rdi
    0.00 :   8811:   je     885a <nf_confirm+0x6a>
    0.00 :   8813:   movzbl (%rdi),%eax
    0.00 :   8816:   test   %al,%al
    0.00 :   8818:   je     885a <nf_confirm+0x6a>
    0.00 :   881a:   mov    0xc(%rdi),%ecx
    0.00 :   881d:   add    %rdi,%rax
    0.00 :   8820:   test   %ecx,%ecx
    0.00 :   8822:   jne    8903 <nf_confirm+0x113>
    0.00 :   8828:   test   %rax,%rax
    0.00 :   882b:   je     885a <nf_confirm+0x6a>
    0.00 :   882d:   mov    (%rax),%rax
    0.00 :   8830:   test   %rax,%rax
    0.00 :   8833:   je     885a <nf_confirm+0x6a>
    0.00 :   8835:   mov    0x60(%rax),%rax
    0.00 :   8839:   mov    %r12d,%ecx
    0.00 :   883c:   mov    %rbx,%rdx
    0.00 :   883f:   mov    %r13d,%esi
    0.00 :   8842:   mov    %rbp,%rdi
    0.00 :   8845:   call   884a <nf_confirm+0x5a>
    0.00 :   884a:   cmp    $0x1,%eax
    0.00 :   884d:   je     885a <nf_confirm+0x6a>
    0.00 :   884f:   pop    %rbx
    0.00 :   8850:   pop    %rbp
    0.00 :   8851:   pop    %r12
    0.00 :   8853:   pop    %r13
    0.00 :   8855:   jmp    885a <nf_confirm+0x6a>
    0.00 :   885a:   mov    0x80(%rbx),%rax
   12.88 :   8861:   test   $0x40,%al // [nf_conntrack][8861]
    0.00 :   8863:   je     8881 <nf_confirm+0x91>
    0.00 :   8865:   mov    0x10(%rbp),%rax
    0.00 :   8869:   test   %rax,%rax
    0.00 :   886c:   je     88ba <nf_confirm+0xca>
    0.00 :   886e:   mov    0x90(%rbp),%edx
    0.00 :   8874:   test   %edx,%edx
    0.00 :   8876:   je     88ba <nf_confirm+0xca>
    0.00 :   8878:   testb  $0x8,0xc0(%rax)
    0.00 :   887f:   je     88ba <nf_confirm+0xca>
    8.06 :   8881:   mov    0x68(%rbp),%rdi // [nf_conntrack][8881]
    0.00 :   8885:   cmp    $0x7,%rdi
    0.00 :   8889:   ja     8892 <nf_confirm+0xa2>
    6.11 :   888b:   mov    $0x1,%eax // [nf_conntrack][888b]
    0.00 :   8890:   jmp    884f <nf_confirm+0x5f>
    0.00 :   8892:   and    $0xfffffffffffffff8,%rdi
    9.65 :   8896:   mov    0x80(%rdi),%rax // [nf_conntrack][8896]
    0.00 :   889d:   test   $0x8,%al
    0.00 :   889f:   je     88e8 <nf_confirm+0xf8>
    0.00 :   88a1:   mov    0xb0(%rdi),%rax
    0.00 :   88a8:   test   %rax,%rax
    0.00 :   88ab:   je     888b <nf_confirm+0x9b>
    0.00 :   88ad:   cmpb   $0x0,0x4(%rax)
    0.00 :   88b1:   je     888b <nf_confirm+0x9b>
    0.00 :   88b3:   call   88b8 <nf_confirm+0xc8>
    0.00 :   88b8:   jmp    888b <nf_confirm+0x9b>
    0.00 :   88ba:   mov    %r13d,%ecx
    0.00 :   88bd:   mov    %r12d,%edx
    0.00 :   88c0:   mov    %rbx,%rsi
    0.00 :   88c3:   mov    %rbp,%rdi
    0.00 :   88c6:   call   88cb <nf_confirm+0xdb>
    0.00 :   88cb:   test   %eax,%eax
    0.00 :   88cd:   jne    8881 <nf_confirm+0x91>
    0.00 :   88cf:   mov    0x88(%rbx),%rax
    0.00 :   88d6:   mov    0xb40(%rax),%rax
    0.00 :   88dd:   incl   %gs:0x14(%rax)
    0.00 :   88e1:   xor    %eax,%eax
    0.00 :   88e3:   jmp    884f <nf_confirm+0x5f>
    0.00 :   88e8:   mov    %rbp,%rdi
    0.00 :   88eb:   call   88f0 <nf_confirm+0x100>
    0.00 :   88f0:   cmp    $0x1,%eax
    0.00 :   88f3:   jne    884f <nf_confirm+0x5f>
    0.00 :   88f9:   mov    0x68(%rbp),%rdi
    0.00 :   88fd:   and    $0xfffffffffffffff8,%rdi
    0.00 :   8901:   jmp    88a1 <nf_confirm+0xb1>
    0.00 :   8903:   xor    %esi,%esi
    0.00 :   8905:   call   890a <nf_confirm+0x11a>
    0.00 :   890a:   jmp    8828 <nf_confirm+0x38>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   47.65 libc.so.6[b45c5]
   26.25 libc.so.6[b45f7]
   10.67 libc.so.6[b45f3]
    9.23 libc.so.6[b4590]
    6.20 libc.so.6[b4607]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (9 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000b4590 <wcsrtombs>:
         : 6     __wcsrtombs():
    9.23 :   b4590:  endbr64 // libc.so.6[b4590]
    0.00 :   b4594:  push   %r15
    0.00 :   b4596:  push   %r14
    0.00 :   b4598:  mov    %rsi,%r14
    0.00 :   b459b:  push   %r13
    0.00 :   b459d:  push   %r12
    0.00 :   b459f:  push   %rbp
    0.00 :   b45a0:  mov    %rdi,%rbp
    0.00 :   b45a3:  push   %rbx
    0.00 :   b45a4:  sub    $0x178,%rsp
    0.00 :   b45ab:  mov    %fs:0x28,%rax
    0.00 :   b45b4:  mov    %rax,0x168(%rsp)
    0.00 :   b45bc:  xor    %eax,%eax
    0.00 :   b45be:  mov    0xeca13(%rip),%rax        # 1a0fd8 <_sys_errlist_internal_len+0x8>
   47.65 :   b45c5:  test   %rcx,%rcx // libc.so.6[b45c5]
    0.00 :   b45c8:  movl   $0x1,0x48(%rsp)
    0.00 :   b45d0:  mov    %rax,0x40(%rsp)
    0.00 :   b45d5:  lea    0x125fbc(%rip),%rax        # 1da598 <state>
    0.00 :   b45dc:  cmove  %rax,%rcx
    0.00 :   b45e0:  mov    0x11e989(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
    0.00 :   b45e7:  mov    %rcx,0x50(%rsp)
    0.00 :   b45ec:  mov    %fs:(%rax),%rax
    0.00 :   b45f0:  mov    (%rax),%rdi
   10.67 :   b45f3:  mov    0x20(%rdi),%rbx // libc.so.6[b45f3]
   26.25 :   b45f7:  mov    (%rbx),%rax // libc.so.6[b45f7]
    0.00 :   b45fa:  test   %rax,%rax
    0.00 :   b45fd:  je     b47e0 <wcsrtombs+0x250>
    0.00 :   b4603:  mov    0x10(%rax),%r12
    6.20 :   b4607:  cmpq   $0x0,(%r12) // libc.so.6[b4607]
    0.00 :   b460c:  mov    0x28(%r12),%rbx
    0.00 :   b4611:  je     b4620 <wcsrtombs+0x90>
    0.00 :   b4613:  ror    $0x11,%rbx
    0.00 :   b4617:  xor    %fs:0x30,%rbx
    0.00 :   b4620:  mov    (%r14),%r13
    0.00 :   b4623:  test   %rbp,%rbp
    0.00 :   b4626:  je     b4700 <wcsrtombs+0x170>
    0.00 :   b462c:  mov    %rdx,%rsi
    0.00 :   b462f:  mov    %r13,%rdi
    0.00 :   b4632:  mov    %rdx,(%rsp)
    0.00 :   b4636:  call   26670 <*ABS*+0xb4e30@plt>
    0.00 :   b463b:  mov    (%rsp),%rdx
    0.00 :   b463f:  mov    %rbx,%rdi
    0.00 :   b4642:  mov    %rbp,0x30(%rsp)
    0.00 :   b4647:  lea    0x4(%r13,%rax,4),%r15
    0.00 :   b464c:  lea    0x0(%rbp,%rdx,1),%r13
    0.00 :   b4651:  mov    %r13,0x38(%rsp)
    0.00 :   b4656:  call   14f660 <_dl_mcount_wrapper_check>
    0.00 :   b465b:  lea    0x30(%rsp),%rsi
    0.00 :   b4660:  push   $0x1
    0.00 :   b4662:  mov    %r15,%rcx
    0.00 :   b4665:  push   $0x0
    0.00 :   b4667:  mov    %r14,%rdx
    0.00 :   b466a:  mov    %r12,%rdi
    0.00 :   b466d:  xor    %r8d,%r8d
    0.00 :   b4670:  lea    0x30(%rsp),%r9
    0.00 :   b4675:  call   *%rbx
    0.00 :   b4677:  mov    0x40(%rsp),%rcx
    0.00 :   b467c:  pop    %rsi
    0.00 :   b467d:  mov    %eax,%edx
    0.00 :   b467f:  pop    %rdi
    0.00 :   b4680:  mov    %rcx,%rax
    0.00 :   b4683:  sub    %rbp,%rax
    0.00 :   b4686:  test   $0xfffffffb,%edx
    0.00 :   b468c:  je     b46d0 <wcsrtombs+0x140>
    0.00 :   b468e:  lea    -0x6(%rdx),%ecx
    0.00 :   b4691:  cmp    $0x1,%ecx
    0.00 :   b4694:  jbe    b47ab <wcsrtombs+0x21b>
    0.00 :   b469a:  cmp    $0x5,%edx
    0.00 :   b469d:  jne    b4838 <wcsrtombs+0x2a8>
    0.00 :   b46a3:  mov    0x168(%rsp),%rdx
    0.00 :   b46ab:  sub    %fs:0x28,%rdx
    0.00 :   b46b4:  jne    b47f5 <wcsrtombs+0x265>
    0.00 :   b46ba:  add    $0x178,%rsp
    0.00 :   b46c1:  pop    %rbx
    0.00 :   b46c2:  pop    %rbp
    0.00 :   b46c3:  pop    %r12
    0.00 :   b46c5:  pop    %r13
    0.00 :   b46c7:  pop    %r14
    0.00 :   b46c9:  pop    %r15
    0.00 :   b46cb:  ret
    0.00 :   b46cc:  nopl   0x0(%rax)
    0.00 :   b46d0:  cmpb   $0x0,-0x1(%rcx)
    0.00 :   b46d4:  jne    b46a3 <wcsrtombs+0x113>
    0.00 :   b46d6:  cmp    %rbp,%rcx
    0.00 :   b46d9:  je     b4819 <wcsrtombs+0x289>
    0.00 :   b46df:  mov    0x50(%rsp),%rdx
    0.00 :   b46e4:  mov    (%rdx),%edx
    0.00 :   b46e6:  test   %edx,%edx
    0.00 :   b46e8:  jne    b47fa <wcsrtombs+0x26a>
    0.00 :   b46ee:  movq   $0x0,(%r14)
    0.00 :   b46f5:  sub    $0x1,%rax
    0.00 :   b46f9:  jmp    b46a3 <wcsrtombs+0x113>
    0.00 :   b46fb:  nopl   0x0(%rax,%rax,1)
    0.00 :   b4700:  mov    %r13,%rdi
    0.00 :   b4703:  lea    0x20(%rsp),%r14
    0.00 :   b4708:  call   26650 <*ABS*+0xb36b0@plt>
    0.00 :   b470d:  mov    %r13,0x18(%rsp)
    0.00 :   b4712:  lea    0x4(%r13,%rax,4),%r15
    0.00 :   b4717:  mov    0x50(%rsp),%rax
    0.00 :   b471c:  lea    0x60(%rsp),%r13
    0.00 :   b4721:  mov    (%rax),%rax
    0.00 :   b4724:  mov    %rax,0x28(%rsp)
    0.00 :   b4729:  lea    0x28(%rsp),%rax
    0.00 :   b472e:  mov    %rax,0x50(%rsp)
    0.00 :   b4733:  lea    0x160(%rsp),%rax
    0.00 :   b473b:  mov    %rax,0x38(%rsp)
    0.00 :   b4740:  lea    0x18(%rsp),%rax
    0.00 :   b4745:  mov    %rax,(%rsp)
    0.00 :   b4749:  lea    0x30(%rsp),%rax
    0.00 :   b474e:  mov    %rax,0x8(%rsp)
    0.00 :   b4753:  nopl   0x0(%rax,%rax,1)
    0.00 :   b4758:  mov    %rbx,%rdi
    0.00 :   b475b:  mov    %r13,0x30(%rsp)
    0.00 :   b4760:  call   14f660 <_dl_mcount_wrapper_check>
    0.00 :   b4765:  push   $0x1
    0.00 :   b4767:  mov    %r14,%r9
    0.00 :   b476a:  xor    %r8d,%r8d
    0.00 :   b476d:  push   $0x0
    0.00 :   b476f:  mov    %r15,%rcx
    0.00 :   b4772:  mov    0x10(%rsp),%rdx
    0.00 :   b4777:  mov    %r12,%rdi
    0.00 :   b477a:  mov    0x18(%rsp),%rsi
    0.00 :   b477f:  call   *%rbx
    0.00 :   b4781:  mov    0x40(%rsp),%rdx
    0.00 :   b4786:  pop    %r8
    0.00 :   b4788:  pop    %r9
    0.00 :   b478a:  mov    %rdx,%rcx
    0.00 :   b478d:  sub    %r13,%rcx
    0.00 :   b4790:  add    %rcx,%rbp
    0.00 :   b4793:  cmp    $0x5,%eax
    0.00 :   b4796:  je     b4758 <wcsrtombs+0x1c8>
    0.00 :   b4798:  test   $0xfffffffb,%eax
    0.00 :   b479d:  je     b47c8 <wcsrtombs+0x238>
    0.00 :   b479f:  sub    $0x6,%eax
    0.00 :   b47a2:  cmp    $0x1,%eax
    0.00 :   b47a5:  ja     b4838 <wcsrtombs+0x2a8>
    0.00 :   b47ab:  mov    0x11e65e(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   b47b2:  movl   $0x54,%fs:(%rax)
    0.00 :   b47b9:  mov    $0xffffffffffffffff,%rax
    0.00 :   b47c0:  jmp    b46a3 <wcsrtombs+0x113>
    0.00 :   b47c5:  nopl   (%rax)
    0.00 :   b47c8:  cmpb   $0x0,-0x1(%rdx)
    0.00 :   b47cc:  jne    b4857 <wcsrtombs+0x2c7>
    0.00 :   b47d2:  lea    -0x1(%rbp),%rax
    0.00 :   b47d6:  jmp    b46a3 <wcsrtombs+0x113>
    0.00 :   b47db:  nopl   0x0(%rax,%rax,1)
    0.00 :   b47e0:  mov    %rdx,(%rsp)
    0.00 :   b47e4:  call   c0040 <__wcsmbs_load_conv>
    0.00 :   b47e9:  mov    (%rbx),%rax
    0.00 :   b47ec:  mov    (%rsp),%rdx
    0.00 :   b47f0:  jmp    b4603 <wcsrtombs+0x73>
    0.00 :   b47f5:  call   11ba20 <__stack_chk_fail>
    0.00 :   b47fa:  lea    0xe95b7(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b4801:  mov    $0x7a,%edx
    0.00 :   b4806:  lea    0xe3b48(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b480d:  lea    0xe3b1d(%rip),%rdi        # 198331 <__nss_invalid_field_characters+0xa7>
    0.00 :   b4814:  call   35610 <__assert_fail>
    0.00 :   b4819:  lea    0xe9598(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b4820:  mov    $0x79,%edx
    0.00 :   b4825:  lea    0xe3b29(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b482c:  lea    0xe955d(%rip),%rdi        # 19dd90 <aliasfile.0+0x2348>
    0.00 :   b4833:  call   35610 <__assert_fail>
    0.00 :   b4838:  lea    0xe9579(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b483f:  mov    $0x82,%edx
    0.00 :   b4844:  lea    0xe3b0a(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b484b:  lea    0xe948e(%rip),%rdi        # 19dce0 <aliasfile.0+0x2298>
    0.00 :   b4852:  call   35610 <__assert_fail>
    0.00 :   b4857:  lea    0xe955a(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b485e:  mov    $0x5d,%edx
    0.00 :   b4863:  lea    0xe3aeb(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b486a:  lea    0xe3af0(%rip),%rdi        # 198361 <__nss_invalid_field_characters+0xd7>
    0.00 :   b4871:  call   35610 <__assert_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   32.07 libc.so.6[155fbc]
   23.54 libc.so.6[155fc3]
   22.03 libc.so.6[155c90]
   13.15 libc.so.6[155fb2]
    9.20 libc.so.6[155ec6]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (9 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000155c90 <__strcpy_avx2>:
         : 6      __strcpy_avx2():
   22.03 :   155c90: endbr64 // libc.so.6[155c90]
    0.00 :   155c94: mov    %rsi,%rcx
    0.00 :   155c97: mov    %rdi,%rax
    0.00 :   155c9a: vpxor  %xmm0,%xmm0,%xmm0
    0.00 :   155c9e: and    $0x7f,%ecx
    0.00 :   155ca1: cmp    $0x40,%ecx
    0.00 :   155ca4: jbe    155e8b <__strcpy_avx2+0x1fb>
    0.00 :   155caa: and    $0xffffffffffffffe0,%rsi
    0.00 :   155cae: and    $0x1f,%ecx
    0.00 :   155cb1: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   155cb5: vpmovmskb %ymm1,%edx
    0.00 :   155cb9: shr    %cl,%rdx
    0.00 :   155cbc: test   %edx,%edx
    0.00 :   155cbe: jne    155ec3 <__strcpy_avx2+0x233>
    0.00 :   155cc4: vpcmpeqb 0x20(%rsi),%ymm0,%ymm2
    0.00 :   155cc9: vpmovmskb %ymm2,%edx
    0.00 :   155ccd: test   %edx,%edx
    0.00 :   155ccf: jne    155f20 <__strcpy_avx2+0x290>
    0.00 :   155cd5: vmovdqu (%rsi,%rcx,1),%ymm2
    0.00 :   155cda: vmovdqu %ymm2,(%rdi)
    0.00 :   155cde: xchg   %ax,%ax
    0.00 :   155ce0: sub    %rcx,%rdi
    0.00 :   155ce3: mov    $0x20,%rcx
    0.00 :   155cea: vmovdqa (%rsi,%rcx,1),%ymm2
    0.00 :   155cef: vmovdqu %ymm2,(%rdi,%rcx,1)
    0.00 :   155cf4: vmovdqa 0x20(%rsi,%rcx,1),%ymm2
    0.00 :   155cfa: vpcmpeqb %ymm2,%ymm0,%ymm1
    0.00 :   155cfe: vpmovmskb %ymm1,%edx
    0.00 :   155d02: add    $0x20,%rcx
    0.00 :   155d06: test   %edx,%edx
    0.00 :   155d08: jne    155ec0 <__strcpy_avx2+0x230>
    0.00 :   155d0e: vmovdqu %ymm2,(%rdi,%rcx,1)
    0.00 :   155d13: vmovdqa 0x20(%rsi,%rcx,1),%ymm3
    0.00 :   155d19: vpcmpeqb %ymm3,%ymm0,%ymm1
    0.00 :   155d1d: vpmovmskb %ymm1,%edx
    0.00 :   155d21: add    $0x20,%rcx
    0.00 :   155d25: test   %edx,%edx
    0.00 :   155d27: jne    155ec0 <__strcpy_avx2+0x230>
    0.00 :   155d2d: vmovdqu %ymm3,(%rdi,%rcx,1)
    0.00 :   155d32: vmovdqa 0x20(%rsi,%rcx,1),%ymm4
    0.00 :   155d38: vpcmpeqb %ymm4,%ymm0,%ymm1
    0.00 :   155d3c: vpmovmskb %ymm1,%edx
    0.00 :   155d40: add    $0x20,%rcx
    0.00 :   155d44: test   %edx,%edx
    0.00 :   155d46: jne    155ec0 <__strcpy_avx2+0x230>
    0.00 :   155d4c: vmovdqu %ymm4,(%rdi,%rcx,1)
    0.00 :   155d51: vmovdqa 0x20(%rsi,%rcx,1),%ymm2
    0.00 :   155d57: vpcmpeqb %ymm2,%ymm0,%ymm1
    0.00 :   155d5b: vpmovmskb %ymm1,%edx
    0.00 :   155d5f: add    $0x20,%rcx
    0.00 :   155d63: test   %edx,%edx
    0.00 :   155d65: jne    155ec0 <__strcpy_avx2+0x230>
    0.00 :   155d6b: vmovdqu %ymm2,(%rdi,%rcx,1)
    0.00 :   155d70: vmovdqa 0x20(%rsi,%rcx,1),%ymm2
    0.00 :   155d76: vpcmpeqb %ymm2,%ymm0,%ymm1
    0.00 :   155d7a: vpmovmskb %ymm1,%edx
    0.00 :   155d7e: add    $0x20,%rcx
    0.00 :   155d82: test   %edx,%edx
    0.00 :   155d84: jne    155ec0 <__strcpy_avx2+0x230>
    0.00 :   155d8a: vmovdqa 0x20(%rsi,%rcx,1),%ymm3
    0.00 :   155d90: vmovdqu %ymm2,(%rdi,%rcx,1)
    0.00 :   155d95: vpcmpeqb %ymm3,%ymm0,%ymm1
    0.00 :   155d99: vpmovmskb %ymm1,%edx
    0.00 :   155d9d: add    $0x20,%rcx
    0.00 :   155da1: test   %edx,%edx
    0.00 :   155da3: jne    155ec0 <__strcpy_avx2+0x230>
    0.00 :   155da9: vmovdqu %ymm3,(%rdi,%rcx,1)
    0.00 :   155dae: mov    %rsi,%rdx
    0.00 :   155db1: lea    0x20(%rsi,%rcx,1),%rsi
    0.00 :   155db6: and    $0xffffffffffffff80,%rsi
    0.00 :   155dba: sub    %rsi,%rdx
    0.00 :   155dbd: sub    %rdx,%rdi
    0.00 :   155dc0: vmovdqa (%rsi),%ymm4
    0.00 :   155dc4: vmovdqa 0x20(%rsi),%ymm5
    0.00 :   155dc9: vmovdqa 0x40(%rsi),%ymm6
    0.00 :   155dce: vmovdqa 0x60(%rsi),%ymm7
    0.00 :   155dd3: vpminub %ymm5,%ymm4,%ymm2
    0.00 :   155dd7: vpminub %ymm7,%ymm6,%ymm3
    0.00 :   155ddb: vpminub %ymm2,%ymm3,%ymm3
    0.00 :   155ddf: vpcmpeqb %ymm1,%ymm3,%ymm3
    0.00 :   155de3: vpmovmskb %ymm3,%edx
    0.00 :   155de7: test   %edx,%edx
    0.00 :   155de9: jne    155e38 <__strcpy_avx2+0x1a8>
    0.00 :   155deb: add    $0x80,%rdi
    0.00 :   155df2: add    $0x80,%rsi
    0.00 :   155df9: vmovdqu %ymm4,-0x80(%rdi)
    0.00 :   155dfe: vmovdqa (%rsi),%ymm4
    0.00 :   155e02: vmovdqu %ymm5,-0x60(%rdi)
    0.00 :   155e07: vmovdqa 0x20(%rsi),%ymm5
    0.00 :   155e0c: vpminub %ymm5,%ymm4,%ymm2
    0.00 :   155e10: vmovdqu %ymm6,-0x40(%rdi)
    0.00 :   155e15: vmovdqa 0x40(%rsi),%ymm6
    0.00 :   155e1a: vmovdqu %ymm7,-0x20(%rdi)
    0.00 :   155e1f: vmovdqa 0x60(%rsi),%ymm7
    0.00 :   155e24: vpminub %ymm7,%ymm6,%ymm3
    0.00 :   155e28: vpminub %ymm2,%ymm3,%ymm3
    0.00 :   155e2c: vpcmpeqb %ymm1,%ymm3,%ymm3
    0.00 :   155e30: vpmovmskb %ymm3,%edx
    0.00 :   155e34: test   %edx,%edx
    0.00 :   155e36: je     155deb <__strcpy_avx2+0x15b>
    0.00 :   155e38: vpcmpeqb %ymm4,%ymm0,%ymm1
    0.00 :   155e3c: vpmovmskb %ymm1,%edx
    0.00 :   155e40: test   %edx,%edx
    0.00 :   155e42: jne    155f30 <__strcpy_avx2+0x2a0>
    0.00 :   155e48: vpcmpeqb %ymm5,%ymm0,%ymm1
    0.00 :   155e4c: vpmovmskb %ymm1,%ecx
    0.00 :   155e50: test   %ecx,%ecx
    0.00 :   155e52: jne    155f40 <__strcpy_avx2+0x2b0>
    0.00 :   155e58: vpcmpeqb %ymm6,%ymm0,%ymm1
    0.00 :   155e5c: vpmovmskb %ymm1,%edx
    0.00 :   155e60: test   %edx,%edx
    0.00 :   155e62: jne    155f60 <__strcpy_avx2+0x2d0>
    0.00 :   155e68: vpcmpeqb %ymm7,%ymm0,%ymm1
    0.00 :   155e6c: vpmovmskb %ymm1,%ecx
    0.00 :   155e70: bsf    %ecx,%edx
    0.00 :   155e73: vmovdqu %ymm4,(%rdi)
    0.00 :   155e77: vmovdqu %ymm5,0x20(%rdi)
    0.00 :   155e7c: vmovdqu %ymm6,0x40(%rdi)
    0.00 :   155e81: add    $0x60,%rsi
    0.00 :   155e85: add    $0x60,%rdi
    0.00 :   155e89: jmp    155ec9 <__strcpy_avx2+0x239>
    0.00 :   155e8b: vmovdqu (%rsi),%ymm3
    0.00 :   155e8f: vmovdqu 0x20(%rsi),%ymm2
    0.00 :   155e94: vpcmpeqb %ymm3,%ymm0,%ymm1
    0.00 :   155e98: vpmovmskb %ymm1,%edx
    0.00 :   155e9c: test   %edx,%edx
    0.00 :   155e9e: jne    155ec6 <__strcpy_avx2+0x236>
    0.00 :   155ea0: vmovdqu %ymm3,(%rdi)
    0.00 :   155ea4: vpcmpeqb %ymm2,%ymm0,%ymm1
    0.00 :   155ea8: vpmovmskb %ymm1,%edx
    0.00 :   155eac: test   %edx,%edx
    0.00 :   155eae: jne    155f10 <__strcpy_avx2+0x280>
    0.00 :   155eb0: and    $0xffffffffffffffe0,%rsi
    0.00 :   155eb4: and    $0x1f,%ecx
    0.00 :   155eb7: jmp    155ce0 <__strcpy_avx2+0x50>
    0.00 :   155ebc: nopl   0x0(%rax)
    0.00 :   155ec0: add    %rcx,%rdi
    0.00 :   155ec3: add    %rcx,%rsi
    9.20 :   155ec6: bsf    %edx,%edx // libc.so.6[155ec6]
    0.00 :   155ec9: cmp    $0x20,%edx
    0.00 :   155ecc: jae    156000 <__strcpy_avx2+0x370>
    0.00 :   155ed2: cmp    $0x10,%edx
    0.00 :   155ed5: jae    155fe0 <__strcpy_avx2+0x350>
    0.00 :   155edb: cmp    $0x8,%edx
    0.00 :   155ede: jae    155fc0 <__strcpy_avx2+0x330>
    0.00 :   155ee4: cmp    $0x4,%edx
    0.00 :   155ee7: jae    155fb0 <__strcpy_avx2+0x320>
    0.00 :   155eed: cmp    $0x3,%edx
    0.00 :   155ef0: je     155fa0 <__strcpy_avx2+0x310>
    0.00 :   155ef6: cmp    $0x1,%edx
    0.00 :   155ef9: ja     155f90 <__strcpy_avx2+0x300>
    0.00 :   155eff: je     155f80 <__strcpy_avx2+0x2f0>
    0.00 :   155f01: movb   $0x0,(%rdi)
    0.00 :   155f04: vzeroupper
    0.00 :   155f07: ret
    0.00 :   155f08: nopl   0x0(%rax,%rax,1)
    0.00 :   155f10: add    $0x20,%rsi
    0.00 :   155f14: add    $0x20,%rdi
    0.00 :   155f18: jmp    155ec6 <__strcpy_avx2+0x236>
    0.00 :   155f1a: nopw   0x0(%rax,%rax,1)
    0.00 :   155f20: bsf    %edx,%edx
    0.00 :   155f23: add    %rcx,%rsi
    0.00 :   155f26: add    $0x20,%edx
    0.00 :   155f29: sub    %ecx,%edx
    0.00 :   155f2b: jmp    155ec9 <__strcpy_avx2+0x239>
    0.00 :   155f2d: nopl   (%rax)
    0.00 :   155f30: bsf    %edx,%edx
    0.00 :   155f33: jmp    155ec9 <__strcpy_avx2+0x239>
    0.00 :   155f35: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   155f40: bsf    %ecx,%edx
    0.00 :   155f43: vmovdqu %ymm4,(%rdi)
    0.00 :   155f47: add    $0x20,%rsi
    0.00 :   155f4b: add    $0x20,%rdi
    0.00 :   155f4f: jmp    155ec9 <__strcpy_avx2+0x239>
    0.00 :   155f54: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   155f5f: nop
    0.00 :   155f60: bsf    %edx,%edx
    0.00 :   155f63: vmovdqu %ymm4,(%rdi)
    0.00 :   155f67: vmovdqu %ymm5,0x20(%rdi)
    0.00 :   155f6c: add    $0x40,%rsi
    0.00 :   155f70: add    $0x40,%rdi
    0.00 :   155f74: jmp    155ec9 <__strcpy_avx2+0x239>
    0.00 :   155f79: nopl   0x0(%rax)
    0.00 :   155f80: movzwl (%rsi),%edx
    0.00 :   155f83: mov    %dx,(%rdi)
    0.00 :   155f86: vzeroupper
    0.00 :   155f89: ret
    0.00 :   155f8a: nopw   0x0(%rax,%rax,1)
    0.00 :   155f90: movzwl (%rsi),%ecx
    0.00 :   155f93: mov    %cx,(%rdi)
    0.00 :   155f96: movb   $0x0,0x2(%rdi)
    0.00 :   155f9a: vzeroupper
    0.00 :   155f9d: ret
    0.00 :   155f9e: xchg   %ax,%ax
    0.00 :   155fa0: mov    (%rsi),%edx
    0.00 :   155fa2: mov    %edx,(%rdi)
    0.00 :   155fa4: vzeroupper
    0.00 :   155fa7: ret
    0.00 :   155fa8: nopl   0x0(%rax,%rax,1)
    0.00 :   155fb0: mov    (%rsi),%ecx
   13.15 :   155fb2: mov    %ecx,(%rdi) // libc.so.6[155fb2]
    0.00 :   155fb4: mov    -0x3(%rsi,%rdx,1),%ecx
    0.00 :   155fb8: mov    %ecx,-0x3(%rdi,%rdx,1)
   32.07 :   155fbc: vzeroupper // libc.so.6[155fbc]
    0.00 :   155fbf: ret
    0.00 :   155fc0: mov    (%rsi),%rcx
   23.54 :   155fc3: mov    -0x7(%rsi,%rdx,1),%r9 // libc.so.6[155fc3]
    0.00 :   155fc8: mov    %rcx,(%rdi)
    0.00 :   155fcb: mov    %r9,-0x7(%rdi,%rdx,1)
    0.00 :   155fd0: vzeroupper
    0.00 :   155fd3: ret
    0.00 :   155fd4: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   155fdf: nop
    0.00 :   155fe0: vmovdqu (%rsi),%xmm2
    0.00 :   155fe4: vmovdqu -0xf(%rsi,%rdx,1),%xmm3
    0.00 :   155fea: vmovdqu %xmm2,(%rdi)
    0.00 :   155fee: vmovdqu %xmm3,-0xf(%rdi,%rdx,1)
    0.00 :   155ff4: vzeroupper
    0.00 :   155ff7: ret
    0.00 :   155ff8: nopl   0x0(%rax,%rax,1)
    0.00 :   156000: vmovdqu (%rsi),%ymm2
    0.00 :   156004: vmovdqu -0x1f(%rsi,%rdx,1),%ymm3
    0.00 :   15600a: vmovdqu %ymm2,(%rdi)
    0.00 :   15600e: vmovdqu %ymm3,-0x1f(%rdi,%rdx,1)
    0.00 :   156014: vzeroupper
    0.00 :   156017: ret

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   48.32 dbt2-client[4092f1]
   33.17 dbt2-client[4092cc]
   12.95 dbt2-client[4092cd]
    5.56 dbt2-client[4092ff]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (10 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004092cc <commit_transaction_libpq>:
         : 6      commit_transaction_libpq():
   33.17 :   4092cc: push   %rbp // dbt2-client[4092cc]
   12.95 :   4092cd: mov    %rsp,%rbp // dbt2-client[4092cd]
    0.00 :   4092d0: sub    $0x20,%rsp
    0.00 :   4092d4: mov    %rdi,-0x18(%rbp)
    0.00 :   4092d8: mov    -0x18(%rbp),%rax
    0.00 :   4092dc: mov    0x78(%rax),%rax
    0.00 :   4092e0: mov    $0x414bb0,%esi
    0.00 :   4092e5: mov    %rax,%rdi
    0.00 :   4092e8: call   407130 <PQexec@plt>
    0.00 :   4092ed: mov    %rax,-0x8(%rbp)
   48.32 :   4092f1: cmpq   $0x0,-0x8(%rbp) // dbt2-client[4092f1]
    0.00 :   4092f6: je     409309 <commit_transaction_libpq+0x3d>
    0.00 :   4092f8: mov    -0x8(%rbp),%rax
    0.00 :   4092fc: mov    %rax,%rdi
    5.56 :   4092ff: call   407040 <PQresultStatus@plt> // dbt2-client[4092ff]
    0.00 :   409304: cmp    $0x1,%eax
    0.00 :   409307: je     409335 <commit_transaction_libpq+0x69>
    0.00 :   409309: mov    -0x18(%rbp),%rax
    0.00 :   40930d: mov    0x78(%rax),%rax
    0.00 :   409311: mov    %rax,%rdi
    0.00 :   409314: call   4071c0 <PQerrorMessage@plt>
    0.00 :   409319: mov    %rax,%rcx
    0.00 :   40931c: mov    $0x414bb7,%edx
    0.00 :   409321: mov    $0x1b,%esi
    0.00 :   409326: mov    $0x414bc0,%edi
    0.00 :   40932b: mov    $0x0,%eax
    0.00 :   409330: call   40840f <log_error_message>
    0.00 :   409335: mov    -0x8(%rbp),%rax
    0.00 :   409339: mov    %rax,%rdi
    0.00 :   40933c: call   407080 <PQclear@plt>
    0.00 :   409341: mov    $0x1,%eax
    0.00 :   409346: leave
    0.00 :   409347: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   26.08 [virtio_net][397]
   19.12 [virtio_net][390]
   15.82 [virtio_net][395]
   13.32 [virtio_net][3c8]
   13.32 [virtio_net][3c6]
   13.30 [virtio_net][3d0]
   13.30 [virtio_net][3cd]
   11.77 [virtio_net][39b]
   11.77 [virtio_net][39a]
   11.65 [virtio_net][3a2]
   11.65 [virtio_net][39c]
   10.77 [virtio_net][3c4]
   10.77 [virtio_net][3bf]
    8.69 [virtio_net][3f1]
    8.69 [virtio_net][3f0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (9 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000390 <free_old_xmit_skbs>:
         : 6   free_old_xmit_skbs():
    9.56 :   390:    call   395 <free_old_xmit_skbs+0x5> // [virtio_net][390]
    7.91 :   395:    push   %r14 // [virtio_net][395]
   13.04 :   397:    movzbl %sil,%r14d // [virtio_net][397]
   11.77 :   39b:    push   %r13 // [virtio_net][39b]
    0.00 :   39d:    mov    %rdi,%r13
    0.00 :   3a0:    push   %r12
   11.65 :   3a2:    xor    %r12d,%r12d // [virtio_net][3a2]
    0.00 :   3a5:    push   %rbp
    0.00 :   3a6:    xor    %ebp,%ebp
    0.00 :   3a8:    push   %rbx
    0.00 :   3a9:    sub    $0x8,%rsp
    0.00 :   3ad:    movl   $0x0,0x4(%rsp)
    0.00 :   3b5:    jmp    3d0 <free_old_xmit_skbs+0x40>
    0.00 :   3b7:    test   $0x1,%bl
    0.00 :   3ba:    jne    421 <free_old_xmit_skbs+0x91>
    0.00 :   3bc:    xchg   %ax,%ax
    0.00 :   3be:    mov    %r14d,%esi
    0.00 :   3c1:    mov    %rbx,%rdi
   10.77 :   3c4:    add    0x70(%rbx),%r12d // [virtio_net][3c4]
   13.32 :   3c8:    call   3cd <free_old_xmit_skbs+0x3d> // [virtio_net][3c8]
    0.00 :   3cd:    add    $0x1,%ebp
   13.30 :   3d0:    mov    0x0(%r13),%rdi // [virtio_net][3d0]
    0.00 :   3d4:    lea    0x4(%rsp),%rsi
    0.00 :   3d9:    call   3de <free_old_xmit_skbs+0x4e>
    0.00 :   3de:    mov    %rax,%rbx
    0.00 :   3e1:    test   %rax,%rax
    0.00 :   3e4:    jne    3b7 <free_old_xmit_skbs+0x27>
    0.00 :   3e6:    test   %ebp,%ebp
    0.00 :   3e8:    je     3f8 <free_old_xmit_skbs+0x68>
    0.00 :   3ea:    add    %r12,0x298(%r13)
    8.69 :   3f1:    add    %rbp,0x290(%r13) // [virtio_net][3f1]
    0.00 :   3f8:    add    $0x8,%rsp
    0.00 :   3fc:    pop    %rbx
    0.00 :   3fd:    pop    %rbp
    0.00 :   3fe:    pop    %r12
    0.00 :   400:    pop    %r13
    0.00 :   402:    pop    %r14
    0.00 :   404:    jmp    409 <free_old_xmit_skbs+0x79>
    0.00 :   409:    mov    %rbx,%rdx
    0.00 :   40c:    mov    $0x0,%rsi
    0.00 :   413:    mov    $0x0,%rdi
    0.00 :   41a:    call   41f <free_old_xmit_skbs+0x8f>
    0.00 :   41f:    jmp    3be <free_old_xmit_skbs+0x2e>
    0.00 :   421:    mov    %rbx,%rdi
    0.00 :   424:    and    $0xfffffffffffffffe,%rdi
    0.00 :   428:    movzwl 0x8(%rdi),%eax
    0.00 :   42c:    add    %eax,%r12d
    0.00 :   42f:    call   434 <free_old_xmit_skbs+0xa4>
    0.00 :   434:    jmp    3cd <free_old_xmit_skbs+0x3d>
         :
         : 57  Disassembly of section .text.unlikely:
         :
         : 59  0000000000000390 <virtnet_validate.cold+0xc6>:
         : 60  virtnet_validate.cold():
    9.56 :   390:    add    %al,(%rax) // [virtio_net][390]
    0.00 :   392:    add    %ch,%cl
    0.00 :   394:    push   %rax
    7.91 :   395:    (bad) // [virtio_net][395]
    0.00 :   396:    (bad)
   13.04 :   397:    decl   -0x73(%rax) // [virtio_net][397]
   11.77 :   39a:    jnp    3ac <virtnet_validate.cold+0xe2> // [virtio_net][39a]
   11.65 :   39c:    mov    $0x0,%rcx // [virtio_net][39c]
    0.00 :   3a3:    mov    $0x0,%rdx
    0.00 :   3aa:    mov    $0x0,%rsi
    0.00 :   3b1:    call   3b6 <virtnet_validate.cold+0xec>
    0.00 :   3b6:    jmp    2e8 <virtnet_validate.cold+0x1e>
    0.00 :   3bb:    lea    0x10(%rdi),%rdi
   10.77 :   3bf:    mov    $0x0,%rdx // [virtio_net][3bf]
   13.32 :   3c6:    mov    $0x0,%rsi // [virtio_net][3c6]
   13.30 :   3cd:    call   3d2 <virtnet_validate.cold+0x108> // [virtio_net][3cd]
    0.00 :   3d2:    jmp    2e8 <virtnet_validate.cold+0x1e>
    0.00 :   3d7:    lea    0x10(%rbx),%rdi
    0.00 :   3db:    mov    $0x0,%rcx
    0.00 :   3e2:    mov    $0x0,%rdx
    0.00 :   3e9:    mov    $0x0,%rsi
    8.69 :   3f0:    call   3f5 <virtnet_validate.cold+0x12b> // [virtio_net][3f0]
    0.00 :   3f5:    jmp    2e8 <virtnet_validate.cold+0x1e>
         :
         : 85  00000000000003fa <receive_buf.cold>:
         : 86  receive_buf.cold():
    0.00 :   3fa:    movzwl 0x2c(%r14),%ecx
    0.00 :   3ff:    movzbl 0x29(%r14),%edx
    0.00 :   404:    mov    $0x0,%rdi
    0.00 :   40b:    mov    (%rsp),%rsi
    0.00 :   40f:    call   414 <receive_buf.cold+0x1a>
    0.00 :   414:    jmp    419 <receive_buf.cold+0x1f>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   34.45 libc.so.6[87d1d]
   15.70 libc.so.6[87c7c]
   14.51 libc.so.6[87c50]
   13.40 libc.so.6[87cd1]
   11.08 libc.so.6[87d16]
   10.87 libc.so.6[87c57]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (8 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000087c50 <__futex_abstimed_wait_common>:
         : 6     __futex_abstimed_wait_common():
   14.51 :   87c50:  push   %rbp // libc.so.6[87c50]
    0.00 :   87c51:  mov    %rcx,%r10
    0.00 :   87c54:  mov    %esi,%ebp
    0.00 :   87c56:  push   %rbx
   10.87 :   87c57:  sub    $0x28,%rsp // libc.so.6[87c57]
    0.00 :   87c5b:  test   %rcx,%rcx
    0.00 :   87c5e:  jne    87d40 <__futex_abstimed_wait_common+0xf0>
    0.00 :   87c64:  cmp    $0x1,%edx
    0.00 :   87c67:  ja     87d30 <__futex_abstimed_wait_common+0xe0>
    0.00 :   87c6d:  shl    $0x8,%edx
    0.00 :   87c70:  mov    %edx,%esi
    0.00 :   87c72:  xor    $0x100,%esi
    0.00 :   87c78:  or     $0x89,%sil
   15.70 :   87c7c:  xor    %r8d,%esi // libc.so.6[87c7c]
    0.00 :   87c7f:  test   %r9b,%r9b
    0.00 :   87c82:  jne    87cd8 <__futex_abstimed_wait_common+0x88>
    0.00 :   87c84:  mov    $0xffffffff,%r9d
    0.00 :   87c8a:  xor    %r8d,%r8d
    0.00 :   87c8d:  mov    %ebp,%edx
    0.00 :   87c8f:  mov    $0xca,%eax
    0.00 :   87c94:  syscall
    0.00 :   87c96:  test   %eax,%eax
    0.00 :   87c98:  jg     87cad <__futex_abstimed_wait_common+0x5d>
    0.00 :   87c9a:  cmp    $0xffffffea,%eax
    0.00 :   87c9d:  jl     87cc0 <__futex_abstimed_wait_common+0x70>
    0.00 :   87c9f:  lea    0x16(%rax),%edx
    0.00 :   87ca2:  mov    $0x440801,%ecx
    0.00 :   87ca7:  bt     %rdx,%rcx
    0.00 :   87cab:  jb     87cca <__futex_abstimed_wait_common+0x7a>
    0.00 :   87cad:  lea    0x11493c(%rip),%rdi        # 19c5f0 <aliasfile.0+0xba8>
    0.00 :   87cb4:  call   810e0 <__libc_fatal>
    0.00 :   87cb9:  nopl   0x0(%rax)
    0.00 :   87cc0:  cmp    $0xffffff92,%eax
    0.00 :   87cc3:  je     87cca <__futex_abstimed_wait_common+0x7a>
    0.00 :   87cc5:  cmp    $0xffffffb5,%eax
    0.00 :   87cc8:  jne    87cad <__futex_abstimed_wait_common+0x5d>
    0.00 :   87cca:  neg    %eax
    0.00 :   87ccc:  add    $0x28,%rsp
    0.00 :   87cd0:  pop    %rbx
   13.40 :   87cd1:  pop    %rbp // libc.so.6[87cd1]
    0.00 :   87cd2:  ret
    0.00 :   87cd3:  nopl   0x0(%rax,%rax,1)
    0.00 :   87cd8:  cmpb   $0x0,0x153919(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   87cdf:  jne    87c84 <__futex_abstimed_wait_common+0x34>
    0.00 :   87ce1:  mov    %r10,0x18(%rsp)
    0.00 :   87ce6:  mov    %rdi,0x10(%rsp)
    0.00 :   87ceb:  mov    %esi,0x8(%rsp)
    0.00 :   87cef:  call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   87cf4:  mov    0x18(%rsp),%r10
    0.00 :   87cf9:  mov    0x8(%rsp),%esi
    0.00 :   87cfd:  mov    %ebp,%edx
    0.00 :   87cff:  mov    %eax,%ebx
    0.00 :   87d01:  mov    0x10(%rsp),%rdi
    0.00 :   87d06:  mov    $0xffffffff,%r9d
    0.00 :   87d0c:  xor    %r8d,%r8d
    0.00 :   87d0f:  mov    $0xca,%eax
    0.00 :   87d14:  syscall
   11.08 :   87d16:  mov    %ebx,%edi // libc.so.6[87d16]
    0.00 :   87d18:  mov    %rax,0x8(%rsp)
   34.45 :   87d1d:  call   87640 <__GI___pthread_disable_asynccancel> // libc.so.6[87d1d]
    0.00 :   87d22:  mov    0x8(%rsp),%rax
    0.00 :   87d27:  jmp    87c96 <__futex_abstimed_wait_common+0x46>
    0.00 :   87d2c:  nopl   0x0(%rax)
    0.00 :   87d30:  add    $0x28,%rsp
    0.00 :   87d34:  mov    $0x16,%eax
    0.00 :   87d39:  pop    %rbx
    0.00 :   87d3a:  pop    %rbp
    0.00 :   87d3b:  ret
    0.00 :   87d3c:  nopl   0x0(%rax)
    0.00 :   87d40:  cmpq   $0x0,(%rcx)
    0.00 :   87d44:  jns    87c64 <__futex_abstimed_wait_common+0x14>
    0.00 :   87d4a:  mov    $0x6e,%eax
    0.00 :   87d4f:  jmp    87ccc <__futex_abstimed_wait_common+0x7c>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   34.82 [nf_nat][3150]
   23.80 [nf_nat][3156]
   14.21 [nf_nat][3217]
   14.01 [nf_nat][31e4]
   13.17 [nf_nat][31c3]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (8 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003150 <nf_nat_ipv4_out>:
         : 6    nf_nat_ipv4_out():
   34.82 :   3150:   call   3155 <nf_nat_ipv4_out+0x5> // [nf_nat][3150]
    0.00 :   3155:   push   %rbp
   23.80 :   3156:   push   %rbx // [nf_nat][3156]
    0.00 :   3157:   mov    %rsi,%rbx
    0.00 :   315a:   mov    0x68(%rsi),%rsi
    0.00 :   315e:   cmp    $0x7,%rsi
    0.00 :   3162:   jbe    3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   3168:   mov    %rdx,%rbp
    0.00 :   316b:   mov    %esi,%edx
    0.00 :   316d:   mov    $0x12,%eax
    0.00 :   3172:   and    $0x7,%edx
    0.00 :   3175:   bt     %rdx,%rax
    0.00 :   3179:   jae    3190 <nf_nat_ipv4_out+0x40>
    0.00 :   317b:   movzwl 0xb8(%rbx),%eax
    0.00 :   3182:   mov    0xc8(%rbx),%rcx
    0.00 :   3189:   cmpb   $0x1,0x9(%rcx,%rax,1)
    0.00 :   318e:   je     31a7 <nf_nat_ipv4_out+0x57>
    0.00 :   3190:   mov    %rbp,%rdx
    0.00 :   3193:   mov    %rbx,%rsi
    0.00 :   3196:   call   319b <nf_nat_ipv4_out+0x4b>
    0.00 :   319b:   cmp    $0x1,%eax
    0.00 :   319e:   je     31bf <nf_nat_ipv4_out+0x6f>
    0.00 :   31a0:   pop    %rbx
    0.00 :   31a1:   pop    %rbp
    0.00 :   31a2:   jmp    31a7 <nf_nat_ipv4_out+0x57>
    0.00 :   31a7:   movzbl 0x0(%rbp),%ecx
    0.00 :   31ab:   and    $0xfffffffffffffff8,%rsi
    0.00 :   31af:   mov    %rbx,%rdi
    0.00 :   31b2:   call   31b7 <nf_nat_ipv4_out+0x67>
    0.00 :   31b7:   mov    %eax,%edx
    0.00 :   31b9:   xor    %eax,%eax
    0.00 :   31bb:   test   %edx,%edx
    0.00 :   31bd:   je     31a0 <nf_nat_ipv4_out+0x50>
    0.00 :   31bf:   testb  $0x4,0x3c(%rbx)
   13.17 :   31c3:   jne    3236 <nf_nat_ipv4_out+0xe6> // [nf_nat][31c3]
    0.00 :   31c5:   mov    0x68(%rbx),%rax
    0.00 :   31c9:   mov    %eax,%edx
    0.00 :   31cb:   mov    %rax,%rcx
    0.00 :   31ce:   and    $0x7,%edx
    0.00 :   31d1:   and    $0xfffffffffffffff8,%rcx
    0.00 :   31d5:   cmp    $0x7,%rax
    0.00 :   31d9:   jbe    3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   31db:   xor    %eax,%eax
    0.00 :   31dd:   cmp    $0x2,%edx
    0.00 :   31e0:   seta   %sil
   14.01 :   31e4:   setbe  %al // [nf_nat][31e4]
    0.00 :   31e7:   movzbl %sil,%esi
    0.00 :   31eb:   lea    0x0(,%rsi,8),%rdx
    0.00 :   31f3:   sub    %rsi,%rdx
    0.00 :   31f6:   lea    (%rcx,%rdx,8),%rsi
    0.00 :   31fa:   lea    0x0(,%rax,8),%rdx
    0.00 :   3202:   sub    %rax,%rdx
    0.00 :   3205:   lea    (%rcx,%rdx,8),%rax
    0.00 :   3209:   mov    0x34(%rax),%ecx
    0.00 :   320c:   cmp    %ecx,0x20(%rsi)
    0.00 :   320f:   jne    3221 <nf_nat_ipv4_out+0xd1>
    0.00 :   3211:   cmpb   $0x1,0x46(%rsi)
    0.00 :   3215:   je     3236 <nf_nat_ipv4_out+0xe6>
   14.21 :   3217:   movzwl 0x44(%rax),%eax // [nf_nat][3217]
    0.00 :   321b:   cmp    %ax,0x30(%rsi)
    0.00 :   321f:   je     3236 <nf_nat_ipv4_out+0xe6>
    0.00 :   3221:   mov    0x20(%rbp),%rdi
    0.00 :   3225:   mov    $0x2,%edx
    0.00 :   322a:   mov    %rbx,%rsi
    0.00 :   322d:   call   2c40 <nf_xfrm_me_harder>
    0.00 :   3232:   test   %eax,%eax
    0.00 :   3234:   js     3242 <nf_nat_ipv4_out+0xf2>
    0.00 :   3236:   mov    $0x1,%eax
    0.00 :   323b:   pop    %rbx
    0.00 :   323c:   pop    %rbp
    0.00 :   323d:   jmp    3242 <nf_nat_ipv4_out+0xf2>
    0.00 :   3242:   neg    %eax
    0.00 :   3244:   shl    $0x10,%eax
    0.00 :   3247:   jmp    31a0 <nf_nat_ipv4_out+0x50>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[17a20]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (8 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000017a20 <PQresultStatus@@Base>:
  100.00 :   17a20:  endbr64 // libpq.so.private14-5.14[17a20]
    0.00 :   17a24:  test   %rdi,%rdi
    0.00 :   17a27:  je     17a30 <PQresultStatus@@Base+0x10>
    0.00 :   17a29:  mov    0x28(%rdi),%eax
    0.00 :   17a2c:  ret
    0.00 :   17a2d:  nopl   (%rax)
    0.00 :   17a30:  mov    $0x7,%eax
    0.00 :   17a35:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   57.39 [nf_conntrack][967]
   37.39 [nf_conntrack][96a]
   26.24 [nf_conntrack][930]
   20.63 [nf_conntrack][937]
   12.43 [nf_conntrack][9a4]
   12.43 [nf_conntrack][99a]
   12.23 [nf_conntrack][973]
   12.23 [nf_conntrack][96e]
    9.02 [nf_conntrack][935]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (9 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000930 <get_l4proto>:
         : 6   get_l4proto():
    8.61 :   930:    call   935 <get_l4proto+0x5> // [nf_conntrack][930]
    9.02 :   935:    push   %r13 // [nf_conntrack][935]
   10.31 :   937:    push   %r12 // [nf_conntrack][937]
    0.00 :   939:    mov    %rcx,%r12
    0.00 :   93c:    push   %rbp
    0.00 :   93d:    mov    %rdi,%rbp
    0.00 :   940:    sub    $0x20,%rsp
    0.00 :   944:    cmp    $0x2,%dl
    0.00 :   947:    je     964 <get_l4proto+0x34>
    0.00 :   949:    cmp    $0xa,%dl
    0.00 :   94c:    je     9c4 <get_l4proto+0x94>
    0.00 :   94e:    movb   $0x0,(%rcx)
    0.00 :   951:    mov    $0xffffffff,%eax
    0.00 :   956:    add    $0x20,%rsp
    0.00 :   95a:    pop    %rbp
    0.00 :   95b:    pop    %r12
    0.00 :   95d:    pop    %r13
    0.00 :   95f:    jmp    964 <get_l4proto+0x34>
    0.00 :   964:    mov    0x70(%rdi),%eax
   10.00 :   967:    sub    0x74(%rdi),%eax // [nf_conntrack][967]
   37.39 :   96a:    movq   $0x0,0xc(%rsp) // [nf_conntrack][96a]
   12.23 :   973:    sub    %esi,%eax // [nf_conntrack][973]
    0.00 :   975:    movl   $0x0,0x1c(%rsp)
    0.00 :   97d:    mov    0xd0(%rdi),%rdx
    0.00 :   984:    movq   $0x0,0x14(%rsp)
    0.00 :   98d:    cmp    $0x13,%eax
    0.00 :   990:    jle    a52 <get_l4proto+0x122>
    0.00 :   996:    movslq %esi,%rax
    0.00 :   999:    add    %rax,%rdx
    0.00 :   99c:    je     951 <get_l4proto+0x21>
    0.00 :   99e:    testw  $0xff1f,0x6(%rdx)
   12.43 :   9a4:    jne    951 <get_l4proto+0x21> // [nf_conntrack][9a4]
    0.00 :   9a6:    movzbl (%rdx),%eax
    0.00 :   9a9:    movzbl 0x9(%rdx),%ecx
    0.00 :   9ad:    and    $0xf,%eax
    0.00 :   9b0:    mov    %cl,(%r12)
    0.00 :   9b4:    mov    0x70(%rbp),%r8d
    0.00 :   9b8:    lea    (%rsi,%rax,4),%eax
    0.00 :   9bb:    cmp    %eax,%r8d
    0.00 :   9be:    jae    956 <get_l4proto+0x26>
    0.00 :   9c0:    xchg   %ax,%ax
    0.00 :   9c2:    jmp    951 <get_l4proto+0x21>
    0.00 :   9c4:    xor    %eax,%eax
    0.00 :   9c6:    lea    0x28(%rsi),%r13d
    0.00 :   9ca:    mov    $0x1,%ecx
    0.00 :   9cf:    add    $0x6,%esi
    0.00 :   9d2:    lea    0xb(%rsp),%rdx
    0.00 :   9d7:    mov    %ax,0xc(%rsp)
    0.00 :   9dc:    movb   $0x0,0xb(%rsp)
    0.00 :   9e1:    call   9e6 <get_l4proto+0xb6>
    0.00 :   9e6:    test   %eax,%eax
    0.00 :   9e8:    jne    a84 <get_l4proto+0x154>
    0.00 :   9ee:    lea    0xc(%rsp),%rcx
    0.00 :   9f3:    lea    0xb(%rsp),%rdx
    0.00 :   9f8:    mov    %r13d,%esi
    0.00 :   9fb:    mov    %rbp,%rdi
    0.00 :   9fe:    call   a03 <get_l4proto+0xd3>
    0.00 :   a03:    test   %eax,%eax
    0.00 :   a05:    js     aa3 <get_l4proto+0x173>
    0.00 :   a0b:    testw  $0xf8ff,0xc(%rsp)
    0.00 :   a12:    jne    aa3 <get_l4proto+0x173>
    0.00 :   a18:    movzbl 0xb(%rsp),%edx
    0.00 :   a1d:    mov    %dl,(%r12)
    0.00 :   a21:    add    $0x20,%rsp
    0.00 :   a25:    pop    %rbp
    0.00 :   a26:    pop    %r12
    0.00 :   a28:    pop    %r13
    0.00 :   a2a:    jmp    a2f <get_l4proto+0xff>
    0.00 :   a2f:    movzbl (%rdx),%ecx
    0.00 :   a32:    mov    $0x0,%rdi
    0.00 :   a39:    mov    %esi,%edx
    0.00 :   a3b:    mov    $0x0,%rsi
    0.00 :   a42:    and    $0xf,%ecx
    0.00 :   a45:    shl    $0x2,%ecx
    0.00 :   a48:    call   a4d <get_l4proto+0x11d>
    0.00 :   a4d:    jmp    951 <get_l4proto+0x21>
    0.00 :   a52:    test   %rdi,%rdi
    0.00 :   a55:    je     951 <get_l4proto+0x21>
    0.00 :   a5b:    mov    $0x14,%ecx
    0.00 :   a60:    lea    0xc(%rsp),%rdx
    0.00 :   a65:    mov    %esi,0x4(%rsp)
    0.00 :   a69:    call   a6e <get_l4proto+0x13e>
    0.00 :   a6e:    test   %eax,%eax
    0.00 :   a70:    js     951 <get_l4proto+0x21>
    0.00 :   a76:    mov    0x4(%rsp),%esi
    0.00 :   a7a:    lea    0xc(%rsp),%rdx
    0.00 :   a7f:    jmp    99e <get_l4proto+0x6e>
    0.00 :   a84:    xchg   %ax,%ax
    0.00 :   a86:    jmp    951 <get_l4proto+0x21>
    0.00 :   a8b:    mov    $0x0,%rsi
    0.00 :   a92:    mov    $0x0,%rdi
    0.00 :   a99:    call   a9e <get_l4proto+0x16e>
    0.00 :   a9e:    jmp    951 <get_l4proto+0x21>
    0.00 :   aa3:    xchg   %ax,%ax
    0.00 :   aa5:    jmp    951 <get_l4proto+0x21>
    0.00 :   aaa:    mov    $0x0,%rsi
    0.00 :   ab1:    mov    $0x0,%rdi
    0.00 :   ab8:    call   abd <get_l4proto+0x18d>
    0.00 :   abd:    jmp    951 <get_l4proto+0x21>
         :
         : 107 Disassembly of section .text.unlikely:
         :
         : 109 0000000000000930 <nf_conntrack_dccp_packet.cold+0x7>:
         : 110 nf_conntrack_dccp_packet.cold():
   17.63 :   930:    mov    $0x0,%rcx // [nf_conntrack][930]
   10.31 :   937:    mov    $0x21,%edx // [nf_conntrack][937]
    0.00 :   93c:    mov    %r10,%rsi
    0.00 :   93f:    mov    %rbx,%rdi
    0.00 :   942:    call   947 <nf_conntrack_dccp_packet.cold+0x1e>
    0.00 :   947:    jmp    94c <nf_conntrack_dccp_packet.cold+0x23>
    0.00 :   94c:    mov    $0x0,%r8
    0.00 :   953:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
    0.00 :   955:    mov    $0x0,%r8
    0.00 :   95c:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
    0.00 :   95e:    mov    $0x0,%r8
    0.00 :   965:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
         :
         : 124 0000000000000967 <nf_conntrack_sctp_packet.cold>:
         : 125 nf_conntrack_sctp_packet.cold():
   47.39 :   967:    mov    $0x0,%r8 // [nf_conntrack][967]
   12.23 :   96e:    mov    $0x0,%rcx // [nf_conntrack][96e]
    0.00 :   975:    mov    $0x84,%edx
    0.00 :   97a:    mov    %r13,%rsi
    0.00 :   97d:    mov    %rbx,%rdi
    0.00 :   980:    call   985 <nf_conntrack_sctp_packet.cold+0x1e>
    0.00 :   985:    jmp    98a <nf_conntrack_sctp_packet.cold+0x23>
    0.00 :   98a:    mov    $0x0,%r8
    0.00 :   991:    jmp    96e <nf_conntrack_sctp_packet.cold+0x7>
    0.00 :   993:    mov    $0x0,%r8
   12.43 :   99a:    jmp    96e <nf_conntrack_sctp_packet.cold+0x7> // [nf_conntrack][99a]

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   50.50 [nf_tables][19c40]
   17.21 [nf_tables][19c6d]
   12.30 [nf_tables][19cee]
   10.37 [nf_tables][19c7f]
    9.62 [nf_tables][19ca0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (8 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000019c40 <nft_lookup_eval>:
         : 6     nft_lookup_eval():
   50.50 :   19c40:  call   19c45 <nft_lookup_eval+0x5> // [nf_tables][19c40]
    0.00 :   19c45:  push   %r14
    0.00 :   19c47:  push   %r13
    0.00 :   19c49:  mov    %rdx,%r13
    0.00 :   19c4c:  push   %r12
    0.00 :   19c4e:  push   %rbp
    0.00 :   19c4f:  mov    %rsi,%rbp
    0.00 :   19c52:  push   %rbx
    0.00 :   19c53:  mov    %rdi,%rbx
    0.00 :   19c56:  sub    $0x8,%rsp
    0.00 :   19c5a:  mov    0x8(%rdx),%rax
    0.00 :   19c5e:  mov    0x8(%rdi),%r14
    0.00 :   19c62:  mov    %rsp,%rcx
    0.00 :   19c65:  movq   $0x0,(%rsp)
   17.21 :   19c6d:  mov    0x20(%rax),%r12 // [nf_tables][19c6d]
    0.00 :   19c71:  movzbl 0x10(%rdi),%eax
    0.00 :   19c75:  mov    %r12,%rdi
    0.00 :   19c78:  lea    (%rsi,%rax,4),%rdx
    0.00 :   19c7c:  mov    %r14,%rsi
   10.37 :   19c7f:  call   19c84 <nft_lookup_eval+0x44> // [nf_tables][19c7f]
    0.00 :   19c84:  cmp    0x12(%rbx),%al
    0.00 :   19c87:  je     19d5e <nft_lookup_eval+0x11e>
    0.00 :   19c8d:  mov    (%rsp),%r12
    0.00 :   19c91:  test   %r12,%r12
    0.00 :   19c94:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19c96:  testb  $0x8,0xc8(%r14)
    0.00 :   19c9e:  jne    19cff <nft_lookup_eval+0xbf>
    9.62 :   19ca0:  movzbl 0x8(%r12),%eax // [nf_tables][19ca0]
    0.00 :   19ca6:  test   %al,%al
    0.00 :   19ca8:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19caa:  add    %rax,%r12
    0.00 :   19cad:  cmpb   $0x0,(%r12)
    0.00 :   19cb2:  lea    0x8(%r12),%rbx
    0.00 :   19cb7:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19cb9:  xor    %r14d,%r14d
    0.00 :   19cbc:  jmp    19cd4 <nft_lookup_eval+0x94>
    0.00 :   19cbe:  mov    (%rbx),%rax
    0.00 :   19cc1:  mov    0x10(%rax),%eax
    0.00 :   19cc4:  add    %eax,%r14d
    0.00 :   19cc7:  add    %rax,%rbx
    0.00 :   19cca:  movzbl (%r12),%eax
    0.00 :   19ccf:  cmp    %eax,%r14d
    0.00 :   19cd2:  jae    19cee <nft_lookup_eval+0xae>
    0.00 :   19cd4:  mov    (%rbx),%rax
    0.00 :   19cd7:  mov    %r13,%rdx
    0.00 :   19cda:  mov    %rbp,%rsi
    0.00 :   19cdd:  mov    %rbx,%rdi
    0.00 :   19ce0:  mov    (%rax),%rax
    0.00 :   19ce3:  call   19ce8 <nft_lookup_eval+0xa8>
    0.00 :   19ce8:  cmpl   $0xfffffffe,0x0(%rbp)
    0.00 :   19cec:  jne    19cbe <nft_lookup_eval+0x7e>
   12.30 :   19cee:  add    $0x8,%rsp // [nf_tables][19cee]
    0.00 :   19cf2:  pop    %rbx
    0.00 :   19cf3:  pop    %rbp
    0.00 :   19cf4:  pop    %r12
    0.00 :   19cf6:  pop    %r13
    0.00 :   19cf8:  pop    %r14
    0.00 :   19cfa:  jmp    19cff <nft_lookup_eval+0xbf>
    0.00 :   19cff:  movzbl 0x3(%r12),%esi
    0.00 :   19d05:  movzbl 0x11(%rbx),%edx
    0.00 :   19d09:  movzbl 0xcb(%r14),%eax
    0.00 :   19d11:  add    %r12,%rsi
    0.00 :   19d14:  lea    0x0(%rbp,%rdx,4),%rdx
    0.00 :   19d19:  test   $0x3,%al
    0.00 :   19d1b:  je     19d2d <nft_lookup_eval+0xed>
    0.00 :   19d1d:  mov    %rax,%rcx
    0.00 :   19d20:  and    $0xfc,%ecx
    0.00 :   19d26:  movl   $0x0,(%rcx,%rdx,1)
    0.00 :   19d2d:  cmp    $0x8,%eax
    0.00 :   19d30:  jae    19d85 <nft_lookup_eval+0x145>
    0.00 :   19d32:  test   $0x4,%al
    0.00 :   19d34:  jne    19dc3 <nft_lookup_eval+0x183>
    0.00 :   19d3a:  test   %eax,%eax
    0.00 :   19d3c:  je     19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d42:  movzbl (%rsi),%ecx
    0.00 :   19d45:  mov    %cl,(%rdx)
    0.00 :   19d47:  test   $0x2,%al
    0.00 :   19d49:  je     19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d4f:  movzwl -0x2(%rsi,%rax,1),%ecx
    0.00 :   19d54:  mov    %cx,-0x2(%rdx,%rax,1)
    0.00 :   19d59:  jmp    19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d5e:  mov    %r12,%rdi
    0.00 :   19d61:  mov    %r14,%rsi
    0.00 :   19d64:  call   19d69 <nft_lookup_eval+0x129>
    0.00 :   19d69:  mov    %rax,(%rsp)
    0.00 :   19d6d:  mov    %rax,%r12
    0.00 :   19d70:  test   %rax,%rax
    0.00 :   19d73:  jne    19c96 <nft_lookup_eval+0x56>
    0.00 :   19d79:  movl   $0xfffffffe,0x0(%rbp)
    0.00 :   19d80:  jmp    19cee <nft_lookup_eval+0xae>
    0.00 :   19d85:  mov    (%rsi),%rcx
    0.00 :   19d88:  lea    0x8(%rdx),%rdi
    0.00 :   19d8c:  and    $0xfffffffffffffff8,%rdi
    0.00 :   19d90:  mov    %rcx,(%rdx)
    0.00 :   19d93:  mov    -0x8(%rsi,%rax,1),%rcx
    0.00 :   19d98:  mov    %rcx,-0x8(%rdx,%rax,1)
    0.00 :   19d9d:  sub    %rdi,%rdx
    0.00 :   19da0:  lea    (%rax,%rdx,1),%ecx
    0.00 :   19da3:  sub    %rdx,%rsi
    0.00 :   19da6:  mov    %ecx,%eax
    0.00 :   19da8:  shr    $0x3,%eax
    0.00 :   19dab:  mov    %eax,%ecx
    0.00 :   19dad:  rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   19db0:  movzbl 0x8(%r12),%eax
    0.00 :   19db6:  test   %al,%al
    0.00 :   19db8:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19dbe:  jmp    19caa <nft_lookup_eval+0x6a>
    0.00 :   19dc3:  mov    (%rsi),%ecx
    0.00 :   19dc5:  mov    %ecx,(%rdx)
    0.00 :   19dc7:  mov    -0x4(%rsi,%rax,1),%ecx
    0.00 :   19dcb:  mov    %ecx,-0x4(%rdx,%rax,1)
    0.00 :   19dcf:  jmp    19ca0 <nft_lookup_eval+0x60>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   60.48 [virtio_net][1ef8]
   14.48 [virtio_net][1efc]
   13.86 [virtio_net][1ef0]
   11.19 [virtio_net][1f0b]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (8 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001ef0 <put_page>:
         : 6    put_page():
   13.86 :   1ef0:   sub    $0x8,%rsp // [virtio_net][1ef0]
    0.00 :   1ef4:   mov    0x8(%rdi),%rax
   60.48 :   1ef8:   test   $0x1,%al // [virtio_net][1ef8]
    0.00 :   1efa:   jne    1f68 <put_page+0x78>
   14.48 :   1efc:   xchg   %ax,%ax // [virtio_net][1efc]
    0.00 :   1efe:   xchg   %ax,%ax
    0.00 :   1f00:   mov    0x34(%rdi),%eax
    0.00 :   1f03:   test   %eax,%eax
    0.00 :   1f05:   je     1f6e <put_page+0x7e>
    0.00 :   1f07:   lock decl 0x34(%rdi)
   11.19 :   1f0b:   je     1f5f <put_page+0x6f> // [virtio_net][1f0b]
    0.00 :   1f0d:   add    $0x8,%rsp
    0.00 :   1f11:   jmp    1f16 <put_page+0x26>
    0.00 :   1f16:   test   $0xfff,%edi
    0.00 :   1f1c:   jne    1efe <put_page+0xe>
    0.00 :   1f1e:   mov    (%rdi),%rax
    0.00 :   1f21:   test   $0x10000,%eax
    0.00 :   1f26:   je     1efe <put_page+0xe>
    0.00 :   1f28:   mov    0x48(%rdi),%rax
    0.00 :   1f2c:   lea    -0x1(%rax),%rdx
    0.00 :   1f30:   test   $0x1,%al
    0.00 :   1f32:   cmovne %rdx,%rdi
    0.00 :   1f36:   jmp    1efe <put_page+0xe>
    0.00 :   1f38:   mov    (%rdi),%rax
    0.00 :   1f3b:   shr    $0x33,%rax
    0.00 :   1f3f:   and    $0x7,%eax
    0.00 :   1f42:   cmp    $0x4,%eax
    0.00 :   1f45:   jne    1f00 <put_page+0x10>
    0.00 :   1f47:   mov    $0x1,%esi
    0.00 :   1f4c:   mov    %rdi,(%rsp)
    0.00 :   1f50:   call   1f55 <put_page+0x65>
    0.00 :   1f55:   mov    (%rsp),%rdi
    0.00 :   1f59:   test   %al,%al
    0.00 :   1f5b:   jne    1f0d <put_page+0x1d>
    0.00 :   1f5d:   jmp    1f00 <put_page+0x10>
    0.00 :   1f5f:   add    $0x8,%rsp
    0.00 :   1f63:   jmp    1f68 <put_page+0x78>
    0.00 :   1f68:   lea    -0x1(%rax),%rdi
    0.00 :   1f6c:   jmp    1efe <put_page+0xe>
    0.00 :   1f6e:   mov    $0x0,%rsi
    0.00 :   1f75:   call   1f7a <put_page+0x8a>
    0.00 :   1f7a:   ud2

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   50.00 libc.so.6[97733]
   26.75 libc.so.6[976ab]
   13.87 libc.so.6[976f5]
    9.38 libc.so.6[97767]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (7 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000097680 <malloc_consolidate>:
         : 6     malloc_consolidate():
    0.00 :   97680:  push   %r15
    0.00 :   97682:  lea    0x60(%rdi),%rax
    0.00 :   97686:  mov    %rdi,%r15
    0.00 :   97689:  push   %r14
    0.00 :   9768b:  push   %r13
    0.00 :   9768d:  push   %r12
    0.00 :   9768f:  lea    0x10(%rdi),%r12
    0.00 :   97693:  push   %rbp
    0.00 :   97694:  push   %rbx
    0.00 :   97695:  sub    $0x38,%rsp
    0.00 :   97699:  movl   $0x0,0x8(%rdi)
    0.00 :   976a0:  mov    %rax,0x8(%rsp)
    0.00 :   976a5:  xor    %ebx,%ebx
    0.00 :   976a7:  xchg   %rbx,(%r12)
   26.75 :   976ab:  test   %rbx,%rbx // libc.so.6[976ab]
    0.00 :   976ae:  jne    97726 <malloc_consolidate+0xa6>
    0.00 :   976b0:  add    $0x8,%r12
    0.00 :   976b4:  cmp    %r12,0x8(%rsp)
    0.00 :   976b9:  jne    976a5 <malloc_consolidate+0x25>
    0.00 :   976bb:  add    $0x38,%rsp
    0.00 :   976bf:  pop    %rbx
    0.00 :   976c0:  pop    %rbp
    0.00 :   976c1:  pop    %r12
    0.00 :   976c3:  pop    %r13
    0.00 :   976c5:  pop    %r14
    0.00 :   976c7:  pop    %r15
    0.00 :   976c9:  ret
    0.00 :   976ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   976d0:  testb  $0x1,0x8(%rax,%r10,1)
    0.00 :   976d6:  je     977e0 <malloc_consolidate+0x160>
    0.00 :   976dc:  and    $0xfffffffffffffffe,%rcx
    0.00 :   976e0:  mov    %rcx,0x8(%rax)
    0.00 :   976e4:  mov    0x70(%r15),%rax
    0.00 :   976e8:  mov    %rbx,0x70(%r15)
    0.00 :   976ec:  movq   %rax,%xmm0
    0.00 :   976f1:  mov    %rbx,0x18(%rax)
   13.87 :   976f5:  movhps 0x8(%rsp),%xmm0 // libc.so.6[976f5]
    0.00 :   976fa:  cmp    $0x3ff,%rbp
    0.00 :   97701:  jbe    9770b <malloc_consolidate+0x8b>
    0.00 :   97703:  pxor   %xmm1,%xmm1
    0.00 :   97707:  movups %xmm1,0x20(%rbx)
    0.00 :   9770b:  mov    %rbp,%rax
    0.00 :   9770e:  movups %xmm0,0x10(%rbx)
    0.00 :   97712:  or     $0x1,%rax
    0.00 :   97716:  mov    %rax,0x8(%rbx)
    0.00 :   9771a:  mov    %rbp,(%rbx,%rbp,1)
    0.00 :   9771e:  cmp    %r14,%r13
    0.00 :   97721:  je     976b0 <malloc_consolidate+0x30>
    0.00 :   97723:  mov    %r9,%rbx
    0.00 :   97726:  test   $0xf,%bl
    0.00 :   97729:  jne    97800 <malloc_consolidate+0x180>
    0.00 :   9772f:  mov    0x8(%rbx),%rdx
   50.00 :   97733:  mov    %edx,%eax // libc.so.6[97733]
    0.00 :   97735:  shr    $0x4,%eax
    0.00 :   97738:  sub    $0x2,%eax
    0.00 :   9773b:  lea    0x10(%r15,%rax,8),%rax
    0.00 :   97740:  cmp    %rax,%r12
    0.00 :   97743:  jne    9781c <malloc_consolidate+0x19c>
    0.00 :   97749:  mov    %rdx,%rbp
    0.00 :   9774c:  mov    0x10(%rbx),%r13
    0.00 :   97750:  lea    0x10(%rbx),%r14
    0.00 :   97754:  and    $0xfffffffffffffff8,%rbp
    0.00 :   97758:  shr    $0xc,%r14
    0.00 :   9775c:  lea    (%rbx,%rbp,1),%rax
    0.00 :   97760:  mov    %r13,%r9
    0.00 :   97763:  mov    0x8(%rax),%rcx
    9.38 :   97767:  xor    %r14,%r9 // libc.so.6[97767]
    0.00 :   9776a:  mov    %rcx,%r10
    0.00 :   9776d:  and    $0xfffffffffffffff8,%r10
    0.00 :   97771:  and    $0x1,%edx
    0.00 :   97774:  jne    977c0 <malloc_consolidate+0x140>
    0.00 :   97776:  mov    (%rbx),%rdx
    0.00 :   97779:  sub    %rdx,%rbx
    0.00 :   9777c:  add    %rdx,%rbp
    0.00 :   9777f:  mov    0x8(%rbx),%rdi
    0.00 :   97783:  and    $0xfffffffffffffff8,%rdi
    0.00 :   97787:  cmp    %rdx,%rdi
    0.00 :   9778a:  jne    97810 <malloc_consolidate+0x190>
    0.00 :   97790:  mov    %rbx,%rdi
    0.00 :   97793:  mov    %r10,0x28(%rsp)
    0.00 :   97798:  mov    %rax,0x20(%rsp)
    0.00 :   9779d:  mov    %r9,0x18(%rsp)
    0.00 :   977a2:  mov    %rcx,0x10(%rsp)
    0.00 :   977a7:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   977ac:  mov    0x28(%rsp),%r10
    0.00 :   977b1:  mov    0x20(%rsp),%rax
    0.00 :   977b6:  mov    0x18(%rsp),%r9
    0.00 :   977bb:  mov    0x10(%rsp),%rcx
    0.00 :   977c0:  cmp    %rax,0x60(%r15)
    0.00 :   977c4:  jne    976d0 <malloc_consolidate+0x50>
    0.00 :   977ca:  add    %r10,%rbp
    0.00 :   977cd:  or     $0x1,%rbp
    0.00 :   977d1:  mov    %rbp,0x8(%rbx)
    0.00 :   977d5:  mov    %rbx,0x60(%r15)
    0.00 :   977d9:  jmp    9771e <malloc_consolidate+0x9e>
    0.00 :   977de:  xchg   %ax,%ax
    0.00 :   977e0:  mov    %rax,%rdi
    0.00 :   977e3:  mov    %r9,0x10(%rsp)
    0.00 :   977e8:  add    %r10,%rbp
    0.00 :   977eb:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   977f0:  mov    0x10(%rsp),%r9
    0.00 :   977f5:  jmp    976e4 <malloc_consolidate+0x64>
    0.00 :   977fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   97800:  lea    0x1056a9(%rip),%rdi        # 19ceb0 <aliasfile.0+0x1468>
    0.00 :   97807:  call   96b80 <malloc_printerr>
    0.00 :   9780c:  nopl   0x0(%rax)
    0.00 :   97810:  lea    0x105701(%rip),%rdi        # 19cf18 <aliasfile.0+0x14d0>
    0.00 :   97817:  call   96b80 <malloc_printerr>
    0.00 :   9781c:  lea    0x1056c5(%rip),%rdi        # 19cee8 <aliasfile.0+0x14a0>
    0.00 :   97823:  call   96b80 <malloc_printerr>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   35.14 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:181
   34.81 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:161
   30.05 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:2111
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (3 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000023430 <strcmp>:
         : 6     strcmp():
    0.00 :   23430:  endbr64
    0.00 :   23434:  mov    %esi,%ecx
    0.00 :   23436:  mov    %edi,%eax
    0.00 :   23438:  and    $0x3f,%rcx
    0.00 :   2343c:  and    $0x3f,%rax
    0.00 :   23440:  cmp    $0x30,%ecx
    0.00 :   23443:  ja     23490 <strcmp+0x60>
    0.00 :   23445:  cmp    $0x30,%eax
    0.00 :   23448:  ja     23490 <strcmp+0x60>
    0.00 :   2344a:  movlpd (%rdi),%xmm1
   34.81 :   2344e:  movlpd (%rsi),%xmm2 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:161
    0.00 :   23452:  movhpd 0x8(%rdi),%xmm1
    0.00 :   23457:  movhpd 0x8(%rsi),%xmm2
    0.00 :   2345c:  pxor   %xmm0,%xmm0
   35.14 :   23460:  pcmpeqb %xmm1,%xmm0 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:181
    0.00 :   23464:  pcmpeqb %xmm2,%xmm1
    0.00 :   23468:  psubb  %xmm0,%xmm1
    0.00 :   2346c:  pmovmskb %xmm1,%edx
    0.00 :   23470:  sub    $0xffff,%edx
    0.00 :   23476:  jne    24850 <strcmp+0x1420>
    0.00 :   2347c:  add    $0x10,%rsi
    0.00 :   23480:  add    $0x10,%rdi
    0.00 :   23484:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2348f:  nop
    0.00 :   23490:  and    $0xfffffffffffffff0,%rsi
    0.00 :   23494:  and    $0xfffffffffffffff0,%rdi
    0.00 :   23498:  mov    $0xffff,%edx
    0.00 :   2349d:  xor    %r8d,%r8d
    0.00 :   234a0:  and    $0xf,%ecx
    0.00 :   234a3:  and    $0xf,%eax
    0.00 :   234a6:  cmp    %eax,%ecx
    0.00 :   234a8:  je     234d0 <strcmp+0xa0>
    0.00 :   234aa:  ja     234b3 <strcmp+0x83>
    0.00 :   234ac:  mov    %edx,%r8d
    0.00 :   234af:  xchg   %eax,%ecx
    0.00 :   234b0:  xchg   %rsi,%rdi
    0.00 :   234b3:  lea    0xf(%rax),%r9
    0.00 :   234b7:  sub    %rcx,%r9
    0.00 :   234ba:  lea    0x5d57(%rip),%r10        # 29218 <debopts.5+0x2d8>
    0.00 :   234c1:  movslq (%r10,%r9,4),%r9
    0.00 :   234c5:  lea    (%r10,%r9,1),%r10
    0.00 :   234c9:  notrack jmp *%r10
    0.00 :   234cd:  nopl   (%rax)
    0.00 :   234d0:  movdqa (%rsi),%xmm1
    0.00 :   234d4:  pxor   %xmm0,%xmm0
    0.00 :   234d8:  pcmpeqb %xmm1,%xmm0
    0.00 :   234dc:  pcmpeqb (%rdi),%xmm1
    0.00 :   234e0:  psubb  %xmm0,%xmm1
    0.00 :   234e4:  pmovmskb %xmm1,%r9d
    0.00 :   234e9:  shr    %cl,%edx
    0.00 :   234eb:  shr    %cl,%r9d
    0.00 :   234ee:  sub    %r9d,%edx
    0.00 :   234f1:  jne    24835 <strcmp+0x1405>
    0.00 :   234f7:  mov    $0x10,%rcx
    0.00 :   234fe:  mov    $0x10,%r9
    0.00 :   23505:  pxor   %xmm0,%xmm0
    0.00 :   23509:  nopl   0x0(%rax)
    0.00 :   23510:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23515:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2351a:  pcmpeqb %xmm1,%xmm0
    0.00 :   2351e:  pcmpeqb %xmm2,%xmm1
    0.00 :   23522:  psubb  %xmm0,%xmm1
    0.00 :   23526:  pmovmskb %xmm1,%edx
    0.00 :   2352a:  sub    $0xffff,%edx
    0.00 :   23530:  jne    24830 <strcmp+0x1400>
    0.00 :   23536:  add    $0x10,%rcx
    0.00 :   2353a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2353f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23544:  pcmpeqb %xmm1,%xmm0
    0.00 :   23548:  pcmpeqb %xmm2,%xmm1
    0.00 :   2354c:  psubb  %xmm0,%xmm1
    0.00 :   23550:  pmovmskb %xmm1,%edx
    0.00 :   23554:  sub    $0xffff,%edx
    0.00 :   2355a:  jne    24830 <strcmp+0x1400>
    0.00 :   23560:  add    $0x10,%rcx
    0.00 :   23564:  jmp    23510 <strcmp+0xe0>
    0.00 :   23566:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   23570:  pxor   %xmm0,%xmm0
    0.00 :   23574:  movdqa (%rdi),%xmm2
    0.00 :   23578:  movdqa (%rsi),%xmm1
    0.00 :   2357c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23580:  pslldq $0xf,%xmm2
    0.00 :   23585:  pcmpeqb %xmm1,%xmm2
    0.00 :   23589:  psubb  %xmm0,%xmm2
    0.00 :   2358d:  pmovmskb %xmm2,%r9d
    0.00 :   23592:  shr    %cl,%edx
    0.00 :   23594:  shr    %cl,%r9d
    0.00 :   23597:  sub    %r9d,%edx
    0.00 :   2359a:  jne    24835 <strcmp+0x1405>
    0.00 :   235a0:  movdqa (%rdi),%xmm3
    0.00 :   235a4:  pxor   %xmm0,%xmm0
    0.00 :   235a8:  mov    $0x10,%rcx
    0.00 :   235af:  mov    $0x1,%r9d
    0.00 :   235b5:  lea    0x1(%rdi),%r10
    0.00 :   235b9:  and    $0xfff,%r10
    0.00 :   235c0:  sub    $0x1000,%r10
    0.00 :   235c7:  nopw   0x0(%rax,%rax,1)
    0.00 :   235d0:  add    $0x10,%r10
    0.00 :   235d4:  jg     23670 <strcmp+0x240>
    0.00 :   235da:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   235df:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   235e4:  movdqa %xmm2,%xmm4
    0.00 :   235e8:  psrldq $0x1,%xmm3
    0.00 :   235ed:  pslldq $0xf,%xmm2
    0.00 :   235f2:  por    %xmm3,%xmm2
    0.00 :   235f6:  pcmpeqb %xmm1,%xmm0
    0.00 :   235fa:  pcmpeqb %xmm2,%xmm1
    0.00 :   235fe:  psubb  %xmm0,%xmm1
    0.00 :   23602:  pmovmskb %xmm1,%edx
    0.00 :   23606:  sub    $0xffff,%edx
    0.00 :   2360c:  jne    24830 <strcmp+0x1400>
    0.00 :   23612:  add    $0x10,%rcx
    0.00 :   23616:  movdqa %xmm4,%xmm3
    0.00 :   2361a:  add    $0x10,%r10
    0.00 :   2361e:  jg     23670 <strcmp+0x240>
    0.00 :   23620:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23625:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2362a:  movdqa %xmm2,%xmm4
    0.00 :   2362e:  psrldq $0x1,%xmm3
    0.00 :   23633:  pslldq $0xf,%xmm2
    0.00 :   23638:  por    %xmm3,%xmm2
    0.00 :   2363c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23640:  pcmpeqb %xmm2,%xmm1
    0.00 :   23644:  psubb  %xmm0,%xmm1
    0.00 :   23648:  pmovmskb %xmm1,%edx
    0.00 :   2364c:  sub    $0xffff,%edx
    0.00 :   23652:  jne    24830 <strcmp+0x1400>
    0.00 :   23658:  add    $0x10,%rcx
    0.00 :   2365c:  movdqa %xmm4,%xmm3
    0.00 :   23660:  jmp    235d0 <strcmp+0x1a0>
    0.00 :   23665:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23670:  pcmpeqb %xmm3,%xmm0
    0.00 :   23674:  pmovmskb %xmm0,%edx
    0.00 :   23678:  test   $0xfffe,%edx
    0.00 :   2367e:  jne    23690 <strcmp+0x260>
    0.00 :   23680:  pxor   %xmm0,%xmm0
    0.00 :   23684:  sub    $0x1000,%r10
    0.00 :   2368b:  jmp    235da <strcmp+0x1aa>
    0.00 :   23690:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23695:  psrldq $0x1,%xmm0
    0.00 :   2369a:  psrldq $0x1,%xmm3
    0.00 :   2369f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   236a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   236af:  nop
    0.00 :   236b0:  pxor   %xmm0,%xmm0
    0.00 :   236b4:  movdqa (%rdi),%xmm2
    0.00 :   236b8:  movdqa (%rsi),%xmm1
    0.00 :   236bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   236c0:  pslldq $0xe,%xmm2
    0.00 :   236c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   236c9:  psubb  %xmm0,%xmm2
    0.00 :   236cd:  pmovmskb %xmm2,%r9d
    0.00 :   236d2:  shr    %cl,%edx
    0.00 :   236d4:  shr    %cl,%r9d
    0.00 :   236d7:  sub    %r9d,%edx
    0.00 :   236da:  jne    24835 <strcmp+0x1405>
    0.00 :   236e0:  movdqa (%rdi),%xmm3
    0.00 :   236e4:  pxor   %xmm0,%xmm0
    0.00 :   236e8:  mov    $0x10,%rcx
    0.00 :   236ef:  mov    $0x2,%r9d
    0.00 :   236f5:  lea    0x2(%rdi),%r10
    0.00 :   236f9:  and    $0xfff,%r10
    0.00 :   23700:  sub    $0x1000,%r10
    0.00 :   23707:  nopw   0x0(%rax,%rax,1)
    0.00 :   23710:  add    $0x10,%r10
    0.00 :   23714:  jg     237b0 <strcmp+0x380>
    0.00 :   2371a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2371f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23724:  movdqa %xmm2,%xmm4
    0.00 :   23728:  psrldq $0x2,%xmm3
    0.00 :   2372d:  pslldq $0xe,%xmm2
    0.00 :   23732:  por    %xmm3,%xmm2
    0.00 :   23736:  pcmpeqb %xmm1,%xmm0
    0.00 :   2373a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2373e:  psubb  %xmm0,%xmm1
    0.00 :   23742:  pmovmskb %xmm1,%edx
    0.00 :   23746:  sub    $0xffff,%edx
    0.00 :   2374c:  jne    24830 <strcmp+0x1400>
    0.00 :   23752:  add    $0x10,%rcx
    0.00 :   23756:  movdqa %xmm4,%xmm3
    0.00 :   2375a:  add    $0x10,%r10
    0.00 :   2375e:  jg     237b0 <strcmp+0x380>
    0.00 :   23760:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23765:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2376a:  movdqa %xmm2,%xmm4
    0.00 :   2376e:  psrldq $0x2,%xmm3
    0.00 :   23773:  pslldq $0xe,%xmm2
    0.00 :   23778:  por    %xmm3,%xmm2
    0.00 :   2377c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23780:  pcmpeqb %xmm2,%xmm1
    0.00 :   23784:  psubb  %xmm0,%xmm1
    0.00 :   23788:  pmovmskb %xmm1,%edx
    0.00 :   2378c:  sub    $0xffff,%edx
    0.00 :   23792:  jne    24830 <strcmp+0x1400>
    0.00 :   23798:  add    $0x10,%rcx
    0.00 :   2379c:  movdqa %xmm4,%xmm3
    0.00 :   237a0:  jmp    23710 <strcmp+0x2e0>
    0.00 :   237a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   237b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   237b4:  pmovmskb %xmm0,%edx
    0.00 :   237b8:  test   $0xfffc,%edx
    0.00 :   237be:  jne    237d0 <strcmp+0x3a0>
    0.00 :   237c0:  pxor   %xmm0,%xmm0
    0.00 :   237c4:  sub    $0x1000,%r10
    0.00 :   237cb:  jmp    2371a <strcmp+0x2ea>
    0.00 :   237d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   237d5:  psrldq $0x2,%xmm0
    0.00 :   237da:  psrldq $0x2,%xmm3
    0.00 :   237df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   237e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   237ef:  nop
    0.00 :   237f0:  pxor   %xmm0,%xmm0
    0.00 :   237f4:  movdqa (%rdi),%xmm2
    0.00 :   237f8:  movdqa (%rsi),%xmm1
    0.00 :   237fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23800:  pslldq $0xd,%xmm2
    0.00 :   23805:  pcmpeqb %xmm1,%xmm2
    0.00 :   23809:  psubb  %xmm0,%xmm2
    0.00 :   2380d:  pmovmskb %xmm2,%r9d
    0.00 :   23812:  shr    %cl,%edx
    0.00 :   23814:  shr    %cl,%r9d
    0.00 :   23817:  sub    %r9d,%edx
    0.00 :   2381a:  jne    24835 <strcmp+0x1405>
    0.00 :   23820:  movdqa (%rdi),%xmm3
    0.00 :   23824:  pxor   %xmm0,%xmm0
    0.00 :   23828:  mov    $0x10,%rcx
    0.00 :   2382f:  mov    $0x3,%r9d
    0.00 :   23835:  lea    0x3(%rdi),%r10
    0.00 :   23839:  and    $0xfff,%r10
    0.00 :   23840:  sub    $0x1000,%r10
    0.00 :   23847:  nopw   0x0(%rax,%rax,1)
    0.00 :   23850:  add    $0x10,%r10
    0.00 :   23854:  jg     238f0 <strcmp+0x4c0>
    0.00 :   2385a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2385f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23864:  movdqa %xmm2,%xmm4
    0.00 :   23868:  psrldq $0x3,%xmm3
    0.00 :   2386d:  pslldq $0xd,%xmm2
    0.00 :   23872:  por    %xmm3,%xmm2
    0.00 :   23876:  pcmpeqb %xmm1,%xmm0
    0.00 :   2387a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2387e:  psubb  %xmm0,%xmm1
    0.00 :   23882:  pmovmskb %xmm1,%edx
    0.00 :   23886:  sub    $0xffff,%edx
    0.00 :   2388c:  jne    24830 <strcmp+0x1400>
    0.00 :   23892:  add    $0x10,%rcx
    0.00 :   23896:  movdqa %xmm4,%xmm3
    0.00 :   2389a:  add    $0x10,%r10
    0.00 :   2389e:  jg     238f0 <strcmp+0x4c0>
    0.00 :   238a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   238a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   238aa:  movdqa %xmm2,%xmm4
    0.00 :   238ae:  psrldq $0x3,%xmm3
    0.00 :   238b3:  pslldq $0xd,%xmm2
    0.00 :   238b8:  por    %xmm3,%xmm2
    0.00 :   238bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   238c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   238c4:  psubb  %xmm0,%xmm1
    0.00 :   238c8:  pmovmskb %xmm1,%edx
    0.00 :   238cc:  sub    $0xffff,%edx
    0.00 :   238d2:  jne    24830 <strcmp+0x1400>
    0.00 :   238d8:  add    $0x10,%rcx
    0.00 :   238dc:  movdqa %xmm4,%xmm3
    0.00 :   238e0:  jmp    23850 <strcmp+0x420>
    0.00 :   238e5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   238f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   238f4:  pmovmskb %xmm0,%edx
    0.00 :   238f8:  test   $0xfff8,%edx
    0.00 :   238fe:  jne    23910 <strcmp+0x4e0>
    0.00 :   23900:  pxor   %xmm0,%xmm0
    0.00 :   23904:  sub    $0x1000,%r10
    0.00 :   2390b:  jmp    2385a <strcmp+0x42a>
    0.00 :   23910:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23915:  psrldq $0x3,%xmm0
    0.00 :   2391a:  psrldq $0x3,%xmm3
    0.00 :   2391f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23924:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2392f:  nop
    0.00 :   23930:  pxor   %xmm0,%xmm0
    0.00 :   23934:  movdqa (%rdi),%xmm2
    0.00 :   23938:  movdqa (%rsi),%xmm1
    0.00 :   2393c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23940:  pslldq $0xc,%xmm2
    0.00 :   23945:  pcmpeqb %xmm1,%xmm2
    0.00 :   23949:  psubb  %xmm0,%xmm2
    0.00 :   2394d:  pmovmskb %xmm2,%r9d
    0.00 :   23952:  shr    %cl,%edx
    0.00 :   23954:  shr    %cl,%r9d
    0.00 :   23957:  sub    %r9d,%edx
    0.00 :   2395a:  jne    24835 <strcmp+0x1405>
    0.00 :   23960:  movdqa (%rdi),%xmm3
    0.00 :   23964:  pxor   %xmm0,%xmm0
    0.00 :   23968:  mov    $0x10,%rcx
    0.00 :   2396f:  mov    $0x4,%r9d
    0.00 :   23975:  lea    0x4(%rdi),%r10
    0.00 :   23979:  and    $0xfff,%r10
    0.00 :   23980:  sub    $0x1000,%r10
    0.00 :   23987:  nopw   0x0(%rax,%rax,1)
    0.00 :   23990:  add    $0x10,%r10
    0.00 :   23994:  jg     23a30 <strcmp+0x600>
    0.00 :   2399a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2399f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   239a4:  movdqa %xmm2,%xmm4
    0.00 :   239a8:  psrldq $0x4,%xmm3
    0.00 :   239ad:  pslldq $0xc,%xmm2
    0.00 :   239b2:  por    %xmm3,%xmm2
    0.00 :   239b6:  pcmpeqb %xmm1,%xmm0
    0.00 :   239ba:  pcmpeqb %xmm2,%xmm1
    0.00 :   239be:  psubb  %xmm0,%xmm1
    0.00 :   239c2:  pmovmskb %xmm1,%edx
    0.00 :   239c6:  sub    $0xffff,%edx
    0.00 :   239cc:  jne    24830 <strcmp+0x1400>
    0.00 :   239d2:  add    $0x10,%rcx
    0.00 :   239d6:  movdqa %xmm4,%xmm3
    0.00 :   239da:  add    $0x10,%r10
    0.00 :   239de:  jg     23a30 <strcmp+0x600>
    0.00 :   239e0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   239e5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   239ea:  movdqa %xmm2,%xmm4
    0.00 :   239ee:  psrldq $0x4,%xmm3
    0.00 :   239f3:  pslldq $0xc,%xmm2
    0.00 :   239f8:  por    %xmm3,%xmm2
    0.00 :   239fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23a00:  pcmpeqb %xmm2,%xmm1
    0.00 :   23a04:  psubb  %xmm0,%xmm1
    0.00 :   23a08:  pmovmskb %xmm1,%edx
    0.00 :   23a0c:  sub    $0xffff,%edx
    0.00 :   23a12:  jne    24830 <strcmp+0x1400>
    0.00 :   23a18:  add    $0x10,%rcx
    0.00 :   23a1c:  movdqa %xmm4,%xmm3
    0.00 :   23a20:  jmp    23990 <strcmp+0x560>
    0.00 :   23a25:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23a30:  pcmpeqb %xmm3,%xmm0
    0.00 :   23a34:  pmovmskb %xmm0,%edx
    0.00 :   23a38:  test   $0xfff0,%edx
    0.00 :   23a3e:  jne    23a50 <strcmp+0x620>
    0.00 :   23a40:  pxor   %xmm0,%xmm0
    0.00 :   23a44:  sub    $0x1000,%r10
    0.00 :   23a4b:  jmp    2399a <strcmp+0x56a>
    0.00 :   23a50:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23a55:  psrldq $0x4,%xmm0
    0.00 :   23a5a:  psrldq $0x4,%xmm3
    0.00 :   23a5f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23a64:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23a6f:  nop
    0.00 :   23a70:  pxor   %xmm0,%xmm0
    0.00 :   23a74:  movdqa (%rdi),%xmm2
    0.00 :   23a78:  movdqa (%rsi),%xmm1
    0.00 :   23a7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23a80:  pslldq $0xb,%xmm2
    0.00 :   23a85:  pcmpeqb %xmm1,%xmm2
    0.00 :   23a89:  psubb  %xmm0,%xmm2
    0.00 :   23a8d:  pmovmskb %xmm2,%r9d
    0.00 :   23a92:  shr    %cl,%edx
    0.00 :   23a94:  shr    %cl,%r9d
    0.00 :   23a97:  sub    %r9d,%edx
    0.00 :   23a9a:  jne    24835 <strcmp+0x1405>
    0.00 :   23aa0:  movdqa (%rdi),%xmm3
    0.00 :   23aa4:  pxor   %xmm0,%xmm0
    0.00 :   23aa8:  mov    $0x10,%rcx
    0.00 :   23aaf:  mov    $0x5,%r9d
    0.00 :   23ab5:  lea    0x5(%rdi),%r10
    0.00 :   23ab9:  and    $0xfff,%r10
    0.00 :   23ac0:  sub    $0x1000,%r10
    0.00 :   23ac7:  nopw   0x0(%rax,%rax,1)
    0.00 :   23ad0:  add    $0x10,%r10
    0.00 :   23ad4:  jg     23b70 <strcmp+0x740>
    0.00 :   23ada:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23adf:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23ae4:  movdqa %xmm2,%xmm4
    0.00 :   23ae8:  psrldq $0x5,%xmm3
    0.00 :   23aed:  pslldq $0xb,%xmm2
    0.00 :   23af2:  por    %xmm3,%xmm2
    0.00 :   23af6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23afa:  pcmpeqb %xmm2,%xmm1
    0.00 :   23afe:  psubb  %xmm0,%xmm1
    0.00 :   23b02:  pmovmskb %xmm1,%edx
    0.00 :   23b06:  sub    $0xffff,%edx
    0.00 :   23b0c:  jne    24830 <strcmp+0x1400>
    0.00 :   23b12:  add    $0x10,%rcx
    0.00 :   23b16:  movdqa %xmm4,%xmm3
    0.00 :   23b1a:  add    $0x10,%r10
    0.00 :   23b1e:  jg     23b70 <strcmp+0x740>
    0.00 :   23b20:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23b25:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23b2a:  movdqa %xmm2,%xmm4
    0.00 :   23b2e:  psrldq $0x5,%xmm3
    0.00 :   23b33:  pslldq $0xb,%xmm2
    0.00 :   23b38:  por    %xmm3,%xmm2
    0.00 :   23b3c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23b40:  pcmpeqb %xmm2,%xmm1
    0.00 :   23b44:  psubb  %xmm0,%xmm1
    0.00 :   23b48:  pmovmskb %xmm1,%edx
    0.00 :   23b4c:  sub    $0xffff,%edx
    0.00 :   23b52:  jne    24830 <strcmp+0x1400>
    0.00 :   23b58:  add    $0x10,%rcx
    0.00 :   23b5c:  movdqa %xmm4,%xmm3
    0.00 :   23b60:  jmp    23ad0 <strcmp+0x6a0>
    0.00 :   23b65:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23b70:  pcmpeqb %xmm3,%xmm0
    0.00 :   23b74:  pmovmskb %xmm0,%edx
    0.00 :   23b78:  test   $0xffe0,%edx
    0.00 :   23b7e:  jne    23b90 <strcmp+0x760>
    0.00 :   23b80:  pxor   %xmm0,%xmm0
    0.00 :   23b84:  sub    $0x1000,%r10
    0.00 :   23b8b:  jmp    23ada <strcmp+0x6aa>
    0.00 :   23b90:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23b95:  psrldq $0x5,%xmm0
    0.00 :   23b9a:  psrldq $0x5,%xmm3
    0.00 :   23b9f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23ba4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23baf:  nop
    0.00 :   23bb0:  pxor   %xmm0,%xmm0
    0.00 :   23bb4:  movdqa (%rdi),%xmm2
    0.00 :   23bb8:  movdqa (%rsi),%xmm1
    0.00 :   23bbc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23bc0:  pslldq $0xa,%xmm2
    0.00 :   23bc5:  pcmpeqb %xmm1,%xmm2
    0.00 :   23bc9:  psubb  %xmm0,%xmm2
    0.00 :   23bcd:  pmovmskb %xmm2,%r9d
    0.00 :   23bd2:  shr    %cl,%edx
    0.00 :   23bd4:  shr    %cl,%r9d
    0.00 :   23bd7:  sub    %r9d,%edx
    0.00 :   23bda:  jne    24835 <strcmp+0x1405>
    0.00 :   23be0:  movdqa (%rdi),%xmm3
    0.00 :   23be4:  pxor   %xmm0,%xmm0
    0.00 :   23be8:  mov    $0x10,%rcx
    0.00 :   23bef:  mov    $0x6,%r9d
    0.00 :   23bf5:  lea    0x6(%rdi),%r10
    0.00 :   23bf9:  and    $0xfff,%r10
    0.00 :   23c00:  sub    $0x1000,%r10
    0.00 :   23c07:  nopw   0x0(%rax,%rax,1)
    0.00 :   23c10:  add    $0x10,%r10
    0.00 :   23c14:  jg     23cb0 <strcmp+0x880>
    0.00 :   23c1a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23c1f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23c24:  movdqa %xmm2,%xmm4
    0.00 :   23c28:  psrldq $0x6,%xmm3
    0.00 :   23c2d:  pslldq $0xa,%xmm2
    0.00 :   23c32:  por    %xmm3,%xmm2
    0.00 :   23c36:  pcmpeqb %xmm1,%xmm0
    0.00 :   23c3a:  pcmpeqb %xmm2,%xmm1
    0.00 :   23c3e:  psubb  %xmm0,%xmm1
    0.00 :   23c42:  pmovmskb %xmm1,%edx
    0.00 :   23c46:  sub    $0xffff,%edx
    0.00 :   23c4c:  jne    24830 <strcmp+0x1400>
    0.00 :   23c52:  add    $0x10,%rcx
    0.00 :   23c56:  movdqa %xmm4,%xmm3
    0.00 :   23c5a:  add    $0x10,%r10
    0.00 :   23c5e:  jg     23cb0 <strcmp+0x880>
    0.00 :   23c60:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23c65:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23c6a:  movdqa %xmm2,%xmm4
    0.00 :   23c6e:  psrldq $0x6,%xmm3
    0.00 :   23c73:  pslldq $0xa,%xmm2
    0.00 :   23c78:  por    %xmm3,%xmm2
    0.00 :   23c7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23c80:  pcmpeqb %xmm2,%xmm1
    0.00 :   23c84:  psubb  %xmm0,%xmm1
    0.00 :   23c88:  pmovmskb %xmm1,%edx
    0.00 :   23c8c:  sub    $0xffff,%edx
    0.00 :   23c92:  jne    24830 <strcmp+0x1400>
    0.00 :   23c98:  add    $0x10,%rcx
    0.00 :   23c9c:  movdqa %xmm4,%xmm3
    0.00 :   23ca0:  jmp    23c10 <strcmp+0x7e0>
    0.00 :   23ca5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23cb0:  pcmpeqb %xmm3,%xmm0
    0.00 :   23cb4:  pmovmskb %xmm0,%edx
    0.00 :   23cb8:  test   $0xffc0,%edx
    0.00 :   23cbe:  jne    23cd0 <strcmp+0x8a0>
    0.00 :   23cc0:  pxor   %xmm0,%xmm0
    0.00 :   23cc4:  sub    $0x1000,%r10
    0.00 :   23ccb:  jmp    23c1a <strcmp+0x7ea>
    0.00 :   23cd0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23cd5:  psrldq $0x6,%xmm0
    0.00 :   23cda:  psrldq $0x6,%xmm3
    0.00 :   23cdf:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23ce4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23cef:  nop
    0.00 :   23cf0:  pxor   %xmm0,%xmm0
    0.00 :   23cf4:  movdqa (%rdi),%xmm2
    0.00 :   23cf8:  movdqa (%rsi),%xmm1
    0.00 :   23cfc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23d00:  pslldq $0x9,%xmm2
    0.00 :   23d05:  pcmpeqb %xmm1,%xmm2
    0.00 :   23d09:  psubb  %xmm0,%xmm2
    0.00 :   23d0d:  pmovmskb %xmm2,%r9d
    0.00 :   23d12:  shr    %cl,%edx
    0.00 :   23d14:  shr    %cl,%r9d
    0.00 :   23d17:  sub    %r9d,%edx
    0.00 :   23d1a:  jne    24835 <strcmp+0x1405>
    0.00 :   23d20:  movdqa (%rdi),%xmm3
    0.00 :   23d24:  pxor   %xmm0,%xmm0
    0.00 :   23d28:  mov    $0x10,%rcx
    0.00 :   23d2f:  mov    $0x7,%r9d
    0.00 :   23d35:  lea    0x7(%rdi),%r10
    0.00 :   23d39:  and    $0xfff,%r10
    0.00 :   23d40:  sub    $0x1000,%r10
    0.00 :   23d47:  nopw   0x0(%rax,%rax,1)
    0.00 :   23d50:  add    $0x10,%r10
    0.00 :   23d54:  jg     23df0 <strcmp+0x9c0>
    0.00 :   23d5a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23d5f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23d64:  movdqa %xmm2,%xmm4
    0.00 :   23d68:  psrldq $0x7,%xmm3
    0.00 :   23d6d:  pslldq $0x9,%xmm2
    0.00 :   23d72:  por    %xmm3,%xmm2
    0.00 :   23d76:  pcmpeqb %xmm1,%xmm0
    0.00 :   23d7a:  pcmpeqb %xmm2,%xmm1
    0.00 :   23d7e:  psubb  %xmm0,%xmm1
    0.00 :   23d82:  pmovmskb %xmm1,%edx
    0.00 :   23d86:  sub    $0xffff,%edx
    0.00 :   23d8c:  jne    24830 <strcmp+0x1400>
    0.00 :   23d92:  add    $0x10,%rcx
    0.00 :   23d96:  movdqa %xmm4,%xmm3
    0.00 :   23d9a:  add    $0x10,%r10
    0.00 :   23d9e:  jg     23df0 <strcmp+0x9c0>
    0.00 :   23da0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23da5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23daa:  movdqa %xmm2,%xmm4
    0.00 :   23dae:  psrldq $0x7,%xmm3
    0.00 :   23db3:  pslldq $0x9,%xmm2
    0.00 :   23db8:  por    %xmm3,%xmm2
    0.00 :   23dbc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23dc0:  pcmpeqb %xmm2,%xmm1
    0.00 :   23dc4:  psubb  %xmm0,%xmm1
    0.00 :   23dc8:  pmovmskb %xmm1,%edx
    0.00 :   23dcc:  sub    $0xffff,%edx
    0.00 :   23dd2:  jne    24830 <strcmp+0x1400>
    0.00 :   23dd8:  add    $0x10,%rcx
    0.00 :   23ddc:  movdqa %xmm4,%xmm3
    0.00 :   23de0:  jmp    23d50 <strcmp+0x920>
    0.00 :   23de5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23df0:  pcmpeqb %xmm3,%xmm0
    0.00 :   23df4:  pmovmskb %xmm0,%edx
    0.00 :   23df8:  test   $0xff80,%edx
    0.00 :   23dfe:  jne    23e10 <strcmp+0x9e0>
    0.00 :   23e00:  pxor   %xmm0,%xmm0
    0.00 :   23e04:  sub    $0x1000,%r10
    0.00 :   23e0b:  jmp    23d5a <strcmp+0x92a>
    0.00 :   23e10:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23e15:  psrldq $0x7,%xmm0
    0.00 :   23e1a:  psrldq $0x7,%xmm3
    0.00 :   23e1f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23e24:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23e2f:  nop
    0.00 :   23e30:  pxor   %xmm0,%xmm0
    0.00 :   23e34:  movdqa (%rdi),%xmm2
    0.00 :   23e38:  movdqa (%rsi),%xmm1
    0.00 :   23e3c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23e40:  pslldq $0x8,%xmm2
    0.00 :   23e45:  pcmpeqb %xmm1,%xmm2
    0.00 :   23e49:  psubb  %xmm0,%xmm2
    0.00 :   23e4d:  pmovmskb %xmm2,%r9d
    0.00 :   23e52:  shr    %cl,%edx
    0.00 :   23e54:  shr    %cl,%r9d
    0.00 :   23e57:  sub    %r9d,%edx
    0.00 :   23e5a:  jne    24835 <strcmp+0x1405>
    0.00 :   23e60:  movdqa (%rdi),%xmm3
    0.00 :   23e64:  pxor   %xmm0,%xmm0
    0.00 :   23e68:  mov    $0x10,%rcx
    0.00 :   23e6f:  mov    $0x8,%r9d
    0.00 :   23e75:  lea    0x8(%rdi),%r10
    0.00 :   23e79:  and    $0xfff,%r10
    0.00 :   23e80:  sub    $0x1000,%r10
    0.00 :   23e87:  nopw   0x0(%rax,%rax,1)
    0.00 :   23e90:  add    $0x10,%r10
    0.00 :   23e94:  jg     23f30 <strcmp+0xb00>
    0.00 :   23e9a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23e9f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23ea4:  movdqa %xmm2,%xmm4
    0.00 :   23ea8:  psrldq $0x8,%xmm3
    0.00 :   23ead:  pslldq $0x8,%xmm2
    0.00 :   23eb2:  por    %xmm3,%xmm2
    0.00 :   23eb6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23eba:  pcmpeqb %xmm2,%xmm1
    0.00 :   23ebe:  psubb  %xmm0,%xmm1
    0.00 :   23ec2:  pmovmskb %xmm1,%edx
    0.00 :   23ec6:  sub    $0xffff,%edx
    0.00 :   23ecc:  jne    24830 <strcmp+0x1400>
    0.00 :   23ed2:  add    $0x10,%rcx
    0.00 :   23ed6:  movdqa %xmm4,%xmm3
    0.00 :   23eda:  add    $0x10,%r10
    0.00 :   23ede:  jg     23f30 <strcmp+0xb00>
    0.00 :   23ee0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23ee5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23eea:  movdqa %xmm2,%xmm4
    0.00 :   23eee:  psrldq $0x8,%xmm3
    0.00 :   23ef3:  pslldq $0x8,%xmm2
    0.00 :   23ef8:  por    %xmm3,%xmm2
    0.00 :   23efc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23f00:  pcmpeqb %xmm2,%xmm1
    0.00 :   23f04:  psubb  %xmm0,%xmm1
    0.00 :   23f08:  pmovmskb %xmm1,%edx
    0.00 :   23f0c:  sub    $0xffff,%edx
    0.00 :   23f12:  jne    24830 <strcmp+0x1400>
    0.00 :   23f18:  add    $0x10,%rcx
    0.00 :   23f1c:  movdqa %xmm4,%xmm3
    0.00 :   23f20:  jmp    23e90 <strcmp+0xa60>
    0.00 :   23f25:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23f30:  pcmpeqb %xmm3,%xmm0
    0.00 :   23f34:  pmovmskb %xmm0,%edx
    0.00 :   23f38:  test   $0xff00,%edx
    0.00 :   23f3e:  jne    23f50 <strcmp+0xb20>
    0.00 :   23f40:  pxor   %xmm0,%xmm0
    0.00 :   23f44:  sub    $0x1000,%r10
    0.00 :   23f4b:  jmp    23e9a <strcmp+0xa6a>
    0.00 :   23f50:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23f55:  psrldq $0x8,%xmm0
    0.00 :   23f5a:  psrldq $0x8,%xmm3
    0.00 :   23f5f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23f64:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23f6f:  nop
    0.00 :   23f70:  pxor   %xmm0,%xmm0
    0.00 :   23f74:  movdqa (%rdi),%xmm2
    0.00 :   23f78:  movdqa (%rsi),%xmm1
    0.00 :   23f7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23f80:  pslldq $0x7,%xmm2
    0.00 :   23f85:  pcmpeqb %xmm1,%xmm2
    0.00 :   23f89:  psubb  %xmm0,%xmm2
    0.00 :   23f8d:  pmovmskb %xmm2,%r9d
    0.00 :   23f92:  shr    %cl,%edx
    0.00 :   23f94:  shr    %cl,%r9d
    0.00 :   23f97:  sub    %r9d,%edx
    0.00 :   23f9a:  jne    24835 <strcmp+0x1405>
    0.00 :   23fa0:  movdqa (%rdi),%xmm3
    0.00 :   23fa4:  pxor   %xmm0,%xmm0
    0.00 :   23fa8:  mov    $0x10,%rcx
    0.00 :   23faf:  mov    $0x9,%r9d
    0.00 :   23fb5:  lea    0x9(%rdi),%r10
    0.00 :   23fb9:  and    $0xfff,%r10
    0.00 :   23fc0:  sub    $0x1000,%r10
    0.00 :   23fc7:  nopw   0x0(%rax,%rax,1)
    0.00 :   23fd0:  add    $0x10,%r10
    0.00 :   23fd4:  jg     24070 <strcmp+0xc40>
    0.00 :   23fda:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23fdf:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23fe4:  movdqa %xmm2,%xmm4
    0.00 :   23fe8:  psrldq $0x9,%xmm3
    0.00 :   23fed:  pslldq $0x7,%xmm2
    0.00 :   23ff2:  por    %xmm3,%xmm2
    0.00 :   23ff6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23ffa:  pcmpeqb %xmm2,%xmm1
    0.00 :   23ffe:  psubb  %xmm0,%xmm1
    0.00 :   24002:  pmovmskb %xmm1,%edx
    0.00 :   24006:  sub    $0xffff,%edx
    0.00 :   2400c:  jne    24830 <strcmp+0x1400>
    0.00 :   24012:  add    $0x10,%rcx
    0.00 :   24016:  movdqa %xmm4,%xmm3
    0.00 :   2401a:  add    $0x10,%r10
    0.00 :   2401e:  jg     24070 <strcmp+0xc40>
    0.00 :   24020:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24025:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2402a:  movdqa %xmm2,%xmm4
    0.00 :   2402e:  psrldq $0x9,%xmm3
    0.00 :   24033:  pslldq $0x7,%xmm2
    0.00 :   24038:  por    %xmm3,%xmm2
    0.00 :   2403c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24040:  pcmpeqb %xmm2,%xmm1
    0.00 :   24044:  psubb  %xmm0,%xmm1
    0.00 :   24048:  pmovmskb %xmm1,%edx
    0.00 :   2404c:  sub    $0xffff,%edx
    0.00 :   24052:  jne    24830 <strcmp+0x1400>
    0.00 :   24058:  add    $0x10,%rcx
    0.00 :   2405c:  movdqa %xmm4,%xmm3
    0.00 :   24060:  jmp    23fd0 <strcmp+0xba0>
    0.00 :   24065:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24070:  pcmpeqb %xmm3,%xmm0
    0.00 :   24074:  pmovmskb %xmm0,%edx
    0.00 :   24078:  test   $0xfe00,%edx
    0.00 :   2407e:  jne    24090 <strcmp+0xc60>
    0.00 :   24080:  pxor   %xmm0,%xmm0
    0.00 :   24084:  sub    $0x1000,%r10
    0.00 :   2408b:  jmp    23fda <strcmp+0xbaa>
    0.00 :   24090:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24095:  psrldq $0x9,%xmm0
    0.00 :   2409a:  psrldq $0x9,%xmm3
    0.00 :   2409f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   240a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   240af:  nop
    0.00 :   240b0:  pxor   %xmm0,%xmm0
    0.00 :   240b4:  movdqa (%rdi),%xmm2
    0.00 :   240b8:  movdqa (%rsi),%xmm1
    0.00 :   240bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   240c0:  pslldq $0x6,%xmm2
    0.00 :   240c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   240c9:  psubb  %xmm0,%xmm2
    0.00 :   240cd:  pmovmskb %xmm2,%r9d
    0.00 :   240d2:  shr    %cl,%edx
    0.00 :   240d4:  shr    %cl,%r9d
    0.00 :   240d7:  sub    %r9d,%edx
    0.00 :   240da:  jne    24835 <strcmp+0x1405>
    0.00 :   240e0:  movdqa (%rdi),%xmm3
    0.00 :   240e4:  pxor   %xmm0,%xmm0
    0.00 :   240e8:  mov    $0x10,%rcx
    0.00 :   240ef:  mov    $0xa,%r9d
    0.00 :   240f5:  lea    0xa(%rdi),%r10
    0.00 :   240f9:  and    $0xfff,%r10
    0.00 :   24100:  sub    $0x1000,%r10
    0.00 :   24107:  nopw   0x0(%rax,%rax,1)
    0.00 :   24110:  add    $0x10,%r10
    0.00 :   24114:  jg     241b0 <strcmp+0xd80>
    0.00 :   2411a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2411f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24124:  movdqa %xmm2,%xmm4
    0.00 :   24128:  psrldq $0xa,%xmm3
    0.00 :   2412d:  pslldq $0x6,%xmm2
    0.00 :   24132:  por    %xmm3,%xmm2
    0.00 :   24136:  pcmpeqb %xmm1,%xmm0
    0.00 :   2413a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2413e:  psubb  %xmm0,%xmm1
    0.00 :   24142:  pmovmskb %xmm1,%edx
    0.00 :   24146:  sub    $0xffff,%edx
    0.00 :   2414c:  jne    24830 <strcmp+0x1400>
    0.00 :   24152:  add    $0x10,%rcx
    0.00 :   24156:  movdqa %xmm4,%xmm3
    0.00 :   2415a:  add    $0x10,%r10
    0.00 :   2415e:  jg     241b0 <strcmp+0xd80>
    0.00 :   24160:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24165:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2416a:  movdqa %xmm2,%xmm4
    0.00 :   2416e:  psrldq $0xa,%xmm3
    0.00 :   24173:  pslldq $0x6,%xmm2
    0.00 :   24178:  por    %xmm3,%xmm2
    0.00 :   2417c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24180:  pcmpeqb %xmm2,%xmm1
    0.00 :   24184:  psubb  %xmm0,%xmm1
    0.00 :   24188:  pmovmskb %xmm1,%edx
    0.00 :   2418c:  sub    $0xffff,%edx
    0.00 :   24192:  jne    24830 <strcmp+0x1400>
    0.00 :   24198:  add    $0x10,%rcx
    0.00 :   2419c:  movdqa %xmm4,%xmm3
    0.00 :   241a0:  jmp    24110 <strcmp+0xce0>
    0.00 :   241a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   241b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   241b4:  pmovmskb %xmm0,%edx
    0.00 :   241b8:  test   $0xfc00,%edx
    0.00 :   241be:  jne    241d0 <strcmp+0xda0>
    0.00 :   241c0:  pxor   %xmm0,%xmm0
    0.00 :   241c4:  sub    $0x1000,%r10
    0.00 :   241cb:  jmp    2411a <strcmp+0xcea>
    0.00 :   241d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   241d5:  psrldq $0xa,%xmm0
    0.00 :   241da:  psrldq $0xa,%xmm3
    0.00 :   241df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   241e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   241ef:  nop
    0.00 :   241f0:  pxor   %xmm0,%xmm0
    0.00 :   241f4:  movdqa (%rdi),%xmm2
    0.00 :   241f8:  movdqa (%rsi),%xmm1
    0.00 :   241fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24200:  pslldq $0x5,%xmm2
    0.00 :   24205:  pcmpeqb %xmm1,%xmm2
    0.00 :   24209:  psubb  %xmm0,%xmm2
    0.00 :   2420d:  pmovmskb %xmm2,%r9d
    0.00 :   24212:  shr    %cl,%edx
    0.00 :   24214:  shr    %cl,%r9d
    0.00 :   24217:  sub    %r9d,%edx
    0.00 :   2421a:  jne    24835 <strcmp+0x1405>
    0.00 :   24220:  movdqa (%rdi),%xmm3
    0.00 :   24224:  pxor   %xmm0,%xmm0
    0.00 :   24228:  mov    $0x10,%rcx
    0.00 :   2422f:  mov    $0xb,%r9d
    0.00 :   24235:  lea    0xb(%rdi),%r10
    0.00 :   24239:  and    $0xfff,%r10
    0.00 :   24240:  sub    $0x1000,%r10
    0.00 :   24247:  nopw   0x0(%rax,%rax,1)
    0.00 :   24250:  add    $0x10,%r10
    0.00 :   24254:  jg     242f0 <strcmp+0xec0>
    0.00 :   2425a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2425f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24264:  movdqa %xmm2,%xmm4
    0.00 :   24268:  psrldq $0xb,%xmm3
    0.00 :   2426d:  pslldq $0x5,%xmm2
    0.00 :   24272:  por    %xmm3,%xmm2
    0.00 :   24276:  pcmpeqb %xmm1,%xmm0
    0.00 :   2427a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2427e:  psubb  %xmm0,%xmm1
    0.00 :   24282:  pmovmskb %xmm1,%edx
    0.00 :   24286:  sub    $0xffff,%edx
    0.00 :   2428c:  jne    24830 <strcmp+0x1400>
    0.00 :   24292:  add    $0x10,%rcx
    0.00 :   24296:  movdqa %xmm4,%xmm3
    0.00 :   2429a:  add    $0x10,%r10
    0.00 :   2429e:  jg     242f0 <strcmp+0xec0>
    0.00 :   242a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   242a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   242aa:  movdqa %xmm2,%xmm4
    0.00 :   242ae:  psrldq $0xb,%xmm3
    0.00 :   242b3:  pslldq $0x5,%xmm2
    0.00 :   242b8:  por    %xmm3,%xmm2
    0.00 :   242bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   242c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   242c4:  psubb  %xmm0,%xmm1
    0.00 :   242c8:  pmovmskb %xmm1,%edx
    0.00 :   242cc:  sub    $0xffff,%edx
    0.00 :   242d2:  jne    24830 <strcmp+0x1400>
    0.00 :   242d8:  add    $0x10,%rcx
    0.00 :   242dc:  movdqa %xmm4,%xmm3
    0.00 :   242e0:  jmp    24250 <strcmp+0xe20>
    0.00 :   242e5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   242f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   242f4:  pmovmskb %xmm0,%edx
    0.00 :   242f8:  test   $0xf800,%edx
    0.00 :   242fe:  jne    24310 <strcmp+0xee0>
    0.00 :   24300:  pxor   %xmm0,%xmm0
    0.00 :   24304:  sub    $0x1000,%r10
    0.00 :   2430b:  jmp    2425a <strcmp+0xe2a>
    0.00 :   24310:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24315:  psrldq $0xb,%xmm0
    0.00 :   2431a:  psrldq $0xb,%xmm3
    0.00 :   2431f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   24324:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2432f:  nop
    0.00 :   24330:  pxor   %xmm0,%xmm0
    0.00 :   24334:  movdqa (%rdi),%xmm2
    0.00 :   24338:  movdqa (%rsi),%xmm1
    0.00 :   2433c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24340:  pslldq $0x4,%xmm2
    0.00 :   24345:  pcmpeqb %xmm1,%xmm2
    0.00 :   24349:  psubb  %xmm0,%xmm2
    0.00 :   2434d:  pmovmskb %xmm2,%r9d
    0.00 :   24352:  shr    %cl,%edx
    0.00 :   24354:  shr    %cl,%r9d
    0.00 :   24357:  sub    %r9d,%edx
    0.00 :   2435a:  jne    24835 <strcmp+0x1405>
    0.00 :   24360:  movdqa (%rdi),%xmm3
    0.00 :   24364:  pxor   %xmm0,%xmm0
    0.00 :   24368:  mov    $0x10,%rcx
    0.00 :   2436f:  mov    $0xc,%r9d
    0.00 :   24375:  lea    0xc(%rdi),%r10
    0.00 :   24379:  and    $0xfff,%r10
    0.00 :   24380:  sub    $0x1000,%r10
    0.00 :   24387:  nopw   0x0(%rax,%rax,1)
    0.00 :   24390:  add    $0x10,%r10
    0.00 :   24394:  jg     24430 <strcmp+0x1000>
    0.00 :   2439a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2439f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   243a4:  movdqa %xmm2,%xmm4
    0.00 :   243a8:  psrldq $0xc,%xmm3
    0.00 :   243ad:  pslldq $0x4,%xmm2
    0.00 :   243b2:  por    %xmm3,%xmm2
    0.00 :   243b6:  pcmpeqb %xmm1,%xmm0
    0.00 :   243ba:  pcmpeqb %xmm2,%xmm1
    0.00 :   243be:  psubb  %xmm0,%xmm1
    0.00 :   243c2:  pmovmskb %xmm1,%edx
    0.00 :   243c6:  sub    $0xffff,%edx
    0.00 :   243cc:  jne    24830 <strcmp+0x1400>
    0.00 :   243d2:  add    $0x10,%rcx
    0.00 :   243d6:  movdqa %xmm4,%xmm3
    0.00 :   243da:  add    $0x10,%r10
    0.00 :   243de:  jg     24430 <strcmp+0x1000>
    0.00 :   243e0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   243e5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   243ea:  movdqa %xmm2,%xmm4
    0.00 :   243ee:  psrldq $0xc,%xmm3
    0.00 :   243f3:  pslldq $0x4,%xmm2
    0.00 :   243f8:  por    %xmm3,%xmm2
    0.00 :   243fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24400:  pcmpeqb %xmm2,%xmm1
    0.00 :   24404:  psubb  %xmm0,%xmm1
    0.00 :   24408:  pmovmskb %xmm1,%edx
    0.00 :   2440c:  sub    $0xffff,%edx
    0.00 :   24412:  jne    24830 <strcmp+0x1400>
    0.00 :   24418:  add    $0x10,%rcx
    0.00 :   2441c:  movdqa %xmm4,%xmm3
    0.00 :   24420:  jmp    24390 <strcmp+0xf60>
    0.00 :   24425:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24430:  pcmpeqb %xmm3,%xmm0
    0.00 :   24434:  pmovmskb %xmm0,%edx
    0.00 :   24438:  test   $0xf000,%edx
    0.00 :   2443e:  jne    24450 <strcmp+0x1020>
    0.00 :   24440:  pxor   %xmm0,%xmm0
    0.00 :   24444:  sub    $0x1000,%r10
    0.00 :   2444b:  jmp    2439a <strcmp+0xf6a>
    0.00 :   24450:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24455:  psrldq $0xc,%xmm0
    0.00 :   2445a:  psrldq $0xc,%xmm3
    0.00 :   2445f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   24464:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2446f:  nop
    0.00 :   24470:  pxor   %xmm0,%xmm0
    0.00 :   24474:  movdqa (%rdi),%xmm2
    0.00 :   24478:  movdqa (%rsi),%xmm1
    0.00 :   2447c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24480:  pslldq $0x3,%xmm2
    0.00 :   24485:  pcmpeqb %xmm1,%xmm2
    0.00 :   24489:  psubb  %xmm0,%xmm2
    0.00 :   2448d:  pmovmskb %xmm2,%r9d
    0.00 :   24492:  shr    %cl,%edx
    0.00 :   24494:  shr    %cl,%r9d
    0.00 :   24497:  sub    %r9d,%edx
    0.00 :   2449a:  jne    24835 <strcmp+0x1405>
    0.00 :   244a0:  movdqa (%rdi),%xmm3
    0.00 :   244a4:  pxor   %xmm0,%xmm0
    0.00 :   244a8:  mov    $0x10,%rcx
    0.00 :   244af:  mov    $0xd,%r9d
    0.00 :   244b5:  lea    0xd(%rdi),%r10
    0.00 :   244b9:  and    $0xfff,%r10
    0.00 :   244c0:  sub    $0x1000,%r10
    0.00 :   244c7:  nopw   0x0(%rax,%rax,1)
    0.00 :   244d0:  add    $0x10,%r10
    0.00 :   244d4:  jg     24570 <strcmp+0x1140>
    0.00 :   244da:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   244df:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   244e4:  movdqa %xmm2,%xmm4
    0.00 :   244e8:  psrldq $0xd,%xmm3
    0.00 :   244ed:  pslldq $0x3,%xmm2
    0.00 :   244f2:  por    %xmm3,%xmm2
    0.00 :   244f6:  pcmpeqb %xmm1,%xmm0
    0.00 :   244fa:  pcmpeqb %xmm2,%xmm1
    0.00 :   244fe:  psubb  %xmm0,%xmm1
    0.00 :   24502:  pmovmskb %xmm1,%edx
    0.00 :   24506:  sub    $0xffff,%edx
    0.00 :   2450c:  jne    24830 <strcmp+0x1400>
    0.00 :   24512:  add    $0x10,%rcx
    0.00 :   24516:  movdqa %xmm4,%xmm3
    0.00 :   2451a:  add    $0x10,%r10
    0.00 :   2451e:  jg     24570 <strcmp+0x1140>
    0.00 :   24520:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24525:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2452a:  movdqa %xmm2,%xmm4
    0.00 :   2452e:  psrldq $0xd,%xmm3
    0.00 :   24533:  pslldq $0x3,%xmm2
    0.00 :   24538:  por    %xmm3,%xmm2
    0.00 :   2453c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24540:  pcmpeqb %xmm2,%xmm1
    0.00 :   24544:  psubb  %xmm0,%xmm1
    0.00 :   24548:  pmovmskb %xmm1,%edx
    0.00 :   2454c:  sub    $0xffff,%edx
    0.00 :   24552:  jne    24830 <strcmp+0x1400>
    0.00 :   24558:  add    $0x10,%rcx
    0.00 :   2455c:  movdqa %xmm4,%xmm3
    0.00 :   24560:  jmp    244d0 <strcmp+0x10a0>
    0.00 :   24565:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24570:  pcmpeqb %xmm3,%xmm0
    0.00 :   24574:  pmovmskb %xmm0,%edx
    0.00 :   24578:  test   $0xe000,%edx
    0.00 :   2457e:  jne    24590 <strcmp+0x1160>
    0.00 :   24580:  pxor   %xmm0,%xmm0
    0.00 :   24584:  sub    $0x1000,%r10
    0.00 :   2458b:  jmp    244da <strcmp+0x10aa>
    0.00 :   24590:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24595:  psrldq $0xd,%xmm0
    0.00 :   2459a:  psrldq $0xd,%xmm3
    0.00 :   2459f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   245a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   245af:  nop
    0.00 :   245b0:  pxor   %xmm0,%xmm0
    0.00 :   245b4:  movdqa (%rdi),%xmm2
    0.00 :   245b8:  movdqa (%rsi),%xmm1
    0.00 :   245bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   245c0:  pslldq $0x2,%xmm2
    0.00 :   245c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   245c9:  psubb  %xmm0,%xmm2
    0.00 :   245cd:  pmovmskb %xmm2,%r9d
    0.00 :   245d2:  shr    %cl,%edx
    0.00 :   245d4:  shr    %cl,%r9d
    0.00 :   245d7:  sub    %r9d,%edx
    0.00 :   245da:  jne    24835 <strcmp+0x1405>
    0.00 :   245e0:  movdqa (%rdi),%xmm3
    0.00 :   245e4:  pxor   %xmm0,%xmm0
    0.00 :   245e8:  mov    $0x10,%rcx
    0.00 :   245ef:  mov    $0xe,%r9d
    0.00 :   245f5:  lea    0xe(%rdi),%r10
    0.00 :   245f9:  and    $0xfff,%r10
    0.00 :   24600:  sub    $0x1000,%r10
    0.00 :   24607:  nopw   0x0(%rax,%rax,1)
    0.00 :   24610:  add    $0x10,%r10
    0.00 :   24614:  jg     246b0 <strcmp+0x1280>
    0.00 :   2461a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2461f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24624:  movdqa %xmm2,%xmm4
    0.00 :   24628:  psrldq $0xe,%xmm3
    0.00 :   2462d:  pslldq $0x2,%xmm2
    0.00 :   24632:  por    %xmm3,%xmm2
    0.00 :   24636:  pcmpeqb %xmm1,%xmm0
    0.00 :   2463a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2463e:  psubb  %xmm0,%xmm1
    0.00 :   24642:  pmovmskb %xmm1,%edx
    0.00 :   24646:  sub    $0xffff,%edx
    0.00 :   2464c:  jne    24830 <strcmp+0x1400>
    0.00 :   24652:  add    $0x10,%rcx
    0.00 :   24656:  movdqa %xmm4,%xmm3
    0.00 :   2465a:  add    $0x10,%r10
    0.00 :   2465e:  jg     246b0 <strcmp+0x1280>
    0.00 :   24660:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24665:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2466a:  movdqa %xmm2,%xmm4
    0.00 :   2466e:  psrldq $0xe,%xmm3
    0.00 :   24673:  pslldq $0x2,%xmm2
    0.00 :   24678:  por    %xmm3,%xmm2
    0.00 :   2467c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24680:  pcmpeqb %xmm2,%xmm1
    0.00 :   24684:  psubb  %xmm0,%xmm1
    0.00 :   24688:  pmovmskb %xmm1,%edx
    0.00 :   2468c:  sub    $0xffff,%edx
    0.00 :   24692:  jne    24830 <strcmp+0x1400>
    0.00 :   24698:  add    $0x10,%rcx
    0.00 :   2469c:  movdqa %xmm4,%xmm3
    0.00 :   246a0:  jmp    24610 <strcmp+0x11e0>
    0.00 :   246a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   246b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   246b4:  pmovmskb %xmm0,%edx
    0.00 :   246b8:  test   $0xc000,%edx
    0.00 :   246be:  jne    246d0 <strcmp+0x12a0>
    0.00 :   246c0:  pxor   %xmm0,%xmm0
    0.00 :   246c4:  sub    $0x1000,%r10
    0.00 :   246cb:  jmp    2461a <strcmp+0x11ea>
    0.00 :   246d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   246d5:  psrldq $0xe,%xmm0
    0.00 :   246da:  psrldq $0xe,%xmm3
    0.00 :   246df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   246e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   246ef:  nop
    0.00 :   246f0:  pxor   %xmm0,%xmm0
    0.00 :   246f4:  movdqa (%rdi),%xmm2
    0.00 :   246f8:  movdqa (%rsi),%xmm1
    0.00 :   246fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24700:  pslldq $0x1,%xmm2
    0.00 :   24705:  pcmpeqb %xmm1,%xmm2
    0.00 :   24709:  psubb  %xmm0,%xmm2
    0.00 :   2470d:  pmovmskb %xmm2,%r9d
    0.00 :   24712:  shr    %cl,%edx
    0.00 :   24714:  shr    %cl,%r9d
    0.00 :   24717:  sub    %r9d,%edx
    0.00 :   2471a:  jne    24835 <strcmp+0x1405>
    0.00 :   24720:  movdqa (%rdi),%xmm3
    0.00 :   24724:  pxor   %xmm0,%xmm0
    0.00 :   24728:  mov    $0x10,%rcx
    0.00 :   2472f:  mov    $0xf,%r9d
    0.00 :   24735:  lea    0xf(%rdi),%r10
    0.00 :   24739:  and    $0xfff,%r10
    0.00 :   24740:  sub    $0x1000,%r10
    0.00 :   24747:  nopw   0x0(%rax,%rax,1)
    0.00 :   24750:  add    $0x10,%r10
    0.00 :   24754:  jg     247f0 <strcmp+0x13c0>
    0.00 :   2475a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2475f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24764:  movdqa %xmm2,%xmm4
    0.00 :   24768:  psrldq $0xf,%xmm3
    0.00 :   2476d:  pslldq $0x1,%xmm2
    0.00 :   24772:  por    %xmm3,%xmm2
    0.00 :   24776:  pcmpeqb %xmm1,%xmm0
    0.00 :   2477a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2477e:  psubb  %xmm0,%xmm1
    0.00 :   24782:  pmovmskb %xmm1,%edx
    0.00 :   24786:  sub    $0xffff,%edx
    0.00 :   2478c:  jne    24830 <strcmp+0x1400>
    0.00 :   24792:  add    $0x10,%rcx
    0.00 :   24796:  movdqa %xmm4,%xmm3
    0.00 :   2479a:  add    $0x10,%r10
    0.00 :   2479e:  jg     247f0 <strcmp+0x13c0>
    0.00 :   247a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   247a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   247aa:  movdqa %xmm2,%xmm4
    0.00 :   247ae:  psrldq $0xf,%xmm3
    0.00 :   247b3:  pslldq $0x1,%xmm2
    0.00 :   247b8:  por    %xmm3,%xmm2
    0.00 :   247bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   247c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   247c4:  psubb  %xmm0,%xmm1
    0.00 :   247c8:  pmovmskb %xmm1,%edx
    0.00 :   247cc:  sub    $0xffff,%edx
    0.00 :   247d2:  jne    24830 <strcmp+0x1400>
    0.00 :   247d4:  add    $0x10,%rcx
    0.00 :   247d8:  movdqa %xmm4,%xmm3
    0.00 :   247dc:  jmp    24750 <strcmp+0x1320>
    0.00 :   247e1:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   247ec:  nopl   0x0(%rax)
    0.00 :   247f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   247f4:  pmovmskb %xmm0,%edx
    0.00 :   247f8:  test   $0x8000,%edx
    0.00 :   247fe:  jne    24810 <strcmp+0x13e0>
    0.00 :   24800:  pxor   %xmm0,%xmm0
    0.00 :   24804:  sub    $0x1000,%r10
    0.00 :   2480b:  jmp    2475a <strcmp+0x132a>
    0.00 :   24810:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24815:  psrldq $0xf,%xmm3
    0.00 :   2481a:  psrldq $0xf,%xmm0
    0.00 :   2481f:  nop
    0.00 :   24820:  pcmpeqb %xmm3,%xmm1
    0.00 :   24824:  psubb  %xmm0,%xmm1
    0.00 :   24828:  pmovmskb %xmm1,%edx
    0.00 :   2482c:  not    %edx
    0.00 :   2482e:  xchg   %ax,%ax
    0.00 :   24830:  lea    -0x10(%r9,%rcx,1),%rax
    0.00 :   24835:  lea    (%rdi,%rax,1),%rdi
    0.00 :   24839:  lea    (%rsi,%rcx,1),%rsi
    0.00 :   2483d:  test   %r8d,%r8d
    0.00 :   24840:  je     24850 <strcmp+0x1420>
    0.00 :   24842:  xchg   %rsi,%rdi
    0.00 :   24845:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24850:  bsf    %rdx,%rdx
    0.00 :   24854:  movzbl (%rsi,%rdx,1),%ecx
   30.05 :   24858:  movzbl (%rdi,%rdx,1),%eax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:2111
    0.00 :   2485c:  sub    %ecx,%eax
    0.00 :   2485e:  ret
    0.00 :   2485f:  xor    %eax,%eax
    0.00 :   24861:  ret
    0.00 :   24862:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2486d:  nopl   (%rax)
    0.00 :   24870:  movzbl (%rsi),%ecx
    0.00 :   24873:  movzbl (%rdi),%eax
    0.00 :   24876:  sub    %ecx,%eax
    0.00 :   24878:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   23.15 [virtio_net][1e7b]
   20.09 [virtio_net][1e57]
   16.24 [virtio_net][1e86]
   15.42 [virtio_net][1e67]
   12.68 [virtio_net][1eda]
   12.43 [virtio_net][1e50]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (7 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001e50 <skb_xmit_done>:
         : 6    skb_xmit_done():
   12.43 :   1e50:   call   1e55 <skb_xmit_done+0x5> // [virtio_net][1e50]
    0.00 :   1e55:   push   %r12
   20.09 :   1e57:   push   %rbp // [virtio_net][1e57]
    0.00 :   1e58:   mov    %rdi,%rbp
    0.00 :   1e5b:   push   %rbx
    0.00 :   1e5c:   mov    0x20(%rdi),%rax
    0.00 :   1e60:   mov    0x330(%rax),%r12
   15.42 :   1e67:   mov    0x28(%rdi),%eax // [virtio_net][1e67]
    0.00 :   1e6a:   lea    -0x1(%rax),%ebx
    0.00 :   1e6d:   shr    %ebx
    0.00 :   1e6f:   imul   $0x458,%rbx,%rbx
    0.00 :   1e76:   add    0x18(%r12),%rbx
   23.15 :   1e7b:   call   1e80 <skb_xmit_done+0x30> // [virtio_net][1e7b]
    0.00 :   1e80:   mov    0x2d8(%rbx),%eax
   16.24 :   1e86:   test   %eax,%eax // [virtio_net][1e86]
    0.00 :   1e88:   je     1ea6 <skb_xmit_done+0x56>
    0.00 :   1e8a:   add    $0x2c0,%rbx
    0.00 :   1e91:   mov    %rbx,%rdi
    0.00 :   1e94:   call   1e99 <skb_xmit_done+0x49>
    0.00 :   1e99:   test   %al,%al
    0.00 :   1e9b:   jne    1ece <skb_xmit_done+0x7e>
    0.00 :   1e9d:   pop    %rbx
    0.00 :   1e9e:   pop    %rbp
    0.00 :   1e9f:   pop    %r12
    0.00 :   1ea1:   jmp    1ea6 <skb_xmit_done+0x56>
    0.00 :   1ea6:   mov    0x28(%rbp),%eax
    0.00 :   1ea9:   mov    0x10(%r12),%rdx
    0.00 :   1eae:   pop    %rbx
    0.00 :   1eaf:   pop    %rbp
    0.00 :   1eb0:   sub    $0x1,%eax
    0.00 :   1eb3:   pop    %r12
    0.00 :   1eb5:   shr    %eax
    0.00 :   1eb7:   movzwl %ax,%eax
    0.00 :   1eba:   lea    (%rax,%rax,4),%rdi
    0.00 :   1ebe:   shl    $0x6,%rdi
    0.00 :   1ec2:   add    0x400(%rdx),%rdi
    0.00 :   1ec9:   jmp    1ece <skb_xmit_done+0x7e>
    0.00 :   1ece:   mov    %rbp,%rdi
    0.00 :   1ed1:   call   1ed6 <skb_xmit_done+0x86>
    0.00 :   1ed6:   mov    %rbx,%rdi
    0.00 :   1ed9:   pop    %rbx
   12.68 :   1eda:   pop    %rbp // [virtio_net][1eda]
    0.00 :   1edb:   pop    %r12
    0.00 :   1edd:   jmp    1ee2 <skb_xmit_done+0x92>

Sorted summary for file [vdso]
----------------------------------------------

   61.06 [vdso][948]
   27.60 [vdso][930]
   11.34 [vdso][937]
 Percent |	Source code & Disassembly of [vdso] for cycles (7 samples, percent: local period)
-------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000930 <__vdso_time@@LINUX_2.6>:
   27.60 :   930:    lea    -0x18b7(%rip),%rax        # fffffffffffff080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffe430> // [vdso][930]
   11.34 :   937:    lea    -0x48be(%rip),%rdx        # ffffffffffffc080 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb430> // [vdso][937]
    0.00 :   93e:    cmpl   $0x7fffffff,-0x48c4(%rip)        # ffffffffffffc084 <__vdso_sgx_enter_enclave@@LINUX_2.6+0xffffffffffffb434>
   61.06 :   948:    cmovne %rdx,%rax // [vdso][948]
    0.00 :   94c:    mov    0x20(%rax),%rax
    0.00 :   950:    test   %rdi,%rdi
    0.00 :   953:    je     958 <__vdso_time@@LINUX_2.6+0x28>
    0.00 :   955:    mov    %rax,(%rdi)
    0.00 :   958:    ret
    0.00 :   959:    int3

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   42.56 [virtio_net][1ad0]
   28.02 [virtio_net][1af6]
   22.57 [virtio_net][1b15]
    6.86 [virtio_net][1ae5]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (7 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001ad0 <skb_recv_done>:
         : 6    skb_recv_done():
   42.56 :   1ad0:   call   1ad5 <skb_recv_done+0x5> // [virtio_net][1ad0]
    0.00 :   1ad5:   push   %rbp
    0.00 :   1ad6:   mov    %rdi,%rbp
    0.00 :   1ad9:   push   %rbx
    0.00 :   1ada:   mov    0x20(%rdi),%rax
    0.00 :   1ade:   mov    0x330(%rax),%rdx
    6.86 :   1ae5:   mov    0x28(%rdi),%eax // [virtio_net][1ae5]
    0.00 :   1ae8:   shr    %eax
    0.00 :   1aea:   lea    (%rax,%rax,4),%rbx
    0.00 :   1aee:   shl    $0x8,%rbx
    0.00 :   1af2:   add    0x20(%rdx),%rbx
   28.02 :   1af6:   add    $0x8,%rbx // [virtio_net][1af6]
    0.00 :   1afa:   mov    %rbx,%rdi
    0.00 :   1afd:   call   1b02 <skb_recv_done+0x32>
    0.00 :   1b02:   test   %al,%al
    0.00 :   1b04:   jne    1b0d <skb_recv_done+0x3d>
    0.00 :   1b06:   pop    %rbx
    0.00 :   1b07:   pop    %rbp
    0.00 :   1b08:   jmp    1b0d <skb_recv_done+0x3d>
    0.00 :   1b0d:   mov    %rbp,%rdi
    0.00 :   1b10:   call   1b15 <skb_recv_done+0x45>
   22.57 :   1b15:   mov    %rbx,%rdi // [virtio_net][1b15]
    0.00 :   1b18:   pop    %rbx
    0.00 :   1b19:   pop    %rbp
    0.00 :   1b1a:   jmp    1b1f <skb_recv_done+0x4f>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   81.10 libpq.so.private14-5.14[27930]
   18.90 libpq.so.private14-5.14[27942]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (7 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000027930 <enlargePQExpBuffer@@Base>:
   81.10 :   27930:  endbr64 // libpq.so.private14-5.14[27930]
    0.00 :   27934:  test   %rdi,%rdi
    0.00 :   27937:  je     279d8 <enlargePQExpBuffer@@Base+0xa8>
    0.00 :   2793d:  push   %rbp
    0.00 :   2793e:  mov    %rdi,%rbp
    0.00 :   27941:  push   %rbx
   18.90 :   27942:  sub    $0x8,%rsp // libpq.so.private14-5.14[27942]
    0.00 :   27946:  mov    0x10(%rdi),%rax
    0.00 :   2794a:  test   %rax,%rax
    0.00 :   2794d:  je     279d1 <enlargePQExpBuffer@@Base+0xa1>
    0.00 :   27953:  mov    0x8(%rdi),%rcx
    0.00 :   27957:  mov    $0x7fffffff,%edx
    0.00 :   2795c:  sub    %rcx,%rdx
    0.00 :   2795f:  cmp    %rdx,%rsi
    0.00 :   27962:  jae    279b0 <enlargePQExpBuffer@@Base+0x80>
    0.00 :   27964:  lea    0x1(%rcx,%rsi,1),%rdx
    0.00 :   27969:  cmp    %rdx,%rax
    0.00 :   2796c:  jae    279a0 <enlargePQExpBuffer@@Base+0x70>
    0.00 :   2796e:  xchg   %ax,%ax
    0.00 :   27970:  add    %rax,%rax
    0.00 :   27973:  cmp    %rdx,%rax
    0.00 :   27976:  jb     27970 <enlargePQExpBuffer@@Base+0x40>
    0.00 :   27978:  mov    $0x7fffffff,%edx
    0.00 :   2797d:  mov    0x0(%rbp),%rdi
    0.00 :   27981:  cmp    %rdx,%rax
    0.00 :   27984:  mov    %rdx,%rbx
    0.00 :   27987:  cmovbe %rax,%rbx
    0.00 :   2798b:  mov    %rbx,%rsi
    0.00 :   2798e:  call   cf50 <realloc@plt>
    0.00 :   27993:  test   %rax,%rax
    0.00 :   27996:  je     279b0 <enlargePQExpBuffer@@Base+0x80>
    0.00 :   27998:  mov    %rax,0x0(%rbp)
    0.00 :   2799c:  mov    %rbx,0x10(%rbp)
    0.00 :   279a0:  mov    $0x1,%eax
    0.00 :   279a5:  add    $0x8,%rsp
    0.00 :   279a9:  pop    %rbx
    0.00 :   279aa:  pop    %rbp
    0.00 :   279ab:  ret
    0.00 :   279ac:  nopl   0x0(%rax)
    0.00 :   279b0:  mov    0x0(%rbp),%rdi
    0.00 :   279b4:  lea    0x1f07b(%rip),%rbx        # 46a36 <PQencryptPasswordConn@@Base+0x190b6>
    0.00 :   279bb:  cmp    %rbx,%rdi
    0.00 :   279be:  je     279c5 <enlargePQExpBuffer@@Base+0x95>
    0.00 :   279c0:  call   cb30 <free@plt>
    0.00 :   279c5:  mov    %rbx,0x0(%rbp)
    0.00 :   279c9:  pxor   %xmm0,%xmm0
    0.00 :   279cd:  movups %xmm0,0x8(%rbp)
    0.00 :   279d1:  xor    %eax,%eax
    0.00 :   279d3:  jmp    279a5 <enlargePQExpBuffer@@Base+0x75>
    0.00 :   279d5:  nopl   (%rax)
    0.00 :   279d8:  xor    %eax,%eax
    0.00 :   279da:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   37.42 libc.so.6[8a3d0]
   16.81 libc.so.6[8a37e]
   16.29 libc.so.6[8a3c0]
   16.00 libc.so.6[8a376]
   13.49 libc.so.6[8a4a5]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (6 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008a320 <pthread_cond_wait@@GLIBC_2.3.2>:
         : 6     __GI___pthread_cond_wait():
    0.00 :   8a320:  endbr64
    0.00 :   8a324:  push   %r15
    0.00 :   8a326:  push   %r14
    0.00 :   8a328:  push   %r13
    0.00 :   8a32a:  push   %r12
    0.00 :   8a32c:  mov    %rsi,%r12
    0.00 :   8a32f:  push   %rbp
    0.00 :   8a330:  push   %rbx
    0.00 :   8a331:  mov    %rdi,%rbx
    0.00 :   8a334:  sub    $0x88,%rsp
    0.00 :   8a33b:  mov    %fs:0x28,%rax
    0.00 :   8a344:  mov    %rax,0x78(%rsp)
    0.00 :   8a349:  xor    %eax,%eax
    0.00 :   8a34b:  nop
    0.00 :   8a34c:  mov    $0x2,%r14d
    0.00 :   8a352:  lock xadd %r14,(%rdi)
    0.00 :   8a357:  mov    $0x8,%ebp
    0.00 :   8a35c:  mov    %r14d,%eax
    0.00 :   8a35f:  and    $0x1,%eax
    0.00 :   8a362:  mov    %eax,0x20(%rsp)
    0.00 :   8a366:  mov    %r14,%rax
    0.00 :   8a369:  shr    %rax
    0.00 :   8a36c:  mov    %rax,0x8(%rsp)
    0.00 :   8a371:  lock xadd %ebp,0x24(%rdi)
   16.00 :   8a376:  xor    %esi,%esi // libc.so.6[8a376]
    0.00 :   8a378:  mov    %r12,%rdi
    0.00 :   8a37b:  shl    $0x7,%ebp
   16.81 :   8a37e:  call   8fc20 <__GI___pthread_mutex_unlock_usercnt> // libc.so.6[8a37e]
    0.00 :   8a383:  movzbl %bpl,%ebp
    0.00 :   8a387:  mov    %eax,%r13d
    0.00 :   8a38a:  test   %eax,%eax
    0.00 :   8a38c:  jne    8a558 <pthread_cond_wait@@GLIBC_2.3.2+0x238>
    0.00 :   8a392:  mov    0x20(%rsp),%r10d
    0.00 :   8a397:  lea    0x0(,%r10,4),%rdx
    0.00 :   8a39f:  lea    0x28(%rbx,%rdx,1),%r15
    0.00 :   8a3a4:  mov    (%r15),%eax
    0.00 :   8a3a7:  test   $0x1,%al
    0.00 :   8a3a9:  jne    8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a3ab:  mov    %rdx,0x10(%rsp)
    0.00 :   8a3b0:  mov    %ebp,%ecx
    0.00 :   8a3b2:  mov    %r13d,%ebp
    0.00 :   8a3b5:  mov    %r14,0x18(%rsp)
    0.00 :   8a3ba:  mov    %ecx,%r13d
    0.00 :   8a3bd:  mov    %r10,%r14
   16.29 :   8a3c0:  test   %eax,%eax // libc.so.6[8a3c0]
    0.00 :   8a3c2:  je     8a4a0 <pthread_cond_wait@@GLIBC_2.3.2+0x180>
    0.00 :   8a3c8:  lea    -0x2(%rax),%edx
    0.00 :   8a3cb:  lock cmpxchg %edx,(%r15)
   37.42 :   8a3d0:  jne    8a540 <pthread_cond_wait@@GLIBC_2.3.2+0x220> // libc.so.6[8a3d0]
    0.00 :   8a3d6:  mov    0x8(%rbx),%rdx
    0.00 :   8a3da:  mov    %r13d,%eax
    0.00 :   8a3dd:  mov    %ebp,%r13d
    0.00 :   8a3e0:  lea    0x8(%rbx),%rcx
    0.00 :   8a3e4:  mov    %eax,%ebp
    0.00 :   8a3e6:  mov    %rdx,%rax
    0.00 :   8a3e9:  shr    %rax
    0.00 :   8a3ec:  cmp    %rax,0x8(%rsp)
    0.00 :   8a3f1:  jb     8a438 <pthread_cond_wait@@GLIBC_2.3.2+0x118>
    0.00 :   8a3f3:  mov    %ebp,%esi
    0.00 :   8a3f5:  mov    %rbx,%rdi
    0.00 :   8a3f8:  call   8a070 <__condvar_confirm_wakeup>
    0.00 :   8a3fd:  mov    %r12,%rdi
    0.00 :   8a400:  call   8d5d0 <__pthread_mutex_cond_lock>
    0.00 :   8a405:  test   %eax,%eax
    0.00 :   8a407:  cmove  %r13d,%eax
    0.00 :   8a40b:  mov    0x78(%rsp),%rdx
    0.00 :   8a410:  sub    %fs:0x28,%rdx
    0.00 :   8a419:  jne    8a5db <pthread_cond_wait@@GLIBC_2.3.2+0x2bb>
    0.00 :   8a41f:  add    $0x88,%rsp
    0.00 :   8a426:  pop    %rbx
    0.00 :   8a427:  pop    %rbp
    0.00 :   8a428:  pop    %r12
    0.00 :   8a42a:  pop    %r13
    0.00 :   8a42c:  pop    %r14
    0.00 :   8a42e:  pop    %r15
    0.00 :   8a430:  ret
    0.00 :   8a431:  nopl   0x0(%rax)
    0.00 :   8a438:  mov    %rdx,%rax
    0.00 :   8a43b:  not    %rax
    0.00 :   8a43e:  and    $0x1,%eax
    0.00 :   8a441:  cmp    %rax,%r14
    0.00 :   8a444:  jne    8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a446:  mov    (%r15),%eax
    0.00 :   8a449:  mov    (%rcx),%rsi
    0.00 :   8a44c:  cmp    %rsi,%rdx
    0.00 :   8a44f:  jne    8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a451:  test   $0x1,%al
    0.00 :   8a453:  jne    8a45f <pthread_cond_wait@@GLIBC_2.3.2+0x13f>
    0.00 :   8a455:  lea    0x2(%rax),%esi
    0.00 :   8a458:  lock cmpxchg %esi,(%r15)
    0.00 :   8a45d:  jne    8a449 <pthread_cond_wait@@GLIBC_2.3.2+0x129>
    0.00 :   8a45f:  mov    %ebp,%esi
    0.00 :   8a461:  xor    %r10d,%r10d
    0.00 :   8a464:  mov    $0x1,%edx
    0.00 :   8a469:  mov    %r15,%rdi
    0.00 :   8a46c:  xor    $0x81,%sil
    0.00 :   8a470:  mov    $0xca,%eax
    0.00 :   8a475:  syscall
    0.00 :   8a477:  cmp    $0xfffffffffffff000,%rax
    0.00 :   8a47d:  jbe    8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a483:  add    $0x16,%eax
    0.00 :   8a486:  and    $0xfffffff7,%eax
    0.00 :   8a489:  je     8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a48f:  lea    0x11215a(%rip),%rdi        # 19c5f0 <aliasfile.0+0xba8>
    0.00 :   8a496:  call   810e0 <__libc_fatal>
    0.00 :   8a49b:  nopl   0x0(%rax,%rax,1)
    0.00 :   8a4a0:  mov    0x10(%rsp),%rax
   13.49 :   8a4a5:  lock addl $0x2,0x10(%rbx,%rax,1) // libc.so.6[8a4a5]
    0.00 :   8a4ab:  mov    (%r15),%eax
    0.00 :   8a4ae:  test   $0x1,%al
    0.00 :   8a4b0:  jne    8a5c0 <pthread_cond_wait@@GLIBC_2.3.2+0x2a0>
    0.00 :   8a4b6:  mov    0x8(%rbx),%rax
    0.00 :   8a4ba:  shr    %rax
    0.00 :   8a4bd:  cmp    %rax,0x8(%rsp)
    0.00 :   8a4c2:  jb     8a5c0 <pthread_cond_wait@@GLIBC_2.3.2+0x2a0>
    0.00 :   8a4c8:  lea    0x30(%rsp),%r9
    0.00 :   8a4cd:  mov    0x18(%rsp),%rax
    0.00 :   8a4d2:  lea    0x50(%rsp),%rdx
    0.00 :   8a4d7:  mov    %rbx,0x58(%rsp)
    0.00 :   8a4dc:  mov    %r9,%rdi
    0.00 :   8a4df:  lea    -0x256(%rip),%rsi        # 8a290 <__condvar_cleanup_waiting>
    0.00 :   8a4e6:  mov    %r9,0x28(%rsp)
    0.00 :   8a4eb:  mov    %rax,0x50(%rsp)
    0.00 :   8a4f0:  mov    %r12,0x60(%rsp)
    0.00 :   8a4f5:  mov    %r13d,0x68(%rsp)
    0.00 :   8a4fa:  call   87710 <_pthread_cleanup_push@@GLIBC_2.34>
    0.00 :   8a4ff:  mov    %r13d,%r8d
    0.00 :   8a502:  xor    %ecx,%ecx
    0.00 :   8a504:  xor    %edx,%edx
    0.00 :   8a506:  xor    %esi,%esi
    0.00 :   8a508:  mov    %r15,%rdi
    0.00 :   8a50b:  call   87d70 <__GI___futex_abstimed_wait_cancelable64>
    0.00 :   8a510:  mov    0x28(%rsp),%rdi
    0.00 :   8a515:  xor    %esi,%esi
    0.00 :   8a517:  mov    %eax,0x24(%rsp)
    0.00 :   8a51b:  call   87740 <_pthread_cleanup_pop@@GLIBC_2.34>
    0.00 :   8a520:  mov    0x24(%rsp),%eax
    0.00 :   8a524:  cmp    $0x6e,%eax
    0.00 :   8a527:  je     8a580 <pthread_cond_wait@@GLIBC_2.3.2+0x260>
    0.00 :   8a529:  cmp    $0x4b,%eax
    0.00 :   8a52c:  je     8a580 <pthread_cond_wait@@GLIBC_2.3.2+0x260>
    0.00 :   8a52e:  mov    0x20(%rsp),%esi
    0.00 :   8a532:  mov    %r13d,%edx
    0.00 :   8a535:  mov    %rbx,%rdi
    0.00 :   8a538:  call   8a120 <__condvar_dec_grefs>
    0.00 :   8a53d:  mov    (%r15),%eax
    0.00 :   8a540:  test   $0x1,%al
    0.00 :   8a542:  je     8a3c0 <pthread_cond_wait@@GLIBC_2.3.2+0xa0>
    0.00 :   8a548:  mov    %r13d,%eax
    0.00 :   8a54b:  mov    %ebp,%r13d
    0.00 :   8a54e:  mov    %eax,%ebp
    0.00 :   8a550:  jmp    8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a555:  nopl   (%rax)
    0.00 :   8a558:  mov    0x20(%rsp),%edx
    0.00 :   8a55c:  mov    0x8(%rsp),%rsi
    0.00 :   8a561:  mov    %ebp,%ecx
    0.00 :   8a563:  mov    %rbx,%rdi
    0.00 :   8a566:  call   8a180 <__condvar_cancel_waiting>
    0.00 :   8a56b:  mov    %ebp,%esi
    0.00 :   8a56d:  mov    %rbx,%rdi
    0.00 :   8a570:  call   8a070 <__condvar_confirm_wakeup>
    0.00 :   8a575:  mov    %r13d,%eax
    0.00 :   8a578:  jmp    8a40b <pthread_cond_wait@@GLIBC_2.3.2+0xeb>
    0.00 :   8a57d:  nopl   (%rax)
    0.00 :   8a580:  mov    0x20(%rsp),%r15d
    0.00 :   8a585:  mov    %r13d,%edx
    0.00 :   8a588:  mov    %rbx,%rdi
    0.00 :   8a58b:  mov    %eax,0x10(%rsp)
    0.00 :   8a58f:  mov    %r13d,%ebp
    0.00 :   8a592:  mov    %r15d,%esi
    0.00 :   8a595:  call   8a120 <__condvar_dec_grefs>
    0.00 :   8a59a:  mov    0x8(%rsp),%rsi
    0.00 :   8a59f:  mov    %r13d,%ecx
    0.00 :   8a5a2:  mov    %r15d,%edx
    0.00 :   8a5a5:  mov    %rbx,%rdi
    0.00 :   8a5a8:  call   8a180 <__condvar_cancel_waiting>
    0.00 :   8a5ad:  mov    0x10(%rsp),%r13d
    0.00 :   8a5b2:  jmp    8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a5b7:  nopw   0x0(%rax,%rax,1)
    0.00 :   8a5c0:  mov    %r13d,%eax
    0.00 :   8a5c3:  mov    0x20(%rsp),%esi
    0.00 :   8a5c7:  mov    %rbx,%rdi
    0.00 :   8a5ca:  mov    %ebp,%r13d
    0.00 :   8a5cd:  mov    %eax,%edx
    0.00 :   8a5cf:  mov    %eax,%ebp
    0.00 :   8a5d1:  call   8a120 <__condvar_dec_grefs>
    0.00 :   8a5d6:  jmp    8a3f3 <pthread_cond_wait@@GLIBC_2.3.2+0xd3>
    0.00 :   8a5db:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   39.19 [nf_nat][326e]
   36.16 [nf_nat][3250]
   17.47 [nf_nat][3257]
    7.18 [nf_nat][32b6]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (5 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003250 <nf_nat_ipv4_local_in>:
         : 6    nf_nat_ipv4_local_in():
   36.16 :   3250:   call   3255 <nf_nat_ipv4_local_in+0x5> // [nf_nat][3250]
    0.00 :   3255:   push   %r12
   17.47 :   3257:   push   %rbp // [nf_nat][3257]
    0.00 :   3258:   push   %rbx
    0.00 :   3259:   mov    %rsi,%rbx
    0.00 :   325c:   movzwl 0xb8(%rsi),%eax
    0.00 :   3263:   mov    0x18(%rsi),%rbp
    0.00 :   3267:   add    0xc8(%rsi),%rax
   39.19 :   326e:   mov    0x68(%rsi),%rsi // [nf_nat][326e]
    0.00 :   3272:   mov    0xc(%rax),%r12d
    0.00 :   3276:   cmp    $0x7,%rsi
    0.00 :   327a:   jbe    3326 <nf_nat_ipv4_local_in+0xd6>
    0.00 :   3280:   mov    %esi,%r8d
    0.00 :   3283:   mov    $0x12,%ecx
    0.00 :   3288:   and    $0x7,%r8d
    0.00 :   328c:   bt     %r8,%rcx
    0.00 :   3290:   jae    3298 <nf_nat_ipv4_local_in+0x48>
    0.00 :   3292:   cmpb   $0x1,0x9(%rax)
    0.00 :   3296:   je     3310 <nf_nat_ipv4_local_in+0xc0>
    0.00 :   3298:   mov    %rbx,%rsi
    0.00 :   329b:   call   32a0 <nf_nat_ipv4_local_in+0x50>
    0.00 :   32a0:   cmp    $0x1,%eax
    0.00 :   32a3:   sete   %dl
    0.00 :   32a6:   test   %rbp,%rbp
    0.00 :   32a9:   je     3307 <nf_nat_ipv4_local_in+0xb7>
    0.00 :   32ab:   test   %dl,%dl
    0.00 :   32ad:   je     3307 <nf_nat_ipv4_local_in+0xb7>
    0.00 :   32af:   movzwl 0xb8(%rbx),%eax
    7.18 :   32b6:   mov    0xc8(%rbx),%rdx // [nf_nat][32b6]
    0.00 :   32bd:   cmp    %r12d,0xc(%rdx,%rax,1)
    0.00 :   32c2:   je     3302 <nf_nat_ipv4_local_in+0xb2>
    0.00 :   32c4:   movzbl 0x12(%rbp),%eax
    0.00 :   32c8:   cmp    $0x6,%al
    0.00 :   32ca:   je     3344 <nf_nat_ipv4_local_in+0xf4>
    0.00 :   32cc:   cmp    $0xc,%al
    0.00 :   32ce:   jne    3335 <nf_nat_ipv4_local_in+0xe5>
    0.00 :   32d0:   movzbl 0xe9(%rbp),%eax
    0.00 :   32d7:   shr    $0x5,%al
    0.00 :   32da:   and    $0x1,%eax
    0.00 :   32dd:   test   %al,%al
    0.00 :   32df:   jne    3302 <nf_nat_ipv4_local_in+0xb2>
    0.00 :   32e1:   mov    0x60(%rbx),%rax
    0.00 :   32e5:   test   %rax,%rax
    0.00 :   32e8:   je     3354 <nf_nat_ipv4_local_in+0x104>
    0.00 :   32ea:   mov    %rbx,%rdi
    0.00 :   32ed:   call   32f2 <nf_nat_ipv4_local_in+0xa2>
    0.00 :   32f2:   movq   $0x0,0x60(%rbx)
    0.00 :   32fa:   movq   $0x0,0x18(%rbx)
    0.00 :   3302:   mov    $0x1,%eax
    0.00 :   3307:   pop    %rbx
    0.00 :   3308:   pop    %rbp
    0.00 :   3309:   pop    %r12
    0.00 :   330b:   jmp    3310 <nf_nat_ipv4_local_in+0xc0>
    0.00 :   3310:   movzbl (%rdx),%ecx
    0.00 :   3313:   and    $0xfffffffffffffff8,%rsi
    0.00 :   3317:   mov    %r8d,%edx
    0.00 :   331a:   mov    %rbx,%rdi
    0.00 :   331d:   call   3322 <nf_nat_ipv4_local_in+0xd2>
    0.00 :   3322:   test   %eax,%eax
    0.00 :   3324:   je     3350 <nf_nat_ipv4_local_in+0x100>
    0.00 :   3326:   mov    $0x1,%edx
    0.00 :   332b:   mov    $0x1,%eax
    0.00 :   3330:   jmp    32a6 <nf_nat_ipv4_local_in+0x56>
    0.00 :   3335:   movzbl 0x328(%rbp),%eax
    0.00 :   333c:   shr    $0x5,%al
    0.00 :   333f:   and    $0x1,%eax
    0.00 :   3342:   jmp    32dd <nf_nat_ipv4_local_in+0x8d>
    0.00 :   3344:   movzbl 0x90(%rbp),%eax
    0.00 :   334b:   and    $0x1,%eax
    0.00 :   334e:   jmp    32dd <nf_nat_ipv4_local_in+0x8d>
    0.00 :   3350:   xor    %eax,%eax
    0.00 :   3352:   jmp    3307 <nf_nat_ipv4_local_in+0xb7>
    0.00 :   3354:   cmpq   $0x0,0x18(%rbx)
    0.00 :   3359:   je     3302 <nf_nat_ipv4_local_in+0xb2>
    0.00 :   335b:   ud2

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   88.16 [nf_conntrack][8130]
   11.84 [nf_conntrack][813c]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (6 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000008130 <ipv4_conntrack_local>:
         : 6    ipv4_conntrack_local():
   88.16 :   8130:   call   8135 <ipv4_conntrack_local+0x5> // [nf_conntrack][8130]
    0.00 :   8135:   movzwl 0xb8(%rsi),%eax
   11.84 :   813c:   mov    0xc8(%rsi),%rcx // [nf_conntrack][813c]
    0.00 :   8143:   mov    %rsi,%rdi
    0.00 :   8146:   testw  $0xff3f,0x6(%rcx,%rax,1)
    0.00 :   814d:   je     8163 <ipv4_conntrack_local+0x33>
    0.00 :   814f:   mov    0x68(%rsi),%rax
    0.00 :   8153:   cmp    $0x7,%rax
    0.00 :   8157:   ja     816b <ipv4_conntrack_local+0x3b>
    0.00 :   8159:   mov    $0x1,%eax
    0.00 :   815e:   jmp    8163 <ipv4_conntrack_local+0x33>
    0.00 :   8163:   mov    %rdx,%rsi
    0.00 :   8166:   jmp    816b <ipv4_conntrack_local+0x3b>
    0.00 :   816b:   and    $0xfffffffffffffff8,%rax
    0.00 :   816f:   mov    0x80(%rax),%rdx
    0.00 :   8176:   and    $0x8,%dh
    0.00 :   8179:   je     8159 <ipv4_conntrack_local+0x29>
    0.00 :   817b:   movq   $0x0,0x68(%rsi)
    0.00 :   8183:   mov    $0xffffffff,%edx
    0.00 :   8188:   lock xadd %edx,(%rax)
    0.00 :   818c:   cmp    $0x1,%edx
    0.00 :   818f:   je     81a4 <ipv4_conntrack_local+0x74>
    0.00 :   8191:   test   %edx,%edx
    0.00 :   8193:   jg     8159 <ipv4_conntrack_local+0x29>
    0.00 :   8195:   mov    $0x3,%esi
    0.00 :   819a:   mov    %rax,%rdi
    0.00 :   819d:   call   81a2 <ipv4_conntrack_local+0x72>
    0.00 :   81a2:   jmp    8159 <ipv4_conntrack_local+0x29>
    0.00 :   81a4:   mov    %rax,%rdi
    0.00 :   81a7:   call   81ac <ipv4_conntrack_local+0x7c>
    0.00 :   81ac:   jmp    8159 <ipv4_conntrack_local+0x29>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   50.44 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/do-rel.h:134
   49.56 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-reloc.c:170
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (2 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000000e290 <_dl_relocate_object>:
         : 6     _dl_relocate_object():
    0.00 :    e290:   endbr64
    0.00 :    e294:   push   %rbp
    0.00 :    e295:   mov    %rsp,%rbp
    0.00 :    e298:   push   %r15
    0.00 :    e29a:   mov    %rdi,%r15
    0.00 :    e29d:   push   %r14
    0.00 :    e29f:   push   %r13
    0.00 :    e2a1:   mov    %edx,%r13d
    0.00 :    e2a4:   push   %r12
    0.00 :    e2a6:   mov    %ecx,%r12d
    0.00 :    e2a9:   push   %rbx
    0.00 :    e2aa:   xor    %ebx,%ebx
    0.00 :    e2ac:   sub    $0xd8,%rsp
    0.00 :    e2b3:   and    $0x8000000,%edx
    0.00 :    e2b9:   mov    %rsi,-0xb0(%rbp)
    0.00 :    e2c0:   jne    e318 <_dl_relocate_object+0x88>
    0.00 :    e2c2:   mov    0x26b10(%rip),%ecx        # 34dd8 <_rtld_global_ro+0x378>
    0.00 :    e2c8:   mov    0x26b01(%rip),%rax        # 34dd0 <_rtld_global_ro+0x370>
    0.00 :    e2cf:   test   %ecx,%ecx
    0.00 :    e2d1:   je     e318 <_dl_relocate_object+0x88>
    0.00 :    e2d3:   xor    %edx,%edx
    0.00 :    e2d5:   mov    $0x1,%edi
    0.00 :    e2da:   mov    $0x1,%esi
    0.00 :    e2df:   jmp    e301 <_dl_relocate_object+0x71>
    0.00 :    e2e1:   nopl   0x0(%rax)
    0.00 :    e2e8:   mov    $0x1,%r12d
    0.00 :    e2ee:   cmpq   $0x0,0x20(%rax)
    0.00 :    e2f3:   mov    0x40(%rax),%rax
    0.00 :    e2f7:   cmovne %esi,%ebx
    0.00 :    e2fa:   add    $0x1,%edx
    0.00 :    e2fd:   cmp    %edx,%ecx
    0.00 :    e2ff:   je     e318 <_dl_relocate_object+0x88>
    0.00 :    e301:   cmpq   $0x0,0x28(%rax)
    0.00 :    e306:   jne    e2e8 <_dl_relocate_object+0x58>
    0.00 :    e308:   cmpq   $0x0,0x30(%rax)
    0.00 :    e30d:   cmovne %edi,%r12d
    0.00 :    e311:   jmp    e2ee <_dl_relocate_object+0x5e>
    0.00 :    e313:   nopl   0x0(%rax,%rax,1)
    0.00 :    e318:   testb  $0x8,0x334(%r15)
    0.00 :    e320:   jne    e706 <_dl_relocate_object+0x476>
    0.00 :    e326:   mov    0x26734(%rip),%eax        # 34a60 <_rtld_global_ro>
    0.00 :    e32c:   and    $0x20,%eax
    0.00 :    e32f:   test   %r12d,%r12d
    0.00 :    e332:   je     e718 <_dl_relocate_object+0x488>
    0.00 :    e338:   mov    %r13d,%r10d
    0.00 :    e33b:   and    $0x1,%r10d
    0.00 :    e33f:   test   %eax,%eax
    0.00 :    e341:   jne    fd10 <_dl_relocate_object+0x1a80>
    0.00 :    e347:   mov    0xf0(%r15),%rax
    0.00 :    e34e:   mov    %rax,-0xe0(%rbp)
    0.00 :    e355:   test   %rax,%rax
    0.00 :    e358:   jne    fd53 <_dl_relocate_object+0x1ac3>
    0.00 :    e35e:   cmpq   $0x0,0xf8(%r15)
    0.00 :    e366:   je     e3bb <_dl_relocate_object+0x12b>
    0.00 :    e368:   test   %r10d,%r10d
    0.00 :    e36b:   je     e3bb <_dl_relocate_object+0x12b>
    0.00 :    e36d:   mov    0x58(%r15),%rax
    0.00 :    e371:   mov    0x8(%rax),%rax
    0.00 :    e375:   testb  $0x20,0x336(%r15)
    0.00 :    e37d:   je     e382 <_dl_relocate_object+0xf2>
    0.00 :    e37f:   add    (%r15),%rax
    0.00 :    e382:   mov    0x8(%rax),%rdx
    0.00 :    e386:   test   %rdx,%rdx
    0.00 :    e389:   jne    f398 <_dl_relocate_object+0x1108>
    0.00 :    e38f:   mov    %r15,0x8(%rax)
    0.00 :    e393:   test   %r12d,%r12d
    0.00 :    e396:   jne    1025c <_dl_relocate_object+0x1fcc>
    0.00 :    e39c:   cmpq   $0x0,0x2686c(%rip)        # 34c10 <_rtld_global_ro+0x1b0>
    0.00 :    e3a4:   jne    f3b2 <_dl_relocate_object+0x1122>
    0.00 :    e3aa:   lea    0x43ef(%rip),%rsi        # 127a0 <_dl_runtime_resolve_fxsave>
    0.00 :    e3b1:   mov    %rsi,0x10(%rax)
    0.00 :    e3b5:   mov    $0x1,%r10d
    0.00 :    e3bb:   movzbl 0x336(%r15),%ecx
    0.00 :    e3c3:   lea    0x276e6(%rip),%rax        # 35ab0 <_rtld_global+0xab0>
    0.00 :    e3ca:   mov    (%r15),%r14
    0.00 :    e3cd:   mov    %ecx,%edi
    0.00 :    e3cf:   and    $0x20,%edi
    0.00 :    e3d2:   cmp    %rax,%r15
    0.00 :    e3d5:   je     e470 <_dl_relocate_object+0x1e0>
    0.00 :    e3db:   mov    0x160(%r15),%rax
    0.00 :    e3e2:   test   %rax,%rax
    0.00 :    e3e5:   je     e470 <_dl_relocate_object+0x1e0>
    0.00 :    e3eb:   mov    0x8(%rax),%rax
    0.00 :    e3ef:   test   %dil,%dil
    0.00 :    e3f2:   lea    (%rax,%r14,1),%rdx
    0.00 :    e3f6:   cmove  %rax,%rdx
    0.00 :    e3fa:   mov    0x158(%r15),%rax
    0.00 :    e401:   mov    0x8(%rax),%rsi
    0.00 :    e405:   add    %rdx,%rsi
    0.00 :    e408:   cmp    %rsi,%rdx
    0.00 :    e40b:   jae    e470 <_dl_relocate_object+0x1e0>
    0.00 :    e40d:   xor    %edi,%edi
    0.00 :    e40f:   jmp    e42b <_dl_relocate_object+0x19b>
    0.00 :    e411:   nopl   0x0(%rax)
    0.00 :    e418:   add    %r14,%rax
    0.00 :    e41b:   add    $0x8,%rdx
    0.00 :    e41f:   add    %r14,(%rax)
    0.00 :    e422:   lea    0x8(%rax),%rdi
    0.00 :    e426:   cmp    %rsi,%rdx
    0.00 :    e429:   jae    e460 <_dl_relocate_object+0x1d0>
    0.00 :    e42b:   mov    (%rdx),%rax
    0.00 :    e42e:   test   $0x1,%al
    0.00 :    e430:   je     e418 <_dl_relocate_object+0x188>
    0.00 :    e432:   shr    %rax
    0.00 :    e435:   mov    %rdi,%rcx
    0.00 :    e438:   je     e450 <_dl_relocate_object+0x1c0>
    0.00 :    e43a:   nopw   0x0(%rax,%rax,1)
    0.00 :    e440:   test   $0x1,%al
    0.00 :    e442:   je     e447 <_dl_relocate_object+0x1b7>
    0.00 :    e444:   add    %r14,(%rcx)
    0.00 :    e447:   add    $0x8,%rcx
    0.00 :    e44b:   shr    %rax
    0.00 :    e44e:   jne    e440 <_dl_relocate_object+0x1b0>
    0.00 :    e450:   add    $0x8,%rdx
    0.00 :    e454:   add    $0x1f8,%rdi
    0.00 :    e45b:   cmp    %rsi,%rdx
    0.00 :    e45e:   jb     e42b <_dl_relocate_object+0x19b>
    0.00 :    e460:   movzbl 0x336(%r15),%ecx
    0.00 :    e468:   mov    (%r15),%r14
    0.00 :    e46b:   mov    %ecx,%edi
    0.00 :    e46d:   and    $0x20,%edi
    0.00 :    e470:   mov    0x78(%r15),%rax
    0.00 :    e474:   pxor   %xmm0,%xmm0
    0.00 :    e478:   movaps %xmm0,-0x70(%rbp)
    0.00 :    e47c:   movaps %xmm0,-0x60(%rbp)
    0.00 :    e480:   movaps %xmm0,-0x50(%rbp)
    0.00 :    e484:   movaps %xmm0,-0x40(%rbp)
    0.00 :    e488:   test   %rax,%rax
    0.00 :    e48b:   je     f338 <_dl_relocate_object+0x10a8>
    0.00 :    e491:   mov    0x8(%rax),%rax
    0.00 :    e495:   xor    %esi,%esi
    0.00 :    e497:   test   %rax,%rax
    0.00 :    e49a:   je     e4d8 <_dl_relocate_object+0x248>
    0.00 :    e49c:   lea    (%rax,%r14,1),%rdx
    0.00 :    e4a0:   test   %dil,%dil
    0.00 :    e4a3:   cmovne %rdx,%rax
    0.00 :    e4a7:   mov    0x80(%r15),%rdx
    0.00 :    e4ae:   mov    0x8(%rdx),%rsi
    0.00 :    e4b2:   movq   %rax,%xmm0
    0.00 :    e4b7:   mov    0x1a0(%r15),%rdx
    0.00 :    e4be:   movq   %rsi,%xmm6
    0.00 :    e4c3:   punpcklqdq %xmm6,%xmm0
    0.00 :    e4c7:   movaps %xmm0,-0x70(%rbp)
    0.00 :    e4cb:   test   %rdx,%rdx
    0.00 :    e4ce:   je     e4d8 <_dl_relocate_object+0x248>
    0.00 :    e4d0:   mov    0x8(%rdx),%rdx
    0.00 :    e4d4:   mov    %rdx,-0x60(%rbp)
    0.00 :    e4d8:   cmpq   $0x0,0xe0(%r15)
    0.00 :    e4e0:   je     e547 <_dl_relocate_object+0x2b7>
    0.00 :    e4e2:   mov    0xf8(%r15),%rdx
    0.00 :    e4e9:   test   %dil,%dil
    0.00 :    e4ec:   mov    0x50(%r15),%rdi
    0.00 :    e4f0:   mov    0x8(%rdx),%rdx
    0.00 :    e4f4:   mov    0x8(%rdi),%rdi
    0.00 :    e4f8:   lea    (%rdx,%r14,1),%r8
    0.00 :    e4fc:   movq   %rdi,%xmm5
    0.00 :    e501:   cmovne %r8,%rdx
    0.00 :    e505:   test   %rax,%rax
    0.00 :    e508:   cmove  %rdx,%rax
    0.00 :    e50c:   movq   %rdx,%xmm0
    0.00 :    e511:   lea    (%rdi,%rdx,1),%r9
    0.00 :    e515:   punpcklqdq %xmm5,%xmm0
    0.00 :    e519:   lea    (%rax,%rsi,1),%r8
    0.00 :    e51d:   mov    %rax,-0x70(%rbp)
    0.00 :    e521:   cmp    %r9,%r8
    0.00 :    e524:   jne    e531 <_dl_relocate_object+0x2a1>
    0.00 :    e526:   sub    %rdi,%rsi
    0.00 :    e529:   mov    %rsi,-0x68(%rbp)
    0.00 :    e52d:   lea    (%rsi,%rax,1),%r8
    0.00 :    e531:   test   %r10d,%r10d
    0.00 :    e534:   jne    e53f <_dl_relocate_object+0x2af>
    0.00 :    e536:   cmp    %r8,%rdx
    0.00 :    e539:   je     f3d4 <_dl_relocate_object+0x1144>
    0.00 :    e53f:   mov    %r10d,-0x38(%rbp)
    0.00 :    e543:   movaps %xmm0,-0x50(%rbp)
    0.00 :    e547:   lea    -0x30(%rbp),%rax
    0.00 :    e54b:   mov    %bl,-0xb5(%rbp)
    0.00 :    e551:   mov    %r15,%r11
    0.00 :    e554:   mov    %r14,%r15
    0.00 :    e557:   mov    %rax,-0xd8(%rbp)
    0.00 :    e55e:   and    $0x2000000,%r13d
    0.00 :    e565:   mov    %r12d,-0xe4(%rbp)
    0.00 :    e56c:   mov    %r13d,-0xb4(%rbp)
    0.00 :    e573:   lea    -0x70(%rbp),%r13
    0.00 :    e577:   mov    0x10(%r13),%rdx
    0.00 :    e57b:   mov    0x0(%r13),%rax
    0.00 :    e57f:   mov    0x8(%r13),%rdi
    0.00 :    e583:   lea    (%rdx,%rdx,2),%rdx
    0.00 :    e587:   lea    (%rax,%rdx,8),%rbx
    0.00 :    e58b:   mov    0x70(%r11),%rdx
    0.00 :    e58f:   add    %rax,%rdi
    0.00 :    e592:   and    $0x20,%ecx
    0.00 :    e595:   mov    %rdi,-0x98(%rbp)
    0.00 :    e59c:   mov    0x8(%rdx),%rsi
    0.00 :    e5a0:   lea    (%rsi,%r15,1),%rdx
    0.00 :    e5a4:   cmove  %rsi,%rdx
    0.00 :    e5a8:   mov    %rdx,-0x88(%rbp)
    0.00 :    e5af:   mov    0x18(%r13),%edx
    0.00 :    e5b3:   test   %edx,%edx
    0.00 :    e5b5:   je     e8f0 <_dl_relocate_object+0x660>
    0.00 :    e5bb:   xor    %r10d,%r10d
    0.00 :    e5be:   xor    %r14d,%r14d
    0.00 :    e5c1:   cmp    %rdi,%rbx
    0.00 :    e5c4:   jae    e698 <_dl_relocate_object+0x408>
    0.00 :    e5ca:   mov    %r13,-0x90(%rbp)
    0.00 :    e5d1:   mov    %r11,%r13
    0.00 :    e5d4:   mov    %r10,%r11
    0.00 :    e5d7:   mov    -0x98(%rbp),%r10
    0.00 :    e5de:   jmp    e60d <_dl_relocate_object+0x37d>
    0.00 :    e5e0:   mov    (%rbx),%r12
    0.00 :    e5e3:   add    %r15,%r12
    0.00 :    e5e6:   cmp    $0x7,%rax
    0.00 :    e5ea:   jne    e780 <_dl_relocate_object+0x4f0>
    0.00 :    e5f0:   mov    0x410(%r13),%rax
    0.00 :    e5f7:   test   %rax,%rax
    0.00 :    e5fa:   jne    e8d8 <_dl_relocate_object+0x648>
    0.00 :    e600:   add    %r15,(%r12)
    0.00 :    e604:   add    $0x18,%rbx
    0.00 :    e608:   cmp    %r10,%rbx
    0.00 :    e60b:   jae    e62b <_dl_relocate_object+0x39b>
    0.00 :    e60d:   mov    0x8(%rbx),%rcx
    0.00 :    e611:   mov    %ecx,%eax
    0.00 :    e613:   cmp    $0x25,%ecx
    0.00 :    e616:   jne    e5e0 <_dl_relocate_object+0x350>
    0.00 :    e618:   test   %r14,%r14
    0.00 :    e61b:   mov    %rbx,%r11
    0.00 :    e61e:   cmove  %rbx,%r14
    0.00 :    e622:   add    $0x18,%rbx
    0.00 :    e626:   cmp    %r10,%rbx
    0.00 :    e629:   jb     e60d <_dl_relocate_object+0x37d>
    0.00 :    e62b:   mov    %r11,%r10
    0.00 :    e62e:   mov    %r13,%r11
    0.00 :    e631:   mov    -0x90(%rbp),%r13
    0.00 :    e638:   test   %r14,%r14
    0.00 :    e63b:   je     e698 <_dl_relocate_object+0x408>
    0.00 :    e63d:   cmp    %r14,%r10
    0.00 :    e640:   jb     e698 <_dl_relocate_object+0x408>
    0.00 :    e642:   mov    %r13,-0x88(%rbp)
    0.00 :    e649:   mov    %r11,%r12
    0.00 :    e64c:   mov    %r10,%r13
    0.00 :    e64f:   jmp    e661 <_dl_relocate_object+0x3d1>
    0.00 :    e651:   nopl   0x0(%rax)
    0.00 :    e658:   add    $0x18,%r14
    0.00 :    e65c:   cmp    %r14,%r13
    0.00 :    e65f:   jb     e68e <_dl_relocate_object+0x3fe>
    0.00 :    e661:   cmpl   $0x25,0x8(%r14)
    0.00 :    e666:   jne    e658 <_dl_relocate_object+0x3c8>
    0.00 :    e668:   mov    (%r14),%rbx
    0.00 :    e66b:   mov    -0xb4(%rbp),%edi
    0.00 :    e671:   mov    0x10(%r14),%rax
    0.00 :    e675:   add    (%r12),%rax
    0.00 :    e679:   add    %r15,%rbx
    0.00 :    e67c:   test   %edi,%edi
    0.00 :    e67e:   jne    e682 <_dl_relocate_object+0x3f2>
    0.00 :    e680:   call   *%rax
    0.00 :    e682:   add    $0x18,%r14
    0.00 :    e686:   mov    %rax,(%rbx)
    0.00 :    e689:   cmp    %r14,%r13
    0.00 :    e68c:   jae    e661 <_dl_relocate_object+0x3d1>
    0.00 :    e68e:   mov    -0x88(%rbp),%r13
    0.00 :    e695:   mov    %r12,%r11
    0.00 :    e698:   mov    -0xd8(%rbp),%rax
    0.00 :    e69f:   add    $0x20,%r13
    0.00 :    e6a3:   cmp    %rax,%r13
    0.00 :    e6a6:   je     e6c0 <_dl_relocate_object+0x430>
    0.00 :    e6a8:   mov    (%r11),%r15
    0.00 :    e6ab:   movzbl 0x336(%r11),%ecx
    0.00 :    e6b3:   jmp    e577 <_dl_relocate_object+0x2e7>
    0.00 :    e6b8:   nopl   0x0(%rax,%rax,1)
    0.00 :    e6c0:   mov    -0xe4(%rbp),%r12d
    0.00 :    e6c7:   movzbl -0xb5(%rbp),%ebx
    0.00 :    e6ce:   mov    %r11,%r15
    0.00 :    e6d1:   test   %r12d,%r12d
    0.00 :    e6d4:   jne    f2c0 <_dl_relocate_object+0x1030>
    0.00 :    e6da:   test   %bl,%bl
    0.00 :    e6dc:   jne    f2c0 <_dl_relocate_object+0x1030>
    0.00 :    e6e2:   orb    $0x8,0x334(%r15)
    0.00 :    e6ea:   cmpq   $0x0,-0xe0(%rbp)
    0.00 :    e6f2:   jne    fed2 <_dl_relocate_object+0x1c42>
    0.00 :    e6f8:   cmpq   $0x0,0x490(%r15)
    0.00 :    e700:   jne    f360 <_dl_relocate_object+0x10d0>
    0.00 :    e706:   lea    -0x28(%rbp),%rsp
    0.00 :    e70a:   pop    %rbx
    0.00 :    e70b:   pop    %r12
    0.00 :    e70d:   pop    %r13
    0.00 :    e70f:   pop    %r14
    0.00 :    e711:   pop    %r15
    0.00 :    e713:   pop    %rbp
    0.00 :    e714:   ret
    0.00 :    e715:   nopl   (%rax)
    0.00 :    e718:   cmpq   $0x0,0x100(%r15)
    0.00 :    e720:   je     e338 <_dl_relocate_object+0xa8>
    0.00 :    e726:   test   %eax,%eax
    0.00 :    e728:   jne    103cd <_dl_relocate_object+0x213d>
    0.00 :    e72e:   mov    0xf0(%r15),%rax
    0.00 :    e735:   xor    %r10d,%r10d
    0.00 :    e738:   mov    %rax,-0xe0(%rbp)
    0.00 :    e73f:   test   %rax,%rax
    0.00 :    e742:   je     e3bb <_dl_relocate_object+0x12b>
    0.00 :    e748:   movzwl 0x2d0(%r15),%edx
    0.00 :    e750:   mov    0x2c0(%r15),%rsi
    0.00 :    e757:   lea    0x0(,%rdx,8),%rax
    0.00 :    e75f:   mov    %rsi,%rcx
    0.00 :    e762:   sub    %rdx,%rax
    0.00 :    e765:   lea    (%rsi,%rax,8),%rax
    0.00 :    e769:   cmp    %rax,%rsi
    0.00 :    e76c:   jb     fd7d <_dl_relocate_object+0x1aed>
    0.00 :    e772:   xor    %eax,%eax
    0.00 :    e774:   mov    %rax,-0xe0(%rbp)
    0.00 :    e77b:   jmp    e3bb <_dl_relocate_object+0x12b>
    0.00 :    e780:   cmp    $0x24,%rax
    0.00 :    e784:   jne    fbf0 <_dl_relocate_object+0x1960>
    0.00 :    e78a:   mov    0x70(%r13),%rax
    0.00 :    e78e:   shr    $0x20,%rcx
    0.00 :    e792:   xor    %edx,%edx
    0.00 :    e794:   mov    0x8(%rax),%rsi
    0.00 :    e798:   testb  $0x20,0x336(%r13)
    0.00 :    e7a0:   je     e7a9 <_dl_relocate_object+0x519>
    0.00 :    e7a2:   mov    0x0(%r13),%rdx
    0.00 :    e7a6:   add    %rdx,%rsi
    0.00 :    e7a9:   lea    (%rcx,%rcx,1),%rax
    0.00 :    e7ad:   mov    0x1e8(%r13),%r8
    0.00 :    e7b4:   add    %rax,%rcx
    0.00 :    e7b7:   lea    (%rsi,%rcx,8),%rdi
    0.00 :    e7bb:   mov    %rdi,-0x88(%rbp)
    0.00 :    e7c2:   test   %r8,%r8
    0.00 :    e7c5:   je     e7e5 <_dl_relocate_object+0x555>
    0.00 :    e7c7:   add    %rdx,%rax
    0.00 :    e7ca:   add    0x8(%r8),%rax
    0.00 :    e7ce:   movzwl (%rax),%eax
    0.00 :    e7d1:   and    $0x7fff,%eax
    0.00 :    e7d6:   lea    (%rax,%rax,2),%rcx
    0.00 :    e7da:   mov    0x300(%r13),%rax
    0.00 :    e7e1:   lea    (%rax,%rcx,8),%r8
    0.00 :    e7e5:   mov    -0x88(%rbp),%rsi
    0.00 :    e7ec:   mov    %rsi,-0x78(%rbp)
    0.00 :    e7f0:   movzbl 0x4(%rsi),%eax
    0.00 :    e7f4:   mov    %eax,%edi
    0.00 :    e7f6:   shr    $0x4,%dil
    0.00 :    e7fa:   je     f158 <_dl_relocate_object+0xec8>
    0.00 :    e800:   movzbl 0x5(%rsi),%ecx
    0.00 :    e804:   and    $0x3,%ecx
    0.00 :    e807:   sub    $0x1,%ecx
    0.00 :    e80a:   cmp    $0x1,%ecx
    0.00 :    e80d:   jbe    f158 <_dl_relocate_object+0xec8>
    0.00 :    e813:   cmp    0x428(%r13),%rsi
    0.00 :    e81a:   je     1006d <_dl_relocate_object+0x1ddd>
    0.00 :    e820:   mov    -0x88(%rbp),%rdi
    0.00 :    e827:   mov    0x68(%r13),%rax
    0.00 :    e82b:   movl   $0x1,0x430(%r13)
    0.00 :    e836:   add    0x8(%rax),%rdx
    0.00 :    e83a:   mov    (%rdi),%eax
    0.00 :    e83c:   mov    %rdi,0x428(%r13)
    0.00 :    e843:   lea    (%rdx,%rax,1),%rdi
    0.00 :    e847:   test   %r8,%r8
    0.00 :    e84a:   je     e858 <_dl_relocate_object+0x5c8>
    0.00 :    e84c:   mov    0x8(%r8),%eax
    0.00 :    e850:   test   %eax,%eax
    0.00 :    e852:   je     f390 <_dl_relocate_object+0x1100>
    0.00 :    e858:   mov    %r11,-0xa0(%rbp)
    0.00 :    e85f:   mov    -0xb0(%rbp),%rcx
    0.00 :    e866:   lea    -0x78(%rbp),%rdx
    0.00 :    e86a:   mov    %r13,%rsi
    0.00 :    e86d:   mov    %r10,-0x98(%rbp)
    0.00 :    e874:   mov    $0x1,%r9d
    0.00 :    e87a:   push   $0x0
    0.00 :    e87c:   push   $0x9
    0.00 :    e87e:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    e883:   mov    -0x78(%rbp),%rdx
    0.00 :    e887:   movq   %rax,%xmm0
    0.00 :    e88c:   mov    %rax,%r9
    0.00 :    e88f:   movq   %rdx,%xmm6
    0.00 :    e894:   punpcklqdq %xmm6,%xmm0
    0.00 :    e898:   movups %xmm0,0x438(%r13)
    0.00 :    e8a0:   pop    %r10
    0.00 :    e8a2:   pop    %r11
    0.00 :    e8a4:   mov    -0x98(%rbp),%r10
    0.00 :    e8ab:   mov    -0xa0(%rbp),%r11
    0.00 :    e8b2:   test   %rdx,%rdx
    0.00 :    e8b5:   jne    f3e0 <_dl_relocate_object+0x1150>
    0.00 :    e8bb:   mov    0x10(%rbx),%rax
    0.00 :    e8bf:   mov    %rax,0x8(%r12)
    0.00 :    e8c4:   lea    0x61f5(%rip),%rax        # 14ac0 <_dl_tlsdesc_undefweak>
    0.00 :    e8cb:   mov    %rax,(%r12)
    0.00 :    e8cf:   jmp    e604 <_dl_relocate_object+0x374>
    0.00 :    e8d4:   nopl   0x0(%rax)
    0.00 :    e8d8:   mov    %r12,%rdx
    0.00 :    e8db:   sub    0x418(%r13),%rdx
    0.00 :    e8e2:   lea    (%rax,%rdx,2),%rax
    0.00 :    e8e6:   mov    %rax,(%r12)
    0.00 :    e8ea:   jmp    e604 <_dl_relocate_object+0x374>
    0.00 :    e8ef:   nop
    0.00 :    e8f0:   lea    0x271b9(%rip),%rsi        # 35ab0 <_rtld_global+0xab0>
    0.00 :    e8f7:   cmp    %rsi,%r11
    0.00 :    e8fa:   je     e934 <_dl_relocate_object+0x6a4>
    0.00 :    e8fc:   cmp    %rbx,%rax
    0.00 :    e8ff:   jae    e934 <_dl_relocate_object+0x6a4>
    0.00 :    e901:   nopl   0x0(%rax)
    0.00 :    e908:   mov    (%rax),%rcx
    0.00 :    e90b:   mov    0x8(%rax),%edx
    0.00 :    e90e:   add    %r15,%rcx
    0.00 :    e911:   cmp    $0x26,%rdx
    0.00 :    e915:   je     e921 <_dl_relocate_object+0x691>
    0.00 :    e917:   cmp    $0x8,%rdx
    0.00 :    e91b:   jne    103dc <_dl_relocate_object+0x214c>
    0.00 :    e921:   mov    0x10(%rax),%rdx
    0.00 :    e925:   add    $0x18,%rax
    0.00 :    e929:   add    %r15,%rdx
    0.00 :    e92c:   mov    %rdx,(%rcx)
    0.00 :    e92f:   cmp    %rbx,%rax
    0.00 :    e932:   jb     e908 <_dl_relocate_object+0x678>
    0.00 :    e934:   mov    0x1e8(%r11),%r10
    0.00 :    e93b:   test   %r10,%r10
    0.00 :    e93e:   je     f3f0 <_dl_relocate_object+0x1160>
    0.00 :    e944:   mov    0x8(%r10),%rax
    0.00 :    e948:   mov    %rax,-0xa0(%rbp)
    0.00 :    e94f:   testb  $0x20,0x336(%r11)
    0.00 :    e957:   jne    f348 <_dl_relocate_object+0x10b8>
    0.00 :    e95d:   mov    -0x98(%rbp),%rax
    0.00 :    e964:   cmp    %rax,%rbx
    0.00 :    e967:   jae    e698 <_dl_relocate_object+0x408>
    0.00 :    e96d:   xor    %r10d,%r10d
    0.00 :    e970:   mov    %r13,-0xf0(%rbp)
    0.00 :    e977:   movq   $0x0,-0xd0(%rbp)
    0.00 :    e982:   mov    %r10,-0xc8(%rbp)
    0.00 :    e989:   mov    %r15,-0xa8(%rbp)
    0.00 :    e990:   mov    %r11,%r15
    0.00 :    e993:   nopl   0x0(%rax,%rax,1)
    0.00 :    e998:   mov    0x8(%rbx),%r14
    0.00 :    e99c:   mov    -0xa0(%rbp),%rax
    0.00 :    e9a3:   mov    -0x88(%rbp),%rsi
    0.00 :    e9aa:   mov    %r14,%rdx
    0.00 :    e9ad:   mov    %r14d,%r13d
    0.00 :    e9b0:   shr    $0x20,%rdx
    0.00 :    e9b4:   movzwl (%rax,%rdx,2),%eax
   50.44 :    e9b8:   lea    (%rdx,%rdx,2),%rdx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/do-rel.h:134
    0.00 :    e9bc:   lea    (%rsi,%rdx,8),%r12
    0.00 :    e9c0:   mov    -0xa8(%rbp),%rsi
    0.00 :    e9c7:   add    (%rbx),%rsi
    0.00 :    e9ca:   and    $0x7fff,%eax
    0.00 :    e9cf:   mov    %r12,-0x80(%rbp)
    0.00 :    e9d3:   lea    (%rax,%rax,2),%rdx
    0.00 :    e9d7:   mov    0x300(%r15),%rax
    0.00 :    e9de:   mov    %rsi,-0x90(%rbp)
    0.00 :    e9e5:   lea    (%rax,%rdx,8),%r10
    0.00 :    e9e9:   cmp    $0x25,%r14d
    0.00 :    e9ed:   je     f090 <_dl_relocate_object+0xe00>
    0.00 :    e9f3:   mov    %r12,-0x78(%rbp)
    0.00 :    e9f7:   cmp    $0x8,%r13
    0.00 :    e9fb:   je     f0b8 <_dl_relocate_object+0xe28>
    0.00 :    ea01:   cmp    $0x26,%r13
    0.00 :    ea05:   je     f0b8 <_dl_relocate_object+0xe28>
    0.00 :    ea0b:   test   %r13,%r13
    0.00 :    ea0e:   je     eb6e <_dl_relocate_object+0x8de>
    0.00 :    ea14:   movzbl 0x4(%r12),%eax
   49.56 :    ea1a:   mov    %eax,%esi // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-reloc.c:170
    0.00 :    ea1c:   shr    $0x4,%sil
    0.00 :    ea20:   je     f070 <_dl_relocate_object+0xde0>
    0.00 :    ea26:   movzbl 0x5(%r12),%edx
    0.00 :    ea2c:   and    $0x3,%edx
    0.00 :    ea2f:   sub    $0x1,%edx
    0.00 :    ea32:   cmp    $0x1,%edx
    0.00 :    ea35:   jbe    f070 <_dl_relocate_object+0xde0>
    0.00 :    ea3b:   lea    -0x5(%r13),%rax
    0.00 :    ea3f:   cmp    0x428(%r15),%r12
    0.00 :    ea46:   je     f100 <_dl_relocate_object+0xe70>
    0.00 :    ea4c:   xor    %r9d,%r9d
    0.00 :    ea4f:   cmp    $0x1f,%rax
    0.00 :    ea53:   ja     ea72 <_dl_relocate_object+0x7e2>
    0.00 :    ea55:   lea    0x197c4(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    ea5c:   movzbl -0x5(%rax,%r13,1),%r9d
    0.00 :    ea62:   lea    0x19797(%rip),%rax        # 28200 <CSWTCH.89>
    0.00 :    ea69:   or     -0x5(%rax,%r13,1),%r9b
    0.00 :    ea6e:   movsbl %r9b,%r9d
    0.00 :    ea72:   mov    0x68(%r15),%rax
    0.00 :    ea76:   mov    (%r12),%edi
    0.00 :    ea7a:   mov    %r9d,0x430(%r15)
    0.00 :    ea81:   mov    %r12,0x428(%r15)
    0.00 :    ea88:   mov    0x8(%rax),%rdx
    0.00 :    ea8c:   xor    %eax,%eax
    0.00 :    ea8e:   testb  $0x20,0x336(%r15)
    0.00 :    ea96:   je     ea9b <_dl_relocate_object+0x80b>
    0.00 :    ea98:   mov    (%r15),%rax
    0.00 :    ea9b:   add    %rdx,%rdi
    0.00 :    ea9e:   xor    %r8d,%r8d
    0.00 :    eaa1:   add    %rax,%rdi
    0.00 :    eaa4:   test   %r10,%r10
    0.00 :    eaa7:   je     eab3 <_dl_relocate_object+0x823>
    0.00 :    eaa9:   mov    0x8(%r10),%esi
    0.00 :    eaad:   test   %esi,%esi
    0.00 :    eaaf:   cmovne %r10,%r8
    0.00 :    eab3:   mov    %r10,-0xc0(%rbp)
    0.00 :    eaba:   mov    -0xb0(%rbp),%rcx
    0.00 :    eac1:   lea    -0x78(%rbp),%rdx
    0.00 :    eac5:   mov    %r15,%rsi
    0.00 :    eac8:   push   $0x0
    0.00 :    eaca:   push   $0x9
    0.00 :    eacc:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    ead1:   mov    -0x78(%rbp),%rdx
    0.00 :    ead5:   mov    -0xc0(%rbp),%r10
    0.00 :    eadc:   movq   %rax,%xmm0
    0.00 :    eae1:   mov    %rax,%r11
    0.00 :    eae4:   movq   %rdx,%xmm1
    0.00 :    eae9:   punpcklqdq %xmm1,%xmm0
    0.00 :    eaed:   movups %xmm0,0x438(%r15)
    0.00 :    eaf5:   pop    %rax
    0.00 :    eaf6:   pop    %rcx
    0.00 :    eaf7:   xor    %r9d,%r9d
    0.00 :    eafa:   test   %rdx,%rdx
    0.00 :    eafd:   je     eb38 <_dl_relocate_object+0x8a8>
    0.00 :    eaff:   movzwl 0x6(%rdx),%ecx
    0.00 :    eb03:   movzbl 0x4(%rdx),%eax
    0.00 :    eb07:   cmp    $0xfff1,%cx
    0.00 :    eb0b:   je     f084 <_dl_relocate_object+0xdf4>
    0.00 :    eb11:   mov    (%r11),%r9
    0.00 :    eb14:   and    $0xf,%eax
    0.00 :    eb17:   add    0x8(%rdx),%r9
    0.00 :    eb1b:   cmp    $0xa,%al
    0.00 :    eb1d:   sete   %dl
    0.00 :    eb20:   test   %cx,%cx
    0.00 :    eb23:   setne  %al
    0.00 :    eb26:   test   %al,%dl
    0.00 :    eb28:   je     eb38 <_dl_relocate_object+0x8a8>
    0.00 :    eb2a:   mov    -0xb4(%rbp),%eax
    0.00 :    eb30:   test   %eax,%eax
    0.00 :    eb32:   je     f1e8 <_dl_relocate_object+0xf58>
    0.00 :    eb38:   cmp    $0x25,%r13
    0.00 :    eb3c:   ja     f2b0 <_dl_relocate_object+0x1020>
    0.00 :    eb42:   lea    0x19577(%rip),%rdi        # 280c0 <primes.0+0x80>
    0.00 :    eb49:   movslq (%rdi,%r13,4),%rax
    0.00 :    eb4d:   add    %rdi,%rax
    0.00 :    eb50:   notrack jmp *%rax
    0.00 :    eb53:   add    0x10(%rbx),%r9
    0.00 :    eb57:   mov    -0x90(%rbp),%rax
    0.00 :    eb5e:   mov    %r9,(%rax)
    0.00 :    eb61:   mov    0x8(%rbx),%eax
    0.00 :    eb64:   cmp    $0x7,%rax
    0.00 :    eb68:   je     edc8 <_dl_relocate_object+0xb38>
    0.00 :    eb6e:   mov    -0x98(%rbp),%rax
    0.00 :    eb75:   add    $0x18,%rbx
    0.00 :    eb79:   cmp    %rax,%rbx
    0.00 :    eb7c:   jb     e998 <_dl_relocate_object+0x708>
    0.00 :    eb82:   mov    -0xc8(%rbp),%r10
    0.00 :    eb89:   mov    %r15,%r11
    0.00 :    eb8c:   mov    -0xf0(%rbp),%r13
    0.00 :    eb93:   mov    -0xa8(%rbp),%r15
    0.00 :    eb9a:   test   %r10,%r10
    0.00 :    eb9d:   je     e698 <_dl_relocate_object+0x408>
    0.00 :    eba3:   mov    -0xd0(%rbp),%rax
    0.00 :    ebaa:   cmp    %r10,%rax
    0.00 :    ebad:   jb     e698 <_dl_relocate_object+0x408>
    0.00 :    ebb3:   mov    %r13,-0x98(%rbp)
    0.00 :    ebba:   mov    %r10,%rbx
    0.00 :    ebbd:   mov    %rax,%r13
    0.00 :    ebc0:   mov    %r11,%r12
    0.00 :    ebc3:   jmp    ebd5 <_dl_relocate_object+0x945>
    0.00 :    ebc5:   nopl   (%rax)
    0.00 :    ebc8:   add    $0x18,%rbx
    0.00 :    ebcc:   cmp    %rbx,%r13
    0.00 :    ebcf:   jb     ed35 <_dl_relocate_object+0xaa5>
    0.00 :    ebd5:   mov    0x8(%rbx),%rax
    0.00 :    ebd9:   cmp    $0x25,%eax
    0.00 :    ebdc:   jne    ebc8 <_dl_relocate_object+0x938>
    0.00 :    ebde:   mov    -0xa0(%rbp),%rdi
    0.00 :    ebe5:   shr    $0x20,%rax
    0.00 :    ebe9:   mov    (%rbx),%r14
    0.00 :    ebec:   mov    0x300(%r12),%rcx
    0.00 :    ebf4:   movzwl (%rdi,%rax,2),%esi
    0.00 :    ebf8:   mov    -0x88(%rbp),%rdi
    0.00 :    ebff:   lea    (%rax,%rax,2),%rax
    0.00 :    ec03:   add    %r15,%r14
    0.00 :    ec06:   lea    (%rdi,%rax,8),%r10
    0.00 :    ec0a:   mov    %r10,-0x78(%rbp)
    0.00 :    ec0e:   movzbl 0x4(%r10),%eax
    0.00 :    ec13:   mov    %eax,%edi
    0.00 :    ec15:   shr    $0x4,%dil
    0.00 :    ec19:   je     f0d8 <_dl_relocate_object+0xe48>
    0.00 :    ec1f:   movzbl 0x5(%r10),%edx
    0.00 :    ec24:   and    $0x3,%edx
    0.00 :    ec27:   sub    $0x1,%edx
    0.00 :    ec2a:   cmp    $0x1,%edx
    0.00 :    ec2d:   jbe    f0d8 <_dl_relocate_object+0xe48>
    0.00 :    ec33:   cmp    0x428(%r12),%r10
    0.00 :    ec3b:   je     fca2 <_dl_relocate_object+0x1a12>
    0.00 :    ec41:   mov    0x68(%r12),%rax
    0.00 :    ec46:   mov    (%r10),%edi
    0.00 :    ec49:   mov    %r10,0x428(%r12)
    0.00 :    ec51:   xor    %edx,%edx
    0.00 :    ec53:   movl   $0x0,0x430(%r12)
    0.00 :    ec5f:   mov    0x8(%rax),%r9
    0.00 :    ec63:   testb  $0x20,0x336(%r12)
    0.00 :    ec6c:   je     ec72 <_dl_relocate_object+0x9e2>
    0.00 :    ec6e:   mov    (%r12),%rdx
    0.00 :    ec72:   mov    %rsi,%rax
    0.00 :    ec75:   add    %r9,%rdi
    0.00 :    ec78:   and    $0x7fff,%eax
    0.00 :    ec7d:   add    %rdx,%rdi
    0.00 :    ec80:   lea    (%rax,%rax,2),%rax
    0.00 :    ec84:   lea    (%rcx,%rax,8),%r8
    0.00 :    ec88:   test   %r8,%r8
    0.00 :    ec8b:   je     ec99 <_dl_relocate_object+0xa09>
    0.00 :    ec8d:   mov    0x8(%r8),%r11d
    0.00 :    ec91:   test   %r11d,%r11d
    0.00 :    ec94:   jne    ec99 <_dl_relocate_object+0xa09>
    0.00 :    ec96:   xor    %r8d,%r8d
    0.00 :    ec99:   mov    %r10,-0x90(%rbp)
    0.00 :    eca0:   mov    -0xb0(%rbp),%rcx
    0.00 :    eca7:   xor    %r9d,%r9d
    0.00 :    ecaa:   mov    %r12,%rsi
    0.00 :    ecad:   push   $0x0
    0.00 :    ecaf:   lea    -0x78(%rbp),%rdx
    0.00 :    ecb3:   push   $0x9
    0.00 :    ecb5:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    ecba:   mov    -0x78(%rbp),%rdx
    0.00 :    ecbe:   mov    -0x90(%rbp),%r10
    0.00 :    ecc5:   movq   %rax,%xmm0
    0.00 :    ecca:   mov    %rax,%rcx
    0.00 :    eccd:   movq   %rdx,%xmm3
    0.00 :    ecd2:   punpcklqdq %xmm3,%xmm0
    0.00 :    ecd6:   movups %xmm0,0x438(%r12)
    0.00 :    ecdf:   pop    %r8
    0.00 :    ece1:   pop    %r9
    0.00 :    ece3:   test   %rdx,%rdx
    0.00 :    ece6:   je     ed11 <_dl_relocate_object+0xa81>
    0.00 :    ece8:   movzwl 0x6(%rdx),%esi
    0.00 :    ecec:   movzbl 0x4(%rdx),%eax
    0.00 :    ecf0:   cmp    $0xfff1,%si
    0.00 :    ecf4:   je     f0ec <_dl_relocate_object+0xe5c>
    0.00 :    ecfa:   mov    (%rcx),%r11
    0.00 :    ecfd:   and    $0xf,%eax
    0.00 :    ed00:   mov    0x8(%rdx),%r9
    0.00 :    ed04:   cmp    $0xa,%al
    0.00 :    ed06:   jne    ed11 <_dl_relocate_object+0xa81>
    0.00 :    ed08:   test   %si,%si
    0.00 :    ed0b:   jne    fbff <_dl_relocate_object+0x196f>
    0.00 :    ed11:   mov    -0xb4(%rbp),%esi
    0.00 :    ed17:   mov    0x10(%rbx),%rax
    0.00 :    ed1b:   add    (%r12),%rax
    0.00 :    ed1f:   test   %esi,%esi
    0.00 :    ed21:   jne    ed25 <_dl_relocate_object+0xa95>
    0.00 :    ed23:   call   *%rax
    0.00 :    ed25:   add    $0x18,%rbx
    0.00 :    ed29:   mov    %rax,(%r14)
    0.00 :    ed2c:   cmp    %rbx,%r13
    0.00 :    ed2f:   jae    ebd5 <_dl_relocate_object+0x945>
    0.00 :    ed35:   mov    -0x98(%rbp),%r13
    0.00 :    ed3c:   mov    %r12,%r11
    0.00 :    ed3f:   jmp    e698 <_dl_relocate_object+0x408>
    0.00 :    ed44:   mov    -0x78(%rbp),%rax
    0.00 :    ed48:   mov    0x10(%rax),%r9
    0.00 :    ed4c:   mov    -0x90(%rbp),%rax
    0.00 :    ed53:   add    0x10(%rbx),%r9
    0.00 :    ed57:   mov    %r9d,(%rax)
    0.00 :    ed5a:   mov    $0xffffffff,%eax
    0.00 :    ed5f:   cmp    %r9,%rax
    0.00 :    ed62:   jae    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    ed68:   lea    0x1d651(%rip),%rdi        # 2c3c0 <__PRETTY_FUNCTION__.0+0x120>
    0.00 :    ed6f:   mov    0x68(%r15),%rax
    0.00 :    ed73:   mov    0x8(%rax),%rax
    0.00 :    ed77:   testb  $0x20,0x336(%r15)
    0.00 :    ed7f:   je     ed84 <_dl_relocate_object+0xaf4>
    0.00 :    ed81:   add    (%r15),%rax
    0.00 :    ed84:   mov    (%r12),%edx
    0.00 :    ed88:   mov    %r10,-0xc0(%rbp)
    0.00 :    ed8f:   add    %rax,%rdx
    0.00 :    ed92:   mov    0x25c9f(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    ed99:   mov    (%rax),%rsi
    0.00 :    ed9c:   lea    0x1afa6(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    eda3:   test   %rsi,%rsi
    0.00 :    eda6:   cmove  %rax,%rsi
    0.00 :    edaa:   xor    %eax,%eax
    0.00 :    edac:   call   d480 <_dl_error_printf>
    0.00 :    edb1:   mov    0x8(%rbx),%eax
    0.00 :    edb4:   mov    -0xc0(%rbp),%r10
    0.00 :    edbb:   cmp    $0x7,%rax
    0.00 :    edbf:   jne    eb6e <_dl_relocate_object+0x8de>
    0.00 :    edc5:   nopl   (%rax)
    0.00 :    edc8:   mov    0x2600a(%rip),%edi        # 34dd8 <_rtld_global_ro+0x378>
    0.00 :    edce:   test   %edi,%edi
    0.00 :    edd0:   je     eb6e <_dl_relocate_object+0x8de>
    0.00 :    edd6:   mov    -0x80(%rbp),%rdx
    0.00 :    edda:   movzbl 0x4(%rdx),%eax
    0.00 :    edde:   shr    $0x4,%al
    0.00 :    ede1:   je     f0f8 <_dl_relocate_object+0xe68>
    0.00 :    ede7:   movzbl 0x5(%rdx),%eax
    0.00 :    edeb:   and    $0x3,%eax
    0.00 :    edee:   sub    $0x1,%eax
    0.00 :    edf1:   cmp    $0x1,%eax
    0.00 :    edf4:   jbe    f0f8 <_dl_relocate_object+0xe68>
    0.00 :    edfa:   cmp    0x428(%r15),%rdx
    0.00 :    ee01:   je     fcd3 <_dl_relocate_object+0x1a43>
    0.00 :    ee07:   mov    0x68(%r15),%rax
    0.00 :    ee0b:   mov    (%rdx),%edi
    0.00 :    ee0d:   mov    %rdx,0x428(%r15)
    0.00 :    ee14:   movl   $0x1,0x430(%r15)
    0.00 :    ee1f:   mov    0x8(%rax),%rdx
    0.00 :    ee23:   xor    %eax,%eax
    0.00 :    ee25:   testb  $0x20,0x336(%r15)
    0.00 :    ee2d:   je     ee32 <_dl_relocate_object+0xba2>
    0.00 :    ee2f:   mov    (%r15),%rax
    0.00 :    ee32:   add    %rdx,%rdi
    0.00 :    ee35:   add    %rax,%rdi
    0.00 :    ee38:   test   %r10,%r10
    0.00 :    ee3b:   je     ee48 <_dl_relocate_object+0xbb8>
    0.00 :    ee3d:   mov    0x8(%r10),%esi
    0.00 :    ee41:   test   %esi,%esi
    0.00 :    ee43:   jne    ee48 <_dl_relocate_object+0xbb8>
    0.00 :    ee45:   xor    %r10d,%r10d
    0.00 :    ee48:   push   $0x0
    0.00 :    ee4a:   mov    -0xb0(%rbp),%rcx
    0.00 :    ee51:   lea    -0x80(%rbp),%rdx
    0.00 :    ee55:   mov    %r10,%r8
    0.00 :    ee58:   push   $0x9
    0.00 :    ee5a:   mov    $0x1,%r9d
    0.00 :    ee60:   mov    %r15,%rsi
    0.00 :    ee63:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    ee68:   mov    -0x80(%rbp),%rdx
    0.00 :    ee6c:   movq   %rax,%xmm0
    0.00 :    ee71:   mov    %rax,%r8
    0.00 :    ee74:   movq   %rdx,%xmm4
    0.00 :    ee79:   punpcklqdq %xmm4,%xmm0
    0.00 :    ee7d:   movups %xmm0,0x438(%r15)
    0.00 :    ee85:   pop    %rax
    0.00 :    ee86:   pop    %rcx
    0.00 :    ee87:   test   %rdx,%rdx
    0.00 :    ee8a:   je     eb6e <_dl_relocate_object+0x8de>
    0.00 :    ee90:   mov    -0x90(%rbp),%rcx
    0.00 :    ee97:   xor    %esi,%esi
    0.00 :    ee99:   mov    %r15,%rdi
    0.00 :    ee9c:   call   177f0 <_dl_audit_symbind>
    0.00 :    eea1:   jmp    eb6e <_dl_relocate_object+0x8de>
    0.00 :    eea6:   test   %r11,%r11
    0.00 :    eea9:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    eeaf:   mov    0x478(%r11),%rax
    0.00 :    eeb6:   mov    -0x90(%rbp),%rdi
    0.00 :    eebd:   mov    %rax,(%rdi)
    0.00 :    eec0:   mov    0x8(%rbx),%eax
    0.00 :    eec3:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    eec8:   mov    -0x78(%rbp),%rax
    0.00 :    eecc:   test   %rax,%rax
    0.00 :    eecf:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    eed5:   mov    0x470(%r11),%rdx
    0.00 :    eedc:   lea    0x1(%rdx),%rcx
    0.00 :    eee0:   cmp    $0x1,%rcx
    0.00 :    eee4:   jbe    101e7 <_dl_relocate_object+0x1f57>
    0.00 :    eeea:   mov    0x8(%rax),%rax
    0.00 :    eeee:   mov    -0x90(%rbp),%rdi
    0.00 :    eef5:   sub    %rdx,%rax
    0.00 :    eef8:   add    0x10(%rbx),%rax
    0.00 :    eefc:   mov    %rax,(%rdi)
    0.00 :    eeff:   mov    0x8(%rbx),%eax
    0.00 :    ef02:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    ef07:   mov    -0x78(%rbp),%rdx
    0.00 :    ef0b:   test   %rdx,%rdx
    0.00 :    ef0e:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    ef14:   mov    -0x90(%rbp),%rsi
    0.00 :    ef1b:   mov    0x10(%rbx),%rax
    0.00 :    ef1f:   add    0x8(%rdx),%rax
    0.00 :    ef23:   mov    %rax,(%rsi)
    0.00 :    ef26:   mov    0x8(%rbx),%eax
    0.00 :    ef29:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    ef2e:   mov    -0xb4(%rbp),%r8d
    0.00 :    ef35:   mov    0x10(%rbx),%rax
    0.00 :    ef39:   add    (%r15),%rax
    0.00 :    ef3c:   test   %r8d,%r8d
    0.00 :    ef3f:   jne    ef51 <_dl_relocate_object+0xcc1>
    0.00 :    ef41:   mov    %r10,-0xc0(%rbp)
    0.00 :    ef48:   call   *%rax
    0.00 :    ef4a:   mov    -0xc0(%rbp),%r10
    0.00 :    ef51:   mov    -0x90(%rbp),%rsi
    0.00 :    ef58:   mov    %rax,(%rsi)
    0.00 :    ef5b:   jmp    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    ef60:   mov    -0x78(%rbp),%rdx
    0.00 :    ef64:   test   %rdx,%rdx
    0.00 :    ef67:   je     fafc <_dl_relocate_object+0x186c>
    0.00 :    ef6d:   mov    0x470(%r11),%rcx
    0.00 :    ef74:   cmp    $0xffffffffffffffff,%rcx
    0.00 :    ef78:   je     ff70 <_dl_relocate_object+0x1ce0>
    0.00 :    ef7e:   test   %rcx,%rcx
    0.00 :    ef81:   je     1021b <_dl_relocate_object+0x1f8b>
    0.00 :    ef87:   mov    0x10(%rbx),%rax
    0.00 :    ef8b:   mov    -0x90(%rbp),%rsi
    0.00 :    ef92:   add    0x8(%rdx),%rax
    0.00 :    ef96:   sub    %rcx,%rax
    0.00 :    ef99:   mov    %rax,0x8(%rsi)
    0.00 :    ef9d:   lea    0x5b0c(%rip),%rax        # 14ab0 <_dl_tlsdesc_return>
    0.00 :    efa4:   mov    %rax,(%rsi)
    0.00 :    efa7:   jmp    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    efac:   mov    -0x78(%rbp),%rdx
    0.00 :    efb0:   mov    -0x90(%rbp),%rsi
    0.00 :    efb7:   mov    0x10(%rbx),%rax
    0.00 :    efbb:   add    0x10(%rdx),%rax
    0.00 :    efbf:   mov    %rax,(%rsi)
    0.00 :    efc2:   mov    0x8(%rbx),%eax
    0.00 :    efc5:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    efca:   mov    -0x78(%rbp),%r13
    0.00 :    efce:   test   %r13,%r13
    0.00 :    efd1:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    efd7:   mov    0x10(%r12),%rdx
    0.00 :    efdc:   mov    0x10(%r13),%rax
    0.00 :    efe0:   mov    %r9,%rsi
    0.00 :    efe3:   mov    %r10,-0xc0(%rbp)
    0.00 :    efea:   mov    -0x90(%rbp),%rdi
    0.00 :    eff1:   cmp    %rax,%rdx
    0.00 :    eff4:   cmova  %rax,%rdx
    0.00 :    eff8:   call   22660 <memcpy>
    0.00 :    effd:   mov    0x10(%r13),%rdx
    0.00 :    f001:   mov    0x10(%r12),%rax
    0.00 :    f006:   mov    -0xc0(%rbp),%r10
    0.00 :    f00d:   cmp    %rdx,%rax
    0.00 :    f010:   jb     f02b <_dl_relocate_object+0xd9b>
    0.00 :    f012:   cmp    %rax,%rdx
    0.00 :    f015:   jae    eb61 <_dl_relocate_object+0x8d1>
    0.00 :    f01b:   mov    0x25a82(%rip),%r9d        # 34aa4 <_rtld_global_ro+0x44>
    0.00 :    f022:   test   %r9d,%r9d
    0.00 :    f025:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    f02b:   lea    0x1d40e(%rip),%rdi        # 2c440 <__PRETTY_FUNCTION__.0+0x1a0>
    0.00 :    f032:   jmp    ed6f <_dl_relocate_object+0xadf>
    0.00 :    f037:   nopw   0x0(%rax,%rax,1)
    0.00 :    f040:   mov    0x10(%rbx),%rax
    0.00 :    f044:   mov    -0x90(%rbp),%rdi
    0.00 :    f04b:   sub    %rdi,%rax
    0.00 :    f04e:   add    %r9,%rax
    0.00 :    f051:   movslq %eax,%rdx
    0.00 :    f054:   mov    %eax,(%rdi)
    0.00 :    f056:   cmp    %rdx,%rax
    0.00 :    f059:   je     eb61 <_dl_relocate_object+0x8d1>
    0.00 :    f05f:   lea    0x1d39a(%rip),%rdi        # 2c400 <__PRETTY_FUNCTION__.0+0x160>
    0.00 :    f066:   jmp    ed6f <_dl_relocate_object+0xadf>
    0.00 :    f06b:   nopl   0x0(%rax,%rax,1)
    0.00 :    f070:   mov    %r12,%rdx
    0.00 :    f073:   mov    %r15,%r11
    0.00 :    f076:   movzwl 0x6(%rdx),%ecx
    0.00 :    f07a:   cmp    $0xfff1,%cx
    0.00 :    f07e:   jne    eb11 <_dl_relocate_object+0x881>
    0.00 :    f084:   xor    %r9d,%r9d
    0.00 :    f087:   jmp    eb14 <_dl_relocate_object+0x884>
    0.00 :    f08c:   nopl   0x0(%rax)
    0.00 :    f090:   mov    -0xc8(%rbp),%rax
    0.00 :    f097:   mov    %rbx,-0xd0(%rbp)
    0.00 :    f09e:   test   %rax,%rax
    0.00 :    f0a1:   cmove  %rbx,%rax
    0.00 :    f0a5:   mov    %rax,-0xc8(%rbp)
    0.00 :    f0ac:   jmp    eb6e <_dl_relocate_object+0x8de>
    0.00 :    f0b1:   nopl   0x0(%rax)
    0.00 :    f0b8:   mov    -0x90(%rbp),%rdi
    0.00 :    f0bf:   mov    0x10(%rbx),%rax
    0.00 :    f0c3:   add    (%r15),%rax
    0.00 :    f0c6:   mov    %rax,(%rdi)
    0.00 :    f0c9:   mov    0x8(%rbx),%eax
    0.00 :    f0cc:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    f0d1:   nopl   0x0(%rax)
    0.00 :    f0d8:   mov    %r10,%rdx
    0.00 :    f0db:   mov    %r12,%rcx
    0.00 :    f0de:   movzwl 0x6(%rdx),%esi
    0.00 :    f0e2:   cmp    $0xfff1,%si
    0.00 :    f0e6:   jne    ecfa <_dl_relocate_object+0xa6a>
    0.00 :    f0ec:   xor    %r11d,%r11d
    0.00 :    f0ef:   jmp    ecfd <_dl_relocate_object+0xa6d>
    0.00 :    f0f4:   nopl   0x0(%rax)
    0.00 :    f0f8:   mov    %r15,%r8
    0.00 :    f0fb:   jmp    ee90 <_dl_relocate_object+0xc00>
    0.00 :    f100:   mov    0x430(%r15),%edx
    0.00 :    f107:   cmp    $0x1f,%rax
    0.00 :    f10b:   ja     f380 <_dl_relocate_object+0x10f0>
    0.00 :    f111:   lea    0x19108(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    f118:   lea    0x190e1(%rip),%rcx        # 28200 <CSWTCH.89>
    0.00 :    f11f:   movzbl -0x5(%rax,%r13,1),%eax
    0.00 :    f125:   or     -0x5(%rcx,%r13,1),%al
    0.00 :    f12a:   movsbl %al,%eax
    0.00 :    f12d:   cmp    %edx,%eax
    0.00 :    f12f:   jne    ea55 <_dl_relocate_object+0x7c5>
    0.00 :    f135:   mov    0x440(%r15),%rdx
    0.00 :    f13c:   addq   $0x1,0x2695c(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    f144:   mov    0x438(%r15),%r11
    0.00 :    f14b:   mov    %rdx,-0x78(%rbp)
    0.00 :    f14f:   jmp    eaf7 <_dl_relocate_object+0x867>
    0.00 :    f154:   nopl   0x0(%rax)
    0.00 :    f158:   mov    -0x88(%rbp),%rdx
    0.00 :    f15f:   mov    %r13,%r9
    0.00 :    f162:   movzwl 0x6(%rdx),%ecx
    0.00 :    f166:   cmp    $0xfff1,%cx
    0.00 :    f16a:   je     ffab <_dl_relocate_object+0x1d1b>
    0.00 :    f170:   mov    (%r9),%rdi
    0.00 :    f173:   mov    %rdi,-0xa0(%rbp)
    0.00 :    f17a:   and    $0xf,%eax
    0.00 :    f17d:   mov    0x8(%rdx),%rdi
    0.00 :    f181:   cmp    $0xa,%al
    0.00 :    f183:   sete   %dl
    0.00 :    f186:   test   %cx,%cx
    0.00 :    f189:   mov    %rdi,-0x98(%rbp)
    0.00 :    f190:   setne  %al
    0.00 :    f193:   test   %al,%dl
    0.00 :    f195:   je     f1a7 <_dl_relocate_object+0xf17>
    0.00 :    f197:   mov    -0xb4(%rbp),%r8d
    0.00 :    f19e:   test   %r8d,%r8d
    0.00 :    f1a1:   je     1009a <_dl_relocate_object+0x1e0a>
    0.00 :    f1a7:   mov    0x470(%r9),%rax
    0.00 :    f1ae:   cmp    $0xffffffffffffffff,%rax
    0.00 :    f1b2:   je     1036b <_dl_relocate_object+0x20db>
    0.00 :    f1b8:   test   %rax,%rax
    0.00 :    f1bb:   je     ff1c <_dl_relocate_object+0x1c8c>
    0.00 :    f1c1:   mov    -0x78(%rbp),%rcx
    0.00 :    f1c5:   mov    0x10(%rbx),%rdx
    0.00 :    f1c9:   add    0x8(%rcx),%rdx
    0.00 :    f1cd:   sub    %rax,%rdx
    0.00 :    f1d0:   lea    0x58d9(%rip),%rax        # 14ab0 <_dl_tlsdesc_return>
    0.00 :    f1d7:   mov    %rdx,0x8(%r12)
    0.00 :    f1dc:   mov    %rax,(%r12)
    0.00 :    f1e0:   jmp    e604 <_dl_relocate_object+0x374>
    0.00 :    f1e5:   nopl   (%rax)
    0.00 :    f1e8:   cmp    %r11,%r15
    0.00 :    f1eb:   je     f27a <_dl_relocate_object+0xfea>
    0.00 :    f1f1:   movzbl 0x334(%r11),%eax
    0.00 :    f1f9:   test   $0x8,%al
    0.00 :    f1fb:   jne    f27a <_dl_relocate_object+0xfea>
    0.00 :    f1fd:   mov    0x68(%r15),%rdx
    0.00 :    f201:   mov    0x8(%rdx),%rdx
    0.00 :    f205:   testb  $0x20,0x336(%r15)
    0.00 :    f20d:   je     f212 <_dl_relocate_object+0xf82>
    0.00 :    f20f:   add    (%r15),%rdx
    0.00 :    f212:   mov    (%r12),%ecx
    0.00 :    f216:   lea    (%rdx,%rcx,1),%r8
    0.00 :    f21a:   mov    0x25817(%rip),%rcx        # 34a38 <_dl_argv>
    0.00 :    f221:   mov    0x8(%r15),%rdx
    0.00 :    f225:   mov    (%rcx),%rsi
    0.00 :    f228:   test   $0x3,%al
    0.00 :    f22a:   je     1046f <_dl_relocate_object+0x21df>
    0.00 :    f230:   test   %rsi,%rsi
    0.00 :    f233:   lea    0x1ab0f(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    f23a:   mov    0x8(%r11),%rcx
    0.00 :    f23e:   lea    0x1d2cb(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :    f245:   cmove  %rax,%rsi
    0.00 :    f249:   xor    %eax,%eax
    0.00 :    f24b:   mov    %r9,-0x100(%rbp)
    0.00 :    f252:   mov    %r10,-0xf8(%rbp)
    0.00 :    f259:   mov    %r11,-0xc0(%rbp)
    0.00 :    f260:   call   d480 <_dl_error_printf>
    0.00 :    f265:   mov    -0x100(%rbp),%r9
    0.00 :    f26c:   mov    -0xf8(%rbp),%r10
    0.00 :    f273:   mov    -0xc0(%rbp),%r11
    0.00 :    f27a:   mov    %r10,-0xf8(%rbp)
    0.00 :    f281:   mov    %r11,-0xc0(%rbp)
    0.00 :    f288:   call   *%r9
    0.00 :    f28b:   mov    -0xf8(%rbp),%r10
    0.00 :    f292:   mov    -0xc0(%rbp),%r11
    0.00 :    f299:   mov    %rax,%r9
    0.00 :    f29c:   cmp    $0x25,%r13
    0.00 :    f2a0:   jbe    eb42 <_dl_relocate_object+0x8b2>
    0.00 :    f2a6:   cs nopw 0x0(%rax,%rax,1)
    0.00 :    f2b0:   xor    %edx,%edx
    0.00 :    f2b2:   mov    %r14d,%esi
    0.00 :    f2b5:   mov    %r15,%rdi
    0.00 :    f2b8:   call   e1b0 <_dl_reloc_bad_type>
    0.00 :    f2bd:   nopl   (%rax)
    0.00 :    f2c0:   mov    0x50(%r15),%rax
    0.00 :    f2c4:   test   %rax,%rax
    0.00 :    f2c7:   je     e6e2 <_dl_relocate_object+0x452>
    0.00 :    f2cd:   mov    0xe0(%r15),%rdx
    0.00 :    f2d4:   xor    %ecx,%ecx
    0.00 :    f2d6:   mov    0x8(%rax),%rax
    0.00 :    f2da:   mov    $0x20,%edi
    0.00 :    f2df:   cmpq   $0x7,0x8(%rdx)
    0.00 :    f2e4:   sete   %cl
    0.00 :    f2e7:   xor    %edx,%edx
    0.00 :    f2e9:   lea    0x10(,%rcx,8),%rcx
    0.00 :    f2f1:   div    %rcx
    0.00 :    f2f4:   mov    %rax,%rsi
    0.00 :    f2f7:   call   *0x256eb(%rip)        # 349e8 <__rtld_calloc>
    0.00 :    f2fd:   mov    %rax,0x358(%r15)
    0.00 :    f304:   test   %rax,%rax
    0.00 :    f307:   jne    e6e2 <_dl_relocate_object+0x452>
    0.00 :    f30d:   mov    0x25724(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    f314:   mov    0x8(%r15),%rdx
    0.00 :    f318:   mov    (%rax),%rsi
    0.00 :    f31b:   test   %rsi,%rsi
    0.00 :    f31e:   je     10494 <_dl_relocate_object+0x2204>
    0.00 :    f324:   lea    0x1d275(%rip),%rdi        # 2c5a0 <__PRETTY_FUNCTION__.0+0x300>
    0.00 :    f32b:   xor    %eax,%eax
    0.00 :    f32d:   call   d530 <_dl_fatal_printf>
    0.00 :    f332:   nopw   0x0(%rax,%rax,1)
    0.00 :    f338:   xor    %esi,%esi
    0.00 :    f33a:   xor    %eax,%eax
    0.00 :    f33c:   jmp    e4d8 <_dl_relocate_object+0x248>
    0.00 :    f341:   nopl   0x0(%rax)
    0.00 :    f348:   mov    (%r11),%rdi
    0.00 :    f34b:   add    %rdi,%rax
    0.00 :    f34e:   mov    %rax,-0xa0(%rbp)
    0.00 :    f355:   jmp    e95d <_dl_relocate_object+0x6cd>
    0.00 :    f35a:   nopw   0x0(%rax,%rax,1)
    0.00 :    f360:   mov    %r15,%rdi
    0.00 :    f363:   call   e140 <_dl_protect_relro>
    0.00 :    f368:   lea    -0x28(%rbp),%rsp
    0.00 :    f36c:   pop    %rbx
    0.00 :    f36d:   pop    %r12
    0.00 :    f36f:   pop    %r13
    0.00 :    f371:   pop    %r14
    0.00 :    f373:   pop    %r15
    0.00 :    f375:   pop    %rbp
    0.00 :    f376:   ret
    0.00 :    f377:   nopw   0x0(%rax,%rax,1)
    0.00 :    f380:   xor    %r9d,%r9d
    0.00 :    f383:   test   %edx,%edx
    0.00 :    f385:   jne    ea72 <_dl_relocate_object+0x7e2>
    0.00 :    f38b:   jmp    f135 <_dl_relocate_object+0xea5>
    0.00 :    f390:   xor    %r8d,%r8d
    0.00 :    f393:   jmp    e858 <_dl_relocate_object+0x5c8>
    0.00 :    f398:   add    (%r15),%rdx
    0.00 :    f39b:   mov    %rdx,0x410(%r15)
    0.00 :    f3a2:   lea    0x18(%rax),%rdx
    0.00 :    f3a6:   mov    %rdx,0x418(%r15)
    0.00 :    f3ad:   jmp    e38f <_dl_relocate_object+0xff>
    0.00 :    f3b2:   testb  $0x2,0x2579b(%rip)        # 34b54 <_rtld_global_ro+0xf4>
    0.00 :    f3b9:   lea    0x3460(%rip),%rdx        # 12820 <_dl_runtime_resolve_xsave>
    0.00 :    f3c0:   lea    0x3529(%rip),%rcx        # 128f0 <_dl_runtime_resolve_xsavec>
    0.00 :    f3c7:   cmovne %rcx,%rdx
    0.00 :    f3cb:   mov    %rdx,0x10(%rax)
    0.00 :    f3cf:   jmp    e3b5 <_dl_relocate_object+0x125>
    0.00 :    f3d4:   add    %rsi,%rdi
    0.00 :    f3d7:   mov    %rdi,-0x68(%rbp)
    0.00 :    f3db:   jmp    e547 <_dl_relocate_object+0x2b7>
    0.00 :    f3e0:   movzbl 0x4(%rdx),%eax
    0.00 :    f3e4:   jmp    f162 <_dl_relocate_object+0xed2>
    0.00 :    f3e9:   nopl   0x0(%rax)
    0.00 :    f3f0:   mov    -0x98(%rbp),%rax
    0.00 :    f3f7:   movq   $0x0,-0xc0(%rbp)
    0.00 :    f402:   cmp    %rax,%rbx
    0.00 :    f405:   jae    e698 <_dl_relocate_object+0x408>
    0.00 :    f40b:   mov    %r10,-0xa8(%rbp)
    0.00 :    f412:   mov    %r13,-0xc8(%rbp)
    0.00 :    f419:   mov    %r15,-0x90(%rbp)
    0.00 :    f420:   mov    %r11,%r15
    0.00 :    f423:   nopl   0x0(%rax,%rax,1)
    0.00 :    f428:   mov    0x8(%rbx),%r14
    0.00 :    f42c:   mov    -0x88(%rbp),%rdi
    0.00 :    f433:   mov    -0x90(%rbp),%r10
    0.00 :    f43a:   add    (%rbx),%r10
    0.00 :    f43d:   mov    %r14,%rax
    0.00 :    f440:   mov    %r14d,%r13d
    0.00 :    f443:   shr    $0x20,%rax
    0.00 :    f447:   lea    (%rax,%rax,2),%rax
    0.00 :    f44b:   lea    (%rdi,%rax,8),%r12
    0.00 :    f44f:   mov    %r12,-0x80(%rbp)
    0.00 :    f453:   cmp    $0x25,%r14d
    0.00 :    f457:   je     fa50 <_dl_relocate_object+0x17c0>
    0.00 :    f45d:   mov    %r12,-0x78(%rbp)
    0.00 :    f461:   cmp    $0x8,%r13
    0.00 :    f465:   je     fa78 <_dl_relocate_object+0x17e8>
    0.00 :    f46b:   cmp    $0x26,%r13
    0.00 :    f46f:   je     fa78 <_dl_relocate_object+0x17e8>
    0.00 :    f475:   test   %r13,%r13
    0.00 :    f478:   je     f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f47e:   movzbl 0x4(%r12),%eax
    0.00 :    f484:   mov    %eax,%edi
    0.00 :    f486:   shr    $0x4,%dil
    0.00 :    f48a:   je     fa30 <_dl_relocate_object+0x17a0>
    0.00 :    f490:   movzbl 0x5(%r12),%edx
    0.00 :    f496:   and    $0x3,%edx
    0.00 :    f499:   sub    $0x1,%edx
    0.00 :    f49c:   cmp    $0x1,%edx
    0.00 :    f49f:   jbe    fa30 <_dl_relocate_object+0x17a0>
    0.00 :    f4a5:   lea    -0x5(%r13),%rax
    0.00 :    f4a9:   cmp    0x428(%r15),%r12
    0.00 :    f4b0:   je     faa8 <_dl_relocate_object+0x1818>
    0.00 :    f4b6:   xor    %r9d,%r9d
    0.00 :    f4b9:   cmp    $0x1f,%rax
    0.00 :    f4bd:   ja     f4dc <_dl_relocate_object+0x124c>
    0.00 :    f4bf:   lea    0x18d5a(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    f4c6:   movzbl -0x5(%rax,%r13,1),%r9d
    0.00 :    f4cc:   lea    0x18d2d(%rip),%rax        # 28200 <CSWTCH.89>
    0.00 :    f4d3:   or     -0x5(%rax,%r13,1),%r9b
    0.00 :    f4d8:   movsbl %r9b,%r9d
    0.00 :    f4dc:   mov    0x68(%r15),%rax
    0.00 :    f4e0:   mov    (%r12),%edi
    0.00 :    f4e4:   mov    %r9d,0x430(%r15)
    0.00 :    f4eb:   mov    %r12,0x428(%r15)
    0.00 :    f4f2:   mov    0x8(%rax),%rcx
    0.00 :    f4f6:   xor    %eax,%eax
    0.00 :    f4f8:   testb  $0x20,0x336(%r15)
    0.00 :    f500:   je     f505 <_dl_relocate_object+0x1275>
    0.00 :    f502:   mov    (%r15),%rax
    0.00 :    f505:   mov    %r10,-0xa0(%rbp)
    0.00 :    f50c:   add    %rcx,%rdi
    0.00 :    f50f:   xor    %r8d,%r8d
    0.00 :    f512:   mov    %r15,%rsi
    0.00 :    f515:   push   $0x0
    0.00 :    f517:   mov    -0xb0(%rbp),%rcx
    0.00 :    f51e:   lea    -0x78(%rbp),%rdx
    0.00 :    f522:   add    %rax,%rdi
    0.00 :    f525:   push   $0x9
    0.00 :    f527:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    f52c:   mov    -0x78(%rbp),%rdx
    0.00 :    f530:   mov    -0xa0(%rbp),%r10
    0.00 :    f537:   movq   %rax,%xmm0
    0.00 :    f53c:   mov    %rax,%r11
    0.00 :    f53f:   movq   %rdx,%xmm2
    0.00 :    f544:   punpcklqdq %xmm2,%xmm0
    0.00 :    f548:   movups %xmm0,0x438(%r15)
    0.00 :    f550:   pop    %rax
    0.00 :    f551:   pop    %rcx
    0.00 :    f552:   xor    %r9d,%r9d
    0.00 :    f555:   test   %rdx,%rdx
    0.00 :    f558:   je     f593 <_dl_relocate_object+0x1303>
    0.00 :    f55a:   movzwl 0x6(%rdx),%ecx
    0.00 :    f55e:   movzbl 0x4(%rdx),%eax
    0.00 :    f562:   cmp    $0xfff1,%cx
    0.00 :    f566:   je     fa44 <_dl_relocate_object+0x17b4>
    0.00 :    f56c:   mov    (%r11),%r9
    0.00 :    f56f:   and    $0xf,%eax
    0.00 :    f572:   add    0x8(%rdx),%r9
    0.00 :    f576:   cmp    $0xa,%al
    0.00 :    f578:   sete   %dl
    0.00 :    f57b:   test   %cx,%cx
    0.00 :    f57e:   setne  %al
    0.00 :    f581:   test   %al,%dl
    0.00 :    f583:   je     f593 <_dl_relocate_object+0x1303>
    0.00 :    f585:   mov    -0xb4(%rbp),%eax
    0.00 :    f58b:   test   %eax,%eax
    0.00 :    f58d:   je     fb1d <_dl_relocate_object+0x188d>
    0.00 :    f593:   cmp    $0x25,%r13
    0.00 :    f597:   ja     fbe0 <_dl_relocate_object+0x1950>
    0.00 :    f59d:   lea    0x18bb4(%rip),%rsi        # 28158 <primes.0+0x118>
    0.00 :    f5a4:   movslq (%rsi,%r13,4),%rax
    0.00 :    f5a8:   add    %rsi,%rax
    0.00 :    f5ab:   notrack jmp *%rax
    0.00 :    f5ae:   add    0x10(%rbx),%r9
    0.00 :    f5b2:   mov    %r9,(%r10)
    0.00 :    f5b5:   mov    0x8(%rbx),%eax
    0.00 :    f5b8:   cmp    $0x7,%rax
    0.00 :    f5bc:   je     f7f0 <_dl_relocate_object+0x1560>
    0.00 :    f5c2:   mov    -0x98(%rbp),%rax
    0.00 :    f5c9:   add    $0x18,%rbx
    0.00 :    f5cd:   cmp    %rax,%rbx
    0.00 :    f5d0:   jb     f428 <_dl_relocate_object+0x1198>
    0.00 :    f5d6:   mov    -0xa8(%rbp),%r10
    0.00 :    f5dd:   mov    %r15,%r11
    0.00 :    f5e0:   mov    -0xc8(%rbp),%r13
    0.00 :    f5e7:   mov    -0x90(%rbp),%r15
    0.00 :    f5ee:   test   %r10,%r10
    0.00 :    f5f1:   je     e698 <_dl_relocate_object+0x408>
    0.00 :    f5f7:   mov    -0xc0(%rbp),%rax
    0.00 :    f5fe:   cmp    %r10,%rax
    0.00 :    f601:   jb     e698 <_dl_relocate_object+0x408>
    0.00 :    f607:   mov    %r13,-0x98(%rbp)
    0.00 :    f60e:   mov    %r10,%rbx
    0.00 :    f611:   mov    %rax,%r13
    0.00 :    f614:   mov    %r11,%r12
    0.00 :    f617:   jmp    f62d <_dl_relocate_object+0x139d>
    0.00 :    f619:   nopl   0x0(%rax)
    0.00 :    f620:   add    $0x18,%rbx
    0.00 :    f624:   cmp    %rbx,%r13
    0.00 :    f627:   jb     ed35 <_dl_relocate_object+0xaa5>
    0.00 :    f62d:   mov    0x8(%rbx),%rax
    0.00 :    f631:   cmp    $0x25,%eax
    0.00 :    f634:   jne    f620 <_dl_relocate_object+0x1390>
    0.00 :    f636:   mov    -0x88(%rbp),%rsi
    0.00 :    f63d:   shr    $0x20,%rax
    0.00 :    f641:   mov    (%rbx),%r14
    0.00 :    f644:   lea    (%rax,%rax,2),%rax
    0.00 :    f648:   lea    (%rsi,%rax,8),%r10
    0.00 :    f64c:   add    %r15,%r14
    0.00 :    f64f:   mov    %r10,-0x78(%rbp)
    0.00 :    f653:   movzbl 0x4(%r10),%eax
    0.00 :    f658:   mov    %eax,%esi
    0.00 :    f65a:   shr    $0x4,%sil
    0.00 :    f65e:   je     fa90 <_dl_relocate_object+0x1800>
    0.00 :    f664:   movzbl 0x5(%r10),%edx
    0.00 :    f669:   and    $0x3,%edx
    0.00 :    f66c:   sub    $0x1,%edx
    0.00 :    f66f:   cmp    $0x1,%edx
    0.00 :    f672:   jbe    fa90 <_dl_relocate_object+0x1800>
    0.00 :    f678:   cmp    0x428(%r12),%r10
    0.00 :    f680:   je     10188 <_dl_relocate_object+0x1ef8>
    0.00 :    f686:   mov    0x68(%r12),%rax
    0.00 :    f68b:   mov    (%r10),%edi
    0.00 :    f68e:   mov    %r10,0x428(%r12)
    0.00 :    f696:   movl   $0x0,0x430(%r12)
    0.00 :    f6a2:   mov    0x8(%rax),%rcx
    0.00 :    f6a6:   xor    %eax,%eax
    0.00 :    f6a8:   testb  $0x20,0x336(%r12)
    0.00 :    f6b1:   je     f6b7 <_dl_relocate_object+0x1427>
    0.00 :    f6b3:   mov    (%r12),%rax
    0.00 :    f6b7:   mov    %r10,-0x90(%rbp)
    0.00 :    f6be:   add    %rcx,%rdi
    0.00 :    f6c1:   xor    %r8d,%r8d
    0.00 :    f6c4:   xor    %r9d,%r9d
    0.00 :    f6c7:   push   $0x0
    0.00 :    f6c9:   mov    -0xb0(%rbp),%rcx
    0.00 :    f6d0:   lea    -0x78(%rbp),%rdx
    0.00 :    f6d4:   add    %rax,%rdi
    0.00 :    f6d7:   push   $0x9
    0.00 :    f6d9:   mov    %r12,%rsi
    0.00 :    f6dc:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    f6e1:   mov    -0x78(%rbp),%rdx
    0.00 :    f6e5:   mov    -0x90(%rbp),%r10
    0.00 :    f6ec:   movq   %rax,%xmm0
    0.00 :    f6f1:   mov    %rax,%rcx
    0.00 :    f6f4:   movq   %rdx,%xmm7
    0.00 :    f6f9:   punpcklqdq %xmm7,%xmm0
    0.00 :    f6fd:   movups %xmm0,0x438(%r12)
    0.00 :    f706:   pop    %rdi
    0.00 :    f707:   pop    %r8
    0.00 :    f709:   test   %rdx,%rdx
    0.00 :    f70c:   je     f737 <_dl_relocate_object+0x14a7>
    0.00 :    f70e:   movzbl 0x4(%rdx),%eax
    0.00 :    f712:   movzwl 0x6(%rdx),%esi
    0.00 :    f716:   cmp    $0xfff1,%si
    0.00 :    f71a:   je     ffbb <_dl_relocate_object+0x1d2b>
    0.00 :    f720:   mov    (%rcx),%r9
    0.00 :    f723:   and    $0xf,%eax
    0.00 :    f726:   mov    0x8(%rdx),%r11
    0.00 :    f72a:   cmp    $0xa,%al
    0.00 :    f72c:   jne    f737 <_dl_relocate_object+0x14a7>
    0.00 :    f72e:   test   %si,%si
    0.00 :    f731:   jne    ffc3 <_dl_relocate_object+0x1d33>
    0.00 :    f737:   mov    -0xb4(%rbp),%edx
    0.00 :    f73d:   mov    0x10(%rbx),%rax
    0.00 :    f741:   add    (%r12),%rax
    0.00 :    f745:   test   %edx,%edx
    0.00 :    f747:   jne    f74b <_dl_relocate_object+0x14bb>
    0.00 :    f749:   call   *%rax
    0.00 :    f74b:   mov    %rax,(%r14)
    0.00 :    f74e:   jmp    f620 <_dl_relocate_object+0x1390>
    0.00 :    f753:   mov    -0x78(%rbp),%rax
    0.00 :    f757:   mov    0x10(%rax),%r9
    0.00 :    f75b:   add    0x10(%rbx),%r9
    0.00 :    f75f:   mov    $0xffffffff,%eax
    0.00 :    f764:   mov    %r9d,(%r10)
    0.00 :    f767:   cmp    %r9,%rax
    0.00 :    f76a:   jae    f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f770:   lea    0x1cc49(%rip),%rdi        # 2c3c0 <__PRETTY_FUNCTION__.0+0x120>
    0.00 :    f777:   mov    0x68(%r15),%rax
    0.00 :    f77b:   mov    0x8(%rax),%rax
    0.00 :    f77f:   testb  $0x20,0x336(%r15)
    0.00 :    f787:   je     f78c <_dl_relocate_object+0x14fc>
    0.00 :    f789:   add    (%r15),%rax
    0.00 :    f78c:   mov    (%r12),%edx
    0.00 :    f790:   mov    %r10,-0xa0(%rbp)
    0.00 :    f797:   add    %rax,%rdx
    0.00 :    f79a:   mov    0x25297(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    f7a1:   mov    (%rax),%rsi
    0.00 :    f7a4:   lea    0x1a59e(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    f7ab:   test   %rsi,%rsi
    0.00 :    f7ae:   cmove  %rax,%rsi
    0.00 :    f7b2:   xor    %eax,%eax
    0.00 :    f7b4:   call   d480 <_dl_error_printf>
    0.00 :    f7b9:   mov    0x8(%rbx),%eax
    0.00 :    f7bc:   mov    -0xa0(%rbp),%r10
    0.00 :    f7c3:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    f7c8:   test   %r11,%r11
    0.00 :    f7cb:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f7d1:   mov    0x478(%r11),%rax
    0.00 :    f7d8:   mov    %rax,(%r10)
    0.00 :    f7db:   mov    0x8(%rbx),%eax
    0.00 :    f7de:   cmp    $0x7,%rax
    0.00 :    f7e2:   jne    f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f7e8:   nopl   0x0(%rax,%rax,1)
    0.00 :    f7f0:   mov    0x255e1(%rip),%r12d        # 34dd8 <_rtld_global_ro+0x378>
    0.00 :    f7f7:   test   %r12d,%r12d
    0.00 :    f7fa:   je     f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f800:   mov    -0x80(%rbp),%rdx
    0.00 :    f804:   movzbl 0x4(%rdx),%eax
    0.00 :    f808:   shr    $0x4,%al
    0.00 :    f80b:   je     faa0 <_dl_relocate_object+0x1810>
    0.00 :    f811:   movzbl 0x5(%rdx),%eax
    0.00 :    f815:   and    $0x3,%eax
    0.00 :    f818:   sub    $0x1,%eax
    0.00 :    f81b:   cmp    $0x1,%eax
    0.00 :    f81e:   jbe    faa0 <_dl_relocate_object+0x1810>
    0.00 :    f824:   cmp    0x428(%r15),%rdx
    0.00 :    f82b:   je     101ba <_dl_relocate_object+0x1f2a>
    0.00 :    f831:   mov    0x68(%r15),%rax
    0.00 :    f835:   mov    (%rdx),%edi
    0.00 :    f837:   mov    %rdx,0x428(%r15)
    0.00 :    f83e:   movl   $0x1,0x430(%r15)
    0.00 :    f849:   mov    0x8(%rax),%rcx
    0.00 :    f84d:   xor    %eax,%eax
    0.00 :    f84f:   testb  $0x20,0x336(%r15)
    0.00 :    f857:   je     f85c <_dl_relocate_object+0x15cc>
    0.00 :    f859:   mov    (%r15),%rax
    0.00 :    f85c:   mov    %r10,-0xa0(%rbp)
    0.00 :    f863:   add    %rcx,%rdi
    0.00 :    f866:   xor    %r8d,%r8d
    0.00 :    f869:   mov    %r15,%rsi
    0.00 :    f86c:   push   $0x0
    0.00 :    f86e:   mov    -0xb0(%rbp),%rcx
    0.00 :    f875:   lea    -0x80(%rbp),%rdx
    0.00 :    f879:   add    %rax,%rdi
    0.00 :    f87c:   push   $0x9
    0.00 :    f87e:   mov    $0x1,%r9d
    0.00 :    f884:   call   9e20 <_dl_lookup_symbol_x>
    0.00 :    f889:   mov    -0x80(%rbp),%rdx
    0.00 :    f88d:   movq   %rax,%xmm0
    0.00 :    f892:   mov    %rax,%r8
    0.00 :    f895:   movq   %rdx,%xmm7
    0.00 :    f89a:   punpcklqdq %xmm7,%xmm0
    0.00 :    f89e:   movups %xmm0,0x438(%r15)
    0.00 :    f8a6:   pop    %r10
    0.00 :    f8a8:   pop    %r11
    0.00 :    f8aa:   mov    -0xa0(%rbp),%r10
    0.00 :    f8b1:   test   %rdx,%rdx
    0.00 :    f8b4:   je     f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f8ba:   mov    %r10,%rcx
    0.00 :    f8bd:   xor    %esi,%esi
    0.00 :    f8bf:   mov    %r15,%rdi
    0.00 :    f8c2:   call   177f0 <_dl_audit_symbind>
    0.00 :    f8c7:   jmp    f5c2 <_dl_relocate_object+0x1332>
    0.00 :    f8cc:   mov    -0xb4(%rbp),%r13d
    0.00 :    f8d3:   mov    0x10(%rbx),%rax
    0.00 :    f8d7:   add    (%r15),%rax
    0.00 :    f8da:   test   %r13d,%r13d
    0.00 :    f8dd:   jne    f8ef <_dl_relocate_object+0x165f>
    0.00 :    f8df:   mov    %r10,-0xa0(%rbp)
    0.00 :    f8e6:   call   *%rax
    0.00 :    f8e8:   mov    -0xa0(%rbp),%r10
    0.00 :    f8ef:   mov    %rax,(%r10)
    0.00 :    f8f2:   jmp    f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f8f7:   mov    -0x78(%rbp),%rcx
    0.00 :    f8fb:   test   %rcx,%rcx
    0.00 :    f8fe:   je     feb8 <_dl_relocate_object+0x1c28>
    0.00 :    f904:   mov    0x470(%r11),%rdx
    0.00 :    f90b:   cmp    $0xffffffffffffffff,%rdx
    0.00 :    f90f:   je     102b5 <_dl_relocate_object+0x2025>
    0.00 :    f915:   test   %rdx,%rdx
    0.00 :    f918:   je     1031d <_dl_relocate_object+0x208d>
    0.00 :    f91e:   mov    0x10(%rbx),%rax
    0.00 :    f922:   add    0x8(%rcx),%rax
    0.00 :    f926:   sub    %rdx,%rax
    0.00 :    f929:   mov    %rax,0x8(%r10)
    0.00 :    f92d:   lea    0x517c(%rip),%rax        # 14ab0 <_dl_tlsdesc_return>
    0.00 :    f934:   jmp    f8ef <_dl_relocate_object+0x165f>
    0.00 :    f936:   mov    -0x78(%rbp),%rdx
    0.00 :    f93a:   mov    0x10(%rbx),%rax
    0.00 :    f93e:   add    0x10(%rdx),%rax
    0.00 :    f942:   mov    %rax,(%r10)
    0.00 :    f945:   mov    0x8(%rbx),%eax
    0.00 :    f948:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    f94d:   mov    -0x78(%rbp),%r13
    0.00 :    f951:   test   %r13,%r13
    0.00 :    f954:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f95a:   mov    0x10(%r12),%rax
    0.00 :    f95f:   mov    0x10(%r13),%rdx
    0.00 :    f963:   mov    %r10,%rdi
    0.00 :    f966:   mov    %r9,%rsi
    0.00 :    f969:   cmp    %rdx,%rax
    0.00 :    f96c:   cmovbe %rax,%rdx
    0.00 :    f970:   call   22660 <memcpy>
    0.00 :    f975:   mov    0x10(%r13),%rdx
    0.00 :    f979:   mov    %rax,%r10
    0.00 :    f97c:   mov    0x10(%r12),%rax
    0.00 :    f981:   cmp    %rdx,%rax
    0.00 :    f984:   jb     f99f <_dl_relocate_object+0x170f>
    0.00 :    f986:   cmp    %rax,%rdx
    0.00 :    f989:   jae    f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f98f:   mov    0x2510e(%rip),%r14d        # 34aa4 <_rtld_global_ro+0x44>
    0.00 :    f996:   test   %r14d,%r14d
    0.00 :    f999:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f99f:   lea    0x1ca9a(%rip),%rdi        # 2c440 <__PRETTY_FUNCTION__.0+0x1a0>
    0.00 :    f9a6:   jmp    f777 <_dl_relocate_object+0x14e7>
    0.00 :    f9ab:   nopl   0x0(%rax,%rax,1)
    0.00 :    f9b0:   mov    -0x78(%rbp),%rax
    0.00 :    f9b4:   test   %rax,%rax
    0.00 :    f9b7:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f9bd:   mov    0x470(%r11),%rdx
    0.00 :    f9c4:   lea    0x1(%rdx),%rcx
    0.00 :    f9c8:   cmp    $0x1,%rcx
    0.00 :    f9cc:   jbe    102e9 <_dl_relocate_object+0x2059>
    0.00 :    f9d2:   mov    0x8(%rax),%rax
    0.00 :    f9d6:   sub    %rdx,%rax
    0.00 :    f9d9:   add    0x10(%rbx),%rax
    0.00 :    f9dd:   mov    %rax,(%r10)
    0.00 :    f9e0:   mov    0x8(%rbx),%eax
    0.00 :    f9e3:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    f9e8:   mov    -0x78(%rbp),%rdx
    0.00 :    f9ec:   test   %rdx,%rdx
    0.00 :    f9ef:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    f9f5:   mov    0x10(%rbx),%rax
    0.00 :    f9f9:   add    0x8(%rdx),%rax
    0.00 :    f9fd:   mov    %rax,(%r10)
    0.00 :    fa00:   mov    0x8(%rbx),%eax
    0.00 :    fa03:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    fa08:   mov    0x10(%rbx),%rax
    0.00 :    fa0c:   sub    %r10,%rax
    0.00 :    fa0f:   add    %r9,%rax
    0.00 :    fa12:   movslq %eax,%rdx
    0.00 :    fa15:   mov    %eax,(%r10)
    0.00 :    fa18:   cmp    %rdx,%rax
    0.00 :    fa1b:   je     f5b5 <_dl_relocate_object+0x1325>
    0.00 :    fa21:   lea    0x1c9d8(%rip),%rdi        # 2c400 <__PRETTY_FUNCTION__.0+0x160>
    0.00 :    fa28:   jmp    f777 <_dl_relocate_object+0x14e7>
    0.00 :    fa2d:   nopl   (%rax)
    0.00 :    fa30:   mov    %r12,%rdx
    0.00 :    fa33:   mov    %r15,%r11
    0.00 :    fa36:   movzwl 0x6(%rdx),%ecx
    0.00 :    fa3a:   cmp    $0xfff1,%cx
    0.00 :    fa3e:   jne    f56c <_dl_relocate_object+0x12dc>
    0.00 :    fa44:   xor    %r9d,%r9d
    0.00 :    fa47:   jmp    f56f <_dl_relocate_object+0x12df>
    0.00 :    fa4c:   nopl   0x0(%rax)
    0.00 :    fa50:   mov    -0xa8(%rbp),%rax
    0.00 :    fa57:   mov    %rbx,-0xc0(%rbp)
    0.00 :    fa5e:   test   %rax,%rax
    0.00 :    fa61:   cmove  %rbx,%rax
    0.00 :    fa65:   mov    %rax,-0xa8(%rbp)
    0.00 :    fa6c:   jmp    f5c2 <_dl_relocate_object+0x1332>
    0.00 :    fa71:   nopl   0x0(%rax)
    0.00 :    fa78:   mov    0x10(%rbx),%rax
    0.00 :    fa7c:   add    (%r15),%rax
    0.00 :    fa7f:   mov    %rax,(%r10)
    0.00 :    fa82:   mov    0x8(%rbx),%eax
    0.00 :    fa85:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    fa8a:   nopw   0x0(%rax,%rax,1)
    0.00 :    fa90:   mov    %r12,%rcx
    0.00 :    fa93:   mov    %r10,%rdx
    0.00 :    fa96:   jmp    f712 <_dl_relocate_object+0x1482>
    0.00 :    fa9b:   nopl   0x0(%rax,%rax,1)
    0.00 :    faa0:   mov    %r15,%r8
    0.00 :    faa3:   jmp    f8ba <_dl_relocate_object+0x162a>
    0.00 :    faa8:   mov    0x430(%r15),%edx
    0.00 :    faaf:   cmp    $0x1f,%rax
    0.00 :    fab3:   ja     fd00 <_dl_relocate_object+0x1a70>
    0.00 :    fab9:   lea    0x18760(%rip),%rax        # 28220 <CSWTCH.88>
    0.00 :    fac0:   lea    0x18739(%rip),%rcx        # 28200 <CSWTCH.89>
    0.00 :    fac7:   movzbl -0x5(%rax,%r13,1),%eax
    0.00 :    facd:   or     -0x5(%rcx,%r13,1),%al
    0.00 :    fad2:   movsbl %al,%eax
    0.00 :    fad5:   cmp    %edx,%eax
    0.00 :    fad7:   jne    f4bf <_dl_relocate_object+0x122f>
    0.00 :    fadd:   mov    0x440(%r15),%rdx
    0.00 :    fae4:   addq   $0x1,0x25fb4(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    faec:   mov    0x438(%r15),%r11
    0.00 :    faf3:   mov    %rdx,-0x78(%rbp)
    0.00 :    faf7:   jmp    f552 <_dl_relocate_object+0x12c2>
    0.00 :    fafc:   mov    0x10(%rbx),%rax
    0.00 :    fb00:   mov    -0x90(%rbp),%rsi
    0.00 :    fb07:   mov    %rax,0x8(%rsi)
    0.00 :    fb0b:   lea    0x4fae(%rip),%rax        # 14ac0 <_dl_tlsdesc_undefweak>
    0.00 :    fb12:   mov    %rax,(%rsi)
    0.00 :    fb15:   mov    0x8(%rbx),%eax
    0.00 :    fb18:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    fb1d:   cmp    %r11,%r15
    0.00 :    fb20:   je     fbaf <_dl_relocate_object+0x191f>
    0.00 :    fb26:   movzbl 0x334(%r11),%eax
    0.00 :    fb2e:   test   $0x8,%al
    0.00 :    fb30:   jne    fbaf <_dl_relocate_object+0x191f>
    0.00 :    fb32:   mov    0x68(%r15),%rdx
    0.00 :    fb36:   mov    0x8(%rdx),%rdx
    0.00 :    fb3a:   testb  $0x20,0x336(%r15)
    0.00 :    fb42:   je     fb47 <_dl_relocate_object+0x18b7>
    0.00 :    fb44:   add    (%r15),%rdx
    0.00 :    fb47:   mov    (%r12),%ecx
    0.00 :    fb4b:   lea    (%rdx,%rcx,1),%r8
    0.00 :    fb4f:   mov    0x24ee2(%rip),%rcx        # 34a38 <_dl_argv>
    0.00 :    fb56:   mov    0x8(%r15),%rdx
    0.00 :    fb5a:   mov    (%rcx),%rsi
    0.00 :    fb5d:   test   $0x3,%al
    0.00 :    fb5f:   je     1041f <_dl_relocate_object+0x218f>
    0.00 :    fb65:   test   %rsi,%rsi
    0.00 :    fb68:   lea    0x1a1da(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    fb6f:   mov    0x8(%r11),%rcx
    0.00 :    fb73:   lea    0x1c996(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :    fb7a:   cmove  %rax,%rsi
    0.00 :    fb7e:   xor    %eax,%eax
    0.00 :    fb80:   mov    %r9,-0xf0(%rbp)
    0.00 :    fb87:   mov    %r10,-0xd0(%rbp)
    0.00 :    fb8e:   mov    %r11,-0xa0(%rbp)
    0.00 :    fb95:   call   d480 <_dl_error_printf>
    0.00 :    fb9a:   mov    -0xf0(%rbp),%r9
    0.00 :    fba1:   mov    -0xd0(%rbp),%r10
    0.00 :    fba8:   mov    -0xa0(%rbp),%r11
    0.00 :    fbaf:   mov    %r10,-0xd0(%rbp)
    0.00 :    fbb6:   mov    %r11,-0xa0(%rbp)
    0.00 :    fbbd:   call   *%r9
    0.00 :    fbc0:   mov    -0xd0(%rbp),%r10
    0.00 :    fbc7:   mov    -0xa0(%rbp),%r11
    0.00 :    fbce:   mov    %rax,%r9
    0.00 :    fbd1:   cmp    $0x25,%r13
    0.00 :    fbd5:   jbe    f59d <_dl_relocate_object+0x130d>
    0.00 :    fbdb:   nopl   0x0(%rax,%rax,1)
    0.00 :    fbe0:   xor    %edx,%edx
    0.00 :    fbe2:   mov    %r14d,%esi
    0.00 :    fbe5:   mov    %r15,%rdi
    0.00 :    fbe8:   call   e1b0 <_dl_reloc_bad_type>
    0.00 :    fbed:   nopl   (%rax)
    0.00 :    fbf0:   mov    $0x1,%edx
    0.00 :    fbf5:   mov    %ecx,%esi
    0.00 :    fbf7:   mov    %r13,%rdi
    0.00 :    fbfa:   call   e1b0 <_dl_reloc_bad_type>
    0.00 :    fbff:   mov    -0xb4(%rbp),%edi
    0.00 :    fc05:   test   %edi,%edi
    0.00 :    fc07:   jne    1035e <_dl_relocate_object+0x20ce>
    0.00 :    fc0d:   cmp    %rcx,%r12
    0.00 :    fc10:   je     fc8f <_dl_relocate_object+0x19ff>
    0.00 :    fc12:   movzbl 0x334(%rcx),%eax
    0.00 :    fc19:   test   $0x8,%al
    0.00 :    fc1b:   jne    fc8f <_dl_relocate_object+0x19ff>
    0.00 :    fc1d:   mov    0x68(%r12),%rdx
    0.00 :    fc22:   mov    0x8(%rdx),%rdx
    0.00 :    fc26:   testb  $0x20,0x336(%r12)
    0.00 :    fc2f:   je     fc35 <_dl_relocate_object+0x19a5>
    0.00 :    fc31:   add    (%r12),%rdx
    0.00 :    fc35:   mov    (%r10),%esi
    0.00 :    fc38:   lea    (%rdx,%rsi,1),%r8
    0.00 :    fc3c:   mov    0x24df5(%rip),%rsi        # 34a38 <_dl_argv>
    0.00 :    fc43:   mov    0x8(%r12),%rdx
    0.00 :    fc48:   mov    (%rsi),%rsi
    0.00 :    fc4b:   test   $0x3,%al
    0.00 :    fc4d:   je     1041f <_dl_relocate_object+0x218f>
    0.00 :    fc53:   test   %rsi,%rsi
    0.00 :    fc56:   lea    0x1a0ec(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :    fc5d:   mov    0x8(%rcx),%rcx
    0.00 :    fc61:   lea    0x1c8a8(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :    fc68:   cmove  %rax,%rsi
    0.00 :    fc6c:   xor    %eax,%eax
    0.00 :    fc6e:   mov    %r9,-0xa8(%rbp)
    0.00 :    fc75:   mov    %r11,-0x90(%rbp)
    0.00 :    fc7c:   call   d480 <_dl_error_printf>
    0.00 :    fc81:   mov    -0xa8(%rbp),%r9
    0.00 :    fc88:   mov    -0x90(%rbp),%r11
    0.00 :    fc8f:   add    %r11,%r9
    0.00 :    fc92:   call   *%r9
    0.00 :    fc95:   mov    0x10(%rbx),%rax
    0.00 :    fc99:   add    (%r12),%rax
    0.00 :    fc9d:   jmp    ed23 <_dl_relocate_object+0xa93>
    0.00 :    fca2:   mov    0x430(%r12),%eax
    0.00 :    fcaa:   test   %eax,%eax
    0.00 :    fcac:   jne    ec41 <_dl_relocate_object+0x9b1>
    0.00 :    fcb2:   mov    0x440(%r12),%rdx
    0.00 :    fcba:   addq   $0x1,0x25dde(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    fcc2:   mov    0x438(%r12),%rcx
    0.00 :    fcca:   mov    %rdx,-0x78(%rbp)
    0.00 :    fcce:   jmp    ece3 <_dl_relocate_object+0xa53>
    0.00 :    fcd3:   cmpl   $0x1,0x430(%r15)
    0.00 :    fcdb:   jne    ee07 <_dl_relocate_object+0xb77>
    0.00 :    fce1:   mov    0x440(%r15),%rdx
    0.00 :    fce8:   addq   $0x1,0x25db0(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :    fcf0:   mov    0x438(%r15),%r8
    0.00 :    fcf7:   mov    %rdx,-0x80(%rbp)
    0.00 :    fcfb:   jmp    ee87 <_dl_relocate_object+0xbf7>
    0.00 :    fd00:   xor    %r9d,%r9d
    0.00 :    fd03:   test   %edx,%edx
    0.00 :    fd05:   jne    f4dc <_dl_relocate_object+0x124c>
    0.00 :    fd0b:   jmp    fadd <_dl_relocate_object+0x184d>
    0.00 :    fd10:   test   %r10d,%r10d
    0.00 :    fd13:   lea    0x1aeff(%rip),%rdx        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :    fd1a:   lea    0x1a197(%rip),%rax        # 29eb8 <_sys_errname+0xaf8>
    0.00 :    fd21:   cmovne %rax,%rdx
    0.00 :    fd25:   mov    0x8(%r15),%rsi
    0.00 :    fd29:   cmpb   $0x0,(%rsi)
    0.00 :    fd2c:   je     feff <_dl_relocate_object+0x1c6f>
    0.00 :    fd32:   lea    0x1a187(%rip),%rdi        # 29ec0 <_sys_errname+0xb00>
    0.00 :    fd39:   xor    %eax,%eax
    0.00 :    fd3b:   mov    %r10d,-0x88(%rbp)
    0.00 :    fd42:   call   d1d0 <_dl_debug_printf>
    0.00 :    fd47:   mov    -0x88(%rbp),%r10d
    0.00 :    fd4e:   jmp    e347 <_dl_relocate_object+0xb7>
    0.00 :    fd53:   movzwl 0x2d0(%r15),%edx
    0.00 :    fd5b:   mov    0x2c0(%r15),%rsi
    0.00 :    fd62:   lea    0x0(,%rdx,8),%rax
    0.00 :    fd6a:   mov    %rsi,%rcx
    0.00 :    fd6d:   sub    %rdx,%rax
    0.00 :    fd70:   lea    (%rsi,%rax,8),%rax
    0.00 :    fd74:   cmp    %rax,%rsi
    0.00 :    fd77:   jae    103bd <_dl_relocate_object+0x212d>
    0.00 :    fd7d:   xor    %eax,%eax
    0.00 :    fd7f:   mov    %bl,-0x90(%rbp)
    0.00 :    fd85:   movabs $0x2ffffffff,%r14
    0.00 :    fd8f:   mov    %r13d,-0x98(%rbp)
    0.00 :    fd96:   mov    %rax,%rbx
    0.00 :    fd99:   mov    %r15,%r13
    0.00 :    fd9c:   mov    %r12d,-0xa0(%rbp)
    0.00 :    fda3:   mov    %rcx,%r12
    0.00 :    fda6:   mov    %r10d,-0x88(%rbp)
    0.00 :    fdad:   jmp    fdcc <_dl_relocate_object+0x1b3c>
    0.00 :    fdaf:   nop
    0.00 :    fdb0:   lea    0x0(,%rdx,8),%rax
    0.00 :    fdb8:   add    $0x38,%r12
    0.00 :    fdbc:   sub    %rdx,%rax
    0.00 :    fdbf:   lea    (%rsi,%rax,8),%rax
    0.00 :    fdc3:   cmp    %rax,%r12
    0.00 :    fdc6:   jae    fe8d <_dl_relocate_object+0x1bfd>
    0.00 :    fdcc:   mov    (%r12),%rax
    0.00 :    fdd0:   and    %r14,%rax
    0.00 :    fdd3:   cmp    $0x1,%rax
    0.00 :    fdd7:   jne    fdb0 <_dl_relocate_object+0x1b20>
    0.00 :    fdd9:   mov    %rsp,%rax
    0.00 :    fddc:   cmp    %rax,%rsp
    0.00 :    fddf:   je     fdf6 <_dl_relocate_object+0x1b66>
    0.00 :    fde1:   sub    $0x1000,%rsp
    0.00 :    fde8:   orq    $0x0,0xff8(%rsp)
    0.00 :    fdf1:   cmp    %rax,%rsp
    0.00 :    fdf4:   jne    fde1 <_dl_relocate_object+0x1b51>
    0.00 :    fdf6:   sub    $0x30,%rsp
    0.00 :    fdfa:   orq    $0x0,0x28(%rsp)
    0.00 :    fe00:   mov    0x24c71(%rip),%rdx        # 34a78 <_rtld_global_ro+0x18>
    0.00 :    fe07:   mov    0x10(%r12),%rsi
    0.00 :    fe0c:   mov    %rdx,%rax
    0.00 :    fe0f:   neg    %rax
    0.00 :    fe12:   mov    %rsi,%rdi
    0.00 :    fe15:   lea    -0x1(%rsi,%rdx,1),%rsi
    0.00 :    fe1a:   add    0x28(%r12),%rsi
    0.00 :    fe1f:   and    %rax,%rdi
    0.00 :    fe22:   and    %rax,%rsi
    0.00 :    fe25:   mov    0x4(%r12),%eax
    0.00 :    fe2a:   lea    0xf(%rsp),%r9
    0.00 :    fe2f:   sub    %rdi,%rsi
    0.00 :    fe32:   add    0x0(%r13),%rdi
    0.00 :    fe36:   mov    %eax,%edx
    0.00 :    fe38:   and    $0xfffffffffffffff0,%r9
    0.00 :    fe3c:   shr    $0x2,%edx
    0.00 :    fe3f:   mov    %rsi,0x8(%r9)
    0.00 :    fe43:   mov    %r9,%r15
    0.00 :    fe46:   mov    %rdi,(%r9)
    0.00 :    fe49:   and    $0x1,%edx
    0.00 :    fe4c:   test   $0x2,%al
    0.00 :    fe4e:   je     fe53 <_dl_relocate_object+0x1bc3>
    0.00 :    fe50:   or     $0x2,%edx
    0.00 :    fe53:   mov    %edx,0x10(%r15)
    0.00 :    fe57:   test   $0x1,%al
    0.00 :    fe59:   je     fe62 <_dl_relocate_object+0x1bd2>
    0.00 :    fe5b:   or     $0x4,%edx
    0.00 :    fe5e:   mov    %edx,0x10(%r15)
    0.00 :    fe62:   or     $0x2,%edx
    0.00 :    fe65:   call   21bb0 <__GI___mprotect>
    0.00 :    fe6a:   test   %eax,%eax
    0.00 :    fe6c:   js     10413 <_dl_relocate_object+0x2183>
    0.00 :    fe72:   mov    %rbx,0x18(%r15)
    0.00 :    fe76:   mov    0x2c0(%r13),%rsi
    0.00 :    fe7d:   mov    %r15,%rbx
    0.00 :    fe80:   movzwl 0x2d0(%r13),%edx
    0.00 :    fe88:   jmp    fdb0 <_dl_relocate_object+0x1b20>
    0.00 :    fe8d:   mov    %rbx,-0xe0(%rbp)
    0.00 :    fe94:   mov    %r13,%r15
    0.00 :    fe97:   mov    -0x88(%rbp),%r10d
    0.00 :    fe9e:   movzbl -0x90(%rbp),%ebx
    0.00 :    fea5:   mov    -0x98(%rbp),%r13d
    0.00 :    feac:   mov    -0xa0(%rbp),%r12d
    0.00 :    feb3:   jmp    e35e <_dl_relocate_object+0xce>
    0.00 :    feb8:   mov    0x10(%rbx),%rax
    0.00 :    febc:   mov    %rax,0x8(%r10)
    0.00 :    fec0:   lea    0x4bf9(%rip),%rax        # 14ac0 <_dl_tlsdesc_undefweak>
    0.00 :    fec7:   mov    %rax,(%r10)
    0.00 :    feca:   mov    0x8(%rbx),%eax
    0.00 :    fecd:   jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :    fed2:   mov    -0xe0(%rbp),%rbx
    0.00 :    fed9:   mov    0x10(%rbx),%edx
    0.00 :    fedc:   mov    0x8(%rbx),%rsi
    0.00 :    fee0:   mov    (%rbx),%rdi
    0.00 :    fee3:   call   21bb0 <__GI___mprotect>
    0.00 :    fee8:   test   %eax,%eax
    0.00 :    feea:   js     103fb <_dl_relocate_object+0x216b>
    0.00 :    fef0:   mov    0x18(%rbx),%rbx
    0.00 :    fef4:   test   %rbx,%rbx
    0.00 :    fef7:   je     e6f8 <_dl_relocate_object+0x468>
    0.00 :    fefd:   jmp    fed9 <_dl_relocate_object+0x1c49>
    0.00 :    feff:   mov    0x24b32(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :    ff06:   mov    (%rax),%rsi
    0.00 :    ff09:   lea    0x19a1c(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :    ff10:   test   %rsi,%rsi
    0.00 :    ff13:   cmove  %rax,%rsi
    0.00 :    ff17:   jmp    fd32 <_dl_relocate_object+0x1aa2>
    0.00 :    ff1c:   mov    %r9,%rdi
    0.00 :    ff1f:   mov    $0x1,%esi
    0.00 :    ff24:   mov    %r11,-0xa0(%rbp)
    0.00 :    ff2b:   mov    %r10,-0x98(%rbp)
    0.00 :    ff32:   mov    %r9,-0x88(%rbp)
    0.00 :    ff39:   call   dfe0 <_dl_try_allocate_static_tls>
    0.00 :    ff3e:   mov    -0x88(%rbp),%r9
    0.00 :    ff45:   mov    -0x98(%rbp),%r10
    0.00 :    ff4c:   test   %eax,%eax
    0.00 :    ff4e:   mov    -0xa0(%rbp),%r11
    0.00 :    ff55:   jne    1036b <_dl_relocate_object+0x20db>
    0.00 :    ff5b:   mov    0x470(%r9),%rax
    0.00 :    ff62:   jmp    f1c1 <_dl_relocate_object+0xf31>
    0.00 :    ff67:   nopw   0x0(%rax,%rax,1)
    0.00 :    ff70:   mov    0x10(%rbx),%rsi
    0.00 :    ff74:   mov    %r11,%rdi
    0.00 :    ff77:   add    0x8(%rdx),%rsi
    0.00 :    ff7b:   mov    %r10,-0xc0(%rbp)
    0.00 :    ff82:   call   14780 <_dl_make_tlsdesc_dynamic>
    0.00 :    ff87:   mov    -0x90(%rbp),%rdi
    0.00 :    ff8e:   mov    -0xc0(%rbp),%r10
    0.00 :    ff95:   mov    %rax,0x8(%rdi)
    0.00 :    ff99:   lea    0x4b40(%rip),%rax        # 14ae0 <_dl_tlsdesc_dynamic>
    0.00 :    ffa0:   mov    %rax,(%rdi)
    0.00 :    ffa3:   mov    0x8(%rbx),%eax
    0.00 :    ffa6:   jmp    eb64 <_dl_relocate_object+0x8d4>
    0.00 :    ffab:   movq   $0x0,-0xa0(%rbp)
    0.00 :    ffb6:   jmp    f17a <_dl_relocate_object+0xeea>
    0.00 :    ffbb:   xor    %r9d,%r9d
    0.00 :    ffbe:   jmp    f723 <_dl_relocate_object+0x1493>
    0.00 :    ffc3:   mov    -0xb4(%rbp),%esi
    0.00 :    ffc9:   test   %esi,%esi
    0.00 :    ffcb:   jne    103b0 <_dl_relocate_object+0x2120>
    0.00 :    ffd1:   cmp    %rcx,%r12
    0.00 :    ffd4:   je     1005a <_dl_relocate_object+0x1dca>
    0.00 :    ffda:   movzbl 0x334(%rcx),%edi
    0.00 :    ffe1:   test   $0x8,%dil
    0.00 :    ffe5:   jne    1005a <_dl_relocate_object+0x1dca>
    0.00 :    ffe7:   mov    0x68(%r12),%rax
    0.00 :    ffec:   mov    0x8(%rax),%rax
    0.00 :    fff0:   testb  $0x20,0x336(%r12)
    0.00 :    fff9:   je     ffff <_dl_relocate_object+0x1d6f>
    0.00 :    fffb:   add    (%r12),%rax
    0.00 :    ffff:   mov    (%r10),%edx
    0.00 :   10002:  and    $0x3,%edi
    0.00 :   10005:  lea    (%rax,%rdx,1),%r8
    0.00 :   10009:  mov    0x24a28(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   10010:  mov    0x8(%r12),%rdx
    0.00 :   10015:  mov    (%rax),%rsi
    0.00 :   10018:  je     1043b <_dl_relocate_object+0x21ab>
    0.00 :   1001e:  test   %rsi,%rsi
    0.00 :   10021:  lea    0x19d21(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :   10028:  mov    0x8(%rcx),%rcx
    0.00 :   1002c:  lea    0x1c4dd(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :   10033:  cmove  %rax,%rsi
    0.00 :   10037:  xor    %eax,%eax
    0.00 :   10039:  mov    %r11,-0xa0(%rbp)
    0.00 :   10040:  mov    %r9,-0x90(%rbp)
    0.00 :   10047:  call   d480 <_dl_error_printf>
    0.00 :   1004c:  mov    -0xa0(%rbp),%r11
    0.00 :   10053:  mov    -0x90(%rbp),%r9
    0.00 :   1005a:  add    %r9,%r11
    0.00 :   1005d:  call   *%r11
    0.00 :   10060:  mov    0x10(%rbx),%rax
    0.00 :   10064:  add    (%r12),%rax
    0.00 :   10068:  jmp    f749 <_dl_relocate_object+0x14b9>
    0.00 :   1006d:  cmpl   $0x1,0x430(%r13)
    0.00 :   10075:  jne    e820 <_dl_relocate_object+0x590>
    0.00 :   1007b:  mov    0x440(%r13),%rdx
    0.00 :   10082:  addq   $0x1,0x25a16(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :   1008a:  mov    0x438(%r13),%r9
    0.00 :   10091:  mov    %rdx,-0x78(%rbp)
    0.00 :   10095:  jmp    e8b2 <_dl_relocate_object+0x622>
    0.00 :   1009a:  cmp    %r9,%r13
    0.00 :   1009d:  je     10135 <_dl_relocate_object+0x1ea5>
    0.00 :   100a3:  movzbl 0x334(%r9),%eax
    0.00 :   100ab:  test   $0x8,%al
    0.00 :   100ad:  jne    10135 <_dl_relocate_object+0x1ea5>
    0.00 :   100b3:  mov    0x68(%r13),%rdx
    0.00 :   100b7:  mov    0x8(%rdx),%r8
    0.00 :   100bb:  testb  $0x20,0x336(%r13)
    0.00 :   100c3:  je     100c9 <_dl_relocate_object+0x1e39>
    0.00 :   100c5:  add    0x0(%r13),%r8
    0.00 :   100c9:  mov    -0x88(%rbp),%rsi
    0.00 :   100d0:  mov    0x24961(%rip),%rcx        # 34a38 <_dl_argv>
    0.00 :   100d7:  mov    (%rsi),%edx
    0.00 :   100d9:  mov    (%rcx),%rsi
    0.00 :   100dc:  add    %rdx,%r8
    0.00 :   100df:  mov    0x8(%r13),%rdx
    0.00 :   100e3:  test   $0x3,%al
    0.00 :   100e5:  je     1041f <_dl_relocate_object+0x218f>
    0.00 :   100eb:  test   %rsi,%rsi
    0.00 :   100ee:  lea    0x19c54(%rip),%rax        # 29d49 <_sys_errname+0x989>
    0.00 :   100f5:  mov    0x8(%r9),%rcx
    0.00 :   100f9:  lea    0x1c410(%rip),%rdi        # 2c510 <__PRETTY_FUNCTION__.0+0x270>
    0.00 :   10100:  cmove  %rax,%rsi
    0.00 :   10104:  xor    %eax,%eax
    0.00 :   10106:  mov    %r11,-0xc0(%rbp)
    0.00 :   1010d:  mov    %r10,-0xa8(%rbp)
    0.00 :   10114:  mov    %r9,-0x88(%rbp)
    0.00 :   1011b:  call   d480 <_dl_error_printf>
    0.00 :   10120:  mov    -0xc0(%rbp),%r11
    0.00 :   10127:  mov    -0xa8(%rbp),%r10
    0.00 :   1012e:  mov    -0x88(%rbp),%r9
    0.00 :   10135:  mov    -0x98(%rbp),%rax
    0.00 :   1013c:  mov    -0xa0(%rbp),%rsi
    0.00 :   10143:  mov    %r11,-0xc0(%rbp)
    0.00 :   1014a:  mov    %r10,-0xa8(%rbp)
    0.00 :   10151:  mov    %r9,-0x88(%rbp)
    0.00 :   10158:  add    %rsi,%rax
    0.00 :   1015b:  call   *%rax
    0.00 :   1015d:  cmpq   $0x0,-0x78(%rbp)
    0.00 :   10162:  mov    -0x88(%rbp),%r9
    0.00 :   10169:  mov    -0xa8(%rbp),%r10
    0.00 :   10170:  mov    -0xc0(%rbp),%r11
    0.00 :   10177:  je     e8bb <_dl_relocate_object+0x62b>
    0.00 :   1017d:  jmp    f1a7 <_dl_relocate_object+0xf17>
    0.00 :   10182:  nopw   0x0(%rax,%rax,1)
    0.00 :   10188:  mov    0x430(%r12),%r9d
    0.00 :   10190:  test   %r9d,%r9d
    0.00 :   10193:  jne    f686 <_dl_relocate_object+0x13f6>
    0.00 :   10199:  mov    0x440(%r12),%rdx
    0.00 :   101a1:  addq   $0x1,0x258f7(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :   101a9:  mov    0x438(%r12),%rcx
    0.00 :   101b1:  mov    %rdx,-0x78(%rbp)
    0.00 :   101b5:  jmp    f709 <_dl_relocate_object+0x1479>
    0.00 :   101ba:  cmpl   $0x1,0x430(%r15)
    0.00 :   101c2:  jne    f831 <_dl_relocate_object+0x15a1>
    0.00 :   101c8:  mov    0x440(%r15),%rdx
    0.00 :   101cf:  addq   $0x1,0x258c9(%rip)        # 35aa0 <_rtld_global+0xaa0>
    0.00 :   101d7:  mov    0x438(%r15),%r8
    0.00 :   101de:  mov    %rdx,-0x80(%rbp)
    0.00 :   101e2:  jmp    f8b1 <_dl_relocate_object+0x1621>
    0.00 :   101e7:  mov    %r11,%rdi
    0.00 :   101ea:  mov    %r10,-0xf8(%rbp)
    0.00 :   101f1:  mov    %r11,-0xc0(%rbp)
    0.00 :   101f8:  call   e100 <_dl_allocate_static_tls>
    0.00 :   101fd:  mov    -0xc0(%rbp),%r11
    0.00 :   10204:  mov    -0x78(%rbp),%rax
    0.00 :   10208:  mov    -0xf8(%rbp),%r10
    0.00 :   1020f:  mov    0x470(%r11),%rdx
    0.00 :   10216:  jmp    eeea <_dl_relocate_object+0xc5a>
    0.00 :   1021b:  mov    %r11,%rdi
    0.00 :   1021e:  mov    $0x1,%esi
    0.00 :   10223:  mov    %r10,-0xf8(%rbp)
    0.00 :   1022a:  mov    %r11,-0xc0(%rbp)
    0.00 :   10231:  call   dfe0 <_dl_try_allocate_static_tls>
    0.00 :   10236:  mov    -0x78(%rbp),%rdx
    0.00 :   1023a:  mov    -0xc0(%rbp),%r11
    0.00 :   10241:  test   %eax,%eax
    0.00 :   10243:  mov    -0xf8(%rbp),%r10
    0.00 :   1024a:  jne    ff70 <_dl_relocate_object+0x1ce0>
    0.00 :   10250:  mov    0x470(%r11),%rcx
    0.00 :   10257:  jmp    ef87 <_dl_relocate_object+0xcf7>
    0.00 :   1025c:  lea    0x1668d(%rip),%rdx        # 268f0 <_dl_runtime_profile_avx512>
    0.00 :   10263:  testb  $0x1,0x248b0(%rip)        # 34b1a <_rtld_global_ro+0xba>
    0.00 :   1026a:  jne    10285 <_dl_relocate_object+0x1ff5>
    0.00 :   1026c:  testb  $0x10,0x2488c(%rip)        # 34aff <_rtld_global_ro+0x9f>
    0.00 :   10273:  lea    0x2396(%rip),%rdx        # 12610 <_dl_runtime_profile_sse>
    0.00 :   1027a:  lea    0x16a6f(%rip),%rcx        # 26cf0 <_dl_runtime_profile_avx>
    0.00 :   10281:  cmovne %rcx,%rdx
    0.00 :   10285:  mov    0x24a8c(%rip),%rdi        # 34d18 <_rtld_global_ro+0x2b8>
    0.00 :   1028c:  mov    %rdx,0x10(%rax)
    0.00 :   10290:  test   %rdi,%rdi
    0.00 :   10293:  je     e3b5 <_dl_relocate_object+0x125>
    0.00 :   10299:  mov    %r15,%rsi
    0.00 :   1029c:  call   ae50 <_dl_name_match_p>
    0.00 :   102a1:  test   %eax,%eax
    0.00 :   102a3:  je     e3b5 <_dl_relocate_object+0x125>
    0.00 :   102a9:  mov    %r15,0x257e0(%rip)        # 35a90 <_rtld_global+0xa90>
    0.00 :   102b0:  jmp    e3b5 <_dl_relocate_object+0x125>
    0.00 :   102b5:  mov    0x10(%rbx),%rsi
    0.00 :   102b9:  mov    %r11,%rdi
    0.00 :   102bc:  add    0x8(%rcx),%rsi
    0.00 :   102c0:  mov    %r10,-0xa0(%rbp)
    0.00 :   102c7:  call   14780 <_dl_make_tlsdesc_dynamic>
    0.00 :   102cc:  mov    -0xa0(%rbp),%r10
    0.00 :   102d3:  mov    %rax,0x8(%r10)
    0.00 :   102d7:  lea    0x4802(%rip),%rax        # 14ae0 <_dl_tlsdesc_dynamic>
    0.00 :   102de:  mov    %rax,(%r10)
    0.00 :   102e1:  mov    0x8(%rbx),%eax
    0.00 :   102e4:  jmp    f5b8 <_dl_relocate_object+0x1328>
    0.00 :   102e9:  mov    %r11,%rdi
    0.00 :   102ec:  mov    %r10,-0xd0(%rbp)
    0.00 :   102f3:  mov    %r11,-0xa0(%rbp)
    0.00 :   102fa:  call   e100 <_dl_allocate_static_tls>
    0.00 :   102ff:  mov    -0xa0(%rbp),%r11
    0.00 :   10306:  mov    -0x78(%rbp),%rax
    0.00 :   1030a:  mov    -0xd0(%rbp),%r10
    0.00 :   10311:  mov    0x470(%r11),%rdx
    0.00 :   10318:  jmp    f9d2 <_dl_relocate_object+0x1742>
    0.00 :   1031d:  mov    %r11,%rdi
    0.00 :   10320:  mov    $0x1,%esi
    0.00 :   10325:  mov    %r10,-0xd0(%rbp)
    0.00 :   1032c:  mov    %r11,-0xa0(%rbp)
    0.00 :   10333:  call   dfe0 <_dl_try_allocate_static_tls>
    0.00 :   10338:  mov    -0x78(%rbp),%rcx
    0.00 :   1033c:  mov    -0xa0(%rbp),%r11
    0.00 :   10343:  test   %eax,%eax
    0.00 :   10345:  mov    -0xd0(%rbp),%r10
    0.00 :   1034c:  jne    102b5 <_dl_relocate_object+0x2025>
    0.00 :   10352:  mov    0x470(%r11),%rdx
    0.00 :   10359:  jmp    f91e <_dl_relocate_object+0x168e>
    0.00 :   1035e:  mov    0x10(%rbx),%rax
    0.00 :   10362:  add    (%r12),%rax
    0.00 :   10366:  jmp    ed25 <_dl_relocate_object+0xa95>
    0.00 :   1036b:  mov    -0x78(%rbp),%rax
    0.00 :   1036f:  mov    0x10(%rbx),%rsi
    0.00 :   10373:  mov    %r9,%rdi
    0.00 :   10376:  mov    %r11,-0x98(%rbp)
    0.00 :   1037d:  mov    %r10,-0x88(%rbp)
    0.00 :   10384:  add    0x8(%rax),%rsi
    0.00 :   10388:  call   14780 <_dl_make_tlsdesc_dynamic>
    0.00 :   1038d:  mov    -0x88(%rbp),%r10
    0.00 :   10394:  mov    -0x98(%rbp),%r11
    0.00 :   1039b:  mov    %rax,0x8(%r12)
    0.00 :   103a0:  lea    0x4739(%rip),%rax        # 14ae0 <_dl_tlsdesc_dynamic>
    0.00 :   103a7:  mov    %rax,(%r12)
    0.00 :   103ab:  jmp    e604 <_dl_relocate_object+0x374>
    0.00 :   103b0:  mov    (%r12),%rax
    0.00 :   103b4:  add    0x10(%rbx),%rax
    0.00 :   103b8:  jmp    f74b <_dl_relocate_object+0x14bb>
    0.00 :   103bd:  movq   $0x0,-0xe0(%rbp)
    0.00 :   103c8:  jmp    e35e <_dl_relocate_object+0xce>
    0.00 :   103cd:  xor    %r10d,%r10d
    0.00 :   103d0:  lea    0x1a842(%rip),%rdx        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   103d7:  jmp    fd25 <_dl_relocate_object+0x1a95>
    0.00 :   103dc:  lea    0x1ab4d(%rip),%rcx        # 2af30 <__PRETTY_FUNCTION__.1>
    0.00 :   103e3:  mov    $0x1e7,%edx
    0.00 :   103e8:  lea    0x1c159(%rip),%rsi        # 2c548 <__PRETTY_FUNCTION__.0+0x2a8>
    0.00 :   103ef:  lea    0x1c172(%rip),%rdi        # 2c568 <__PRETTY_FUNCTION__.0+0x2c8>
    0.00 :   103f6:  call   19f20 <__GI___assert_fail>
    0.00 :   103fb:  lea    0x1bf96(%rip),%rcx        # 2c398 <__PRETTY_FUNCTION__.0+0xf8>
    0.00 :   10402:  mov    0x8(%r15),%rsi
    0.00 :   10406:  mov    0x25e74(%rip),%edi        # 36280 <rtld_errno>
    0.00 :   1040c:  xor    %edx,%edx
    0.00 :   1040e:  call   1070 <_dl_signal_error@plt>
    0.00 :   10413:  mov    %r13,%r15
    0.00 :   10416:  lea    0x1bf4b(%rip),%rcx        # 2c368 <__PRETTY_FUNCTION__.0+0xc8>
    0.00 :   1041d:  jmp    10402 <_dl_relocate_object+0x2172>
    0.00 :   1041f:  mov    %rdx,%rdi
    0.00 :   10422:  test   %rsi,%rsi
    0.00 :   10425:  je     1045d <_dl_relocate_object+0x21cd>
    0.00 :   10427:  mov    %rdi,%rcx
    0.00 :   1042a:  mov    %r8,%rdx
    0.00 :   1042d:  lea    0x1c05c(%rip),%rdi        # 2c490 <__PRETTY_FUNCTION__.0+0x1f0>
    0.00 :   10434:  xor    %eax,%eax
    0.00 :   10436:  call   d530 <_dl_fatal_printf>
    0.00 :   1043b:  mov    %rsi,%rdi
    0.00 :   1043e:  mov    %rdx,%r9
    0.00 :   10441:  test   %rsi,%rsi
    0.00 :   10444:  je     10466 <_dl_relocate_object+0x21d6>
    0.00 :   10446:  mov    %rdi,%rsi
    0.00 :   10449:  mov    %r9,%rcx
    0.00 :   1044c:  mov    %r8,%rdx
    0.00 :   1044f:  xor    %eax,%eax
    0.00 :   10451:  lea    0x1c038(%rip),%rdi        # 2c490 <__PRETTY_FUNCTION__.0+0x1f0>
    0.00 :   10458:  call   d530 <_dl_fatal_printf>
    0.00 :   1045d:  lea    0x198e5(%rip),%rsi        # 29d49 <_sys_errname+0x989>
    0.00 :   10464:  jmp    10427 <_dl_relocate_object+0x2197>
    0.00 :   10466:  lea    0x198dc(%rip),%rdi        # 29d49 <_sys_errname+0x989>
    0.00 :   1046d:  jmp    10446 <_dl_relocate_object+0x21b6>
    0.00 :   1046f:  mov    %rdx,%rax
    0.00 :   10472:  test   %rsi,%rsi
    0.00 :   10475:  je     1048b <_dl_relocate_object+0x21fb>
    0.00 :   10477:  mov    %rax,%rcx
    0.00 :   1047a:  mov    %r8,%rdx
    0.00 :   1047d:  lea    0x1c00c(%rip),%rdi        # 2c490 <__PRETTY_FUNCTION__.0+0x1f0>
    0.00 :   10484:  xor    %eax,%eax
    0.00 :   10486:  call   d530 <_dl_fatal_printf>
    0.00 :   1048b:  lea    0x198b7(%rip),%rsi        # 29d49 <_sys_errname+0x989>
    0.00 :   10492:  jmp    10477 <_dl_relocate_object+0x21e7>
    0.00 :   10494:  lea    0x198ae(%rip),%rsi        # 29d49 <_sys_errname+0x989>
    0.00 :   1049b:  jmp    f324 <_dl_relocate_object+0x1094>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   65.19 libc.so.6[49ad0]
   34.81 libc.so.6[49adb]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (6 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000049ad0 <strtoimax>:
         : 6     __GI_strtoll():
   65.19 :   49ad0:  endbr64 // libc.so.6[49ad0]
    0.00 :   49ad4:  mov    0x189495(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
   34.81 :   49adb:  xor    %ecx,%ecx // libc.so.6[49adb]
    0.00 :   49add:  mov    %fs:(%rax),%r8
    0.00 :   49ae1:  jmp    49af0 <__GI_____strtol_l_internal>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   51.75 libc.so.6[5d93c]
   48.25 libc.so.6[5e106]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000005d910 <__vfprintf_internal>:
         : 6     __vfprintf_internal():
    0.00 :   5d910:  endbr64
    0.00 :   5d914:  push   %r15
    0.00 :   5d916:  push   %r14
    0.00 :   5d918:  push   %r13
    0.00 :   5d91a:  push   %r12
    0.00 :   5d91c:  mov    %rdx,%r12
    0.00 :   5d91f:  push   %rbp
    0.00 :   5d920:  push   %rbx
    0.00 :   5d921:  mov    %rdi,%rbx
    0.00 :   5d924:  sub    $0x508,%rsp
    0.00 :   5d92b:  mov    %rsi,(%rsp)
    0.00 :   5d92f:  mov    %ecx,0x3c(%rsp)
    0.00 :   5d933:  mov    %fs:0x28,%rax
   51.75 :   5d93c:  mov    %rax,0x4f8(%rsp) // libc.so.6[5d93c]
    0.00 :   5d944:  mov    0x1754c5(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5d94b:  mov    %fs:(%rax),%eax
    0.00 :   5d94e:  mov    %eax,0x54(%rsp)
    0.00 :   5d952:  mov    0xc0(%rdi),%eax
    0.00 :   5d958:  test   %eax,%eax
    0.00 :   5d95a:  jne    5dc20 <__vfprintf_internal+0x310>
    0.00 :   5d960:  movl   $0xffffffff,0xc0(%rdi)
    0.00 :   5d96a:  mov    (%rbx),%ebp
    0.00 :   5d96c:  test   $0x8,%bpl
    0.00 :   5d970:  jne    5fbb4 <__vfprintf_internal+0x22a4>
    0.00 :   5d976:  cmpq   $0x0,(%rsp)
    0.00 :   5d97b:  je     5fce0 <__vfprintf_internal+0x23d0>
    0.00 :   5d981:  test   $0x2,%bpl
    0.00 :   5d985:  jne    5eee8 <__vfprintf_internal+0x15d8>
    0.00 :   5d98b:  movdqu (%r12),%xmm1
    0.00 :   5d991:  mov    (%rsp),%rdi
    0.00 :   5d995:  mov    $0x25,%esi
    0.00 :   5d99a:  movups %xmm1,0xe8(%rsp)
    0.00 :   5d9a2:  mov    0x10(%r12),%rax
    0.00 :   5d9a7:  mov    %rax,0xf8(%rsp)
    0.00 :   5d9af:  call   264d0 <*ABS*+0x9fc40@plt>
    0.00 :   5d9b4:  and    $0x8000,%ebp
    0.00 :   5d9ba:  movb   $0x0,0x7a(%rsp)
    0.00 :   5d9bf:  mov    %rax,0x40(%rsp)
    0.00 :   5d9c4:  mov    %rax,0x80(%rsp)
    0.00 :   5d9cc:  mov    %rbx,0xc8(%rsp)
    0.00 :   5d9d4:  je     5dc38 <__vfprintf_internal+0x328>
    0.00 :   5d9da:  mov    (%rsp),%rax
    0.00 :   5d9de:  mov    0x40(%rsp),%r13
    0.00 :   5d9e3:  lea    0x172016(%rip),%rdi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5d9ea:  mov    0xd8(%rbx),%rbp
    0.00 :   5d9f1:  sub    %rax,%r13
    0.00 :   5d9f4:  lea    0x172d6d(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   5d9fb:  sub    %rdi,%rax
    0.00 :   5d9fe:  mov    %rax,0x10(%rsp)
    0.00 :   5da03:  mov    %rax,%rsi
    0.00 :   5da06:  mov    %rbp,%rax
    0.00 :   5da09:  sub    %rdi,%rax
    0.00 :   5da0c:  cmp    %rsi,%rax
    0.00 :   5da0f:  jae    5f1f0 <__vfprintf_internal+0x18e0>
    0.00 :   5da15:  mov    (%rsp),%rsi
    0.00 :   5da19:  mov    %r13,%rdx
    0.00 :   5da1c:  mov    %rbx,%rdi
    0.00 :   5da1f:  call   *0x38(%rbp)
    0.00 :   5da22:  cmp    %rax,%r13
    0.00 :   5da25:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5da2b:  movslq %r13d,%rdx
    0.00 :   5da2e:  mov    %r13,%rax
    0.00 :   5da31:  movslq %r13d,%rbp
    0.00 :   5da34:  shr    $0x3f,%rax
    0.00 :   5da38:  cmp    %rdx,%r13
    0.00 :   5da3b:  mov    $0x1,%edx
    0.00 :   5da40:  cmovne %edx,%eax
    0.00 :   5da43:  test   %eax,%eax
    0.00 :   5da45:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5da4b:  test   %r13d,%r13d
    0.00 :   5da4e:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5da54:  mov    0x80(%rsp),%r13
    0.00 :   5da5c:  cmpb   $0x0,0x0(%r13)
    0.00 :   5da61:  je     5db32 <__vfprintf_internal+0x222>
    0.00 :   5da67:  mov    0x177f32(%rip),%rsi        # 1d59a0 <__printf_function_table>
    0.00 :   5da6e:  mov    %rsi,0x68(%rsp)
    0.00 :   5da73:  test   %rsi,%rsi
    0.00 :   5da76:  jne    5f710 <__vfprintf_internal+0x1e00>
    0.00 :   5da7c:  cmpq   $0x0,0x177f0c(%rip)        # 1d5990 <__printf_modifier_table>
    0.00 :   5da84:  jne    5f760 <__vfprintf_internal+0x1e50>
    0.00 :   5da8a:  cmpq   $0x0,0x176e26(%rip)        # 1d48b8 <__printf_va_arg_table>
    0.00 :   5da92:  movl   $0x0,0x7c(%rsp)
    0.00 :   5da9a:  jne    5f830 <__vfprintf_internal+0x1f20>
    0.00 :   5daa0:  movl   $0x0,0x4c(%rsp)
    0.00 :   5daa8:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5dab1:  nopl   0x0(%rax)
    0.00 :   5dab8:  movzbl 0x1(%r13),%r9d
    0.00 :   5dabd:  lea    0x1(%r13),%rax
    0.00 :   5dac1:  mov    %rax,0x80(%rsp)
    0.00 :   5dac9:  lea    -0x20(%r9),%eax
    0.00 :   5dacd:  cmp    $0x5a,%al
    0.00 :   5dacf:  jbe    5dba0 <__vfprintf_internal+0x290>
    0.00 :   5dad5:  endbr64
    0.00 :   5dad9:  test   %r9b,%r9b
    0.00 :   5dadc:  je     5f4b8 <__vfprintf_internal+0x1ba8>
    0.00 :   5dae2:  mov    0x4c(%rsp),%eax
    0.00 :   5dae6:  sub    $0x8,%rsp
    0.00 :   5daea:  mov    %ebp,%r9d
    0.00 :   5daed:  mov    0x44(%rsp),%edi
    0.00 :   5daf1:  push   %rdi
    0.00 :   5daf2:  mov    %rbx,%rdi
    0.00 :   5daf5:  push   0x78(%rsp)
    0.00 :   5daf9:  push   0x78(%rsp)
    0.00 :   5dafd:  mov    0x74(%rsp),%ecx
    0.00 :   5db01:  push   %rcx
    0.00 :   5db02:  mov    %r12,%rcx
    0.00 :   5db05:  lea    0x138(%rsp),%rdx
    0.00 :   5db0d:  push   %rdx
    0.00 :   5db0e:  push   0x70(%rsp)
    0.00 :   5db12:  push   %rax
    0.00 :   5db13:  mov    0xbc(%rsp),%edx
    0.00 :   5db1a:  mov    0x40(%rsp),%rsi
    0.00 :   5db1f:  lea    0x128(%rsp),%r8
    0.00 :   5db27:  call   5b410 <printf_positional>
    0.00 :   5db2c:  add    $0x40,%rsp
    0.00 :   5db30:  mov    %eax,%ebp
    0.00 :   5db32:  testl  $0x8000,(%rbx)
    0.00 :   5db38:  je     5db70 <__vfprintf_internal+0x260>
    0.00 :   5db3a:  cmpb   $0x0,0x7a(%rsp)
    0.00 :   5db3f:  jne    5dca0 <__vfprintf_internal+0x390>
    0.00 :   5db45:  mov    0x4f8(%rsp),%rax
    0.00 :   5db4d:  sub    %fs:0x28,%rax
    0.00 :   5db56:  jne    5fdb4 <__vfprintf_internal+0x24a4>
    0.00 :   5db5c:  add    $0x508,%rsp
    0.00 :   5db63:  mov    %ebp,%eax
    0.00 :   5db65:  pop    %rbx
    0.00 :   5db66:  pop    %rbp
    0.00 :   5db67:  pop    %r12
    0.00 :   5db69:  pop    %r13
    0.00 :   5db6b:  pop    %r14
    0.00 :   5db6d:  pop    %r15
    0.00 :   5db6f:  ret
    0.00 :   5db70:  mov    0x88(%rbx),%rdi
    0.00 :   5db77:  mov    0x4(%rdi),%eax
    0.00 :   5db7a:  sub    $0x1,%eax
    0.00 :   5db7d:  mov    %eax,0x4(%rdi)
    0.00 :   5db80:  jne    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db82:  movq   $0x0,0x8(%rdi)
    0.00 :   5db8a:  xchg   %eax,(%rdi)
    0.00 :   5db8c:  cmp    $0x1,%eax
    0.00 :   5db8f:  jle    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db91:  call   87f80 <__lll_lock_wake_private>
    0.00 :   5db96:  jmp    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db98:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dba0:  movzbl %r9b,%eax
    0.00 :   5dba4:  lea    0x1325f5(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5dbab:  lea    0x13256e(%rip),%rsi        # 190120 <step0_jumps.9>
    0.00 :   5dbb2:  movl   $0x0,0x50(%rsp)
    0.00 :   5dbba:  sub    $0x20,%eax
    0.00 :   5dbbd:  movl   $0x0,0x18(%rsp)
    0.00 :   5dbc5:  xor    %r14d,%r14d
    0.00 :   5dbc8:  xor    %r13d,%r13d
    0.00 :   5dbcb:  cltq
    0.00 :   5dbcd:  movl   $0x0,0x8(%rsp)
    0.00 :   5dbd5:  xor    %r10d,%r10d
    0.00 :   5dbd8:  xor    %r15d,%r15d
    0.00 :   5dbdb:  movzbl (%rcx,%rax,1),%eax
    0.00 :   5dbdf:  lea    -0x111(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5dbe6:  movl   $0x0,0x30(%rsp)
    0.00 :   5dbee:  mov    $0xffffffff,%r11d
    0.00 :   5dbf4:  movl   $0x0,0x20(%rsp)
    0.00 :   5dbfc:  movslq (%rsi,%rax,4),%rax
    0.00 :   5dc00:  movl   $0x0,0x38(%rsp)
    0.00 :   5dc08:  movl   $0x0,0x48(%rsp)
    0.00 :   5dc10:  add    %rcx,%rax
    0.00 :   5dc13:  movb   $0x20,0x34(%rsp)
    0.00 :   5dc18:  jmp    *%rax
    0.00 :   5dc1a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5dc20:  cmp    $0xffffffff,%eax
    0.00 :   5dc23:  je     5d96a <__vfprintf_internal+0x5a>
    0.00 :   5dc29:  mov    $0xffffffff,%ebp
    0.00 :   5dc2e:  jmp    5db45 <__vfprintf_internal+0x235>
    0.00 :   5dc33:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dc38:  mov    0x175301(%rip),%rax        # 1d2f40 <_IO_funlockfile@@GLIBC_2.2.5+0x17fd00>
    0.00 :   5dc3f:  lea    0xc0(%rsp),%rdi
    0.00 :   5dc47:  mov    %rax,0xc0(%rsp)
    0.00 :   5dc4f:  call   87df0 <__GI___libc_cleanup_push_defer>
    0.00 :   5dc54:  mov    (%rbx),%eax
    0.00 :   5dc56:  and    $0x8000,%eax
    0.00 :   5dc5b:  jne    5dc91 <__vfprintf_internal+0x381>
    0.00 :   5dc5d:  mov    %fs:0x10,%rbp
    0.00 :   5dc66:  mov    0x88(%rbx),%rdi
    0.00 :   5dc6d:  cmp    %rbp,0x8(%rdi)
    0.00 :   5dc71:  je     5dc8d <__vfprintf_internal+0x37d>
    0.00 :   5dc73:  mov    $0x1,%edx
    0.00 :   5dc78:  lock cmpxchg %edx,(%rdi)
    0.00 :   5dc7c:  jne    5f60a <__vfprintf_internal+0x1cfa>
    0.00 :   5dc82:  mov    0x88(%rbx),%rdi
    0.00 :   5dc89:  mov    %rbp,0x8(%rdi)
    0.00 :   5dc8d:  addl   $0x1,0x4(%rdi)
    0.00 :   5dc91:  movb   $0x1,0x7a(%rsp)
    0.00 :   5dc96:  jmp    5d9da <__vfprintf_internal+0xca>
    0.00 :   5dc9b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dca0:  lea    0xc0(%rsp),%rdi
    0.00 :   5dca8:  call   87e40 <__GI___libc_cleanup_pop_restore>
    0.00 :   5dcad:  jmp    5db45 <__vfprintf_internal+0x235>
    0.00 :   5dcb2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5dcb8:  endbr64
    0.00 :   5dcbc:  endbr64
    0.00 :   5dcc0:  testb  $0x1,0x3c(%rsp)
    0.00 :   5dcc5:  jne    5fa38 <__vfprintf_internal+0x2128>
    0.00 :   5dccb:  mov    %r10d,%edx
    0.00 :   5dcce:  and    $0x1,%edx
    0.00 :   5dcd1:  mov    0x18(%rsp),%eax
    0.00 :   5dcd5:  movzbl %dl,%edx
    0.00 :   5dcd8:  movsbl %r9b,%r9d
    0.00 :   5dcdc:  movl   $0x0,0xac(%rsp)
    0.00 :   5dce7:  mov    %r11d,0xa0(%rsp)
    0.00 :   5dcef:  mov    %eax,0xa4(%rsp)
    0.00 :   5dcf6:  lea    0x0(%r13,%r13,1),%eax
    0.00 :   5dcfb:  or     %edx,%eax
    0.00 :   5dcfd:  movzwl 0x8(%rsp),%edx
    0.00 :   5dd02:  mov    %r9d,0xa8(%rsp)
    0.00 :   5dd0a:  shl    $0x2,%edx
    0.00 :   5dd0d:  or     %edx,%eax
    0.00 :   5dd0f:  movzwl 0x48(%rsp),%edx
    0.00 :   5dd14:  shl    $0x3,%edx
    0.00 :   5dd17:  or     %edx,%eax
    0.00 :   5dd19:  movzwl 0x38(%rsp),%edx
    0.00 :   5dd1e:  shl    $0x4,%edx
    0.00 :   5dd21:  or     %edx,%eax
    0.00 :   5dd23:  movzwl 0x20(%rsp),%edx
    0.00 :   5dd28:  shl    $0x5,%edx
    0.00 :   5dd2b:  or     %edx,%eax
    0.00 :   5dd2d:  movzwl 0x30(%rsp),%edx
    0.00 :   5dd32:  shl    $0x6,%edx
    0.00 :   5dd35:  or     %edx,%eax
    0.00 :   5dd37:  mov    %r15d,%edx
    0.00 :   5dd3a:  shl    $0x7,%edx
    0.00 :   5dd3d:  or     %edx,%eax
    0.00 :   5dd3f:  movzwl 0x50(%rsp),%edx
    0.00 :   5dd44:  shl    $0xb,%edx
    0.00 :   5dd47:  or     %edx,%eax
    0.00 :   5dd49:  and    $0x8ff,%ax
    0.00 :   5dd4d:  mov    %ax,0xac(%rsp)
    0.00 :   5dd55:  movzbl 0x34(%rsp),%eax
    0.00 :   5dd5a:  mov    %eax,0xb0(%rsp)
    0.00 :   5dd61:  test   %r10d,%r10d
    0.00 :   5dd64:  je     5f0b0 <__vfprintf_internal+0x17a0>
    0.00 :   5dd6a:  testb  $0x8,0x3c(%rsp)
    0.00 :   5dd6f:  je     5f440 <__vfprintf_internal+0x1b30>
    0.00 :   5dd75:  orb    $0x10,0xad(%rsp)
    0.00 :   5dd7d:  mov    0x4(%r12),%edx
    0.00 :   5dd82:  cmp    $0xaf,%edx
    0.00 :   5dd88:  ja     5f973 <__vfprintf_internal+0x2063>
    0.00 :   5dd8e:  mov    %edx,%eax
    0.00 :   5dd90:  add    $0x10,%edx
    0.00 :   5dd93:  add    0x10(%r12),%rax
    0.00 :   5dd98:  mov    %edx,0x4(%r12)
    0.00 :   5dd9d:  movdqa (%rax),%xmm2
    0.00 :   5dda1:  movaps %xmm2,0x90(%rsp)
    0.00 :   5dda9:  jmp    5f0dc <__vfprintf_internal+0x17cc>
    0.00 :   5ddae:  xchg   %ax,%ax
    0.00 :   5ddb0:  endbr64
    0.00 :   5ddb4:  mov    (%r12),%eax
    0.00 :   5ddb8:  lea    0xe0(%rsp),%rcx
    0.00 :   5ddc0:  movq   $0x0,0xe0(%rsp)
    0.00 :   5ddcc:  cmp    $0x2f,%eax
    0.00 :   5ddcf:  ja     5f2c0 <__vfprintf_internal+0x19b0>
    0.00 :   5ddd5:  mov    %eax,%edx
    0.00 :   5ddd7:  add    $0x8,%eax
    0.00 :   5ddda:  add    0x10(%r12),%rdx
    0.00 :   5dddf:  mov    %eax,(%r12)
    0.00 :   5dde3:  mov    (%rdx),%esi
    0.00 :   5dde5:  lea    0x100(%rsp),%r13
    0.00 :   5dded:  mov    %rcx,%rdx
    0.00 :   5ddf0:  mov    %r13,%rdi
    0.00 :   5ddf3:  call   b4550 <wcrtomb>
    0.00 :   5ddf8:  mov    %rax,%r14
    0.00 :   5ddfb:  cmp    $0xffffffffffffffff,%rax
    0.00 :   5ddff:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5de05:  mov    0x18(%rsp),%r15d
    0.00 :   5de0a:  mov    0x20(%rsp),%edx
    0.00 :   5de0e:  sub    %eax,%r15d
    0.00 :   5de11:  test   %edx,%edx
    0.00 :   5de13:  jne    5de1e <__vfprintf_internal+0x50e>
    0.00 :   5de15:  test   %r15d,%r15d
    0.00 :   5de18:  jg     5f53f <__vfprintf_internal+0x1c2f>
    0.00 :   5de1e:  mov    0xd8(%rbx),%rax
    0.00 :   5de25:  lea    0x171bd4(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5de2c:  mov    0x10(%rsp),%rsi
    0.00 :   5de31:  mov    %rax,%rdx
    0.00 :   5de34:  sub    %rcx,%rdx
    0.00 :   5de37:  cmp    %rsi,%rdx
    0.00 :   5de3a:  jae    5fb10 <__vfprintf_internal+0x2200>
    0.00 :   5de40:  mov    %r14,%rdx
    0.00 :   5de43:  mov    %r13,%rsi
    0.00 :   5de46:  mov    %rbx,%rdi
    0.00 :   5de49:  call   *0x38(%rax)
    0.00 :   5de4c:  cmp    %rax,%r14
    0.00 :   5de4f:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5de55:  mov    %r14,%rax
    0.00 :   5de58:  xor    %edx,%edx
    0.00 :   5de5a:  add    %rbp,%rax
    0.00 :   5de5d:  js     5fdf5 <__vfprintf_internal+0x24e5>
    0.00 :   5de63:  cmp    %rbp,%rax
    0.00 :   5de66:  jb     5fdf5 <__vfprintf_internal+0x24e5>
    0.00 :   5de6c:  movslq %eax,%rcx
    0.00 :   5de6f:  mov    %eax,%ebp
    0.00 :   5de71:  cmp    %rcx,%rax
    0.00 :   5de74:  mov    $0x1,%ecx
    0.00 :   5de79:  cmovne %ecx,%edx
    0.00 :   5de7c:  test   %edx,%edx
    0.00 :   5de7e:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5de84:  test   %eax,%eax
    0.00 :   5de86:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5de8c:  test   %r15d,%r15d
    0.00 :   5de8f:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5de91:  testb  $0x1,0x20(%rsp)
    0.00 :   5de96:  jne    5fa42 <__vfprintf_internal+0x2132>
    0.00 :   5de9c:  nopl   0x0(%rax)
    0.00 :   5dea0:  mov    0x80(%rsp),%rax
    0.00 :   5dea8:  mov    $0x25,%esi
    0.00 :   5dead:  addl   $0x1,0x4c(%rsp)
    0.00 :   5deb2:  lea    0x1(%rax),%r14
    0.00 :   5deb6:  mov    %r14,%rdi
    0.00 :   5deb9:  call   264d0 <*ABS*+0x9fc40@plt>
    0.00 :   5debe:  lea    0x171b3b(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5dec5:  mov    0x10(%rsp),%rsi
    0.00 :   5deca:  mov    %rax,%r15
    0.00 :   5decd:  mov    %rax,0x80(%rsp)
    0.00 :   5ded5:  mov    %rax,%r13
    0.00 :   5ded8:  mov    0xd8(%rbx),%rax
    0.00 :   5dedf:  sub    %r14,%r15
    0.00 :   5dee2:  mov    %rax,%rdx
    0.00 :   5dee5:  sub    %rcx,%rdx
    0.00 :   5dee8:  cmp    %rsi,%rdx
    0.00 :   5deeb:  jae    5efb0 <__vfprintf_internal+0x16a0>
    0.00 :   5def1:  mov    %r15,%rdx
    0.00 :   5def4:  mov    %r14,%rsi
    0.00 :   5def7:  mov    %rbx,%rdi
    0.00 :   5defa:  call   *0x38(%rax)
    0.00 :   5defd:  cmp    %rax,%r15
    0.00 :   5df00:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5df06:  movslq %ebp,%rax
    0.00 :   5df09:  xor    %edx,%edx
    0.00 :   5df0b:  add    %r15,%rax
    0.00 :   5df0e:  js     5fdaa <__vfprintf_internal+0x249a>
    0.00 :   5df14:  cmp    %r15,%rax
    0.00 :   5df17:  jb     5fdaa <__vfprintf_internal+0x249a>
    0.00 :   5df1d:  movslq %eax,%rcx
    0.00 :   5df20:  movslq %eax,%rbp
    0.00 :   5df23:  cmp    %rcx,%rax
    0.00 :   5df26:  mov    $0x1,%ecx
    0.00 :   5df2b:  cmovne %ecx,%edx
    0.00 :   5df2e:  test   %edx,%edx
    0.00 :   5df30:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5df36:  test   %eax,%eax
    0.00 :   5df38:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5df3e:  cmpb   $0x0,0x0(%r13)
    0.00 :   5df43:  jne    5dab8 <__vfprintf_internal+0x1a8>
    0.00 :   5df49:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5df4e:  xchg   %ax,%ax
    0.00 :   5df50:  endbr64
    0.00 :   5df54:  mov    0x80(%rsp),%rax
    0.00 :   5df5c:  movzbl 0x1(%rax),%r9d
    0.00 :   5df61:  lea    0x1(%rax),%rdx
    0.00 :   5df65:  mov    %rdx,0x80(%rsp)
    0.00 :   5df6d:  lea    -0x20(%r9),%eax
    0.00 :   5df71:  cmp    $0x5a,%al
    0.00 :   5df73:  ja     5f480 <__vfprintf_internal+0x1b70>
    0.00 :   5df79:  movzbl %r9b,%eax
    0.00 :   5df7d:  lea    0x13221c(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5df84:  lea    0x132195(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5df8b:  movl   $0x1,0x38(%rsp)
    0.00 :   5df93:  sub    $0x20,%eax
    0.00 :   5df96:  lea    -0x4c8(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5df9d:  cltq
    0.00 :   5df9f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5dfa3:  movslq (%rcx,%rax,4),%rax
    0.00 :   5dfa7:  add    %rsi,%rax
    0.00 :   5dfaa:  jmp    *%rax
    0.00 :   5dfac:  nopl   0x0(%rax)
    0.00 :   5dfb0:  endbr64
    0.00 :   5dfb4:  mov    0x8(%rsp),%r8d
    0.00 :   5dfb9:  test   %r8d,%r8d
    0.00 :   5dfbc:  jne    5ddb0 <__vfprintf_internal+0x4a0>
    0.00 :   5dfc2:  mov    0x18(%rsp),%r13d
    0.00 :   5dfc7:  mov    0x20(%rsp),%edi
    0.00 :   5dfcb:  sub    $0x1,%r13d
    0.00 :   5dfcf:  test   %edi,%edi
    0.00 :   5dfd1:  je     5f588 <__vfprintf_internal+0x1c78>
    0.00 :   5dfd7:  mov    (%r12),%eax
    0.00 :   5dfdb:  cmp    $0x2f,%eax
    0.00 :   5dfde:  ja     5f518 <__vfprintf_internal+0x1c08>
    0.00 :   5dfe4:  mov    %eax,%edx
    0.00 :   5dfe6:  add    $0x8,%eax
    0.00 :   5dfe9:  add    0x10(%r12),%rdx
    0.00 :   5dfee:  mov    %eax,(%r12)
    0.00 :   5dff2:  mov    (%rdx),%edx
    0.00 :   5dff4:  mov    0x28(%rbx),%rax
    0.00 :   5dff8:  cmp    0x30(%rbx),%rax
    0.00 :   5dffc:  jae    5fc55 <__vfprintf_internal+0x2345>
    0.00 :   5e002:  lea    0x1(%rax),%rcx
    0.00 :   5e006:  mov    %rcx,0x28(%rbx)
    0.00 :   5e00a:  mov    %dl,(%rax)
    0.00 :   5e00c:  cmp    $0x7fffffff,%ebp
    0.00 :   5e012:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5e014:  mov    0x20(%rsp),%esi
    0.00 :   5e018:  add    $0x1,%ebp
    0.00 :   5e01b:  test   %esi,%esi
    0.00 :   5e01d:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e023:  test   %r13d,%r13d
    0.00 :   5e026:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e02c:  movslq %r13d,%r14
    0.00 :   5e02f:  mov    $0x20,%esi
    0.00 :   5e034:  mov    %rbx,%rdi
    0.00 :   5e037:  mov    %r14,%rdx
    0.00 :   5e03a:  call   78be0 <_IO_padn>
    0.00 :   5e03f:  cmp    %rax,%r14
    0.00 :   5e042:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e044:  add    %r13d,%ebp
    0.00 :   5e047:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5e049:  cmp    %r13d,%ebp
    0.00 :   5e04c:  jae    5f12a <__vfprintf_internal+0x181a>
    0.00 :   5e052:  nopw   0x0(%rax,%rax,1)
    0.00 :   5e058:  mov    0x174db1(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5e05f:  movl   $0x4b,%fs:(%rax)
    0.00 :   5e066:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5e070:  mov    $0xffffffff,%ebp
    0.00 :   5e075:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e07a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5e080:  endbr64
    0.00 :   5e084:  mov    0x48(%rsp),%r10d
    0.00 :   5e089:  mov    %r9b,0x28(%rsp)
    0.00 :   5e08e:  mov    %r11d,0x8(%rsp)
    0.00 :   5e093:  test   %r10d,%r10d
    0.00 :   5e096:  jne    5f498 <__vfprintf_internal+0x1b88>
    0.00 :   5e09c:  mov    0x54(%rsp),%edi
    0.00 :   5e0a0:  lea    0x110(%rsp),%rsi
    0.00 :   5e0a8:  mov    $0x3e8,%edx
    0.00 :   5e0ad:  call   9d370 <__strerror_r>
    0.00 :   5e0b2:  movzbl 0x28(%rsp),%r9d
    0.00 :   5e0b8:  mov    0x8(%rsp),%r11d
    0.00 :   5e0bd:  mov    %rax,%r13
    0.00 :   5e0c0:  mov    $0x1,%eax
    0.00 :   5e0c5:  test   %r13,%r13
    0.00 :   5e0c8:  je     5f897 <__vfprintf_internal+0x1f87>
    0.00 :   5e0ce:  cmp    $0x53,%r9b
    0.00 :   5e0d2:  je     5f656 <__vfprintf_internal+0x1d46>
    0.00 :   5e0d8:  test   %al,%al
    0.00 :   5e0da:  je     5f656 <__vfprintf_internal+0x1d46>
    0.00 :   5e0e0:  cmp    $0xffffffff,%r11d
    0.00 :   5e0e4:  je     5f820 <__vfprintf_internal+0x1f10>
    0.00 :   5e0ea:  movslq %r11d,%rsi
    0.00 :   5e0ed:  mov    %r13,%rdi
    0.00 :   5e0f0:  call   26380 <*ABS*+0xa1b90@plt>
    0.00 :   5e0f5:  mov    %rax,%r14
    0.00 :   5e0f8:  mov    0x18(%rsp),%r15d
    0.00 :   5e0fd:  sub    %eax,%r15d
    0.00 :   5e100:  js     5f6a0 <__vfprintf_internal+0x1d90>
   48.25 :   5e106:  mov    0x20(%rsp),%ecx // libc.so.6[5e106]
    0.00 :   5e10a:  test   %ecx,%ecx
    0.00 :   5e10c:  jne    5e117 <__vfprintf_internal+0x807>
    0.00 :   5e10e:  test   %r15d,%r15d
    0.00 :   5e111:  jne    5f9ec <__vfprintf_internal+0x20dc>
    0.00 :   5e117:  mov    0xd8(%rbx),%rax
    0.00 :   5e11e:  lea    0x1718db(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5e125:  mov    0x10(%rsp),%rdi
    0.00 :   5e12a:  mov    %rax,%rdx
    0.00 :   5e12d:  sub    %rcx,%rdx
    0.00 :   5e130:  cmp    %rdi,%rdx
    0.00 :   5e133:  jae    5fba0 <__vfprintf_internal+0x2290>
    0.00 :   5e139:  mov    %r14,%rdx
    0.00 :   5e13c:  mov    %r13,%rsi
    0.00 :   5e13f:  mov    %rbx,%rdi
    0.00 :   5e142:  call   *0x38(%rax)
    0.00 :   5e145:  cmp    %rax,%r14
    0.00 :   5e148:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e14e:  mov    %r14,%rax
    0.00 :   5e151:  xor    %edx,%edx
    0.00 :   5e153:  add    %rbp,%rax
    0.00 :   5e156:  js     5fdeb <__vfprintf_internal+0x24db>
    0.00 :   5e15c:  cmp    %rbp,%rax
    0.00 :   5e15f:  jb     5fdeb <__vfprintf_internal+0x24db>
    0.00 :   5e165:  movslq %eax,%r13
    0.00 :   5e168:  mov    $0x1,%ecx
    0.00 :   5e16d:  mov    %eax,%ebp
    0.00 :   5e16f:  cmp    %r13,%rax
    0.00 :   5e172:  cmovne %ecx,%edx
    0.00 :   5e175:  test   %edx,%edx
    0.00 :   5e177:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e17d:  test   %eax,%eax
    0.00 :   5e17f:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5e185:  test   %r15d,%r15d
    0.00 :   5e188:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e18e:  testb  $0x1,0x20(%rsp)
    0.00 :   5e193:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e199:  mov    %r15d,%r15d
    0.00 :   5e19c:  mov    $0x20,%esi
    0.00 :   5e1a1:  mov    %rbx,%rdi
    0.00 :   5e1a4:  mov    %r15,%rdx
    0.00 :   5e1a7:  call   78be0 <_IO_padn>
    0.00 :   5e1ac:  cmp    %rax,%r15
    0.00 :   5e1af:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e1b5:  lea    (%r15,%r13,1),%rax
    0.00 :   5e1b9:  movslq %eax,%rdx
    0.00 :   5e1bc:  mov    %eax,%ebp
    0.00 :   5e1be:  cmp    %rdx,%rax
    0.00 :   5e1c1:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e1c7:  test   %eax,%eax
    0.00 :   5e1c9:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e1cf:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e1d4:  nopl   0x0(%rax)
    0.00 :   5e1d8:  endbr64
    0.00 :   5e1dc:  mov    (%r12),%eax
    0.00 :   5e1e0:  cmp    $0x2f,%eax
    0.00 :   5e1e3:  ja     5f468 <__vfprintf_internal+0x1b58>
    0.00 :   5e1e9:  mov    %eax,%edx
    0.00 :   5e1eb:  add    $0x8,%eax
    0.00 :   5e1ee:  add    0x10(%r12),%rdx
    0.00 :   5e1f3:  mov    %eax,(%r12)
    0.00 :   5e1f7:  mov    (%rdx),%r13
    0.00 :   5e1fa:  test   %r13,%r13
    0.00 :   5e1fd:  jne    5fc22 <__vfprintf_internal+0x2312>
    0.00 :   5e203:  cmp    $0xffffffff,%r11d
    0.00 :   5e207:  je     5f880 <__vfprintf_internal+0x1f70>
    0.00 :   5e20d:  cmp    $0x5,%r11d
    0.00 :   5e211:  jg     5f880 <__vfprintf_internal+0x1f70>
    0.00 :   5e217:  xor    %eax,%eax
    0.00 :   5e219:  xor    %r14d,%r14d
    0.00 :   5e21c:  lea    0x143105(%rip),%r13        # 1a1328 <default_rwlockattr+0x338>
    0.00 :   5e223:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5e228:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e230:  endbr64
    0.00 :   5e234:  testb  $0x2,0x3c(%rsp)
    0.00 :   5e239:  je     5e278 <__vfprintf_internal+0x968>
    0.00 :   5e23b:  mov    0x7c(%rsp),%r15d
    0.00 :   5e240:  test   %r15d,%r15d
    0.00 :   5e243:  jne    5e278 <__vfprintf_internal+0x968>
    0.00 :   5e245:  mov    (%rsp),%r15
    0.00 :   5e249:  mov    %r15,%rdi
    0.00 :   5e24c:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   5e251:  mov    %r15,%rdi
    0.00 :   5e254:  lea    0x1(%rax),%rsi
    0.00 :   5e258:  call   11a410 <__readonly_area>
    0.00 :   5e25d:  mov    %eax,0x7c(%rsp)
    0.00 :   5e261:  test   %eax,%eax
    0.00 :   5e263:  jns    5e278 <__vfprintf_internal+0x968>
    0.00 :   5e265:  lea    0x13de74(%rip),%rdi        # 19c0e0 <aliasfile.0+0x698>
    0.00 :   5e26c:  call   810e0 <__libc_fatal>
    0.00 :   5e271:  nopl   0x0(%rax)
    0.00 :   5e278:  mov    (%r12),%eax
    0.00 :   5e27c:  cmp    $0x2f,%eax
    0.00 :   5e27f:  jbe    5f4e8 <__vfprintf_internal+0x1bd8>
    0.00 :   5e285:  mov    0x8(%r12),%rdx
    0.00 :   5e28a:  lea    0x8(%rdx),%rax
    0.00 :   5e28e:  mov    %rax,0x8(%r12)
    0.00 :   5e293:  mov    0x8(%rsp),%r11d
    0.00 :   5e298:  mov    (%rdx),%rax
    0.00 :   5e29b:  test   %r11d,%r11d
    0.00 :   5e29e:  je     5f628 <__vfprintf_internal+0x1d18>
    0.00 :   5e2a4:  movslq %ebp,%rdx
    0.00 :   5e2a7:  mov    %rdx,(%rax)
    0.00 :   5e2aa:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e2af:  nop
    0.00 :   5e2b0:  endbr64
    0.00 :   5e2b4:  mov    (%r12),%eax
    0.00 :   5e2b8:  cmp    $0x2f,%eax
    0.00 :   5e2bb:  ja     5f4d0 <__vfprintf_internal+0x1bc0>
    0.00 :   5e2c1:  mov    %eax,%edx
    0.00 :   5e2c3:  add    $0x8,%eax
    0.00 :   5e2c6:  add    0x10(%r12),%rdx
    0.00 :   5e2cb:  mov    %eax,(%r12)
    0.00 :   5e2cf:  mov    (%rdx),%rax
    0.00 :   5e2d2:  test   %rax,%rax
    0.00 :   5e2d5:  je     5f639 <__vfprintf_internal+0x1d29>
    0.00 :   5e2db:  movl   $0x0,0x8(%rsp)
    0.00 :   5e2e3:  mov    %rax,%r14
    0.00 :   5e2e6:  xor    %r15d,%r15d
    0.00 :   5e2e9:  mov    $0x78,%r9d
    0.00 :   5e2ef:  movl   $0x1,0x48(%rsp)
    0.00 :   5e2f7:  movl   $0x10,0x28(%rsp)
    0.00 :   5e2ff:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5e301:  nopl   0x0(%rax)
    0.00 :   5e308:  endbr64
    0.00 :   5e30c:  movl   $0x2,0x28(%rsp)
    0.00 :   5e314:  mov    0x8(%rsp),%edx
    0.00 :   5e318:  mov    (%r12),%eax
    0.00 :   5e31c:  test   %edx,%edx
    0.00 :   5e31e:  je     5ef28 <__vfprintf_internal+0x1618>
    0.00 :   5e324:  cmp    $0x2f,%eax
    0.00 :   5e327:  ja     5f140 <__vfprintf_internal+0x1830>
    0.00 :   5e32d:  mov    %eax,%edx
    0.00 :   5e32f:  add    $0x8,%eax
    0.00 :   5e332:  add    0x10(%r12),%rdx
    0.00 :   5e337:  mov    %eax,(%r12)
    0.00 :   5e33b:  movl   $0x0,0x30(%rsp)
    0.00 :   5e343:  mov    (%rdx),%r14
    0.00 :   5e346:  movl   $0x0,0x38(%rsp)
    0.00 :   5e34e:  movl   $0x0,0x8(%rsp)
    0.00 :   5e356:  test   %r11d,%r11d
    0.00 :   5e359:  js     5ef68 <__vfprintf_internal+0x1658>
    0.00 :   5e35f:  je     5ee60 <__vfprintf_internal+0x1550>
    0.00 :   5e365:  movslq %r11d,%rax
    0.00 :   5e368:  movb   $0x20,0x34(%rsp)
    0.00 :   5e36d:  mov    %rax,0x58(%rsp)
    0.00 :   5e372:  cmp    $0x58,%r9b
    0.00 :   5e376:  mov    0x28(%rsp),%edx
    0.00 :   5e37a:  mov    %r14,%rdi
    0.00 :   5e37d:  mov    %r9b,0x7b(%rsp)
    0.00 :   5e382:  sete   %cl
    0.00 :   5e385:  lea    0x4f8(%rsp),%r13
    0.00 :   5e38d:  lea    0x110(%rsp),%rax
    0.00 :   5e395:  movzbl %cl,%ecx
    0.00 :   5e398:  mov    %r13,%rsi
    0.00 :   5e39b:  mov    %rax,0x70(%rsp)
    0.00 :   5e3a0:  call   52c40 <_itoa_word>
    0.00 :   5e3a5:  mov    0x60(%rsp),%rcx
    0.00 :   5e3aa:  movzbl 0x7b(%rsp),%r9d
    0.00 :   5e3b0:  mov    %rax,%r10
    0.00 :   5e3b3:  test   %rcx,%rcx
    0.00 :   5e3b6:  je     5e3db <__vfprintf_internal+0xacb>
    0.00 :   5e3b8:  test   %r15d,%r15d
    0.00 :   5e3bb:  je     5e3db <__vfprintf_internal+0xacb>
    0.00 :   5e3bd:  mov    0x68(%rsp),%r8
    0.00 :   5e3c2:  mov    0x70(%rsp),%rdi
    0.00 :   5e3c7:  mov    %r13,%rdx
    0.00 :   5e3ca:  mov    %rax,%rsi
    0.00 :   5e3cd:  call   5aae0 <group_number>
    0.00 :   5e3d2:  movzbl 0x7b(%rsp),%r9d
    0.00 :   5e3d8:  mov    %rax,%r10
    0.00 :   5e3db:  test   %r14,%r14
    0.00 :   5e3de:  setne  %cl
    0.00 :   5e3e1:  cmpl   $0xa,0x28(%rsp)
    0.00 :   5e3e6:  jne    5eca8 <__vfprintf_internal+0x1398>
    0.00 :   5e3ec:  mov    0x50(%rsp),%r8d
    0.00 :   5e3f1:  test   %r8d,%r8d
    0.00 :   5e3f4:  je     5eca8 <__vfprintf_internal+0x1398>
    0.00 :   5e3fa:  mov    %r10,%rdi
    0.00 :   5e3fd:  mov    %r13,%rdx
    0.00 :   5e400:  mov    %r13,%rsi
    0.00 :   5e403:  mov    %cl,0x7b(%rsp)
    0.00 :   5e407:  mov    %r9b,0x50(%rsp)
    0.00 :   5e40c:  mov    %r13,%r15
    0.00 :   5e40f:  call   5ad20 <_i18n_number_rewrite>
    0.00 :   5e414:  movzbl 0x50(%rsp),%r9d
    0.00 :   5e41a:  movzbl 0x7b(%rsp),%ecx
    0.00 :   5e41f:  mov    %rax,%r10
    0.00 :   5e422:  sub    %rax,%r15
    0.00 :   5e425:  mov    0x58(%rsp),%r13
    0.00 :   5e42a:  mov    $0x0,%eax
    0.00 :   5e42f:  mov    0x20(%rsp),%esi
    0.00 :   5e433:  sub    %r15,%r13
    0.00 :   5e436:  cmovs  %rax,%r13
    0.00 :   5e43a:  mov    %r13d,%r11d
    0.00 :   5e43d:  test   %esi,%esi
    0.00 :   5e43f:  jne    5ecf8 <__vfprintf_internal+0x13e8>
    0.00 :   5e445:  mov    0x18(%rsp),%r14d
    0.00 :   5e44a:  sub    %r15d,%r14d
    0.00 :   5e44d:  sub    %r13d,%r14d
    0.00 :   5e450:  movzbl 0x48(%rsp),%r13d
    0.00 :   5e456:  and    %cl,%r13b
    0.00 :   5e459:  jne    5f200 <__vfprintf_internal+0x18f0>
    0.00 :   5e45f:  mov    0x8(%rsp),%eax
    0.00 :   5e463:  mov    0x38(%rsp),%ecx
    0.00 :   5e467:  or     %ecx,%eax
    0.00 :   5e469:  or     0x30(%rsp),%eax
    0.00 :   5e46d:  jne    5efc8 <__vfprintf_internal+0x16b8>
    0.00 :   5e473:  cmpb   $0x20,0x34(%rsp)
    0.00 :   5e478:  je     5f52e <__vfprintf_internal+0x1c1e>
    0.00 :   5e47e:  test   %r13b,%r13b
    0.00 :   5e481:  jne    5f158 <__vfprintf_internal+0x1848>
    0.00 :   5e487:  add    %r11d,%r14d
    0.00 :   5e48a:  test   %r14d,%r14d
    0.00 :   5e48d:  jg     5f010 <__vfprintf_internal+0x1700>
    0.00 :   5e493:  mov    0xd8(%rbx),%r13
    0.00 :   5e49a:  lea    0x17155f(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5e4a1:  mov    0x10(%rsp),%rdi
    0.00 :   5e4a6:  mov    %r13,%rax
    0.00 :   5e4a9:  sub    %rsi,%rax
    0.00 :   5e4ac:  cmp    %rdi,%rax
    0.00 :   5e4af:  jae    5f8d9 <__vfprintf_internal+0x1fc9>
    0.00 :   5e4b5:  mov    %r15,%rdx
    0.00 :   5e4b8:  mov    %r10,%rsi
    0.00 :   5e4bb:  mov    %rbx,%rdi
    0.00 :   5e4be:  call   *0x38(%r13)
    0.00 :   5e4c2:  cmp    %rax,%r15
    0.00 :   5e4c5:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e4cb:  movslq %ebp,%rbp
    0.00 :   5e4ce:  xor    %eax,%eax
    0.00 :   5e4d0:  add    %rbp,%r15
    0.00 :   5e4d3:  js     5fdc3 <__vfprintf_internal+0x24b3>
    0.00 :   5e4d9:  cmp    %rbp,%r15
    0.00 :   5e4dc:  jb     5fdc3 <__vfprintf_internal+0x24b3>
    0.00 :   5e4e2:  movslq %r15d,%rdx
    0.00 :   5e4e5:  mov    %r15d,%ebp
    0.00 :   5e4e8:  cmp    %rdx,%r15
    0.00 :   5e4eb:  mov    $0x1,%edx
    0.00 :   5e4f0:  cmovne %edx,%eax
    0.00 :   5e4f3:  test   %eax,%eax
    0.00 :   5e4f5:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e4fb:  test   %r15d,%r15d
    0.00 :   5e4fe:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e504:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e509:  nopl   0x0(%rax)
    0.00 :   5e510:  endbr64
    0.00 :   5e514:  movl   $0x10,0x28(%rsp)
    0.00 :   5e51c:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e521:  nopl   0x0(%rax)
    0.00 :   5e528:  endbr64
    0.00 :   5e52c:  movl   $0x8,0x28(%rsp)
    0.00 :   5e534:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e539:  nopl   0x0(%rax)
    0.00 :   5e540:  endbr64
    0.00 :   5e544:  movl   $0xa,0x28(%rsp)
    0.00 :   5e54c:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e551:  nopl   0x0(%rax)
    0.00 :   5e558:  endbr64
    0.00 :   5e55c:  mov    0x8(%rsp),%ecx
    0.00 :   5e560:  mov    (%r12),%eax
    0.00 :   5e564:  test   %ecx,%ecx
    0.00 :   5e566:  jne    5f420 <__vfprintf_internal+0x1b10>
    0.00 :   5e56c:  test   %r14d,%r14d
    0.00 :   5e56f:  je     5f9c4 <__vfprintf_internal+0x20b4>
    0.00 :   5e575:  cmp    $0x2f,%eax
    0.00 :   5e578:  ja     5fb44 <__vfprintf_internal+0x2234>
    0.00 :   5e57e:  mov    %eax,%edx
    0.00 :   5e580:  add    $0x8,%eax
    0.00 :   5e583:  add    0x10(%r12),%rdx
    0.00 :   5e588:  mov    %eax,(%r12)
    0.00 :   5e58c:  movsbq (%rdx),%rax
    0.00 :   5e590:  test   %rax,%rax
    0.00 :   5e593:  js     5f680 <__vfprintf_internal+0x1d70>
    0.00 :   5e599:  movl   $0x0,0x8(%rsp)
    0.00 :   5e5a1:  mov    %rax,%r14
    0.00 :   5e5a4:  movl   $0xa,0x28(%rsp)
    0.00 :   5e5ac:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5e5b1:  nopl   0x0(%rax)
    0.00 :   5e5b8:  endbr64
    0.00 :   5e5bc:  mov    0x28(%rbx),%rax
    0.00 :   5e5c0:  cmp    0x30(%rbx),%rax
    0.00 :   5e5c4:  jae    5fbcc <__vfprintf_internal+0x22bc>
    0.00 :   5e5ca:  lea    0x1(%rax),%rdx
    0.00 :   5e5ce:  mov    %rdx,0x28(%rbx)
    0.00 :   5e5d2:  movb   $0x25,(%rax)
    0.00 :   5e5d5:  cmp    $0x7fffffff,%ebp
    0.00 :   5e5db:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5e5e1:  add    $0x1,%ebp
    0.00 :   5e5e4:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e5e9:  nopl   0x0(%rax)
    0.00 :   5e5f0:  endbr64
    0.00 :   5e5f4:  lea    0x80(%rsp),%rdi
    0.00 :   5e5fc:  call   5aa60 <read_int>
    0.00 :   5e601:  mov    %eax,0x18(%rsp)
    0.00 :   5e605:  cmp    $0xffffffff,%eax
    0.00 :   5e608:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5e60e:  mov    0x80(%rsp),%rax
    0.00 :   5e616:  movzbl (%rax),%r9d
    0.00 :   5e61a:  cmp    $0x24,%r9b
    0.00 :   5e61e:  je     5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5e624:  lea    -0x20(%r9),%eax
    0.00 :   5e628:  cmp    $0x5a,%al
    0.00 :   5e62a:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e630:  movzbl %r9b,%eax
    0.00 :   5e634:  lea    0x131b65(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e63b:  lea    -0xb6d(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e642:  sub    $0x20,%eax
    0.00 :   5e645:  cltq
    0.00 :   5e647:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5e64b:  lea    0x131a4e(%rip),%rax        # 1900a0 <step1_jumps.8>
    0.00 :   5e652:  movslq (%rax,%rdx,4),%rax
    0.00 :   5e656:  add    %rcx,%rax
    0.00 :   5e659:  jmp    *%rax
    0.00 :   5e65b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e660:  endbr64
    0.00 :   5e664:  mov    0x80(%rsp),%rcx
    0.00 :   5e66c:  lea    0x1(%rcx),%rax
    0.00 :   5e670:  mov    %rax,0x80(%rsp)
    0.00 :   5e678:  mov    %rax,0xa0(%rsp)
    0.00 :   5e680:  movzbl 0x1(%rcx),%eax
    0.00 :   5e684:  sub    $0x30,%eax
    0.00 :   5e687:  cmp    $0x9,%eax
    0.00 :   5e68a:  jbe    5f7e0 <__vfprintf_internal+0x1ed0>
    0.00 :   5e690:  mov    (%r12),%eax
    0.00 :   5e694:  cmp    $0x2f,%eax
    0.00 :   5e697:  ja     5f500 <__vfprintf_internal+0x1bf0>
    0.00 :   5e69d:  mov    %eax,%edx
    0.00 :   5e69f:  add    $0x8,%eax
    0.00 :   5e6a2:  add    0x10(%r12),%rdx
    0.00 :   5e6a7:  mov    %eax,(%r12)
    0.00 :   5e6ab:  mov    (%rdx),%eax
    0.00 :   5e6ad:  mov    %eax,0x18(%rsp)
    0.00 :   5e6b1:  test   %eax,%eax
    0.00 :   5e6b3:  jns    5e6c8 <__vfprintf_internal+0xdb8>
    0.00 :   5e6b5:  neg    %eax
    0.00 :   5e6b7:  movb   $0x20,0x34(%rsp)
    0.00 :   5e6bc:  mov    %eax,0x18(%rsp)
    0.00 :   5e6c0:  movl   $0x1,0x20(%rsp)
    0.00 :   5e6c8:  movzbl 0x1(%rcx),%r9d
    0.00 :   5e6cd:  lea    -0x20(%r9),%eax
    0.00 :   5e6d1:  cmp    $0x5a,%al
    0.00 :   5e6d3:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e6d9:  jmp    5e630 <__vfprintf_internal+0xd20>
    0.00 :   5e6de:  xchg   %ax,%ax
    0.00 :   5e6e0:  endbr64
    0.00 :   5e6e4:  mov    0x80(%rsp),%rax
    0.00 :   5e6ec:  movzbl 0x1(%rax),%r9d
    0.00 :   5e6f1:  lea    0x1(%rax),%rdx
    0.00 :   5e6f5:  lea    -0xc27(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e6fc:  mov    %rdx,0x80(%rsp)
    0.00 :   5e704:  lea    -0x20(%r9),%edx
    0.00 :   5e708:  cmp    $0x5a,%dl
    0.00 :   5e70b:  ja     5f410 <__vfprintf_internal+0x1b00>
    0.00 :   5e711:  movzbl %r9b,%eax
    0.00 :   5e715:  lea    0x131a84(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e71c:  lea    0x1319fd(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e723:  movl   $0x1,0x50(%rsp)
    0.00 :   5e72b:  sub    $0x20,%eax
    0.00 :   5e72e:  lea    -0xc60(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e735:  cltq
    0.00 :   5e737:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e73b:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e73f:  add    %rsi,%rax
    0.00 :   5e742:  jmp    *%rax
    0.00 :   5e744:  nopl   0x0(%rax)
    0.00 :   5e748:  endbr64
    0.00 :   5e74c:  cmpq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5e752:  je     5f83e <__vfprintf_internal+0x1f2e>
    0.00 :   5e758:  mov    0x80(%rsp),%rax
    0.00 :   5e760:  movzbl 0x1(%rax),%r9d
    0.00 :   5e765:  lea    0x1(%rax),%rdx
    0.00 :   5e769:  lea    -0xc9b(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e770:  mov    %rdx,0x80(%rsp)
    0.00 :   5e778:  lea    -0x20(%r9),%edx
    0.00 :   5e77c:  cmp    $0x5a,%dl
    0.00 :   5e77f:  ja     5f400 <__vfprintf_internal+0x1af0>
    0.00 :   5e785:  movzbl %r9b,%eax
    0.00 :   5e789:  lea    0x131a10(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e790:  lea    0x131989(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e797:  mov    $0x1,%r15d
    0.00 :   5e79d:  sub    $0x20,%eax
    0.00 :   5e7a0:  lea    -0xcd2(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e7a7:  cltq
    0.00 :   5e7a9:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e7ad:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e7b1:  add    %rsi,%rax
    0.00 :   5e7b4:  jmp    *%rax
    0.00 :   5e7b6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5e7c0:  endbr64
    0.00 :   5e7c4:  mov    0x20(%rsp),%esi
    0.00 :   5e7c8:  movzbl 0x34(%rsp),%edi
    0.00 :   5e7cd:  mov    $0x30,%eax
    0.00 :   5e7d2:  test   %esi,%esi
    0.00 :   5e7d4:  cmove  %eax,%edi
    0.00 :   5e7d7:  mov    0x80(%rsp),%rax
    0.00 :   5e7df:  movzbl 0x1(%rax),%r9d
    0.00 :   5e7e4:  lea    0x1(%rax),%rdx
    0.00 :   5e7e8:  mov    %dil,0x34(%rsp)
    0.00 :   5e7ed:  mov    %rdx,0x80(%rsp)
    0.00 :   5e7f5:  lea    -0x20(%r9),%eax
    0.00 :   5e7f9:  cmp    $0x5a,%al
    0.00 :   5e7fb:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e801:  movzbl %r9b,%eax
    0.00 :   5e805:  lea    0x131994(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e80c:  lea    0x13190d(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e813:  sub    $0x20,%eax
    0.00 :   5e816:  lea    -0xd48(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e81d:  cltq
    0.00 :   5e81f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e823:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e827:  add    %rsi,%rax
    0.00 :   5e82a:  jmp    *%rax
    0.00 :   5e82c:  nopl   0x0(%rax)
    0.00 :   5e830:  endbr64
    0.00 :   5e834:  mov    0x80(%rsp),%rax
    0.00 :   5e83c:  movzbl 0x1(%rax),%r9d
    0.00 :   5e841:  lea    0x1(%rax),%rdx
    0.00 :   5e845:  lea    -0xd77(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e84c:  mov    %rdx,0x80(%rsp)
    0.00 :   5e854:  lea    -0x20(%r9),%edx
    0.00 :   5e858:  cmp    $0x5a,%dl
    0.00 :   5e85b:  ja     5f3f0 <__vfprintf_internal+0x1ae0>
    0.00 :   5e861:  movzbl %r9b,%eax
    0.00 :   5e865:  lea    0x131934(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e86c:  lea    0x1318ad(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e873:  movl   $0x1,0x48(%rsp)
    0.00 :   5e87b:  sub    $0x20,%eax
    0.00 :   5e87e:  lea    -0xdb0(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e885:  cltq
    0.00 :   5e887:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e88b:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e88f:  add    %rsi,%rax
    0.00 :   5e892:  jmp    *%rax
    0.00 :   5e894:  nopl   0x0(%rax)
    0.00 :   5e898:  endbr64
    0.00 :   5e89c:  mov    0x80(%rsp),%rax
    0.00 :   5e8a4:  movzbl 0x1(%rax),%r9d
    0.00 :   5e8a9:  lea    0x1(%rax),%rdx
    0.00 :   5e8ad:  lea    -0xddf(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e8b4:  mov    %rdx,0x80(%rsp)
    0.00 :   5e8bc:  lea    -0x20(%r9),%edx
    0.00 :   5e8c0:  cmp    $0x5a,%dl
    0.00 :   5e8c3:  ja     5f3e0 <__vfprintf_internal+0x1ad0>
    0.00 :   5e8c9:  movzbl %r9b,%eax
    0.00 :   5e8cd:  lea    0x1318cc(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e8d4:  lea    0x131845(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e8db:  movb   $0x20,0x34(%rsp)
    0.00 :   5e8e0:  sub    $0x20,%eax
    0.00 :   5e8e3:  lea    -0xe15(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e8ea:  movl   $0x1,0x20(%rsp)
    0.00 :   5e8f2:  cltq
    0.00 :   5e8f4:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e8f8:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e8fc:  add    %rsi,%rax
    0.00 :   5e8ff:  jmp    *%rax
    0.00 :   5e901:  nopl   0x0(%rax)
    0.00 :   5e908:  endbr64
    0.00 :   5e90c:  mov    0x80(%rsp),%rax
    0.00 :   5e914:  movzbl 0x1(%rax),%r9d
    0.00 :   5e919:  lea    0x1(%rax),%rdx
    0.00 :   5e91d:  lea    -0xe4f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e924:  mov    %rdx,0x80(%rsp)
    0.00 :   5e92c:  lea    -0x20(%r9),%edx
    0.00 :   5e930:  cmp    $0x5a,%dl
    0.00 :   5e933:  ja     5f3d0 <__vfprintf_internal+0x1ac0>
    0.00 :   5e939:  movzbl %r9b,%eax
    0.00 :   5e93d:  lea    0x13185c(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e944:  lea    0x1317d5(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e94b:  movl   $0x1,0x30(%rsp)
    0.00 :   5e953:  sub    $0x20,%eax
    0.00 :   5e956:  lea    -0xe88(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e95d:  cltq
    0.00 :   5e95f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e963:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e967:  add    %rsi,%rax
    0.00 :   5e96a:  jmp    *%rax
    0.00 :   5e96c:  nopl   0x0(%rax)
    0.00 :   5e970:  endbr64
    0.00 :   5e974:  mov    0x80(%rsp),%rax
    0.00 :   5e97c:  movzbl 0x1(%rax),%r9d
    0.00 :   5e981:  lea    0x1(%rax),%rdx
    0.00 :   5e985:  lea    -0xeb7(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e98c:  mov    %rdx,0x80(%rsp)
    0.00 :   5e994:  lea    -0x20(%r9),%edx
    0.00 :   5e998:  cmp    $0x5a,%dl
    0.00 :   5e99b:  ja     5ea09 <__vfprintf_internal+0x10f9>
    0.00 :   5e99d:  movzbl %r9b,%eax
    0.00 :   5e9a1:  lea    0x1317f8(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5e9a8:  xor    %r10d,%r10d
    0.00 :   5e9ab:  movl   $0x1,0x8(%rsp)
    0.00 :   5e9b3:  sub    $0x20,%eax
    0.00 :   5e9b6:  lea    -0xee8(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e9bd:  cltq
    0.00 :   5e9bf:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5e9c3:  lea    0x131556(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5e9ca:  movslq (%rax,%rdx,4),%rax
    0.00 :   5e9ce:  add    %rsi,%rax
    0.00 :   5e9d1:  jmp    *%rax
    0.00 :   5e9d3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e9d8:  endbr64
    0.00 :   5e9dc:  mov    0x80(%rsp),%rax
    0.00 :   5e9e4:  movzbl 0x1(%rax),%r9d
    0.00 :   5e9e9:  lea    0x1(%rax),%rdx
    0.00 :   5e9ed:  lea    -0xf1f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e9f4:  mov    %rdx,0x80(%rsp)
    0.00 :   5e9fc:  lea    -0x20(%r9),%edx
    0.00 :   5ea00:  cmp    $0x5a,%dl
    0.00 :   5ea03:  jbe    5f390 <__vfprintf_internal+0x1a80>
    0.00 :   5ea09:  movl   $0x1,0x8(%rsp)
    0.00 :   5ea11:  xor    %r10d,%r10d
    0.00 :   5ea14:  jmp    *%rax
    0.00 :   5ea16:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5ea20:  endbr64
    0.00 :   5ea24:  mov    0x80(%rsp),%rax
    0.00 :   5ea2c:  movzbl 0x1(%rax),%r9d
    0.00 :   5ea31:  lea    0x1(%rax),%rdx
    0.00 :   5ea35:  lea    -0xf67(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ea3c:  mov    %rdx,0x80(%rsp)
    0.00 :   5ea44:  lea    -0x20(%r9),%edx
    0.00 :   5ea48:  cmp    $0x5a,%dl
    0.00 :   5ea4b:  ja     5ea09 <__vfprintf_internal+0x10f9>
    0.00 :   5ea4d:  movzbl %r9b,%eax
    0.00 :   5ea51:  lea    0x131748(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5ea58:  xor    %r10d,%r10d
    0.00 :   5ea5b:  movl   $0x1,0x8(%rsp)
    0.00 :   5ea63:  sub    $0x20,%eax
    0.00 :   5ea66:  lea    -0xf98(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ea6d:  cltq
    0.00 :   5ea6f:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5ea73:  lea    0x1314a6(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5ea7a:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ea7e:  add    %rcx,%rax
    0.00 :   5ea81:  jmp    *%rax
    0.00 :   5ea83:  nopl   0x0(%rax,%rax,1)
    0.00 :   5ea88:  endbr64
    0.00 :   5ea8c:  mov    0x80(%rsp),%rax
    0.00 :   5ea94:  movzbl 0x1(%rax),%r9d
    0.00 :   5ea99:  lea    0x1(%rax),%rdx
    0.00 :   5ea9d:  lea    -0xfcf(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eaa4:  mov    %rdx,0x80(%rsp)
    0.00 :   5eaac:  lea    -0x20(%r9),%edx
    0.00 :   5eab0:  cmp    $0x5a,%dl
    0.00 :   5eab3:  ja     5f380 <__vfprintf_internal+0x1a70>
    0.00 :   5eab9:  movzbl %r9b,%eax
    0.00 :   5eabd:  lea    0x1316dc(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5eac4:  lea    -0xff6(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eacb:  movl   $0x1,0x8(%rsp)
    0.00 :   5ead3:  sub    $0x20,%eax
    0.00 :   5ead6:  mov    $0x1,%r10d
    0.00 :   5eadc:  cltq
    0.00 :   5eade:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5eae2:  lea    0x131437(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5eae9:  movslq (%rax,%rdx,4),%rax
    0.00 :   5eaed:  add    %rsi,%rax
    0.00 :   5eaf0:  jmp    *%rax
    0.00 :   5eaf2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5eaf8:  endbr64
    0.00 :   5eafc:  mov    0x80(%rsp),%rax
    0.00 :   5eb04:  movzbl 0x1(%rax),%r9d
    0.00 :   5eb09:  lea    0x1(%rax),%rdx
    0.00 :   5eb0d:  lea    -0x103f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb14:  mov    %rdx,0x80(%rsp)
    0.00 :   5eb1c:  lea    -0x20(%r9),%edx
    0.00 :   5eb20:  cmp    $0x5a,%dl
    0.00 :   5eb23:  ja     5f370 <__vfprintf_internal+0x1a60>
    0.00 :   5eb29:  movzbl %r9b,%eax
    0.00 :   5eb2d:  lea    0x13166c(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5eb34:  lea    -0x1066(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb3b:  movl   $0x1,0x8(%rsp)
    0.00 :   5eb43:  sub    $0x20,%eax
    0.00 :   5eb46:  cltq
    0.00 :   5eb48:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5eb4c:  lea    0x13134d(%rip),%rax        # 18fea0 <step3b_jumps.4>
    0.00 :   5eb53:  movslq (%rax,%rdx,4),%rax
    0.00 :   5eb57:  add    %rdi,%rax
    0.00 :   5eb5a:  jmp    *%rax
    0.00 :   5eb5c:  nopl   0x0(%rax)
    0.00 :   5eb60:  endbr64
    0.00 :   5eb64:  mov    0x80(%rsp),%rax
    0.00 :   5eb6c:  movzbl 0x1(%rax),%r9d
    0.00 :   5eb71:  lea    0x1(%rax),%rdx
    0.00 :   5eb75:  lea    -0x10a7(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb7c:  mov    %rdx,0x80(%rsp)
    0.00 :   5eb84:  lea    -0x20(%r9),%edx
    0.00 :   5eb88:  cmp    $0x5a,%dl
    0.00 :   5eb8b:  ja     5f360 <__vfprintf_internal+0x1a50>
    0.00 :   5eb91:  movzbl %r9b,%eax
    0.00 :   5eb95:  lea    0x131604(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5eb9c:  lea    -0x10ce(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eba3:  xor    %r13d,%r13d
    0.00 :   5eba6:  sub    $0x20,%eax
    0.00 :   5eba9:  mov    $0x1,%r14d
    0.00 :   5ebaf:  cltq
    0.00 :   5ebb1:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5ebb5:  lea    0x131364(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5ebbc:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ebc0:  add    %rcx,%rax
    0.00 :   5ebc3:  jmp    *%rax
    0.00 :   5ebc5:  nopl   (%rax)
    0.00 :   5ebc8:  endbr64
    0.00 :   5ebcc:  mov    0x80(%rsp),%rax
    0.00 :   5ebd4:  movzbl 0x1(%rax),%r9d
    0.00 :   5ebd9:  lea    0x1(%rax),%rdx
    0.00 :   5ebdd:  lea    -0x110f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ebe4:  mov    %rdx,0x80(%rsp)
    0.00 :   5ebec:  lea    -0x20(%r9),%edx
    0.00 :   5ebf0:  cmp    $0x5a,%dl
    0.00 :   5ebf3:  ja     5f358 <__vfprintf_internal+0x1a48>
    0.00 :   5ebf9:  movzbl %r9b,%eax
    0.00 :   5ebfd:  lea    0x13159c(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5ec04:  lea    -0x1136(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec0b:  mov    $0x1,%r13d
    0.00 :   5ec11:  sub    $0x20,%eax
    0.00 :   5ec14:  cltq
    0.00 :   5ec16:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5ec1a:  lea    0x13137f(%rip),%rax        # 18ffa0 <step3a_jumps.6>
    0.00 :   5ec21:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ec25:  add    %rsi,%rax
    0.00 :   5ec28:  jmp    *%rax
    0.00 :   5ec2a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ec30:  endbr64
    0.00 :   5ec34:  mov    0x80(%rsp),%rcx
    0.00 :   5ec3c:  movzbl 0x1(%rcx),%r9d
    0.00 :   5ec41:  lea    0x1(%rcx),%rax
    0.00 :   5ec45:  mov    %rax,0x80(%rsp)
    0.00 :   5ec4d:  cmp    $0x2a,%r9b
    0.00 :   5ec51:  je     5f780 <__vfprintf_internal+0x1e70>
    0.00 :   5ec57:  movzbl %r9b,%eax
    0.00 :   5ec5b:  xor    %r11d,%r11d
    0.00 :   5ec5e:  sub    $0x30,%eax
    0.00 :   5ec61:  cmp    $0x9,%eax
    0.00 :   5ec64:  jbe    5f5e0 <__vfprintf_internal+0x1cd0>
    0.00 :   5ec6a:  lea    -0x20(%r9),%eax
    0.00 :   5ec6e:  cmp    $0x5a,%al
    0.00 :   5ec70:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec76:  movzbl %r9b,%eax
    0.00 :   5ec7a:  lea    0x13151f(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5ec81:  lea    -0x11b3(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec88:  sub    $0x20,%eax
    0.00 :   5ec8b:  cltq
    0.00 :   5ec8d:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5ec91:  lea    0x131388(%rip),%rax        # 190020 <step2_jumps.7>
    0.00 :   5ec98:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ec9c:  add    %rdi,%rax
    0.00 :   5ec9f:  jmp    *%rax
    0.00 :   5eca1:  nopl   0x0(%rax)
    0.00 :   5eca8:  mov    %r13,%r15
    0.00 :   5ecab:  mov    0x58(%rsp),%rax
    0.00 :   5ecb0:  sub    %r10,%r15
    0.00 :   5ecb3:  cmp    %rax,%r15
    0.00 :   5ecb6:  jl     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecbc:  test   %cl,%cl
    0.00 :   5ecbe:  je     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecc4:  cmpl   $0x8,0x28(%rsp)
    0.00 :   5ecc9:  jne    5e425 <__vfprintf_internal+0xb15>
    0.00 :   5eccf:  mov    0x48(%rsp),%edi
    0.00 :   5ecd3:  test   %edi,%edi
    0.00 :   5ecd5:  je     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecdb:  lea    -0x1(%r10),%rax
    0.00 :   5ecdf:  mov    %r13,%r15
    0.00 :   5ece2:  movb   $0x30,-0x1(%r10)
    0.00 :   5ece7:  sub    %rax,%r15
    0.00 :   5ecea:  mov    %rax,%r10
    0.00 :   5eced:  jmp    5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecf2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ecf8:  mov    0x8(%rsp),%eax
    0.00 :   5ecfc:  test   %eax,%eax
    0.00 :   5ecfe:  je     5ef80 <__vfprintf_internal+0x1670>
    0.00 :   5ed04:  mov    0x28(%rbx),%rax
    0.00 :   5ed08:  cmp    0x30(%rbx),%rax
    0.00 :   5ed0c:  jae    5fad0 <__vfprintf_internal+0x21c0>
    0.00 :   5ed12:  lea    0x1(%rax),%rdx
    0.00 :   5ed16:  mov    %rdx,0x28(%rbx)
    0.00 :   5ed1a:  movb   $0x2d,(%rax)
    0.00 :   5ed1d:  cmp    $0x7fffffff,%ebp
    0.00 :   5ed23:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5ed29:  subl   $0x1,0x18(%rsp)
    0.00 :   5ed2e:  add    $0x1,%ebp
    0.00 :   5ed31:  test   %r14,%r14
    0.00 :   5ed34:  je     5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5ed36:  mov    0x48(%rsp),%eax
    0.00 :   5ed3a:  test   %eax,%eax
    0.00 :   5ed3c:  jne    5f250 <__vfprintf_internal+0x1940>
    0.00 :   5ed42:  mov    0x18(%rsp),%r14d
    0.00 :   5ed47:  add    %r15d,%r13d
    0.00 :   5ed4a:  sub    %r13d,%r14d
    0.00 :   5ed4d:  test   %r11d,%r11d
    0.00 :   5ed50:  jle    5eda6 <__vfprintf_internal+0x1496>
    0.00 :   5ed52:  movslq %r11d,%r13
    0.00 :   5ed55:  mov    $0x30,%esi
    0.00 :   5ed5a:  mov    %rbx,%rdi
    0.00 :   5ed5d:  mov    %r10,0x18(%rsp)
    0.00 :   5ed62:  mov    %r13,%rdx
    0.00 :   5ed65:  mov    %r11d,0x8(%rsp)
    0.00 :   5ed6a:  call   78be0 <_IO_padn>
    0.00 :   5ed6f:  cmp    %rax,%r13
    0.00 :   5ed72:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5ed78:  mov    0x8(%rsp),%r11d
    0.00 :   5ed7d:  xor    %eax,%eax
    0.00 :   5ed7f:  mov    0x18(%rsp),%r10
    0.00 :   5ed84:  add    %r11d,%ebp
    0.00 :   5ed87:  js     5fdcd <__vfprintf_internal+0x24bd>
    0.00 :   5ed8d:  cmp    %r13d,%ebp
    0.00 :   5ed90:  jb     5fdcd <__vfprintf_internal+0x24bd>
    0.00 :   5ed96:  test   %eax,%eax
    0.00 :   5ed98:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ed9e:  test   %ebp,%ebp
    0.00 :   5eda0:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5eda6:  mov    0xd8(%rbx),%r13
    0.00 :   5edad:  lea    0x170c4c(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5edb4:  mov    0x10(%rsp),%rdi
    0.00 :   5edb9:  mov    %r13,%rax
    0.00 :   5edbc:  sub    %rsi,%rax
    0.00 :   5edbf:  cmp    %rdi,%rax
    0.00 :   5edc2:  jae    5f8c5 <__vfprintf_internal+0x1fb5>
    0.00 :   5edc8:  mov    %r15,%rdx
    0.00 :   5edcb:  mov    %r10,%rsi
    0.00 :   5edce:  mov    %rbx,%rdi
    0.00 :   5edd1:  call   *0x38(%r13)
    0.00 :   5edd5:  cmp    %rax,%r15
    0.00 :   5edd8:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5edde:  movslq %ebp,%rax
    0.00 :   5ede1:  xor    %edx,%edx
    0.00 :   5ede3:  add    %r15,%rax
    0.00 :   5ede6:  js     5fdb9 <__vfprintf_internal+0x24a9>
    0.00 :   5edec:  cmp    %r15,%rax
    0.00 :   5edef:  jb     5fdb9 <__vfprintf_internal+0x24a9>
    0.00 :   5edf5:  movslq %eax,%r13
    0.00 :   5edf8:  mov    $0x1,%ecx
    0.00 :   5edfd:  mov    %eax,%ebp
    0.00 :   5edff:  cmp    %r13,%rax
    0.00 :   5ee02:  cmovne %ecx,%edx
    0.00 :   5ee05:  test   %edx,%edx
    0.00 :   5ee07:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ee0d:  test   %eax,%eax
    0.00 :   5ee0f:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5ee15:  test   %r14d,%r14d
    0.00 :   5ee18:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5ee1e:  mov    %r14,%rdx
    0.00 :   5ee21:  mov    $0x20,%esi
    0.00 :   5ee26:  mov    %rbx,%rdi
    0.00 :   5ee29:  call   78be0 <_IO_padn>
    0.00 :   5ee2e:  cmp    %rax,%r14
    0.00 :   5ee31:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5ee37:  add    %r13,%r14
    0.00 :   5ee3a:  movslq %r14d,%rax
    0.00 :   5ee3d:  mov    %r14d,%ebp
    0.00 :   5ee40:  cmp    %rax,%r14
    0.00 :   5ee43:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ee49:  test   %r14d,%r14d
    0.00 :   5ee4c:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5ee52:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5ee57:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ee60:  test   %r14,%r14
    0.00 :   5ee63:  jne    5f058 <__vfprintf_internal+0x1748>
    0.00 :   5ee69:  cmpl   $0x8,0x28(%rsp)
    0.00 :   5ee6e:  jne    5f2d8 <__vfprintf_internal+0x19c8>
    0.00 :   5ee74:  mov    0x48(%rsp),%r10d
    0.00 :   5ee79:  test   %r10d,%r10d
    0.00 :   5ee7c:  je     5f2d8 <__vfprintf_internal+0x19c8>
    0.00 :   5ee82:  movb   $0x30,0x4f7(%rsp)
    0.00 :   5ee8a:  mov    $0x1,%r15d
    0.00 :   5ee90:  lea    0x4f7(%rsp),%r10
    0.00 :   5ee98:  mov    0x20(%rsp),%eax
    0.00 :   5ee9c:  xor    %r13d,%r13d
    0.00 :   5ee9f:  test   %eax,%eax
    0.00 :   5eea1:  jne    5ecf8 <__vfprintf_internal+0x13e8>
    0.00 :   5eea7:  mov    0x8(%rsp),%eax
    0.00 :   5eeab:  mov    0x38(%rsp),%esi
    0.00 :   5eeaf:  mov    0x18(%rsp),%r14d
    0.00 :   5eeb4:  mov    0x30(%rsp),%r11d
    0.00 :   5eeb9:  or     %esi,%eax
    0.00 :   5eebb:  sub    %r15d,%r14d
    0.00 :   5eebe:  or     %eax,%r11d
    0.00 :   5eec1:  je     5f52b <__vfprintf_internal+0x1c1b>
    0.00 :   5eec7:  sub    $0x1,%r14d
    0.00 :   5eecb:  xor    %r13d,%r13d
    0.00 :   5eece:  mov    0x20(%rsp),%r11d
    0.00 :   5eed3:  test   %r14d,%r14d
    0.00 :   5eed6:  jg     5f8ed <__vfprintf_internal+0x1fdd>
    0.00 :   5eedc:  xor    %r14d,%r14d
    0.00 :   5eedf:  jmp    5efd7 <__vfprintf_internal+0x16c7>
    0.00 :   5eee4:  nopl   0x0(%rax)
    0.00 :   5eee8:  mov    0x4f8(%rsp),%rax
    0.00 :   5eef0:  sub    %fs:0x28,%rax
    0.00 :   5eef9:  jne    5fdb4 <__vfprintf_internal+0x24a4>
    0.00 :   5eeff:  mov    0x3c(%rsp),%ecx
    0.00 :   5ef03:  mov    (%rsp),%rsi
    0.00 :   5ef07:  mov    %r12,%rdx
    0.00 :   5ef0a:  mov    %rbx,%rdi
    0.00 :   5ef0d:  add    $0x508,%rsp
    0.00 :   5ef14:  pop    %rbx
    0.00 :   5ef15:  pop    %rbp
    0.00 :   5ef16:  pop    %r12
    0.00 :   5ef18:  pop    %r13
    0.00 :   5ef1a:  pop    %r14
    0.00 :   5ef1c:  pop    %r15
    0.00 :   5ef1e:  jmp    5fe10 <buffered_vfprintf>
    0.00 :   5ef23:  nopl   0x0(%rax,%rax,1)
    0.00 :   5ef28:  test   %r14d,%r14d
    0.00 :   5ef2b:  je     5f070 <__vfprintf_internal+0x1760>
    0.00 :   5ef31:  cmp    $0x2f,%eax
    0.00 :   5ef34:  ja     5f340 <__vfprintf_internal+0x1a30>
    0.00 :   5ef3a:  mov    %eax,%edx
    0.00 :   5ef3c:  add    $0x8,%eax
    0.00 :   5ef3f:  add    0x10(%r12),%rdx
    0.00 :   5ef44:  mov    %eax,(%r12)
    0.00 :   5ef48:  movl   $0x0,0x30(%rsp)
    0.00 :   5ef50:  movzbl (%rdx),%r14d
    0.00 :   5ef54:  movl   $0x0,0x38(%rsp)
    0.00 :   5ef5c:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5ef61:  nopl   0x0(%rax)
    0.00 :   5ef68:  movq   $0x1,0x58(%rsp)
    0.00 :   5ef71:  jmp    5e372 <__vfprintf_internal+0xa62>
    0.00 :   5ef76:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5ef80:  mov    0x30(%rsp),%eax
    0.00 :   5ef84:  test   %eax,%eax
    0.00 :   5ef86:  je     5f220 <__vfprintf_internal+0x1910>
    0.00 :   5ef8c:  mov    0x28(%rbx),%rax
    0.00 :   5ef90:  cmp    0x30(%rbx),%rax
    0.00 :   5ef94:  jae    5fc09 <__vfprintf_internal+0x22f9>
    0.00 :   5ef9a:  lea    0x1(%rax),%rdx
    0.00 :   5ef9e:  mov    %rdx,0x28(%rbx)
    0.00 :   5efa2:  movb   $0x2b,(%rax)
    0.00 :   5efa5:  jmp    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5efaa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5efb0:  mov    %rax,0x8(%rsp)
    0.00 :   5efb5:  call   818e0 <_IO_vtable_check>
    0.00 :   5efba:  mov    0x8(%rsp),%rax
    0.00 :   5efbf:  jmp    5def1 <__vfprintf_internal+0x5e1>
    0.00 :   5efc4:  nopl   0x0(%rax)
    0.00 :   5efc8:  sub    $0x1,%r14d
    0.00 :   5efcc:  cmpb   $0x20,0x34(%rsp)
    0.00 :   5efd1:  je     5fda0 <__vfprintf_internal+0x2490>
    0.00 :   5efd7:  mov    0x8(%rsp),%ecx
    0.00 :   5efdb:  test   %ecx,%ecx
    0.00 :   5efdd:  je     5f1c0 <__vfprintf_internal+0x18b0>
    0.00 :   5efe3:  mov    0x28(%rbx),%rax
    0.00 :   5efe7:  cmp    0x30(%rbx),%rax
    0.00 :   5efeb:  jae    5fa91 <__vfprintf_internal+0x2181>
    0.00 :   5eff1:  lea    0x1(%rax),%rdx
    0.00 :   5eff5:  mov    %rdx,0x28(%rbx)
    0.00 :   5eff9:  movb   $0x2d,(%rax)
    0.00 :   5effc:  cmp    $0x7fffffff,%ebp
    0.00 :   5f002:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f008:  add    $0x1,%ebp
    0.00 :   5f00b:  jmp    5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f010:  movslq %r14d,%r13
    0.00 :   5f013:  mov    $0x30,%esi
    0.00 :   5f018:  mov    %rbx,%rdi
    0.00 :   5f01b:  mov    %r10,0x8(%rsp)
    0.00 :   5f020:  mov    %r13,%rdx
    0.00 :   5f023:  call   78be0 <_IO_padn>
    0.00 :   5f028:  cmp    %rax,%r13
    0.00 :   5f02b:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f031:  add    %r14d,%ebp
    0.00 :   5f034:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f03a:  cmp    %r14d,%ebp
    0.00 :   5f03d:  jb     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f043:  test   %ebp,%ebp
    0.00 :   5f045:  mov    0x8(%rsp),%r10
    0.00 :   5f04a:  jns    5e493 <__vfprintf_internal+0xb83>
    0.00 :   5f050:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f055:  nopl   (%rax)
    0.00 :   5f058:  movq   $0x0,0x58(%rsp)
    0.00 :   5f061:  movb   $0x20,0x34(%rsp)
    0.00 :   5f066:  jmp    5e372 <__vfprintf_internal+0xa62>
    0.00 :   5f06b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f070:  test   %r13d,%r13d
    0.00 :   5f073:  jne    5f308 <__vfprintf_internal+0x19f8>
    0.00 :   5f079:  cmp    $0x2f,%eax
    0.00 :   5f07c:  ja     5f960 <__vfprintf_internal+0x2050>
    0.00 :   5f082:  mov    %eax,%edx
    0.00 :   5f084:  add    $0x8,%eax
    0.00 :   5f087:  add    0x10(%r12),%rdx
    0.00 :   5f08c:  mov    %eax,(%r12)
    0.00 :   5f090:  movl   $0x0,0x30(%rsp)
    0.00 :   5f098:  mov    (%rdx),%r14d
    0.00 :   5f09b:  movl   $0x0,0x38(%rsp)
    0.00 :   5f0a3:  movl   $0x0,0x8(%rsp)
    0.00 :   5f0ab:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f0b0:  mov    0x4(%r12),%eax
    0.00 :   5f0b5:  cmp    $0xaf,%eax
    0.00 :   5f0ba:  ja     5f2f0 <__vfprintf_internal+0x19e0>
    0.00 :   5f0c0:  mov    %eax,%edx
    0.00 :   5f0c2:  add    $0x10,%eax
    0.00 :   5f0c5:  add    0x10(%r12),%rdx
    0.00 :   5f0ca:  mov    %eax,0x4(%r12)
    0.00 :   5f0cf:  movsd  (%rdx),%xmm0
    0.00 :   5f0d3:  movsd  %xmm0,0x90(%rsp)
    0.00 :   5f0dc:  lea    0x90(%rsp),%rax
    0.00 :   5f0e4:  and    $0xffffffdf,%r9d
    0.00 :   5f0e8:  mov    %rbx,%rdi
    0.00 :   5f0eb:  mov    %rax,0x88(%rsp)
    0.00 :   5f0f3:  lea    0x88(%rsp),%rdx
    0.00 :   5f0fb:  lea    0xa0(%rsp),%rsi
    0.00 :   5f103:  cmp    $0x41,%r9d
    0.00 :   5f107:  jne    5f618 <__vfprintf_internal+0x1d08>
    0.00 :   5f10d:  call   56bb0 <__printf_fphex>
    0.00 :   5f112:  test   %eax,%eax
    0.00 :   5f114:  js     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f11a:  add    %eax,%ebp
    0.00 :   5f11c:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f122:  cmp    %eax,%ebp
    0.00 :   5f124:  jb     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f12a:  test   %ebp,%ebp
    0.00 :   5f12c:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f132:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f137:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f140:  mov    0x8(%r12),%rdx
    0.00 :   5f145:  lea    0x8(%rdx),%rax
    0.00 :   5f149:  mov    %rax,0x8(%r12)
    0.00 :   5f14e:  jmp    5e33b <__vfprintf_internal+0xa2b>
    0.00 :   5f153:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f158:  mov    0x28(%rsp),%ecx
    0.00 :   5f15c:  mov    $0x10004,%eax
    0.00 :   5f161:  bt     %rcx,%rax
    0.00 :   5f165:  jae    5e487 <__vfprintf_internal+0xb77>
    0.00 :   5f16b:  mov    0x28(%rbx),%rax
    0.00 :   5f16f:  cmp    0x30(%rbx),%rax
    0.00 :   5f173:  jae    5fca0 <__vfprintf_internal+0x2390>
    0.00 :   5f179:  lea    0x1(%rax),%rdx
    0.00 :   5f17d:  mov    %rdx,0x28(%rbx)
    0.00 :   5f181:  movb   $0x30,(%rax)
    0.00 :   5f184:  cmp    $0x7fffffff,%ebp
    0.00 :   5f18a:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f190:  mov    0x28(%rbx),%rax
    0.00 :   5f194:  cmp    0x30(%rbx),%rax
    0.00 :   5f198:  jae    5fc70 <__vfprintf_internal+0x2360>
    0.00 :   5f19e:  lea    0x1(%rax),%rdx
    0.00 :   5f1a2:  mov    %rdx,0x28(%rbx)
    0.00 :   5f1a6:  mov    %r9b,(%rax)
    0.00 :   5f1a9:  cmp    $0x7ffffffe,%ebp
    0.00 :   5f1af:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f1b5:  add    $0x2,%ebp
    0.00 :   5f1b8:  jmp    5e487 <__vfprintf_internal+0xb77>
    0.00 :   5f1bd:  nopl   (%rax)
    0.00 :   5f1c0:  mov    0x30(%rsp),%edx
    0.00 :   5f1c4:  test   %edx,%edx
    0.00 :   5f1c6:  je     5f72f <__vfprintf_internal+0x1e1f>
    0.00 :   5f1cc:  mov    0x28(%rbx),%rax
    0.00 :   5f1d0:  cmp    0x30(%rbx),%rax
    0.00 :   5f1d4:  jae    5fbf0 <__vfprintf_internal+0x22e0>
    0.00 :   5f1da:  lea    0x1(%rax),%rdx
    0.00 :   5f1de:  mov    %rdx,0x28(%rbx)
    0.00 :   5f1e2:  movb   $0x2b,(%rax)
    0.00 :   5f1e5:  jmp    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5f1ea:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f1f0:  call   818e0 <_IO_vtable_check>
    0.00 :   5f1f5:  jmp    5da15 <__vfprintf_internal+0x105>
    0.00 :   5f1fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f200:  movzbl 0x28(%rsp),%ecx
    0.00 :   5f205:  mov    $0x10004,%eax
    0.00 :   5f20a:  lea    -0x2(%r14),%edx
    0.00 :   5f20e:  shr    %cl,%rax
    0.00 :   5f211:  test   $0x1,%al
    0.00 :   5f213:  cmovne %edx,%r14d
    0.00 :   5f217:  jmp    5e45f <__vfprintf_internal+0xb4f>
    0.00 :   5f21c:  nopl   0x0(%rax)
    0.00 :   5f220:  mov    0x38(%rsp),%eax
    0.00 :   5f224:  test   %eax,%eax
    0.00 :   5f226:  je     5ed31 <__vfprintf_internal+0x1421>
    0.00 :   5f22c:  mov    0x28(%rbx),%rax
    0.00 :   5f230:  cmp    0x30(%rbx),%rax
    0.00 :   5f234:  jae    5fd0c <__vfprintf_internal+0x23fc>
    0.00 :   5f23a:  lea    0x1(%rax),%rdx
    0.00 :   5f23e:  mov    %rdx,0x28(%rbx)
    0.00 :   5f242:  movb   $0x20,(%rax)
    0.00 :   5f245:  jmp    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5f24a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f250:  mov    0x28(%rsp),%edi
    0.00 :   5f254:  mov    $0x10004,%eax
    0.00 :   5f259:  bt     %rdi,%rax
    0.00 :   5f25d:  jae    5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5f263:  mov    0x28(%rbx),%rax
    0.00 :   5f267:  cmp    0x30(%rbx),%rax
    0.00 :   5f26b:  jae    5fd60 <__vfprintf_internal+0x2450>
    0.00 :   5f271:  lea    0x1(%rax),%rdx
    0.00 :   5f275:  mov    %rdx,0x28(%rbx)
    0.00 :   5f279:  movb   $0x30,(%rax)
    0.00 :   5f27c:  cmp    $0x7fffffff,%ebp
    0.00 :   5f282:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f288:  mov    0x28(%rbx),%rax
    0.00 :   5f28c:  cmp    0x30(%rbx),%rax
    0.00 :   5f290:  jae    5fd2f <__vfprintf_internal+0x241f>
    0.00 :   5f296:  lea    0x1(%rax),%rdx
    0.00 :   5f29a:  mov    %rdx,0x28(%rbx)
    0.00 :   5f29e:  mov    %r9b,(%rax)
    0.00 :   5f2a1:  cmp    $0x7ffffffe,%ebp
    0.00 :   5f2a7:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f2ad:  subl   $0x2,0x18(%rsp)
    0.00 :   5f2b2:  add    $0x2,%ebp
    0.00 :   5f2b5:  jmp    5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5f2ba:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f2c0:  mov    0x8(%r12),%rdx
    0.00 :   5f2c5:  lea    0x8(%rdx),%rax
    0.00 :   5f2c9:  mov    %rax,0x8(%r12)
    0.00 :   5f2ce:  jmp    5dde3 <__vfprintf_internal+0x4d3>
    0.00 :   5f2d3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f2d8:  xor    %r15d,%r15d
    0.00 :   5f2db:  lea    0x4f8(%rsp),%r10
    0.00 :   5f2e3:  jmp    5ee98 <__vfprintf_internal+0x1588>
    0.00 :   5f2e8:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f2f0:  mov    0x8(%r12),%rdx
    0.00 :   5f2f5:  lea    0x8(%rdx),%rax
    0.00 :   5f2f9:  mov    %rax,0x8(%r12)
    0.00 :   5f2fe:  jmp    5f0cf <__vfprintf_internal+0x17bf>
    0.00 :   5f303:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f308:  cmp    $0x2f,%eax
    0.00 :   5f30b:  ja     5f9b1 <__vfprintf_internal+0x20a1>
    0.00 :   5f311:  mov    %eax,%edx
    0.00 :   5f313:  add    $0x8,%eax
    0.00 :   5f316:  add    0x10(%r12),%rdx
    0.00 :   5f31b:  mov    %eax,(%r12)
    0.00 :   5f31f:  movl   $0x0,0x30(%rsp)
    0.00 :   5f327:  movzwl (%rdx),%r14d
    0.00 :   5f32b:  movl   $0x0,0x38(%rsp)
    0.00 :   5f333:  movl   $0x0,0x8(%rsp)
    0.00 :   5f33b:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f340:  mov    0x8(%r12),%rdx
    0.00 :   5f345:  lea    0x8(%rdx),%rax
    0.00 :   5f349:  mov    %rax,0x8(%r12)
    0.00 :   5f34e:  jmp    5ef48 <__vfprintf_internal+0x1638>
    0.00 :   5f353:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f358:  mov    $0x1,%r13d
    0.00 :   5f35e:  jmp    *%rax
    0.00 :   5f360:  xor    %r13d,%r13d
    0.00 :   5f363:  mov    $0x1,%r14d
    0.00 :   5f369:  jmp    *%rax
    0.00 :   5f36b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f370:  movl   $0x1,0x8(%rsp)
    0.00 :   5f378:  jmp    *%rax
    0.00 :   5f37a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f380:  movl   $0x1,0x8(%rsp)
    0.00 :   5f388:  mov    $0x1,%r10d
    0.00 :   5f38e:  jmp    *%rax
    0.00 :   5f390:  movzbl %r9b,%eax
    0.00 :   5f394:  lea    0x130e05(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5f39b:  xor    %r10d,%r10d
    0.00 :   5f39e:  movl   $0x1,0x8(%rsp)
    0.00 :   5f3a6:  sub    $0x20,%eax
    0.00 :   5f3a9:  lea    -0x18db(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5f3b0:  cltq
    0.00 :   5f3b2:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5f3b6:  lea    0x130b63(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5f3bd:  movslq (%rax,%rdx,4),%rax
    0.00 :   5f3c1:  add    %rdi,%rax
    0.00 :   5f3c4:  jmp    *%rax
    0.00 :   5f3c6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f3d0:  movl   $0x1,0x30(%rsp)
    0.00 :   5f3d8:  jmp    *%rax
    0.00 :   5f3da:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f3e0:  movb   $0x20,0x34(%rsp)
    0.00 :   5f3e5:  movl   $0x1,0x20(%rsp)
    0.00 :   5f3ed:  jmp    *%rax
    0.00 :   5f3ef:  nop
    0.00 :   5f3f0:  movl   $0x1,0x48(%rsp)
    0.00 :   5f3f8:  jmp    *%rax
    0.00 :   5f3fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f400:  mov    $0x1,%r15d
    0.00 :   5f406:  jmp    *%rax
    0.00 :   5f408:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f410:  movl   $0x1,0x50(%rsp)
    0.00 :   5f418:  jmp    *%rax
    0.00 :   5f41a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f420:  cmp    $0x2f,%eax
    0.00 :   5f423:  ja     5f99e <__vfprintf_internal+0x208e>
    0.00 :   5f429:  mov    %eax,%edx
    0.00 :   5f42b:  add    $0x8,%eax
    0.00 :   5f42e:  add    0x10(%r12),%rdx
    0.00 :   5f433:  mov    %eax,(%r12)
    0.00 :   5f437:  mov    (%rdx),%rax
    0.00 :   5f43a:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5f43f:  nop
    0.00 :   5f440:  mov    0x8(%r12),%rax
    0.00 :   5f445:  add    $0xf,%rax
    0.00 :   5f449:  and    $0xfffffffffffffff0,%rax
    0.00 :   5f44d:  lea    0x10(%rax),%rdx
    0.00 :   5f451:  mov    %rdx,0x8(%r12)
    0.00 :   5f456:  fldt   (%rax)
    0.00 :   5f458:  fstpt  0x90(%rsp)
    0.00 :   5f45f:  jmp    5f0dc <__vfprintf_internal+0x17cc>
    0.00 :   5f464:  nopl   0x0(%rax)
    0.00 :   5f468:  mov    0x8(%r12),%rdx
    0.00 :   5f46d:  lea    0x8(%rdx),%rax
    0.00 :   5f471:  mov    %rax,0x8(%r12)
    0.00 :   5f476:  jmp    5e1f7 <__vfprintf_internal+0x8e7>
    0.00 :   5f47b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f480:  lea    -0x19b2(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5f487:  movl   $0x1,0x38(%rsp)
    0.00 :   5f48f:  jmp    *%rax
    0.00 :   5f491:  nopl   0x0(%rax)
    0.00 :   5f498:  mov    0x54(%rsp),%edi
    0.00 :   5f49c:  call   75e90 <__get_errname>
    0.00 :   5f4a1:  mov    0x8(%rsp),%r11d
    0.00 :   5f4a6:  movzbl 0x28(%rsp),%r9d
    0.00 :   5f4ac:  mov    %rax,%r13
    0.00 :   5f4af:  jmp    5e0c0 <__vfprintf_internal+0x7b0>
    0.00 :   5f4b4:  nopl   0x0(%rax)
    0.00 :   5f4b8:  mov    0x173951(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5f4bf:  movl   $0x16,%fs:(%rax)
    0.00 :   5f4c6:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f4cb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f4d0:  mov    0x8(%r12),%rdx
    0.00 :   5f4d5:  lea    0x8(%rdx),%rax
    0.00 :   5f4d9:  mov    %rax,0x8(%r12)
    0.00 :   5f4de:  jmp    5e2cf <__vfprintf_internal+0x9bf>
    0.00 :   5f4e3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f4e8:  mov    %eax,%edx
    0.00 :   5f4ea:  add    $0x8,%eax
    0.00 :   5f4ed:  add    0x10(%r12),%rdx
    0.00 :   5f4f2:  mov    %eax,(%r12)
    0.00 :   5f4f6:  jmp    5e293 <__vfprintf_internal+0x983>
    0.00 :   5f4fb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f500:  mov    0x8(%r12),%rdx
    0.00 :   5f505:  lea    0x8(%rdx),%rax
    0.00 :   5f509:  mov    %rax,0x8(%r12)
    0.00 :   5f50e:  jmp    5e6ab <__vfprintf_internal+0xd9b>
    0.00 :   5f513:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f518:  mov    0x8(%r12),%rdx
    0.00 :   5f51d:  lea    0x8(%rdx),%rax
    0.00 :   5f521:  mov    %rax,0x8(%r12)
    0.00 :   5f526:  jmp    5dff2 <__vfprintf_internal+0x6e2>
    0.00 :   5f52b:  xor    %r13d,%r13d
    0.00 :   5f52e:  test   %r14d,%r14d
    0.00 :   5f531:  jg     5f8ed <__vfprintf_internal+0x1fdd>
    0.00 :   5f537:  xor    %r14d,%r14d
    0.00 :   5f53a:  jmp    5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f53f:  mov    %r15d,%edx
    0.00 :   5f542:  mov    $0x20,%esi
    0.00 :   5f547:  mov    %rbx,%rdi
    0.00 :   5f54a:  mov    %rdx,0x8(%rsp)
    0.00 :   5f54f:  call   78be0 <_IO_padn>
    0.00 :   5f554:  mov    0x8(%rsp),%rdx
    0.00 :   5f559:  cmp    %rax,%rdx
    0.00 :   5f55c:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f562:  movslq %ebp,%rax
    0.00 :   5f565:  add    %rdx,%rax
    0.00 :   5f568:  movslq %eax,%rdx
    0.00 :   5f56b:  movslq %eax,%rbp
    0.00 :   5f56e:  cmp    %rdx,%rax
    0.00 :   5f571:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f577:  test   %eax,%eax
    0.00 :   5f579:  jns    5de1e <__vfprintf_internal+0x50e>
    0.00 :   5f57f:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f584:  nopl   0x0(%rax)
    0.00 :   5f588:  test   %r13d,%r13d
    0.00 :   5f58b:  jle    5dfd7 <__vfprintf_internal+0x6c7>
    0.00 :   5f591:  movslq %r13d,%r14
    0.00 :   5f594:  mov    $0x20,%esi
    0.00 :   5f599:  mov    %rbx,%rdi
    0.00 :   5f59c:  mov    %r14,%rdx
    0.00 :   5f59f:  call   78be0 <_IO_padn>
    0.00 :   5f5a4:  cmp    %rax,%r14
    0.00 :   5f5a7:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f5ad:  xor    %eax,%eax
    0.00 :   5f5af:  add    %r13d,%ebp
    0.00 :   5f5b2:  js     5fdff <__vfprintf_internal+0x24ef>
    0.00 :   5f5b8:  cmp    %r13d,%ebp
    0.00 :   5f5bb:  jb     5fdff <__vfprintf_internal+0x24ef>
    0.00 :   5f5c1:  test   %eax,%eax
    0.00 :   5f5c3:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f5c9:  test   %ebp,%ebp
    0.00 :   5f5cb:  jns    5dfd7 <__vfprintf_internal+0x6c7>
    0.00 :   5f5d1:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f5d6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f5e0:  lea    0x80(%rsp),%rdi
    0.00 :   5f5e8:  call   5aa60 <read_int>
    0.00 :   5f5ed:  mov    %eax,%r11d
    0.00 :   5f5f0:  cmp    $0xffffffff,%eax
    0.00 :   5f5f3:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f5f9:  mov    0x80(%rsp),%rax
    0.00 :   5f601:  movzbl (%rax),%r9d
    0.00 :   5f605:  jmp    5ec6a <__vfprintf_internal+0x135a>
    0.00 :   5f60a:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   5f60f:  jmp    5dc82 <__vfprintf_internal+0x372>
    0.00 :   5f614:  nopl   0x0(%rax)
    0.00 :   5f618:  call   56b40 <__printf_fp>
    0.00 :   5f61d:  jmp    5f112 <__vfprintf_internal+0x1802>
    0.00 :   5f622:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f628:  test   %r14d,%r14d
    0.00 :   5f62b:  je     5f98e <__vfprintf_internal+0x207e>
    0.00 :   5f631:  mov    %bpl,(%rax)
    0.00 :   5f634:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f639:  mov    $0x5,%eax
    0.00 :   5f63e:  lea    0x137b6f(%rip),%r13        # 1971b4 <not_available+0x2f7>
    0.00 :   5f645:  cmp    %eax,%r11d
    0.00 :   5f648:  cmovl  %eax,%r11d
    0.00 :   5f64c:  cmp    $0x53,%r9b
    0.00 :   5f650:  jne    5e0ea <__vfprintf_internal+0x7da>
    0.00 :   5f656:  mov    0x20(%rsp),%r8d
    0.00 :   5f65b:  mov    0x18(%rsp),%ecx
    0.00 :   5f65f:  mov    %ebp,%r9d
    0.00 :   5f662:  mov    %r11d,%edx
    0.00 :   5f665:  mov    %r13,%rsi
    0.00 :   5f668:  mov    %rbx,%rdi
    0.00 :   5f66b:  call   5b010 <outstring_converted_wide_string>
    0.00 :   5f670:  mov    %eax,%ebp
    0.00 :   5f672:  test   %eax,%eax
    0.00 :   5f674:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f67a:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f67f:  nop
    0.00 :   5f680:  neg    %rax
    0.00 :   5f683:  movl   $0xa,0x28(%rsp)
    0.00 :   5f68b:  movl   $0x1,0x8(%rsp)
    0.00 :   5f693:  mov    %rax,%r14
    0.00 :   5f696:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f69b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f6a0:  mov    0xd8(%rbx),%r15
    0.00 :   5f6a7:  lea    0x170352(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5f6ae:  mov    0x10(%rsp),%rdi
    0.00 :   5f6b3:  mov    %r15,%rax
    0.00 :   5f6b6:  sub    %rsi,%rax
    0.00 :   5f6b9:  cmp    %rdi,%rax
    0.00 :   5f6bc:  jae    5fd25 <__vfprintf_internal+0x2415>
    0.00 :   5f6c2:  mov    %r14,%rdx
    0.00 :   5f6c5:  mov    %r13,%rsi
    0.00 :   5f6c8:  mov    %rbx,%rdi
    0.00 :   5f6cb:  call   *0x38(%r15)
    0.00 :   5f6cf:  cmp    %rax,%r14
    0.00 :   5f6d2:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f6d8:  movslq %ebp,%rax
    0.00 :   5f6db:  xor    %edx,%edx
    0.00 :   5f6dd:  add    %r14,%rax
    0.00 :   5f6e0:  js     5fde1 <__vfprintf_internal+0x24d1>
    0.00 :   5f6e6:  cmp    %r14,%rax
    0.00 :   5f6e9:  jb     5fde1 <__vfprintf_internal+0x24d1>
    0.00 :   5f6ef:  movslq %eax,%rcx
    0.00 :   5f6f2:  mov    %eax,%ebp
    0.00 :   5f6f4:  cmp    %rcx,%rax
    0.00 :   5f6f7:  mov    $0x1,%ecx
    0.00 :   5f6fc:  cmovne %ecx,%edx
    0.00 :   5f6ff:  test   %edx,%edx
    0.00 :   5f701:  je     5e1c7 <__vfprintf_internal+0x8b7>
    0.00 :   5f707:  jmp    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f70c:  nopl   0x0(%rax)
    0.00 :   5f710:  movl   $0x0,0x7c(%rsp)
    0.00 :   5f718:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f721:  movq   $0x0,0x68(%rsp)
    0.00 :   5f72a:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f72f:  mov    0x38(%rsp),%eax
    0.00 :   5f733:  test   %eax,%eax
    0.00 :   5f735:  je     5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f73b:  mov    0x28(%rbx),%rax
    0.00 :   5f73f:  cmp    0x30(%rbx),%rax
    0.00 :   5f743:  jae    5fcf3 <__vfprintf_internal+0x23e3>
    0.00 :   5f749:  lea    0x1(%rax),%rdx
    0.00 :   5f74d:  mov    %rdx,0x28(%rbx)
    0.00 :   5f751:  movb   $0x20,(%rax)
    0.00 :   5f754:  jmp    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5f759:  nopl   0x0(%rax)
    0.00 :   5f760:  movl   $0x0,0x7c(%rsp)
    0.00 :   5f768:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f771:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f776:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f780:  lea    0x2(%rcx),%rax
    0.00 :   5f784:  mov    %rax,0x80(%rsp)
    0.00 :   5f78c:  mov    %rax,0xa0(%rsp)
    0.00 :   5f794:  movzbl 0x2(%rcx),%eax
    0.00 :   5f798:  sub    $0x30,%eax
    0.00 :   5f79b:  cmp    $0x9,%eax
    0.00 :   5f79e:  jbe    5fb5f <__vfprintf_internal+0x224f>
    0.00 :   5f7a4:  mov    (%r12),%eax
    0.00 :   5f7a8:  cmp    $0x2f,%eax
    0.00 :   5f7ab:  ja     5fa70 <__vfprintf_internal+0x2160>
    0.00 :   5f7b1:  mov    %eax,%edx
    0.00 :   5f7b3:  add    $0x8,%eax
    0.00 :   5f7b6:  add    0x10(%r12),%rdx
    0.00 :   5f7bb:  mov    %eax,(%r12)
    0.00 :   5f7bf:  mov    (%rdx),%eax
    0.00 :   5f7c1:  mov    $0xffffffff,%edx
    0.00 :   5f7c6:  movzbl 0x2(%rcx),%r9d
    0.00 :   5f7cb:  test   %eax,%eax
    0.00 :   5f7cd:  cmovns %eax,%edx
    0.00 :   5f7d0:  mov    %edx,%r11d
    0.00 :   5f7d3:  jmp    5ec6a <__vfprintf_internal+0x135a>
    0.00 :   5f7d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f7e0:  lea    0xa0(%rsp),%rdi
    0.00 :   5f7e8:  mov    %rcx,0x18(%rsp)
    0.00 :   5f7ed:  call   5aa60 <read_int>
    0.00 :   5f7f2:  mov    0x18(%rsp),%rcx
    0.00 :   5f7f7:  cmp    $0xffffffff,%eax
    0.00 :   5f7fa:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f800:  test   %eax,%eax
    0.00 :   5f802:  je     5e690 <__vfprintf_internal+0xd80>
    0.00 :   5f808:  mov    0xa0(%rsp),%rax
    0.00 :   5f810:  cmpb   $0x24,(%rax)
    0.00 :   5f813:  jne    5e690 <__vfprintf_internal+0xd80>
    0.00 :   5f819:  jmp    5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5f81e:  xchg   %ax,%ax
    0.00 :   5f820:  mov    %r13,%rdi
    0.00 :   5f823:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   5f828:  mov    %rax,%r14
    0.00 :   5f82b:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5f830:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f839:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f83e:  mov    0x17372b(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
    0.00 :   5f845:  mov    %fs:(%rax),%rax
    0.00 :   5f849:  mov    0x8(%rax),%rax
    0.00 :   5f84d:  mov    0x48(%rax),%rsi
    0.00 :   5f851:  mov    0x40(%rax),%rcx
    0.00 :   5f855:  movzbl (%rsi),%eax
    0.00 :   5f858:  mov    %rcx,0x68(%rsp)
    0.00 :   5f85d:  test   %al,%al
    0.00 :   5f85f:  je     5fa83 <__vfprintf_internal+0x2173>
    0.00 :   5f865:  cmp    $0x7f,%al
    0.00 :   5f867:  je     5fa83 <__vfprintf_internal+0x2173>
    0.00 :   5f86d:  xor    %eax,%eax
    0.00 :   5f86f:  cmpb   $0x0,(%rcx)
    0.00 :   5f872:  cmovne %rsi,%rax
    0.00 :   5f876:  mov    %rax,0x60(%rsp)
    0.00 :   5f87b:  jmp    5e758 <__vfprintf_internal+0xe48>
    0.00 :   5f880:  mov    $0x6,%eax
    0.00 :   5f885:  mov    $0x6,%r14d
    0.00 :   5f88b:  lea    0x137928(%rip),%r13        # 1971ba <null>
    0.00 :   5f892:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5f897:  movslq 0x54(%rsp),%r14
    0.00 :   5f89c:  movl   $0x0,0x8(%rsp)
    0.00 :   5f8a4:  movl   $0xa,0x28(%rsp)
    0.00 :   5f8ac:  test   %r14d,%r14d
    0.00 :   5f8af:  jns    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f8b5:  movl   $0x1,0x8(%rsp)
    0.00 :   5f8bd:  neg    %r14
    0.00 :   5f8c0:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f8c5:  mov    %r10,0x8(%rsp)
    0.00 :   5f8ca:  call   818e0 <_IO_vtable_check>
    0.00 :   5f8cf:  mov    0x8(%rsp),%r10
    0.00 :   5f8d4:  jmp    5edc8 <__vfprintf_internal+0x14b8>
    0.00 :   5f8d9:  mov    %r10,0x8(%rsp)
    0.00 :   5f8de:  call   818e0 <_IO_vtable_check>
    0.00 :   5f8e3:  mov    0x8(%rsp),%r10
    0.00 :   5f8e8:  jmp    5e4b5 <__vfprintf_internal+0xba5>
    0.00 :   5f8ed:  movslq %r14d,%rdx
    0.00 :   5f8f0:  mov    $0x20,%esi
    0.00 :   5f8f5:  mov    %rbx,%rdi
    0.00 :   5f8f8:  mov    %r9b,0x48(%rsp)
    0.00 :   5f8fd:  mov    %rdx,0x18(%rsp)
    0.00 :   5f902:  mov    %r11d,0x34(%rsp)
    0.00 :   5f907:  mov    %r10,0x20(%rsp)
    0.00 :   5f90c:  call   78be0 <_IO_padn>
    0.00 :   5f911:  mov    0x18(%rsp),%rdx
    0.00 :   5f916:  cmp    %rax,%rdx
    0.00 :   5f919:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f91f:  xor    %eax,%eax
    0.00 :   5f921:  add    %ebp,%r14d
    0.00 :   5f924:  mov    0x20(%rsp),%r10
    0.00 :   5f929:  mov    0x34(%rsp),%r11d
    0.00 :   5f92e:  movzbl 0x48(%rsp),%r9d
    0.00 :   5f934:  js     5fdd7 <__vfprintf_internal+0x24c7>
    0.00 :   5f93a:  cmp    %edx,%r14d
    0.00 :   5f93d:  jb     5fdd7 <__vfprintf_internal+0x24c7>
    0.00 :   5f943:  mov    %r14d,%ebp
    0.00 :   5f946:  mov    %eax,%r14d
    0.00 :   5f949:  test   %eax,%eax
    0.00 :   5f94b:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f951:  test   %ebp,%ebp
    0.00 :   5f953:  jns    5efd7 <__vfprintf_internal+0x16c7>
    0.00 :   5f959:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f95e:  xchg   %ax,%ax
    0.00 :   5f960:  mov    0x8(%r12),%rdx
    0.00 :   5f965:  lea    0x8(%rdx),%rax
    0.00 :   5f969:  mov    %rax,0x8(%r12)
    0.00 :   5f96e:  jmp    5f090 <__vfprintf_internal+0x1780>
    0.00 :   5f973:  mov    0x8(%r12),%rax
    0.00 :   5f978:  add    $0xf,%rax
    0.00 :   5f97c:  and    $0xfffffffffffffff0,%rax
    0.00 :   5f980:  lea    0x10(%rax),%rdx
    0.00 :   5f984:  mov    %rdx,0x8(%r12)
    0.00 :   5f989:  jmp    5dd9d <__vfprintf_internal+0x48d>
    0.00 :   5f98e:  test   %r13d,%r13d
    0.00 :   5f991:  jne    5fb57 <__vfprintf_internal+0x2247>
    0.00 :   5f997:  mov    %ebp,(%rax)
    0.00 :   5f999:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f99e:  mov    0x8(%r12),%rdx
    0.00 :   5f9a3:  lea    0x8(%rdx),%rax
    0.00 :   5f9a7:  mov    %rax,0x8(%r12)
    0.00 :   5f9ac:  jmp    5f437 <__vfprintf_internal+0x1b27>
    0.00 :   5f9b1:  mov    0x8(%r12),%rdx
    0.00 :   5f9b6:  lea    0x8(%rdx),%rax
    0.00 :   5f9ba:  mov    %rax,0x8(%r12)
    0.00 :   5f9bf:  jmp    5f31f <__vfprintf_internal+0x1a0f>
    0.00 :   5f9c4:  test   %r13d,%r13d
    0.00 :   5f9c7:  jne    5fb24 <__vfprintf_internal+0x2214>
    0.00 :   5f9cd:  cmp    $0x2f,%eax
    0.00 :   5f9d0:  ja     5fc42 <__vfprintf_internal+0x2332>
    0.00 :   5f9d6:  mov    %eax,%edx
    0.00 :   5f9d8:  add    $0x8,%eax
    0.00 :   5f9db:  add    0x10(%r12),%rdx
    0.00 :   5f9e0:  mov    %eax,(%r12)
    0.00 :   5f9e4:  movslq (%rdx),%rax
    0.00 :   5f9e7:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5f9ec:  mov    %r15d,%edx
    0.00 :   5f9ef:  mov    $0x20,%esi
    0.00 :   5f9f4:  mov    %rbx,%rdi
    0.00 :   5f9f7:  mov    %rdx,0x8(%rsp)
    0.00 :   5f9fc:  call   78be0 <_IO_padn>
    0.00 :   5fa01:  mov    0x8(%rsp),%rdx
    0.00 :   5fa06:  cmp    %rax,%rdx
    0.00 :   5fa09:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fa0f:  movslq %ebp,%rax
    0.00 :   5fa12:  add    %rdx,%rax
    0.00 :   5fa15:  movslq %eax,%rdx
    0.00 :   5fa18:  movslq %eax,%rbp
    0.00 :   5fa1b:  cmp    %rdx,%rax
    0.00 :   5fa1e:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5fa24:  test   %eax,%eax
    0.00 :   5fa26:  jns    5e117 <__vfprintf_internal+0x807>
    0.00 :   5fa2c:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5fa31:  nopl   0x0(%rax)
    0.00 :   5fa38:  xor    %r10d,%r10d
    0.00 :   5fa3b:  xor    %edx,%edx
    0.00 :   5fa3d:  jmp    5dcd1 <__vfprintf_internal+0x3c1>
    0.00 :   5fa42:  movslq %r15d,%r15
    0.00 :   5fa45:  mov    $0x20,%esi
    0.00 :   5fa4a:  mov    %rbx,%rdi
    0.00 :   5fa4d:  mov    %r15,%rdx
    0.00 :   5fa50:  call   78be0 <_IO_padn>
    0.00 :   5fa55:  cmp    %rax,%r15
    0.00 :   5fa58:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fa5e:  add    %ebp,%r15d
    0.00 :   5fa61:  mov    %r15d,%ebp
    0.00 :   5fa64:  jno    5f12a <__vfprintf_internal+0x181a>
    0.00 :   5fa6a:  jmp    5e058 <__vfprintf_internal+0x748>
    0.00 :   5fa6f:  nop
    0.00 :   5fa70:  mov    0x8(%r12),%rdx
    0.00 :   5fa75:  lea    0x8(%rdx),%rax
    0.00 :   5fa79:  mov    %rax,0x8(%r12)
    0.00 :   5fa7e:  jmp    5f7bf <__vfprintf_internal+0x1eaf>
    0.00 :   5fa83:  movq   $0x0,0x60(%rsp)
    0.00 :   5fa8c:  jmp    5e758 <__vfprintf_internal+0xe48>
    0.00 :   5fa91:  mov    %r9b,0x20(%rsp)
    0.00 :   5fa96:  mov    $0x2d,%esi
    0.00 :   5fa9b:  mov    %r11d,0x18(%rsp)
    0.00 :   5faa0:  mov    %r10,0x8(%rsp)
    0.00 :   5faa5:  mov    %rbx,%rdi
    0.00 :   5faa8:  call   84a60 <__overflow>
    0.00 :   5faad:  mov    0x8(%rsp),%r10
    0.00 :   5fab2:  mov    0x18(%rsp),%r11d
    0.00 :   5fab7:  cmp    $0xffffffff,%eax
    0.00 :   5faba:  movzbl 0x20(%rsp),%r9d
    0.00 :   5fac0:  jne    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5fac6:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5facb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5fad0:  mov    %r9b,0x30(%rsp)
    0.00 :   5fad5:  mov    $0x2d,%esi
    0.00 :   5fada:  mov    %r11d,0x20(%rsp)
    0.00 :   5fadf:  mov    %r10,0x8(%rsp)
    0.00 :   5fae4:  mov    %rbx,%rdi
    0.00 :   5fae7:  call   84a60 <__overflow>
    0.00 :   5faec:  mov    0x8(%rsp),%r10
    0.00 :   5faf1:  mov    0x20(%rsp),%r11d
    0.00 :   5faf6:  cmp    $0xffffffff,%eax
    0.00 :   5faf9:  movzbl 0x30(%rsp),%r9d
    0.00 :   5faff:  jne    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5fb05:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fb0a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fb10:  mov    %rax,0x8(%rsp)
    0.00 :   5fb15:  call   818e0 <_IO_vtable_check>
    0.00 :   5fb1a:  mov    0x8(%rsp),%rax
    0.00 :   5fb1f:  jmp    5de40 <__vfprintf_internal+0x530>
    0.00 :   5fb24:  cmp    $0x2f,%eax
    0.00 :   5fb27:  ja     5fc2f <__vfprintf_internal+0x231f>
    0.00 :   5fb2d:  mov    %eax,%edx
    0.00 :   5fb2f:  add    $0x8,%eax
    0.00 :   5fb32:  add    0x10(%r12),%rdx
    0.00 :   5fb37:  mov    %eax,(%r12)
    0.00 :   5fb3b:  movswq (%rdx),%rax
    0.00 :   5fb3f:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5fb44:  mov    0x8(%r12),%rdx
    0.00 :   5fb49:  lea    0x8(%rdx),%rax
    0.00 :   5fb4d:  mov    %rax,0x8(%r12)
    0.00 :   5fb52:  jmp    5e58c <__vfprintf_internal+0xc7c>
    0.00 :   5fb57:  mov    %bp,(%rax)
    0.00 :   5fb5a:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5fb5f:  lea    0xa0(%rsp),%rdi
    0.00 :   5fb67:  mov    %rcx,0x28(%rsp)
    0.00 :   5fb6c:  call   5aa60 <read_int>
    0.00 :   5fb71:  mov    0x28(%rsp),%rcx
    0.00 :   5fb76:  cmp    $0xffffffff,%eax
    0.00 :   5fb79:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5fb7f:  test   %eax,%eax
    0.00 :   5fb81:  je     5f7a4 <__vfprintf_internal+0x1e94>
    0.00 :   5fb87:  mov    0xa0(%rsp),%rax
    0.00 :   5fb8f:  cmpb   $0x24,(%rax)
    0.00 :   5fb92:  jne    5f7a4 <__vfprintf_internal+0x1e94>
    0.00 :   5fb98:  jmp    5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5fb9d:  nopl   (%rax)
    0.00 :   5fba0:  mov    %rax,0x8(%rsp)
    0.00 :   5fba5:  call   818e0 <_IO_vtable_check>
    0.00 :   5fbaa:  mov    0x8(%rsp),%rax
    0.00 :   5fbaf:  jmp    5e139 <__vfprintf_internal+0x829>
    0.00 :   5fbb4:  mov    0x173255(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5fbbb:  or     $0x20,%ebp
    0.00 :   5fbbe:  mov    %ebp,(%rbx)
    0.00 :   5fbc0:  movl   $0x9,%fs:(%rax)
    0.00 :   5fbc7:  jmp    5dc29 <__vfprintf_internal+0x319>
    0.00 :   5fbcc:  mov    $0x25,%esi
    0.00 :   5fbd1:  mov    %rbx,%rdi
    0.00 :   5fbd4:  call   84a60 <__overflow>
    0.00 :   5fbd9:  cmp    $0xffffffff,%eax
    0.00 :   5fbdc:  jne    5e5d5 <__vfprintf_internal+0xcc5>
    0.00 :   5fbe2:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fbe7:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fbf0:  mov    %r9b,0x20(%rsp)
    0.00 :   5fbf5:  mov    $0x2b,%esi
    0.00 :   5fbfa:  mov    %r11d,0x18(%rsp)
    0.00 :   5fbff:  mov    %r10,0x8(%rsp)
    0.00 :   5fc04:  jmp    5faa5 <__vfprintf_internal+0x2195>
    0.00 :   5fc09:  mov    %r9b,0x30(%rsp)
    0.00 :   5fc0e:  mov    $0x2b,%esi
    0.00 :   5fc13:  mov    %r11d,0x20(%rsp)
    0.00 :   5fc18:  mov    %r10,0x8(%rsp)
    0.00 :   5fc1d:  jmp    5fae4 <__vfprintf_internal+0x21d4>
    0.00 :   5fc22:  movzbl 0x8(%rsp),%eax
    0.00 :   5fc27:  xor    $0x1,%eax
    0.00 :   5fc2a:  jmp    5e0ce <__vfprintf_internal+0x7be>
    0.00 :   5fc2f:  mov    0x8(%r12),%rdx
    0.00 :   5fc34:  lea    0x8(%rdx),%rax
    0.00 :   5fc38:  mov    %rax,0x8(%r12)
    0.00 :   5fc3d:  jmp    5fb3b <__vfprintf_internal+0x222b>
    0.00 :   5fc42:  mov    0x8(%r12),%rdx
    0.00 :   5fc47:  lea    0x8(%rdx),%rax
    0.00 :   5fc4b:  mov    %rax,0x8(%r12)
    0.00 :   5fc50:  jmp    5f9e4 <__vfprintf_internal+0x20d4>
    0.00 :   5fc55:  movzbl %dl,%esi
    0.00 :   5fc58:  mov    %rbx,%rdi
    0.00 :   5fc5b:  call   84a60 <__overflow>
    0.00 :   5fc60:  cmp    $0xffffffff,%eax
    0.00 :   5fc63:  jne    5e00c <__vfprintf_internal+0x6fc>
    0.00 :   5fc69:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fc6e:  xchg   %ax,%ax
    0.00 :   5fc70:  movzbl %r9b,%esi
    0.00 :   5fc74:  mov    %rbx,%rdi
    0.00 :   5fc77:  mov    %r11d,0x18(%rsp)
    0.00 :   5fc7c:  mov    %r10,0x8(%rsp)
    0.00 :   5fc81:  call   84a60 <__overflow>
    0.00 :   5fc86:  mov    0x8(%rsp),%r10
    0.00 :   5fc8b:  mov    0x18(%rsp),%r11d
    0.00 :   5fc90:  cmp    $0xffffffff,%eax
    0.00 :   5fc93:  jne    5f1a9 <__vfprintf_internal+0x1899>
    0.00 :   5fc99:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fc9e:  xchg   %ax,%ax
    0.00 :   5fca0:  mov    $0x30,%esi
    0.00 :   5fca5:  mov    %rbx,%rdi
    0.00 :   5fca8:  mov    %r9b,0x20(%rsp)
    0.00 :   5fcad:  mov    %r11d,0x18(%rsp)
    0.00 :   5fcb2:  mov    %r10,0x8(%rsp)
    0.00 :   5fcb7:  call   84a60 <__overflow>
    0.00 :   5fcbc:  mov    0x8(%rsp),%r10
    0.00 :   5fcc1:  mov    0x18(%rsp),%r11d
    0.00 :   5fcc6:  cmp    $0xffffffff,%eax
    0.00 :   5fcc9:  movzbl 0x20(%rsp),%r9d
    0.00 :   5fccf:  jne    5f184 <__vfprintf_internal+0x1874>
    0.00 :   5fcd5:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fcda:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fce0:  mov    0x173129(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5fce7:  movl   $0x16,%fs:(%rax)
    0.00 :   5fcee:  jmp    5dc29 <__vfprintf_internal+0x319>
    0.00 :   5fcf3:  mov    %r9b,0x20(%rsp)
    0.00 :   5fcf8:  mov    $0x20,%esi
    0.00 :   5fcfd:  mov    %r11d,0x18(%rsp)
    0.00 :   5fd02:  mov    %r10,0x8(%rsp)
    0.00 :   5fd07:  jmp    5faa5 <__vfprintf_internal+0x2195>
    0.00 :   5fd0c:  mov    %r9b,0x30(%rsp)
    0.00 :   5fd11:  mov    $0x20,%esi
    0.00 :   5fd16:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd1b:  mov    %r10,0x8(%rsp)
    0.00 :   5fd20:  jmp    5fae4 <__vfprintf_internal+0x21d4>
    0.00 :   5fd25:  call   818e0 <_IO_vtable_check>
    0.00 :   5fd2a:  jmp    5f6c2 <__vfprintf_internal+0x1db2>
    0.00 :   5fd2f:  movzbl %r9b,%esi
    0.00 :   5fd33:  mov    %rbx,%rdi
    0.00 :   5fd36:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd3b:  mov    %r10,0x8(%rsp)
    0.00 :   5fd40:  call   84a60 <__overflow>
    0.00 :   5fd45:  mov    0x8(%rsp),%r10
    0.00 :   5fd4a:  mov    0x20(%rsp),%r11d
    0.00 :   5fd4f:  cmp    $0xffffffff,%eax
    0.00 :   5fd52:  jne    5f2a1 <__vfprintf_internal+0x1991>
    0.00 :   5fd58:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fd5d:  nopl   (%rax)
    0.00 :   5fd60:  mov    $0x30,%esi
    0.00 :   5fd65:  mov    %rbx,%rdi
    0.00 :   5fd68:  mov    %r9b,0x28(%rsp)
    0.00 :   5fd6d:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd72:  mov    %r10,0x8(%rsp)
    0.00 :   5fd77:  call   84a60 <__overflow>
    0.00 :   5fd7c:  mov    0x8(%rsp),%r10
    0.00 :   5fd81:  mov    0x20(%rsp),%r11d
    0.00 :   5fd86:  cmp    $0xffffffff,%eax
    0.00 :   5fd89:  movzbl 0x28(%rsp),%r9d
    0.00 :   5fd8f:  jne    5f27c <__vfprintf_internal+0x196c>
    0.00 :   5fd95:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fd9a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fda0:  mov    %r11d,0x20(%rsp)
    0.00 :   5fda5:  jmp    5eece <__vfprintf_internal+0x15be>
    0.00 :   5fdaa:  mov    $0x1,%edx
    0.00 :   5fdaf:  jmp    5df1d <__vfprintf_internal+0x60d>
    0.00 :   5fdb4:  call   11ba20 <__stack_chk_fail>
    0.00 :   5fdb9:  mov    $0x1,%edx
    0.00 :   5fdbe:  jmp    5edf5 <__vfprintf_internal+0x14e5>
    0.00 :   5fdc3:  mov    $0x1,%eax
    0.00 :   5fdc8:  jmp    5e4e2 <__vfprintf_internal+0xbd2>
    0.00 :   5fdcd:  mov    $0x1,%eax
    0.00 :   5fdd2:  jmp    5ed96 <__vfprintf_internal+0x1486>
    0.00 :   5fdd7:  mov    $0x1,%eax
    0.00 :   5fddc:  jmp    5f943 <__vfprintf_internal+0x2033>
    0.00 :   5fde1:  mov    $0x1,%edx
    0.00 :   5fde6:  jmp    5f6ef <__vfprintf_internal+0x1ddf>
    0.00 :   5fdeb:  mov    $0x1,%edx
    0.00 :   5fdf0:  jmp    5e165 <__vfprintf_internal+0x855>
    0.00 :   5fdf5:  mov    $0x1,%edx
    0.00 :   5fdfa:  jmp    5de6c <__vfprintf_internal+0x55c>
    0.00 :   5fdff:  mov    $0x1,%eax
    0.00 :   5fe04:  jmp    5f5c1 <__vfprintf_internal+0x1cb1>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   65.64 libc.so.6[49b47]
   34.36 libc.so.6[49b0c]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000049af0 <__GI_____strtol_l_internal>:
         : 6     ____strtoll_l_internal():
    0.00 :   49af0:  endbr64
    0.00 :   49af4:  push   %r15
    0.00 :   49af6:  push   %r14
    0.00 :   49af8:  push   %r13
    0.00 :   49afa:  xor    %r13d,%r13d
    0.00 :   49afd:  push   %r12
    0.00 :   49aff:  xor    %r12d,%r12d
    0.00 :   49b02:  push   %rbp
    0.00 :   49b03:  push   %rbx
    0.00 :   49b04:  sub    $0x28,%rsp
    0.00 :   49b08:  mov    0x8(%r8),%rax
   34.36 :   49b0c:  mov    %rdi,0x8(%rsp) // libc.so.6[49b0c]
    0.00 :   49b11:  mov    %edx,%edi
    0.00 :   49b13:  mov    %rsi,0x10(%rsp)
    0.00 :   49b18:  test   %ecx,%ecx
    0.00 :   49b1a:  jne    49dd0 <__GI_____strtol_l_internal+0x2e0>
    0.00 :   49b20:  cmp    $0x1,%edi
    0.00 :   49b23:  je     49bc0 <__GI_____strtol_l_internal+0xd0>
    0.00 :   49b29:  cmp    $0x24,%edi
    0.00 :   49b2c:  ja     49bc0 <__GI_____strtol_l_internal+0xd0>
    0.00 :   49b32:  mov    0x8(%rsp),%rbx
    0.00 :   49b37:  mov    0x68(%r8),%rcx
    0.00 :   49b3b:  movsbq (%rbx),%rdx
    0.00 :   49b3f:  mov    %rdx,%rax
    0.00 :   49b42:  testb  $0x20,0x1(%rcx,%rdx,2)
   65.64 :   49b47:  je     49b63 <__GI_____strtol_l_internal+0x73> // libc.so.6[49b47]
    0.00 :   49b49:  nopl   0x0(%rax)
    0.00 :   49b50:  movsbq 0x1(%rbx),%rdx
    0.00 :   49b55:  add    $0x1,%rbx
    0.00 :   49b59:  mov    %rdx,%rax
    0.00 :   49b5c:  testb  $0x20,0x1(%rcx,%rdx,2)
    0.00 :   49b61:  jne    49b50 <__GI_____strtol_l_internal+0x60>
    0.00 :   49b63:  test   %al,%al
    0.00 :   49b65:  je     49f8c <__GI_____strtol_l_internal+0x49c>
    0.00 :   49b6b:  cmp    $0x2d,%al
    0.00 :   49b6d:  je     49d58 <__GI_____strtol_l_internal+0x268>
    0.00 :   49b73:  cmp    $0x2b,%al
    0.00 :   49b75:  movl   $0x0,0x1c(%rsp)
    0.00 :   49b7d:  sete   %al
    0.00 :   49b80:  movzbl %al,%eax
    0.00 :   49b83:  add    %rax,%rbx
    0.00 :   49b86:  movzbl (%rbx),%edx
    0.00 :   49b89:  cmp    $0x30,%dl
    0.00 :   49b8c:  je     49d71 <__GI_____strtol_l_internal+0x281>
    0.00 :   49b92:  test   %edi,%edi
    0.00 :   49b94:  je     49be0 <__GI_____strtol_l_internal+0xf0>
    0.00 :   49b96:  cmp    $0xa,%edi
    0.00 :   49b99:  je     49be0 <__GI_____strtol_l_internal+0xf0>
    0.00 :   49b9b:  lea    -0x2(%rdi),%eax
    0.00 :   49b9e:  lea    0x14217b(%rip),%rcx        # 18bd20 <__strtol_ul_rem_tab>
    0.00 :   49ba5:  xor    %ebp,%ebp
    0.00 :   49ba7:  xor    %r13d,%r13d
    0.00 :   49baa:  cltq
    0.00 :   49bac:  movzbl (%rcx,%rax,1),%r14d
    0.00 :   49bb1:  lea    0x1421a8(%rip),%rcx        # 18bd60 <__strtol_ul_max_tab>
    0.00 :   49bb8:  mov    (%rcx,%rax,8),%r8
    0.00 :   49bbc:  jmp    49c00 <__GI_____strtol_l_internal+0x110>
    0.00 :   49bbe:  xchg   %ax,%ax
    0.00 :   49bc0:  mov    0x189249(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   49bc7:  movl   $0x16,%fs:(%rax)
    0.00 :   49bce:  xor    %eax,%eax
    0.00 :   49bd0:  add    $0x28,%rsp
    0.00 :   49bd4:  pop    %rbx
    0.00 :   49bd5:  pop    %rbp
    0.00 :   49bd6:  pop    %r12
    0.00 :   49bd8:  pop    %r13
    0.00 :   49bda:  pop    %r14
    0.00 :   49bdc:  pop    %r15
    0.00 :   49bde:  ret
    0.00 :   49bdf:  nop
    0.00 :   49be0:  test   %r13,%r13
    0.00 :   49be3:  jne    49e89 <__GI_____strtol_l_internal+0x399>
    0.00 :   49be9:  mov    $0x5,%r14d
    0.00 :   49bef:  mov    $0xa,%edi
    0.00 :   49bf4:  xor    %ebp,%ebp
    0.00 :   49bf6:  movabs $0x1999999999999999,%r8
    0.00 :   49c00:  test   %dl,%dl
    0.00 :   49c02:  je     49e37 <__GI_____strtol_l_internal+0x347>
    0.00 :   49c08:  cmp    %rbx,%r13
    0.00 :   49c0b:  je     49e37 <__GI_____strtol_l_internal+0x347>
    0.00 :   49c11:  mov    0x188dc0(%rip),%r10        # 1d29d8 <_nl_C_locobj+0x78>
    0.00 :   49c18:  mov    0x188da9(%rip),%r11        # 1d29c8 <_nl_C_locobj+0x68>
    0.00 :   49c1f:  mov    %rbx,%rcx
    0.00 :   49c22:  xor    %esi,%esi
    0.00 :   49c24:  xor    %r9d,%r9d
    0.00 :   49c27:  movslq %edi,%r15
    0.00 :   49c2a:  jmp    49c58 <__GI_____strtol_l_internal+0x168>
    0.00 :   49c2c:  nopl   0x0(%rax)
    0.00 :   49c30:  cmp    %al,%r14b
    0.00 :   49c33:  jae    49c3a <__GI_____strtol_l_internal+0x14a>
    0.00 :   49c35:  cmp    %r8,%rsi
    0.00 :   49c38:  je     49c7f <__GI_____strtol_l_internal+0x18f>
    0.00 :   49c3a:  imul   %r15,%rsi
    0.00 :   49c3e:  movzbl %al,%eax
    0.00 :   49c41:  add    %rax,%rsi
    0.00 :   49c44:  mov    %rcx,%rax
    0.00 :   49c47:  movzbl 0x1(%rax),%edx
    0.00 :   49c4b:  lea    0x1(%rax),%rcx
    0.00 :   49c4f:  test   %dl,%dl
    0.00 :   49c51:  je     49c98 <__GI_____strtol_l_internal+0x1a8>
    0.00 :   49c53:  cmp    %r13,%rcx
    0.00 :   49c56:  je     49c98 <__GI_____strtol_l_internal+0x1a8>
    0.00 :   49c58:  lea    -0x30(%rdx),%eax
    0.00 :   49c5b:  cmp    $0x9,%al
    0.00 :   49c5d:  jbe    49c73 <__GI_____strtol_l_internal+0x183>
    0.00 :   49c5f:  test   %rbp,%rbp
    0.00 :   49c62:  jne    49ce0 <__GI_____strtol_l_internal+0x1f0>
    0.00 :   49c64:  testb  $0x4,0x1(%r11,%rdx,2)
    0.00 :   49c6a:  je     49c98 <__GI_____strtol_l_internal+0x1a8>
    0.00 :   49c6c:  mov    (%r10,%rdx,4),%eax
    0.00 :   49c70:  sub    $0x37,%eax
    0.00 :   49c73:  movzbl %al,%edx
    0.00 :   49c76:  cmp    %edi,%edx
    0.00 :   49c78:  jge    49c98 <__GI_____strtol_l_internal+0x1a8>
    0.00 :   49c7a:  cmp    %rsi,%r8
    0.00 :   49c7d:  jae    49c30 <__GI_____strtol_l_internal+0x140>
    0.00 :   49c7f:  mov    %rcx,%rax
    0.00 :   49c82:  mov    $0x1,%r9d
    0.00 :   49c88:  movzbl 0x1(%rax),%edx
    0.00 :   49c8c:  lea    0x1(%rax),%rcx
    0.00 :   49c90:  test   %dl,%dl
    0.00 :   49c92:  jne    49c53 <__GI_____strtol_l_internal+0x163>
    0.00 :   49c94:  nopl   0x0(%rax)
    0.00 :   49c98:  cmp    %rbx,%rcx
    0.00 :   49c9b:  je     49e3a <__GI_____strtol_l_internal+0x34a>
    0.00 :   49ca1:  mov    0x10(%rsp),%rax
    0.00 :   49ca6:  test   %rax,%rax
    0.00 :   49ca9:  je     49cae <__GI_____strtol_l_internal+0x1be>
    0.00 :   49cab:  mov    %rcx,(%rax)
    0.00 :   49cae:  test   %r9d,%r9d
    0.00 :   49cb1:  jne    49d28 <__GI_____strtol_l_internal+0x238>
    0.00 :   49cb3:  mov    0x1c(%rsp),%edx
    0.00 :   49cb7:  mov    %rsi,%rax
    0.00 :   49cba:  test   %edx,%edx
    0.00 :   49cbc:  jne    49e00 <__GI_____strtol_l_internal+0x310>
    0.00 :   49cc2:  test   %rsi,%rsi
    0.00 :   49cc5:  jns    49bd0 <__GI_____strtol_l_internal+0xe0>
    0.00 :   49ccb:  mov    0x18913e(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   49cd2:  movl   $0x22,%fs:(%rax)
    0.00 :   49cd9:  jmp    49d42 <__GI_____strtol_l_internal+0x252>
    0.00 :   49cdb:  nopl   0x0(%rax,%rax,1)
    0.00 :   49ce0:  mov    %dl,0x1b(%rsp)
    0.00 :   49ce4:  xor    %eax,%eax
    0.00 :   49ce6:  jmp    49cf9 <__GI_____strtol_l_internal+0x209>
    0.00 :   49ce8:  nopl   0x0(%rax,%rax,1)
    0.00 :   49cf0:  add    $0x1,%rax
    0.00 :   49cf4:  cmp    %rbp,%rax
    0.00 :   49cf7:  je     49d18 <__GI_____strtol_l_internal+0x228>
    0.00 :   49cf9:  movzbl (%rcx,%rax,1),%edx
    0.00 :   49cfd:  cmp    %dl,(%r12,%rax,1)
    0.00 :   49d01:  je     49cf0 <__GI_____strtol_l_internal+0x200>
    0.00 :   49d03:  movzbl 0x1b(%rsp),%edx
    0.00 :   49d08:  cmp    %rax,%rbp
    0.00 :   49d0b:  jne    49c64 <__GI_____strtol_l_internal+0x174>
    0.00 :   49d11:  nopl   0x0(%rax)
    0.00 :   49d18:  lea    -0x1(%rcx,%rbp,1),%rax
    0.00 :   49d1d:  jmp    49c47 <__GI_____strtol_l_internal+0x157>
    0.00 :   49d22:  nopw   0x0(%rax,%rax,1)
    0.00 :   49d28:  mov    0x1890e1(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   49d2f:  movl   $0x22,%fs:(%rax)
    0.00 :   49d36:  mov    0x1c(%rsp),%eax
    0.00 :   49d3a:  test   %eax,%eax
    0.00 :   49d3c:  jne    49e28 <__GI_____strtol_l_internal+0x338>
    0.00 :   49d42:  movabs $0x7fffffffffffffff,%rax
    0.00 :   49d4c:  jmp    49bd0 <__GI_____strtol_l_internal+0xe0>
    0.00 :   49d51:  nopl   0x0(%rax)
    0.00 :   49d58:  movzbl 0x1(%rbx),%edx
    0.00 :   49d5c:  add    $0x1,%rbx
    0.00 :   49d60:  movl   $0x1,0x1c(%rsp)
    0.00 :   49d68:  cmp    $0x30,%dl
    0.00 :   49d6b:  jne    49b92 <__GI_____strtol_l_internal+0xa2>
    0.00 :   49d71:  test   $0xffffffef,%edi
    0.00 :   49d77:  jne    49b96 <__GI_____strtol_l_internal+0xa6>
    0.00 :   49d7d:  movsbq 0x1(%rbx),%rax
    0.00 :   49d82:  mov    0x188c4f(%rip),%r10        # 1d29d8 <_nl_C_locobj+0x78>
    0.00 :   49d89:  cmpl   $0x58,(%r10,%rax,4)
    0.00 :   49d8e:  je     49f65 <__GI_____strtol_l_internal+0x475>
    0.00 :   49d94:  test   %edi,%edi
    0.00 :   49d96:  je     49fa0 <__GI_____strtol_l_internal+0x4b0>
    0.00 :   49d9c:  lea    -0x2(%rdi),%eax
    0.00 :   49d9f:  lea    0x141f7a(%rip),%rdx        # 18bd20 <__strtol_ul_rem_tab>
    0.00 :   49da6:  cltq
    0.00 :   49da8:  movzbl (%rdx,%rax,1),%r14d
    0.00 :   49dad:  lea    0x141fac(%rip),%rdx        # 18bd60 <__strtol_ul_max_tab>
    0.00 :   49db4:  mov    (%rdx,%rax,8),%r8
    0.00 :   49db8:  xor    %r13d,%r13d
    0.00 :   49dbb:  xor    %ebp,%ebp
    0.00 :   49dbd:  mov    $0x30,%edx
    0.00 :   49dc2:  jmp    49c18 <__GI_____strtol_l_internal+0x128>
    0.00 :   49dc7:  nopw   0x0(%rax,%rax,1)
    0.00 :   49dd0:  mov    0x48(%rax),%r13
    0.00 :   49dd4:  movzbl 0x0(%r13),%ebx
    0.00 :   49dd9:  lea    -0x1(%rbx),%edx
    0.00 :   49ddc:  cmp    $0x7d,%dl
    0.00 :   49ddf:  ja     49e81 <__GI_____strtol_l_internal+0x391>
    0.00 :   49de5:  mov    0x40(%rax),%r12
    0.00 :   49de9:  cmpb   $0x0,(%r12)
    0.00 :   49dee:  jne    49b20 <__GI_____strtol_l_internal+0x30>
    0.00 :   49df4:  xor    %r13d,%r13d
    0.00 :   49df7:  xor    %r12d,%r12d
    0.00 :   49dfa:  jmp    49b20 <__GI_____strtol_l_internal+0x30>
    0.00 :   49dff:  nop
    0.00 :   49e00:  movabs $0x8000000000000000,%rdx
    0.00 :   49e0a:  neg    %rax
    0.00 :   49e0d:  cmp    %rsi,%rdx
    0.00 :   49e10:  jae    49bd0 <__GI_____strtol_l_internal+0xe0>
    0.00 :   49e16:  mov    0x188ff3(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   49e1d:  movl   $0x22,%fs:(%rax)
    0.00 :   49e24:  nopl   0x0(%rax)
    0.00 :   49e28:  movabs $0x8000000000000000,%rax
    0.00 :   49e32:  jmp    49bd0 <__GI_____strtol_l_internal+0xe0>
    0.00 :   49e37:  mov    %rbx,%rcx
    0.00 :   49e3a:  cmpq   $0x0,0x10(%rsp)
    0.00 :   49e40:  je     49bce <__GI_____strtol_l_internal+0xde>
    0.00 :   49e46:  mov    0x8(%rsp),%rdi
    0.00 :   49e4b:  mov    %rcx,%rax
    0.00 :   49e4e:  sub    %rdi,%rax
    0.00 :   49e51:  cmp    $0x1,%rax
    0.00 :   49e55:  jle    49e6d <__GI_____strtol_l_internal+0x37d>
    0.00 :   49e57:  movsbq -0x1(%rcx),%rdx
    0.00 :   49e5c:  mov    0x188b75(%rip),%rax        # 1d29d8 <_nl_C_locobj+0x78>
    0.00 :   49e63:  cmpl   $0x58,(%rax,%rdx,4)
    0.00 :   49e67:  je     49fba <__GI_____strtol_l_internal+0x4ca>
    0.00 :   49e6d:  mov    0x10(%rsp),%rax
    0.00 :   49e72:  mov    0x8(%rsp),%rdi
    0.00 :   49e77:  mov    %rdi,(%rax)
    0.00 :   49e7a:  xor    %eax,%eax
    0.00 :   49e7c:  jmp    49bd0 <__GI_____strtol_l_internal+0xe0>
    0.00 :   49e81:  xor    %r13d,%r13d
    0.00 :   49e84:  jmp    49b20 <__GI_____strtol_l_internal+0x30>
    0.00 :   49e89:  mov    %r12,%rdi
    0.00 :   49e8c:  mov    %dl,0x1b(%rsp)
    0.00 :   49e90:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   49e95:  mov    %rax,%rcx
    0.00 :   49e98:  mov    %rax,%rbp
    0.00 :   49e9b:  test   %rax,%rax
    0.00 :   49e9e:  je     49e37 <__GI_____strtol_l_internal+0x347>
    0.00 :   49ea0:  movzbl 0x1b(%rsp),%edx
    0.00 :   49ea5:  xor    %eax,%eax
    0.00 :   49ea7:  jmp    49ebd <__GI_____strtol_l_internal+0x3cd>
    0.00 :   49ea9:  nopl   0x0(%rax)
    0.00 :   49eb0:  add    $0x1,%rax
    0.00 :   49eb4:  cmp    %rcx,%rax
    0.00 :   49eb7:  je     49e37 <__GI_____strtol_l_internal+0x347>
    0.00 :   49ebd:  movzbl (%rbx,%rax,1),%edi
    0.00 :   49ec1:  cmp    %dil,(%r12,%rax,1)
    0.00 :   49ec5:  je     49eb0 <__GI_____strtol_l_internal+0x3c0>
    0.00 :   49ec7:  cmp    %rcx,%rax
    0.00 :   49eca:  jae    49e37 <__GI_____strtol_l_internal+0x347>
    0.00 :   49ed0:  test   %dl,%dl
    0.00 :   49ed2:  je     49fd7 <__GI_____strtol_l_internal+0x4e7>
    0.00 :   49ed8:  mov    0x188ae9(%rip),%rdi        # 1d29c8 <_nl_C_locobj+0x68>
    0.00 :   49edf:  mov    0x188af2(%rip),%r10        # 1d29d8 <_nl_C_locobj+0x78>
    0.00 :   49ee6:  mov    %rbx,%rsi
    0.00 :   49ee9:  jmp    49efc <__GI_____strtol_l_internal+0x40c>
    0.00 :   49eeb:  nopl   0x0(%rax,%rax,1)
    0.00 :   49ef0:  movzbl 0x1(%rsi),%edx
    0.00 :   49ef4:  add    $0x1,%rsi
    0.00 :   49ef8:  test   %dl,%dl
    0.00 :   49efa:  je     49f37 <__GI_____strtol_l_internal+0x447>
    0.00 :   49efc:  lea    -0x30(%rdx),%eax
    0.00 :   49eff:  cmp    $0x9,%al
    0.00 :   49f01:  jbe    49ef0 <__GI_____strtol_l_internal+0x400>
    0.00 :   49f03:  xor    %eax,%eax
    0.00 :   49f05:  jmp    49f19 <__GI_____strtol_l_internal+0x429>
    0.00 :   49f07:  nopw   0x0(%rax,%rax,1)
    0.00 :   49f10:  add    $0x1,%rax
    0.00 :   49f14:  cmp    %rcx,%rax
    0.00 :   49f17:  je     49ef0 <__GI_____strtol_l_internal+0x400>
    0.00 :   49f19:  movzbl (%rsi,%rax,1),%r11d
    0.00 :   49f1e:  cmp    %r11b,(%r12,%rax,1)
    0.00 :   49f22:  je     49f10 <__GI_____strtol_l_internal+0x420>
    0.00 :   49f24:  cmp    %rcx,%rax
    0.00 :   49f27:  jae    49ef0 <__GI_____strtol_l_internal+0x400>
    0.00 :   49f29:  testb  $0x4,0x1(%rdi,%rdx,2)
    0.00 :   49f2e:  je     49f37 <__GI_____strtol_l_internal+0x447>
    0.00 :   49f30:  cmpl   $0x40,(%r10,%rdx,4)
    0.00 :   49f35:  jle    49ef0 <__GI_____strtol_l_internal+0x400>
    0.00 :   49f37:  mov    %r13,%rcx
    0.00 :   49f3a:  mov    %r12,%rdx
    0.00 :   49f3d:  mov    %rbx,%rdi
    0.00 :   49f40:  mov    $0x5,%r14d
    0.00 :   49f46:  call   527c0 <__correctly_grouped_prefixmb>
    0.00 :   49f4b:  movzbl (%rbx),%edx
    0.00 :   49f4e:  mov    $0xa,%edi
    0.00 :   49f53:  movabs $0x1999999999999999,%r8
    0.00 :   49f5d:  mov    %rax,%r13
    0.00 :   49f60:  jmp    49c00 <__GI_____strtol_l_internal+0x110>
    0.00 :   49f65:  movzbl 0x2(%rbx),%edx
    0.00 :   49f69:  mov    $0xf,%r14d
    0.00 :   49f6f:  add    $0x2,%rbx
    0.00 :   49f73:  xor    %ebp,%ebp
    0.00 :   49f75:  movabs $0xfffffffffffffff,%r8
    0.00 :   49f7f:  mov    $0x10,%edi
    0.00 :   49f84:  xor    %r13d,%r13d
    0.00 :   49f87:  jmp    49c00 <__GI_____strtol_l_internal+0x110>
    0.00 :   49f8c:  cmpq   $0x0,0x10(%rsp)
    0.00 :   49f92:  jne    49e6d <__GI_____strtol_l_internal+0x37d>
    0.00 :   49f98:  xor    %eax,%eax
    0.00 :   49f9a:  jmp    49bd0 <__GI_____strtol_l_internal+0xe0>
    0.00 :   49f9f:  nop
    0.00 :   49fa0:  movabs $0x1fffffffffffffff,%r8
    0.00 :   49faa:  mov    $0x7,%r14d
    0.00 :   49fb0:  mov    $0x8,%edi
    0.00 :   49fb5:  jmp    49db8 <__GI_____strtol_l_internal+0x2c8>
    0.00 :   49fba:  cmpb   $0x30,-0x2(%rcx)
    0.00 :   49fbe:  jne    49e6d <__GI_____strtol_l_internal+0x37d>
    0.00 :   49fc4:  mov    0x10(%rsp),%rax
    0.00 :   49fc9:  sub    $0x1,%rcx
    0.00 :   49fcd:  mov    %rcx,(%rax)
    0.00 :   49fd0:  xor    %eax,%eax
    0.00 :   49fd2:  jmp    49bd0 <__GI_____strtol_l_internal+0xe0>
    0.00 :   49fd7:  mov    %rbx,%rsi
    0.00 :   49fda:  jmp    49f37 <__GI_____strtol_l_internal+0x447>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   76.00 libc.so.6[875e9]
   24.00 libc.so.6[875c0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000875c0 <__GI___pthread_enable_asynccancel>:
         : 6     __GI___pthread_enable_asynccancel():
   24.00 :   875c0:  endbr64 // libc.so.6[875c0]
    0.00 :   875c4:  mov    %fs:0x10,%rcx
    0.00 :   875cd:  mov    0x308(%rcx),%edx
    0.00 :   875d3:  lea    0x308(%rcx),%rdi
    0.00 :   875da:  mov    %edx,%esi
    0.00 :   875dc:  or     $0x2,%esi
    0.00 :   875df:  cmp    %edx,%esi
    0.00 :   875e1:  je     87600 <__GI___pthread_enable_asynccancel+0x40>
    0.00 :   875e3:  mov    %edx,%eax
    0.00 :   875e5:  lock cmpxchg %esi,(%rdi)
   76.00 :   875e9:  mov    %eax,%esi // libc.so.6[875e9]
    0.00 :   875eb:  jne    87604 <__GI___pthread_enable_asynccancel+0x44>
    0.00 :   875ed:  and    $0x3b,%edx
    0.00 :   875f0:  or     $0x2,%edx
    0.00 :   875f3:  cmp    $0xa,%edx
    0.00 :   875f6:  je     87608 <__GI___pthread_enable_asynccancel+0x48>
    0.00 :   875f8:  mov    %esi,%eax
    0.00 :   875fa:  ret
    0.00 :   875fb:  nopl   0x0(%rax,%rax,1)
    0.00 :   87600:  mov    %edx,%esi
    0.00 :   87602:  jmp    875f8 <__GI___pthread_enable_asynccancel+0x38>
    0.00 :   87604:  mov    %eax,%edx
    0.00 :   87606:  jmp    875da <__GI___pthread_enable_asynccancel+0x1a>
    0.00 :   87608:  push   %rax
    0.00 :   87609:  movq   $0xffffffffffffffff,0x628(%rcx)
    0.00 :   87614:  mov    %fs:0x10,%rax
    0.00 :   8761d:  lock orl $0x10,0x308(%rax)
    0.00 :   87625:  mov    %fs:0x300,%rdi
    0.00 :   8762e:  call   93610 <__GI___pthread_unwind>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   52.96 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:95
   47.04 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:90
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (2 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009070 <check_match>:
         : 6    check_match():
    0.00 :   9070:   push   %r14
    0.00 :   9072:   movzwl 0x6(%r9),%eax
    0.00 :   9077:   mov    %rdi,%r10
    0.00 :   907a:   push   %r13
    0.00 :   907c:   mov    %rdx,%r13
    0.00 :   907f:   mov    %r8d,%edx
    0.00 :   9082:   push   %r12
    0.00 :   9084:   push   %rbp
    0.00 :   9085:   mov    %ecx,%ebp
    0.00 :   9087:   movzbl 0x4(%r9),%ecx
    0.00 :   908c:   push   %rbx
    0.00 :   908d:   mov    %r9,%rbx
    0.00 :   9090:   mov    0x40(%rsp),%r12
    0.00 :   9095:   and    $0xf,%ecx
    0.00 :   9098:   cmpq   $0x0,0x8(%r9)
    0.00 :   909d:   je     91b0 <check_match+0x140>
    0.00 :   90a3:   xor    %r8d,%r8d
    0.00 :   90a6:   test   %ax,%ax
    0.00 :   90a9:   mov    $0xfffffb98,%eax
    0.00 :   90ae:   sete   %r8b
    0.00 :   90b2:   sar    %cl,%eax
    0.00 :   90b4:   and    %edx,%r8d
    0.00 :   90b7:   and    $0x1,%eax
    0.00 :   90ba:   or     %eax,%r8d
    0.00 :   90bd:   jne    9190 <check_match+0x120>
   47.04 :   90c3:   cmp    %rsi,%rbx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:90
    0.00 :   90c6:   je     90df <check_match+0x6f>
    0.00 :   90c8:   mov    (%rbx),%edi
    0.00 :   90ca:   mov    %r10,%rsi
    0.00 :   90cd:   add    0x38(%rsp),%rdi
    0.00 :   90d2:   call   23430 <strcmp>
    0.00 :   90d7:   test   %eax,%eax
    0.00 :   90d9:   jne    9190 <check_match+0x120>
    0.00 :   90df:   mov    0x360(%r12),%rax
   52.96 :   90e7:   test   %r13,%r13 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:95
    0.00 :   90ea:   je     9140 <check_match+0xd0>
    0.00 :   90ec:   test   %rax,%rax
    0.00 :   90ef:   je     91d0 <check_match+0x160>
    0.00 :   90f5:   mov    0x30(%rsp),%edx
    0.00 :   90f9:   movzwl (%rax,%rdx,2),%r14d
    0.00 :   90fe:   mov    %r14,%rax
    0.00 :   9101:   and    $0x7fff,%eax
    0.00 :   9106:   lea    (%rax,%rax,2),%rdx
    0.00 :   910a:   mov    0x300(%r12),%rax
    0.00 :   9112:   lea    (%rax,%rdx,8),%rax
    0.00 :   9116:   mov    0x8(%rax),%ebp
    0.00 :   9119:   cmp    0x8(%r13),%ebp
    0.00 :   911d:   je     9198 <check_match+0x128>
    0.00 :   911f:   or     0xc(%r13),%ebp
    0.00 :   9123:   jne    9190 <check_match+0x120>
    0.00 :   9125:   test   %r14w,%r14w
    0.00 :   9129:   js     9190 <check_match+0x120>
    0.00 :   912b:   mov    %rbx,%rax
    0.00 :   912e:   pop    %rbx
    0.00 :   912f:   pop    %rbp
    0.00 :   9130:   pop    %r12
    0.00 :   9132:   pop    %r13
    0.00 :   9134:   pop    %r14
    0.00 :   9136:   ret
    0.00 :   9137:   nopw   0x0(%rax,%rax,1)
    0.00 :   9140:   test   %rax,%rax
    0.00 :   9143:   je     912b <check_match+0xbb>
    0.00 :   9145:   mov    0x30(%rsp),%edx
    0.00 :   9149:   movzwl (%rax,%rdx,2),%edx
    0.00 :   914d:   xor    %eax,%eax
    0.00 :   914f:   mov    %edx,%ecx
    0.00 :   9151:   and    $0x7fff,%ecx
    0.00 :   9157:   and    $0x2,%ebp
    0.00 :   915a:   sete   %al
    0.00 :   915d:   add    $0x2,%eax
    0.00 :   9160:   cmp    %eax,%ecx
    0.00 :   9162:   jl     912b <check_match+0xbb>
    0.00 :   9164:   test   %dx,%dx
    0.00 :   9167:   js     9190 <check_match+0x120>
    0.00 :   9169:   mov    0x50(%rsp),%rax
    0.00 :   916e:   mov    0x50(%rsp),%rsi
    0.00 :   9173:   mov    (%rax),%eax
    0.00 :   9175:   lea    0x1(%rax),%edx
    0.00 :   9178:   mov    %edx,(%rsi)
    0.00 :   917a:   test   %eax,%eax
    0.00 :   917c:   jne    9190 <check_match+0x120>
    0.00 :   917e:   mov    0x48(%rsp),%rax
    0.00 :   9183:   mov    %rbx,(%rax)
    0.00 :   9186:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   9190:   xor    %eax,%eax
    0.00 :   9192:   jmp    912e <check_match+0xbe>
    0.00 :   9194:   nopl   0x0(%rax)
    0.00 :   9198:   mov    0x0(%r13),%rsi
    0.00 :   919c:   mov    (%rax),%rdi
    0.00 :   919f:   call   23430 <strcmp>
    0.00 :   91a4:   test   %eax,%eax
    0.00 :   91a6:   je     912b <check_match+0xbb>
    0.00 :   91a8:   jmp    911f <check_match+0xaf>
    0.00 :   91ad:   nopl   (%rax)
    0.00 :   91b0:   cmp    $0x6,%cl
    0.00 :   91b3:   je     90a3 <check_match+0x33>
    0.00 :   91b9:   cmp    $0xfff1,%ax
    0.00 :   91bd:   je     90a3 <check_match+0x33>
    0.00 :   91c3:   xor    %eax,%eax
    0.00 :   91c5:   jmp    912e <check_match+0xbe>
    0.00 :   91ca:   nopw   0x0(%rax,%rax,1)
    0.00 :   91d0:   mov    0x10(%r13),%rdi
    0.00 :   91d4:   test   %rdi,%rdi
    0.00 :   91d7:   je     912b <check_match+0xbb>
    0.00 :   91dd:   mov    %r12,%rsi
    0.00 :   91e0:   call   ae50 <_dl_name_match_p>
    0.00 :   91e5:   test   %eax,%eax
    0.00 :   91e7:   je     912b <check_match+0xbb>
    0.00 :   91ed:   lea    0x22e24(%rip),%rcx        # 2c018 <__PRETTY_FUNCTION__.1>
    0.00 :   91f4:   mov    $0x6b,%edx
    0.00 :   91f9:   lea    0x20a51(%rip),%rsi        # 29c51 <_sys_errname+0x891>
    0.00 :   9200:   lea    0x22af9(%rip),%rdi        # 2bd00 <__PRETTY_FUNCTION__.9+0x10>
    0.00 :   9207:   call   19f20 <__GI___assert_fail>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   76.29 libpq.so.private14-5.14[1f370]
   23.71 libpq.so.private14-5.14[1f3ec]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (5 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001f370 <PQsendQueryParams@@Base>:
   76.29 :   1f370:  endbr64 // libpq.so.private14-5.14[1f370]
    0.00 :   1f374:  push   %r15
    0.00 :   1f376:  mov    %r9,%r15
    0.00 :   1f379:  push   %r14
    0.00 :   1f37b:  mov    %r8,%r14
    0.00 :   1f37e:  push   %r13
    0.00 :   1f380:  mov    %rcx,%r13
    0.00 :   1f383:  push   %r12
    0.00 :   1f385:  mov    %edx,%r12d
    0.00 :   1f388:  push   %rbp
    0.00 :   1f389:  mov    %rsi,%rbp
    0.00 :   1f38c:  mov    $0x1,%esi
    0.00 :   1f391:  push   %rbx
    0.00 :   1f392:  mov    %rdi,%rbx
    0.00 :   1f395:  sub    $0x8,%rsp
    0.00 :   1f399:  call   1ab80 <PQparamtype@@Base+0x2a0>
    0.00 :   1f39e:  test   %al,%al
    0.00 :   1f3a0:  je     1f412 <PQsendQueryParams@@Base+0xa2>
    0.00 :   1f3a2:  test   %rbp,%rbp
    0.00 :   1f3a5:  je     1f420 <PQsendQueryParams@@Base+0xb0>
    0.00 :   1f3a7:  cmp    $0xffff,%r12d
    0.00 :   1f3ae:  ja     1f3f0 <PQsendQueryParams@@Base+0x80>
    0.00 :   1f3b0:  sub    $0x8,%rsp
    0.00 :   1f3b4:  mov    %r14,%r9
    0.00 :   1f3b7:  mov    %r13,%r8
    0.00 :   1f3ba:  mov    %r12d,%ecx
    0.00 :   1f3bd:  mov    0x50(%rsp),%eax
    0.00 :   1f3c1:  lea    0x27a11(%rip),%rdx        # 46dd9 <PQencryptPasswordConn@@Base+0x19459>
    0.00 :   1f3c8:  mov    %rbp,%rsi
    0.00 :   1f3cb:  mov    %rbx,%rdi
    0.00 :   1f3ce:  push   %rax
    0.00 :   1f3cf:  push   0x50(%rsp)
    0.00 :   1f3d3:  push   %r15
    0.00 :   1f3d5:  call   1eda0 <PQsendPrepare@@Base+0x310>
    0.00 :   1f3da:  add    $0x20,%rsp
    0.00 :   1f3de:  add    $0x8,%rsp
    0.00 :   1f3e2:  pop    %rbx
    0.00 :   1f3e3:  pop    %rbp
    0.00 :   1f3e4:  pop    %r12
    0.00 :   1f3e6:  pop    %r13
    0.00 :   1f3e8:  pop    %r14
    0.00 :   1f3ea:  pop    %r15
   23.71 :   1f3ec:  ret // libpq.so.private14-5.14[1f3ec]
    0.00 :   1f3ed:  nopl   (%rax)
    0.00 :   1f3f0:  lea    0x129e1(%rip),%rdi        # 31dd8 <PQencryptPasswordConn@@Base+0x4458>
    0.00 :   1f3f7:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   1f3fc:  lea    0x418(%rbx),%rdi
    0.00 :   1f403:  mov    $0xffff,%edx
    0.00 :   1f408:  mov    %rax,%rsi
    0.00 :   1f40b:  xor    %eax,%eax
    0.00 :   1f40d:  call   cdd0 <appendPQExpBuffer@plt>
    0.00 :   1f412:  xor    %eax,%eax
    0.00 :   1f414:  jmp    1f3de <PQsendQueryParams@@Base+0x6e>
    0.00 :   1f416:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   1f420:  lea    0x12961(%rip),%rdi        # 31d88 <PQencryptPasswordConn@@Base+0x4408>
    0.00 :   1f427:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   1f42c:  lea    0x418(%rbx),%rdi
    0.00 :   1f433:  mov    %rax,%rsi
    0.00 :   1f436:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   1f43b:  xor    %eax,%eax
    0.00 :   1f43d:  jmp    1f3de <PQsendQueryParams@@Base+0x6e>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   29.39 libc.so.6[8fc74]
   25.48 libc.so.6[8fcba]
   23.25 libc.so.6[8fc27]
   21.88 libc.so.6[8fc20]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008fc20 <__GI___pthread_mutex_unlock_usercnt>:
         : 6     __GI___pthread_mutex_unlock_usercnt():
   21.88 :   8fc20:  endbr64 // libc.so.6[8fc20]
    0.00 :   8fc24:  mov    0x10(%rdi),%eax
   23.25 :   8fc27:  mov    %eax,%edx // libc.so.6[8fc27]
    0.00 :   8fc29:  and    $0x17f,%edx
    0.00 :   8fc2f:  test   $0x7c,%al
    0.00 :   8fc31:  jne    8fc88 <__GI___pthread_mutex_unlock_usercnt+0x68>
    0.00 :   8fc33:  sub    $0x18,%rsp
    0.00 :   8fc37:  test   %edx,%edx
    0.00 :   8fc39:  jne    8fc90 <__GI___pthread_mutex_unlock_usercnt+0x70>
    0.00 :   8fc3b:  movl   $0x0,0x8(%rdi)
    0.00 :   8fc42:  test   %esi,%esi
    0.00 :   8fc44:  je     8fc4a <__GI___pthread_mutex_unlock_usercnt+0x2a>
    0.00 :   8fc46:  subl   $0x1,0xc(%rdi)
    0.00 :   8fc4a:  mov    0x10(%rdi),%esi
    0.00 :   8fc4d:  and    $0x80,%esi
    0.00 :   8fc53:  jne    8fc70 <__GI___pthread_mutex_unlock_usercnt+0x50>
    0.00 :   8fc55:  cmpb   $0x0,0x14b99c(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   8fc5c:  je     8fc70 <__GI___pthread_mutex_unlock_usercnt+0x50>
    0.00 :   8fc5e:  movl   $0x0,(%rdi)
    0.00 :   8fc64:  jmp    8fc79 <__GI___pthread_mutex_unlock_usercnt+0x59>
    0.00 :   8fc66:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   8fc70:  xor    %eax,%eax
    0.00 :   8fc72:  xchg   %eax,(%rdi)
   29.39 :   8fc74:  cmp    $0x1,%eax // libc.so.6[8fc74]
    0.00 :   8fc77:  jg     8fcb0 <__GI___pthread_mutex_unlock_usercnt+0x90>
    0.00 :   8fc79:  nop
    0.00 :   8fc7a:  xor    %eax,%eax
    0.00 :   8fc7c:  add    $0x18,%rsp
    0.00 :   8fc80:  ret
    0.00 :   8fc81:  nopl   0x0(%rax)
    0.00 :   8fc88:  jmp    8f7b0 <__pthread_mutex_unlock_full>
    0.00 :   8fc8d:  nopl   (%rax)
    0.00 :   8fc90:  cmp    $0x100,%edx
    0.00 :   8fc96:  jne    8fcc1 <__GI___pthread_mutex_unlock_usercnt+0xa1>
    0.00 :   8fc98:  mov    0x10(%rdi),%esi
    0.00 :   8fc9b:  add    $0x18,%rsp
    0.00 :   8fc9f:  and    $0x80,%esi
    0.00 :   8fca5:  jmp    87c00 <__GI___lll_unlock_elision>
    0.00 :   8fcaa:  nopw   0x0(%rax,%rax,1)
    0.00 :   8fcb0:  mov    %rdi,0x8(%rsp)
    0.00 :   8fcb5:  call   87fa0 <__GI___lll_lock_wake>
   25.48 :   8fcba:  mov    0x8(%rsp),%rdi // libc.so.6[8fcba]
    0.00 :   8fcbf:  jmp    8fc79 <__GI___pthread_mutex_unlock_usercnt+0x59>
    0.00 :   8fcc1:  mov    0x10(%rdi),%eax
    0.00 :   8fcc4:  and    $0x7f,%eax
    0.00 :   8fcc7:  cmp    $0x1,%eax
    0.00 :   8fcca:  jne    8fceb <__GI___pthread_mutex_unlock_usercnt+0xcb>
    0.00 :   8fccc:  mov    %fs:0x2d0,%eax
    0.00 :   8fcd4:  cmp    %eax,0x8(%rdi)
    0.00 :   8fcd7:  je     8fce0 <__GI___pthread_mutex_unlock_usercnt+0xc0>
    0.00 :   8fcd9:  mov    $0x1,%eax
    0.00 :   8fcde:  jmp    8fc7c <__GI___pthread_mutex_unlock_usercnt+0x5c>
    0.00 :   8fce0:  subl   $0x1,0x4(%rdi)
    0.00 :   8fce4:  jne    8fc7a <__GI___pthread_mutex_unlock_usercnt+0x5a>
    0.00 :   8fce6:  jmp    8fc3b <__GI___pthread_mutex_unlock_usercnt+0x1b>
    0.00 :   8fceb:  mov    0x10(%rdi),%eax
    0.00 :   8fcee:  and    $0x7f,%eax
    0.00 :   8fcf1:  cmp    $0x3,%eax
    0.00 :   8fcf4:  je     8fc3b <__GI___pthread_mutex_unlock_usercnt+0x1b>
    0.00 :   8fcfa:  cmp    $0x2,%edx
    0.00 :   8fcfd:  jne    8fd16 <__GI___pthread_mutex_unlock_usercnt+0xf6>
    0.00 :   8fcff:  mov    %fs:0x2d0,%eax
    0.00 :   8fd07:  cmp    %eax,0x8(%rdi)
    0.00 :   8fd0a:  jne    8fcd9 <__GI___pthread_mutex_unlock_usercnt+0xb9>
    0.00 :   8fd0c:  cmpl   $0x0,(%rdi)
    0.00 :   8fd0f:  je     8fcd9 <__GI___pthread_mutex_unlock_usercnt+0xb9>
    0.00 :   8fd11:  jmp    8fc3b <__GI___pthread_mutex_unlock_usercnt+0x1b>
    0.00 :   8fd16:  lea    0x110493(%rip),%rcx        # 1a01b0 <blanks+0x190>
    0.00 :   8fd1d:  mov    $0x62,%edx
    0.00 :   8fd22:  lea    0x10823b(%rip),%rsi        # 197f64 <null+0xdaa>
    0.00 :   8fd29:  lea    0x10cb38(%rip),%rdi        # 19c868 <aliasfile.0+0xe20>
    0.00 :   8fd30:  call   35610 <__assert_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   44.02 libc.so.6[10dea4]
   34.12 libc.so.6[10de9c]
   21.86 libc.so.6[10de30]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000010de30 <__send>:
         : 6      __libc_send():
   21.86 :   10de30: endbr64 // libc.so.6[10de30]
    0.00 :   10de34: cmpb   $0x0,0xcd7bd(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   10de3b: mov    %ecx,%r10d
    0.00 :   10de3e: je     10de60 <__send+0x30>
    0.00 :   10de40: xor    %r9d,%r9d
    0.00 :   10de43: xor    %r8d,%r8d
    0.00 :   10de46: mov    $0x2c,%eax
    0.00 :   10de4b: syscall
    0.00 :   10de4d: cmp    $0xfffffffffffff000,%rax
    0.00 :   10de53: ja     10dec0 <__send+0x90>
    0.00 :   10de55: ret
    0.00 :   10de56: cs nopw 0x0(%rax,%rax,1)
    0.00 :   10de60: push   %rbp
    0.00 :   10de61: sub    $0x20,%rsp
    0.00 :   10de65: mov    %rdx,0x10(%rsp)
    0.00 :   10de6a: mov    %rsi,0x8(%rsp)
    0.00 :   10de6f: mov    %edi,(%rsp)
    0.00 :   10de72: mov    %ecx,0x1c(%rsp)
    0.00 :   10de76: call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   10de7b: mov    0x1c(%rsp),%r10d
    0.00 :   10de80: mov    (%rsp),%edi
    0.00 :   10de83: xor    %r9d,%r9d
    0.00 :   10de86: mov    %eax,%ebp
    0.00 :   10de88: mov    0x10(%rsp),%rdx
    0.00 :   10de8d: mov    0x8(%rsp),%rsi
    0.00 :   10de92: xor    %r8d,%r8d
    0.00 :   10de95: mov    $0x2c,%eax
    0.00 :   10de9a: syscall
   34.12 :   10de9c: cmp    $0xfffffffffffff000,%rax // libc.so.6[10de9c]
    0.00 :   10dea2: ja     10ded8 <__send+0xa8>
   44.02 :   10dea4: mov    %ebp,%edi // libc.so.6[10dea4]
    0.00 :   10dea6: mov    %rax,(%rsp)
    0.00 :   10deaa: call   87640 <__GI___pthread_disable_asynccancel>
    0.00 :   10deaf: mov    (%rsp),%rax
    0.00 :   10deb3: add    $0x20,%rsp
    0.00 :   10deb7: pop    %rbp
    0.00 :   10deb8: ret
    0.00 :   10deb9: nopl   0x0(%rax)
    0.00 :   10dec0: mov    0xc4f49(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dec7: neg    %eax
    0.00 :   10dec9: mov    %eax,%fs:(%rdx)
    0.00 :   10decc: mov    $0xffffffffffffffff,%rax
    0.00 :   10ded3: ret
    0.00 :   10ded4: nopl   0x0(%rax)
    0.00 :   10ded8: mov    0xc4f31(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dedf: neg    %eax
    0.00 :   10dee1: mov    %eax,%fs:(%rdx)
    0.00 :   10dee4: mov    $0xffffffffffffffff,%rax
    0.00 :   10deeb: jmp    10dea4 <__send+0x74>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   73.22 [nf_conntrack][3c0]
   63.39 [nf_conntrack][3fd]
   63.39 [nf_conntrack][3fc]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (5 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000003c0 <hash_conntrack_raw>:
         : 6   hash_conntrack_raw():
   36.61 :   3c0:    call   3c5 <hash_conntrack_raw+0x5> // [nf_conntrack][3c0]
    0.00 :   3c5:    push   %rbp
    0.00 :   3c6:    mov    $0x6,%ecx
    0.00 :   3cb:    mov    %rsp,%rbp
    0.00 :   3ce:    push   %r14
    0.00 :   3d0:    mov    %esi,%r14d
    0.00 :   3d3:    push   %r13
    0.00 :   3d5:    mov    %rdx,%r13
    0.00 :   3d8:    push   %r12
    0.00 :   3da:    push   %rbx
    0.00 :   3db:    mov    %rdi,%rbx
    0.00 :   3de:    sub    $0x40,%rsp
    0.00 :   3e2:    mov    %gs:0x28,%rax
    0.00 :   3eb:    mov    %rax,0x38(%rsp)
    0.00 :   3f0:    xor    %eax,%eax
    0.00 :   3f2:    lea    0x8(%rsp),%r12
    0.00 :   3f7:    mov    %r12,%rdi
    0.00 :   3fa:    rep stos %rax,%es:(%rdi)
   63.39 :   3fd:    jmp    482 <hash_conntrack_raw+0xc2> // [nf_conntrack][3fd]
    0.00 :   402:    mov    (%rbx),%rax
    0.00 :   405:    mov    0x1c(%rbx),%rdx
    0.00 :   409:    mov    $0x30,%esi
    0.00 :   40e:    mov    %r12,%rdi
    0.00 :   411:    mov    %r14d,0x2c(%rsp)
    0.00 :   416:    mov    %rax,0x8(%rsp)
    0.00 :   41b:    mov    0x8(%rbx),%rax
    0.00 :   41f:    mov    %rdx,0x24(%rsp)
    0.00 :   424:    movzbl 0x26(%rbx),%edx
    0.00 :   428:    mov    %rax,0x10(%rsp)
    0.00 :   42d:    mov    0x10(%rbx),%eax
    0.00 :   430:    shl    $0x10,%edx
    0.00 :   433:    mov    %eax,0x18(%rsp)
    0.00 :   437:    mov    0x14(%rbx),%rax
    0.00 :   43b:    mov    %rax,0x1c(%rsp)
    0.00 :   440:    mov    0x140(%r13),%eax
    0.00 :   447:    mov    %eax,0x30(%rsp)
    0.00 :   44b:    movzwl 0x24(%rbx),%eax
    0.00 :   44f:    or     %edx,%eax
    0.00 :   451:    mov    $0x0,%rdx
    0.00 :   458:    mov    %eax,0x34(%rsp)
    0.00 :   45c:    call   461 <hash_conntrack_raw+0xa1>
    0.00 :   461:    mov    0x38(%rsp),%rdx
    0.00 :   466:    sub    %gs:0x28,%rdx
    0.00 :   46f:    jne    4d4 <hash_conntrack_raw+0x114>
    0.00 :   471:    add    $0x40,%rsp
    0.00 :   475:    pop    %rbx
    0.00 :   476:    pop    %r12
    0.00 :   478:    pop    %r13
    0.00 :   47a:    pop    %r14
    0.00 :   47c:    pop    %rbp
    0.00 :   47d:    jmp    482 <hash_conntrack_raw+0xc2>
    0.00 :   482:    mov    %rsp,%rsi
    0.00 :   485:    mov    $0x0,%rdi
    0.00 :   48c:    movq   $0x0,(%rsp)
    0.00 :   494:    call   499 <hash_conntrack_raw+0xd9>
    0.00 :   499:    test   %al,%al
    0.00 :   49b:    je     402 <hash_conntrack_raw+0x42>
    0.00 :   4a1:    mov    $0x10,%esi
    0.00 :   4a6:    mov    $0x0,%rdi
    0.00 :   4ad:    call   4b2 <hash_conntrack_raw+0xf2>
    0.00 :   4b2:    mov    $0x0,%rcx
    0.00 :   4b9:    mov    $0x0,%rsi
    0.00 :   4c0:    mov    $0x0,%rdi
    0.00 :   4c7:    mov    %rsp,%rdx
    0.00 :   4ca:    call   4cf <hash_conntrack_raw+0x10f>
    0.00 :   4cf:    jmp    402 <hash_conntrack_raw+0x42>
    0.00 :   4d4:    call   4d9 <hash_conntrack_raw+0x119>
         :
         : 75  Disassembly of section .text.unlikely:
         :
         : 77  00000000000003c0 <nf_ct_resolve_clash+0x1b0>:
         : 78  nf_ct_resolve_clash():
   36.61 :   3c0:    add    %al,(%rax) // [nf_conntrack][3c0]
    0.00 :   3c2:    jmp    3f6 <nf_ct_resolve_clash+0x1e6>
    0.00 :   3c4:    mov    $0x0,%rdi
    0.00 :   3cb:    call   3d0 <nf_ct_resolve_clash+0x1c0>
    0.00 :   3d0:    mov    $0x0,%rdi
    0.00 :   3d7:    mov    0xb40(%r12),%rax
    0.00 :   3df:    incl   %gs:0x14(%rax)
    0.00 :   3e3:    call   3e8 <nf_ct_resolve_clash+0x1d8>
    0.00 :   3e8:    mov    0xb40(%r12),%rax
    0.00 :   3f0:    incl   %gs:0xc(%rax)
    0.00 :   3f4:    xor    %eax,%eax
    0.00 :   3f6:    pop    %rbx
    0.00 :   3f7:    pop    %rbp
    0.00 :   3f8:    pop    %r12
    0.00 :   3fa:    pop    %r13
   63.39 :   3fc:    pop    %r14 // [nf_conntrack][3fc]
    0.00 :   3fe:    jmp    403 <__nf_conntrack_alloc.cold>
         :
         : 97  0000000000000403 <__nf_conntrack_alloc.cold>:
         : 98  __nf_conntrack_alloc.cold():
    0.00 :   403:    mov    $0x0,%rdi
    0.00 :   40a:    call   40f <__nf_conntrack_alloc.cold+0xc>
    0.00 :   40f:    jmp    414 <__nf_conntrack_confirm.cold>
         :
         : 103 0000000000000414 <__nf_conntrack_confirm.cold>:
         : 104 __nf_conntrack_confirm.cold():
    0.00 :   414:    mov    0x20(%rsp),%rdi
    0.00 :   419:    mov    %r12d,%edx
    0.00 :   41c:    call   210 <nf_ct_resolve_clash>
    0.00 :   421:    mov    %eax,%ebx
    0.00 :   423:    jmp    428 <nf_conntrack_in.cold>
         :
         : 111 0000000000000428 <nf_conntrack_in.cold>:
         : 112 nf_conntrack_in.cold():
    0.00 :   428:    cmp    $0x2,%dl
    0.00 :   42b:    jne    465 <nf_conntrack_in.cold+0x3d>
    0.00 :   42d:    sub    $0x1,%r8b
    0.00 :   431:    jne    486 <nf_conntrack_in.cold+0x5e>
    0.00 :   433:    mov    0x4(%rsp),%edx
    0.00 :   437:    mov    0x10(%rsp),%rdi
    0.00 :   43c:    mov    %rbp,%rcx
    0.00 :   43f:    mov    %r14,%rsi
    0.00 :   442:    call   447 <nf_conntrack_in.cold+0x1f>
    0.00 :   447:    mov    %eax,%edx
    0.00 :   449:    test   %edx,%edx
    0.00 :   44b:    jg     48b <nf_conntrack_in.cold+0x63>
    0.00 :   44d:    mov    0x20(%rbp),%rax
    0.00 :   451:    mov    0xb40(%rax),%rax
    0.00 :   458:    incl   %gs:0x1c(%rax)
    0.00 :   45c:    mov    %edx,%ebx
    0.00 :   45e:    neg    %ebx
    0.00 :   460:    jmp    465 <nf_conntrack_in.cold+0x3d>
    0.00 :   465:    cmp    $0xa,%dl
    0.00 :   468:    jne    486 <nf_conntrack_in.cold+0x5e>
    0.00 :   46a:    test   %al,%al
    0.00 :   46c:    je     486 <nf_conntrack_in.cold+0x5e>
    0.00 :   46e:    mov    0x4(%rsp),%edx
    0.00 :   472:    mov    0x10(%rsp),%rdi
    0.00 :   477:    mov    %rbp,%rcx
    0.00 :   47a:    mov    %r14,%rsi
    0.00 :   47d:    call   482 <nf_conntrack_in.cold+0x5a>
    0.00 :   482:    mov    %eax,%edx
    0.00 :   484:    jmp    449 <nf_conntrack_in.cold+0x21>
    0.00 :   486:    mov    $0x1,%edx
    0.00 :   48b:    cmpq   $0x0,0x68(%r14)
    0.00 :   490:    je     499 <nf_conntrack_in.cold+0x71>
    0.00 :   492:    mov    %edx,%ebx
    0.00 :   494:    jmp    499 <nf_conntrack_in.cold+0x71>
    0.00 :   499:    movzbl 0x1b(%rsp),%r8d
    0.00 :   49f:    jmp    4a4 <nf_ct_expect_related_report.cold>
         :
         : 150 00000000000004a4 <nf_ct_expect_related_report.cold>:
         : 151 nf_ct_expect_related_report.cold():
    0.00 :   4a4:    mov    $0x0,%rdi
    0.00 :   4ab:    call   4b0 <nf_ct_expect_related_report.cold+0xc>
    0.00 :   4b0:    jmp    4b5 <nf_conntrack_helper_register.cold>
         :
         : 156 00000000000004b5 <nf_conntrack_helper_register.cold>:
         : 157 nf_conntrack_helper_register.cold():
    0.00 :   4b5:    mov    $0x0,%rdi
    0.00 :   4bc:    call   4c1 <nf_conntrack_helper_register.cold+0xc>
    0.00 :   4c1:    mov    $0x0,%rdi
    0.00 :   4c8:    call   4cd <nf_l4proto_log_invalid>
         :
         : 163 00000000000004cd <nf_l4proto_log_invalid>:
         : 164 nf_l4proto_log_invalid():
    0.00 :   4cd:    call   4d2 <nf_l4proto_log_invalid+0x5>
    0.00 :   4d2:    push   %rbp
    0.00 :   4d3:    xor    %eax,%eax
    0.00 :   4d5:    mov    %rdi,%r11
    0.00 :   4d8:    rex.W

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   73.89 libc.so.6[11ba70]
   26.11 libc.so.6[11ba78]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000011ba70 <htonl>:
         : 6      ntohl():
   73.89 :   11ba70: endbr64 // libc.so.6[11ba70]
    0.00 :   11ba74: mov    %edi,%eax
    0.00 :   11ba76: bswap  %eax
   26.11 :   11ba78: ret // libc.so.6[11ba78]

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   30.81 [nf_nat][3112]
   26.63 [nf_nat][30e5]
   23.68 [nf_nat][30bf]
   18.87 [nf_nat][30a0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (4 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000030a0 <nf_nat_ipv4_pre_routing>:
         : 6    nf_nat_ipv4_pre_routing():
   18.87 :   30a0:   call   30a5 <nf_nat_ipv4_pre_routing+0x5> // [nf_nat][30a0]
    0.00 :   30a5:   push   %rbp
    0.00 :   30a6:   push   %rbx
    0.00 :   30a7:   mov    %rsi,%rbx
    0.00 :   30aa:   movzwl 0xb8(%rsi),%eax
    0.00 :   30b1:   add    0xc8(%rsi),%rax
    0.00 :   30b8:   mov    0x68(%rsi),%rsi
    0.00 :   30bc:   mov    0x10(%rax),%ebp
   23.68 :   30bf:   cmp    $0x7,%rsi // [nf_nat][30bf]
    0.00 :   30c3:   jbe    3128 <nf_nat_ipv4_pre_routing+0x88>
    0.00 :   30c5:   mov    %esi,%r8d
    0.00 :   30c8:   mov    $0x12,%ecx
    0.00 :   30cd:   and    $0x7,%r8d
    0.00 :   30d1:   bt     %r8,%rcx
    0.00 :   30d5:   jae    30dd <nf_nat_ipv4_pre_routing+0x3d>
    0.00 :   30d7:   cmpb   $0x1,0x9(%rax)
    0.00 :   30db:   je     30f1 <nf_nat_ipv4_pre_routing+0x51>
    0.00 :   30dd:   mov    %rbx,%rsi
    0.00 :   30e0:   call   30e5 <nf_nat_ipv4_pre_routing+0x45>
   26.63 :   30e5:   cmp    $0x1,%eax // [nf_nat][30e5]
    0.00 :   30e8:   je     310b <nf_nat_ipv4_pre_routing+0x6b>
    0.00 :   30ea:   pop    %rbx
    0.00 :   30eb:   pop    %rbp
    0.00 :   30ec:   jmp    30f1 <nf_nat_ipv4_pre_routing+0x51>
    0.00 :   30f1:   movzbl (%rdx),%ecx
    0.00 :   30f4:   and    $0xfffffffffffffff8,%rsi
    0.00 :   30f8:   mov    %r8d,%edx
    0.00 :   30fb:   mov    %rbx,%rdi
    0.00 :   30fe:   call   3103 <nf_nat_ipv4_pre_routing+0x63>
    0.00 :   3103:   mov    %eax,%edx
    0.00 :   3105:   xor    %eax,%eax
    0.00 :   3107:   test   %edx,%edx
    0.00 :   3109:   je     30ea <nf_nat_ipv4_pre_routing+0x4a>
    0.00 :   310b:   movzwl 0xb8(%rbx),%eax
   30.81 :   3112:   mov    0xc8(%rbx),%rdx // [nf_nat][3112]
    0.00 :   3119:   cmp    %ebp,0x10(%rdx,%rax,1)
    0.00 :   311d:   je     3128 <nf_nat_ipv4_pre_routing+0x88>
    0.00 :   311f:   mov    0x58(%rbx),%rdi
    0.00 :   3123:   test   %rdi,%rdi
    0.00 :   3126:   jne    3134 <nf_nat_ipv4_pre_routing+0x94>
    0.00 :   3128:   mov    $0x1,%eax
    0.00 :   312d:   pop    %rbx
    0.00 :   312e:   pop    %rbp
    0.00 :   312f:   jmp    3134 <nf_nat_ipv4_pre_routing+0x94>
    0.00 :   3134:   test   $0x1,%dil
    0.00 :   3138:   je     3144 <nf_nat_ipv4_pre_routing+0xa4>
    0.00 :   313a:   movq   $0x0,0x58(%rbx)
    0.00 :   3142:   jmp    3128 <nf_nat_ipv4_pre_routing+0x88>
    0.00 :   3144:   and    $0xfffffffffffffffe,%rdi
    0.00 :   3148:   call   314d <nf_nat_ipv4_pre_routing+0xad>
    0.00 :   314d:   jmp    313a <nf_nat_ipv4_pre_routing+0x9a>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[132b0]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (4 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000132b0 <PQmakeEmptyPGresult@@Base>:
  100.00 :   132b0:  endbr64 // libpq.so.private14-5.14[132b0]
    0.00 :   132b4:  push   %r12
    0.00 :   132b6:  mov    %esi,%r12d
    0.00 :   132b9:  push   %rbp
    0.00 :   132ba:  mov    %rdi,%rbp
    0.00 :   132bd:  mov    $0xd8,%edi
    0.00 :   132c2:  push   %rbx
    0.00 :   132c3:  call   cc90 <malloc@plt>
    0.00 :   132c8:  test   %rax,%rax
    0.00 :   132cb:  je     13448 <PQmakeEmptyPGresult@@Base+0x198>
    0.00 :   132d1:  pxor   %xmm0,%xmm0
    0.00 :   132d5:  mov    %r12d,0x28(%rax)
    0.00 :   132d9:  mov    %rax,%rbx
    0.00 :   132dc:  movq   $0x0,(%rax)
    0.00 :   132e3:  movq   $0x0,0x18(%rax)
    0.00 :   132eb:  movq   $0x0,0x20(%rax)
    0.00 :   132f3:  movb   $0x0,0x2c(%rax)
    0.00 :   132f7:  movl   $0x0,0x6c(%rax)
    0.00 :   132fe:  movq   $0x0,0x90(%rax)
    0.00 :   13309:  movl   $0x0,0x98(%rax)
    0.00 :   13313:  movq   $0x0,0xb0(%rax)
    0.00 :   1331e:  movb   $0x0,0xb8(%rax)
    0.00 :   13325:  movq   $0x0,0xc0(%rax)
    0.00 :   13330:  movq   $0x0,0xc8(%rax)
    0.00 :   1333b:  movq   $0xd8,0xd0(%rax)
    0.00 :   13346:  movups %xmm0,0x8(%rax)
    0.00 :   1334a:  movups %xmm0,0xa0(%rax)
    0.00 :   13351:  test   %rbp,%rbp
    0.00 :   13354:  je     13400 <PQmakeEmptyPGresult@@Base+0x150>
    0.00 :   1335a:  movdqu 0x128(%rbp),%xmm1
    0.00 :   13362:  movdqu 0x138(%rbp),%xmm2
    0.00 :   1336a:  movups %xmm1,0x70(%rax)
    0.00 :   1336e:  movups %xmm2,0x80(%rax)
    0.00 :   13375:  mov    0x318(%rbp),%eax
    0.00 :   1337b:  mov    %eax,0x9c(%rbx)
    0.00 :   13381:  cmp    $0x4,%r12d
    0.00 :   13385:  ja     133a0 <PQmakeEmptyPGresult@@Base+0xf0>
    0.00 :   13387:  mov    0x150(%rbp),%esi
    0.00 :   1338d:  test   %esi,%esi
    0.00 :   1338f:  jg     133c3 <PQmakeEmptyPGresult@@Base+0x113>
    0.00 :   13391:  mov    %rbx,%rax
    0.00 :   13394:  pop    %rbx
    0.00 :   13395:  pop    %rbp
    0.00 :   13396:  pop    %r12
    0.00 :   13398:  ret
    0.00 :   13399:  nopl   0x0(%rax)
    0.00 :   133a0:  sub    $0x8,%r12d
    0.00 :   133a4:  cmp    $0x1,%r12d
    0.00 :   133a8:  jbe    13387 <PQmakeEmptyPGresult@@Base+0xd7>
    0.00 :   133aa:  lea    0x418(%rbp),%rsi
    0.00 :   133b1:  mov    %rbx,%rdi
    0.00 :   133b4:  call   182c0 <PQdsplen@@Base+0xd0>
    0.00 :   133b9:  mov    0x150(%rbp),%esi
    0.00 :   133bf:  test   %esi,%esi
    0.00 :   133c1:  jle    13391 <PQmakeEmptyPGresult@@Base+0xe1>
    0.00 :   133c3:  mov    0x148(%rbp),%rdi
    0.00 :   133ca:  lea    0xd0(%rbx),%rdx
    0.00 :   133d1:  call   d5b0 <getpwuid_r@plt+0x370>
    0.00 :   133d6:  mov    %rax,0x90(%rbx)
    0.00 :   133dd:  test   %rax,%rax
    0.00 :   133e0:  je     13440 <PQmakeEmptyPGresult@@Base+0x190>
    0.00 :   133e2:  mov    0x150(%rbp),%eax
    0.00 :   133e8:  mov    %eax,0x98(%rbx)
    0.00 :   133ee:  mov    %rbx,%rax
    0.00 :   133f1:  pop    %rbx
    0.00 :   133f2:  pop    %rbp
    0.00 :   133f3:  pop    %r12
    0.00 :   133f5:  ret
    0.00 :   133f6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   13400:  movq   $0x0,0x70(%rax)
    0.00 :   13408:  movq   $0x0,0x78(%rax)
    0.00 :   13410:  movq   $0x0,0x80(%rax)
    0.00 :   1341b:  movq   $0x0,0x88(%rax)
    0.00 :   13426:  movl   $0x0,0x9c(%rax)
    0.00 :   13430:  mov    %rbx,%rax
    0.00 :   13433:  pop    %rbx
    0.00 :   13434:  pop    %rbp
    0.00 :   13435:  pop    %r12
    0.00 :   13437:  ret
    0.00 :   13438:  nopl   0x0(%rax,%rax,1)
    0.00 :   13440:  mov    %rbx,%rdi
    0.00 :   13443:  call   c1a0 <PQclear@plt>
    0.00 :   13448:  xor    %ebx,%ebx
    0.00 :   1344a:  jmp    13391 <PQmakeEmptyPGresult@@Base+0xe1>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   68.59 libc.so.6[4d4f0]
   31.41 libc.so.6[4d535]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000004d4f0 <wcstombs>:
         : 6     wcstombs():
   68.59 :   4d4f0:  endbr64 // libc.so.6[4d4f0]
    0.00 :   4d4f4:  sub    $0x28,%rsp
    0.00 :   4d4f8:  mov    %rsi,0x8(%rsp)
    0.00 :   4d4fd:  lea    0x10(%rsp),%rcx
    0.00 :   4d502:  lea    0x8(%rsp),%rsi
    0.00 :   4d507:  mov    %fs:0x28,%rax
    0.00 :   4d510:  mov    %rax,0x18(%rsp)
    0.00 :   4d515:  xor    %eax,%eax
    0.00 :   4d517:  movq   $0x0,0x10(%rsp)
    0.00 :   4d520:  call   b4590 <wcsrtombs>
    0.00 :   4d525:  mov    0x18(%rsp),%rdx
    0.00 :   4d52a:  sub    %fs:0x28,%rdx
    0.00 :   4d533:  jne    4d53a <wcstombs+0x4a>
   31.41 :   4d535:  add    $0x28,%rsp // libc.so.6[4d535]
    0.00 :   4d539:  ret
    0.00 :   4d53a:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   43.34 dbt2-client[40787a]
   32.83 dbt2-client[40789f]
   23.83 dbt2-client[4078d4]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040787a <_send>:
         : 6      _send():
   43.34 :   40787a: push   %rbp // dbt2-client[40787a]
    0.00 :   40787b: mov    %rsp,%rbp
    0.00 :   40787e: sub    $0x20,%rsp
    0.00 :   407882: mov    %edi,-0x14(%rbp)
    0.00 :   407885: mov    %rsi,-0x20(%rbp)
    0.00 :   407889: mov    %edx,-0x18(%rbp)
    0.00 :   40788c: movl   $0x0,-0x8(%rbp)
    0.00 :   407893: mov    -0x18(%rbp),%eax
    0.00 :   407896: mov    %eax,-0x4(%rbp)
    0.00 :   407899: mov    -0x4(%rbp),%eax
    0.00 :   40789c: movslq %eax,%rdx
   32.83 :   40789f: mov    -0x20(%rbp),%rsi // dbt2-client[40789f]
    0.00 :   4078a3: mov    -0x14(%rbp),%eax
    0.00 :   4078a6: mov    $0x0,%ecx
    0.00 :   4078ab: mov    %eax,%edi
    0.00 :   4078ad: call   407140 <send@plt>
    0.00 :   4078b2: mov    %eax,-0x8(%rbp)
    0.00 :   4078b5: cmpl   $0xffffffff,-0x8(%rbp)
    0.00 :   4078b9: jne    4078c2 <_send+0x48>
    0.00 :   4078bb: mov    $0xffffffff,%eax
    0.00 :   4078c0: jmp    4078e9 <_send+0x6f>
    0.00 :   4078c2: cmpl   $0x0,-0x8(%rbp)
    0.00 :   4078c6: jne    4078cf <_send+0x55>
    0.00 :   4078c8: mov    $0x0,%eax
    0.00 :   4078cd: jmp    4078e9 <_send+0x6f>
    0.00 :   4078cf: mov    -0x8(%rbp),%eax
    0.00 :   4078d2: cltq
   23.83 :   4078d4: add    %rax,-0x20(%rbp) // dbt2-client[4078d4]
    0.00 :   4078d8: mov    -0x8(%rbp),%eax
    0.00 :   4078db: sub    %eax,-0x4(%rbp)
    0.00 :   4078de: mov    -0x8(%rbp),%eax
    0.00 :   4078e1: cmp    -0x18(%rbp),%eax
    0.00 :   4078e4: jne    407899 <_send+0x1f>
    0.00 :   4078e6: mov    -0x8(%rbp),%eax
    0.00 :   4078e9: leave
    0.00 :   4078ea: ret

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   59.82 dbt2-client[413235]
   40.18 dbt2-client[41319a]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000413166 <listener_worker>:
         : 6      listener_worker():
    0.00 :   413166: push   %rbp
    0.00 :   413167: mov    %rsp,%rbp
    0.00 :   41316a: sub    $0x20,%rsp
    0.00 :   41316e: mov    %rdi,-0x18(%rbp)
    0.00 :   413172: mov    -0x18(%rbp),%rax
    0.00 :   413176: mov    %rax,-0x8(%rbp)
    0.00 :   41317a: jmp    41322f <listener_worker+0xc9>
    0.00 :   41317f: mov    -0x8(%rbp),%rax
    0.00 :   413183: lea    0x8(%rax),%rdx
    0.00 :   413187: mov    -0x8(%rbp),%rax
    0.00 :   41318b: mov    (%rax),%eax
    0.00 :   41318d: mov    %rdx,%rsi
    0.00 :   413190: mov    %eax,%edi
    0.00 :   413192: call   407a39 <receive_transaction_data>
    0.00 :   413197: mov    %eax,-0xc(%rbp)
   40.18 :   41319a: cmpl   $0x3,-0xc(%rbp) // dbt2-client[41319a]
    0.00 :   41319e: jne    4131c0 <listener_worker+0x5a>
    0.00 :   4131a0: mov    $0x41c6a0,%edi
    0.00 :   4131a5: call   4119dc <sem_wait>
    0.00 :   4131aa: mov    -0x8(%rbp),%rax
    0.00 :   4131ae: mov    %rax,%rdi
    0.00 :   4131b1: call   4072e0 <free@plt>
    0.00 :   4131b6: mov    $0x0,%edi
    0.00 :   4131bb: call   4074b0 <pthread_exit@plt>
    0.00 :   4131c0: cmpl   $0x0,-0xc(%rbp)
    0.00 :   4131c4: jne    4131e1 <listener_worker+0x7b>
    0.00 :   4131c6: mov    $0x417248,%edx
    0.00 :   4131cb: mov    $0x88,%esi
    0.00 :   4131d0: mov    $0x4170d8,%edi
    0.00 :   4131d5: mov    $0x0,%eax
    0.00 :   4131da: call   40840f <log_error_message>
    0.00 :   4131df: jmp    41322f <listener_worker+0xc9>
    0.00 :   4131e1: mov    -0x8(%rbp),%rax
    0.00 :   4131e5: mov    %rax,%rdi
    0.00 :   4131e8: call   413448 <enqueue_transaction>
    0.00 :   4131ed: mov    $0x0,%eax
    0.00 :   4131f2: call   412ea7 <get_node>
    0.00 :   4131f7: mov    %rax,-0x8(%rbp)
    0.00 :   4131fb: cmpq   $0x0,-0x8(%rbp)
    0.00 :   413200: jne    41322f <listener_worker+0xc9>
    0.00 :   413202: mov    $0x417269,%edi
    0.00 :   413207: call   407450 <puts@plt>
    0.00 :   41320c: mov    $0x417288,%edx
    0.00 :   413211: mov    $0x95,%esi
    0.00 :   413216: mov    $0x4170d8,%edi
    0.00 :   41321b: mov    $0x0,%eax
    0.00 :   413220: call   40840f <log_error_message>
    0.00 :   413225: mov    $0x1,%edi
    0.00 :   41322a: call   407300 <exit@plt>
    0.00 :   41322f: mov    0x930b(%rip),%eax        # 41c540 <exiting>
   59.82 :   413235: test   %eax,%eax // dbt2-client[413235]
    0.00 :   413237: je     41317f <listener_worker+0x19>
    0.00 :   41323d: mov    $0x0,%eax
    0.00 :   413242: leave
    0.00 :   413243: ret

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   38.34 dbt2-client[40a2d5]
   33.17 dbt2-client[40a261]
   28.49 dbt2-client[40a367]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040a0ac <execute_payment_libpq>:
         : 6      execute_payment_libpq():
    0.00 :   40a0ac: push   %rbp
    0.00 :   40a0ad: mov    %rsp,%rbp
    0.00 :   40a0b0: sub    $0x100,%rsp
    0.00 :   40a0b7: mov    %rdi,-0xf8(%rbp)
    0.00 :   40a0be: mov    %rsi,-0x100(%rbp)
    0.00 :   40a0c5: movl   $0x1,-0x60(%rbp)
    0.00 :   40a0cc: movl   $0x1,-0x5c(%rbp)
    0.00 :   40a0d3: movl   $0x1,-0x58(%rbp)
    0.00 :   40a0da: movl   $0x1,-0x54(%rbp)
    0.00 :   40a0e1: movl   $0x1,-0x50(%rbp)
    0.00 :   40a0e8: movl   $0x1,-0x4c(%rbp)
    0.00 :   40a0ef: movl   $0x1,-0x48(%rbp)
    0.00 :   40a0f6: movl   $0x4,-0x80(%rbp)
    0.00 :   40a0fd: movl   $0x4,-0x7c(%rbp)
    0.00 :   40a104: movl   $0x4,-0x78(%rbp)
    0.00 :   40a10b: movl   $0x4,-0x74(%rbp)
    0.00 :   40a112: movl   $0x4,-0x70(%rbp)
    0.00 :   40a119: movl   $0x0,-0x6c(%rbp)
    0.00 :   40a120: movl   $0x4,-0x68(%rbp)
    0.00 :   40a127: mov    -0x100(%rbp),%rax
    0.00 :   40a12e: mov    0x18(%rax),%eax
    0.00 :   40a131: mov    %eax,%edi
    0.00 :   40a133: call   4071b0 <htonl@plt>
    0.00 :   40a138: mov    %eax,-0xd4(%rbp)
    0.00 :   40a13e: mov    -0x100(%rbp),%rax
    0.00 :   40a145: mov    0x8(%rax),%eax
    0.00 :   40a148: mov    %eax,%edi
    0.00 :   40a14a: call   4071b0 <htonl@plt>
    0.00 :   40a14f: mov    %eax,-0xd8(%rbp)
    0.00 :   40a155: mov    -0x100(%rbp),%rax
    0.00 :   40a15c: mov    0x1c(%rax),%eax
    0.00 :   40a15f: mov    %eax,%edi
    0.00 :   40a161: call   4071b0 <htonl@plt>
    0.00 :   40a166: mov    %eax,-0xdc(%rbp)
    0.00 :   40a16c: mov    -0x100(%rbp),%rax
    0.00 :   40a173: mov    0x4(%rax),%eax
    0.00 :   40a176: mov    %eax,%edi
    0.00 :   40a178: call   4071b0 <htonl@plt>
    0.00 :   40a17d: mov    %eax,-0xe0(%rbp)
    0.00 :   40a183: mov    -0x100(%rbp),%rax
    0.00 :   40a18a: mov    (%rax),%eax
    0.00 :   40a18c: mov    %eax,%edi
    0.00 :   40a18e: call   4071b0 <htonl@plt>
    0.00 :   40a193: mov    %eax,-0xe4(%rbp)
    0.00 :   40a199: mov    -0x100(%rbp),%rax
    0.00 :   40a1a0: movsd  0x10(%rax),%xmm0
    0.00 :   40a1a5: cvtsd2ss %xmm0,%xmm0
    0.00 :   40a1a9: movss  %xmm0,-0xec(%rbp)
    0.00 :   40a1b1: mov    -0xec(%rbp),%eax
    0.00 :   40a1b7: mov    %eax,%edi
    0.00 :   40a1b9: call   4071b0 <htonl@plt>
    0.00 :   40a1be: mov    %eax,-0xe8(%rbp)
    0.00 :   40a1c4: mov    -0x100(%rbp),%rax
    0.00 :   40a1cb: lea    0x20(%rax),%rcx
    0.00 :   40a1cf: lea    -0xd0(%rbp),%rax
    0.00 :   40a1d6: mov    $0x44,%edx
    0.00 :   40a1db: mov    %rcx,%rsi
    0.00 :   40a1de: mov    %rax,%rdi
    0.00 :   40a1e1: call   407210 <wcstombs@plt>
    0.00 :   40a1e6: lea    -0xd4(%rbp),%rax
    0.00 :   40a1ed: mov    %rax,-0x40(%rbp)
    0.00 :   40a1f1: lea    -0xd8(%rbp),%rax
    0.00 :   40a1f8: mov    %rax,-0x38(%rbp)
    0.00 :   40a1fc: lea    -0xdc(%rbp),%rax
    0.00 :   40a203: mov    %rax,-0x30(%rbp)
    0.00 :   40a207: lea    -0xe0(%rbp),%rax
    0.00 :   40a20e: mov    %rax,-0x28(%rbp)
    0.00 :   40a212: lea    -0xe4(%rbp),%rax
    0.00 :   40a219: mov    %rax,-0x20(%rbp)
    0.00 :   40a21d: lea    -0xd0(%rbp),%rax
    0.00 :   40a224: mov    %rax,-0x18(%rbp)
    0.00 :   40a228: lea    -0xe8(%rbp),%rax
    0.00 :   40a22f: mov    %rax,-0x10(%rbp)
    0.00 :   40a233: lea    -0xd0(%rbp),%rax
    0.00 :   40a23a: mov    %rax,%rdi
    0.00 :   40a23d: call   407120 <strlen@plt>
    0.00 :   40a242: mov    %eax,-0x6c(%rbp)
    0.00 :   40a245: mov    -0xf8(%rbp),%rax
    0.00 :   40a24c: mov    0x78(%rax),%rax
    0.00 :   40a250: mov    $0x414e98,%esi
    0.00 :   40a255: mov    %rax,%rdi
    0.00 :   40a258: call   407130 <PQexec@plt>
    0.00 :   40a25d: mov    %rax,-0x8(%rbp)
   33.17 :   40a261: cmpq   $0x0,-0x8(%rbp) // dbt2-client[40a261]
    0.00 :   40a266: je     40a279 <execute_payment_libpq+0x1cd>
    0.00 :   40a268: mov    -0x8(%rbp),%rax
    0.00 :   40a26c: mov    %rax,%rdi
    0.00 :   40a26f: call   407040 <PQresultStatus@plt>
    0.00 :   40a274: cmp    $0x1,%eax
    0.00 :   40a277: je     40a2be <execute_payment_libpq+0x212>
    0.00 :   40a279: mov    -0xf8(%rbp),%rax
    0.00 :   40a280: mov    0x78(%rax),%rax
    0.00 :   40a284: mov    %rax,%rdi
    0.00 :   40a287: call   4071c0 <PQerrorMessage@plt>
    0.00 :   40a28c: mov    %rax,%rcx
    0.00 :   40a28f: mov    $0x414e9e,%edx
    0.00 :   40a294: mov    $0x4a,%esi
    0.00 :   40a299: mov    $0x414ea8,%edi
    0.00 :   40a29e: mov    $0x0,%eax
    0.00 :   40a2a3: call   40840f <log_error_message>
    0.00 :   40a2a8: mov    -0x8(%rbp),%rax
    0.00 :   40a2ac: mov    %rax,%rdi
    0.00 :   40a2af: call   407080 <PQclear@plt>
    0.00 :   40a2b4: mov    $0x0,%eax
    0.00 :   40a2b9: jmp    40a374 <execute_payment_libpq+0x2c8>
    0.00 :   40a2be: mov    -0x8(%rbp),%rax
    0.00 :   40a2c2: mov    %rax,%rdi
    0.00 :   40a2c5: call   407080 <PQclear@plt>
    0.00 :   40a2ca: mov    -0xf8(%rbp),%rax
    0.00 :   40a2d1: mov    0x78(%rax),%rax
   38.34 :   40a2d5: lea    -0x80(%rbp),%rsi // dbt2-client[40a2d5]
    0.00 :   40a2d9: lea    -0x40(%rbp),%rcx
    0.00 :   40a2dd: push   $0x1
    0.00 :   40a2df: lea    -0x60(%rbp),%rdx
    0.00 :   40a2e3: push   %rdx
    0.00 :   40a2e4: mov    %rsi,%r9
    0.00 :   40a2e7: mov    %rcx,%r8
    0.00 :   40a2ea: mov    $0x0,%ecx
    0.00 :   40a2ef: mov    $0x7,%edx
    0.00 :   40a2f4: mov    $0x414ed0,%esi
    0.00 :   40a2f9: mov    %rax,%rdi
    0.00 :   40a2fc: call   407280 <PQexecParams@plt>
    0.00 :   40a301: add    $0x10,%rsp
    0.00 :   40a305: mov    %rax,-0x8(%rbp)
    0.00 :   40a309: cmpq   $0x0,-0x8(%rbp)
    0.00 :   40a30e: je     40a321 <execute_payment_libpq+0x275>
    0.00 :   40a310: mov    -0x8(%rbp),%rax
    0.00 :   40a314: mov    %rax,%rdi
    0.00 :   40a317: call   407040 <PQresultStatus@plt>
    0.00 :   40a31c: cmp    $0x2,%eax
    0.00 :   40a31f: je     40a363 <execute_payment_libpq+0x2b7>
    0.00 :   40a321: mov    -0xf8(%rbp),%rax
    0.00 :   40a328: mov    0x78(%rax),%rax
    0.00 :   40a32c: mov    %rax,%rdi
    0.00 :   40a32f: call   4071c0 <PQerrorMessage@plt>
    0.00 :   40a334: mov    %rax,%rcx
    0.00 :   40a337: mov    $0x414f02,%edx
    0.00 :   40a33c: mov    $0x53,%esi
    0.00 :   40a341: mov    $0x414ea8,%edi
    0.00 :   40a346: mov    $0x0,%eax
    0.00 :   40a34b: call   40840f <log_error_message>
    0.00 :   40a350: mov    -0x8(%rbp),%rax
    0.00 :   40a354: mov    %rax,%rdi
    0.00 :   40a357: call   407080 <PQclear@plt>
    0.00 :   40a35c: mov    $0x0,%eax
    0.00 :   40a361: jmp    40a374 <execute_payment_libpq+0x2c8>
    0.00 :   40a363: mov    -0x8(%rbp),%rax
   28.49 :   40a367: mov    %rax,%rdi // dbt2-client[40a367]
    0.00 :   40a36a: call   407080 <PQclear@plt>
    0.00 :   40a36f: mov    $0x1,%eax
    0.00 :   40a374: leave
    0.00 :   40a375: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   62.31 [nf_conntrack][b760]
   37.69 [nf_conntrack][b7d7]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (3 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    000000000000b760 <nf_ct_seq_offset>:
         : 6    nf_ct_seq_offset():
   62.31 :   b760:   call   b765 <nf_ct_seq_offset+0x5> // [nf_conntrack][b760]
    0.00 :   b765:   mov    0xb0(%rdi),%rdi
    0.00 :   b76c:   test   %rdi,%rdi
    0.00 :   b76f:   je     b7d7 <nf_ct_seq_offset+0x77>
    0.00 :   b771:   movzbl 0x2(%rdi),%eax
    0.00 :   b775:   test   %al,%al
    0.00 :   b777:   je     b7d7 <nf_ct_seq_offset+0x77>
    0.00 :   b779:   push   %rbx
    0.00 :   b77a:   add    %rdi,%rax
    0.00 :   b77d:   mov    %esi,%ebx
    0.00 :   b77f:   sub    $0x8,%rsp
    0.00 :   b783:   mov    0xc(%rdi),%ecx
    0.00 :   b786:   test   %ecx,%ecx
    0.00 :   b788:   jne    b7c3 <nf_ct_seq_offset+0x63>
    0.00 :   b78a:   test   %rax,%rax
    0.00 :   b78d:   je     b7b7 <nf_ct_seq_offset+0x57>
    0.00 :   b78f:   mov    %ebx,%esi
    0.00 :   b791:   lea    (%rsi,%rsi,2),%rcx
    0.00 :   b795:   lea    (%rax,%rcx,4),%rax
    0.00 :   b799:   cmp    %edx,(%rax)
    0.00 :   b79b:   js     b7aa <nf_ct_seq_offset+0x4a>
    0.00 :   b79d:   mov    0x4(%rax),%eax
    0.00 :   b7a0:   add    $0x8,%rsp
    0.00 :   b7a4:   pop    %rbx
    0.00 :   b7a5:   jmp    b7aa <nf_ct_seq_offset+0x4a>
    0.00 :   b7aa:   mov    0x8(%rax),%eax
    0.00 :   b7ad:   add    $0x8,%rsp
    0.00 :   b7b1:   pop    %rbx
    0.00 :   b7b2:   jmp    b7b7 <nf_ct_seq_offset+0x57>
    0.00 :   b7b7:   add    $0x8,%rsp
    0.00 :   b7bb:   xor    %eax,%eax
    0.00 :   b7bd:   pop    %rbx
    0.00 :   b7be:   jmp    b7c3 <nf_ct_seq_offset+0x63>
    0.00 :   b7c3:   mov    $0x2,%esi
    0.00 :   b7c8:   mov    %edx,0x4(%rsp)
    0.00 :   b7cc:   call   b7d1 <nf_ct_seq_offset+0x71>
    0.00 :   b7d1:   mov    0x4(%rsp),%edx
    0.00 :   b7d5:   jmp    b78a <nf_ct_seq_offset+0x2a>
   37.69 :   b7d7:   xor    %eax,%eax // [nf_conntrack][b7d7]
    0.00 :   b7d9:   jmp    b7de <nf_ct_seq_offset+0x7e>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   74.16 libc.so.6[8a130]
   25.84 libc.so.6[8a120]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008a120 <__condvar_dec_grefs>:
         : 6     __condvar_dec_grefs():
   25.84 :   8a120:  mov    %esi,%esi // libc.so.6[8a120]
    0.00 :   8a122:  mov    $0xfffffffe,%eax
    0.00 :   8a127:  lea    0x10(%rdi,%rsi,4),%rdi
    0.00 :   8a12c:  lock xadd %eax,(%rdi)
   74.16 :   8a130:  cmp    $0x3,%eax // libc.so.6[8a130]
    0.00 :   8a133:  je     8a140 <__condvar_dec_grefs+0x20>
    0.00 :   8a135:  ret
    0.00 :   8a136:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   8a140:  lock andl $0xfffffffe,(%rdi)
    0.00 :   8a144:  xor    %r10d,%r10d
    0.00 :   8a147:  mov    $0xca,%eax
    0.00 :   8a14c:  xor    $0x81,%dl
    0.00 :   8a14f:  mov    %edx,%esi
    0.00 :   8a151:  mov    $0x7fffffff,%edx
    0.00 :   8a156:  syscall
    0.00 :   8a158:  cmp    $0xfffffffffffff000,%rax
    0.00 :   8a15e:  jbe    8a135 <__condvar_dec_grefs+0x15>
    0.00 :   8a160:  add    $0x16,%eax
    0.00 :   8a163:  and    $0xfffffff7,%eax
    0.00 :   8a166:  je     8a135 <__condvar_dec_grefs+0x15>
    0.00 :   8a168:  push   %rax
    0.00 :   8a169:  lea    0x112480(%rip),%rdi        # 19c5f0 <aliasfile.0+0xba8>
    0.00 :   8a170:  call   810e0 <__libc_fatal>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   65.79 libpq.so.private14-5.14[23b40]
   34.21 libpq.so.private14-5.14[23b98]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (3 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000023b40 <PQexecParams@@Base>:
   65.79 :   23b40:  endbr64 // libpq.so.private14-5.14[23b40]
    0.00 :   23b44:  push   %r15
    0.00 :   23b46:  push   %r14
    0.00 :   23b48:  push   %r13
    0.00 :   23b4a:  mov    %r9,%r13
    0.00 :   23b4d:  push   %r12
    0.00 :   23b4f:  mov    %r8,%r12
    0.00 :   23b52:  push   %rbp
    0.00 :   23b53:  mov    %rcx,%rbp
    0.00 :   23b56:  push   %rbx
    0.00 :   23b57:  mov    %rdi,%rbx
    0.00 :   23b5a:  sub    $0x18,%rsp
    0.00 :   23b5e:  mov    0x50(%rsp),%r14
    0.00 :   23b63:  mov    0x58(%rsp),%r15d
    0.00 :   23b68:  mov    %rsi,(%rsp)
    0.00 :   23b6c:  mov    %edx,0xc(%rsp)
    0.00 :   23b70:  call   22500 <PQgetResult@@Base+0x4f0>
    0.00 :   23b75:  test   %al,%al
    0.00 :   23b77:  je     23bb8 <PQexecParams@@Base+0x78>
    0.00 :   23b79:  push   %r15
    0.00 :   23b7b:  mov    %rbp,%rcx
    0.00 :   23b7e:  mov    %r13,%r9
    0.00 :   23b81:  mov    %r12,%r8
    0.00 :   23b84:  push   %r14
    0.00 :   23b86:  mov    0x1c(%rsp),%edx
    0.00 :   23b8a:  mov    %rbx,%rdi
    0.00 :   23b8d:  mov    0x10(%rsp),%rsi
    0.00 :   23b92:  call   cea0 <PQsendQueryParams@plt>
    0.00 :   23b97:  pop    %rdx
   34.21 :   23b98:  pop    %rcx // libpq.so.private14-5.14[23b98]
    0.00 :   23b99:  test   %eax,%eax
    0.00 :   23b9b:  je     23bb8 <PQexecParams@@Base+0x78>
    0.00 :   23b9d:  add    $0x18,%rsp
    0.00 :   23ba1:  mov    %rbx,%rdi
    0.00 :   23ba4:  pop    %rbx
    0.00 :   23ba5:  pop    %rbp
    0.00 :   23ba6:  pop    %r12
    0.00 :   23ba8:  pop    %r13
    0.00 :   23baa:  pop    %r14
    0.00 :   23bac:  pop    %r15
    0.00 :   23bae:  jmp    22620 <PQgetResult@@Base+0x610>
    0.00 :   23bb3:  nopl   0x0(%rax,%rax,1)
    0.00 :   23bb8:  add    $0x18,%rsp
    0.00 :   23bbc:  xor    %eax,%eax
    0.00 :   23bbe:  pop    %rbx
    0.00 :   23bbf:  pop    %rbp
    0.00 :   23bc0:  pop    %r12
    0.00 :   23bc2:  pop    %r13
    0.00 :   23bc4:  pop    %r14
    0.00 :   23bc6:  pop    %r15
    0.00 :   23bc8:  ret

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

  100.00 dbt2-client[407040]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .plt:
         :
         : 5      0000000000407040 <PQresultStatus@plt>:
  100.00 :   407040: jmp    *0x14fda(%rip)        # 41c020 <PQresultStatus@Base> // dbt2-client[407040]
    0.00 :   407046: push   $0x1
    0.00 :   40704b: jmp    407020 <_init+0x20>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   61.70 libpq.so.private14-5.14[27a30]
   38.30 libpq.so.private14-5.14[27a36]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (3 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000027a30 <appendBinaryPQExpBuffer@@Base>:
   61.70 :   27a30:  endbr64 // libpq.so.private14-5.14[27a30]
    0.00 :   27a34:  push   %r12
   38.30 :   27a36:  mov    %rsi,%r12 // libpq.so.private14-5.14[27a36]
    0.00 :   27a39:  mov    %rdx,%rsi
    0.00 :   27a3c:  push   %rbp
    0.00 :   27a3d:  mov    %rdi,%rbp
    0.00 :   27a40:  push   %rbx
    0.00 :   27a41:  mov    %rdx,%rbx
    0.00 :   27a44:  call   cf40 <enlargePQExpBuffer@plt>
    0.00 :   27a49:  test   %eax,%eax
    0.00 :   27a4b:  je     27a70 <appendBinaryPQExpBuffer@@Base+0x40>
    0.00 :   27a4d:  mov    0x8(%rbp),%rdi
    0.00 :   27a51:  mov    %rbx,%rdx
    0.00 :   27a54:  add    0x0(%rbp),%rdi
    0.00 :   27a58:  mov    %r12,%rsi
    0.00 :   27a5b:  call   c7e0 <memcpy@plt>
    0.00 :   27a60:  mov    0x0(%rbp),%rax
    0.00 :   27a64:  add    0x8(%rbp),%rbx
    0.00 :   27a68:  mov    %rbx,0x8(%rbp)
    0.00 :   27a6c:  movb   $0x0,(%rax,%rbx,1)
    0.00 :   27a70:  pop    %rbx
    0.00 :   27a71:  pop    %rbp
    0.00 :   27a72:  pop    %r12
    0.00 :   27a74:  ret

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[22680]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (3 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000022680 <PQexec@@Base>:
  100.00 :   22680:  endbr64 // libpq.so.private14-5.14[22680]
    0.00 :   22684:  push   %rbp
    0.00 :   22685:  mov    %rsi,%rbp
    0.00 :   22688:  push   %rbx
    0.00 :   22689:  mov    %rdi,%rbx
    0.00 :   2268c:  sub    $0x8,%rsp
    0.00 :   22690:  call   22500 <PQgetResult@@Base+0x4f0>
    0.00 :   22695:  test   %al,%al
    0.00 :   22697:  je     226c0 <PQexec@@Base+0x40>
    0.00 :   22699:  mov    %rbp,%rsi
    0.00 :   2269c:  mov    %rbx,%rdi
    0.00 :   2269f:  call   c320 <PQsendQuery@plt>
    0.00 :   226a4:  test   %eax,%eax
    0.00 :   226a6:  je     226c0 <PQexec@@Base+0x40>
    0.00 :   226a8:  add    $0x8,%rsp
    0.00 :   226ac:  mov    %rbx,%rdi
    0.00 :   226af:  pop    %rbx
    0.00 :   226b0:  pop    %rbp
    0.00 :   226b1:  jmp    22620 <PQgetResult@@Base+0x610>
    0.00 :   226b6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   226c0:  add    $0x8,%rsp
    0.00 :   226c4:  xor    %eax,%eax
    0.00 :   226c6:  pop    %rbx
    0.00 :   226c7:  pop    %rbp
    0.00 :   226c8:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[862fa]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000086260 <_IO_str_overflow>:
         : 6     __GI__IO_str_overflow():
    0.00 :   86260:  endbr64
    0.00 :   86264:  push   %r15
    0.00 :   86266:  push   %r14
    0.00 :   86268:  push   %r13
    0.00 :   8626a:  push   %r12
    0.00 :   8626c:  push   %rbp
    0.00 :   8626d:  mov    %esi,%ebp
    0.00 :   8626f:  push   %rbx
    0.00 :   86270:  sub    $0x38,%rsp
    0.00 :   86274:  mov    (%rdi),%eax
    0.00 :   86276:  mov    %eax,%r14d
    0.00 :   86279:  and    $0x8,%r14d
    0.00 :   8627d:  jne    86400 <_IO_str_overflow+0x1a0>
    0.00 :   86283:  mov    %eax,%edx
    0.00 :   86285:  mov    %rdi,%rbx
    0.00 :   86288:  and    $0xc00,%edx
    0.00 :   8628e:  cmp    $0x400,%edx
    0.00 :   86294:  je     863e0 <_IO_str_overflow+0x180>
    0.00 :   8629a:  mov    0x28(%rdi),%rax
    0.00 :   8629e:  movdqu 0x30(%rbx),%xmm2
    0.00 :   862a3:  mov    0x40(%rbx),%r12
    0.00 :   862a7:  xor    %edx,%edx
    0.00 :   862a9:  mov    %rax,%rcx
    0.00 :   862ac:  movhlps %xmm2,%xmm4
    0.00 :   862af:  movaps %xmm2,(%rsp)
    0.00 :   862b3:  movq   %xmm4,%r13
    0.00 :   862b8:  sub    %r13,%r12
    0.00 :   862bb:  cmp    $0xffffffff,%ebp
    0.00 :   862be:  sete   %dl
    0.00 :   862c1:  sub    0x20(%rbx),%rcx
    0.00 :   862c5:  add    %r12,%rdx
    0.00 :   862c8:  cmp    %rdx,%rcx
    0.00 :   862cb:  jb     863a5 <_IO_str_overflow+0x145>
    0.00 :   862d1:  testb  $0x1,(%rbx)
    0.00 :   862d4:  jne    86420 <_IO_str_overflow+0x1c0>
    0.00 :   862da:  lea    0x64(%r12,%r12,1),%rax
    0.00 :   862df:  mov    %rax,0x18(%rsp)
    0.00 :   862e4:  cmp    %r12,%rax
    0.00 :   862e7:  jb     86420 <_IO_str_overflow+0x1c0>
    0.00 :   862ed:  mov    %rax,%rdi
    0.00 :   862f0:  call   266c0 <malloc@plt>
    0.00 :   862f5:  movq   %rax,%xmm3
  100.00 :   862fa:  mov    %rax,%r15 // libc.so.6[862fa]
    0.00 :   862fd:  punpcklqdq %xmm3,%xmm3
    0.00 :   86301:  movaps %xmm3,0x20(%rsp)
    0.00 :   86306:  test   %rax,%rax
    0.00 :   86309:  je     86420 <_IO_str_overflow+0x1c0>
    0.00 :   8630f:  test   %r13,%r13
    0.00 :   86312:  je     86332 <_IO_str_overflow+0xd2>
    0.00 :   86314:  mov    %r12,%rdx
    0.00 :   86317:  mov    %r13,%rsi
    0.00 :   8631a:  mov    %rax,%rdi
    0.00 :   8631d:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   86322:  mov    %r13,%rdi
    0.00 :   86325:  call   26420 <free@plt>
    0.00 :   8632a:  movq   $0x0,0x38(%rbx)
    0.00 :   86332:  mov    0x18(%rsp),%rdx
    0.00 :   86337:  lea    (%r15,%r12,1),%rdi
    0.00 :   8633b:  xor    %esi,%esi
    0.00 :   8633d:  sub    %r12,%rdx
    0.00 :   86340:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   86345:  mov    0x18(%rsp),%rdx
    0.00 :   8634a:  mov    %r15,%rsi
    0.00 :   8634d:  mov    %rbx,%rdi
    0.00 :   86350:  mov    $0x1,%ecx
    0.00 :   86355:  add    %r15,%rdx
    0.00 :   86358:  call   84d80 <_IO_setb>
    0.00 :   8635d:  mov    0x18(%rbx),%rax
    0.00 :   86361:  movdqa (%rsp),%xmm0
    0.00 :   86366:  mov    %r15,0x20(%rbx)
    0.00 :   8636a:  movdqu 0x8(%rbx),%xmm1
    0.00 :   8636f:  mov    0x40(%rbx),%rdx
    0.00 :   86373:  add    %r15,%rax
    0.00 :   86376:  punpckhqdq %xmm0,%xmm0
    0.00 :   8637a:  sub    %r13,%rax
    0.00 :   8637d:  psubq  %xmm0,%xmm1
    0.00 :   86381:  movdqa 0x20(%rsp),%xmm0
    0.00 :   86387:  mov    %rdx,0x30(%rbx)
    0.00 :   8638b:  mov    %rax,0x18(%rbx)
    0.00 :   8638f:  mov    0x28(%rbx),%rax
    0.00 :   86393:  paddq  %xmm1,%xmm0
    0.00 :   86397:  add    %r15,%rax
    0.00 :   8639a:  movups %xmm0,0x8(%rbx)
    0.00 :   8639e:  sub    %r13,%rax
    0.00 :   863a1:  mov    %rax,0x28(%rbx)
    0.00 :   863a5:  cmp    $0xffffffff,%ebp
    0.00 :   863a8:  je     86410 <_IO_str_overflow+0x1b0>
    0.00 :   863aa:  lea    0x1(%rax),%rdx
    0.00 :   863ae:  mov    %rdx,0x28(%rbx)
    0.00 :   863b2:  mov    %bpl,(%rax)
    0.00 :   863b5:  mov    0x28(%rbx),%rax
    0.00 :   863b9:  cmp    %rax,0x10(%rbx)
    0.00 :   863bd:  jae    863c3 <_IO_str_overflow+0x163>
    0.00 :   863bf:  mov    %rax,0x10(%rbx)
    0.00 :   863c3:  mov    %ebp,%r14d
    0.00 :   863c6:  add    $0x38,%rsp
    0.00 :   863ca:  mov    %r14d,%eax
    0.00 :   863cd:  pop    %rbx
    0.00 :   863ce:  pop    %rbp
    0.00 :   863cf:  pop    %r12
    0.00 :   863d1:  pop    %r13
    0.00 :   863d3:  pop    %r14
    0.00 :   863d5:  pop    %r15
    0.00 :   863d7:  ret
    0.00 :   863d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   863e0:  or     $0x8,%ah
    0.00 :   863e3:  mov    0x10(%rdi),%rdx
    0.00 :   863e7:  mov    %eax,(%rdi)
    0.00 :   863e9:  mov    0x8(%rdi),%rax
    0.00 :   863ed:  mov    %rdx,0x8(%rdi)
    0.00 :   863f1:  mov    %rax,0x28(%rdi)
    0.00 :   863f5:  jmp    8629e <_IO_str_overflow+0x3e>
    0.00 :   863fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   86400:  xor    %r14d,%r14d
    0.00 :   86403:  cmp    $0xffffffff,%esi
    0.00 :   86406:  setne  %r14b
    0.00 :   8640a:  neg    %r14d
    0.00 :   8640d:  jmp    863c6 <_IO_str_overflow+0x166>
    0.00 :   8640f:  nop
    0.00 :   86410:  cmp    %rax,0x10(%rbx)
    0.00 :   86414:  jae    863c6 <_IO_str_overflow+0x166>
    0.00 :   86416:  mov    %rax,0x10(%rbx)
    0.00 :   8641a:  jmp    863c6 <_IO_str_overflow+0x166>
    0.00 :   8641c:  nopl   0x0(%rax)
    0.00 :   86420:  mov    $0xffffffff,%r14d
    0.00 :   86426:  jmp    863c6 <_IO_str_overflow+0x166>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-load.c:238
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000005dc0 <_dl_dst_count>:
         : 6    _dl_dst_count():
    0.00 :   5dc0:   endbr64
  100.00 :   5dc4:   push   %r14 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-load.c:238
    0.00 :   5dc6:   mov    $0x24,%esi
    0.00 :   5dcb:   push   %r13
    0.00 :   5dcd:   push   %r12
    0.00 :   5dcf:   push   %rbp
    0.00 :   5dd0:   xor    %ebp,%ebp
    0.00 :   5dd2:   push   %rbx
    0.00 :   5dd3:   call   23200 <index>
    0.00 :   5dd8:   test   %rax,%rax
    0.00 :   5ddb:   jne    5df0 <_dl_dst_count+0x30>
    0.00 :   5ddd:   pop    %rbx
    0.00 :   5dde:   mov    %rbp,%rax
    0.00 :   5de1:   pop    %rbp
    0.00 :   5de2:   pop    %r12
    0.00 :   5de4:   pop    %r13
    0.00 :   5de6:   pop    %r14
    0.00 :   5de8:   ret
    0.00 :   5de9:   nopl   0x0(%rax)
    0.00 :   5df0:   lea    0x23d49(%rip),%r12        # 29b40 <_sys_errname+0x780>
    0.00 :   5df7:   lea    0x23d49(%rip),%r13        # 29b47 <_sys_errname+0x787>
    0.00 :   5dfe:   lea    0x23d4b(%rip),%r14        # 29b50 <_sys_errname+0x790>
    0.00 :   5e05:   nopl   (%rax)
    0.00 :   5e08:   lea    0x1(%rax),%rbx
    0.00 :   5e0c:   mov    %r12,%rsi
    0.00 :   5e0f:   mov    %rbx,%rdi
    0.00 :   5e12:   call   4e80 <is_dst>
    0.00 :   5e17:   test   %rax,%rax
    0.00 :   5e1a:   jne    5e40 <_dl_dst_count+0x80>
    0.00 :   5e1c:   mov    %r13,%rsi
    0.00 :   5e1f:   mov    %rbx,%rdi
    0.00 :   5e22:   call   4e80 <is_dst>
    0.00 :   5e27:   test   %rax,%rax
    0.00 :   5e2a:   jne    5e40 <_dl_dst_count+0x80>
    0.00 :   5e2c:   mov    %r14,%rsi
    0.00 :   5e2f:   mov    %rbx,%rdi
    0.00 :   5e32:   call   4e80 <is_dst>
    0.00 :   5e37:   test   %rax,%rax
    0.00 :   5e3a:   je     5e47 <_dl_dst_count+0x87>
    0.00 :   5e3c:   nopl   0x0(%rax)
    0.00 :   5e40:   add    $0x1,%rbp
    0.00 :   5e44:   add    %rax,%rbx
    0.00 :   5e47:   mov    $0x24,%esi
    0.00 :   5e4c:   mov    %rbx,%rdi
    0.00 :   5e4f:   call   23200 <index>
    0.00 :   5e54:   test   %rax,%rax
    0.00 :   5e57:   jne    5e08 <_dl_dst_count+0x48>
    0.00 :   5e59:   pop    %rbx
    0.00 :   5e5a:   mov    %rbp,%rax
    0.00 :   5e5d:   pop    %rbp
    0.00 :   5e5e:   pop    %r12
    0.00 :   5e60:   pop    %r13
    0.00 :   5e62:   pop    %r14
    0.00 :   5e64:   ret

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/x86/cpu-features.c:223
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000157f0 <update_active.constprop.0>:
         : 6     update_active.constprop.0():
    0.00 :   157f0:  push   %r15
    0.00 :   157f2:  push   %r14
    0.00 :   157f4:  push   %r13
    0.00 :   157f6:  push   %r12
    0.00 :   157f8:  push   %rbp
    0.00 :   157f9:  push   %rbx
    0.00 :   157fa:  sub    $0xa0,%rsp
    0.00 :   15801:  mov    0x1f2e4(%rip),%r10d        # 34aec <_rtld_global_ro+0x8c>
    0.00 :   15808:  mov    0x1f2fd(%rip),%r9d        # 34b0c <_rtld_global_ro+0xac>
    0.00 :   1580f:  mov    0x1f2da(%rip),%r14d        # 34af0 <_rtld_global_ro+0x90>
    0.00 :   15816:  mov    0x1f2eb(%rip),%r15d        # 34b08 <_rtld_global_ro+0xa8>
    0.00 :   1581d:  mov    %r10d,%edx
    0.00 :   15820:  mov    %r10d,%eax
    0.00 :   15823:  mov    %r10d,%edi
    0.00 :   15826:  mov    %r9d,%ebx
    0.00 :   15829:  and    $0x8000000,%edx
    0.00 :   1582f:  mov    %r14d,%r8d
    0.00 :   15832:  and    $0x10,%ebx
    0.00 :   15835:  mov    %r15d,%ecx
    0.00 :   15838:  and    $0x2d82203,%eax
    0.00 :   1583d:  or     0x1f2b9(%rip),%eax        # 34afc <_rtld_global_ro+0x9c>
    0.00 :   15843:  and    $0x40000000,%edi
    0.00 :   15849:  and    $0x17888110,%r8d
    0.00 :   15850:  or     %edx,%eax
    0.00 :   15852:  or     0x1f2a7(%rip),%r8d        # 34b00 <_rtld_global_ro+0xa0>
    0.00 :   15859:  mov    %ebx,-0x74(%rsp)
    0.00 :   1585d:  mov    %r15d,%esi
    0.00 :   15860:  or     %eax,%edi
    0.00 :   15862:  mov    0x1f2c4(%rip),%eax        # 34b2c <_rtld_global_ro+0xcc>
    0.00 :   15868:  mov    0x1f2a1(%rip),%r13d        # 34b10 <_rtld_global_ro+0xb0>
    0.00 :   1586f:  and    $0x218c0318,%ecx
    0.00 :   15875:  mov    %r8d,0x1f284(%rip)        # 34b00 <_rtld_global_ro+0xa0>
    0.00 :   1587c:  or     0x1f296(%rip),%ecx        # 34b18 <_rtld_global_ro+0xb8>
    0.00 :   15882:  and    $0x800,%esi
    0.00 :   15888:  mov    %r9d,%ebx
    0.00 :   1588b:  mov    %eax,-0x6c(%rsp)
    0.00 :   1588f:  mov    %eax,%r11d
    0.00 :   15892:  mov    0x1f298(%rip),%eax        # 34b30 <_rtld_global_ro+0xd0>
    0.00 :   15898:  or     %ecx,%esi
    0.00 :   1589a:  and    $0x200161,%r11d
    0.00 :   158a1:  mov    %edi,0x1f255(%rip)        # 34afc <_rtld_global_ro+0x9c>
    0.00 :   158a7:  mov    %r13d,%r12d
    0.00 :   158aa:  or     0x1f28b(%rip),%r11d        # 34b3c <_rtld_global_ro+0xdc>
    0.00 :   158b1:  and    $0x8000000,%eax
    0.00 :   158b6:  or     %eax,0x1f284(%rip)        # 34b40 <_rtld_global_ro+0xe0>
    0.00 :   158bc:  mov    0x1f2c6(%rip),%eax        # 34b88 <_rtld_global_ro+0x128>
    0.00 :   158c2:  mov    %r11d,0x1f273(%rip)        # 34b3c <_rtld_global_ro+0xdc>
    0.00 :   158c9:  and    $0x200,%eax
    0.00 :   158ce:  or     %eax,0x1f2c4(%rip)        # 34b98 <_rtld_global_ro+0x138>
    0.00 :   158d4:  mov    0x1f2ca(%rip),%eax        # 34ba4 <_rtld_global_ro+0x144>
    0.00 :   158da:  mov    %eax,%ebp
    0.00 :   158dc:  mov    %eax,-0x70(%rsp)
    0.00 :   158e0:  and    $0x1c00,%ebp
    0.00 :   158e6:  or     0x1f2c8(%rip),%ebp        # 34bb4 <_rtld_global_ro+0x154>
    0.00 :   158ec:  mov    %ebp,0x1f2c2(%rip)        # 34bb4 <_rtld_global_ro+0x154>
    0.00 :   158f2:  mov    0x1f2f0(%rip),%eax        # 34be8 <_rtld_global_ro+0x188>
    0.00 :   158f8:  and    $0x10,%eax
    0.00 :   158fb:  or     %eax,0x1f2f7(%rip)        # 34bf8 <_rtld_global_ro+0x198>
    0.00 :   15901:  test   $0x800,%r13d
    0.00 :   15908:  cmovne %ecx,%esi
    0.00 :   1590b:  and    $0x114810,%r12d
    0.00 :   15912:  and    $0x1a4001b1,%ebx
    0.00 :   15918:  or     0x1f201(%rip),%r12d        # 34b20 <_rtld_global_ro+0xc0>
    0.00 :   1591f:  or     0x1f1f7(%rip),%ebx        # 34b1c <_rtld_global_ro+0xbc>
    0.00 :   15925:  mov    %r12d,0x1f1f4(%rip)        # 34b20 <_rtld_global_ro+0xc0>
    0.00 :   1592c:  mov    %esi,0x1f1e6(%rip)        # 34b18 <_rtld_global_ro+0xb8>
    0.00 :   15932:  mov    %ebx,0x1f1e4(%rip)        # 34b1c <_rtld_global_ro+0xbc>
    0.00 :   15938:  test   %edx,%edx
    0.00 :   1593a:  je     1598f <update_active.constprop.0+0x19f>
    0.00 :   1593c:  xor    %ecx,%ecx
    0.00 :   1593e:  xgetbv
    0.00 :   15941:  mov    %eax,%edx
    0.00 :   15943:  and    $0x6,%edx
    0.00 :   15946:  cmp    $0x6,%edx
    0.00 :   15949:  je     15af0 <update_active.constprop.0+0x300>
    0.00 :   1594f:  and    $0x60000,%eax
    0.00 :   15954:  cmp    $0x60000,%eax
    0.00 :   15959:  je     15b77 <update_active.constprop.0+0x387>
    0.00 :   1595f:  mov    0x1f1df(%rip),%esi        # 34b44 <_rtld_global_ro+0xe4>
    0.00 :   15965:  or     $0x4000000,%edi
    0.00 :   1596b:  mov    %edi,0x1f18b(%rip)        # 34afc <_rtld_global_ro+0x9c>
    0.00 :   15971:  mov    %esi,%r11d
    0.00 :   15974:  and    $0x17,%r11d
    0.00 :   15978:  or     0x1f1d5(%rip),%r11d        # 34b54 <_rtld_global_ro+0xf4>
    0.00 :   1597f:  cmpl   $0xc,0x1f14e(%rip)        # 34ad4 <_rtld_global_ro+0x74>
    0.00 :   15986:  mov    %r11d,0x1f1c7(%rip)        # 34b54 <_rtld_global_ro+0xf4>
    0.00 :   1598d:  jg     15a00 <update_active.constprop.0+0x210>
    0.00 :   1598f:  mov    -0x74(%rsp),%eax
    0.00 :   15993:  test   %eax,%eax
    0.00 :   15995:  je     1599e <update_active.constprop.0+0x1ae>
    0.00 :   15997:  orl    $0x8,0x1f17e(%rip)        # 34b1c <_rtld_global_ro+0xbc>
    0.00 :   1599e:  mov    0x1f224(%rip),%eax        # 34bc8 <_rtld_global_ro+0x168>
    0.00 :   159a4:  test   $0x1,%al
    0.00 :   159a6:  je     159c8 <update_active.constprop.0+0x1d8>
    0.00 :   159a8:  and    $0x4,%eax
    0.00 :   159ab:  or     0x1f227(%rip),%eax        # 34bd8 <_rtld_global_ro+0x178>
    0.00 :   159b1:  and    $0x800000,%r9d
    0.00 :   159b8:  or     %r9d,0x1f15d(%rip)        # 34b1c <_rtld_global_ro+0xbc>
    0.00 :   159bf:  or     $0x1,%eax
    0.00 :   159c2:  mov    %eax,0x1f210(%rip)        # 34bd8 <_rtld_global_ro+0x178>
    0.00 :   159c8:  mov    %r8d,%edx
    0.00 :   159cb:  xor    %eax,%eax
    0.00 :   159cd:  and    $0x8100,%edx
    0.00 :   159d3:  cmp    $0x8100,%edx
    0.00 :   159d9:  je     15ac0 <update_active.constprop.0+0x2d0>
    0.00 :   159df:  mov    %eax,0x1f223(%rip)        # 34c08 <_rtld_global_ro+0x1a8>
    0.00 :   159e5:  add    $0xa0,%rsp
    0.00 :   159ec:  pop    %rbx
    0.00 :   159ed:  pop    %rbp
    0.00 :   159ee:  pop    %r12
    0.00 :   159f0:  pop    %r13
    0.00 :   159f2:  pop    %r14
    0.00 :   159f4:  pop    %r15
    0.00 :   159f6:  ret
    0.00 :   159f7:  nopw   0x0(%rax,%rax,1)
    0.00 :   15a00:  mov    $0xd,%eax
    0.00 :   15a05:  xor    %ecx,%ecx
    0.00 :   15a07:  cpuid
  100.00 :   15a09:  test   %ebx,%ebx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/../sysdeps/x86/cpu-features.c:223
    0.00 :   15a0b:  je     1598f <update_active.constprop.0+0x19f>
    0.00 :   15a0d:  add    $0x7f,%ebx
    0.00 :   15a10:  and    $0xffffffc0,%ebx
    0.00 :   15a13:  and    $0x2,%esi
    0.00 :   15a16:  mov    %ebx,%eax
    0.00 :   15a18:  mov    %ebx,0x1f1fa(%rip)        # 34c18 <_rtld_global_ro+0x1b8>
    0.00 :   15a1e:  mov    %rax,0x1f1eb(%rip)        # 34c10 <_rtld_global_ro+0x1b0>
    0.00 :   15a25:  je     1598f <update_active.constprop.0+0x19f>
    0.00 :   15a2b:  lea    -0x60(%rsp),%r10
    0.00 :   15a30:  lea    0x20(%rsp),%rdi
    0.00 :   15a35:  mov    $0x2,%esi
    0.00 :   15a3a:  movl   $0x240,-0x60(%rsp)
    0.00 :   15a42:  mov    $0xee,%ebp
    0.00 :   15a47:  mov    $0xd,%r12d
    0.00 :   15a4d:  nopl   (%rax)
    0.00 :   15a50:  bt     %esi,%ebp
    0.00 :   15a53:  jae    15b90 <update_active.constprop.0+0x3a0>
    0.00 :   15a59:  mov    %r12d,%eax
    0.00 :   15a5c:  mov    %esi,%ecx
    0.00 :   15a5e:  cpuid
    0.00 :   15a60:  mov    %eax,(%rdi)
    0.00 :   15a62:  cmp    $0x2,%esi
    0.00 :   15a65:  je     15bb0 <update_active.constprop.0+0x3c0>
    0.00 :   15a6b:  mov    -0x4(%rdi),%eax
    0.00 :   15a6e:  add    -0x4(%r10),%eax
    0.00 :   15a72:  and    $0x2,%ecx
    0.00 :   15a75:  je     15a7d <update_active.constprop.0+0x28d>
    0.00 :   15a77:  add    $0x3f,%eax
    0.00 :   15a7a:  and    $0xffffffc0,%eax
    0.00 :   15a7d:  add    $0x1,%esi
    0.00 :   15a80:  mov    %eax,(%r10)
    0.00 :   15a83:  add    $0x4,%rdi
    0.00 :   15a87:  add    $0x4,%r10
    0.00 :   15a8b:  cmp    $0x20,%esi
    0.00 :   15a8e:  jne    15a50 <update_active.constprop.0+0x260>
    0.00 :   15a90:  mov    0x94(%rsp),%eax
    0.00 :   15a97:  add    0x14(%rsp),%eax
    0.00 :   15a9b:  je     1598f <update_active.constprop.0+0x19f>
    0.00 :   15aa1:  add    $0x7f,%eax
    0.00 :   15aa4:  or     $0x2,%r11d
    0.00 :   15aa8:  and    $0xffffffc0,%eax
    0.00 :   15aab:  mov    %r11d,0x1f0a2(%rip)        # 34b54 <_rtld_global_ro+0xf4>
    0.00 :   15ab2:  mov    %rax,0x1f157(%rip)        # 34c10 <_rtld_global_ro+0x1b0>
    0.00 :   15ab9:  jmp    1598f <update_active.constprop.0+0x19f>
    0.00 :   15abe:  xchg   %ax,%ax
    0.00 :   15ac0:  mov    %r14d,%eax
    0.00 :   15ac3:  and    $0x1,%eax
    0.00 :   15ac6:  je     159df <update_active.constprop.0+0x1ef>
    0.00 :   15acc:  and    $0x7800000,%r8d
    0.00 :   15ad3:  cmp    $0x7800000,%r8d
    0.00 :   15ada:  je     15bc8 <update_active.constprop.0+0x3d8>
    0.00 :   15ae0:  xor    %eax,%eax
    0.00 :   15ae2:  jmp    159df <update_active.constprop.0+0x1ef>
    0.00 :   15ae7:  nopw   0x0(%rax,%rax,1)
    0.00 :   15af0:  test   $0x10000000,%r10d
    0.00 :   15af7:  je     15b4d <update_active.constprop.0+0x35d>
    0.00 :   15af9:  or     $0x10000000,%edi
    0.00 :   15aff:  test   $0x20,%r15b
    0.00 :   15b03:  jne    15ce0 <update_active.constprop.0+0x4f0>
    0.00 :   15b09:  mov    -0x70(%rsp),%edx
    0.00 :   15b0d:  and    $0x20001000,%r10d
    0.00 :   15b14:  or     %edi,%r10d
    0.00 :   15b17:  and    $0x10,%edx
    0.00 :   15b1a:  mov    %r10d,0x1efdb(%rip)        # 34afc <_rtld_global_ro+0x9c>
    0.00 :   15b21:  or     %ebp,%edx
    0.00 :   15b23:  mov    %edx,0x1f08b(%rip)        # 34bb4 <_rtld_global_ro+0x154>
    0.00 :   15b29:  mov    %r9d,%edx
    0.00 :   15b2c:  and    $0x600,%edx
    0.00 :   15b32:  or     %ebx,%edx
    0.00 :   15b34:  mov    %edx,0x1efe2(%rip)        # 34b1c <_rtld_global_ro+0xbc>
    0.00 :   15b3a:  mov    -0x6c(%rsp),%edx
    0.00 :   15b3e:  and    $0x800,%edx
    0.00 :   15b44:  or     %r11d,%edx
    0.00 :   15b47:  mov    %edx,0x1efef(%rip)        # 34b3c <_rtld_global_ro+0xdc>
    0.00 :   15b4d:  mov    %eax,%edx
    0.00 :   15b4f:  and    $0xe0,%edx
    0.00 :   15b55:  cmp    $0xe0,%edx
    0.00 :   15b5b:  je     15c80 <update_active.constprop.0+0x490>
    0.00 :   15b61:  and    $0x60000,%eax
    0.00 :   15b66:  mov    0x1ef90(%rip),%edi        # 34afc <_rtld_global_ro+0x9c>
    0.00 :   15b6c:  cmp    $0x60000,%eax
    0.00 :   15b71:  jne    1595f <update_active.constprop.0+0x16f>
    0.00 :   15b77:  and    $0x3400000,%r13d
    0.00 :   15b7e:  or     %r13d,0x1ef9b(%rip)        # 34b20 <_rtld_global_ro+0xc0>
    0.00 :   15b85:  jmp    1595f <update_active.constprop.0+0x16f>
    0.00 :   15b8a:  nopw   0x0(%rax,%rax,1)
    0.00 :   15b90:  movl   $0x0,(%rdi)
    0.00 :   15b96:  cmp    $0x2,%esi
    0.00 :   15b99:  je     15bb0 <update_active.constprop.0+0x3c0>
    0.00 :   15b9b:  mov    -0x4(%r10),%eax
    0.00 :   15b9f:  add    -0x4(%rdi),%eax
    0.00 :   15ba2:  jmp    15a7d <update_active.constprop.0+0x28d>
    0.00 :   15ba7:  nopw   0x0(%rax,%rax,1)
    0.00 :   15bb0:  add    $0x4,%r10
    0.00 :   15bb4:  add    $0x4,%rdi
    0.00 :   15bb8:  mov    $0x3,%esi
    0.00 :   15bbd:  jmp    15a50 <update_active.constprop.0+0x260>
    0.00 :   15bc2:  nopw   0x0(%rax,%rax,1)
    0.00 :   15bc8:  mov    0x1ef2e(%rip),%edx        # 34afc <_rtld_global_ro+0x9c>
    0.00 :   15bce:  test   $0x20,%dh
    0.00 :   15bd1:  je     159df <update_active.constprop.0+0x1ef>
    0.00 :   15bd7:  mov    0x1ef5f(%rip),%ecx        # 34b3c <_rtld_global_ro+0xdc>
    0.00 :   15bdd:  mov    %ecx,%esi
    0.00 :   15bdf:  and    $0x1,%esi
    0.00 :   15be2:  je     159df <update_active.constprop.0+0x1ef>
    0.00 :   15be8:  mov    %edx,%edi
    0.00 :   15bea:  mov    %esi,%eax
    0.00 :   15bec:  and    $0x980201,%edi
    0.00 :   15bf2:  cmp    $0x980201,%edi
    0.00 :   15bf8:  jne    159df <update_active.constprop.0+0x1ef>
    0.00 :   15bfe:  mov    $0x3,%eax
    0.00 :   15c03:  test   $0x10000000,%edx
    0.00 :   15c09:  je     159df <update_active.constprop.0+0x1ef>
    0.00 :   15c0f:  mov    0x1ef03(%rip),%esi        # 34b18 <_rtld_global_ro+0xb8>
    0.00 :   15c15:  mov    %esi,%edi
    0.00 :   15c17:  and    $0x128,%edi
    0.00 :   15c1d:  cmp    $0x128,%edi
    0.00 :   15c23:  jne    159df <update_active.constprop.0+0x1ef>
    0.00 :   15c29:  mov    %edx,%edi
    0.00 :   15c2b:  and    $0x20001000,%edi
    0.00 :   15c31:  cmp    $0x20001000,%edi
    0.00 :   15c37:  jne    159df <update_active.constprop.0+0x1ef>
    0.00 :   15c3d:  and    $0x20,%cl
    0.00 :   15c40:  je     15cf8 <update_active.constprop.0+0x508>
    0.00 :   15c46:  and    $0x400000,%edx
    0.00 :   15c4c:  je     15cf8 <update_active.constprop.0+0x508>
    0.00 :   15c52:  mov    %esi,%edx
    0.00 :   15c54:  mov    $0x7,%eax
    0.00 :   15c59:  and    $0x50030000,%edx
    0.00 :   15c5f:  cmp    $0x50030000,%edx
    0.00 :   15c65:  jne    159df <update_active.constprop.0+0x1ef>
    0.00 :   15c6b:  mov    %esi,%eax
    0.00 :   15c6d:  sar    $0x1f,%eax
    0.00 :   15c70:  and    $0x8,%eax
    0.00 :   15c73:  add    $0x7,%eax
    0.00 :   15c76:  jmp    159df <update_active.constprop.0+0x1ef>
    0.00 :   15c7b:  nopl   0x0(%rax,%rax,1)
    0.00 :   15c80:  test   $0x10000,%r15d
    0.00 :   15c87:  je     15b61 <update_active.constprop.0+0x371>
    0.00 :   15c8d:  mov    %r9d,%edx
    0.00 :   15c90:  and    $0xdc220000,%r15d
    0.00 :   15c97:  or     0x1ee7a(%rip),%r15d        # 34b18 <_rtld_global_ro+0xb8>
    0.00 :   15c9e:  and    $0x5842,%edx
    0.00 :   15ca4:  or     %edx,0x1ee72(%rip)        # 34b1c <_rtld_global_ro+0xbc>
    0.00 :   15caa:  mov    -0x70(%rsp),%edx
    0.00 :   15cae:  or     $0x10000,%r15d
    0.00 :   15cb5:  mov    %r15d,0x1ee5c(%rip)        # 34b18 <_rtld_global_ro+0xb8>
    0.00 :   15cbc:  and    $0x20,%edx
    0.00 :   15cbf:  or     %edx,0x1eeef(%rip)        # 34bb4 <_rtld_global_ro+0x154>
    0.00 :   15cc5:  mov    %r13d,%edx
    0.00 :   15cc8:  and    $0x80010c,%edx
    0.00 :   15cce:  or     %r12d,%edx
    0.00 :   15cd1:  mov    %edx,0x1ee49(%rip)        # 34b20 <_rtld_global_ro+0xc0>
    0.00 :   15cd7:  jmp    15b61 <update_active.constprop.0+0x371>
    0.00 :   15cdc:  nopl   0x0(%rax)
    0.00 :   15ce0:  orl    $0x200,0x1ef1a(%rip)        # 34c04 <_rtld_global_ro+0x1a4>
    0.00 :   15cea:  or     $0x20,%esi
    0.00 :   15ced:  mov    %esi,0x1ee25(%rip)        # 34b18 <_rtld_global_ro+0xb8>
    0.00 :   15cf3:  jmp    15b09 <update_active.constprop.0+0x319>
    0.00 :   15cf8:  mov    $0x3,%eax
    0.00 :   15cfd:  jmp    159df <update_active.constprop.0+0x1ef>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/get-dynamic-info.h:86
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000006a60 <_dl_map_object_from_fd>:
         : 6    _dl_map_object_from_fd():
    0.00 :   6a60:   push   %rbp
    0.00 :   6a61:   mov    %rsp,%rbp
    0.00 :   6a64:   push   %r15
    0.00 :   6a66:   push   %r14
    0.00 :   6a68:   mov    %rcx,%r14
    0.00 :   6a6b:   push   %r13
    0.00 :   6a6d:   push   %r12
    0.00 :   6a6f:   push   %rbx
    0.00 :   6a70:   mov    %r9,%rbx
    0.00 :   6a73:   sub    $0x128,%rsp
    0.00 :   6a7a:   mov    %rdi,-0xf0(%rbp)
    0.00 :   6a81:   mov    0x28(%rbp),%rdi
    0.00 :   6a85:   mov    %rsi,-0x128(%rbp)
    0.00 :   6a8c:   mov    %edx,-0xdc(%rbp)
    0.00 :   6a92:   mov    %r8,-0xf8(%rbp)
    0.00 :   6a99:   call   2140 <_dl_debug_update>
    0.00 :   6a9e:   mov    %rax,-0x120(%rbp)
    0.00 :   6aa5:   mov    0x18(%rbp),%eax
    0.00 :   6aa8:   and    $0x20000000,%eax
    0.00 :   6aad:   mov    %eax,-0x110(%rbp)
    0.00 :   6ab3:   je     6f70 <_dl_map_object_from_fd+0x510>
    0.00 :   6ab9:   cmpq   $0x0,0x28(%rbp)
    0.00 :   6abe:   jne    8350 <_dl_map_object_from_fd+0x18f0>
    0.00 :   6ac4:   pxor   %xmm0,%xmm0
    0.00 :   6ac8:   movaps %xmm0,-0xd0(%rbp)
    0.00 :   6acf:   mov    0x18(%rbp),%eax
    0.00 :   6ad2:   and    $0x4,%eax
    0.00 :   6ad5:   mov    %eax,-0x10c(%rbp)
    0.00 :   6adb:   jne    74a8 <_dl_map_object_from_fd+0xa48>
    0.00 :   6ae1:   testb  $0x40,0x2df78(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   6ae8:   jne    7ac2 <_dl_map_object_from_fd+0x1062>
    0.00 :   6aee:   mov    0x28(%rbp),%r9
    0.00 :   6af2:   mov    0x18(%rbp),%r8d
    0.00 :   6af6:   mov    %rbx,%rcx
    0.00 :   6af9:   mov    0x10(%rbp),%edx
    0.00 :   6afc:   mov    -0xf0(%rbp),%rsi
    0.00 :   6b03:   mov    -0xf8(%rbp),%rdi
    0.00 :   6b0a:   call   b110 <_dl_new_object>
    0.00 :   6b0f:   mov    %rax,%r13
    0.00 :   6b12:   test   %rax,%rax
    0.00 :   6b15:   je     7ae0 <_dl_map_object_from_fd+0x1080>
    0.00 :   6b1b:   mov    0x20(%r14),%rax
    0.00 :   6b1f:   mov    0x28(%r14),%rcx
    0.00 :   6b23:   movzwl 0x18(%r14),%r12d
    0.00 :   6b28:   mov    %rax,0x2c8(%r13)
    0.00 :   6b2f:   movzwl 0x40(%r14),%eax
    0.00 :   6b34:   lea    0x0(,%rax,8),%rbx
    0.00 :   6b3c:   mov    %ax,0x2d0(%r13)
    0.00 :   6b44:   sub    %rax,%rbx
    0.00 :   6b47:   shl    $0x3,%rbx
    0.00 :   6b4b:   lea    (%rcx,%rbx,1),%rax
    0.00 :   6b4f:   cmp    %rax,(%r14)
    0.00 :   6b52:   jb     7038 <_dl_map_object_from_fd+0x5d8>
    0.00 :   6b58:   lea    0x8(%r14,%rcx,1),%rax
    0.00 :   6b5d:   mov    %rax,-0x118(%rbp)
    0.00 :   6b64:   movzwl 0x2d0(%r13),%eax
    0.00 :   6b6c:   mov    %rsp,%rsi
    0.00 :   6b6f:   mov    %rsp,-0x130(%rbp)
    0.00 :   6b76:   lea    0x0(,%rax,8),%rdx
    0.00 :   6b7e:   sub    %rax,%rdx
    0.00 :   6b81:   shl    $0x3,%rdx
    0.00 :   6b85:   lea    0xf(%rdx),%rax
    0.00 :   6b89:   mov    %rax,%rcx
    0.00 :   6b8c:   and    $0xfffffffffffff000,%rax
    0.00 :   6b92:   sub    %rax,%rsi
    0.00 :   6b95:   and    $0xfffffffffffffff0,%rcx
    0.00 :   6b99:   cmp    %rsi,%rsp
    0.00 :   6b9c:   je     6bb3 <_dl_map_object_from_fd+0x153>
    0.00 :   6b9e:   sub    $0x1000,%rsp
    0.00 :   6ba5:   orq    $0x0,0xff8(%rsp)
    0.00 :   6bae:   cmp    %rsi,%rsp
    0.00 :   6bb1:   jne    6b9e <_dl_map_object_from_fd+0x13e>
    0.00 :   6bb3:   and    $0xfff,%ecx
    0.00 :   6bb9:   sub    %rcx,%rsp
    0.00 :   6bbc:   test   %rcx,%rcx
    0.00 :   6bbf:   je     6bc7 <_dl_map_object_from_fd+0x167>
    0.00 :   6bc1:   orq    $0x0,-0x8(%rsp,%rcx,1)
    0.00 :   6bc7:   lea    0x7(%rsp),%rax
    0.00 :   6bcc:   mov    %rax,%r10
    0.00 :   6bcf:   and    $0xfffffffffffffff8,%rax
    0.00 :   6bd3:   mov    %rax,-0xd8(%rbp)
    0.00 :   6bda:   mov    -0x118(%rbp),%rax
    0.00 :   6be1:   shr    $0x3,%r10
    0.00 :   6be5:   add    %rax,%rdx
    0.00 :   6be8:   cmp    %rdx,%rax
    0.00 :   6beb:   jae    7cd0 <_dl_map_object_from_fd+0x1270>
    0.00 :   6bf1:   mov    0x2de80(%rip),%rsi        # 34a78 <_rtld_global_ro+0x18>
    0.00 :   6bf8:   xor    %r8d,%r8d
    0.00 :   6bfb:   xor    %ecx,%ecx
    0.00 :   6bfd:   movb   $0x0,-0x108(%rbp)
    0.00 :   6c04:   movb   $0x0,-0xe8(%rbp)
    0.00 :   6c0b:   lea    -0x1(%rsi),%rax
    0.00 :   6c0f:   mov    %rsi,%rbx
    0.00 :   6c12:   movl   $0x7,-0xe0(%rbp)
    0.00 :   6c1c:   mov    %rax,-0x100(%rbp)
    0.00 :   6c23:   neg    %rbx
    0.00 :   6c26:   mov    -0x118(%rbp),%rax
    0.00 :   6c2d:   mov    %r12w,-0x134(%rbp)
    0.00 :   6c35:   mov    %rsi,-0x140(%rbp)
    0.00 :   6c3c:   mov    %r14,-0x148(%rbp)
    0.00 :   6c43:   mov    %r10,-0x150(%rbp)
    0.00 :   6c4a:   jmp    6c79 <_dl_map_object_from_fd+0x219>
    0.00 :   6c4c:   nopl   0x0(%rax)
    0.00 :   6c50:   cmp    $0x2,%esi
    0.00 :   6c53:   je     7260 <_dl_map_object_from_fd+0x800>
    0.00 :   6c59:   cmp    $0x6,%esi
    0.00 :   6c5c:   jne    70d0 <_dl_map_object_from_fd+0x670>
    0.00 :   6c62:   mov    0x10(%rax),%rsi
    0.00 :   6c66:   mov    %rsi,0x2c0(%r13)
    0.00 :   6c6d:   nopl   (%rax)
    0.00 :   6c70:   add    $0x38,%rax
    0.00 :   6c74:   cmp    %rdx,%rax
    0.00 :   6c77:   jae    6cc0 <_dl_map_object_from_fd+0x260>
    0.00 :   6c79:   mov    (%rax),%esi
    0.00 :   6c7b:   cmp    $0x7,%esi
    0.00 :   6c7e:   je     71b0 <_dl_map_object_from_fd+0x750>
    0.00 :   6c84:   jbe    6c50 <_dl_map_object_from_fd+0x1f0>
    0.00 :   6c86:   cmp    $0x6474e551,%esi
    0.00 :   6c8c:   je     72b0 <_dl_map_object_from_fd+0x850>
    0.00 :   6c92:   cmp    $0x6474e552,%esi
    0.00 :   6c98:   jne    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   6c9a:   movdqu 0x10(%rax),%xmm0
    0.00 :   6c9f:   movdqu 0x20(%rax),%xmm1
    0.00 :   6ca4:   add    $0x38,%rax
    0.00 :   6ca8:   shufpd $0x2,%xmm1,%xmm0
    0.00 :   6cad:   movups %xmm0,0x488(%r13)
    0.00 :   6cb5:   cmp    %rdx,%rax
    0.00 :   6cb8:   jb     6c79 <_dl_map_object_from_fd+0x219>
    0.00 :   6cba:   nopw   0x0(%rax,%rax,1)
    0.00 :   6cc0:   movzwl -0x134(%rbp),%r12d
    0.00 :   6cc8:   mov    -0x140(%rbp),%rsi
    0.00 :   6ccf:   mov    -0x148(%rbp),%r14
    0.00 :   6cd6:   mov    -0x150(%rbp),%r10
    0.00 :   6cdd:   test   %rcx,%rcx
    0.00 :   6ce0:   je     7cd0 <_dl_map_object_from_fd+0x1270>
    0.00 :   6ce6:   mov    -0xd8(%rbp),%rax
    0.00 :   6ced:   xor    %ebx,%ebx
    0.00 :   6cef:   add    $0x20,%rax
    0.00 :   6cf3:   nopl   0x0(%rax,%rax,1)
    0.00 :   6cf8:   mov    %rbx,%rdx
    0.00 :   6cfb:   add    $0x1,%rbx
    0.00 :   6cff:   mov    %r8,(%rax)
    0.00 :   6d02:   add    $0x38,%rax
    0.00 :   6d06:   cmp    %rbx,%rcx
    0.00 :   6d09:   jne    6cf8 <_dl_map_object_from_fd+0x298>
    0.00 :   6d0b:   movzwl %r12w,%eax
    0.00 :   6d0f:   mov    %eax,-0x134(%rbp)
    0.00 :   6d15:   cmp    $0x3,%r12w
    0.00 :   6d1a:   jne    7d11 <_dl_map_object_from_fd+0x12b1>
    0.00 :   6d20:   cmpq   $0x0,0x10(%r13)
    0.00 :   6d25:   je     7c2a <_dl_map_object_from_fd+0x11ca>
    0.00 :   6d2b:   cmpb   $0x0,-0x108(%rbp)
    0.00 :   6d32:   jne    7c2a <_dl_map_object_from_fd+0x11ca>
    0.00 :   6d38:   mov    -0xd8(%rbp),%rcx
    0.00 :   6d3f:   lea    0x0(,%rdx,8),%rax
    0.00 :   6d47:   mov    0x0(,%r10,8),%r12
    0.00 :   6d4f:   sub    %rdx,%rax
    0.00 :   6d52:   mov    0x20(,%r10,8),%r15
    0.00 :   6d5a:   mov    0x18(%rcx,%rax,8),%rax
    0.00 :   6d5f:   sub    %r12,%rax
    0.00 :   6d62:   mov    %rax,-0x100(%rbp)
    0.00 :   6d69:   cmp    %r15,%rsi
    0.00 :   6d6c:   jb     7e48 <_dl_map_object_from_fd+0x13e8>
    0.00 :   6d72:   mov    0x30(,%r10,8),%edx
    0.00 :   6d7a:   mov    $0x802,%ecx
    0.00 :   6d7f:   mov    %r12,%rdi
    0.00 :   6d82:   mov    0x28(,%r10,8),%r9
    0.00 :   6d8a:   mov    -0xdc(%rbp),%r8d
    0.00 :   6d91:   mov    -0x100(%rbp),%rsi
    0.00 :   6d98:   mov    %r10,-0x108(%rbp)
    0.00 :   6d9f:   call   21b30 <__mmap>
    0.00 :   6da4:   mov    -0x108(%rbp),%r10
    0.00 :   6dab:   cmp    $0xffffffffffffffff,%rax
    0.00 :   6daf:   mov    %rax,0x370(%r13)
    0.00 :   6db6:   mov    %rax,%r15
    0.00 :   6db9:   je     6f52 <_dl_map_object_from_fd+0x4f2>
    0.00 :   6dbf:   mov    -0x100(%rbp),%rax
    0.00 :   6dc6:   add    %r15,%rax
    0.00 :   6dc9:   sub    %r12,%r15
    0.00 :   6dcc:   cmpb   $0x0,-0xe8(%rbp)
    0.00 :   6dd3:   mov    %rax,0x378(%r13)
    0.00 :   6dda:   mov    %r15,0x0(%r13)
    0.00 :   6dde:   je     6e2c <_dl_map_object_from_fd+0x3cc>
    0.00 :   6de0:   mov    -0xd8(%rbp),%rcx
    0.00 :   6de7:   lea    0x0(,%rbx,8),%rax
    0.00 :   6def:   mov    %r10,-0xe8(%rbp)
    0.00 :   6df6:   sub    %rbx,%rax
    0.00 :   6df9:   mov    -0x38(%rcx,%rax,8),%rsi
    0.00 :   6dfe:   mov    0x8(,%r10,8),%rax
    0.00 :   6e06:   cmp    %rax,%rsi
    0.00 :   6e09:   jb     7f59 <_dl_map_object_from_fd+0x14f9>
    0.00 :   6e0f:   sub    %rax,%rsi
    0.00 :   6e12:   xor    %edx,%edx
    0.00 :   6e14:   lea    (%r15,%rax,1),%rdi
    0.00 :   6e18:   call   21bb0 <__GI___mprotect>
    0.00 :   6e1d:   mov    -0xe8(%rbp),%r10
    0.00 :   6e24:   test   %eax,%eax
    0.00 :   6e26:   js     7f65 <_dl_map_object_from_fd+0x1505>
    0.00 :   6e2c:   orb    $0x8,0x336(%r13)
    0.00 :   6e34:   mov    0x30(,%r10,8),%r10d
    0.00 :   6e3c:   mov    -0xd8(%rbp),%r12
    0.00 :   6e43:   test   $0x4,%r10b
    0.00 :   6e47:   je     6e59 <_dl_map_object_from_fd+0x3f9>
    0.00 :   6e49:   mov    0x8(%r12),%rax
    0.00 :   6e4e:   add    0x0(%r13),%rax
    0.00 :   6e52:   mov    %rax,0x380(%r13)
    0.00 :   6e59:   cmpq   $0x0,0x2c0(%r13)
    0.00 :   6e61:   je     7a72 <_dl_map_object_from_fd+0x1012>
    0.00 :   6e67:   mov    0x18(%r12),%rcx
    0.00 :   6e6c:   mov    0x10(%r12),%r8
    0.00 :   6e71:   cmp    %rcx,%r8
    0.00 :   6e74:   jae    6ee0 <_dl_map_object_from_fd+0x480>
    0.00 :   6e76:   mov    0x0(%r13),%rax
    0.00 :   6e7a:   mov    0x2dbf7(%rip),%rsi        # 34a78 <_rtld_global_ro+0x18>
    0.00 :   6e81:   add    %rax,%r8
    0.00 :   6e84:   add    %rax,%rcx
    0.00 :   6e87:   mov    %rsi,%rax
    0.00 :   6e8a:   neg    %rax
    0.00 :   6e8d:   lea    -0x1(%r8,%rsi,1),%r15
    0.00 :   6e92:   and    %rax,%r15
    0.00 :   6e95:   cmp    %rcx,%r15
    0.00 :   6e98:   cmova  %rcx,%r15
    0.00 :   6e9c:   cmp    %r15,%r8
    0.00 :   6e9f:   jae    6ed7 <_dl_map_object_from_fd+0x477>
    0.00 :   6ea1:   test   $0x2,%r10b
    0.00 :   6ea5:   je     811b <_dl_map_object_from_fd+0x16bb>
    0.00 :   6eab:   mov    %r15,%rdx
    0.00 :   6eae:   xor    %esi,%esi
    0.00 :   6eb0:   mov    %r8,%rdi
    0.00 :   6eb3:   mov    %r10d,-0x108(%rbp)
    0.00 :   6eba:   sub    %r8,%rdx
    0.00 :   6ebd:   mov    %rcx,-0xe8(%rbp)
    0.00 :   6ec4:   call   22850 <memset>
    0.00 :   6ec9:   mov    -0x108(%rbp),%r10d
    0.00 :   6ed0:   mov    -0xe8(%rbp),%rcx
    0.00 :   6ed7:   cmp    %rcx,%r15
    0.00 :   6eda:   jb     7cdc <_dl_map_object_from_fd+0x127c>
    0.00 :   6ee0:   add    $0x38,%r12
    0.00 :   6ee4:   mov    -0xd8(%rbp),%rcx
    0.00 :   6eeb:   lea    0x0(,%rbx,8),%rax
    0.00 :   6ef3:   sub    %rbx,%rax
    0.00 :   6ef6:   lea    (%rcx,%rax,8),%rax
    0.00 :   6efa:   cmp    %rax,%r12
    0.00 :   6efd:   jae    740d <_dl_map_object_from_fd+0x9ad>
    0.00 :   6f03:   mov    0x8(%r12),%rsi
    0.00 :   6f08:   mov    (%r12),%rdi
    0.00 :   6f0c:   mov    0x30(%r12),%r10d
    0.00 :   6f11:   cmp    %rsi,%rdi
    0.00 :   6f14:   jae    6e43 <_dl_map_object_from_fd+0x3e3>
    0.00 :   6f1a:   mov    0x28(%r12),%r9
    0.00 :   6f1f:   sub    %rdi,%rsi
    0.00 :   6f22:   mov    %r10d,%edx
    0.00 :   6f25:   add    0x0(%r13),%rdi
    0.00 :   6f29:   mov    -0xdc(%rbp),%r8d
    0.00 :   6f30:   mov    $0x812,%ecx
    0.00 :   6f35:   mov    %r10d,-0xe8(%rbp)
    0.00 :   6f3c:   call   21b30 <__mmap>
    0.00 :   6f41:   mov    -0xe8(%rbp),%r10d
    0.00 :   6f48:   cmp    $0xffffffffffffffff,%rax
    0.00 :   6f4c:   jne    6e43 <_dl_map_object_from_fd+0x3e3>
    0.00 :   6f52:   lea    0x24a37(%rip),%r12        # 2b990 <__PRETTY_FUNCTION__.0+0x290>
    0.00 :   6f59:   pxor   %xmm0,%xmm0
    0.00 :   6f5d:   movups %xmm0,0x370(%r13)
    0.00 :   6f65:   jmp    72d7 <_dl_map_object_from_fd+0x877>
    0.00 :   6f6a:   nopw   0x0(%rax,%rax,1)
    0.00 :   6f70:   mov    -0xdc(%rbp),%edi
    0.00 :   6f76:   lea    -0xc0(%rbp),%rsi
    0.00 :   6f7d:   call   21710 <__GI___fstat64>
    0.00 :   6f82:   test   %eax,%eax
    0.00 :   6f84:   js     7e19 <_dl_map_object_from_fd+0x13b9>
    0.00 :   6f8a:   mov    0x28(%rbp),%rdx
    0.00 :   6f8e:   lea    0x2e06b(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   6f95:   movdqa -0xc0(%rbp),%xmm3
    0.00 :   6f9d:   mov    -0xb8(%rbp),%rcx
    0.00 :   6fa4:   mov    -0xc0(%rbp),%rax
    0.00 :   6fab:   lea    (%rdx,%rdx,4),%rdx
    0.00 :   6faf:   movaps %xmm3,-0xd0(%rbp)
    0.00 :   6fb6:   shl    $0x5,%rdx
    0.00 :   6fba:   mov    (%rsi,%rdx,1),%r13
    0.00 :   6fbe:   test   %r13,%r13
    0.00 :   6fc1:   jne    6fdd <_dl_map_object_from_fd+0x57d>
    0.00 :   6fc3:   jmp    7370 <_dl_map_object_from_fd+0x910>
    0.00 :   6fc8:   nopl   0x0(%rax,%rax,1)
    0.00 :   6fd0:   mov    0x18(%r13),%r13
    0.00 :   6fd4:   test   %r13,%r13
    0.00 :   6fd7:   je     7370 <_dl_map_object_from_fd+0x910>
    0.00 :   6fdd:   testb  $0x4,0x336(%r13)
    0.00 :   6fe5:   jne    6fd0 <_dl_map_object_from_fd+0x570>
    0.00 :   6fe7:   cmp    0x3c8(%r13),%rax
    0.00 :   6fee:   jne    6fd0 <_dl_map_object_from_fd+0x570>
    0.00 :   6ff0:   cmp    0x3d0(%r13),%rcx
    0.00 :   6ff7:   jne    6fd0 <_dl_map_object_from_fd+0x570>
    0.00 :   6ff9:   mov    -0xdc(%rbp),%edi
    0.00 :   6fff:   call   21860 <__GI___close_nocancel>
    0.00 :   7004:   mov    -0xf8(%rbp),%rdi
    0.00 :   700b:   call   *0x2d9cf(%rip)        # 349e0 <__rtld_free>
    0.00 :   7011:   mov    0x38(%r13),%rdi
    0.00 :   7015:   mov    -0xf0(%rbp),%rsi
    0.00 :   701c:   call   5cd0 <add_name_to_object.isra.0>
    0.00 :   7021:   lea    -0x28(%rbp),%rsp
    0.00 :   7025:   mov    %r13,%rax
    0.00 :   7028:   pop    %rbx
    0.00 :   7029:   pop    %r12
    0.00 :   702b:   pop    %r13
    0.00 :   702d:   pop    %r14
    0.00 :   702f:   pop    %r15
    0.00 :   7031:   pop    %rbp
    0.00 :   7032:   ret
    0.00 :   7033:   nopl   0x0(%rax,%rax,1)
    0.00 :   7038:   lea    0x17(%rbx),%rax
    0.00 :   703c:   mov    %rsp,%rsi
    0.00 :   703f:   mov    %rax,%rdx
    0.00 :   7042:   and    $0xfffffffffffff000,%rax
    0.00 :   7048:   sub    %rax,%rsi
    0.00 :   704b:   and    $0xfffffffffffffff0,%rdx
    0.00 :   704f:   cmp    %rsi,%rsp
    0.00 :   7052:   je     7069 <_dl_map_object_from_fd+0x609>
    0.00 :   7054:   sub    $0x1000,%rsp
    0.00 :   705b:   orq    $0x0,0xff8(%rsp)
    0.00 :   7064:   cmp    %rsi,%rsp
    0.00 :   7067:   jne    7054 <_dl_map_object_from_fd+0x5f4>
    0.00 :   7069:   and    $0xfff,%edx
    0.00 :   706f:   sub    %rdx,%rsp
    0.00 :   7072:   test   %rdx,%rdx
    0.00 :   7075:   jne    7bff <_dl_map_object_from_fd+0x119f>
    0.00 :   707b:   lea    0xf(%rsp),%rax
    0.00 :   7080:   mov    -0xdc(%rbp),%edi
    0.00 :   7086:   mov    %rbx,%rdx
    0.00 :   7089:   and    $0xfffffffffffffff0,%rax
    0.00 :   708d:   mov    %rax,%rsi
    0.00 :   7090:   mov    %rax,-0x118(%rbp)
    0.00 :   7097:   call   21a20 <__GI___pread64_nocancel>
    0.00 :   709c:   cmp    %rbx,%rax
    0.00 :   709f:   je     6b64 <_dl_map_object_from_fd+0x104>
    0.00 :   70a5:   mov    0x2f1d5(%rip),%eax        # 36280 <rtld_errno>
    0.00 :   70ab:   mov    %eax,-0x10c(%rbp)
    0.00 :   70b1:   mov    -0xdc(%rbp),%eax
    0.00 :   70b7:   cmp    $0xffffffff,%eax
    0.00 :   70ba:   je     70c3 <_dl_map_object_from_fd+0x663>
    0.00 :   70bc:   mov    %eax,%edi
    0.00 :   70be:   call   21860 <__GI___close_nocancel>
    0.00 :   70c3:   lea    0x22979(%rip),%r12        # 29a43 <_sys_errname+0x683>
    0.00 :   70ca:   jmp    72f0 <_dl_map_object_from_fd+0x890>
    0.00 :   70cf:   nop
    0.00 :   70d0:   cmp    $0x1,%esi
    0.00 :   70d3:   jne    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   70d9:   mov    0x10(%rax),%rsi
    0.00 :   70dd:   mov    0x8(%rax),%r9
    0.00 :   70e1:   mov    -0x100(%rbp),%r11
    0.00 :   70e8:   mov    %rsi,%rdi
    0.00 :   70eb:   sub    %r9,%rdi
    0.00 :   70ee:   test   %rdi,%r11
    0.00 :   70f1:   jne    72d0 <_dl_map_object_from_fd+0x870>
    0.00 :   70f7:   lea    0x0(,%rcx,8),%r10
    0.00 :   70ff:   mov    -0xd8(%rbp),%r15
    0.00 :   7106:   mov    %rsi,%r14
    0.00 :   7109:   lea    0x1(%rcx),%r12
    0.00 :   710d:   mov    %r10,%rdi
    0.00 :   7110:   and    %rbx,%r14
    0.00 :   7113:   sub    %rcx,%rdi
    0.00 :   7116:   lea    (%r15,%rdi,8),%rdi
    0.00 :   711a:   mov    0x20(%rax),%r15
    0.00 :   711e:   mov    %r14,(%rdi)
    0.00 :   7121:   add    %rsi,%r15
    0.00 :   7124:   add    0x28(%rax),%rsi
    0.00 :   7128:   add    %r15,%r11
    0.00 :   712b:   mov    %rsi,0x18(%rdi)
    0.00 :   712f:   mov    0x30(%rax),%rsi
    0.00 :   7133:   and    %rbx,%r11
    0.00 :   7136:   mov    %r15,0x10(%rdi)
    0.00 :   713a:   cmp    %rsi,%r8
    0.00 :   713d:   mov    %r11,0x8(%rdi)
    0.00 :   7141:   mov    %rsi,%r11
    0.00 :   7144:   lea    -0x1(%rsi),%r15
    0.00 :   7148:   cmovae %r8,%r11
    0.00 :   714c:   test   %rsi,%r15
    0.00 :   714f:   cmove  %r11,%r8
    0.00 :   7153:   and    %rbx,%r9
    0.00 :   7156:   mov    %r9,0x28(%rdi)
    0.00 :   715a:   cmp    $0x1,%r12
    0.00 :   715e:   jbe    717a <_dl_map_object_from_fd+0x71a>
    0.00 :   7160:   cmp    -0x30(%rdi),%r14
    0.00 :   7164:   movzbl -0xe8(%rbp),%edi
    0.00 :   716b:   mov    $0x1,%esi
    0.00 :   7170:   cmovne %esi,%edi
    0.00 :   7173:   mov    %dil,-0xe8(%rbp)
    0.00 :   717a:   sub    %rcx,%r10
    0.00 :   717d:   mov    0x4(%rax),%ecx
    0.00 :   7180:   mov    $0x73516240,%edi
    0.00 :   7185:   and    $0x7,%ecx
    0.00 :   7188:   shl    $0x2,%ecx
    0.00 :   718b:   sar    %cl,%edi
    0.00 :   718d:   mov    %edi,%ecx
    0.00 :   718f:   mov    -0xd8(%rbp),%rdi
    0.00 :   7196:   and    $0xf,%ecx
    0.00 :   7199:   mov    %ecx,0x30(%rdi,%r10,8)
    0.00 :   719e:   mov    %r12,%rcx
    0.00 :   71a1:   jmp    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   71a6:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   71b0:   mov    0x28(%rax),%rdi
    0.00 :   71b4:   test   %rdi,%rdi
    0.00 :   71b7:   je     6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   71bd:   mov    0x30(%rax),%rsi
    0.00 :   71c1:   movq   %rdi,%xmm0
    0.00 :   71c6:   movq   %rsi,%xmm2
    0.00 :   71cb:   lea    -0x1(%rsi),%rdi
    0.00 :   71cf:   punpcklqdq %xmm2,%xmm0
    0.00 :   71d3:   movups %xmm0,0x458(%r13)
    0.00 :   71db:   mov    0x10(%rax),%r9
    0.00 :   71df:   and    %r9,%rdi
    0.00 :   71e2:   test   %rsi,%rsi
    0.00 :   71e5:   cmovne %rdi,%rsi
    0.00 :   71e9:   mov    %rsi,0x468(%r13)
    0.00 :   71f0:   mov    0x20(%rax),%rsi
    0.00 :   71f4:   mov    %r9,0x448(%r13)
    0.00 :   71fb:   mov    %rsi,0x450(%r13)
    0.00 :   7202:   movzbl 0x334(%r13),%esi
    0.00 :   720a:   and    $0x3,%esi
    0.00 :   720d:   cmp    $0x1,%sil
    0.00 :   7211:   je     6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   7217:   cmpq   $0x0,0x2ee49(%rip)        # 36068 <_rtld_global+0x1068>
    0.00 :   721f:   jne    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   7225:   cmpq   $0x0,0x20(%r13)
    0.00 :   722a:   je     6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   7230:   testl  $0x8000000,0x18(%rbp)
    0.00 :   7237:   jne    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   723d:   lea    0x23bac(%rip),%rcx        # 2adf0 <__PRETTY_FUNCTION__.1>
    0.00 :   7244:   mov    $0x4bb,%edx
    0.00 :   7249:   lea    0x228d8(%rip),%rsi        # 29b28 <_sys_errname+0x768>
    0.00 :   7250:   lea    0x24841(%rip),%rdi        # 2ba98 <__PRETTY_FUNCTION__.0+0x398>
    0.00 :   7257:   call   19f20 <__GI___assert_fail>
    0.00 :   725c:   nopl   0x0(%rax)
    0.00 :   7260:   cmpq   $0x0,0x20(%rax)
    0.00 :   7265:   je     72c0 <_dl_map_object_from_fd+0x860>
    0.00 :   7267:   mov    0x10(%rax),%rsi
    0.00 :   726b:   movzbl 0x336(%r13),%edi
    0.00 :   7273:   mov    %rsi,0x10(%r13)
    0.00 :   7277:   mov    0x28(%rax),%rsi
    0.00 :   727b:   and    $0xffffffdf,%edi
    0.00 :   727e:   shr    $0x4,%rsi
    0.00 :   7282:   mov    %si,0x2d2(%r13)
    0.00 :   728a:   mov    0x4(%rax),%esi
    0.00 :   728d:   shr    %esi
    0.00 :   728f:   xor    $0x1,%esi
    0.00 :   7292:   and    $0x1,%esi
    0.00 :   7295:   shl    $0x5,%esi
    0.00 :   7298:   or     %esi,%edi
    0.00 :   729a:   mov    %dil,0x336(%r13)
    0.00 :   72a1:   jmp    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   72a6:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   72b0:   mov    0x4(%rax),%edi
    0.00 :   72b3:   mov    %edi,-0xe0(%rbp)
    0.00 :   72b9:   jmp    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   72be:   xchg   %ax,%ax
    0.00 :   72c0:   movb   $0x1,-0x108(%rbp)
    0.00 :   72c7:   jmp    6c70 <_dl_map_object_from_fd+0x210>
    0.00 :   72cc:   nopl   0x0(%rax)
    0.00 :   72d0:   lea    0x246e9(%rip),%r12        # 2b9c0 <__PRETTY_FUNCTION__.0+0x2c0>
    0.00 :   72d7:   mov    -0xdc(%rbp),%eax
    0.00 :   72dd:   mov    -0x130(%rbp),%rsp
    0.00 :   72e4:   cmp    $0xffffffff,%eax
    0.00 :   72e7:   je     72f0 <_dl_map_object_from_fd+0x890>
    0.00 :   72e9:   mov    %eax,%edi
    0.00 :   72eb:   call   21860 <__GI___close_nocancel>
    0.00 :   72f0:   mov    0x370(%r13),%rdi
    0.00 :   72f7:   test   %rdi,%rdi
    0.00 :   72fa:   jne    7a5e <_dl_map_object_from_fd+0xffe>
    0.00 :   7300:   mov    0x368(%r13),%rdi
    0.00 :   7307:   cmp    $0xffffffffffffffff,%rdi
    0.00 :   730b:   je     7313 <_dl_map_object_from_fd+0x8b3>
    0.00 :   730d:   call   *0x2d6cd(%rip)        # 349e0 <__rtld_free>
    0.00 :   7313:   mov    0x38(%r13),%rdi
    0.00 :   7317:   mov    0x10(%rdi),%r8d
    0.00 :   731b:   test   %r8d,%r8d
    0.00 :   731e:   jne    7326 <_dl_map_object_from_fd+0x8c6>
    0.00 :   7320:   call   *0x2d6ba(%rip)        # 349e0 <__rtld_free>
    0.00 :   7326:   testb  $0x10,0x335(%r13)
    0.00 :   732e:   je     733d <_dl_map_object_from_fd+0x8dd>
    0.00 :   7330:   mov    0x2c0(%r13),%rdi
    0.00 :   7337:   call   *0x2d6a3(%rip)        # 349e0 <__rtld_free>
    0.00 :   733d:   mov    %r13,%rdi
    0.00 :   7340:   call   *0x2d69a(%rip)        # 349e0 <__rtld_free>
    0.00 :   7346:   mov    -0xf8(%rbp),%rdi
    0.00 :   734d:   call   *0x2d68d(%rip)        # 349e0 <__rtld_free>
    0.00 :   7353:   mov    -0x10c(%rbp),%edi
    0.00 :   7359:   mov    %r12,%rcx
    0.00 :   735c:   xor    %edx,%edx
    0.00 :   735e:   mov    -0xf0(%rbp),%rsi
    0.00 :   7365:   call   1070 <_dl_signal_error@plt>
    0.00 :   736a:   nopw   0x0(%rax,%rax,1)
    0.00 :   7370:   cmpq   $0x0,0x28(%rbp)
    0.00 :   7375:   je     6acf <_dl_map_object_from_fd+0x6f>
    0.00 :   737b:   cmp    0x2eaf6(%rip),%rax        # 35e78 <_rtld_global+0xe78>
    0.00 :   7382:   je     7f34 <_dl_map_object_from_fd+0x14d4>
    0.00 :   7388:   mov    -0xf0(%rbp),%rdi
    0.00 :   738f:   lea    0x2e71a(%rip),%rsi        # 35ab0 <_rtld_global+0xab0>
    0.00 :   7396:   call   ae50 <_dl_name_match_p>
    0.00 :   739b:   test   %eax,%eax
    0.00 :   739d:   je     6acf <_dl_map_object_from_fd+0x6f>
    0.00 :   73a3:   mov    0x28(%rbp),%r9
    0.00 :   73a7:   mov    0x18(%rbp),%r8d
    0.00 :   73ab:   mov    %rbx,%rcx
    0.00 :   73ae:   mov    0x10(%rbp),%edx
    0.00 :   73b1:   mov    -0xf0(%rbp),%rsi
    0.00 :   73b8:   mov    -0xf8(%rbp),%rdi
    0.00 :   73bf:   call   b110 <_dl_new_object>
    0.00 :   73c4:   mov    %rax,%r13
    0.00 :   73c7:   test   %rax,%rax
    0.00 :   73ca:   je     7ae0 <_dl_map_object_from_fd+0x1080>
    0.00 :   73d0:   lea    0x2e6d9(%rip),%rax        # 35ab0 <_rtld_global+0xab0>
    0.00 :   73d7:   mov    -0xdc(%rbp),%edi
    0.00 :   73dd:   mov    %rax,0x28(%r13)
    0.00 :   73e1:   mov    0x2e6c8(%rip),%rax        # 35ab0 <_rtld_global+0xab0>
    0.00 :   73e8:   mov    %rax,0x0(%r13)
    0.00 :   73ec:   mov    0x2e6cd(%rip),%rax        # 35ac0 <_rtld_global+0xac0>
    0.00 :   73f3:   mov    %rax,0x10(%r13)
    0.00 :   73f7:   call   21860 <__GI___close_nocancel>
    0.00 :   73fc:   mov    0x28(%rbp),%rsi
    0.00 :   7400:   mov    %r13,%rdi
    0.00 :   7403:   call   b070 <_dl_add_to_namespace_list>
    0.00 :   7408:   jmp    7021 <_dl_map_object_from_fd+0x5c1>
    0.00 :   740d:   mov    0x10(%r13),%rax
    0.00 :   7411:   mov    -0x130(%rbp),%rsp
    0.00 :   7418:   test   %rax,%rax
    0.00 :   741b:   je     7c36 <_dl_map_object_from_fd+0x11d6>
    0.00 :   7421:   mov    0x0(%r13),%rsi
    0.00 :   7425:   lea    (%rax,%rsi,1),%rdx
    0.00 :   7429:   mov    %rdx,0x10(%r13)
    0.00 :   742d:   test   %rdx,%rdx
    0.00 :   7430:   je     7c36 <_dl_map_object_from_fd+0x11d6>
    0.00 :   7436:   mov    (%rdx),%rax
    0.00 :   7439:   lea    0x40(%r13),%rcx
    0.00 :   743d:   test   %rax,%rax
    0.00 :   7440:   je     74f8 <_dl_map_object_from_fd+0xa98>
    0.00 :   7446:   mov    $0x6fffffff,%edi
    0.00 :   744b:   mov    $0x6ffffdff,%r11d
    0.00 :   7451:   mov    $0x35,%r10d
    0.00 :   7457:   mov    $0x70000025,%r9d
    0.00 :   745d:   jmp    747a <_dl_map_object_from_fd+0xa1a>
    0.00 :   745f:   nop
    0.00 :   7460:   mov    %r9,%rbx
    0.00 :   7463:   sub    %rax,%rbx
    0.00 :   7466:   mov    %rbx,%rax
    0.00 :   7469:   mov    %rdx,(%rcx,%rax,8)
    0.00 :   746d:   mov    0x10(%rdx),%rax
    0.00 :   7471:   add    $0x10,%rdx
    0.00 :   7475:   test   %rax,%rax
    0.00 :   7478:   je     74f8 <_dl_map_object_from_fd+0xa98>
    0.00 :   747a:   cmp    $0x25,%rax
    0.00 :   747e:   jbe    7469 <_dl_map_object_from_fd+0xa09>
    0.00 :   7480:   mov    %rdi,%r8
    0.00 :   7483:   sub    %rax,%r8
    0.00 :   7486:   cmp    $0xf,%r8
    0.00 :   748a:   jbe    7460 <_dl_map_object_from_fd+0xa00>
    0.00 :   748c:   lea    (%rax,%rax,1),%r8d
    0.00 :   7490:   mov    %r8d,%ebx
    0.00 :   7493:   sar    %ebx
    0.00 :   7495:   cmp    $0xfffffff8,%r8d
    0.00 :   7499:   jbe    74d0 <_dl_map_object_from_fd+0xa70>
    0.00 :   749b:   mov    %r10d,%eax
    0.00 :   749e:   sub    %ebx,%eax
    0.00 :   74a0:   jmp    7469 <_dl_map_object_from_fd+0xa09>
    0.00 :   74a2:   nopw   0x0(%rax,%rax,1)
    0.00 :   74a8:   mov    -0xf8(%rbp),%rdi
    0.00 :   74af:   xor    %r13d,%r13d
    0.00 :   74b2:   call   *0x2d528(%rip)        # 349e0 <__rtld_free>
    0.00 :   74b8:   mov    -0xdc(%rbp),%edi
    0.00 :   74be:   call   21860 <__GI___close_nocancel>
    0.00 :   74c3:   jmp    7021 <_dl_map_object_from_fd+0x5c1>
    0.00 :   74c8:   nopl   0x0(%rax,%rax,1)
    0.00 :   74d0:   mov    %r11,%r8
    0.00 :   74d3:   sub    %rax,%r8
    0.00 :   74d6:   cmp    $0xb,%r8
    0.00 :   74da:   ja     7b89 <_dl_map_object_from_fd+0x1129>
    0.00 :   74e0:   mov    $0x6ffffe38,%r8d
    0.00 :   74e6:   sub    %rax,%r8
    0.00 :   74e9:   mov    %r8,%rax
    0.00 :   74ec:   jmp    7469 <_dl_map_object_from_fd+0xa09>
    0.00 :   74f1:   nopl   0x0(%rax)
    0.00 :   74f8:   test   %rsi,%rsi
    0.00 :   74fb:   je     75b0 <_dl_map_object_from_fd+0xb50>
    0.00 :   7501:   testb  $0x20,0x336(%r13)
    0.00 :   7509:   jne    75b0 <_dl_map_object_from_fd+0xb50>
    0.00 :   750f:   mov    0x60(%r13),%rax
    0.00 :   7513:   test   %rax,%rax
    0.00 :   7516:   je     751c <_dl_map_object_from_fd+0xabc>
    0.00 :   7518:   add    %rsi,0x8(%rax)
    0.00 :   751c:   mov    0x58(%r13),%rax
    0.00 :   7520:   test   %rax,%rax
    0.00 :   7523:   je     7529 <_dl_map_object_from_fd+0xac9>
    0.00 :   7525:   add    %rsi,0x8(%rax)
  100.00 :   7529:   mov    0x68(%r13),%rax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/get-dynamic-info.h:86
    0.00 :   752d:   test   %rax,%rax
    0.00 :   7530:   je     7536 <_dl_map_object_from_fd+0xad6>
    0.00 :   7532:   add    %rsi,0x8(%rax)
    0.00 :   7536:   mov    0x70(%r13),%rax
    0.00 :   753a:   test   %rax,%rax
    0.00 :   753d:   je     7543 <_dl_map_object_from_fd+0xae3>
    0.00 :   753f:   add    %rsi,0x8(%rax)
    0.00 :   7543:   mov    0x160(%r13),%rdx
    0.00 :   754a:   test   %rdx,%rdx
    0.00 :   754d:   je     7553 <_dl_map_object_from_fd+0xaf3>
    0.00 :   754f:   add    %rsi,0x8(%rdx)
    0.00 :   7553:   mov    0xf8(%r13),%rax
    0.00 :   755a:   test   %rax,%rax
    0.00 :   755d:   je     7563 <_dl_map_object_from_fd+0xb03>
    0.00 :   755f:   add    %rsi,0x8(%rax)
    0.00 :   7563:   mov    0x1e8(%r13),%rax
    0.00 :   756a:   test   %rax,%rax
    0.00 :   756d:   je     7573 <_dl_map_object_from_fd+0xb13>
    0.00 :   756f:   add    %rsi,0x8(%rax)
    0.00 :   7573:   mov    0x2b8(%r13),%rax
    0.00 :   757a:   test   %rax,%rax
    0.00 :   757d:   je     7583 <_dl_map_object_from_fd+0xb23>
    0.00 :   757f:   add    %rsi,0x8(%rax)
    0.00 :   7583:   mov    0x78(%r13),%rcx
    0.00 :   7587:   mov    0xe0(%r13),%rax
    0.00 :   758e:   test   %rcx,%rcx
    0.00 :   7591:   je     8091 <_dl_map_object_from_fd+0x1631>
    0.00 :   7597:   mov    0x8(%rcx),%rdx
    0.00 :   759b:   test   %rdx,%rdx
    0.00 :   759e:   je     75a7 <_dl_map_object_from_fd+0xb47>
    0.00 :   75a0:   add    %rdx,%rsi
    0.00 :   75a3:   mov    %rsi,0x8(%rcx)
    0.00 :   75a7:   test   %rax,%rax
    0.00 :   75aa:   jne    75bc <_dl_map_object_from_fd+0xb5c>
    0.00 :   75ac:   jmp    75ce <_dl_map_object_from_fd+0xb6e>
    0.00 :   75ae:   xchg   %ax,%ax
    0.00 :   75b0:   mov    0xe0(%r13),%rax
    0.00 :   75b7:   test   %rax,%rax
    0.00 :   75ba:   je     75c7 <_dl_map_object_from_fd+0xb67>
    0.00 :   75bc:   cmpq   $0x7,0x8(%rax)
    0.00 :   75c1:   jne    82e8 <_dl_map_object_from_fd+0x1888>
    0.00 :   75c7:   cmpq   $0x0,0x78(%r13)
    0.00 :   75cc:   je     75e0 <_dl_map_object_from_fd+0xb80>
    0.00 :   75ce:   mov    0x88(%r13),%rax
    0.00 :   75d5:   cmpq   $0x18,0x8(%rax)
    0.00 :   75da:   jne    82c9 <_dl_map_object_from_fd+0x1869>
    0.00 :   75e0:   mov    0x160(%r13),%rdx
    0.00 :   75e7:   test   %rdx,%rdx
    0.00 :   75ea:   je     75fe <_dl_map_object_from_fd+0xb9e>
    0.00 :   75ec:   mov    0x168(%r13),%rax
    0.00 :   75f3:   cmpq   $0x8,0x8(%rax)
    0.00 :   75f8:   jne    8307 <_dl_map_object_from_fd+0x18a7>
    0.00 :   75fe:   mov    0x130(%r13),%rax
    0.00 :   7605:   test   %rax,%rax
    0.00 :   7608:   je     7636 <_dl_map_object_from_fd+0xbd6>
    0.00 :   760a:   mov    0x8(%rax),%rdx
    0.00 :   760e:   mov    %edx,0x408(%r13)
    0.00 :   7615:   test   $0x2,%dl
    0.00 :   7618:   je     7621 <_dl_map_object_from_fd+0xbc1>
    0.00 :   761a:   mov    %rax,0xc0(%r13)
    0.00 :   7621:   test   $0x4,%dl
    0.00 :   7624:   je     762d <_dl_map_object_from_fd+0xbcd>
    0.00 :   7626:   mov    %rax,0xf0(%r13)
    0.00 :   762d:   and    $0x8,%edx
    0.00 :   7630:   jne    7bcd <_dl_map_object_from_fd+0x116d>
    0.00 :   7636:   mov    0x190(%r13),%rax
    0.00 :   763d:   test   %rax,%rax
    0.00 :   7640:   je     7e0d <_dl_map_object_from_fd+0x13ad>
    0.00 :   7646:   mov    0x8(%rax),%rdx
    0.00 :   764a:   mov    %edx,0x404(%r13)
    0.00 :   7651:   mov    %edx,%eax
    0.00 :   7653:   test   $0x8,%dl
    0.00 :   7656:   jne    7bc0 <_dl_map_object_from_fd+0x1160>
    0.00 :   765c:   testb  $0x40,0x2d3fd(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   7663:   jne    809f <_dl_map_object_from_fd+0x163f>
    0.00 :   7669:   test   $0x1,%al
    0.00 :   766b:   jne    7bad <_dl_map_object_from_fd+0x114d>
    0.00 :   7671:   cmpq   $0x0,0x128(%r13)
    0.00 :   7679:   je     7686 <_dl_map_object_from_fd+0xc26>
    0.00 :   767b:   movq   $0x0,0xb8(%r13)
    0.00 :   7686:   mov    %eax,%edx
    0.00 :   7688:   and    $0x8000000,%edx
    0.00 :   768e:   test   $0x40,%al
    0.00 :   7690:   je     769d <_dl_map_object_from_fd+0xc3d>
    0.00 :   7692:   mov    0x18(%rbp),%ecx
    0.00 :   7695:   test   %ecx,%ecx
    0.00 :   7697:   js     82a7 <_dl_map_object_from_fd+0x1847>
    0.00 :   769d:   test   %edx,%edx
    0.00 :   769f:   je     76af <_dl_map_object_from_fd+0xc4f>
    0.00 :   76a1:   mov    -0x110(%rbp),%eax
    0.00 :   76a7:   test   %eax,%eax
    0.00 :   76a9:   je     8289 <_dl_map_object_from_fd+0x1829>
    0.00 :   76af:   mov    0x2c0(%r13),%rax
    0.00 :   76b6:   test   %rax,%rax
    0.00 :   76b9:   je     7c42 <_dl_map_object_from_fd+0x11e2>
    0.00 :   76bf:   add    0x0(%r13),%rax
    0.00 :   76c3:   mov    %rax,0x2c0(%r13)
    0.00 :   76ca:   mov    0x2e988(%rip),%eax        # 36058 <_rtld_global+0x1058>
    0.00 :   76d0:   mov    -0xe0(%rbp),%ebx
    0.00 :   76d6:   not    %eax
    0.00 :   76d8:   and    %ebx,%eax
    0.00 :   76da:   test   $0x1,%al
    0.00 :   76dc:   jne    7f9b <_dl_map_object_from_fd+0x153b>
    0.00 :   76e2:   mov    0x448(%r13),%rax
    0.00 :   76e9:   test   %rax,%rax
    0.00 :   76ec:   je     76f9 <_dl_map_object_from_fd+0xc99>
    0.00 :   76ee:   add    0x0(%r13),%rax
    0.00 :   76f2:   mov    %rax,0x448(%r13)
    0.00 :   76f9:   movzwl 0x2d0(%r13),%ecx
    0.00 :   7701:   mov    0x2c0(%r13),%rdx
    0.00 :   7708:   mov    -0xdc(%rbp),%r12d
    0.00 :   770f:   lea    0x0(,%rcx,8),%rax
    0.00 :   7717:   sub    %rcx,%rax
    0.00 :   771a:   lea    (%rdx,%rax,8),%rbx
    0.00 :   771e:   cmp    %rbx,%rdx
    0.00 :   7721:   jne    7752 <_dl_map_object_from_fd+0xcf2>
    0.00 :   7723:   jmp    7900 <_dl_map_object_from_fd+0xea0>
    0.00 :   7728:   nopl   0x0(%rax,%rax,1)
    0.00 :   7730:   cmp    $0x6474e553,%eax
    0.00 :   7735:   jne    7745 <_dl_map_object_from_fd+0xce5>
    0.00 :   7737:   mov    %rbx,%rdx
    0.00 :   773a:   mov    %r12d,%esi
    0.00 :   773d:   mov    %r13,%rdi
    0.00 :   7740:   call   69f0 <_dl_process_pt_gnu_property>
    0.00 :   7745:   cmp    %rbx,0x2c0(%r13)
    0.00 :   774c:   je     7900 <_dl_map_object_from_fd+0xea0>
    0.00 :   7752:   mov    -0x38(%rbx),%eax
    0.00 :   7755:   sub    $0x38,%rbx
    0.00 :   7759:   cmp    $0x4,%eax
    0.00 :   775c:   jne    7730 <_dl_map_object_from_fd+0xcd0>
    0.00 :   775e:   mov    0x10(%rbx),%rdx
    0.00 :   7762:   mov    0x0(%r13),%rax
    0.00 :   7766:   mov    0x28(%rbx),%r9
    0.00 :   776a:   testb  $0x3,0x339(%r13)
    0.00 :   7772:   jne    7745 <_dl_map_object_from_fd+0xce5>
    0.00 :   7774:   cmpq   $0x8,0x30(%rbx)
    0.00 :   7779:   jne    7745 <_dl_map_object_from_fd+0xce5>
    0.00 :   777b:   cmp    $0xc,%r9
    0.00 :   777f:   jbe    7be5 <_dl_map_object_from_fd+0x1185>
    0.00 :   7785:   add    %rax,%rdx
    0.00 :   7788:   mov    $0xc,%r10d
    0.00 :   778e:   mov    %rbx,%r15
    0.00 :   7791:   xor    %r11d,%r11d
    0.00 :   7794:   movl   $0x0,-0xe0(%rbp)
    0.00 :   779e:   xor    %r8d,%r8d
    0.00 :   77a1:   sub    %rdx,%r10
    0.00 :   77a4:   mov    %r12d,%ebx
    0.00 :   77a7:   movl   $0x0,-0xd8(%rbp)
    0.00 :   77b1:   jmp    77dc <_dl_map_object_from_fd+0xd7c>
    0.00 :   77b3:   nopl   0x0(%rax,%rax,1)
    0.00 :   77b8:   mov    0x4(%rdx),%edi
    0.00 :   77bb:   add    $0x13,%rax
    0.00 :   77bf:   and    $0xfffffffffffffff8,%rax
    0.00 :   77c3:   lea    0x7(%rdi,%rax,1),%rax
    0.00 :   77c8:   and    $0xfffffffffffffff8,%rax
    0.00 :   77cc:   add    %rax,%rdx
    0.00 :   77cf:   lea    (%rdx,%r10,1),%rax
    0.00 :   77d3:   cmp    %r9,%rax
    0.00 :   77d6:   jae    7b3b <_dl_map_object_from_fd+0x10db>
    0.00 :   77dc:   mov    (%rdx),%eax
    0.00 :   77de:   cmp    $0x4,%eax
    0.00 :   77e1:   jne    77b8 <_dl_map_object_from_fd+0xd58>
    0.00 :   77e3:   cmpl   $0x5,0x8(%rdx)
    0.00 :   77e7:   jne    77b8 <_dl_map_object_from_fd+0xd58>
    0.00 :   77e9:   cmpl   $0x554e47,0xc(%rdx)
    0.00 :   77f0:   jne    77b8 <_dl_map_object_from_fd+0xd58>
    0.00 :   77f2:   movzbl 0x339(%r13),%ecx
    0.00 :   77fa:   test   $0x3,%cl
    0.00 :   77fd:   jne    7b30 <_dl_map_object_from_fd+0x10d0>
    0.00 :   7803:   and    $0xfffffffc,%ecx
    0.00 :   7806:   or     $0x1,%ecx
    0.00 :   7809:   mov    %cl,0x339(%r13)
    0.00 :   7810:   mov    0x4(%rdx),%edi
    0.00 :   7813:   cmp    $0x7,%edi
    0.00 :   7816:   jbe    7b30 <_dl_map_object_from_fd+0x10d0>
    0.00 :   781c:   test   $0x7,%dil
    0.00 :   7820:   jne    7b30 <_dl_map_object_from_fd+0x10d0>
    0.00 :   7826:   lea    0x10(%rdx),%rcx
    0.00 :   782a:   mov    %rdx,-0xe8(%rbp)
    0.00 :   7831:   mov    %r11d,-0x108(%rbp)
    0.00 :   7838:   lea    (%rcx,%rdi,1),%r14
    0.00 :   783c:   jmp    7876 <_dl_map_object_from_fd+0xe16>
    0.00 :   783e:   xchg   %ax,%ax
    0.00 :   7840:   cmp    $0xb0008000,%r8d
    0.00 :   7847:   je     78d8 <_dl_map_object_from_fd+0xe78>
    0.00 :   784d:   cmp    $0xc0008002,%r8d
    0.00 :   7854:   ja     7f46 <_dl_map_object_from_fd+0x14e6>
    0.00 :   785a:   add    $0x7,%rdx
    0.00 :   785e:   and    $0xfffffffffffffff8,%rdx
    0.00 :   7862:   lea    (%rsi,%rdx,1),%rcx
    0.00 :   7866:   mov    %r14,%rdx
    0.00 :   7869:   sub    %rcx,%rdx
    0.00 :   786c:   cmp    $0x7,%rdx
    0.00 :   7870:   jle    7f46 <_dl_map_object_from_fd+0x14e6>
    0.00 :   7876:   mov    %r8d,%edx
    0.00 :   7879:   mov    (%rcx),%r8d
    0.00 :   787c:   mov    0x4(%rcx),%r11d
    0.00 :   7880:   cmp    %edx,%r8d
    0.00 :   7883:   jb     7b30 <_dl_map_object_from_fd+0x10d0>
    0.00 :   7889:   lea    0x8(%rcx),%rsi
    0.00 :   788d:   mov    %r11d,%edx
    0.00 :   7890:   lea    (%rsi,%rdx,1),%r12
    0.00 :   7894:   cmp    %r12,%r14
    0.00 :   7897:   jb     7b30 <_dl_map_object_from_fd+0x10d0>
    0.00 :   789d:   mov    %r8d,%r12d
    0.00 :   78a0:   and    $0xffff7fff,%r12d
    0.00 :   78a7:   cmp    $0xc0000002,%r12d
    0.00 :   78ae:   jne    7840 <_dl_map_object_from_fd+0xde0>
    0.00 :   78b0:   cmp    $0x4,%r11d
    0.00 :   78b4:   jne    7b30 <_dl_map_object_from_fd+0x10d0>
    0.00 :   78ba:   mov    0x8(%rcx),%ecx
    0.00 :   78bd:   cmp    $0xc0000002,%r8d
    0.00 :   78c4:   je     78f0 <_dl_map_object_from_fd+0xe90>
    0.00 :   78c6:   mov    -0xe8(%rbp),%rdx
    0.00 :   78cd:   mov    %ecx,%r11d
    0.00 :   78d0:   jmp    77bb <_dl_map_object_from_fd+0xd5b>
    0.00 :   78d5:   nopl   (%rax)
    0.00 :   78d8:   cmp    $0x4,%r11d
    0.00 :   78dc:   jne    7b30 <_dl_map_object_from_fd+0x10d0>
    0.00 :   78e2:   mov    0x8(%rcx),%ecx
    0.00 :   78e5:   mov    %ecx,-0xd8(%rbp)
    0.00 :   78eb:   jmp    785a <_dl_map_object_from_fd+0xdfa>
    0.00 :   78f0:   mov    %ecx,-0xe0(%rbp)
    0.00 :   78f6:   jmp    785a <_dl_map_object_from_fd+0xdfa>
    0.00 :   78fb:   nopl   0x0(%rax,%rax,1)
    0.00 :   7900:   mov    -0xdc(%rbp),%edi
    0.00 :   7906:   call   21860 <__GI___close_nocancel>
    0.00 :   790b:   test   %eax,%eax
    0.00 :   790d:   jne    7f71 <_dl_map_object_from_fd+0x1511>
    0.00 :   7913:   cmpl   $0x2,-0x134(%rbp)
    0.00 :   791a:   je     7c9c <_dl_map_object_from_fd+0x123c>
    0.00 :   7920:   mov    0x2c8(%r13),%rax
    0.00 :   7927:   mov    0x0(%r13),%r8
    0.00 :   792b:   add    %r8,%rax
    0.00 :   792e:   mov    %rax,0x2c8(%r13)
    0.00 :   7935:   testb  $0x40,0x2d124(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   793c:   jne    7ff0 <_dl_map_object_from_fd+0x1590>
    0.00 :   7942:   mov    %r13,%rdi
    0.00 :   7945:   call   10b50 <_dl_setup_hash>
    0.00 :   794a:   testb  $0x8,0x18(%rbp)
    0.00 :   794e:   jne    795e <_dl_map_object_from_fd+0xefe>
    0.00 :   7950:   cmpq   $0x0,0xc0(%r13)
    0.00 :   7958:   jne    8199 <_dl_map_object_from_fd+0x1739>
    0.00 :   795e:   testb  $0x20,0x404(%r13)
    0.00 :   7966:   je     796f <_dl_map_object_from_fd+0xf0f>
    0.00 :   7968:   mov    %r13,0x2e119(%rip)        # 35a88 <_rtld_global+0xa88>
    0.00 :   796f:   movdqa -0xd0(%rbp),%xmm4
    0.00 :   7977:   cmpq   $0x0,-0x128(%rbp)
    0.00 :   797f:   movups %xmm4,0x3c8(%r13)
    0.00 :   7987:   jne    807c <_dl_map_object_from_fd+0x161c>
    0.00 :   798d:   cmpq   $0x0,0x2d383(%rip)        # 34d18 <_rtld_global_ro+0x2b8>
    0.00 :   7995:   jne    803c <_dl_map_object_from_fd+0x15dc>
    0.00 :   799b:   mov    0x28(%rbp),%rax
    0.00 :   799f:   lea    0x2d65a(%rip),%r12        # 35000 <_rtld_global>
    0.00 :   79a6:   lea    0x0(,%rax,4),%rbx
    0.00 :   79ae:   mov    0x28(%rbp),%rax
    0.00 :   79b2:   add    %rbx,%rax
    0.00 :   79b5:   shl    $0x5,%rax
    0.00 :   79b9:   cmpq   $0x0,0x20(%r12,%rax,1)
    0.00 :   79bf:   je     7db2 <_dl_map_object_from_fd+0x1352>
    0.00 :   79c5:   cmpq   $0x0,0x458(%r13)
    0.00 :   79cd:   je     79ea <_dl_map_object_from_fd+0xf8a>
    0.00 :   79cf:   movzbl 0x334(%r13),%eax
    0.00 :   79d7:   and    $0x3,%eax
    0.00 :   79da:   cmp    $0x1,%al
    0.00 :   79dc:   jne    8108 <_dl_map_object_from_fd+0x16a8>
    0.00 :   79e2:   mov    %r13,%rdi
    0.00 :   79e5:   call   11760 <_dl_assign_tls_modid>
    0.00 :   79ea:   mov    0x28(%rbp),%rsi
    0.00 :   79ee:   mov    %r13,%rdi
    0.00 :   79f1:   call   b070 <_dl_add_to_namespace_list>
    0.00 :   79f6:   mov    -0x120(%rbp),%rax
    0.00 :   79fd:   mov    0x18(%rax),%eax
    0.00 :   7a00:   test   %eax,%eax
    0.00 :   7a02:   jne    7b07 <_dl_map_object_from_fd+0x10a7>
    0.00 :   7a08:   testl  $0x8000000,0x18(%rbp)
    0.00 :   7a0f:   je     7c0a <_dl_map_object_from_fd+0x11aa>
    0.00 :   7a15:   mov    -0x120(%rbp),%rbx
    0.00 :   7a1c:   movl   $0x1,0x18(%rbx)
    0.00 :   7a23:   call   2130 <_dl_debug_state>
    0.00 :   7a28:   nop
    0.00 :   7a29:   mov    0x30(%r13),%rax
    0.00 :   7a2d:   lea    0x2d5cc(%rip),%rdx        # 35000 <_rtld_global>
    0.00 :   7a34:   lea    (%rax,%rax,4),%rax
    0.00 :   7a38:   shl    $0x5,%rax
    0.00 :   7a3c:   mov    (%rdx,%rax,1),%rax
    0.00 :   7a40:   testb  $0x1,0x336(%rax)
    0.00 :   7a47:   jne    7021 <_dl_map_object_from_fd+0x5c1>
    0.00 :   7a4d:   mov    0x28(%rbp),%rsi
    0.00 :   7a51:   mov    %r13,%rdi
    0.00 :   7a54:   call   17400 <_dl_audit_objopen>
    0.00 :   7a59:   jmp    7021 <_dl_map_object_from_fd+0x5c1>
    0.00 :   7a5e:   mov    0x378(%r13),%rsi
    0.00 :   7a65:   sub    %rdi,%rsi
    0.00 :   7a68:   call   21b80 <__GI___munmap>
    0.00 :   7a6d:   jmp    7300 <_dl_map_object_from_fd+0x8a0>
    0.00 :   7a72:   mov    0x28(%r12),%rdx
    0.00 :   7a77:   mov    0x28(%r14),%rax
    0.00 :   7a7b:   cmp    %rdx,%rax
    0.00 :   7a7e:   jb     6e67 <_dl_map_object_from_fd+0x407>
    0.00 :   7a84:   movzwl 0x40(%r14),%edi
    0.00 :   7a89:   mov    0x8(%r12),%rcx
    0.00 :   7a8e:   mov    (%r12),%r8
    0.00 :   7a92:   lea    0x0(,%rdi,8),%rsi
    0.00 :   7a9a:   add    %rdx,%rcx
    0.00 :   7a9d:   sub    %rdi,%rsi
    0.00 :   7aa0:   sub    %r8,%rcx
    0.00 :   7aa3:   lea    (%rax,%rsi,8),%rsi
    0.00 :   7aa7:   cmp    %rsi,%rcx
    0.00 :   7aaa:   jb     6e67 <_dl_map_object_from_fd+0x407>
    0.00 :   7ab0:   add    %r8,%rax
    0.00 :   7ab3:   sub    %rdx,%rax
    0.00 :   7ab6:   mov    %rax,0x2c0(%r13)
    0.00 :   7abd:   jmp    6e67 <_dl_map_object_from_fd+0x407>
    0.00 :   7ac2:   mov    0x28(%rbp),%rdx
    0.00 :   7ac6:   mov    -0xf0(%rbp),%rsi
    0.00 :   7acd:   lea    0x23f9c(%rip),%rdi        # 2ba70 <__PRETTY_FUNCTION__.0+0x370>
    0.00 :   7ad4:   xor    %eax,%eax
    0.00 :   7ad6:   call   d1d0 <_dl_debug_printf>
    0.00 :   7adb:   jmp    6aee <_dl_map_object_from_fd+0x8e>
    0.00 :   7ae0:   mov    0x2e79a(%rip),%eax        # 36280 <rtld_errno>
    0.00 :   7ae6:   mov    %eax,-0x10c(%rbp)
    0.00 :   7aec:   mov    -0xdc(%rbp),%eax
    0.00 :   7af2:   cmp    $0xffffffff,%eax
    0.00 :   7af5:   jne    7bd9 <_dl_map_object_from_fd+0x1179>
    0.00 :   7afb:   lea    0x23e66(%rip),%r12        # 2b968 <__PRETTY_FUNCTION__.0+0x268>
    0.00 :   7b02:   jmp    733d <_dl_map_object_from_fd+0x8dd>
    0.00 :   7b07:   cmp    $0x1,%eax
    0.00 :   7b0a:   je     7a29 <_dl_map_object_from_fd+0xfc9>
    0.00 :   7b10:   lea    0x232d9(%rip),%rcx        # 2adf0 <__PRETTY_FUNCTION__.1>
    0.00 :   7b17:   mov    $0x5ec,%edx
    0.00 :   7b1c:   lea    0x22005(%rip),%rsi        # 29b28 <_sys_errname+0x768>
    0.00 :   7b23:   lea    0x220da(%rip),%rdi        # 29c04 <_sys_errname+0x844>
    0.00 :   7b2a:   call   19f20 <__GI___assert_fail>
    0.00 :   7b2f:   nop
    0.00 :   7b30:   mov    %ebx,%r12d
    0.00 :   7b33:   mov    %r15,%rbx
    0.00 :   7b36:   jmp    7745 <_dl_map_object_from_fd+0xce5>
    0.00 :   7b3b:   mov    -0xd8(%rbp),%ecx
    0.00 :   7b41:   mov    -0xe0(%rbp),%edx
    0.00 :   7b47:   mov    %ebx,%r12d
    0.00 :   7b4a:   mov    %r15,%rbx
    0.00 :   7b4d:   mov    %ecx,%eax
    0.00 :   7b4f:   or     %edx,%eax
    0.00 :   7b51:   or     %r11d,%eax
    0.00 :   7b54:   je     7be5 <_dl_map_object_from_fd+0x1185>
    0.00 :   7b5a:   movzbl 0x339(%r13),%eax
    0.00 :   7b62:   mov    %ecx,0x344(%r13)
    0.00 :   7b69:   mov    %r11d,0x340(%r13)
    0.00 :   7b70:   and    $0xfffffffc,%eax
    0.00 :   7b73:   mov    %edx,0x33c(%r13)
    0.00 :   7b7a:   or     $0x2,%eax
    0.00 :   7b7d:   mov    %al,0x339(%r13)
    0.00 :   7b84:   jmp    7745 <_dl_map_object_from_fd+0xce5>
    0.00 :   7b89:   mov    $0x6ffffeff,%r8d
    0.00 :   7b8f:   sub    %rax,%r8
    0.00 :   7b92:   cmp    $0xa,%r8
    0.00 :   7b96:   ja     746d <_dl_map_object_from_fd+0xa0d>
    0.00 :   7b9c:   mov    $0x6fffff44,%r8d
    0.00 :   7ba2:   sub    %rax,%r8
    0.00 :   7ba5:   mov    %r8,%rax
    0.00 :   7ba8:   jmp    7469 <_dl_map_object_from_fd+0xa09>
    0.00 :   7bad:   mov    0x190(%r13),%rdx
    0.00 :   7bb4:   mov    %rdx,0x100(%r13)
    0.00 :   7bbb:   jmp    7671 <_dl_map_object_from_fd+0xc11>
    0.00 :   7bc0:   movb   $0x1,0x338(%r13)
    0.00 :   7bc8:   jmp    765c <_dl_map_object_from_fd+0xbfc>
    0.00 :   7bcd:   mov    %rax,0x100(%r13)
    0.00 :   7bd4:   jmp    7636 <_dl_map_object_from_fd+0xbd6>
    0.00 :   7bd9:   mov    %eax,%edi
    0.00 :   7bdb:   call   21860 <__GI___close_nocancel>
    0.00 :   7be0:   jmp    7afb <_dl_map_object_from_fd+0x109b>
    0.00 :   7be5:   movzbl 0x339(%r13),%eax
    0.00 :   7bed:   and    $0xfffffffc,%eax
    0.00 :   7bf0:   or     $0x1,%eax
    0.00 :   7bf3:   mov    %al,0x339(%r13)
    0.00 :   7bfa:   jmp    7745 <_dl_map_object_from_fd+0xce5>
    0.00 :   7bff:   orq    $0x0,-0x8(%rsp,%rdx,1)
    0.00 :   7c05:   jmp    707b <_dl_map_object_from_fd+0x61b>
    0.00 :   7c0a:   mov    0x28(%rbp),%rdi
    0.00 :   7c0e:   mov    $0x1,%esi
    0.00 :   7c13:   call   172f0 <_dl_audit_activity_nsid>
    0.00 :   7c18:   jmp    7a15 <_dl_map_object_from_fd+0xfb5>
    0.00 :   7c1d:   cmpb   $0x0,-0x108(%rbp)
    0.00 :   7c24:   je     7d3e <_dl_map_object_from_fd+0x12de>
    0.00 :   7c2a:   lea    0x23dc7(%rip),%r12        # 2b9f8 <__PRETTY_FUNCTION__.0+0x2f8>
    0.00 :   7c31:   jmp    72d7 <_dl_map_object_from_fd+0x877>
    0.00 :   7c36:   mov    0x404(%r13),%eax
    0.00 :   7c3d:   jmp    7686 <_dl_map_object_from_fd+0xc26>
    0.00 :   7c42:   movzwl 0x40(%r14),%eax
    0.00 :   7c47:   lea    0x0(,%rax,8),%rdi
    0.00 :   7c4f:   sub    %rax,%rdi
    0.00 :   7c52:   shl    $0x3,%rdi
    0.00 :   7c56:   call   *0x2cd7c(%rip)        # 349d8 <__rtld_malloc>
    0.00 :   7c5c:   mov    %rax,%rdi
    0.00 :   7c5f:   test   %rax,%rax
    0.00 :   7c62:   je     8326 <_dl_map_object_from_fd+0x18c6>
    0.00 :   7c68:   movzwl 0x40(%r14),%eax
    0.00 :   7c6d:   mov    -0x118(%rbp),%rsi
    0.00 :   7c74:   lea    0x0(,%rax,8),%rdx
    0.00 :   7c7c:   sub    %rax,%rdx
    0.00 :   7c7f:   shl    $0x3,%rdx
    0.00 :   7c83:   call   22660 <memcpy>
    0.00 :   7c88:   orb    $0x10,0x335(%r13)
    0.00 :   7c90:   mov    %rax,0x2c0(%r13)
    0.00 :   7c97:   jmp    76ca <_dl_map_object_from_fd+0xc6a>
    0.00 :   7c9c:   testb  $0x3,0x334(%r13)
    0.00 :   7ca4:   je     7920 <_dl_map_object_from_fd+0xec0>
    0.00 :   7caa:   lea    0x2313f(%rip),%rcx        # 2adf0 <__PRETTY_FUNCTION__.1>
    0.00 :   7cb1:   mov    $0x57b,%edx
    0.00 :   7cb6:   lea    0x21e6b(%rip),%rsi        # 29b28 <_sys_errname+0x768>
    0.00 :   7cbd:   lea    0x23edc(%rip),%rdi        # 2bba0 <__PRETTY_FUNCTION__.0+0x4a0>
    0.00 :   7cc4:   call   19f20 <__GI___assert_fail>
    0.00 :   7cc9:   nopl   0x0(%rax)
    0.00 :   7cd0:   lea    0x23d71(%rip),%r12        # 2ba48 <__PRETTY_FUNCTION__.0+0x348>
    0.00 :   7cd7:   jmp    72d7 <_dl_map_object_from_fd+0x877>
    0.00 :   7cdc:   sub    %r15,%rcx
    0.00 :   7cdf:   xor    %r9d,%r9d
    0.00 :   7ce2:   mov    $0xffffffff,%r8d
    0.00 :   7ce8:   mov    %r10d,%edx
    0.00 :   7ceb:   mov    %rcx,%rsi
    0.00 :   7cee:   mov    %r15,%rdi
    0.00 :   7cf1:   mov    $0x32,%ecx
    0.00 :   7cf6:   call   21b30 <__mmap>
    0.00 :   7cfb:   cmp    $0xffffffffffffffff,%rax
    0.00 :   7cff:   jne    6ee0 <_dl_map_object_from_fd+0x480>
    0.00 :   7d05:   lea    0x21ec0(%rip),%r12        # 29bcc <_sys_errname+0x80c>
    0.00 :   7d0c:   jmp    6f59 <_dl_map_object_from_fd+0x4f9>
    0.00 :   7d11:   mov    -0x110(%rbp),%esi
    0.00 :   7d17:   test   %esi,%esi
    0.00 :   7d19:   je     8269 <_dl_map_object_from_fd+0x1809>
    0.00 :   7d1f:   cmpq   $0x0,0x10(%r13)
    0.00 :   7d24:   je     7c1d <_dl_map_object_from_fd+0x11bd>
    0.00 :   7d2a:   cmpb   $0x0,-0x108(%rbp)
    0.00 :   7d31:   lea    0x23cc0(%rip),%r12        # 2b9f8 <__PRETTY_FUNCTION__.0+0x2f8>
    0.00 :   7d38:   jne    72d7 <_dl_map_object_from_fd+0x877>
    0.00 :   7d3e:   mov    -0xd8(%rbp),%rcx
    0.00 :   7d45:   lea    0x0(,%rdx,8),%rax
    0.00 :   7d4d:   sub    %rdx,%rax
    0.00 :   7d50:   mov    0x18(%rcx,%rax,8),%rcx
    0.00 :   7d55:   mov    0x0(,%r10,8),%rax
    0.00 :   7d5d:   mov    %rcx,%rdx
    0.00 :   7d60:   sub    %rax,%rdx
    0.00 :   7d63:   mov    %rdx,-0x100(%rbp)
    0.00 :   7d6a:   mov    0x0(%r13),%rdx
    0.00 :   7d6e:   add    %rdx,%rax
    0.00 :   7d71:   add    %rcx,%rdx
    0.00 :   7d74:   mov    %rdx,0x378(%r13)
    0.00 :   7d7b:   movzbl -0xe8(%rbp),%edx
    0.00 :   7d82:   mov    %rax,0x370(%r13)
    0.00 :   7d89:   movzbl 0x336(%r13),%eax
    0.00 :   7d91:   xor    $0x1,%edx
    0.00 :   7d94:   and    $0x1,%edx
    0.00 :   7d97:   and    $0xfffffff7,%eax
    0.00 :   7d9a:   shl    $0x3,%edx
    0.00 :   7d9d:   or     %edx,%eax
    0.00 :   7d9f:   mov    %al,0x336(%r13)
    0.00 :   7da6:   mov    -0xd8(%rbp),%r12
    0.00 :   7dad:   jmp    6ee4 <_dl_map_object_from_fd+0x484>
    0.00 :   7db2:   mov    0xb0(%r13),%rax
    0.00 :   7db9:   test   %rax,%rax
    0.00 :   7dbc:   je     79c5 <_dl_map_object_from_fd+0xf65>
    0.00 :   7dc2:   mov    0x8(%rax),%rdi
    0.00 :   7dc6:   mov    0x68(%r13),%rax
    0.00 :   7dca:   mov    0x8(%rax),%rdx
    0.00 :   7dce:   xor    %eax,%eax
    0.00 :   7dd0:   testb  $0x20,0x336(%r13)
    0.00 :   7dd8:   je     7dde <_dl_map_object_from_fd+0x137e>
    0.00 :   7dda:   mov    0x0(%r13),%rax
    0.00 :   7dde:   add    %rdx,%rdi
    0.00 :   7de1:   lea    0x21e12(%rip),%rsi        # 29bfa <_sys_errname+0x83a>
    0.00 :   7de8:   add    %rax,%rdi
    0.00 :   7deb:   call   23430 <strcmp>
    0.00 :   7df0:   test   %eax,%eax
    0.00 :   7df2:   jne    79c5 <_dl_map_object_from_fd+0xf65>
    0.00 :   7df8:   mov    0x28(%rbp),%rax
    0.00 :   7dfc:   add    %rbx,%rax
    0.00 :   7dff:   shl    $0x5,%rax
    0.00 :   7e03:   mov    %r13,0x20(%r12,%rax,1)
    0.00 :   7e08:   jmp    79c5 <_dl_map_object_from_fd+0xf65>
    0.00 :   7e0d:   mov    0x404(%r13),%eax
    0.00 :   7e14:   jmp    7671 <_dl_map_object_from_fd+0xc11>
    0.00 :   7e19:   mov    0x2e461(%rip),%eax        # 36280 <rtld_errno>
    0.00 :   7e1f:   cmpl   $0xffffffff,-0xdc(%rbp)
    0.00 :   7e26:   mov    %eax,-0x10c(%rbp)
    0.00 :   7e2c:   je     7e39 <_dl_map_object_from_fd+0x13d9>
    0.00 :   7e2e:   mov    -0xdc(%rbp),%edi
    0.00 :   7e34:   call   21860 <__GI___close_nocancel>
    0.00 :   7e39:   lea    0x21d72(%rip),%r12        # 29bb2 <_sys_errname+0x7f2>
    0.00 :   7e40:   xor    %r13d,%r13d
    0.00 :   7e43:   jmp    733d <_dl_map_object_from_fd+0x8dd>
    0.00 :   7e48:   mov    -0x100(%rbp),%rcx
    0.00 :   7e4f:   lea    (%r15,%r15,1),%rdx
    0.00 :   7e53:   mov    $0xffffffff,%r8d
    0.00 :   7e59:   mov    %r12,%rdi
    0.00 :   7e5c:   mov    %r10,-0x140(%rbp)
    0.00 :   7e63:   cmp    %r15,%rcx
    0.00 :   7e66:   lea    (%rcx,%r15,1),%rax
    0.00 :   7e6a:   mov    $0x22,%ecx
    0.00 :   7e6f:   cmovb  %rdx,%rax
    0.00 :   7e73:   xor    %r9d,%r9d
    0.00 :   7e76:   xor    %edx,%edx
    0.00 :   7e78:   mov    %rax,%rsi
    0.00 :   7e7b:   mov    %rax,-0x108(%rbp)
    0.00 :   7e82:   call   21b30 <__mmap>
    0.00 :   7e87:   cmp    $0xffffffffffffffff,%rax
    0.00 :   7e8b:   je     6f52 <_dl_map_object_from_fd+0x4f2>
    0.00 :   7e91:   mov    -0x140(%rbp),%r10
    0.00 :   7e98:   lea    -0x1(%r15,%rax,1),%rdi
    0.00 :   7e9d:   neg    %r15
    0.00 :   7ea0:   mov    -0xdc(%rbp),%r8d
    0.00 :   7ea7:   mov    -0x100(%rbp),%rsi
    0.00 :   7eae:   and    %r15,%rdi
    0.00 :   7eb1:   mov    $0x812,%ecx
    0.00 :   7eb6:   mov    %rax,-0x148(%rbp)
    0.00 :   7ebd:   mov    0x30(,%r10,8),%edx
    0.00 :   7ec5:   mov    0x28(,%r10,8),%r9
    0.00 :   7ecd:   call   21b30 <__mmap>
    0.00 :   7ed2:   mov    -0x140(%rbp),%r10
    0.00 :   7ed9:   mov    -0x148(%rbp),%r11
    0.00 :   7ee0:   cmp    $0xffffffffffffffff,%rax
    0.00 :   7ee4:   mov    %rax,%r15
    0.00 :   7ee7:   je     8275 <_dl_map_object_from_fd+0x1815>
    0.00 :   7eed:   mov    %rax,%rsi
    0.00 :   7ef0:   sub    %r11,%rsi
    0.00 :   7ef3:   jne    80df <_dl_map_object_from_fd+0x167f>
    0.00 :   7ef9:   mov    0x2cb78(%rip),%rax        # 34a78 <_rtld_global_ro+0x18>
    0.00 :   7f00:   mov    -0x100(%rbp),%rcx
    0.00 :   7f07:   mov    -0x108(%rbp),%rsi
    0.00 :   7f0e:   lea    -0x1(%rax,%rcx,1),%rdi
    0.00 :   7f13:   neg    %rax
    0.00 :   7f16:   add    %r15,%rdi
    0.00 :   7f19:   add    %r11,%rsi
    0.00 :   7f1c:   and    %rax,%rdi
    0.00 :   7f1f:   sub    %rdi,%rsi
    0.00 :   7f22:   jne    80c7 <_dl_map_object_from_fd+0x1667>
    0.00 :   7f28:   mov    %r15,0x370(%r13)
    0.00 :   7f2f:   jmp    6dbf <_dl_map_object_from_fd+0x35f>
    0.00 :   7f34:   cmp    0x2df45(%rip),%rcx        # 35e80 <_rtld_global+0xe80>
    0.00 :   7f3b:   jne    7388 <_dl_map_object_from_fd+0x928>
    0.00 :   7f41:   jmp    73a3 <_dl_map_object_from_fd+0x943>
    0.00 :   7f46:   mov    -0xe8(%rbp),%rdx
    0.00 :   7f4d:   mov    -0x108(%rbp),%r11d
    0.00 :   7f54:   jmp    77bb <_dl_map_object_from_fd+0xd5b>
    0.00 :   7f59:   lea    0x23a60(%rip),%r12        # 2b9c0 <__PRETTY_FUNCTION__.0+0x2c0>
    0.00 :   7f60:   jmp    6f59 <_dl_map_object_from_fd+0x4f9>
    0.00 :   7f65:   lea    0x239a4(%rip),%r12        # 2b910 <__PRETTY_FUNCTION__.0+0x210>
    0.00 :   7f6c:   jmp    6f59 <_dl_map_object_from_fd+0x4f9>
    0.00 :   7f71:   mov    0x2e309(%rip),%eax        # 36280 <rtld_errno>
    0.00 :   7f77:   mov    %eax,-0x10c(%rbp)
    0.00 :   7f7d:   mov    -0xdc(%rbp),%eax
    0.00 :   7f83:   cmp    $0xffffffff,%eax
    0.00 :   7f86:   je     7f8f <_dl_map_object_from_fd+0x152f>
    0.00 :   7f88:   mov    %eax,%edi
    0.00 :   7f8a:   call   21860 <__GI___close_nocancel>
    0.00 :   7f8f:   lea    0x21bff(%rip),%r12        # 29b95 <_sys_errname+0x7d5>
    0.00 :   7f96:   jmp    72f0 <_dl_map_object_from_fd+0x890>
    0.00 :   7f9b:   mov    0x18(%rbp),%eax
    0.00 :   7f9e:   and    $0x88000000,%eax
    0.00 :   7fa3:   cmp    $0x80000000,%eax
    0.00 :   7fa8:   je     81f3 <_dl_map_object_from_fd+0x1793>
    0.00 :   7fae:   orl    $0x7,0x2baab(%rip)        # 33a60 <__stack_prot>
    0.00 :   7fb5:   mov    0x20(%rbp),%rdi
    0.00 :   7fb9:   call   38f0 <_dl_make_stacks_executable>
    0.00 :   7fbe:   mov    %eax,-0x10c(%rbp)
    0.00 :   7fc4:   test   %eax,%eax
    0.00 :   7fc6:   je     76e2 <_dl_map_object_from_fd+0xc82>
    0.00 :   7fcc:   mov    -0xdc(%rbp),%eax
    0.00 :   7fd2:   cmp    $0xffffffff,%eax
    0.00 :   7fd5:   je     7fde <_dl_map_object_from_fd+0x157e>
    0.00 :   7fd7:   mov    %eax,%edi
    0.00 :   7fd9:   call   21860 <__GI___close_nocancel>
    0.00 :   7fde:   lea    0x238c3(%rip),%r12        # 2b8a8 <__PRETTY_FUNCTION__.0+0x1a8>
    0.00 :   7fe5:   jmp    72f0 <_dl_map_object_from_fd+0x890>
    0.00 :   7fea:   nopw   0x0(%rax,%rax,1)
    0.00 :   7ff0:   movzwl 0x2d0(%r13),%ecx
    0.00 :   7ff8:   sub    $0x8,%rsp
    0.00 :   7ffc:   mov    0x10(%r13),%rdx
    0.00 :   8000:   mov    $0x10,%r9d
    0.00 :   8006:   mov    $0x10,%esi
    0.00 :   800b:   lea    0x23bbe(%rip),%rdi        # 2bbd0 <__PRETTY_FUNCTION__.0+0x4d0>
    0.00 :   8012:   push   %rcx
    0.00 :   8013:   mov    $0x10,%ecx
    0.00 :   8018:   push   $0x10
    0.00 :   801a:   push   0x2c0(%r13)
    0.00 :   8021:   push   $0x10
    0.00 :   8023:   push   %rax
    0.00 :   8024:   xor    %eax,%eax
    0.00 :   8026:   push   $0x10
    0.00 :   8028:   push   -0x100(%rbp)
    0.00 :   802e:   call   d1d0 <_dl_debug_printf>
    0.00 :   8033:   add    $0x40,%rsp
    0.00 :   8037:   jmp    7942 <_dl_map_object_from_fd+0xee2>
    0.00 :   803c:   mov    0xb0(%r13),%rax
    0.00 :   8043:   test   %rax,%rax
    0.00 :   8046:   je     79c5 <_dl_map_object_from_fd+0xf65>
    0.00 :   804c:   mov    0x8(%rax),%rsi
    0.00 :   8050:   mov    0x68(%r13),%rax
    0.00 :   8054:   mov    0x8(%rax),%rdx
    0.00 :   8058:   xor    %eax,%eax
    0.00 :   805a:   testb  $0x20,0x336(%r13)
    0.00 :   8062:   je     8068 <_dl_map_object_from_fd+0x1608>
    0.00 :   8064:   mov    0x0(%r13),%rax
    0.00 :   8068:   add    %rdx,%rsi
    0.00 :   806b:   mov    0x38(%r13),%rdi
    0.00 :   806f:   add    %rax,%rsi
    0.00 :   8072:   call   5cd0 <add_name_to_object.isra.0>
    0.00 :   8077:   jmp    799b <_dl_map_object_from_fd+0xf3b>
    0.00 :   807c:   mov    0x38(%r13),%rdi
    0.00 :   8080:   mov    -0x128(%rbp),%rsi
    0.00 :   8087:   call   5cd0 <add_name_to_object.isra.0>
    0.00 :   808c:   jmp    798d <_dl_map_object_from_fd+0xf2d>
    0.00 :   8091:   test   %rax,%rax
    0.00 :   8094:   jne    75bc <_dl_map_object_from_fd+0xb5c>
    0.00 :   809a:   jmp    75e7 <_dl_map_object_from_fd+0xb87>
    0.00 :   809f:   mov    %edx,%esi
    0.00 :   80a1:   and    $0xf7fff716,%esi
    0.00 :   80a7:   je     7669 <_dl_map_object_from_fd+0xc09>
    0.00 :   80ad:   xor    %eax,%eax
    0.00 :   80af:   lea    0x23aaa(%rip),%rdi        # 2bb60 <__PRETTY_FUNCTION__.0+0x460>
    0.00 :   80b6:   call   d1d0 <_dl_debug_printf>
    0.00 :   80bb:   mov    0x404(%r13),%eax
    0.00 :   80c2:   jmp    7669 <_dl_map_object_from_fd+0xc09>
    0.00 :   80c7:   mov    %r10,-0x108(%rbp)
    0.00 :   80ce:   call   21b80 <__GI___munmap>
    0.00 :   80d3:   mov    -0x108(%rbp),%r10
    0.00 :   80da:   jmp    7f28 <_dl_map_object_from_fd+0x14c8>
    0.00 :   80df:   mov    %r11,%rdi
    0.00 :   80e2:   mov    %r10,-0x148(%rbp)
    0.00 :   80e9:   mov    %r11,-0x140(%rbp)
    0.00 :   80f0:   call   21b80 <__GI___munmap>
    0.00 :   80f5:   mov    -0x148(%rbp),%r10
    0.00 :   80fc:   mov    -0x140(%rbp),%r11
    0.00 :   8103:   jmp    7ef9 <_dl_map_object_from_fd+0x1499>
    0.00 :   8108:   cmpq   $0x0,0x2df58(%rip)        # 36068 <_rtld_global+0x1068>
    0.00 :   8110:   jne    79e2 <_dl_map_object_from_fd+0xf82>
    0.00 :   8116:   jmp    79ea <_dl_map_object_from_fd+0xf8a>
    0.00 :   811b:   and    %r8,%rax
    0.00 :   811e:   mov    %r10d,%edx
    0.00 :   8121:   mov    %rcx,-0x140(%rbp)
    0.00 :   8128:   or     $0x2,%edx
    0.00 :   812b:   mov    %rax,%rdi
    0.00 :   812e:   mov    %r10d,-0x108(%rbp)
    0.00 :   8135:   mov    %r8,-0xe8(%rbp)
    0.00 :   813c:   call   21bb0 <__GI___mprotect>
    0.00 :   8141:   test   %eax,%eax
    0.00 :   8143:   js     7f65 <_dl_map_object_from_fd+0x1505>
    0.00 :   8149:   mov    -0xe8(%rbp),%r8
    0.00 :   8150:   mov    %r15,%rdx
    0.00 :   8153:   xor    %esi,%esi
    0.00 :   8155:   sub    %r8,%rdx
    0.00 :   8158:   mov    %r8,%rdi
    0.00 :   815b:   call   22850 <memset>
    0.00 :   8160:   mov    0x2c911(%rip),%rsi        # 34a78 <_rtld_global_ro+0x18>
    0.00 :   8167:   mov    -0x108(%rbp),%r10d
    0.00 :   816e:   mov    %rsi,%rdi
    0.00 :   8171:   mov    %r10d,%edx
    0.00 :   8174:   mov    %r10d,-0xe8(%rbp)
    0.00 :   817b:   neg    %rdi
    0.00 :   817e:   and    %rax,%rdi
    0.00 :   8181:   call   21bb0 <__GI___mprotect>
    0.00 :   8186:   mov    -0xe8(%rbp),%r10d
    0.00 :   818d:   mov    -0x140(%rbp),%rcx
    0.00 :   8194:   jmp    6ed7 <_dl_map_object_from_fd+0x477>
    0.00 :   8199:   mov    0x3b0(%r13),%rsi
    0.00 :   81a0:   lea    0x2d8(%r13),%rax
    0.00 :   81a7:   cmp    %rax,(%rsi)
    0.00 :   81aa:   je     795e <_dl_map_object_from_fd+0xefe>
    0.00 :   81b0:   mov    0x2e8(%r13),%rax
    0.00 :   81b7:   lea    0x8(%rsi),%rdi
    0.00 :   81bb:   mov    %r13,(%rax)
    0.00 :   81be:   mov    0x3a8(%r13),%rax
    0.00 :   81c5:   movl   $0x1,0x2f0(%r13)
    0.00 :   81d0:   lea    -0x8(,%rax,8),%rdx
    0.00 :   81d8:   call   22660 <memcpy>
    0.00 :   81dd:   mov    0x3b0(%r13),%rax
    0.00 :   81e4:   lea    0x2e8(%r13),%rdx
    0.00 :   81eb:   mov    %rdx,(%rax)
    0.00 :   81ee:   jmp    795e <_dl_map_object_from_fd+0xefe>
    0.00 :   81f3:   mov    0x2c87e(%rip),%rdx        # 34a78 <_rtld_global_ro+0x18>
    0.00 :   81fa:   mov    0x2dd37(%rip),%rax        # 35f38 <_rtld_global+0xf38>
    0.00 :   8201:   lea    0x2b858(%rip),%rbx        # 33a60 <__stack_prot>
    0.00 :   8208:   lea    0x2b855(%rip),%rcx        # 33a64 <__stack_prot+0x4>
    0.00 :   820f:   add    0x2d89a(%rip),%rax        # 35ab0 <_rtld_global+0xab0>
    0.00 :   8216:   add    0x2dd23(%rip),%rax        # 35f40 <_rtld_global+0xf40>
    0.00 :   821d:   mov    %rcx,%r12
    0.00 :   8220:   neg    %rdx
    0.00 :   8223:   and    %rdx,%rbx
    0.00 :   8226:   and    %rdx,%rax
    0.00 :   8229:   sub    %rbx,%r12
    0.00 :   822c:   cmp    %rcx,%rax
    0.00 :   822f:   jb     7fae <_dl_map_object_from_fd+0x154e>
    0.00 :   8235:   mov    $0x3,%edx
    0.00 :   823a:   mov    %r12,%rsi
    0.00 :   823d:   mov    %rbx,%rdi
    0.00 :   8240:   call   21bb0 <__GI___mprotect>
    0.00 :   8245:   test   %eax,%eax
    0.00 :   8247:   js     836f <_dl_map_object_from_fd+0x190f>
    0.00 :   824d:   mov    $0x1,%edx
    0.00 :   8252:   mov    %r12,%rsi
    0.00 :   8255:   mov    %rbx,%rdi
    0.00 :   8258:   orl    $0x7,0x2b801(%rip)        # 33a60 <__stack_prot>
    0.00 :   825f:   call   21bb0 <__GI___mprotect>
    0.00 :   8264:   jmp    7fb5 <_dl_map_object_from_fd+0x1555>
    0.00 :   8269:   lea    0x237b0(%rip),%r12        # 2ba20 <__PRETTY_FUNCTION__.0+0x320>
    0.00 :   8270:   jmp    72d7 <_dl_map_object_from_fd+0x877>
    0.00 :   8275:   mov    -0x108(%rbp),%rsi
    0.00 :   827c:   mov    %r11,%rdi
    0.00 :   827f:   call   21b80 <__GI___munmap>
    0.00 :   8284:   jmp    6f52 <_dl_map_object_from_fd+0x4f2>
    0.00 :   8289:   mov    -0xdc(%rbp),%eax
    0.00 :   828f:   cmp    $0xffffffff,%eax
    0.00 :   8292:   je     829b <_dl_map_object_from_fd+0x183b>
    0.00 :   8294:   mov    %eax,%edi
    0.00 :   8296:   call   21860 <__GI___close_nocancel>
    0.00 :   829b:   lea    0x235ce(%rip),%r12        # 2b870 <__PRETTY_FUNCTION__.0+0x170>
    0.00 :   82a2:   jmp    72f0 <_dl_map_object_from_fd+0x890>
    0.00 :   82a7:   test   %edx,%edx
    0.00 :   82a9:   jne    8289 <_dl_map_object_from_fd+0x1829>
    0.00 :   82ab:   mov    -0xdc(%rbp),%eax
    0.00 :   82b1:   cmp    $0xffffffff,%eax
    0.00 :   82b4:   je     82bd <_dl_map_object_from_fd+0x185d>
    0.00 :   82b6:   mov    %eax,%edi
    0.00 :   82b8:   call   21860 <__GI___close_nocancel>
    0.00 :   82bd:   lea    0x23624(%rip),%r12        # 2b8e8 <__PRETTY_FUNCTION__.0+0x1e8>
    0.00 :   82c4:   jmp    72f0 <_dl_map_object_from_fd+0x890>
    0.00 :   82c9:   lea    0x22b00(%rip),%rcx        # 2add0 <__PRETTY_FUNCTION__.0>
    0.00 :   82d0:   mov    $0x7b,%edx
    0.00 :   82d5:   lea    0x225e2(%rip),%rsi        # 2a8be <__PRETTY_FUNCTION__.2+0x1e3>
    0.00 :   82dc:   lea    0x2380d(%rip),%rdi        # 2baf0 <__PRETTY_FUNCTION__.0+0x3f0>
    0.00 :   82e3:   call   19f20 <__GI___assert_fail>
    0.00 :   82e8:   lea    0x22ae1(%rip),%rcx        # 2add0 <__PRETTY_FUNCTION__.0>
    0.00 :   82ef:   mov    $0x73,%edx
    0.00 :   82f4:   lea    0x225c3(%rip),%rsi        # 2a8be <__PRETTY_FUNCTION__.2+0x1e3>
    0.00 :   82fb:   lea    0x237c6(%rip),%rdi        # 2bac8 <__PRETTY_FUNCTION__.0+0x3c8>
    0.00 :   8302:   call   19f20 <__GI___assert_fail>
    0.00 :   8307:   lea    0x22ac2(%rip),%rcx        # 2add0 <__PRETTY_FUNCTION__.0>
    0.00 :   830e:   mov    $0x82,%edx
    0.00 :   8313:   lea    0x225a4(%rip),%rsi        # 2a8be <__PRETTY_FUNCTION__.2+0x1e3>
    0.00 :   831a:   lea    0x23807(%rip),%rdi        # 2bb28 <__PRETTY_FUNCTION__.0+0x428>
    0.00 :   8321:   call   19f20 <__GI___assert_fail>
    0.00 :   8326:   mov    0x2df54(%rip),%eax        # 36280 <rtld_errno>
    0.00 :   832c:   mov    %eax,-0x10c(%rbp)
    0.00 :   8332:   mov    -0xdc(%rbp),%eax
    0.00 :   8338:   cmp    $0xffffffff,%eax
    0.00 :   833b:   je     8344 <_dl_map_object_from_fd+0x18e4>
    0.00 :   833d:   mov    %eax,%edi
    0.00 :   833f:   call   21860 <__GI___close_nocancel>
    0.00 :   8344:   lea    0x235ed(%rip),%r12        # 2b938 <__PRETTY_FUNCTION__.0+0x238>
    0.00 :   834b:   jmp    72f0 <_dl_map_object_from_fd+0x890>
    0.00 :   8350:   lea    0x22a99(%rip),%rcx        # 2adf0 <__PRETTY_FUNCTION__.1>
    0.00 :   8357:   mov    $0x3c3,%edx
    0.00 :   835c:   lea    0x217c5(%rip),%rsi        # 29b28 <_sys_errname+0x768>
    0.00 :   8363:   lea    0x2187d(%rip),%rdi        # 29be7 <_sys_errname+0x827>
    0.00 :   836a:   call   19f20 <__GI___assert_fail>
    0.00 :   836f:   mov    0x2df0b(%rip),%eax        # 36280 <rtld_errno>
    0.00 :   8375:   mov    %eax,-0x10c(%rbp)
    0.00 :   837b:   mov    -0xdc(%rbp),%eax
    0.00 :   8381:   cmp    $0xffffffff,%eax
    0.00 :   8384:   je     838d <_dl_map_object_from_fd+0x192d>
    0.00 :   8386:   mov    %eax,%edi
    0.00 :   8388:   call   21860 <__GI___close_nocancel>
    0.00 :   838d:   lea    0x2357c(%rip),%r12        # 2b910 <__PRETTY_FUNCTION__.0+0x210>
    0.00 :   8394:   jmp    72f0 <_dl_map_object_from_fd+0x890>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[84fd0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000084f10 <_IO_default_xsputn>:
         : 6     __GI__IO_default_xsputn():
    0.00 :   84f10:  endbr64
    0.00 :   84f14:  push   %r15
    0.00 :   84f16:  xor    %eax,%eax
    0.00 :   84f18:  push   %r14
    0.00 :   84f1a:  push   %r13
    0.00 :   84f1c:  push   %r12
    0.00 :   84f1e:  push   %rbp
    0.00 :   84f1f:  push   %rbx
    0.00 :   84f20:  sub    $0x18,%rsp
    0.00 :   84f24:  mov    %rdx,(%rsp)
    0.00 :   84f28:  test   %rdx,%rdx
    0.00 :   84f2b:  je     84fc8 <_IO_default_xsputn+0xb8>
    0.00 :   84f31:  lea    0x14aac8(%rip),%r12        # 1cfa00 <_IO_helper_jumps>
    0.00 :   84f38:  mov    %rdi,%r13
    0.00 :   84f3b:  mov    %rsi,%r15
    0.00 :   84f3e:  mov    %rdx,%r14
    0.00 :   84f41:  lea    0x14b820(%rip),%rbp        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   84f48:  sub    %r12,%rbp
    0.00 :   84f4b:  jmp    84f8d <_IO_default_xsputn+0x7d>
    0.00 :   84f4d:  nopl   (%rax)
    0.00 :   84f50:  test   %rbx,%rbx
    0.00 :   84f53:  jne    84ff8 <_IO_default_xsputn+0xe8>
    0.00 :   84f59:  sub    %rbx,%r14
    0.00 :   84f5c:  test   %r14,%r14
    0.00 :   84f5f:  je     84fc4 <_IO_default_xsputn+0xb4>
    0.00 :   84f61:  mov    0xd8(%r13),%rax
    0.00 :   84f68:  mov    %rax,%rdx
    0.00 :   84f6b:  sub    %r12,%rdx
    0.00 :   84f6e:  cmp    %rbp,%rdx
    0.00 :   84f71:  jae    84fe0 <_IO_default_xsputn+0xd0>
    0.00 :   84f73:  movzbl (%r15),%esi
    0.00 :   84f77:  lea    0x1(%r15),%rbx
    0.00 :   84f7b:  mov    %r13,%rdi
    0.00 :   84f7e:  call   *0x18(%rax)
    0.00 :   84f81:  cmp    $0xffffffff,%eax
    0.00 :   84f84:  je     84fc0 <_IO_default_xsputn+0xb0>
    0.00 :   84f86:  sub    $0x1,%r14
    0.00 :   84f8a:  mov    %rbx,%r15
    0.00 :   84f8d:  mov    0x28(%r13),%rdi
    0.00 :   84f91:  mov    0x30(%r13),%rbx
    0.00 :   84f95:  cmp    %rbx,%rdi
    0.00 :   84f98:  jae    84f5c <_IO_default_xsputn+0x4c>
    0.00 :   84f9a:  sub    %rdi,%rbx
    0.00 :   84f9d:  cmp    %r14,%rbx
    0.00 :   84fa0:  cmova  %r14,%rbx
    0.00 :   84fa4:  cmp    $0x14,%rbx
    0.00 :   84fa8:  jbe    84f50 <_IO_default_xsputn+0x40>
    0.00 :   84faa:  mov    %r15,%rsi
    0.00 :   84fad:  mov    %rbx,%rdx
    0.00 :   84fb0:  add    %rbx,%r15
    0.00 :   84fb3:  call   263d0 <*ABS*+0x9ec40@plt>
    0.00 :   84fb8:  mov    %rax,0x28(%r13)
    0.00 :   84fbc:  jmp    84f59 <_IO_default_xsputn+0x49>
    0.00 :   84fbe:  xchg   %ax,%ax
    0.00 :   84fc0:  sub    %r14,(%rsp)
    0.00 :   84fc4:  mov    (%rsp),%rax
    0.00 :   84fc8:  add    $0x18,%rsp
    0.00 :   84fcc:  pop    %rbx
    0.00 :   84fcd:  pop    %rbp
    0.00 :   84fce:  pop    %r12
  100.00 :   84fd0:  pop    %r13 // libc.so.6[84fd0]
    0.00 :   84fd2:  pop    %r14
    0.00 :   84fd4:  pop    %r15
    0.00 :   84fd6:  ret
    0.00 :   84fd7:  nopw   0x0(%rax,%rax,1)
    0.00 :   84fe0:  mov    %rax,0x8(%rsp)
    0.00 :   84fe5:  call   818e0 <_IO_vtable_check>
    0.00 :   84fea:  mov    0x8(%rsp),%rax
    0.00 :   84fef:  jmp    84f73 <_IO_default_xsputn+0x63>
    0.00 :   84ff4:  nopl   0x0(%rax)
    0.00 :   84ff8:  xor    %eax,%eax
    0.00 :   84ffa:  nopw   0x0(%rax,%rax,1)
    0.00 :   85000:  movzbl (%r15,%rax,1),%edx
    0.00 :   85005:  mov    %dl,(%rdi,%rax,1)
    0.00 :   85008:  add    $0x1,%rax
    0.00 :   8500c:  cmp    %rbx,%rax
    0.00 :   8500f:  jne    85000 <_IO_default_xsputn+0xf0>
    0.00 :   85011:  add    %rbx,%rdi
    0.00 :   85014:  add    %rbx,%r15
    0.00 :   85017:  mov    %rdi,0x28(%r13)
    0.00 :   8501b:  jmp    84f59 <_IO_default_xsputn+0x49>

Sorted summary for file /usr/lib64/libpam.so.0.85.1
----------------------------------------------

  100.00 libpam.so.0.85.1[4611]
 Percent |	Source code & Disassembly of /usr/lib64/libpam.so.0.85.1 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000004600 <pam_get_data@@LIBPAM_1.0>:
    0.00 :   4600:   endbr64
    0.00 :   4604:   push   %r12
    0.00 :   4606:   push   %rbp
    0.00 :   4607:   push   %rbx
    0.00 :   4608:   test   %rdi,%rdi
    0.00 :   460b:   je     4662 <pam_get_data@@LIBPAM_1.0+0x62>
    0.00 :   460d:   cmpl   $0x2,0x8(%rdi)
  100.00 :   4611:   je     467a <pam_get_data@@LIBPAM_1.0+0x7a> // libpam.so.0.85.1[4611]
    0.00 :   4613:   mov    %rsi,%rbp
    0.00 :   4616:   test   %rsi,%rsi
    0.00 :   4619:   je     467a <pam_get_data@@LIBPAM_1.0+0x7a>
    0.00 :   461b:   mov    0x60(%rdi),%rbx
    0.00 :   461f:   mov    %rdx,%r12
    0.00 :   4622:   test   %rbx,%rbx
    0.00 :   4625:   jne    4639 <pam_get_data@@LIBPAM_1.0+0x39>
    0.00 :   4627:   jmp    4658 <pam_get_data@@LIBPAM_1.0+0x58>
    0.00 :   4629:   nopl   0x0(%rax)
    0.00 :   4630:   mov    0x18(%rbx),%rbx
    0.00 :   4634:   test   %rbx,%rbx
    0.00 :   4637:   je     4658 <pam_get_data@@LIBPAM_1.0+0x58>
    0.00 :   4639:   mov    (%rbx),%rdi
    0.00 :   463c:   mov    %rbp,%rsi
    0.00 :   463f:   call   37b0 <strcmp@plt>
    0.00 :   4644:   test   %eax,%eax
    0.00 :   4646:   jne    4630 <pam_get_data@@LIBPAM_1.0+0x30>
    0.00 :   4648:   mov    0x8(%rbx),%rdx
    0.00 :   464c:   mov    %rdx,(%r12)
    0.00 :   4650:   pop    %rbx
    0.00 :   4651:   pop    %rbp
    0.00 :   4652:   pop    %r12
    0.00 :   4654:   ret
    0.00 :   4655:   nopl   (%rax)
    0.00 :   4658:   pop    %rbx
    0.00 :   4659:   mov    $0x12,%eax
    0.00 :   465e:   pop    %rbp
    0.00 :   465f:   pop    %r12
    0.00 :   4661:   ret
    0.00 :   4662:   lea    0x83a7(%rip),%rdx        # ca10 <pam_modutil_search_key@@LIBPAM_MODUTIL_1.3.2+0x1110>
    0.00 :   4669:   mov    $0x1,%esi
    0.00 :   466e:   mov    $0x3,%edi
    0.00 :   4673:   xor    %eax,%eax
    0.00 :   4675:   call   3940 <__syslog_chk@plt>
    0.00 :   467a:   pop    %rbx
    0.00 :   467b:   mov    $0x4,%eax
    0.00 :   4680:   pop    %rbp
    0.00 :   4681:   pop    %r12
    0.00 :   4683:   ret

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-fini.c:82
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000004880 <_dl_fini>:
         : 6    _dl_fini():
    0.00 :   4880:   endbr64
    0.00 :   4884:   push   %rbp
    0.00 :   4885:   mov    %rsp,%rbp
    0.00 :   4888:   push   %r15
    0.00 :   488a:   push   %r14
    0.00 :   488c:   push   %r13
    0.00 :   488e:   lea    0x31173(%rip),%r13        # 35a08 <_rtld_global+0xa08>
    0.00 :   4895:   push   %r12
    0.00 :   4897:   push   %rbx
    0.00 :   4898:   sub    $0x38,%rsp
    0.00 :   489c:   movl   $0x2,-0x48(%rbp)
    0.00 :   48a3:   movl   $0x0,-0x44(%rbp)
    0.00 :   48aa:   mov    0x3114f(%rip),%rax        # 35a00 <_rtld_global+0xa00>
    0.00 :   48b1:   mov    %rax,%r12
    0.00 :   48b4:   sub    $0x1,%r12
    0.00 :   48b8:   js     4b40 <_dl_fini+0x2c0>
    0.00 :   48be:   lea    (%rax,%rax,4),%rax
    0.00 :   48c2:   lea    0x30737(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   48c9:   shl    $0x5,%rax
    0.00 :   48cd:   lea    -0xa0(%rsi,%rax,1),%rbx
    0.00 :   48d5:   jmp    48fe <_dl_fini+0x7e>
    0.00 :   48d7:   nopw   0x0(%rax,%rax,1)
    0.00 :   48e0:   mov    %r13,%rdi
    0.00 :   48e3:   call   *0x30107(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   48e9:   sub    $0x1,%r12
    0.00 :   48ed:   sub    $0xa0,%rbx
    0.00 :   48f4:   cmp    $0xffffffffffffffff,%r12
    0.00 :   48f8:   je     4b40 <_dl_fini+0x2c0>
    0.00 :   48fe:   mov    %r13,%rdi
    0.00 :   4901:   call   *0x300f1(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   4907:   mov    0x8(%rbx),%r15d
    0.00 :   490b:   test   %r15d,%r15d
    0.00 :   490e:   je     48e0 <_dl_fini+0x60>
    0.00 :   4910:   mov    (%rbx),%rax
    0.00 :   4913:   mov    -0x44(%rbp),%ecx
    0.00 :   4916:   movzbl 0x336(%rax),%eax
    0.00 :   491d:   and    $0x1,%eax
    0.00 :   4920:   cmp    %ecx,%eax
    0.00 :   4922:   jne    48e0 <_dl_fini+0x60>
    0.00 :   4924:   mov    $0x2,%esi
    0.00 :   4929:   mov    %r12,%rdi
    0.00 :   492c:   mov    %rsp,-0x58(%rbp)
    0.00 :   4930:   call   172f0 <_dl_audit_activity_nsid>
    0.00 :   4935:   mov    %r15d,%eax
    0.00 :   4938:   mov    %rsp,%rdx
    0.00 :   493b:   lea    0xf(,%rax,8),%rax
    0.00 :   4943:   shr    $0x4,%rax
    0.00 :   4947:   shl    $0x4,%rax
    0.00 :   494b:   mov    %rax,%rcx
    0.00 :   494e:   and    $0xfffffffffffff000,%rcx
    0.00 :   4955:   sub    %rcx,%rdx
    0.00 :   4958:   cmp    %rdx,%rsp
    0.00 :   495b:   je     4972 <_dl_fini+0xf2>
    0.00 :   495d:   sub    $0x1000,%rsp
    0.00 :   4964:   orq    $0x0,0xff8(%rsp)
    0.00 :   496d:   cmp    %rdx,%rsp
    0.00 :   4970:   jne    495d <_dl_fini+0xdd>
    0.00 :   4972:   and    $0xfff,%eax
    0.00 :   4977:   sub    %rax,%rsp
    0.00 :   497a:   test   %rax,%rax
    0.00 :   497d:   jne    4b97 <_dl_fini+0x317>
    0.00 :   4983:   mov    (%rbx),%rax
    0.00 :   4986:   mov    %rsp,%r14
    0.00 :   4989:   xor    %esi,%esi
    0.00 :   498b:   test   %rax,%rax
    0.00 :   498e:   jne    49a1 <_dl_fini+0x121>
    0.00 :   4990:   jmp    49cf <_dl_fini+0x14f>
    0.00 :   4992:   nopw   0x0(%rax,%rax,1)
    0.00 :   4998:   mov    0x18(%rax),%rax
    0.00 :   499c:   test   %rax,%rax
    0.00 :   499f:   je     49cf <_dl_fini+0x14f>
    0.00 :   49a1:   cmp    %rax,0x28(%rax)
    0.00 :   49a5:   jne    4998 <_dl_fini+0x118>
  100.00 :   49a7:   cmp    %r15d,%esi // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-fini.c:82
    0.00 :   49aa:   jae    4bc0 <_dl_fini+0x340>
    0.00 :   49b0:   mov    %esi,%edx
    0.00 :   49b2:   mov    %rax,(%r14,%rdx,8)
    0.00 :   49b6:   mov    %esi,0x40c(%rax)
    0.00 :   49bc:   add    $0x1,%esi
    0.00 :   49bf:   addl   $0x1,0x330(%rax)
    0.00 :   49c6:   mov    0x18(%rax),%rax
    0.00 :   49ca:   test   %rax,%rax
    0.00 :   49cd:   jne    49a1 <_dl_fini+0x121>
    0.00 :   49cf:   cmp    %esi,%r15d
    0.00 :   49d2:   sete   %al
    0.00 :   49d5:   test   %r12,%r12
    0.00 :   49d8:   jne    49e2 <_dl_fini+0x162>
    0.00 :   49da:   test   %al,%al
    0.00 :   49dc:   je     4bfe <_dl_fini+0x37e>
    0.00 :   49e2:   test   %r12,%r12
    0.00 :   49e5:   sete   %dl
    0.00 :   49e8:   test   %al,%al
    0.00 :   49ea:   jne    49fd <_dl_fini+0x17d>
    0.00 :   49ec:   test   %dl,%dl
    0.00 :   49ee:   jne    49fd <_dl_fini+0x17d>
    0.00 :   49f0:   sub    $0x1,%r15d
    0.00 :   49f4:   cmp    %esi,%r15d
    0.00 :   49f7:   jne    4bdf <_dl_fini+0x35f>
    0.00 :   49fd:   movzbl %dl,%edx
    0.00 :   4a00:   mov    $0x1,%ecx
    0.00 :   4a05:   mov    %r14,%rdi
    0.00 :   4a08:   mov    %esi,-0x38(%rbp)
    0.00 :   4a0b:   call   10d20 <_dl_sort_maps>
    0.00 :   4a10:   mov    %r13,%rdi
    0.00 :   4a13:   call   *0x2ffd7(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   4a19:   mov    -0x38(%rbp),%esi
    0.00 :   4a1c:   test   %esi,%esi
    0.00 :   4a1e:   je     4ae2 <_dl_fini+0x262>
    0.00 :   4a24:   lea    (%r14,%rsi,8),%rax
    0.00 :   4a28:   mov    %rax,-0x50(%rbp)
    0.00 :   4a2c:   nopl   0x0(%rax)
    0.00 :   4a30:   mov    (%r14),%r15
    0.00 :   4a33:   movzbl 0x334(%r15),%eax
    0.00 :   4a3b:   test   $0x10,%al
    0.00 :   4a3d:   je     4acc <_dl_fini+0x24c>
    0.00 :   4a43:   and    $0xffffffef,%eax
    0.00 :   4a46:   mov    %al,0x334(%r15)
    0.00 :   4a4d:   mov    0x110(%r15),%rax
    0.00 :   4a54:   test   %rax,%rax
    0.00 :   4a57:   je     4af8 <_dl_fini+0x278>
    0.00 :   4a5d:   testb  $0x2,0x2fffc(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   4a64:   jne    4b10 <_dl_fini+0x290>
    0.00 :   4a6a:   mov    0x8(%rax),%rax
    0.00 :   4a6e:   add    (%r15),%rax
    0.00 :   4a71:   mov    %rax,%rsi
    0.00 :   4a74:   mov    %rax,-0x40(%rbp)
    0.00 :   4a78:   mov    0x120(%r15),%rax
    0.00 :   4a7f:   mov    0x8(%rax),%rdx
    0.00 :   4a83:   shr    $0x3,%rdx
    0.00 :   4a87:   lea    -0x1(%rdx),%eax
    0.00 :   4a8a:   lea    (%rsi,%rax,8),%rax
    0.00 :   4a8e:   test   %edx,%edx
    0.00 :   4a90:   je     4aaf <_dl_fini+0x22f>
    0.00 :   4a92:   nopw   0x0(%rax,%rax,1)
    0.00 :   4a98:   mov    %rax,-0x38(%rbp)
    0.00 :   4a9c:   call   *(%rax)
    0.00 :   4a9e:   mov    -0x38(%rbp),%rax
    0.00 :   4aa2:   mov    %rax,%rdx
    0.00 :   4aa5:   sub    $0x8,%rax
    0.00 :   4aa9:   cmp    %rdx,-0x40(%rbp)
    0.00 :   4aad:   jne    4a98 <_dl_fini+0x218>
    0.00 :   4aaf:   mov    0xa8(%r15),%rax
    0.00 :   4ab6:   test   %rax,%rax
    0.00 :   4ab9:   je     4ac4 <_dl_fini+0x244>
    0.00 :   4abb:   mov    0x8(%rax),%rax
    0.00 :   4abf:   add    (%r15),%rax
    0.00 :   4ac2:   call   *%rax
    0.00 :   4ac4:   mov    %r15,%rdi
    0.00 :   4ac7:   call   174d0 <_dl_audit_objclose>
    0.00 :   4acc:   subl   $0x1,0x330(%r15)
    0.00 :   4ad4:   add    $0x8,%r14
    0.00 :   4ad8:   cmp    %r14,-0x50(%rbp)
    0.00 :   4adc:   jne    4a30 <_dl_fini+0x1b0>
    0.00 :   4ae2:   xor    %esi,%esi
    0.00 :   4ae4:   mov    %r12,%rdi
    0.00 :   4ae7:   call   172f0 <_dl_audit_activity_nsid>
    0.00 :   4aec:   mov    -0x58(%rbp),%rsp
    0.00 :   4af0:   jmp    48e9 <_dl_fini+0x69>
    0.00 :   4af5:   nopl   (%rax)
    0.00 :   4af8:   mov    0xa8(%r15),%rax
    0.00 :   4aff:   test   %rax,%rax
    0.00 :   4b02:   je     4ac4 <_dl_fini+0x244>
    0.00 :   4b04:   testb  $0x2,0x2ff55(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   4b0b:   je     4abb <_dl_fini+0x23b>
    0.00 :   4b0d:   nopl   (%rax)
    0.00 :   4b10:   mov    0x8(%r15),%rsi
    0.00 :   4b14:   cmpb   $0x0,(%rsi)
    0.00 :   4b17:   je     4b7a <_dl_fini+0x2fa>
    0.00 :   4b19:   xor    %eax,%eax
    0.00 :   4b1b:   mov    %r12,%rdx
    0.00 :   4b1e:   lea    0x24d75(%rip),%rdi        # 2989a <_sys_errname+0x4da>
    0.00 :   4b25:   call   d1d0 <_dl_debug_printf>
    0.00 :   4b2a:   mov    0x110(%r15),%rax
    0.00 :   4b31:   test   %rax,%rax
    0.00 :   4b34:   je     4aaf <_dl_fini+0x22f>
    0.00 :   4b3a:   jmp    4a6a <_dl_fini+0x1ea>
    0.00 :   4b3f:   nop
    0.00 :   4b40:   cmpl   $0x1,-0x48(%rbp)
    0.00 :   4b44:   je     4b62 <_dl_fini+0x2e2>
    0.00 :   4b46:   mov    0x3028c(%rip),%eax        # 34dd8 <_rtld_global_ro+0x378>
    0.00 :   4b4c:   movl   $0x1,-0x44(%rbp)
    0.00 :   4b53:   movl   $0x1,-0x48(%rbp)
    0.00 :   4b5a:   test   %eax,%eax
    0.00 :   4b5c:   jne    48aa <_dl_fini+0x2a>
    0.00 :   4b62:   testb  $0x80,0x2fef7(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   4b69:   jne    4ba2 <_dl_fini+0x322>
    0.00 :   4b6b:   lea    -0x28(%rbp),%rsp
    0.00 :   4b6f:   pop    %rbx
    0.00 :   4b70:   pop    %r12
    0.00 :   4b72:   pop    %r13
    0.00 :   4b74:   pop    %r14
    0.00 :   4b76:   pop    %r15
    0.00 :   4b78:   pop    %rbp
    0.00 :   4b79:   ret
    0.00 :   4b7a:   mov    0x2feb7(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   4b81:   mov    (%rax),%rsi
    0.00 :   4b84:   lea    0x24da1(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   4b8b:   test   %rsi,%rsi
    0.00 :   4b8e:   cmove  %rax,%rsi
    0.00 :   4b92:   jmp    4b19 <_dl_fini+0x299>
    0.00 :   4b97:   orq    $0x0,-0x8(%rsp,%rax,1)
    0.00 :   4b9d:   jmp    4983 <_dl_fini+0x103>
    0.00 :   4ba2:   mov    0x30ef7(%rip),%rdx        # 35aa0 <_rtld_global+0xaa0>
    0.00 :   4ba9:   mov    0x30ee8(%rip),%rsi        # 35a98 <_rtld_global+0xa98>
    0.00 :   4bb0:   lea    0x26a81(%rip),%rdi        # 2b638 <_dl_out_of_memory+0xb0>
    0.00 :   4bb7:   xor    %eax,%eax
    0.00 :   4bb9:   call   d1d0 <_dl_debug_printf>
    0.00 :   4bbe:   jmp    4b6b <_dl_fini+0x2eb>
    0.00 :   4bc0:   lea    0x26ae9(%rip),%rcx        # 2b6b0 <__PRETTY_FUNCTION__.0>
    0.00 :   4bc7:   mov    $0x52,%edx
    0.00 :   4bcc:   lea    0x24e16(%rip),%rsi        # 299e9 <_sys_errname+0x629>
    0.00 :   4bd3:   lea    0x24e19(%rip),%rdi        # 299f3 <_sys_errname+0x633>
    0.00 :   4bda:   call   19f20 <__GI___assert_fail>
    0.00 :   4bdf:   lea    0x26aca(%rip),%rcx        # 2b6b0 <__PRETTY_FUNCTION__.0>
    0.00 :   4be6:   mov    $0x5d,%edx
    0.00 :   4beb:   lea    0x24df7(%rip),%rsi        # 299e9 <_sys_errname+0x629>
    0.00 :   4bf2:   lea    0x26a07(%rip),%rdi        # 2b600 <_dl_out_of_memory+0x78>
    0.00 :   4bf9:   call   19f20 <__GI___assert_fail>
    0.00 :   4bfe:   lea    0x26aab(%rip),%rcx        # 2b6b0 <__PRETTY_FUNCTION__.0>
    0.00 :   4c05:   mov    $0x5c,%edx
    0.00 :   4c0a:   lea    0x24dd8(%rip),%rsi        # 299e9 <_sys_errname+0x629>
    0.00 :   4c11:   lea    0x269c0(%rip),%rdi        # 2b5d8 <_dl_out_of_memory+0x50>
    0.00 :   4c18:   call   19f20 <__GI___assert_fail>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   68.16 dbt2-client[413244]
   31.84 dbt2-client[413269]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000413244 <recycle_node>:
         : 6      recycle_node():
   68.16 :   413244: push   %rbp // dbt2-client[413244]
    0.00 :   413245: mov    %rsp,%rbp
    0.00 :   413248: sub    $0x10,%rsp
    0.00 :   41324c: mov    %rdi,-0x8(%rbp)
    0.00 :   413250: mov    $0x41c780,%edi
    0.00 :   413255: call   407400 <pthread_mutex_lock@plt>
    0.00 :   41325a: mov    -0x8(%rbp),%rax
    0.00 :   41325e: movq   $0x0,0x2ee8(%rax)
   31.84 :   413269: mov    0x94f8(%rip),%rax        # 41c768 <node_tail> // dbt2-client[413269]
    0.00 :   413270: test   %rax,%rax
    0.00 :   413273: je     413294 <recycle_node+0x50>
    0.00 :   413275: mov    0x94ec(%rip),%rax        # 41c768 <node_tail>
    0.00 :   41327c: mov    -0x8(%rbp),%rdx
    0.00 :   413280: mov    %rdx,0x2ee8(%rax)
    0.00 :   413287: mov    -0x8(%rbp),%rax
    0.00 :   41328b: mov    %rax,0x94d6(%rip)        # 41c768 <node_tail>
    0.00 :   413292: jmp    4132ad <recycle_node+0x69>
    0.00 :   413294: mov    -0x8(%rbp),%rax
    0.00 :   413298: mov    %rax,0x94c9(%rip)        # 41c768 <node_tail>
    0.00 :   41329f: mov    0x94c2(%rip),%rax        # 41c768 <node_tail>
    0.00 :   4132a6: mov    %rax,0x94b3(%rip)        # 41c760 <node_head>
    0.00 :   4132ad: mov    $0x41c700,%edi
    0.00 :   4132b2: call   411af4 <sem_post>
    0.00 :   4132b7: mov    $0x41c780,%edi
    0.00 :   4132bc: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   4132c1: mov    $0x1,%eax
    0.00 :   4132c6: leave
    0.00 :   4132c7: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[1549dc]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000154280 <__strcasecmp_l_avx2>:
         : 6      __strcasecmp_l_avx2():
    0.00 :   154280: endbr64
    0.00 :   154284: mov    (%rdx),%rax
    0.00 :   154287: testl  $0x1,0x270(%rax)
    0.00 :   154291: jne    b2ed0 <__strcasecmp_l_nonascii>
    0.00 :   154297: lea    0x29222(%rip),%r11        # 17d4c0 <_nl_C_LC_CTYPE_tolower+0x200>
    0.00 :   15429e: vpxor  %xmm15,%xmm15,%xmm15
    0.00 :   1542a3: vmovdqa 0x4d475(%rip),%ymm10        # 1a1720 <null+0x20>
    0.00 :   1542ab: vmovdqa 0x4d48d(%rip),%ymm11        # 1a1740 <null+0x40>
    0.00 :   1542b3: vmovdqa 0x4d4a5(%rip),%ymm12        # 1a1760 <null+0x60>
    0.00 :   1542bb: mov    %edi,%eax
    0.00 :   1542bd: or     %esi,%eax
    0.00 :   1542bf: shl    $0x14,%eax
    0.00 :   1542c2: cmp    $0xf8000000,%eax
    0.00 :   1542c7: ja     1548f0 <__strcasecmp_l_avx2+0x670>
    0.00 :   1542cd: vmovdqu (%rdi),%ymm0
    0.00 :   1542d1: vmovdqu (%rsi),%ymm1
    0.00 :   1542d5: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   1542da: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   1542df: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1542e4: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1542e9: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1542ee: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   1542f3: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   1542f8: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   1542fd: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   154301: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   154305: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   154309: vpmovmskb %ymm1,%ecx
    0.00 :   15430d: inc    %ecx
    0.00 :   15430f: je     154390 <__strcasecmp_l_avx2+0x110>
    0.00 :   154311: tzcnt  %ecx,%ecx
    0.00 :   154315: movzbl (%rdi,%rcx,1),%eax
    0.00 :   154319: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   15431d: mov    (%r11,%rax,4),%eax
    0.00 :   154321: mov    (%r11,%rcx,4),%ecx
    0.00 :   154325: sub    %ecx,%eax
    0.00 :   154327: vzeroupper
    0.00 :   15432a: ret
    0.00 :   15432b: nopl   0x0(%rax,%rax,1)
    0.00 :   154330: tzcnt  %ecx,%ecx
    0.00 :   154334: movzbl 0x20(%rdi,%rcx,1),%eax
    0.00 :   154339: movzbl 0x20(%rsi,%rcx,1),%ecx
    0.00 :   15433e: mov    (%r11,%rax,4),%eax
    0.00 :   154342: mov    (%r11,%rcx,4),%ecx
    0.00 :   154346: sub    %ecx,%eax
    0.00 :   154348: vzeroupper
    0.00 :   15434b: ret
    0.00 :   15434c: nopl   0x0(%rax)
    0.00 :   154350: tzcnt  %ecx,%ecx
    0.00 :   154354: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   154359: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   15435e: mov    (%r11,%rax,4),%eax
    0.00 :   154362: mov    (%r11,%rcx,4),%ecx
    0.00 :   154366: sub    %ecx,%eax
    0.00 :   154368: vzeroupper
    0.00 :   15436b: ret
    0.00 :   15436c: nopl   0x0(%rax)
    0.00 :   154370: tzcnt  %ecx,%ecx
    0.00 :   154374: movzbl 0x60(%rdi,%rcx,1),%eax
    0.00 :   154379: movzbl 0x60(%rsi,%rcx,1),%ecx
    0.00 :   15437e: mov    (%r11,%rax,4),%eax
    0.00 :   154382: mov    (%r11,%rcx,4),%ecx
    0.00 :   154386: sub    %ecx,%eax
    0.00 :   154388: vzeroupper
    0.00 :   15438b: ret
    0.00 :   15438c: nopl   0x0(%rax)
    0.00 :   154390: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   154395: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   15439a: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   15439f: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   1543a4: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1543a9: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1543ae: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1543b3: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   1543b8: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   1543bd: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   1543c2: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   1543c6: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1543ca: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1543ce: vpmovmskb %ymm1,%ecx
    0.00 :   1543d2: inc    %ecx
    0.00 :   1543d4: jne    154330 <__strcasecmp_l_avx2+0xb0>
    0.00 :   1543da: vmovdqu 0x40(%rdi),%ymm0
    0.00 :   1543df: vmovdqu 0x40(%rsi),%ymm1
    0.00 :   1543e4: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   1543e9: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   1543ee: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1543f3: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1543f8: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1543fd: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154402: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   154407: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   15440c: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   154410: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   154414: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   154418: vpmovmskb %ymm1,%ecx
    0.00 :   15441c: inc    %ecx
    0.00 :   15441e: jne    154350 <__strcasecmp_l_avx2+0xd0>
    0.00 :   154424: vmovdqu 0x60(%rdi),%ymm0
    0.00 :   154429: vmovdqu 0x60(%rsi),%ymm1
    0.00 :   15442e: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   154433: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   154438: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   15443d: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   154442: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   154447: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   15444c: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   154451: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   154456: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   15445a: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15445e: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   154462: vpmovmskb %ymm1,%ecx
    0.00 :   154466: inc    %ecx
    0.00 :   154468: jne    154370 <__strcasecmp_l_avx2+0xf0>
    0.00 :   15446e: xor    %r8d,%r8d
    0.00 :   154471: sub    %rdi,%rsi
    0.00 :   154474: and    $0xffffffffffffff80,%rdi
    0.00 :   154478: add    %rdi,%rsi
    0.00 :   15447b: mov    $0xffffff80,%eax
    0.00 :   154480: sub    %esi,%eax
    0.00 :   154482: and    $0xfff,%eax
    0.00 :   154487: nopw   0x0(%rax,%rax,1)
    0.00 :   154490: sub    $0xffffffffffffff80,%rdi
    0.00 :   154494: sub    $0xffffffffffffff80,%rsi
    0.00 :   154498: add    $0xffffff80,%eax
    0.00 :   15449b: jae    154654 <__strcasecmp_l_avx2+0x3d4>
    0.00 :   1544a1: vmovdqa (%rdi),%ymm0
    0.00 :   1544a5: vmovdqa 0x20(%rdi),%ymm2
    0.00 :   1544aa: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   1544af: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   1544b4: vmovdqu (%rsi),%ymm1
    0.00 :   1544b8: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   1544bd: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   1544c2: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1544c7: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1544cc: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1544d1: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   1544d6: vpaddb %ymm8,%ymm0,%ymm3
    0.00 :   1544db: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   1544e0: vpcmpeqb %ymm3,%ymm1,%ymm1
    0.00 :   1544e4: vmovdqu 0x20(%rsi),%ymm3
    0.00 :   1544e9: vpaddb %ymm10,%ymm2,%ymm8
    0.00 :   1544ee: vpaddb %ymm10,%ymm3,%ymm9
    0.00 :   1544f3: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1544f8: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1544fd: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   154502: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154507: vpaddb %ymm8,%ymm2,%ymm5
    0.00 :   15450c: vpaddb %ymm9,%ymm3,%ymm3
    0.00 :   154511: vpcmpeqb %ymm5,%ymm3,%ymm3
    0.00 :   154515: vmovdqu 0x40(%rsi),%ymm5
    0.00 :   15451a: vpaddb %ymm10,%ymm4,%ymm8
    0.00 :   15451f: vpaddb %ymm10,%ymm5,%ymm9
    0.00 :   154524: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   154529: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   15452e: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   154533: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154538: vpaddb %ymm8,%ymm4,%ymm7
    0.00 :   15453d: vpaddb %ymm9,%ymm5,%ymm5
    0.00 :   154542: vpcmpeqb %ymm7,%ymm5,%ymm5
    0.00 :   154546: vmovdqu 0x60(%rsi),%ymm7
    0.00 :   15454b: vpaddb %ymm10,%ymm6,%ymm8
    0.00 :   154550: vpaddb %ymm10,%ymm7,%ymm9
    0.00 :   154555: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   15455a: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   15455f: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   154564: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154569: vpaddb %ymm8,%ymm6,%ymm13
    0.00 :   15456e: vpaddb %ymm9,%ymm7,%ymm7
    0.00 :   154573: vpcmpeqb %ymm13,%ymm7,%ymm7
    0.00 :   154578: vpand  %ymm0,%ymm1,%ymm1
    0.00 :   15457c: vpand  %ymm2,%ymm3,%ymm3
    0.00 :   154580: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   154584: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   154588: vpminub %ymm1,%ymm3,%ymm3
    0.00 :   15458c: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   154590: vpminub %ymm3,%ymm7,%ymm7
    0.00 :   154594: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   154598: vpmovmskb %ymm7,%edx
    0.00 :   15459c: test   %edx,%edx
    0.00 :   15459e: je     154490 <__strcasecmp_l_avx2+0x210>
    0.00 :   1545a4: vpcmpeqb %ymm1,%ymm15,%ymm1
    0.00 :   1545a8: vpmovmskb %ymm1,%ecx
    0.00 :   1545ac: test   %ecx,%ecx
    0.00 :   1545ae: jne    1545f0 <__strcasecmp_l_avx2+0x370>
    0.00 :   1545b0: vpcmpeqb %ymm3,%ymm15,%ymm3
    0.00 :   1545b4: vpmovmskb %ymm3,%ecx
    0.00 :   1545b8: test   %ecx,%ecx
    0.00 :   1545ba: jne    154610 <__strcasecmp_l_avx2+0x390>
    0.00 :   1545bc: vpcmpeqb %ymm5,%ymm15,%ymm5
    0.00 :   1545c0: vpmovmskb %ymm5,%ecx
    0.00 :   1545c4: test   %ecx,%ecx
    0.00 :   1545c6: jne    154632 <__strcasecmp_l_avx2+0x3b2>
    0.00 :   1545c8: tzcnt  %edx,%edx
    0.00 :   1545cc: movzbl 0x60(%rdi,%rdx,1),%eax
    0.00 :   1545d1: movzbl 0x60(%rsi,%rdx,1),%ecx
    0.00 :   1545d6: mov    (%r11,%rax,4),%eax
    0.00 :   1545da: mov    (%r11,%rcx,4),%ecx
    0.00 :   1545de: sub    %ecx,%eax
    0.00 :   1545e0: xor    %r8d,%eax
    0.00 :   1545e3: sub    %r8d,%eax
    0.00 :   1545e6: vzeroupper
    0.00 :   1545e9: ret
    0.00 :   1545ea: nopw   0x0(%rax,%rax,1)
    0.00 :   1545f0: tzcnt  %ecx,%ecx
    0.00 :   1545f4: movzbl (%rdi,%rcx,1),%eax
    0.00 :   1545f8: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   1545fc: mov    (%r11,%rax,4),%eax
    0.00 :   154600: mov    (%r11,%rcx,4),%ecx
    0.00 :   154604: sub    %ecx,%eax
    0.00 :   154606: xor    %r8d,%eax
    0.00 :   154609: sub    %r8d,%eax
    0.00 :   15460c: vzeroupper
    0.00 :   15460f: ret
    0.00 :   154610: tzcnt  %ecx,%ecx
    0.00 :   154614: movzbl 0x20(%rdi,%rcx,1),%eax
    0.00 :   154619: movzbl 0x20(%rsi,%rcx,1),%ecx
    0.00 :   15461e: mov    (%r11,%rax,4),%eax
    0.00 :   154622: mov    (%r11,%rcx,4),%ecx
    0.00 :   154626: sub    %ecx,%eax
    0.00 :   154628: xor    %r8d,%eax
    0.00 :   15462b: sub    %r8d,%eax
    0.00 :   15462e: vzeroupper
    0.00 :   154631: ret
    0.00 :   154632: tzcnt  %ecx,%ecx
    0.00 :   154636: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   15463b: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   154640: mov    (%r11,%rax,4),%eax
    0.00 :   154644: mov    (%r11,%rcx,4),%ecx
    0.00 :   154648: sub    %ecx,%eax
    0.00 :   15464a: xor    %r8d,%eax
    0.00 :   15464d: sub    %r8d,%eax
    0.00 :   154650: vzeroupper
    0.00 :   154653: ret
    0.00 :   154654: cmp    $0xffffff80,%eax
    0.00 :   154657: je     1544a1 <__strcasecmp_l_avx2+0x221>
    0.00 :   15465d: cmp    $0xffffffa0,%eax
    0.00 :   154660: jle    1546b3 <__strcasecmp_l_avx2+0x433>
    0.00 :   154662: vmovdqa (%rdi),%ymm0
    0.00 :   154666: vmovdqu (%rsi),%ymm1
    0.00 :   15466a: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   15466f: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   154674: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   154679: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   15467e: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   154683: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154688: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   15468d: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   154692: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   154696: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15469a: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   15469e: vpmovmskb %ymm1,%ecx
    0.00 :   1546a2: inc    %ecx
    0.00 :   1546a4: jne    1545f0 <__strcasecmp_l_avx2+0x370>
    0.00 :   1546aa: cmp    $0xffffffc0,%eax
    0.00 :   1546ad: jg     154740 <__strcasecmp_l_avx2+0x4c0>
    0.00 :   1546b3: sub    $0xffffff80,%eax
    0.00 :   1546b6: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   1546bc: vmovdqu -0x20(%rsi,%rax,1),%ymm1
    0.00 :   1546c2: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   1546c7: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   1546cc: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1546d1: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1546d6: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1546db: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   1546e0: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   1546e5: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   1546ea: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   1546ee: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1546f2: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1546f6: vpmovmskb %ymm1,%ecx
    0.00 :   1546fa: mov    $0xffffffff,%r10d
    0.00 :   154700: shlx   %esi,%r10d,%r10d
    0.00 :   154705: not    %ecx
    0.00 :   154707: mov    %eax,%edx
    0.00 :   154709: add    $0xf80,%eax
    0.00 :   15470e: and    %r10d,%ecx
    0.00 :   154711: je     1544a1 <__strcasecmp_l_avx2+0x221>
    0.00 :   154717: tzcnt  %ecx,%ecx
    0.00 :   15471b: add    %edx,%ecx
    0.00 :   15471d: movzbl -0x20(%rdi,%rcx,1),%eax
    0.00 :   154722: movzbl -0x20(%rsi,%rcx,1),%ecx
    0.00 :   154727: mov    (%r11,%rax,4),%eax
    0.00 :   15472b: mov    (%r11,%rcx,4),%ecx
    0.00 :   15472f: sub    %ecx,%eax
    0.00 :   154731: xor    %r8d,%eax
    0.00 :   154734: sub    %r8d,%eax
    0.00 :   154737: vzeroupper
    0.00 :   15473a: ret
    0.00 :   15473b: nopl   0x0(%rax,%rax,1)
    0.00 :   154740: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   154745: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   15474a: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   15474f: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   154754: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   154759: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   15475e: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   154763: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154768: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   15476d: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   154772: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   154776: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15477a: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   15477e: vpmovmskb %ymm1,%ecx
    0.00 :   154782: inc    %ecx
    0.00 :   154784: jne    154610 <__strcasecmp_l_avx2+0x390>
    0.00 :   15478a: sub    $0xffffff80,%eax
    0.00 :   15478d: vmovdqu -0x40(%rdi,%rax,1),%ymm0
    0.00 :   154793: vmovdqu -0x40(%rsi,%rax,1),%ymm1
    0.00 :   154799: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   15479e: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   1547a3: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1547a8: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1547ad: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1547b2: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   1547b7: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   1547bc: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   1547c1: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   1547c5: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1547c9: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1547cd: vpmovmskb %ymm1,%ecx
    0.00 :   1547d1: inc    %ecx
    0.00 :   1547d3: jne    1548c0 <__strcasecmp_l_avx2+0x640>
    0.00 :   1547d9: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   1547df: vmovdqu -0x20(%rsi,%rax,1),%ymm1
    0.00 :   1547e5: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   1547ea: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   1547ef: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   1547f4: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   1547f9: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1547fe: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154803: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   154808: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   15480d: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   154811: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   154815: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   154819: vpmovmskb %ymm1,%ecx
    0.00 :   15481d: inc    %ecx
    0.00 :   15481f: jne    1548c3 <__strcasecmp_l_avx2+0x643>
    0.00 :   154825: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   15482a: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   15482f: vmovdqu 0x40(%rsi),%ymm5
    0.00 :   154834: vpaddb %ymm10,%ymm4,%ymm8
    0.00 :   154839: vpaddb %ymm10,%ymm5,%ymm9
    0.00 :   15483e: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   154843: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   154848: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   15484d: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154852: vpaddb %ymm8,%ymm4,%ymm7
    0.00 :   154857: vpaddb %ymm9,%ymm5,%ymm5
    0.00 :   15485c: vpcmpeqb %ymm7,%ymm5,%ymm5
    0.00 :   154860: vmovdqu 0x60(%rsi),%ymm7
    0.00 :   154865: vpaddb %ymm10,%ymm6,%ymm8
    0.00 :   15486a: vpaddb %ymm10,%ymm7,%ymm9
    0.00 :   15486f: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   154874: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   154879: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   15487e: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154883: vpaddb %ymm8,%ymm6,%ymm13
    0.00 :   154888: vpaddb %ymm9,%ymm7,%ymm7
    0.00 :   15488d: vpcmpeqb %ymm13,%ymm7,%ymm7
    0.00 :   154892: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   154896: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   15489a: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   15489e: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   1548a2: vpmovmskb %ymm7,%edx
    0.00 :   1548a6: test   %edx,%edx
    0.00 :   1548a8: jne    1545bc <__strcasecmp_l_avx2+0x33c>
    0.00 :   1548ae: sub    $0xffffffffffffff80,%rdi
    0.00 :   1548b2: sub    $0xffffffffffffff80,%rsi
    0.00 :   1548b6: add    $0xf00,%eax
    0.00 :   1548bb: jmp    1544a1 <__strcasecmp_l_avx2+0x221>
    0.00 :   1548c0: add    $0xffffffe0,%eax
    0.00 :   1548c3: tzcnt  %ecx,%ecx
    0.00 :   1548c7: add    %eax,%ecx
    0.00 :   1548c9: movzbl -0x20(%rdi,%rcx,1),%eax
    0.00 :   1548ce: movzbl -0x20(%rsi,%rcx,1),%ecx
    0.00 :   1548d3: mov    (%r11,%rax,4),%eax
    0.00 :   1548d7: mov    (%r11,%rcx,4),%ecx
    0.00 :   1548db: sub    %ecx,%eax
    0.00 :   1548dd: xor    %r8d,%eax
    0.00 :   1548e0: sub    %r8d,%eax
    0.00 :   1548e3: vzeroupper
    0.00 :   1548e6: ret
    0.00 :   1548e7: nopw   0x0(%rax,%rax,1)
    0.00 :   1548f0: test   $0x1f00000,%eax
    0.00 :   1548f5: je     1542cd <__strcasecmp_l_avx2+0x4d>
    0.00 :   1548fb: mov    %edi,%eax
    0.00 :   1548fd: mov    %esi,%ecx
    0.00 :   1548ff: and    $0xfff,%eax
    0.00 :   154904: and    $0xfff,%ecx
    0.00 :   15490a: xor    %edx,%edx
    0.00 :   15490c: cmp    %eax,%ecx
    0.00 :   15490e: jg     1549f0 <__strcasecmp_l_avx2+0x770>
    0.00 :   154914: sub    $0xf80,%eax
    0.00 :   154919: jbe    1542cd <__strcasecmp_l_avx2+0x4d>
    0.00 :   15491f: xor    %r8d,%r8d
    0.00 :   154922: sub    $0x60,%eax
    0.00 :   154925: jg     154a18 <__strcasecmp_l_avx2+0x798>
    0.00 :   15492b: nopl   0x0(%rax,%rax,1)
    0.00 :   154930: vmovdqu (%rdi,%rdx,1),%ymm0
    0.00 :   154935: vmovdqu (%rsi,%rdx,1),%ymm1
    0.00 :   15493a: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   15493f: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   154944: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   154949: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   15494e: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   154953: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   154958: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   15495d: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   154962: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   154966: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15496a: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   15496e: vpmovmskb %ymm1,%ecx
    0.00 :   154972: inc    %ecx
    0.00 :   154974: jne    1549ca <__strcasecmp_l_avx2+0x74a>
    0.00 :   154976: add    $0x20,%edx
    0.00 :   154979: add    $0x20,%eax
    0.00 :   15497c: jl     154930 <__strcasecmp_l_avx2+0x6b0>
    0.00 :   15497e: sub    %eax,%edx
    0.00 :   154980: vmovdqu (%rdi,%rdx,1),%ymm0
    0.00 :   154985: vmovdqu (%rsi,%rdx,1),%ymm1
    0.00 :   15498a: vpaddb %ymm10,%ymm0,%ymm8
    0.00 :   15498f: vpaddb %ymm10,%ymm1,%ymm9
    0.00 :   154994: vpcmpgtb %ymm11,%ymm8,%ymm8
    0.00 :   154999: vpcmpgtb %ymm11,%ymm9,%ymm9
    0.00 :   15499e: vpandn %ymm12,%ymm8,%ymm8
    0.00 :   1549a3: vpandn %ymm12,%ymm9,%ymm9
    0.00 :   1549a8: vpaddb %ymm8,%ymm0,%ymm2
    0.00 :   1549ad: vpaddb %ymm9,%ymm1,%ymm1
    0.00 :   1549b2: vpcmpeqb %ymm2,%ymm1,%ymm1
    0.00 :   1549b6: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1549ba: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1549be: vpmovmskb %ymm1,%ecx
    0.00 :   1549c2: inc    %ecx
    0.00 :   1549c4: je     154471 <__strcasecmp_l_avx2+0x1f1>
    0.00 :   1549ca: tzcnt  %ecx,%ecx
    0.00 :   1549ce: add    %edx,%ecx
    0.00 :   1549d0: movzbl (%rdi,%rcx,1),%eax
    0.00 :   1549d4: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   1549d8: mov    (%r11,%rax,4),%eax
  100.00 :   1549dc: mov    (%r11,%rcx,4),%ecx // libc.so.6[1549dc]
    0.00 :   1549e0: sub    %ecx,%eax
    0.00 :   1549e2: xor    %r8d,%eax
    0.00 :   1549e5: sub    %r8d,%eax
    0.00 :   1549e8: vzeroupper
    0.00 :   1549eb: ret
    0.00 :   1549ec: nopl   0x0(%rax)
    0.00 :   1549f0: sub    $0xf80,%ecx
    0.00 :   1549f6: jbe    1542cd <__strcasecmp_l_avx2+0x4d>
    0.00 :   1549fc: mov    %ecx,%eax
    0.00 :   1549fe: mov    %rdi,%rcx
    0.00 :   154a01: mov    %rsi,%rdi
    0.00 :   154a04: mov    %rcx,%rsi
    0.00 :   154a07: mov    $0xffffffff,%r8d
    0.00 :   154a0d: xor    %edx,%edx
    0.00 :   154a0f: sub    $0x60,%eax
    0.00 :   154a12: jle    154930 <__strcasecmp_l_avx2+0x6b0>
    0.00 :   154a18: cmp    $0x10,%eax
    0.00 :   154a1b: ja     154ad1 <__strcasecmp_l_avx2+0x851>
    0.00 :   154a21: vmovdqu (%rdi),%xmm0
    0.00 :   154a25: vmovdqu (%rsi),%xmm1
    0.00 :   154a29: vpaddb %xmm10,%xmm0,%xmm8
    0.00 :   154a2e: vpaddb %xmm10,%xmm1,%xmm9
    0.00 :   154a33: vpcmpgtb %xmm11,%xmm8,%xmm8
    0.00 :   154a38: vpcmpgtb %xmm11,%xmm9,%xmm9
    0.00 :   154a3d: vpandn %xmm12,%xmm8,%xmm8
    0.00 :   154a42: vpandn %xmm12,%xmm9,%xmm9
    0.00 :   154a47: vpaddb %xmm8,%xmm0,%xmm2
    0.00 :   154a4c: vpaddb %xmm9,%xmm1,%xmm1
    0.00 :   154a51: vpcmpeqb %xmm2,%xmm1,%xmm1
    0.00 :   154a55: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   154a59: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   154a5d: vpmovmskb %ymm1,%ecx
    0.00 :   154a61: inc    %cx
    0.00 :   154a64: jne    1549ca <__strcasecmp_l_avx2+0x74a>
    0.00 :   154a6a: mov    $0x10,%edx
    0.00 :   154a6f: sub    %eax,%edx
    0.00 :   154a71: je     154471 <__strcasecmp_l_avx2+0x1f1>
    0.00 :   154a77: vmovdqu (%rdi,%rdx,1),%xmm0
    0.00 :   154a7c: vmovdqu (%rsi,%rdx,1),%xmm1
    0.00 :   154a81: vpaddb %xmm10,%xmm0,%xmm8
    0.00 :   154a86: vpaddb %xmm10,%xmm1,%xmm9
    0.00 :   154a8b: vpcmpgtb %xmm11,%xmm8,%xmm8
    0.00 :   154a90: vpcmpgtb %xmm11,%xmm9,%xmm9
    0.00 :   154a95: vpandn %xmm12,%xmm8,%xmm8
    0.00 :   154a9a: vpandn %xmm12,%xmm9,%xmm9
    0.00 :   154a9f: vpaddb %xmm8,%xmm0,%xmm2
    0.00 :   154aa4: vpaddb %xmm9,%xmm1,%xmm1
    0.00 :   154aa9: vpcmpeqb %xmm2,%xmm1,%xmm1
    0.00 :   154aad: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   154ab1: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   154ab5: vpmovmskb %ymm1,%ecx
    0.00 :   154ab9: inc    %cx
    0.00 :   154abc: jne    1549ca <__strcasecmp_l_avx2+0x74a>
    0.00 :   154ac2: lea    -0x70(%rdi,%rdx,1),%rdi
    0.00 :   154ac7: lea    -0x70(%rsi,%rdx,1),%rsi
    0.00 :   154acc: jmp    15447b <__strcasecmp_l_avx2+0x1fb>
    0.00 :   154ad1: cmp    $0x18,%eax
    0.00 :   154ad4: ja     154b82 <__strcasecmp_l_avx2+0x902>
    0.00 :   154ada: vmovq  (%rdi),%xmm0
    0.00 :   154ade: vmovq  (%rsi),%xmm1
    0.00 :   154ae2: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   154ae6: vpaddb %xmm10,%xmm0,%xmm8
    0.00 :   154aeb: vpaddb %xmm10,%xmm1,%xmm9
    0.00 :   154af0: vpcmpgtb %xmm11,%xmm8,%xmm8
    0.00 :   154af5: vpcmpgtb %xmm11,%xmm9,%xmm9
    0.00 :   154afa: vpandn %xmm12,%xmm8,%xmm8
    0.00 :   154aff: vpandn %xmm12,%xmm9,%xmm9
    0.00 :   154b04: vpaddb %xmm8,%xmm0,%xmm3
    0.00 :   154b09: vpaddb %xmm9,%xmm1,%xmm1
    0.00 :   154b0e: vpcmpeqb %xmm3,%xmm1,%xmm1
    0.00 :   154b12: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   154b16: vpmovmskb %ymm1,%ecx
    0.00 :   154b1a: inc    %cl
    0.00 :   154b1c: jne    1549ca <__strcasecmp_l_avx2+0x74a>
    0.00 :   154b22: mov    $0x18,%edx
    0.00 :   154b27: sub    %eax,%edx
    0.00 :   154b29: vmovq  (%rdi,%rdx,1),%xmm0
    0.00 :   154b2e: vmovq  (%rsi,%rdx,1),%xmm1
    0.00 :   154b33: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   154b37: vpaddb %xmm10,%xmm0,%xmm8
    0.00 :   154b3c: vpaddb %xmm10,%xmm1,%xmm9
    0.00 :   154b41: vpcmpgtb %xmm11,%xmm8,%xmm8
    0.00 :   154b46: vpcmpgtb %xmm11,%xmm9,%xmm9
    0.00 :   154b4b: vpandn %xmm12,%xmm8,%xmm8
    0.00 :   154b50: vpandn %xmm12,%xmm9,%xmm9
    0.00 :   154b55: vpaddb %xmm8,%xmm0,%xmm3
    0.00 :   154b5a: vpaddb %xmm9,%xmm1,%xmm1
    0.00 :   154b5f: vpcmpeqb %xmm3,%xmm1,%xmm1
    0.00 :   154b63: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   154b67: vpmovmskb %ymm1,%ecx
    0.00 :   154b6b: inc    %cl
    0.00 :   154b6d: jne    1549ca <__strcasecmp_l_avx2+0x74a>
    0.00 :   154b73: lea    -0x78(%rdi,%rdx,1),%rdi
    0.00 :   154b78: lea    -0x78(%rsi,%rdx,1),%rsi
    0.00 :   154b7d: jmp    15447b <__strcasecmp_l_avx2+0x1fb>
    0.00 :   154b82: cmp    $0x1c,%eax
    0.00 :   154b85: ja     154c35 <__strcasecmp_l_avx2+0x9b5>
    0.00 :   154b8b: vmovd  (%rdi),%xmm0
    0.00 :   154b8f: vmovd  (%rsi),%xmm1
    0.00 :   154b93: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   154b97: vpaddb %xmm10,%xmm0,%xmm8
    0.00 :   154b9c: vpaddb %xmm10,%xmm1,%xmm9
    0.00 :   154ba1: vpcmpgtb %xmm11,%xmm8,%xmm8
    0.00 :   154ba6: vpcmpgtb %xmm11,%xmm9,%xmm9
    0.00 :   154bab: vpandn %xmm12,%xmm8,%xmm8
    0.00 :   154bb0: vpandn %xmm12,%xmm9,%xmm9
    0.00 :   154bb5: vpaddb %xmm8,%xmm0,%xmm3
    0.00 :   154bba: vpaddb %xmm9,%xmm1,%xmm1
    0.00 :   154bbf: vpcmpeqb %xmm3,%xmm1,%xmm1
    0.00 :   154bc3: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   154bc7: vpmovmskb %ymm1,%ecx
    0.00 :   154bcb: sub    $0xf,%ecx
    0.00 :   154bce: jne    1549ca <__strcasecmp_l_avx2+0x74a>
    0.00 :   154bd4: mov    $0x1c,%edx
    0.00 :   154bd9: sub    %eax,%edx
    0.00 :   154bdb: vmovd  (%rdi,%rdx,1),%xmm0
    0.00 :   154be0: vmovd  (%rsi,%rdx,1),%xmm1
    0.00 :   154be5: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   154be9: vpaddb %xmm10,%xmm0,%xmm8
    0.00 :   154bee: vpaddb %xmm10,%xmm1,%xmm9
    0.00 :   154bf3: vpcmpgtb %xmm11,%xmm8,%xmm8
    0.00 :   154bf8: vpcmpgtb %xmm11,%xmm9,%xmm9
    0.00 :   154bfd: vpandn %xmm12,%xmm8,%xmm8
    0.00 :   154c02: vpandn %xmm12,%xmm9,%xmm9
    0.00 :   154c07: vpaddb %xmm8,%xmm0,%xmm3
    0.00 :   154c0c: vpaddb %xmm9,%xmm1,%xmm1
    0.00 :   154c11: vpcmpeqb %xmm3,%xmm1,%xmm1
    0.00 :   154c15: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   154c19: vpmovmskb %ymm1,%ecx
    0.00 :   154c1d: sub    $0xf,%ecx
    0.00 :   154c20: jne    1549ca <__strcasecmp_l_avx2+0x74a>
    0.00 :   154c26: lea    -0x7c(%rdi,%rdx,1),%rdi
    0.00 :   154c2b: lea    -0x7c(%rsi,%rdx,1),%rsi
    0.00 :   154c30: jmp    15447b <__strcasecmp_l_avx2+0x1fb>
    0.00 :   154c35: sub    %rdi,%rsi
    0.00 :   154c38: movzbl (%rdi),%eax
    0.00 :   154c3b: movzbl (%rsi,%rdi,1),%ecx
    0.00 :   154c3f: mov    (%r11,%rax,4),%eax
    0.00 :   154c43: mov    (%r11,%rcx,4),%edx
    0.00 :   154c47: sub    %edx,%eax
    0.00 :   154c49: jne    154c6b <__strcasecmp_l_avx2+0x9eb>
    0.00 :   154c4b: test   %ecx,%ecx
    0.00 :   154c4d: je     154c68 <__strcasecmp_l_avx2+0x9e8>
    0.00 :   154c4f: inc    %rdi
    0.00 :   154c52: test   $0x1f,%edi
    0.00 :   154c58: jne    154c38 <__strcasecmp_l_avx2+0x9b8>
    0.00 :   154c5a: lea    -0x80(%rdi,%rsi,1),%rsi
    0.00 :   154c5f: add    $0xffffffffffffff80,%rdi
    0.00 :   154c63: jmp    15447b <__strcasecmp_l_avx2+0x1fb>
    0.00 :   154c68: xor    %eax,%eax
    0.00 :   154c6a: ret
    0.00 :   154c6b: xor    %r8d,%eax
    0.00 :   154c6e: sub    %r8d,%eax
    0.00 :   154c71: ret

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-version.c:94
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000129b0 <_dl_check_map_versions>:
         : 6     _dl_check_map_versions():
    0.00 :   129b0:  endbr64
    0.00 :   129b4:  push   %r15
    0.00 :   129b6:  push   %r14
    0.00 :   129b8:  push   %r13
    0.00 :   129ba:  push   %r12
    0.00 :   129bc:  push   %rbp
    0.00 :   129bd:  push   %rbx
    0.00 :   129be:  sub    $0xa8,%rsp
    0.00 :   129c5:  mov    0x68(%rdi),%rax
    0.00 :   129c9:  mov    %esi,0x44(%rsp)
    0.00 :   129cd:  test   %rax,%rax
    0.00 :   129d0:  je     130ca <_dl_check_map_versions+0x71a>
    0.00 :   129d6:  mov    0x8(%rax),%rcx
    0.00 :   129da:  mov    %rdi,%r14
    0.00 :   129dd:  testb  $0x20,0x336(%rdi)
    0.00 :   129e4:  jne    12e8a <_dl_check_map_versions+0x4da>
    0.00 :   129ea:  mov    0x178(%r14),%r12
    0.00 :   129f1:  mov    0x188(%r14),%rbx
    0.00 :   129f8:  test   %r12,%r12
    0.00 :   129fb:  je     130a7 <_dl_check_map_versions+0x6f7>
    0.00 :   12a01:  mov    0x8(%r12),%rax
    0.00 :   12a06:  add    (%r14),%rax
    0.00 :   12a09:  movl   $0x0,0x8(%rsp)
    0.00 :   12a11:  lea    0x18718(%rip),%r13        # 2b130 <__GI__itoa_lower_digits>
    0.00 :   12a18:  cmpw   $0x1,(%rax)
    0.00 :   12a1c:  movl   $0x0,0x4c(%rsp)
    0.00 :   12a24:  mov    %rax,%rbp
    0.00 :   12a27:  jne    130f9 <_dl_check_map_versions+0x749>
    0.00 :   12a2d:  mov    %rcx,0x18(%rsp)
    0.00 :   12a32:  mov    %r12,0x50(%rsp)
    0.00 :   12a37:  mov    %rbx,0x58(%rsp)
    0.00 :   12a3c:  mov    %edx,0x48(%rsp)
    0.00 :   12a40:  mov    0x18(%rsp),%rax
    0.00 :   12a45:  mov    0x4(%rbp),%ebx
    0.00 :   12a48:  lea    0x225b1(%rip),%rcx        # 35000 <_rtld_global>
    0.00 :   12a4f:  add    %rax,%rbx
    0.00 :   12a52:  mov    0x30(%r14),%rax
    0.00 :   12a56:  lea    (%rax,%rax,4),%rax
    0.00 :   12a5a:  shl    $0x5,%rax
    0.00 :   12a5e:  mov    (%rcx,%rax,1),%r15
    0.00 :   12a62:  test   %r15,%r15
    0.00 :   12a65:  jne    12a7d <_dl_check_map_versions+0xcd>
    0.00 :   12a67:  jmp    12d90 <_dl_check_map_versions+0x3e0>
    0.00 :   12a6c:  nopl   0x0(%rax)
    0.00 :   12a70:  mov    0x18(%r15),%r15
    0.00 :   12a74:  test   %r15,%r15
    0.00 :   12a77:  je     12d90 <_dl_check_map_versions+0x3e0>
    0.00 :   12a7d:  mov    %r15,%rsi
    0.00 :   12a80:  mov    %rbx,%rdi
    0.00 :   12a83:  call   ae50 <_dl_name_match_p>
    0.00 :   12a88:  test   %eax,%eax
    0.00 :   12a8a:  je     12a70 <_dl_check_map_versions+0xc0>
    0.00 :   12a8c:  test   %r15,%r15
    0.00 :   12a8f:  je     12e58 <_dl_check_map_versions+0x4a8>
    0.00 :   12a95:  mov    0x48(%rsp),%edi
    0.00 :   12a99:  test   %edi,%edi
    0.00 :   12a9b:  jne    12e77 <_dl_check_map_versions+0x4c7>
    0.00 :   12aa1:  mov    0x8(%rbp),%ebx
    0.00 :   12aa4:  mov    0x8(%rsp),%r12d
    0.00 :   12aa9:  mov    %rbp,0x38(%rsp)
    0.00 :   12aae:  mov    %r15,0x20(%rsp)
    0.00 :   12ab3:  add    %rbp,%rbx
    0.00 :   12ab6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   12ac0:  mov    0x8(%rbx),%eax
    0.00 :   12ac3:  mov    0x18(%rsp),%rcx
    0.00 :   12ac8:  mov    0x8(%r14),%r8
    0.00 :   12acc:  mov    (%rbx),%r10d
    0.00 :   12acf:  lea    (%rcx,%rax,1),%r15
    0.00 :   12ad3:  movzwl 0x4(%rbx),%eax
    0.00 :   12ad7:  cmpb   $0x0,(%r8)
    0.00 :   12adb:  mov    %ax,0x42(%rsp)
    0.00 :   12ae0:  mov    0x20(%rsp),%rax
    0.00 :   12ae5:  mov    0x28(%rax),%rbp
    0.00 :   12ae9:  jne    12b03 <_dl_check_map_versions+0x153>
    0.00 :   12aeb:  mov    0x21f46(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   12af2:  mov    (%rax),%r8
    0.00 :   12af5:  lea    0x16e30(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   12afc:  test   %r8,%r8
    0.00 :   12aff:  cmove  %rax,%r8
    0.00 :   12b03:  mov    0x68(%rbp),%rax
    0.00 :   12b07:  mov    0x8(%rax),%r11
    0.00 :   12b0b:  testb  $0x20,0x336(%rbp)
    0.00 :   12b12:  je     12b18 <_dl_check_map_versions+0x168>
    0.00 :   12b14:  add    0x0(%rbp),%r11
    0.00 :   12b18:  lea    0x21f41(%rip),%rax        # 34a60 <_rtld_global_ro>
    0.00 :   12b1f:  testb  $0x10,(%rax)
    0.00 :   12b22:  jne    12d30 <_dl_check_map_versions+0x380>
    0.00 :   12b28:  mov    0x188(%rbp),%rax
    0.00 :   12b2f:  test   %rax,%rax
    0.00 :   12b32:  je     12ce0 <_dl_check_map_versions+0x330>
    0.00 :   12b38:  mov    0x8(%rax),%rdx
    0.00 :   12b3c:  test   %rdx,%rdx
    0.00 :   12b3f:  je     13189 <_dl_check_map_versions+0x7d9>
    0.00 :   12b45:  add    0x0(%rbp),%rdx
    0.00 :   12b49:  cmpw   $0x1,(%rdx)
  100.00 :   12b4d:  jne    12b99 <_dl_check_map_versions+0x1e9> // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-version.c:94
    0.00 :   12b4f:  mov    %r8,0x30(%rsp)
    0.00 :   12b54:  mov    %r15,%rdi
    0.00 :   12b57:  mov    %r11,%r15
    0.00 :   12b5a:  mov    %rbp,0x28(%rsp)
    0.00 :   12b5f:  mov    %rdx,%rbp
    0.00 :   12b62:  mov    %r14,0x8(%rsp)
    0.00 :   12b67:  mov    %r10d,%r14d
    0.00 :   12b6a:  cmp    0x8(%rbp),%r14d
    0.00 :   12b6e:  je     12c70 <_dl_check_map_versions+0x2c0>
    0.00 :   12b74:  mov    0x10(%rbp),%eax
    0.00 :   12b77:  test   %eax,%eax
    0.00 :   12b79:  je     12de8 <_dl_check_map_versions+0x438>
    0.00 :   12b7f:  add    %rax,%rbp
    0.00 :   12b82:  cmpw   $0x1,0x0(%rbp)
    0.00 :   12b87:  je     12b6a <_dl_check_map_versions+0x1ba>
    0.00 :   12b89:  mov    %rbp,%rdx
    0.00 :   12b8c:  mov    0x8(%rsp),%r14
    0.00 :   12b91:  mov    0x28(%rsp),%rbp
    0.00 :   12b96:  mov    %rdi,%r15
    0.00 :   12b99:  movb   $0x0,0x73(%rsp)
    0.00 :   12b9e:  movzwl (%rdx),%ecx
    0.00 :   12ba1:  lea    0x73(%rsp),%rsi
    0.00 :   12ba6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   12bb0:  movabs $0xcccccccccccccccd,%rax
    0.00 :   12bba:  mov    %rcx,%rdi
    0.00 :   12bbd:  sub    $0x1,%rsi
    0.00 :   12bc1:  mul    %rcx
    0.00 :   12bc4:  shr    $0x3,%rdx
    0.00 :   12bc8:  lea    (%rdx,%rdx,4),%rax
    0.00 :   12bcc:  add    %rax,%rax
    0.00 :   12bcf:  sub    %rax,%rdi
    0.00 :   12bd2:  movzbl 0x0(%r13,%rdi,1),%eax
    0.00 :   12bd8:  mov    %al,(%rsi)
    0.00 :   12bda:  mov    %rcx,%rax
    0.00 :   12bdd:  mov    %rdx,%rcx
    0.00 :   12be0:  cmp    $0x9,%rax
    0.00 :   12be4:  ja     12bb0 <_dl_check_map_versions+0x200>
    0.00 :   12be6:  mov    0x8(%rbp),%rax
    0.00 :   12bea:  cmpb   $0x0,(%rax)
    0.00 :   12bed:  jne    12c07 <_dl_check_map_versions+0x257>
    0.00 :   12bef:  mov    0x21e42(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   12bf6:  lea    0x16d2f(%rip),%rcx        # 2992c <_sys_errname+0x56c>
    0.00 :   12bfd:  mov    (%rax),%rax
    0.00 :   12c00:  test   %rax,%rax
    0.00 :   12c03:  cmove  %rcx,%rax
    0.00 :   12c07:  lea    0x80(%rsp),%rbp
    0.00 :   12c0f:  mov    %rsi,%rcx
    0.00 :   12c12:  mov    %rax,%rsi
    0.00 :   12c15:  lea    0x19d5c(%rip),%rdx        # 2c978 <__PRETTY_FUNCTION__.0+0x328>
    0.00 :   12c1c:  mov    %rbp,%rdi
    0.00 :   12c1f:  xor    %eax,%eax
    0.00 :   12c21:  call   3450 <_dl_exception_create_format>
    0.00 :   12c26:  movl   $0x1,0x4c(%rsp)
    0.00 :   12c2e:  xchg   %ax,%ax
    0.00 :   12c30:  xor    %edi,%edi
    0.00 :   12c32:  lea    0x17380(%rip),%rdx        # 29fb9 <_sys_errname+0xbf9>
    0.00 :   12c39:  mov    %rbp,%rsi
    0.00 :   12c3c:  call   18e20 <_dl_signal_cexception>
    0.00 :   12c41:  mov    %rbp,%rdi
    0.00 :   12c44:  call   38c0 <_dl_exception_free>
    0.00 :   12c49:  cmpl   $0xfd0e42,(%rbx)
    0.00 :   12c4f:  je     12ca1 <_dl_check_map_versions+0x2f1>
    0.00 :   12c51:  movzwl 0x6(%rbx),%eax
    0.00 :   12c55:  and    $0x7fff,%eax
    0.00 :   12c5a:  cmp    %eax,%r12d
    0.00 :   12c5d:  cmovb  %eax,%r12d
    0.00 :   12c61:  mov    0xc(%rbx),%eax
    0.00 :   12c64:  test   %eax,%eax
    0.00 :   12c66:  je     12cc0 <_dl_check_map_versions+0x310>
    0.00 :   12c68:  add    %rax,%rbx
    0.00 :   12c6b:  jmp    12ac0 <_dl_check_map_versions+0x110>
    0.00 :   12c70:  mov    0xc(%rbp),%eax
    0.00 :   12c73:  mov    %rdi,0x10(%rsp)
    0.00 :   12c78:  mov    0x0(%rbp,%rax,1),%esi
    0.00 :   12c7c:  add    %r15,%rsi
    0.00 :   12c7f:  call   23430 <strcmp>
    0.00 :   12c84:  mov    0x10(%rsp),%rdi
    0.00 :   12c89:  test   %eax,%eax
    0.00 :   12c8b:  jne    12b74 <_dl_check_map_versions+0x1c4>
    0.00 :   12c91:  cmpl   $0xfd0e42,(%rbx)
    0.00 :   12c97:  mov    0x8(%rsp),%r14
    0.00 :   12c9c:  mov    %rdi,%r15
    0.00 :   12c9f:  jne    12c51 <_dl_check_map_versions+0x2a1>
    0.00 :   12ca1:  lea    0x17326(%rip),%rsi        # 29fce <_sys_errname+0xc0e>
    0.00 :   12ca8:  mov    %r15,%rdi
    0.00 :   12cab:  call   23430 <strcmp>
    0.00 :   12cb0:  test   %eax,%eax
    0.00 :   12cb2:  jne    12c51 <_dl_check_map_versions+0x2a1>
    0.00 :   12cb4:  orb    $0x4,0x334(%r14)
    0.00 :   12cbc:  jmp    12c51 <_dl_check_map_versions+0x2a1>
    0.00 :   12cbe:  xchg   %ax,%ax
    0.00 :   12cc0:  mov    %r12d,0x8(%rsp)
    0.00 :   12cc5:  mov    0x38(%rsp),%rbp
    0.00 :   12cca:  mov    0xc(%rbp),%eax
    0.00 :   12ccd:  test   %eax,%eax
    0.00 :   12ccf:  je     12e92 <_dl_check_map_versions+0x4e2>
    0.00 :   12cd5:  add    %rax,%rbp
    0.00 :   12cd8:  jmp    12a40 <_dl_check_map_versions+0x90>
    0.00 :   12cdd:  nopl   (%rax)
    0.00 :   12ce0:  mov    0x44(%rsp),%esi
    0.00 :   12ce4:  test   %esi,%esi
    0.00 :   12ce6:  je     12c49 <_dl_check_map_versions+0x299>
    0.00 :   12cec:  mov    0x8(%rbp),%rsi
    0.00 :   12cf0:  cmpb   $0x0,(%rsi)
    0.00 :   12cf3:  jne    12d0d <_dl_check_map_versions+0x35d>
    0.00 :   12cf5:  mov    0x21d3c(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   12cfc:  mov    (%rax),%rsi
    0.00 :   12cff:  lea    0x16c26(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   12d06:  test   %rsi,%rsi
    0.00 :   12d09:  cmove  %rax,%rsi
    0.00 :   12d0d:  lea    0x80(%rsp),%rbp
    0.00 :   12d15:  mov    %r8,%rcx
    0.00 :   12d18:  xor    %eax,%eax
    0.00 :   12d1a:  lea    0x19c1f(%rip),%rdx        # 2c940 <__PRETTY_FUNCTION__.0+0x2f0>
    0.00 :   12d21:  mov    %rbp,%rdi
    0.00 :   12d24:  call   3450 <_dl_exception_create_format>
    0.00 :   12d29:  jmp    12c30 <_dl_check_map_versions+0x280>
    0.00 :   12d2e:  xchg   %ax,%ax
    0.00 :   12d30:  mov    0x8(%rbp),%rdx
    0.00 :   12d34:  mov    0x30(%rbp),%rcx
    0.00 :   12d38:  cmpb   $0x0,(%rdx)
    0.00 :   12d3b:  jne    12d55 <_dl_check_map_versions+0x3a5>
    0.00 :   12d3d:  mov    0x21cf4(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   12d44:  mov    (%rax),%rdx
    0.00 :   12d47:  lea    0x16bde(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   12d4e:  test   %rdx,%rdx
    0.00 :   12d51:  cmove  %rax,%rdx
    0.00 :   12d55:  mov    0x30(%r14),%r9
    0.00 :   12d59:  mov    %r15,%rsi
    0.00 :   12d5c:  lea    0x19b95(%rip),%rdi        # 2c8f8 <__PRETTY_FUNCTION__.0+0x2a8>
    0.00 :   12d63:  xor    %eax,%eax
    0.00 :   12d65:  mov    %r11,0x28(%rsp)
    0.00 :   12d6a:  mov    %r10d,0x10(%rsp)
    0.00 :   12d6f:  mov    %r8,0x8(%rsp)
    0.00 :   12d74:  call   d1d0 <_dl_debug_printf>
    0.00 :   12d79:  mov    0x28(%rsp),%r11
    0.00 :   12d7e:  mov    0x10(%rsp),%r10d
    0.00 :   12d83:  mov    0x8(%rsp),%r8
    0.00 :   12d88:  jmp    12b28 <_dl_check_map_versions+0x178>
    0.00 :   12d8d:  nopl   (%rax)
    0.00 :   12d90:  mov    0x2e0(%r14),%r8d
    0.00 :   12d97:  test   %r8d,%r8d
    0.00 :   12d9a:  je     12e58 <_dl_check_map_versions+0x4a8>
    0.00 :   12da0:  xor    %r12d,%r12d
    0.00 :   12da3:  jmp    12db9 <_dl_check_map_versions+0x409>
    0.00 :   12da5:  nopl   (%rax)
    0.00 :   12da8:  add    $0x1,%r12d
    0.00 :   12dac:  cmp    0x2e0(%r14),%r12d
    0.00 :   12db3:  jae    12e58 <_dl_check_map_versions+0x4a8>
    0.00 :   12db9:  mov    0x2d8(%r14),%rax
    0.00 :   12dc0:  mov    %r12d,%r15d
    0.00 :   12dc3:  mov    %rbx,%rdi
    0.00 :   12dc6:  mov    (%rax,%r15,8),%rsi
    0.00 :   12dca:  call   ae50 <_dl_name_match_p>
    0.00 :   12dcf:  test   %eax,%eax
    0.00 :   12dd1:  je     12da8 <_dl_check_map_versions+0x3f8>
    0.00 :   12dd3:  mov    0x2d8(%r14),%rax
    0.00 :   12dda:  mov    (%rax,%r15,8),%r15
    0.00 :   12dde:  jmp    12a8c <_dl_check_map_versions+0xdc>
    0.00 :   12de3:  nopl   0x0(%rax,%rax,1)
    0.00 :   12de8:  mov    0x28(%rsp),%rbp
    0.00 :   12ded:  mov    0x30(%rsp),%r8
    0.00 :   12df2:  mov    %rdi,%r15
    0.00 :   12df5:  mov    0x8(%rsp),%r14
    0.00 :   12dfa:  testb  $0x2,0x42(%rsp)
    0.00 :   12dff:  je     13065 <_dl_check_map_versions+0x6b5>
    0.00 :   12e05:  mov    0x44(%rsp),%ecx
    0.00 :   12e09:  test   %ecx,%ecx
    0.00 :   12e0b:  je     12c49 <_dl_check_map_versions+0x299>
    0.00 :   12e11:  mov    0x8(%rbp),%rsi
    0.00 :   12e15:  cmpb   $0x0,(%rsi)
    0.00 :   12e18:  jne    12e32 <_dl_check_map_versions+0x482>
    0.00 :   12e1a:  mov    0x21c17(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   12e21:  mov    (%rax),%rsi
    0.00 :   12e24:  lea    0x16b01(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   12e2b:  test   %rsi,%rsi
    0.00 :   12e2e:  cmove  %rax,%rsi
    0.00 :   12e32:  lea    0x80(%rsp),%rbp
    0.00 :   12e3a:  mov    %r15,%rcx
    0.00 :   12e3d:  xor    %eax,%eax
    0.00 :   12e3f:  lea    0x19b5a(%rip),%rdx        # 2c9a0 <__PRETTY_FUNCTION__.0+0x350>
    0.00 :   12e46:  mov    %rbp,%rdi
    0.00 :   12e49:  call   3450 <_dl_exception_create_format>
    0.00 :   12e4e:  jmp    12c30 <_dl_check_map_versions+0x280>
    0.00 :   12e53:  nopl   0x0(%rax,%rax,1)
    0.00 :   12e58:  lea    0x181d1(%rip),%rcx        # 2b030 <__PRETTY_FUNCTION__.1>
    0.00 :   12e5f:  mov    $0xcc,%edx
    0.00 :   12e64:  lea    0x17122(%rip),%rsi        # 29f8d <_sys_errname+0xbcd>
    0.00 :   12e6b:  lea    0x17128(%rip),%rdi        # 29f9a <_sys_errname+0xbda>
    0.00 :   12e72:  call   19f20 <__GI___assert_fail>
    0.00 :   12e77:  testb  $0x40,0x335(%r15)
    0.00 :   12e7f:  je     12aa1 <_dl_check_map_versions+0xf1>
    0.00 :   12e85:  jmp    12cca <_dl_check_map_versions+0x31a>
    0.00 :   12e8a:  add    (%rdi),%rcx
    0.00 :   12e8d:  jmp    129ea <_dl_check_map_versions+0x3a>
    0.00 :   12e92:  mov    0x58(%rsp),%rbx
    0.00 :   12e97:  mov    0x18(%rsp),%rcx
    0.00 :   12e9c:  mov    0x50(%rsp),%r12
    0.00 :   12ea1:  test   %rbx,%rbx
    0.00 :   12ea4:  je     130d7 <_dl_check_map_versions+0x727>
    0.00 :   12eaa:  mov    0x8(%rbx),%rdx
    0.00 :   12eae:  add    (%r14),%rdx
    0.00 :   12eb1:  movzwl 0x4(%rdx),%eax
    0.00 :   12eb5:  mov    0x8(%rsp),%esi
    0.00 :   12eb9:  and    $0x7fff,%eax
    0.00 :   12ebe:  cmp    %eax,%esi
    0.00 :   12ec0:  cmovae %esi,%eax
    0.00 :   12ec3:  mov    %eax,0x8(%rsp)
    0.00 :   12ec7:  mov    %eax,%esi
    0.00 :   12ec9:  mov    0x10(%rdx),%eax
    0.00 :   12ecc:  test   %eax,%eax
    0.00 :   12ece:  je     12eec <_dl_check_map_versions+0x53c>
    0.00 :   12ed0:  add    %rax,%rdx
    0.00 :   12ed3:  movzwl 0x4(%rdx),%eax
    0.00 :   12ed7:  and    $0x7fff,%eax
    0.00 :   12edc:  cmp    %eax,%esi
    0.00 :   12ede:  cmovb  %eax,%esi
    0.00 :   12ee1:  mov    0x10(%rdx),%eax
    0.00 :   12ee4:  test   %eax,%eax
    0.00 :   12ee6:  jne    12ed0 <_dl_check_map_versions+0x520>
    0.00 :   12ee8:  mov    %esi,0x8(%rsp)
    0.00 :   12eec:  mov    0x8(%rsp),%edx
    0.00 :   12ef0:  test   %edx,%edx
    0.00 :   12ef2:  je     1302b <_dl_check_map_versions+0x67b>
    0.00 :   12ef8:  mov    0x8(%rsp),%r15d
    0.00 :   12efd:  mov    %rcx,0x10(%rsp)
    0.00 :   12f02:  mov    $0x18,%esi
    0.00 :   12f07:  lea    0x1(%r15),%edi
    0.00 :   12f0b:  mov    %rdi,%r15
    0.00 :   12f0e:  call   *0x21ad4(%rip)        # 349e8 <__rtld_calloc>
    0.00 :   12f14:  mov    0x10(%rsp),%rcx
    0.00 :   12f19:  test   %rax,%rax
    0.00 :   12f1c:  mov    %rax,0x300(%r14)
    0.00 :   12f23:  mov    %rax,%r8
    0.00 :   12f26:  je     131a8 <_dl_check_map_versions+0x7f8>
    0.00 :   12f2c:  mov    0x1e8(%r14),%rax
    0.00 :   12f33:  mov    %r15d,0x308(%r14)
    0.00 :   12f3a:  mov    0x8(%rax),%rax
    0.00 :   12f3e:  testb  $0x20,0x336(%r14)
    0.00 :   12f46:  jne    130c2 <_dl_check_map_versions+0x712>
    0.00 :   12f4c:  mov    %rax,0x360(%r14)
    0.00 :   12f53:  test   %r12,%r12
    0.00 :   12f56:  je     130e8 <_dl_check_map_versions+0x738>
    0.00 :   12f5c:  mov    (%r14),%rdx
    0.00 :   12f5f:  mov    0x8(%r12),%rdi
    0.00 :   12f64:  add    %rdx,%rdi
    0.00 :   12f67:  nopw   0x0(%rax,%rax,1)
    0.00 :   12f70:  mov    0x8(%rdi),%eax
    0.00 :   12f73:  add    %rdi,%rax
    0.00 :   12f76:  jmp    12f83 <_dl_check_map_versions+0x5d3>
    0.00 :   12f78:  nopl   0x0(%rax,%rax,1)
    0.00 :   12f80:  add    %rsi,%rax
    0.00 :   12f83:  movzwl 0x6(%rax),%esi
    0.00 :   12f87:  mov    %esi,%r10d
    0.00 :   12f8a:  mov    %esi,%r9d
    0.00 :   12f8d:  and    $0x7fff,%r10d
    0.00 :   12f94:  and    $0x7fff,%r9w
    0.00 :   12f9a:  cmp    %r15d,%r10d
    0.00 :   12f9d:  jae    12fcf <_dl_check_map_versions+0x61f>
    0.00 :   12f9f:  movzwl %r9w,%r9d
    0.00 :   12fa3:  and    $0x8000,%esi
    0.00 :   12fa9:  mov    (%rax),%r10d
    0.00 :   12fac:  lea    (%r9,%r9,2),%r9
    0.00 :   12fb0:  lea    (%r8,%r9,8),%r9
    0.00 :   12fb4:  mov    %esi,0xc(%r9)
    0.00 :   12fb8:  mov    0x8(%rax),%esi
    0.00 :   12fbb:  mov    %r10d,0x8(%r9)
    0.00 :   12fbf:  add    %rcx,%rsi
    0.00 :   12fc2:  mov    %rsi,(%r9)
    0.00 :   12fc5:  mov    0x4(%rdi),%esi
    0.00 :   12fc8:  add    %rcx,%rsi
    0.00 :   12fcb:  mov    %rsi,0x10(%r9)
    0.00 :   12fcf:  mov    0xc(%rax),%esi
    0.00 :   12fd2:  test   %esi,%esi
    0.00 :   12fd4:  jne    12f80 <_dl_check_map_versions+0x5d0>
    0.00 :   12fd6:  mov    0xc(%rdi),%eax
    0.00 :   12fd9:  test   %eax,%eax
    0.00 :   12fdb:  je     12fe2 <_dl_check_map_versions+0x632>
    0.00 :   12fdd:  add    %rax,%rdi
    0.00 :   12fe0:  jmp    12f70 <_dl_check_map_versions+0x5c0>
    0.00 :   12fe2:  test   %rbx,%rbx
    0.00 :   12fe5:  je     13030 <_dl_check_map_versions+0x680>
    0.00 :   12fe7:  add    0x8(%rbx),%rdx
    0.00 :   12feb:  jmp    12ff3 <_dl_check_map_versions+0x643>
    0.00 :   12fed:  nopl   (%rax)
    0.00 :   12ff0:  add    %rax,%rdx
    0.00 :   12ff3:  testb  $0x1,0x2(%rdx)
    0.00 :   12ff7:  jne    13024 <_dl_check_map_versions+0x674>
    0.00 :   12ff9:  mov    0xc(%rdx),%esi
    0.00 :   12ffc:  movzwl 0x4(%rdx),%eax
    0.00 :   13000:  mov    0x8(%rdx),%edi
    0.00 :   13003:  mov    (%rdx,%rsi,1),%esi
    0.00 :   13006:  and    $0x7fff,%eax
    0.00 :   1300b:  lea    (%rax,%rax,2),%rax
    0.00 :   1300f:  lea    (%r8,%rax,8),%rax
    0.00 :   13013:  add    %rcx,%rsi
    0.00 :   13016:  mov    %edi,0x8(%rax)
    0.00 :   13019:  mov    %rsi,(%rax)
    0.00 :   1301c:  movq   $0x0,0x10(%rax)
    0.00 :   13024:  mov    0x10(%rdx),%eax
    0.00 :   13027:  test   %eax,%eax
    0.00 :   13029:  jne    12ff0 <_dl_check_map_versions+0x640>
    0.00 :   1302b:  test   %r12,%r12
    0.00 :   1302e:  je     1304f <_dl_check_map_versions+0x69f>
    0.00 :   13030:  cmpq   $0x0,0x48(%r14)
    0.00 :   13035:  je     1304f <_dl_check_map_versions+0x69f>
    0.00 :   13037:  cmpq   $0x0,0x160(%r14)
    0.00 :   1303f:  je     1304f <_dl_check_map_versions+0x69f>
    0.00 :   13041:  testb  $0x4,0x334(%r14)
    0.00 :   13049:  je     131ea <_dl_check_map_versions+0x83a>
    0.00 :   1304f:  mov    0x4c(%rsp),%eax
    0.00 :   13053:  add    $0xa8,%rsp
    0.00 :   1305a:  pop    %rbx
    0.00 :   1305b:  pop    %rbp
    0.00 :   1305c:  pop    %r12
    0.00 :   1305e:  pop    %r13
    0.00 :   13060:  pop    %r14
    0.00 :   13062:  pop    %r15
    0.00 :   13064:  ret
    0.00 :   13065:  mov    0x8(%rbp),%rsi
    0.00 :   13069:  cmpb   $0x0,(%rsi)
    0.00 :   1306c:  jne    13086 <_dl_check_map_versions+0x6d6>
    0.00 :   1306e:  mov    0x219c3(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   13075:  mov    (%rax),%rsi
    0.00 :   13078:  lea    0x168ad(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   1307f:  test   %rsi,%rsi
    0.00 :   13082:  cmove  %rax,%rsi
    0.00 :   13086:  lea    0x80(%rsp),%rbp
    0.00 :   1308e:  mov    %r15,%rcx
    0.00 :   13091:  xor    %eax,%eax
    0.00 :   13093:  lea    0x19936(%rip),%rdx        # 2c9d0 <__PRETTY_FUNCTION__.0+0x380>
    0.00 :   1309a:  mov    %rbp,%rdi
    0.00 :   1309d:  call   3450 <_dl_exception_create_format>
    0.00 :   130a2:  jmp    12c26 <_dl_check_map_versions+0x276>
    0.00 :   130a7:  movl   $0x0,0x8(%rsp)
    0.00 :   130af:  movl   $0x0,0x4c(%rsp)
    0.00 :   130b7:  test   %rbx,%rbx
    0.00 :   130ba:  jne    12eaa <_dl_check_map_versions+0x4fa>
    0.00 :   130c0:  jmp    1304f <_dl_check_map_versions+0x69f>
    0.00 :   130c2:  add    (%r14),%rax
    0.00 :   130c5:  jmp    12f4c <_dl_check_map_versions+0x59c>
    0.00 :   130ca:  movl   $0x0,0x4c(%rsp)
    0.00 :   130d2:  jmp    1304f <_dl_check_map_versions+0x69f>
    0.00 :   130d7:  mov    0x8(%rsp),%eax
    0.00 :   130db:  test   %eax,%eax
    0.00 :   130dd:  jne    12ef8 <_dl_check_map_versions+0x548>
    0.00 :   130e3:  jmp    13030 <_dl_check_map_versions+0x680>
    0.00 :   130e8:  test   %rbx,%rbx
    0.00 :   130eb:  je     1304f <_dl_check_map_versions+0x69f>
    0.00 :   130f1:  mov    (%r14),%rdx
    0.00 :   130f4:  jmp    12fe7 <_dl_check_map_versions+0x637>
    0.00 :   130f9:  movb   $0x0,0x73(%rsp)
    0.00 :   130fe:  movzwl (%rax),%esi
    0.00 :   13101:  mov    %r13,%r10
    0.00 :   13104:  lea    0x73(%rsp),%rcx
    0.00 :   13109:  movabs $0xcccccccccccccccd,%r9
    0.00 :   13113:  mov    %rsi,%rax
    0.00 :   13116:  mov    %rsi,%rdi
    0.00 :   13119:  sub    $0x1,%rcx
    0.00 :   1311d:  mul    %r9
    0.00 :   13120:  shr    $0x3,%rdx
    0.00 :   13124:  lea    (%rdx,%rdx,4),%rax
    0.00 :   13128:  add    %rax,%rax
    0.00 :   1312b:  sub    %rax,%rdi
    0.00 :   1312e:  movzbl (%r10,%rdi,1),%eax
    0.00 :   13133:  mov    %al,(%rcx)
    0.00 :   13135:  mov    %rsi,%rax
    0.00 :   13138:  mov    %rdx,%rsi
    0.00 :   1313b:  cmp    $0x9,%rax
    0.00 :   1313f:  ja     13113 <_dl_check_map_versions+0x763>
    0.00 :   13141:  mov    0x8(%r14),%rsi
    0.00 :   13145:  cmpb   $0x0,(%rsi)
    0.00 :   13148:  je     1316f <_dl_check_map_versions+0x7bf>
    0.00 :   1314a:  lea    0x80(%rsp),%rbx
    0.00 :   13152:  lea    0x1976f(%rip),%rdx        # 2c8c8 <__PRETTY_FUNCTION__.0+0x278>
    0.00 :   13159:  xor    %eax,%eax
    0.00 :   1315b:  mov    %rbx,%rdi
    0.00 :   1315e:  call   3450 <_dl_exception_create_format>
    0.00 :   13163:  xor    %edi,%edi
    0.00 :   13165:  xor    %edx,%edx
    0.00 :   13167:  mov    %rbx,%rsi
    0.00 :   1316a:  call   1060 <_dl_signal_exception@plt>
    0.00 :   1316f:  mov    0x218c2(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   13176:  mov    (%rax),%rsi
    0.00 :   13179:  lea    0x167ac(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   13180:  test   %rsi,%rsi
    0.00 :   13183:  cmove  %rax,%rsi
    0.00 :   13187:  jmp    1314a <_dl_check_map_versions+0x79a>
    0.00 :   13189:  lea    0x198c0(%rip),%rcx        # 2ca50 <__PRETTY_FUNCTION__.0>
    0.00 :   13190:  mov    $0x57,%edx
    0.00 :   13195:  lea    0x16df1(%rip),%rsi        # 29f8d <_sys_errname+0xbcd>
    0.00 :   1319c:  lea    0x16e06(%rip),%rdi        # 29fa9 <_sys_errname+0xbe9>
    0.00 :   131a3:  call   19f20 <__GI___assert_fail>
    0.00 :   131a8:  mov    0x8(%r14),%rsi
    0.00 :   131ac:  cmpb   $0x0,(%rsi)
    0.00 :   131af:  jne    131c9 <_dl_check_map_versions+0x819>
    0.00 :   131b1:  mov    0x21880(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   131b8:  mov    (%rax),%rsi
    0.00 :   131bb:  lea    0x1676a(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   131c2:  test   %rsi,%rsi
    0.00 :   131c5:  cmove  %rax,%rsi
    0.00 :   131c9:  lea    0x80(%rsp),%rbx
    0.00 :   131d1:  lea    0x19820(%rip),%rdx        # 2c9f8 <__PRETTY_FUNCTION__.0+0x3a8>
    0.00 :   131d8:  mov    %rbx,%rdi
    0.00 :   131db:  call   3380 <_dl_exception_create>
    0.00 :   131e0:  mov    $0xc,%edi
    0.00 :   131e5:  jmp    13165 <_dl_check_map_versions+0x7b5>
    0.00 :   131ea:  mov    0x68(%r14),%rax
    0.00 :   131ee:  mov    0x8(%rax),%rbp
    0.00 :   131f2:  testb  $0x20,0x336(%r14)
    0.00 :   131fa:  je     131ff <_dl_check_map_versions+0x84f>
    0.00 :   131fc:  add    (%r14),%rbp
    0.00 :   131ff:  mov    0x10(%r14),%rbx
    0.00 :   13203:  mov    (%rbx),%rax
    0.00 :   13206:  test   %rax,%rax
    0.00 :   13209:  je     1304f <_dl_check_map_versions+0x69f>
    0.00 :   1320f:  lea    0x16dca(%rip),%r12        # 29fe0 <_sys_errname+0xc20>
    0.00 :   13216:  jmp    13231 <_dl_check_map_versions+0x881>
    0.00 :   13218:  nopl   0x0(%rax,%rax,1)
    0.00 :   13220:  mov    0x10(%rbx),%rax
    0.00 :   13224:  add    $0x10,%rbx
    0.00 :   13228:  test   %rax,%rax
    0.00 :   1322b:  je     1304f <_dl_check_map_versions+0x69f>
    0.00 :   13231:  cmp    $0x1,%rax
    0.00 :   13235:  jne    13220 <_dl_check_map_versions+0x870>
    0.00 :   13237:  mov    0x8(%rbx),%rdi
    0.00 :   1323b:  mov    $0x8,%edx
    0.00 :   13240:  mov    %r12,%rsi
    0.00 :   13243:  add    %rbp,%rdi
    0.00 :   13246:  call   24bf0 <strncmp>
    0.00 :   1324b:  test   %eax,%eax
    0.00 :   1324d:  jne    13220 <_dl_check_map_versions+0x870>
    0.00 :   1324f:  mov    0x8(%r14),%rsi
    0.00 :   13253:  cmpb   $0x0,(%rsi)
    0.00 :   13256:  jne    13267 <_dl_check_map_versions+0x8b7>
    0.00 :   13258:  mov    0x217d9(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   1325f:  mov    (%rax),%rsi
    0.00 :   13262:  test   %rsi,%rsi
    0.00 :   13265:  je     13283 <_dl_check_map_versions+0x8d3>
    0.00 :   13267:  lea    0x80(%rsp),%rbx
    0.00 :   1326f:  lea    0x197aa(%rip),%rdx        # 2ca20 <__PRETTY_FUNCTION__.0+0x3d0>
    0.00 :   13276:  mov    %rbx,%rdi
    0.00 :   13279:  call   3380 <_dl_exception_create>
    0.00 :   1327e:  jmp    13163 <_dl_check_map_versions+0x7b3>
    0.00 :   13283:  lea    0x166a2(%rip),%rsi        # 2992c <_sys_errname+0x56c>
    0.00 :   1328a:  jmp    13267 <_dl_check_map_versions+0x8b7>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   58.67 [nf_conntrack][c94]
   41.33 [nf_conntrack][c40]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000c40 <nf_ct_acct_add>:
         : 6   nf_ct_acct_add():
   41.33 :   c40:    call   c45 <nf_ct_acct_add+0x5> // [nf_conntrack][c40]
    0.00 :   c45:    mov    0xb0(%rdi),%rdi
    0.00 :   c4c:    test   %rdi,%rdi
    0.00 :   c4f:    je     c94 <nf_ct_acct_add+0x54>
    0.00 :   c51:    movzbl 0x3(%rdi),%eax
    0.00 :   c55:    test   %al,%al
    0.00 :   c57:    je     c94 <nf_ct_acct_add+0x54>
    0.00 :   c59:    push   %r12
    0.00 :   c5b:    add    %rdi,%rax
    0.00 :   c5e:    push   %rbp
    0.00 :   c5f:    push   %rbx
    0.00 :   c60:    mov    %esi,%ebx
    0.00 :   c62:    sub    $0x8,%rsp
    0.00 :   c66:    mov    0xc(%rdi),%esi
    0.00 :   c69:    test   %esi,%esi
    0.00 :   c6b:    jne    c99 <nf_ct_acct_add+0x59>
    0.00 :   c6d:    test   %rax,%rax
    0.00 :   c70:    je     c87 <nf_ct_acct_add+0x47>
    0.00 :   c72:    shl    $0x4,%rbx
    0.00 :   c76:    mov    %edx,%r12d
    0.00 :   c79:    add    %rbx,%rax
    0.00 :   c7c:    lock add %r12,(%rax)
    0.00 :   c80:    mov    %ecx,%ebp
    0.00 :   c82:    lock add %rbp,0x8(%rax)
    0.00 :   c87:    add    $0x8,%rsp
    0.00 :   c8b:    pop    %rbx
    0.00 :   c8c:    pop    %rbp
    0.00 :   c8d:    pop    %r12
    0.00 :   c8f:    jmp    c94 <nf_ct_acct_add+0x54>
   58.67 :   c94:    jmp    c99 <nf_ct_acct_add+0x59> // [nf_conntrack][c94]
    0.00 :   c99:    mov    $0x3,%esi
    0.00 :   c9e:    mov    %ecx,0x4(%rsp)
    0.00 :   ca2:    mov    %edx,(%rsp)
    0.00 :   ca5:    call   caa <nf_ct_acct_add+0x6a>
    0.00 :   caa:    mov    0x4(%rsp),%ecx
    0.00 :   cae:    mov    (%rsp),%edx
    0.00 :   cb1:    jmp    c6d <nf_ct_acct_add+0x2d>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[3e040]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000003e040 <atoi>:
         : 6     __GI_atoi():
  100.00 :   3e040:  endbr64 // libc.so.6[3e040]
    0.00 :   3e044:  sub    $0x8,%rsp
    0.00 :   3e048:  mov    $0xa,%edx
    0.00 :   3e04d:  xor    %esi,%esi
    0.00 :   3e04f:  call   49ad0 <strtoimax>
    0.00 :   3e054:  add    $0x8,%rsp
    0.00 :   3e058:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[157744]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000001576f0 <__strncmp_avx2>:
         : 6      __strncmp_avx2():
    0.00 :   1576f0: endbr64
    0.00 :   1576f4: cmp    $0x1,%rdx
    0.00 :   1576f8: jle    157751 <__strncmp_avx2+0x61>
    0.00 :   1576fa: vpxor  %xmm15,%xmm15,%xmm15
    0.00 :   1576ff: mov    %edi,%eax
    0.00 :   157701: or     %esi,%eax
    0.00 :   157703: shl    $0x14,%eax
    0.00 :   157706: cmp    $0xf8000000,%eax
    0.00 :   15770b: ja     157ab4 <__strncmp_avx2+0x3c4>
    0.00 :   157711: vmovdqu (%rdi),%ymm0
    0.00 :   157715: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   157719: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15771d: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157721: vpmovmskb %ymm1,%ecx
    0.00 :   157725: cmp    $0x20,%rdx
    0.00 :   157729: jbe    157742 <__strncmp_avx2+0x52>
    0.00 :   15772b: inc    %ecx
    0.00 :   15772d: je     1577a0 <__strncmp_avx2+0xb0>
    0.00 :   15772f: nop
    0.00 :   157730: tzcnt  %ecx,%ecx
    0.00 :   157734: movzbl (%rdi,%rcx,1),%eax
    0.00 :   157738: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   15773c: sub    %ecx,%eax
    0.00 :   15773e: vzeroupper
    0.00 :   157741: ret
    0.00 :   157742: not    %ecx
  100.00 :   157744: bzhi   %edx,%ecx,%eax // libc.so.6[157744]
    0.00 :   157749: jne    157730 <__strncmp_avx2+0x40>
    0.00 :   15774b: xor    %eax,%eax
    0.00 :   15774d: vzeroupper
    0.00 :   157750: ret
    0.00 :   157751: jb     15774b <__strncmp_avx2+0x5b>
    0.00 :   157753: ja     155730 <__strcmp_avx2>
    0.00 :   157759: movzbl (%rdi),%eax
    0.00 :   15775c: movzbl (%rsi),%ecx
    0.00 :   15775f: sub    %ecx,%eax
    0.00 :   157761: ret
    0.00 :   157762: tzcnt  %ecx,%ecx
    0.00 :   157766: add    $0xffffffffffffffe0,%rdx
    0.00 :   15776a: cmp    %rcx,%rdx
    0.00 :   15776d: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   15776f: movzbl 0x20(%rdi,%rcx,1),%eax
    0.00 :   157774: movzbl 0x20(%rsi,%rcx,1),%ecx
    0.00 :   157779: sub    %ecx,%eax
    0.00 :   15777b: vzeroupper
    0.00 :   15777e: ret
    0.00 :   15777f: nop
    0.00 :   157780: shl    $0x20,%rcx
    0.00 :   157784: tzcnt  %rcx,%rcx
    0.00 :   157789: cmp    %rcx,%rdx
    0.00 :   15778c: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   15778e: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   157793: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   157798: sub    %ecx,%eax
    0.00 :   15779a: vzeroupper
    0.00 :   15779d: ret
    0.00 :   15779e: xchg   %ax,%ax
    0.00 :   1577a0: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   1577a5: vpcmpeqb 0x20(%rsi),%ymm0,%ymm1
    0.00 :   1577aa: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1577ae: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1577b2: vpmovmskb %ymm1,%ecx
    0.00 :   1577b6: inc    %ecx
    0.00 :   1577b8: jne    157762 <__strncmp_avx2+0x72>
    0.00 :   1577ba: sub    $0x40,%rdx
    0.00 :   1577be: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   1577c0: vmovdqu 0x40(%rdi),%ymm0
    0.00 :   1577c5: vpcmpeqb 0x40(%rsi),%ymm0,%ymm1
    0.00 :   1577ca: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1577ce: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1577d2: vpmovmskb %ymm1,%ecx
    0.00 :   1577d6: inc    %ecx
    0.00 :   1577d8: jne    157784 <__strncmp_avx2+0x94>
    0.00 :   1577da: vmovdqu 0x60(%rdi),%ymm0
    0.00 :   1577df: vpcmpeqb 0x60(%rsi),%ymm0,%ymm1
    0.00 :   1577e4: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1577e8: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1577ec: vpmovmskb %ymm1,%ecx
    0.00 :   1577f0: inc    %ecx
    0.00 :   1577f2: jne    157780 <__strncmp_avx2+0x90>
    0.00 :   1577f4: cmp    $0x40,%rdx
    0.00 :   1577f8: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   1577fe: xor    %r8d,%r8d
    0.00 :   157801: lea    0x40(%rdi,%rdx,1),%rdx
    0.00 :   157806: sub    %rdi,%rsi
    0.00 :   157809: and    $0xffffffffffffff80,%rdi
    0.00 :   15780d: add    %rdi,%rsi
    0.00 :   157810: sub    %rdi,%rdx
    0.00 :   157813: mov    $0xffffff80,%eax
    0.00 :   157818: sub    %esi,%eax
    0.00 :   15781a: and    $0xfff,%eax
    0.00 :   15781f: nop
    0.00 :   157820: sub    $0x80,%rdx
    0.00 :   157827: jbe    15774b <__strncmp_avx2+0x5b>
    0.00 :   15782d: sub    $0xffffffffffffff80,%rdi
    0.00 :   157831: sub    $0xffffffffffffff80,%rsi
    0.00 :   157835: add    $0xffffff80,%eax
    0.00 :   157838: jae    157930 <__strncmp_avx2+0x240>
    0.00 :   15783e: vmovdqa (%rdi),%ymm0
    0.00 :   157842: vmovdqa 0x20(%rdi),%ymm2
    0.00 :   157847: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   15784c: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   157851: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   157855: vpcmpeqb 0x20(%rsi),%ymm2,%ymm3
    0.00 :   15785a: vpcmpeqb 0x40(%rsi),%ymm4,%ymm5
    0.00 :   15785f: vpcmpeqb 0x60(%rsi),%ymm6,%ymm7
    0.00 :   157864: vpand  %ymm0,%ymm1,%ymm1
    0.00 :   157868: vpand  %ymm2,%ymm3,%ymm3
    0.00 :   15786c: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   157870: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   157874: vpminub %ymm1,%ymm3,%ymm3
    0.00 :   157878: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   15787c: vpminub %ymm3,%ymm7,%ymm7
    0.00 :   157880: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   157884: vpmovmskb %ymm7,%r9d
    0.00 :   157888: test   %r9d,%r9d
    0.00 :   15788b: je     157820 <__strncmp_avx2+0x130>
    0.00 :   15788d: vpcmpeqb %ymm1,%ymm15,%ymm1
    0.00 :   157891: vpmovmskb %ymm1,%ecx
    0.00 :   157895: test   %ecx,%ecx
    0.00 :   157897: jne    1578e7 <__strncmp_avx2+0x1f7>
    0.00 :   157899: vpcmpeqb %ymm3,%ymm15,%ymm3
    0.00 :   15789d: vpmovmskb %ymm3,%ecx
    0.00 :   1578a1: test   %ecx,%ecx
    0.00 :   1578a3: jne    1578e3 <__strncmp_avx2+0x1f3>
    0.00 :   1578a5: sub    $0x40,%rdx
    0.00 :   1578a9: jbe    1578dd <__strncmp_avx2+0x1ed>
    0.00 :   1578ab: vpcmpeqb %ymm5,%ymm15,%ymm5
    0.00 :   1578af: vpmovmskb %ymm5,%ecx
    0.00 :   1578b3: test   %ecx,%ecx
    0.00 :   1578b5: jne    157905 <__strncmp_avx2+0x215>
    0.00 :   1578b7: tzcnt  %r9d,%r9d
    0.00 :   1578bc: sub    $0xffffffe0,%r9d
    0.00 :   1578c0: cmp    %r9,%rdx
    0.00 :   1578c3: jbe    1578dd <__strncmp_avx2+0x1ed>
    0.00 :   1578c5: movzbl 0x40(%rdi,%r9,1),%eax
    0.00 :   1578cb: movzbl 0x40(%rsi,%r9,1),%ecx
    0.00 :   1578d1: sub    %ecx,%eax
    0.00 :   1578d3: xor    %r8d,%eax
    0.00 :   1578d6: sub    %r8d,%eax
    0.00 :   1578d9: vzeroupper
    0.00 :   1578dc: ret
    0.00 :   1578dd: xor    %eax,%eax
    0.00 :   1578df: vzeroupper
    0.00 :   1578e2: ret
    0.00 :   1578e3: shl    $0x20,%rcx
    0.00 :   1578e7: tzcnt  %rcx,%rcx
    0.00 :   1578ec: cmp    %rcx,%rdx
    0.00 :   1578ef: jbe    1578dd <__strncmp_avx2+0x1ed>
    0.00 :   1578f1: movzbl (%rdi,%rcx,1),%eax
    0.00 :   1578f5: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   1578f9: sub    %ecx,%eax
    0.00 :   1578fb: xor    %r8d,%eax
    0.00 :   1578fe: sub    %r8d,%eax
    0.00 :   157901: vzeroupper
    0.00 :   157904: ret
    0.00 :   157905: tzcnt  %ecx,%ecx
    0.00 :   157909: cmp    %rcx,%rdx
    0.00 :   15790c: jbe    157b70 <__strncmp_avx2+0x480>
    0.00 :   157912: movzbl 0x40(%rdi,%rcx,1),%eax
    0.00 :   157917: movzbl 0x40(%rsi,%rcx,1),%ecx
    0.00 :   15791c: sub    %ecx,%eax
    0.00 :   15791e: xor    %r8d,%eax
    0.00 :   157921: sub    %r8d,%eax
    0.00 :   157924: vzeroupper
    0.00 :   157927: ret
    0.00 :   157928: nopl   0x0(%rax,%rax,1)
    0.00 :   157930: cmp    $0xffffff80,%eax
    0.00 :   157933: je     15783e <__strncmp_avx2+0x14e>
    0.00 :   157939: cmp    $0xffffffa0,%eax
    0.00 :   15793c: jle    15795b <__strncmp_avx2+0x26b>
    0.00 :   15793e: vmovdqa (%rdi),%ymm0
    0.00 :   157942: vpcmpeqb (%rsi),%ymm0,%ymm1
    0.00 :   157946: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15794a: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   15794e: vpmovmskb %ymm1,%ecx
    0.00 :   157952: inc    %ecx
    0.00 :   157954: jne    1578e7 <__strncmp_avx2+0x1f7>
    0.00 :   157956: cmp    $0xffffffc0,%eax
    0.00 :   157959: jg     1579d5 <__strncmp_avx2+0x2e5>
    0.00 :   15795b: sub    $0xffffff80,%eax
    0.00 :   15795e: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   157964: vpcmpeqb -0x20(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   15796a: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   15796e: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157972: vpmovmskb %ymm1,%ecx
    0.00 :   157976: mov    $0xffffffff,%r10d
    0.00 :   15797c: shlx   %esi,%r10d,%r10d
    0.00 :   157981: not    %ecx
    0.00 :   157983: cmp    %rax,%rdx
    0.00 :   157986: jbe    1579c0 <__strncmp_avx2+0x2d0>
    0.00 :   157988: mov    %eax,%r9d
    0.00 :   15798b: add    $0xf80,%eax
    0.00 :   157990: and    %r10d,%ecx
    0.00 :   157993: je     15783e <__strncmp_avx2+0x14e>
    0.00 :   157999: tzcnt  %ecx,%ecx
    0.00 :   15799d: lea    -0x20(%r9,%rcx,1),%ecx
    0.00 :   1579a2: movzbl (%rdi,%rcx,1),%eax
    0.00 :   1579a6: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   1579aa: sub    %ecx,%eax
    0.00 :   1579ac: xor    %r8d,%eax
    0.00 :   1579af: sub    %r8d,%eax
    0.00 :   1579b2: vzeroupper
    0.00 :   1579b5: ret
    0.00 :   1579b6: cs nopw 0x0(%rax,%rax,1)
    0.00 :   1579c0: and    %r10d,%ecx
    0.00 :   1579c3: tzcnt  %ecx,%ecx
    0.00 :   1579c7: lea    -0x20(%rax,%rcx,1),%ecx
    0.00 :   1579cb: cmp    %ecx,%edx
    0.00 :   1579cd: ja     1579a2 <__strncmp_avx2+0x2b2>
    0.00 :   1579cf: xor    %eax,%eax
    0.00 :   1579d1: vzeroupper
    0.00 :   1579d4: ret
    0.00 :   1579d5: vmovdqu 0x20(%rdi),%ymm0
    0.00 :   1579da: vpcmpeqb 0x20(%rsi),%ymm0,%ymm1
    0.00 :   1579df: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   1579e3: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   1579e7: vpmovmskb %ymm1,%ecx
    0.00 :   1579eb: inc    %ecx
    0.00 :   1579ed: jne    1578e3 <__strncmp_avx2+0x1f3>
    0.00 :   1579f3: cmp    $0x40,%rdx
    0.00 :   1579f7: jbe    157a88 <__strncmp_avx2+0x398>
    0.00 :   1579fd: sub    $0xffffff80,%eax
    0.00 :   157a00: vmovdqu -0x40(%rdi,%rax,1),%ymm0
    0.00 :   157a06: vpcmpeqb -0x40(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   157a0c: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157a10: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157a14: vpmovmskb %ymm1,%ecx
    0.00 :   157a18: inc    %ecx
    0.00 :   157a1a: jne    157a90 <__strncmp_avx2+0x3a0>
    0.00 :   157a1c: vmovdqu -0x20(%rdi,%rax,1),%ymm0
    0.00 :   157a22: vpcmpeqb -0x20(%rsi,%rax,1),%ymm0,%ymm1
    0.00 :   157a28: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157a2c: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157a30: vpmovmskb %ymm1,%ecx
    0.00 :   157a34: inc    %ecx
    0.00 :   157a36: jne    157a93 <__strncmp_avx2+0x3a3>
    0.00 :   157a38: cmp    %rax,%rdx
    0.00 :   157a3b: jbe    157a88 <__strncmp_avx2+0x398>
    0.00 :   157a3d: vmovdqa 0x40(%rdi),%ymm4
    0.00 :   157a42: vmovdqa 0x60(%rdi),%ymm6
    0.00 :   157a47: vpcmpeqb 0x40(%rsi),%ymm4,%ymm5
    0.00 :   157a4c: vpcmpeqb 0x60(%rsi),%ymm6,%ymm7
    0.00 :   157a51: vpand  %ymm4,%ymm5,%ymm5
    0.00 :   157a55: vpand  %ymm6,%ymm7,%ymm7
    0.00 :   157a59: vpminub %ymm5,%ymm7,%ymm7
    0.00 :   157a5d: vpcmpeqb %ymm7,%ymm15,%ymm7
    0.00 :   157a61: vpmovmskb %ymm7,%r9d
    0.00 :   157a65: test   %r9d,%r9d
    0.00 :   157a68: jne    1578a5 <__strncmp_avx2+0x1b5>
    0.00 :   157a6e: sub    $0xffffffffffffff80,%rdi
    0.00 :   157a72: sub    $0xffffffffffffff80,%rsi
    0.00 :   157a76: add    $0xf00,%eax
    0.00 :   157a7b: sub    $0x80,%rdx
    0.00 :   157a82: ja     15783e <__strncmp_avx2+0x14e>
    0.00 :   157a88: xor    %eax,%eax
    0.00 :   157a8a: vzeroupper
    0.00 :   157a8d: ret
    0.00 :   157a8e: xchg   %ax,%ax
    0.00 :   157a90: add    $0xffffffe0,%eax
    0.00 :   157a93: tzcnt  %ecx,%ecx
    0.00 :   157a97: lea    -0x20(%rax,%rcx,1),%ecx
    0.00 :   157a9b: cmp    %rcx,%rdx
    0.00 :   157a9e: jbe    157a88 <__strncmp_avx2+0x398>
    0.00 :   157aa0: movzbl (%rdi,%rcx,1),%eax
    0.00 :   157aa4: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   157aa8: sub    %ecx,%eax
    0.00 :   157aaa: xor    %r8d,%eax
    0.00 :   157aad: sub    %r8d,%eax
    0.00 :   157ab0: vzeroupper
    0.00 :   157ab3: ret
    0.00 :   157ab4: mov    %edi,%eax
    0.00 :   157ab6: mov    %esi,%ecx
    0.00 :   157ab8: and    $0xfff,%eax
    0.00 :   157abd: and    $0xfff,%ecx
    0.00 :   157ac3: xor    %r9d,%r9d
    0.00 :   157ac6: cmp    %eax,%ecx
    0.00 :   157ac8: jg     157b76 <__strncmp_avx2+0x486>
    0.00 :   157ace: sub    $0xf80,%eax
    0.00 :   157ad3: jbe    157711 <__strncmp_avx2+0x21>
    0.00 :   157ad9: xor    %r8d,%r8d
    0.00 :   157adc: sub    $0x60,%eax
    0.00 :   157adf: jg     157ba0 <__strncmp_avx2+0x4b0>
    0.00 :   157ae5: vmovdqu (%rdi,%r9,1),%ymm0
    0.00 :   157aeb: vpcmpeqb (%rsi,%r9,1),%ymm0,%ymm1
    0.00 :   157af1: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157af5: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157af9: vpmovmskb %ymm1,%ecx
    0.00 :   157afd: inc    %ecx
    0.00 :   157aff: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157b01: add    $0x20,%r9d
    0.00 :   157b05: cmp    %r9,%rdx
    0.00 :   157b08: jbe    157b70 <__strncmp_avx2+0x480>
    0.00 :   157b0a: add    $0x20,%eax
    0.00 :   157b0d: jl     157ae5 <__strncmp_avx2+0x3f5>
    0.00 :   157b0f: sub    %eax,%r9d
    0.00 :   157b12: vmovdqu (%rdi,%r9,1),%ymm0
    0.00 :   157b18: vpcmpeqb (%rsi,%r9,1),%ymm0,%ymm1
    0.00 :   157b1e: vpcmpeqb %ymm0,%ymm15,%ymm2
    0.00 :   157b22: vpandn %ymm1,%ymm2,%ymm1
    0.00 :   157b26: vpmovmskb %ymm1,%ecx
    0.00 :   157b2a: lea    0x20(%r9),%eax
    0.00 :   157b2e: cmp    %rax,%rdx
    0.00 :   157b31: jbe    157b60 <__strncmp_avx2+0x470>
    0.00 :   157b33: add    %rdi,%rdx
    0.00 :   157b36: inc    %ecx
    0.00 :   157b38: je     157806 <__strncmp_avx2+0x116>
    0.00 :   157b3e: xchg   %ax,%ax
    0.00 :   157b40: tzcnt  %ecx,%ecx
    0.00 :   157b44: add    %r9d,%ecx
    0.00 :   157b47: movzbl (%rdi,%rcx,1),%eax
    0.00 :   157b4b: movzbl (%rsi,%rcx,1),%ecx
    0.00 :   157b4f: sub    %ecx,%eax
    0.00 :   157b51: xor    %r8d,%eax
    0.00 :   157b54: sub    %r8d,%eax
    0.00 :   157b57: vzeroupper
    0.00 :   157b5a: ret
    0.00 :   157b5b: nopl   0x0(%rax,%rax,1)
    0.00 :   157b60: inc    %ecx
    0.00 :   157b62: tzcnt  %ecx,%ecx
    0.00 :   157b66: add    %r9d,%ecx
    0.00 :   157b69: cmp    %rcx,%rdx
    0.00 :   157b6c: ja     157b47 <__strncmp_avx2+0x457>
    0.00 :   157b6e: xchg   %ax,%ax
    0.00 :   157b70: xor    %eax,%eax
    0.00 :   157b72: vzeroupper
    0.00 :   157b75: ret
    0.00 :   157b76: sub    $0xf80,%ecx
    0.00 :   157b7c: jbe    157711 <__strncmp_avx2+0x21>
    0.00 :   157b82: mov    %ecx,%eax
    0.00 :   157b84: mov    %rdi,%rcx
    0.00 :   157b87: mov    %rsi,%rdi
    0.00 :   157b8a: mov    %rcx,%rsi
    0.00 :   157b8d: mov    $0xffffffff,%r8d
    0.00 :   157b93: xor    %r9d,%r9d
    0.00 :   157b96: sub    $0x60,%eax
    0.00 :   157b99: jle    157ae5 <__strncmp_avx2+0x3f5>
    0.00 :   157b9f: nop
    0.00 :   157ba0: cmp    $0x10,%eax
    0.00 :   157ba3: ja     157c10 <__strncmp_avx2+0x520>
    0.00 :   157ba5: vmovdqu (%rdi),%xmm0
    0.00 :   157ba9: vpcmpeqb (%rsi),%xmm0,%xmm1
    0.00 :   157bad: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157bb1: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157bb5: vpmovmskb %ymm1,%ecx
    0.00 :   157bb9: inc    %cx
    0.00 :   157bbc: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157bbe: mov    $0x10,%r9d
    0.00 :   157bc4: cmp    %r9,%rdx
    0.00 :   157bc7: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157bc9: sub    %eax,%r9d
    0.00 :   157bcc: vmovdqu (%rdi,%r9,1),%xmm0
    0.00 :   157bd2: vpcmpeqb (%rsi,%r9,1),%xmm0,%xmm1
    0.00 :   157bd8: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157bdc: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157be0: vpmovmskb %ymm1,%ecx
    0.00 :   157be4: inc    %cx
    0.00 :   157be7: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157bed: add    $0x10,%r9d
    0.00 :   157bf1: sub    %r9,%rdx
    0.00 :   157bf4: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157bf6: sub    $0xffffffffffffff80,%rdx
    0.00 :   157bfa: lea    -0x80(%rdi,%r9,1),%rdi
    0.00 :   157bff: lea    -0x80(%rsi,%r9,1),%rsi
    0.00 :   157c04: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157c09: xor    %eax,%eax
    0.00 :   157c0b: ret
    0.00 :   157c0c: nopl   0x0(%rax)
    0.00 :   157c10: cmp    $0x18,%eax
    0.00 :   157c13: ja     157c84 <__strncmp_avx2+0x594>
    0.00 :   157c15: vmovq  (%rdi),%xmm0
    0.00 :   157c19: vmovq  (%rsi),%xmm1
    0.00 :   157c1d: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157c21: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157c25: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157c29: vpmovmskb %ymm1,%ecx
    0.00 :   157c2d: inc    %cl
    0.00 :   157c2f: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157c35: cmp    $0x8,%rdx
    0.00 :   157c39: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157c3b: mov    $0x18,%r9d
    0.00 :   157c41: sub    %eax,%r9d
    0.00 :   157c44: vmovq  (%rdi,%r9,1),%xmm0
    0.00 :   157c4a: vmovq  (%rsi,%r9,1),%xmm1
    0.00 :   157c50: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157c54: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157c58: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157c5c: vpmovmskb %ymm1,%ecx
    0.00 :   157c60: inc    %cl
    0.00 :   157c62: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157c68: add    $0x8,%r9d
    0.00 :   157c6c: sub    %r9,%rdx
    0.00 :   157c6f: jbe    157c09 <__strncmp_avx2+0x519>
    0.00 :   157c71: sub    $0xffffffffffffff80,%rdx
    0.00 :   157c75: lea    -0x80(%rdi,%r9,1),%rdi
    0.00 :   157c7a: lea    -0x80(%rsi,%r9,1),%rsi
    0.00 :   157c7f: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157c84: cmp    $0x1c,%eax
    0.00 :   157c87: ja     157d00 <__strncmp_avx2+0x610>
    0.00 :   157c89: vmovd  (%rdi),%xmm0
    0.00 :   157c8d: vmovd  (%rsi),%xmm1
    0.00 :   157c91: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157c95: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157c99: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157c9d: vpmovmskb %ymm1,%ecx
    0.00 :   157ca1: sub    $0xf,%ecx
    0.00 :   157ca4: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157caa: cmp    $0x4,%rdx
    0.00 :   157cae: jbe    157cfa <__strncmp_avx2+0x60a>
    0.00 :   157cb0: mov    $0x1c,%r9d
    0.00 :   157cb6: sub    %eax,%r9d
    0.00 :   157cb9: vmovd  (%rdi,%r9,1),%xmm0
    0.00 :   157cbf: vmovd  (%rsi,%r9,1),%xmm1
    0.00 :   157cc5: vpcmpeqb %xmm0,%xmm15,%xmm2
    0.00 :   157cc9: vpcmpeqb %xmm1,%xmm0,%xmm1
    0.00 :   157ccd: vpandn %xmm1,%xmm2,%xmm1
    0.00 :   157cd1: vpmovmskb %ymm1,%ecx
    0.00 :   157cd5: sub    $0xf,%ecx
    0.00 :   157cd8: jne    157b62 <__strncmp_avx2+0x472>
    0.00 :   157cde: add    $0x4,%r9d
    0.00 :   157ce2: sub    %r9,%rdx
    0.00 :   157ce5: jbe    157cfa <__strncmp_avx2+0x60a>
    0.00 :   157ce7: sub    $0xffffffffffffff80,%rdx
    0.00 :   157ceb: lea    -0x80(%rdi,%r9,1),%rdi
    0.00 :   157cf0: lea    -0x80(%rsi,%r9,1),%rsi
    0.00 :   157cf5: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157cfa: xor    %eax,%eax
    0.00 :   157cfc: ret
    0.00 :   157cfd: nopl   (%rax)
    0.00 :   157d00: sub    %rdi,%rsi
    0.00 :   157d03: movzbl (%rdi),%eax
    0.00 :   157d06: movzbl (%rsi,%rdi,1),%ecx
    0.00 :   157d0a: sub    %ecx,%eax
    0.00 :   157d0c: jne    157d37 <__strncmp_avx2+0x647>
    0.00 :   157d0e: test   %ecx,%ecx
    0.00 :   157d10: je     157d34 <__strncmp_avx2+0x644>
    0.00 :   157d12: dec    %rdx
    0.00 :   157d15: je     157d34 <__strncmp_avx2+0x644>
    0.00 :   157d17: inc    %rdi
    0.00 :   157d1a: test   $0x1f,%edi
    0.00 :   157d20: jne    157d03 <__strncmp_avx2+0x613>
    0.00 :   157d22: lea    -0x80(%rdi,%rsi,1),%rsi
    0.00 :   157d27: add    $0xffffffffffffff80,%rdi
    0.00 :   157d2b: sub    $0xffffffffffffff80,%rdx
    0.00 :   157d2f: jmp    157813 <__strncmp_avx2+0x123>
    0.00 :   157d34: xor    %eax,%eax
    0.00 :   157d36: ret
    0.00 :   157d37: xor    %r8d,%eax
    0.00 :   157d3a: sub    %r8d,%eax
    0.00 :   157d3d: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   52.27 libc.so.6[2cd34]
   47.73 libc.so.6[2d091]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000002cd30 <__gconv_transform_internal_utf8>:
         : 6     __gconv_transform_internal_utf8():
    0.00 :   2cd30:  endbr64
   52.27 :   2cd34:  push   %r15 // libc.so.6[2cd34]
    0.00 :   2cd36:  push   %r14
    0.00 :   2cd38:  push   %r13
    0.00 :   2cd3a:  push   %r12
    0.00 :   2cd3c:  push   %rbp
    0.00 :   2cd3d:  mov    %rsi,%rbp
    0.00 :   2cd40:  push   %rbx
    0.00 :   2cd41:  mov    %rcx,%rbx
    0.00 :   2cd44:  sub    $0xb8,%rsp
    0.00 :   2cd4b:  mov    0x10(%rsi),%r11d
    0.00 :   2cd4f:  mov    0xf0(%rsp),%eax
    0.00 :   2cd56:  mov    %rdx,0x8(%rsp)
    0.00 :   2cd5b:  mov    %r8,0x18(%rsp)
    0.00 :   2cd60:  mov    %eax,0x78(%rsp)
    0.00 :   2cd64:  mov    0xf8(%rsp),%eax
    0.00 :   2cd6b:  mov    %r9,0x30(%rsp)
    0.00 :   2cd70:  mov    %eax,0x2c(%rsp)
    0.00 :   2cd74:  mov    %fs:0x28,%rax
    0.00 :   2cd7d:  mov    %rax,0xa8(%rsp)
    0.00 :   2cd85:  xor    %eax,%eax
    0.00 :   2cd87:  lea    0x68(%rdi),%rax
    0.00 :   2cd8b:  movq   $0x0,0x10(%rsp)
    0.00 :   2cd94:  mov    %rax,0x38(%rsp)
    0.00 :   2cd99:  lea    0x30(%rsi),%rax
    0.00 :   2cd9d:  mov    %rax,0x40(%rsp)
    0.00 :   2cda2:  test   $0x1,%r11b
    0.00 :   2cda6:  jne    2cdcd <__gconv_transform_internal_utf8+0x9d>
    0.00 :   2cda8:  mov    0x90(%rdi),%rax
    0.00 :   2cdaf:  cmpq   $0x0,0x68(%rdi)
    0.00 :   2cdb4:  mov    %rax,0x10(%rsp)
    0.00 :   2cdb9:  je     2cdcd <__gconv_transform_internal_utf8+0x9d>
    0.00 :   2cdbb:  ror    $0x11,%rax
    0.00 :   2cdbf:  xor    %fs:0x30,%rax
    0.00 :   2cdc8:  mov    %rax,0x10(%rsp)
    0.00 :   2cdcd:  mov    0x78(%rsp),%eax
    0.00 :   2cdd1:  test   %eax,%eax
    0.00 :   2cdd3:  jne    2d380 <__gconv_transform_internal_utf8+0x650>
    0.00 :   2cdd9:  mov    0x8(%rsp),%rax
    0.00 :   2cdde:  cmpq   $0x0,0x18(%rsp)
    0.00 :   2cde4:  mov    (%rax),%r12
    0.00 :   2cde7:  jne    2d446 <__gconv_transform_internal_utf8+0x716>
    0.00 :   2cded:  mov    0x0(%rbp),%r14
    0.00 :   2cdf1:  xor    %eax,%eax
    0.00 :   2cdf3:  mov    0x8(%rbp),%r13
    0.00 :   2cdf7:  lea    0x80(%rsp),%rdx
    0.00 :   2cdff:  cmpq   $0x0,0x30(%rsp)
    0.00 :   2ce05:  cmovne %rdx,%rax
    0.00 :   2ce09:  mov    0x2c(%rsp),%r15d
    0.00 :   2ce0e:  movq   $0x0,0x80(%rsp)
    0.00 :   2ce1a:  mov    %rax,0x48(%rsp)
    0.00 :   2ce1f:  test   %r15d,%r15d
    0.00 :   2ce22:  jne    2d088 <__gconv_transform_internal_utf8+0x358>
    0.00 :   2ce28:  mov    %rdi,0x50(%rsp)
    0.00 :   2ce2d:  mov    %r14,%r15
    0.00 :   2ce30:  mov    %r13,%r14
    0.00 :   2ce33:  mov    %r12,%r13
    0.00 :   2ce36:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   2ce40:  mov    %r13,0x90(%rsp)
    0.00 :   2ce48:  mov    %r15,%r12
    0.00 :   2ce4b:  mov    %r15,0x98(%rsp)
    0.00 :   2ce53:  cmp    %r13,%rbx
    0.00 :   2ce56:  je     2d482 <__gconv_transform_internal_utf8+0x752>
    0.00 :   2ce5c:  mov    %r13,%rax
    0.00 :   2ce5f:  mov    $0x4,%r10d
    0.00 :   2ce65:  lea    0x4(%rax),%rdx
    0.00 :   2ce69:  cmp    %rdx,%rbx
    0.00 :   2ce6c:  jb     2cf70 <__gconv_transform_internal_utf8+0x240>
    0.00 :   2ce72:  cmp    %r14,%r12
    0.00 :   2ce75:  jae    2cfd0 <__gconv_transform_internal_utf8+0x2a0>
    0.00 :   2ce7b:  mov    (%rax),%eax
    0.00 :   2ce7d:  cmp    $0x7f,%eax
    0.00 :   2ce80:  ja     2cfe8 <__gconv_transform_internal_utf8+0x2b8>
    0.00 :   2ce86:  lea    0x1(%r12),%rdx
    0.00 :   2ce8b:  mov    %rdx,0x98(%rsp)
    0.00 :   2ce93:  mov    %al,(%r12)
    0.00 :   2ce97:  mov    0x90(%rsp),%rax
    0.00 :   2ce9f:  mov    0x98(%rsp),%r12
    0.00 :   2cea7:  add    $0x4,%rax
    0.00 :   2ceab:  mov    %rax,0x90(%rsp)
    0.00 :   2ceb3:  cmp    %rax,%rbx
    0.00 :   2ceb6:  jne    2ce65 <__gconv_transform_internal_utf8+0x135>
    0.00 :   2ceb8:  nopl   0x0(%rax,%rax,1)
    0.00 :   2cec0:  mov    0x8(%rsp),%rsi
    0.00 :   2cec5:  cmpq   $0x0,0x18(%rsp)
    0.00 :   2cecb:  mov    %rax,(%rsi)
    0.00 :   2cece:  jne    2cf92 <__gconv_transform_internal_utf8+0x262>
    0.00 :   2ced4:  addl   $0x1,0x14(%rbp)
    0.00 :   2ced8:  testb  $0x1,0x10(%rbp)
    0.00 :   2cedc:  jne    2d1f0 <__gconv_transform_internal_utf8+0x4c0>
    0.00 :   2cee2:  cmp    %r12,%r15
    0.00 :   2cee5:  jae    2d270 <__gconv_transform_internal_utf8+0x540>
    0.00 :   2ceeb:  mov    0x10(%rsp),%rdi
    0.00 :   2cef0:  mov    0x0(%rbp),%rax
    0.00 :   2cef4:  mov    %r10d,0x20(%rsp)
    0.00 :   2cef9:  mov    %rax,0x88(%rsp)
    0.00 :   2cf01:  call   14f660 <_dl_mcount_wrapper_check>
    0.00 :   2cf06:  mov    0x2c(%rsp),%esi
    0.00 :   2cf0a:  xor    %r8d,%r8d
    0.00 :   2cf0d:  mov    %r12,%rcx
    0.00 :   2cf10:  lea    0x88(%rsp),%rdx
    0.00 :   2cf18:  push   %rsi
    0.00 :   2cf19:  push   $0x0
    0.00 :   2cf1b:  mov    0x40(%rsp),%r9
    0.00 :   2cf20:  mov    0x50(%rsp),%rsi
    0.00 :   2cf25:  mov    0x48(%rsp),%rdi
    0.00 :   2cf2a:  mov    0x20(%rsp),%rax
    0.00 :   2cf2f:  call   *%rax
    0.00 :   2cf31:  pop    %rsi
    0.00 :   2cf32:  pop    %rdi
    0.00 :   2cf33:  cmp    $0x4,%eax
    0.00 :   2cf36:  mov    0x20(%rsp),%r10d
    0.00 :   2cf3b:  je     2d070 <__gconv_transform_internal_utf8+0x340>
    0.00 :   2cf41:  mov    0x88(%rsp),%r10
    0.00 :   2cf49:  cmp    %r12,%r10
    0.00 :   2cf4c:  jne    2d280 <__gconv_transform_internal_utf8+0x550>
    0.00 :   2cf52:  test   %eax,%eax
    0.00 :   2cf54:  jne    2d534 <__gconv_transform_internal_utf8+0x804>
    0.00 :   2cf5a:  mov    0x8(%rsp),%rax
    0.00 :   2cf5f:  mov    0x0(%rbp),%r15
    0.00 :   2cf63:  mov    0x10(%rbp),%r11d
    0.00 :   2cf67:  mov    (%rax),%r13
    0.00 :   2cf6a:  jmp    2ce40 <__gconv_transform_internal_utf8+0x110>
    0.00 :   2cf6f:  nop
    0.00 :   2cf70:  mov    0x90(%rsp),%rax
    0.00 :   2cf78:  mov    0x8(%rsp),%rsi
    0.00 :   2cf7d:  mov    $0x7,%r10d
    0.00 :   2cf83:  cmpq   $0x0,0x18(%rsp)
    0.00 :   2cf89:  mov    %rax,(%rsi)
    0.00 :   2cf8c:  je     2ced4 <__gconv_transform_internal_utf8+0x1a4>
    0.00 :   2cf92:  mov    0x18(%rsp),%rax
    0.00 :   2cf97:  mov    %r10d,%r15d
    0.00 :   2cf9a:  mov    %r12,(%rax)
    0.00 :   2cf9d:  mov    0xa8(%rsp),%rax
    0.00 :   2cfa5:  sub    %fs:0x28,%rax
    0.00 :   2cfae:  jne    2da51 <__gconv_transform_internal_utf8+0xd21>
    0.00 :   2cfb4:  add    $0xb8,%rsp
    0.00 :   2cfbb:  mov    %r15d,%eax
    0.00 :   2cfbe:  pop    %rbx
    0.00 :   2cfbf:  pop    %rbp
    0.00 :   2cfc0:  pop    %r12
    0.00 :   2cfc2:  pop    %r13
    0.00 :   2cfc4:  pop    %r14
    0.00 :   2cfc6:  pop    %r15
    0.00 :   2cfc8:  ret
    0.00 :   2cfc9:  nopl   0x0(%rax)
    0.00 :   2cfd0:  mov    0x90(%rsp),%rax
    0.00 :   2cfd8:  mov    $0x5,%r10d
    0.00 :   2cfde:  jmp    2cec0 <__gconv_transform_internal_utf8+0x190>
    0.00 :   2cfe3:  nopl   0x0(%rax,%rax,1)
    0.00 :   2cfe8:  lea    -0xd800(%rax),%edx
    0.00 :   2cfee:  cmp    $0x7ff,%edx
    0.00 :   2cff4:  jbe    2d338 <__gconv_transform_internal_utf8+0x608>
    0.00 :   2cffa:  test   %eax,%eax
    0.00 :   2cffc:  js     2d338 <__gconv_transform_internal_utf8+0x608>
    0.00 :   2d002:  cmp    $0x7ff,%eax
    0.00 :   2d007:  jbe    2d490 <__gconv_transform_internal_utf8+0x760>
    0.00 :   2d00d:  cmp    $0xffff,%eax
    0.00 :   2d012:  jbe    2d520 <__gconv_transform_internal_utf8+0x7f0>
    0.00 :   2d018:  cmp    $0x1fffff,%eax
    0.00 :   2d01d:  jbe    2d52a <__gconv_transform_internal_utf8+0x7fa>
    0.00 :   2d023:  xor    %ecx,%ecx
    0.00 :   2d025:  cmp    $0x3ffffff,%eax
    0.00 :   2d02a:  seta   %cl
    0.00 :   2d02d:  add    $0x5,%rcx
    0.00 :   2d031:  lea    (%r12,%rcx,1),%rdx
    0.00 :   2d035:  cmp    %rdx,%r14
    0.00 :   2d038:  jb     2cfd0 <__gconv_transform_internal_utf8+0x2a0>
    0.00 :   2d03a:  mov    $0xffffff00,%edx
    0.00 :   2d03f:  sar    %cl,%edx
    0.00 :   2d041:  mov    %dl,(%r12)
    0.00 :   2d045:  add    %rcx,0x98(%rsp)
    0.00 :   2d04d:  mov    %eax,%edx
    0.00 :   2d04f:  sub    $0x1,%rcx
    0.00 :   2d053:  shr    $0x6,%eax
    0.00 :   2d056:  and    $0x3f,%edx
    0.00 :   2d059:  or     $0xffffff80,%edx
    0.00 :   2d05c:  mov    %dl,(%r12,%rcx,1)
    0.00 :   2d060:  cmp    $0x1,%rcx
    0.00 :   2d064:  jne    2d04d <__gconv_transform_internal_utf8+0x31d>
    0.00 :   2d066:  or     (%r12),%al
    0.00 :   2d06a:  jmp    2ce93 <__gconv_transform_internal_utf8+0x163>
    0.00 :   2d06f:  nop
    0.00 :   2d070:  mov    %r10d,%eax
    0.00 :   2d073:  cmp    $0x5,%r10d
    0.00 :   2d077:  jne    2cf52 <__gconv_transform_internal_utf8+0x222>
    0.00 :   2d07d:  jmp    2cf5a <__gconv_transform_internal_utf8+0x22a>
    0.00 :   2d082:  nopw   0x0(%rax,%rax,1)
    0.00 :   2d088:  mov    0x20(%rbp),%rax
    0.00 :   2d08c:  mov    %rax,0x20(%rsp)
   47.73 :   2d091:  mov    (%rax),%eax // libc.so.6[2d091]
    0.00 :   2d093:  mov    %eax,0x50(%rsp)
    0.00 :   2d097:  and    $0x7,%eax
    0.00 :   2d09a:  je     2ce28 <__gconv_transform_internal_utf8+0xf8>
    0.00 :   2d0a0:  cmpq   $0x0,0x18(%rsp)
    0.00 :   2d0a6:  jne    2da32 <__gconv_transform_internal_utf8+0xd02>
    0.00 :   2d0ac:  mov    %r12,0x90(%rsp)
    0.00 :   2d0b4:  mov    %r14,0x98(%rsp)
    0.00 :   2d0bc:  cmp    $0x4,%eax
    0.00 :   2d0bf:  jg     2d9d5 <__gconv_transform_internal_utf8+0xca5>
    0.00 :   2d0c5:  lea    0xa4(%rsp),%rcx
    0.00 :   2d0cd:  mov    0x20(%rsp),%rdx
    0.00 :   2d0d2:  xor    %r10d,%r10d
    0.00 :   2d0d5:  mov    %rcx,0x50(%rsp)
    0.00 :   2d0da:  movzbl 0x4(%rdx,%r10,1),%eax
    0.00 :   2d0e0:  mov    %al,(%rcx,%r10,1)
    0.00 :   2d0e4:  mov    (%rdx),%eax
    0.00 :   2d0e6:  add    $0x1,%r10
    0.00 :   2d0ea:  and    $0x7,%eax
    0.00 :   2d0ed:  cmp    %rax,%r10
    0.00 :   2d0f0:  jb     2d0da <__gconv_transform_internal_utf8+0x3aa>
    0.00 :   2d0f2:  mov    %r12,%rax
    0.00 :   2d0f5:  sub    %r10,%rax
    0.00 :   2d0f8:  add    $0x4,%rax
    0.00 :   2d0fc:  cmp    %rax,%rbx
    0.00 :   2d0ff:  jb     2d5e1 <__gconv_transform_internal_utf8+0x8b1>
    0.00 :   2d105:  lea    0x1(%r12),%rax
    0.00 :   2d10a:  lea    0xa3(%rsp),%rsi
    0.00 :   2d112:  cmp    %r13,%r14
    0.00 :   2d115:  jae    2d5c0 <__gconv_transform_internal_utf8+0x890>
    0.00 :   2d11b:  mov    %rax,0x90(%rsp)
    0.00 :   2d123:  movzbl -0x1(%rax),%edx
    0.00 :   2d127:  mov    %r10,%r8
    0.00 :   2d12a:  add    $0x1,%r10
    0.00 :   2d12e:  mov    %rax,%rcx
    0.00 :   2d131:  add    $0x1,%rax
    0.00 :   2d135:  mov    %dl,(%rsi,%r10,1)
    0.00 :   2d139:  cmp    $0x3,%r10
    0.00 :   2d13d:  ja     2d144 <__gconv_transform_internal_utf8+0x414>
    0.00 :   2d13f:  cmp    %rbx,%rcx
    0.00 :   2d142:  jb     2d11b <__gconv_transform_internal_utf8+0x3eb>
    0.00 :   2d144:  mov    0x50(%rsp),%rax
    0.00 :   2d149:  mov    %r8,0x58(%rsp)
    0.00 :   2d14e:  mov    %rax,0x90(%rsp)
    0.00 :   2d156:  mov    0xa4(%rsp),%eax
    0.00 :   2d15d:  cmp    $0x7f,%eax
    0.00 :   2d160:  ja     2d635 <__gconv_transform_internal_utf8+0x905>
    0.00 :   2d166:  lea    0x1(%r14),%rdx
    0.00 :   2d16a:  mov    %rdx,0x98(%rsp)
    0.00 :   2d172:  mov    %al,(%r14)
    0.00 :   2d175:  mov    0x90(%rsp),%rax
    0.00 :   2d17d:  mov    0x50(%rsp),%rsi
    0.00 :   2d182:  add    $0x4,%rax
    0.00 :   2d186:  mov    %rax,0x90(%rsp)
    0.00 :   2d18e:  cmp    %rsi,%rax
    0.00 :   2d191:  je     2d5d4 <__gconv_transform_internal_utf8+0x8a4>
    0.00 :   2d197:  mov    0x50(%rsp),%rsi
    0.00 :   2d19c:  sub    %rsi,%rax
    0.00 :   2d19f:  mov    0x20(%rsp),%rsi
    0.00 :   2d1a4:  mov    (%rsi),%edx
    0.00 :   2d1a6:  mov    %edx,%ecx
    0.00 :   2d1a8:  and    $0x7,%ecx
    0.00 :   2d1ab:  cmp    %rcx,%rax
    0.00 :   2d1ae:  jle    2da13 <__gconv_transform_internal_utf8+0xce3>
    0.00 :   2d1b4:  mov    0x8(%rsp),%rsi
    0.00 :   2d1b9:  sub    %rcx,%rax
    0.00 :   2d1bc:  and    $0xfffffff8,%edx
    0.00 :   2d1bf:  mov    0x98(%rsp),%r14
    0.00 :   2d1c7:  add    (%rsi),%rax
    0.00 :   2d1ca:  mov    %rax,(%rsi)
    0.00 :   2d1cd:  mov    %rax,%r12
    0.00 :   2d1d0:  mov    0x20(%rsp),%rax
    0.00 :   2d1d5:  mov    %edx,(%rax)
    0.00 :   2d1d7:  mov    %r14,%r15
    0.00 :   2d1da:  mov    %rdi,0x50(%rsp)
    0.00 :   2d1df:  mov    %r13,%r14
    0.00 :   2d1e2:  mov    0x10(%rbp),%r11d
    0.00 :   2d1e6:  mov    %r12,%r13
    0.00 :   2d1e9:  jmp    2ce40 <__gconv_transform_internal_utf8+0x110>
    0.00 :   2d1ee:  xchg   %ax,%ax
    0.00 :   2d1f0:  mov    0x30(%rsp),%rdi
    0.00 :   2d1f5:  mov    %r12,0x0(%rbp)
    0.00 :   2d1f9:  mov    %r10d,%r15d
    0.00 :   2d1fc:  mov    0x80(%rsp),%rax
    0.00 :   2d204:  add    %rax,(%rdi)
    0.00 :   2d207:  mov    0x2c(%rsp),%eax
    0.00 :   2d20b:  test   %eax,%eax
    0.00 :   2d20d:  je     2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d213:  cmp    $0x7,%r15d
    0.00 :   2d217:  jne    2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d21d:  mov    0x8(%rsp),%rax
    0.00 :   2d222:  mov    %rbx,%rdx
    0.00 :   2d225:  mov    (%rax),%rdi
    0.00 :   2d228:  sub    %rdi,%rdx
    0.00 :   2d22b:  cmp    $0x4,%rdx
    0.00 :   2d22f:  ja     2d9f4 <__gconv_transform_internal_utf8+0xcc4>
    0.00 :   2d235:  mov    0x20(%rbp),%rcx
    0.00 :   2d239:  xor    %eax,%eax
    0.00 :   2d23b:  test   %rdx,%rdx
    0.00 :   2d23e:  je     2d256 <__gconv_transform_internal_utf8+0x526>
    0.00 :   2d240:  movzbl (%rdi,%rax,1),%esi
    0.00 :   2d244:  mov    %sil,0x4(%rcx,%rax,1)
    0.00 :   2d249:  add    $0x1,%rax
    0.00 :   2d24d:  cmp    %rax,%rdx
    0.00 :   2d250:  jne    2d240 <__gconv_transform_internal_utf8+0x510>
    0.00 :   2d252:  mov    %edx,0x78(%rsp)
    0.00 :   2d256:  mov    0x8(%rsp),%rax
    0.00 :   2d25b:  mov    0x78(%rsp),%edi
    0.00 :   2d25f:  mov    %rbx,(%rax)
    0.00 :   2d262:  mov    (%rcx),%eax
    0.00 :   2d264:  and    $0xfffffff8,%eax
    0.00 :   2d267:  or     %edi,%eax
    0.00 :   2d269:  mov    %eax,(%rcx)
    0.00 :   2d26b:  jmp    2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d270:  mov    %r10d,%eax
    0.00 :   2d273:  jmp    2cf52 <__gconv_transform_internal_utf8+0x222>
    0.00 :   2d278:  nopl   0x0(%rax,%rax,1)
    0.00 :   2d280:  mov    0x8(%rsp),%rdi
    0.00 :   2d285:  mov    0x10(%rbp),%r12d
    0.00 :   2d289:  mov    %r13,0x90(%rsp)
    0.00 :   2d291:  mov    %r15,0x98(%rsp)
    0.00 :   2d299:  mov    %r13,(%rdi)
    0.00 :   2d29c:  cmp    %r13,%rbx
    0.00 :   2d29f:  je     2d70f <__gconv_transform_internal_utf8+0x9df>
    0.00 :   2d2a5:  mov    %r15,%rsi
    0.00 :   2d2a8:  mov    %eax,%r11d
    0.00 :   2d2ab:  lea    0x4(%r13),%rax
    0.00 :   2d2af:  cmp    %rax,%rbx
    0.00 :   2d2b2:  jb     2d409 <__gconv_transform_internal_utf8+0x6d9>
    0.00 :   2d2b8:  cmp    %r10,%rsi
    0.00 :   2d2bb:  jae    2d453 <__gconv_transform_internal_utf8+0x723>
    0.00 :   2d2c1:  mov    0x0(%r13),%eax
    0.00 :   2d2c5:  cmp    $0x7f,%eax
    0.00 :   2d2c8:  ja     2d49a <__gconv_transform_internal_utf8+0x76a>
    0.00 :   2d2ce:  lea    0x1(%rsi),%rdx
    0.00 :   2d2d2:  mov    %rdx,0x98(%rsp)
    0.00 :   2d2da:  mov    %al,(%rsi)
    0.00 :   2d2dc:  mov    0x90(%rsp),%rax
    0.00 :   2d2e4:  mov    0x98(%rsp),%rsi
    0.00 :   2d2ec:  lea    0x4(%rax),%r13
    0.00 :   2d2f0:  mov    %r13,0x90(%rsp)
    0.00 :   2d2f8:  cmp    %r13,%rbx
    0.00 :   2d2fb:  jne    2d2ab <__gconv_transform_internal_utf8+0x57b>
    0.00 :   2d2fd:  mov    0x8(%rsp),%rax
    0.00 :   2d302:  mov    %rbx,(%rax)
    0.00 :   2d305:  cmp    %rsi,0x88(%rsp)
    0.00 :   2d30d:  jne    2d427 <__gconv_transform_internal_utf8+0x6f7>
    0.00 :   2d313:  lea    0x16df66(%rip),%rcx        # 19b280 <banner+0x340>
    0.00 :   2d31a:  mov    $0x2ea,%edx
    0.00 :   2d31f:  lea    0x169805(%rip),%rsi        # 196b2b <gconv_module_ext+0x14>
    0.00 :   2d326:  lea    0x16e443(%rip),%rdi        # 19b770 <gconv_conf_filename+0x38>
    0.00 :   2d32d:  call   35610 <__assert_fail>
    0.00 :   2d332:  nopw   0x0(%rax,%rax,1)
    0.00 :   2d338:  cmpq   $0x0,0x48(%rsp)
    0.00 :   2d33e:  je     2d6fc <__gconv_transform_internal_utf8+0x9cc>
    0.00 :   2d344:  testb  $0x8,0x10(%rbp)
    0.00 :   2d348:  jne    2d547 <__gconv_transform_internal_utf8+0x817>
    0.00 :   2d34e:  mov    0x90(%rsp),%rax
    0.00 :   2d356:  test   $0x2,%r11b
    0.00 :   2d35a:  je     2d53c <__gconv_transform_internal_utf8+0x80c>
    0.00 :   2d360:  mov    0x48(%rsp),%rdi
    0.00 :   2d365:  add    $0x4,%rax
    0.00 :   2d369:  mov    $0x6,%r10d
    0.00 :   2d36f:  mov    %rax,0x90(%rsp)
    0.00 :   2d377:  addq   $0x1,(%rdi)
    0.00 :   2d37b:  jmp    2ceb3 <__gconv_transform_internal_utf8+0x183>
    0.00 :   2d380:  cmpq   $0x0,0x18(%rsp)
    0.00 :   2d386:  jne    2d98d <__gconv_transform_internal_utf8+0xc5d>
    0.00 :   2d38c:  mov    0x20(%rbp),%rax
    0.00 :   2d390:  xor    %r15d,%r15d
    0.00 :   2d393:  movq   $0x0,(%rax)
    0.00 :   2d39a:  testb  $0x1,0x10(%rbp)
    0.00 :   2d39e:  jne    2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d3a4:  mov    0x10(%rsp),%rdi
    0.00 :   2d3a9:  call   14f660 <_dl_mcount_wrapper_check>
    0.00 :   2d3ae:  mov    0xa8(%rsp),%rax
    0.00 :   2d3b6:  sub    %fs:0x28,%rax
    0.00 :   2d3bf:  jne    2da51 <__gconv_transform_internal_utf8+0xd21>
    0.00 :   2d3c5:  mov    0x2c(%rsp),%eax
    0.00 :   2d3c9:  mov    0x30(%rsp),%r9
    0.00 :   2d3ce:  xor    %r8d,%r8d
    0.00 :   2d3d1:  xor    %ecx,%ecx
    0.00 :   2d3d3:  mov    0x40(%rsp),%rsi
    0.00 :   2d3d8:  mov    0x38(%rsp),%rdi
    0.00 :   2d3dd:  xor    %edx,%edx
    0.00 :   2d3df:  mov    %eax,0xf8(%rsp)
    0.00 :   2d3e6:  mov    0x78(%rsp),%eax
    0.00 :   2d3ea:  mov    %eax,0xf0(%rsp)
    0.00 :   2d3f1:  mov    0x10(%rsp),%rax
    0.00 :   2d3f6:  add    $0xb8,%rsp
    0.00 :   2d3fd:  pop    %rbx
    0.00 :   2d3fe:  pop    %rbp
    0.00 :   2d3ff:  pop    %r12
    0.00 :   2d401:  pop    %r13
    0.00 :   2d403:  pop    %r14
    0.00 :   2d405:  pop    %r15
    0.00 :   2d407:  jmp    *%rax
    0.00 :   2d409:  mov    0x90(%rsp),%rdx
    0.00 :   2d411:  mov    0x8(%rsp),%rax
    0.00 :   2d416:  mov    %rdx,(%rax)
    0.00 :   2d419:  cmp    %rsi,0x88(%rsp)
    0.00 :   2d421:  je     2d313 <__gconv_transform_internal_utf8+0x5e3>
    0.00 :   2d427:  lea    0x16de52(%rip),%rcx        # 19b280 <banner+0x340>
    0.00 :   2d42e:  mov    $0x2e9,%edx
    0.00 :   2d433:  lea    0x1696f1(%rip),%rsi        # 196b2b <gconv_module_ext+0x14>
    0.00 :   2d43a:  lea    0x169712(%rip),%rdi        # 196b53 <gconv_module_ext+0x3c>
    0.00 :   2d441:  call   35610 <__assert_fail>
    0.00 :   2d446:  mov    0x18(%rsp),%rax
    0.00 :   2d44b:  mov    (%rax),%r14
    0.00 :   2d44e:  jmp    2cdf1 <__gconv_transform_internal_utf8+0xc1>
    0.00 :   2d453:  mov    0x90(%rsp),%rdx
    0.00 :   2d45b:  mov    0x8(%rsp),%rdi
    0.00 :   2d460:  mov    %r11d,%eax
    0.00 :   2d463:  mov    %rdx,(%rdi)
    0.00 :   2d466:  cmp    %rsi,0x88(%rsp)
    0.00 :   2d46e:  jne    2d427 <__gconv_transform_internal_utf8+0x6f7>
    0.00 :   2d470:  cmp    %r15,%rsi
    0.00 :   2d473:  jne    2cf52 <__gconv_transform_internal_utf8+0x222>
    0.00 :   2d479:  subl   $0x1,0x14(%rbp)
    0.00 :   2d47d:  jmp    2cf52 <__gconv_transform_internal_utf8+0x222>
    0.00 :   2d482:  mov    %rbx,%rax
    0.00 :   2d485:  mov    $0x4,%r10d
    0.00 :   2d48b:  jmp    2cec0 <__gconv_transform_internal_utf8+0x190>
    0.00 :   2d490:  mov    $0x2,%ecx
    0.00 :   2d495:  jmp    2d031 <__gconv_transform_internal_utf8+0x301>
    0.00 :   2d49a:  lea    -0xd800(%rax),%edx
    0.00 :   2d4a0:  cmp    $0x7ff,%edx
    0.00 :   2d4a6:  jbe    2d6be <__gconv_transform_internal_utf8+0x98e>
    0.00 :   2d4ac:  test   %eax,%eax
    0.00 :   2d4ae:  js     2d6be <__gconv_transform_internal_utf8+0x98e>
    0.00 :   2d4b4:  cmp    $0x7ff,%eax
    0.00 :   2d4b9:  jbe    2d734 <__gconv_transform_internal_utf8+0xa04>
    0.00 :   2d4bf:  cmp    $0xffff,%eax
    0.00 :   2d4c4:  jbe    2d720 <__gconv_transform_internal_utf8+0x9f0>
    0.00 :   2d4ca:  cmp    $0x1fffff,%eax
    0.00 :   2d4cf:  jbe    2d72a <__gconv_transform_internal_utf8+0x9fa>
    0.00 :   2d4d5:  xor    %ecx,%ecx
    0.00 :   2d4d7:  cmp    $0x3ffffff,%eax
    0.00 :   2d4dc:  seta   %cl
    0.00 :   2d4df:  add    $0x5,%rcx
    0.00 :   2d4e3:  lea    (%rsi,%rcx,1),%rdx
    0.00 :   2d4e7:  cmp    %rdx,%r10
    0.00 :   2d4ea:  jb     2d453 <__gconv_transform_internal_utf8+0x723>
    0.00 :   2d4f0:  mov    $0xffffff00,%edx
    0.00 :   2d4f5:  sar    %cl,%edx
    0.00 :   2d4f7:  mov    %dl,(%rsi)
    0.00 :   2d4f9:  add    %rcx,0x98(%rsp)
    0.00 :   2d501:  mov    %eax,%edx
    0.00 :   2d503:  sub    $0x1,%rcx
    0.00 :   2d507:  shr    $0x6,%eax
    0.00 :   2d50a:  and    $0x3f,%edx
    0.00 :   2d50d:  or     $0xffffff80,%edx
    0.00 :   2d510:  mov    %dl,(%rsi,%rcx,1)
    0.00 :   2d513:  cmp    $0x1,%rcx
    0.00 :   2d517:  jne    2d501 <__gconv_transform_internal_utf8+0x7d1>
    0.00 :   2d519:  or     (%rsi),%al
    0.00 :   2d51b:  jmp    2d2da <__gconv_transform_internal_utf8+0x5aa>
    0.00 :   2d520:  mov    $0x3,%ecx
    0.00 :   2d525:  jmp    2d031 <__gconv_transform_internal_utf8+0x301>
    0.00 :   2d52a:  mov    $0x4,%ecx
    0.00 :   2d52f:  jmp    2d031 <__gconv_transform_internal_utf8+0x301>
    0.00 :   2d534:  mov    %eax,%r15d
    0.00 :   2d537:  jmp    2d207 <__gconv_transform_internal_utf8+0x4d7>
    0.00 :   2d53c:  mov    $0x6,%r10d
    0.00 :   2d542:  jmp    2cec0 <__gconv_transform_internal_utf8+0x190>
    0.00 :   2d547:  mov    0x8(%rsp),%rax
    0.00 :   2d54c:  mov    %r11d,0x20(%rsp)
    0.00 :   2d551:  mov    %rbx,%r8
    0.00 :   2d554:  mov    %rbp,%rsi
    0.00 :   2d557:  lea    0x90(%rsp),%rcx
    0.00 :   2d55f:  sub    $0x8,%rsp
    0.00 :   2d563:  mov    (%rax),%rdx
    0.00 :   2d566:  push   0x50(%rsp)
    0.00 :   2d56a:  mov    0x60(%rsp),%rdi
    0.00 :   2d56f:  lea    0xa8(%rsp),%r9
    0.00 :   2d577:  call   310b0 <__gconv_transliterate>
    0.00 :   2d57c:  pop    %r8
    0.00 :   2d57e:  pop    %r9
    0.00 :   2d580:  cmp    $0x6,%eax
    0.00 :   2d583:  mov    0x98(%rsp),%r12
    0.00 :   2d58b:  mov    0x20(%rsp),%r11d
    0.00 :   2d590:  mov    %eax,%r10d
    0.00 :   2d593:  je     2d34e <__gconv_transform_internal_utf8+0x61e>
    0.00 :   2d599:  mov    0x90(%rsp),%rax
    0.00 :   2d5a1:  mov    0x98(%rsp),%r12
    0.00 :   2d5a9:  cmp    $0x5,%r10d
    0.00 :   2d5ad:  jne    2ceb3 <__gconv_transform_internal_utf8+0x183>
    0.00 :   2d5b3:  jmp    2cec0 <__gconv_transform_internal_utf8+0x190>
    0.00 :   2d5b8:  nopl   0x0(%rax,%rax,1)
    0.00 :   2d5c0:  mov    $0x5,%r15d
    0.00 :   2d5c6:  jmp    2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d5cb:  test   %r15d,%r15d
    0.00 :   2d5ce:  jne    2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d5d4:  mov    0x8(%rsp),%rax
    0.00 :   2d5d9:  mov    (%rax),%r12
    0.00 :   2d5dc:  jmp    2d1d7 <__gconv_transform_internal_utf8+0x4a7>
    0.00 :   2d5e1:  mov    0x8(%rsp),%rax
    0.00 :   2d5e6:  mov    %rbx,(%rax)
    0.00 :   2d5e9:  mov    %rbx,%rax
    0.00 :   2d5ec:  sub    %r12,%rax
    0.00 :   2d5ef:  add    %r10,%rax
    0.00 :   2d5f2:  cmp    $0x4,%rax
    0.00 :   2d5f6:  ja     2d9b6 <__gconv_transform_internal_utf8+0xc86>
    0.00 :   2d5fc:  mov    0x20(%rsp),%rcx
    0.00 :   2d601:  add    $0x1,%r12
    0.00 :   2d605:  cmp    %rax,%r10
    0.00 :   2d608:  jae    2d62a <__gconv_transform_internal_utf8+0x8fa>
    0.00 :   2d60a:  mov    %r12,0x90(%rsp)
    0.00 :   2d612:  movzbl -0x1(%r12),%edx
    0.00 :   2d618:  add    $0x1,%r12
    0.00 :   2d61c:  mov    %dl,0x4(%rcx,%r10,1)
    0.00 :   2d621:  add    $0x1,%r10
    0.00 :   2d625:  cmp    %r10,%rax
    0.00 :   2d628:  jne    2d60a <__gconv_transform_internal_utf8+0x8da>
    0.00 :   2d62a:  mov    $0x7,%r15d
    0.00 :   2d630:  jmp    2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d635:  lea    -0xd800(%rax),%edx
    0.00 :   2d63b:  cmp    $0x7ff,%edx
    0.00 :   2d641:  jbe    2d7d0 <__gconv_transform_internal_utf8+0xaa0>
    0.00 :   2d647:  test   %eax,%eax
    0.00 :   2d649:  js     2d7d0 <__gconv_transform_internal_utf8+0xaa0>
    0.00 :   2d64f:  cmp    $0x7ff,%eax
    0.00 :   2d654:  jbe    2d9ac <__gconv_transform_internal_utf8+0xc7c>
    0.00 :   2d65a:  cmp    $0xffff,%eax
    0.00 :   2d65f:  jbe    2d914 <__gconv_transform_internal_utf8+0xbe4>
    0.00 :   2d665:  cmp    $0x1fffff,%eax
    0.00 :   2d66a:  jbe    2d90a <__gconv_transform_internal_utf8+0xbda>
    0.00 :   2d670:  xor    %ecx,%ecx
    0.00 :   2d672:  cmp    $0x3ffffff,%eax
    0.00 :   2d677:  seta   %cl
    0.00 :   2d67a:  add    $0x5,%rcx
    0.00 :   2d67e:  lea    (%r14,%rcx,1),%rdx
    0.00 :   2d682:  cmp    %rdx,%r13
    0.00 :   2d685:  jb     2d5c0 <__gconv_transform_internal_utf8+0x890>
    0.00 :   2d68b:  mov    $0xffffff00,%edx
    0.00 :   2d690:  sar    %cl,%edx
    0.00 :   2d692:  mov    %dl,(%r14)
    0.00 :   2d695:  add    %rcx,0x98(%rsp)
    0.00 :   2d69d:  mov    %eax,%edx
    0.00 :   2d69f:  sub    $0x1,%rcx
    0.00 :   2d6a3:  shr    $0x6,%eax
    0.00 :   2d6a6:  and    $0x3f,%edx
    0.00 :   2d6a9:  or     $0xffffff80,%edx
    0.00 :   2d6ac:  mov    %dl,(%r14,%rcx,1)
    0.00 :   2d6b0:  cmp    $0x1,%rcx
    0.00 :   2d6b4:  jne    2d69d <__gconv_transform_internal_utf8+0x96d>
    0.00 :   2d6b6:  or     (%r14),%al
    0.00 :   2d6b9:  jmp    2d172 <__gconv_transform_internal_utf8+0x442>
    0.00 :   2d6be:  cmpq   $0x0,0x48(%rsp)
    0.00 :   2d6c4:  je     2d409 <__gconv_transform_internal_utf8+0x6d9>
    0.00 :   2d6ca:  testb  $0x8,0x10(%rbp)
    0.00 :   2d6ce:  jne    2d73e <__gconv_transform_internal_utf8+0xa0e>
    0.00 :   2d6d0:  mov    0x90(%rsp),%rdx
    0.00 :   2d6d8:  test   $0x2,%r12b
    0.00 :   2d6dc:  je     2d411 <__gconv_transform_internal_utf8+0x6e1>
    0.00 :   2d6e2:  mov    0x48(%rsp),%rax
    0.00 :   2d6e7:  lea    0x4(%rdx),%r13
    0.00 :   2d6eb:  mov    %r13,0x90(%rsp)
    0.00 :   2d6f3:  addq   $0x1,(%rax)
    0.00 :   2d6f7:  jmp    2d2f8 <__gconv_transform_internal_utf8+0x5c8>
    0.00 :   2d6fc:  mov    0x90(%rsp),%rax
    0.00 :   2d704:  mov    $0x6,%r10d
    0.00 :   2d70a:  jmp    2cec0 <__gconv_transform_internal_utf8+0x190>
    0.00 :   2d70f:  cmp    %r15,%r10
    0.00 :   2d712:  je     2d313 <__gconv_transform_internal_utf8+0x5e3>
    0.00 :   2d718:  jmp    2d427 <__gconv_transform_internal_utf8+0x6f7>
    0.00 :   2d71d:  nopl   (%rax)
    0.00 :   2d720:  mov    $0x3,%ecx
    0.00 :   2d725:  jmp    2d4e3 <__gconv_transform_internal_utf8+0x7b3>
    0.00 :   2d72a:  mov    $0x4,%ecx
    0.00 :   2d72f:  jmp    2d4e3 <__gconv_transform_internal_utf8+0x7b3>
    0.00 :   2d734:  mov    $0x2,%ecx
    0.00 :   2d739:  jmp    2d4e3 <__gconv_transform_internal_utf8+0x7b3>
    0.00 :   2d73e:  mov    0x8(%rsp),%rax
    0.00 :   2d743:  mov    %r11d,0x58(%rsp)
    0.00 :   2d748:  mov    %rbp,%rsi
    0.00 :   2d74b:  mov    %rbx,%r8
    0.00 :   2d74e:  mov    %r10,0x20(%rsp)
    0.00 :   2d753:  lea    0x90(%rsp),%rcx
    0.00 :   2d75b:  sub    $0x8,%rsp
    0.00 :   2d75f:  mov    (%rax),%rdx
    0.00 :   2d762:  push   0x50(%rsp)
    0.00 :   2d766:  mov    0x60(%rsp),%rdi
    0.00 :   2d76b:  lea    0xa8(%rsp),%r9
    0.00 :   2d773:  call   310b0 <__gconv_transliterate>
    0.00 :   2d778:  pop    %rdx
    0.00 :   2d779:  pop    %rcx
    0.00 :   2d77a:  cmp    $0x6,%eax
    0.00 :   2d77d:  mov    0x20(%rsp),%r10
    0.00 :   2d782:  mov    0x58(%rsp),%r11d
    0.00 :   2d787:  mov    0x98(%rsp),%rsi
    0.00 :   2d78f:  je     2d6d0 <__gconv_transform_internal_utf8+0x9a0>
    0.00 :   2d795:  mov    0x90(%rsp),%rdx
    0.00 :   2d79d:  mov    0x98(%rsp),%rsi
    0.00 :   2d7a5:  mov    %rdx,%r13
    0.00 :   2d7a8:  cmp    $0x5,%eax
    0.00 :   2d7ab:  jne    2d2f8 <__gconv_transform_internal_utf8+0x5c8>
    0.00 :   2d7b1:  mov    0x8(%rsp),%rdi
    0.00 :   2d7b6:  mov    %r11d,%eax
    0.00 :   2d7b9:  mov    %rdx,(%rdi)
    0.00 :   2d7bc:  cmp    %rsi,0x88(%rsp)
    0.00 :   2d7c4:  je     2d470 <__gconv_transform_internal_utf8+0x740>
    0.00 :   2d7ca:  jmp    2d427 <__gconv_transform_internal_utf8+0x6f7>
    0.00 :   2d7cf:  nop
    0.00 :   2d7d0:  cmpq   $0x0,0x48(%rsp)
    0.00 :   2d7d6:  je     2d80f <__gconv_transform_internal_utf8+0xadf>
    0.00 :   2d7d8:  test   $0x8,%r11b
    0.00 :   2d7dc:  jne    2d81a <__gconv_transform_internal_utf8+0xaea>
    0.00 :   2d7de:  and    $0x2,%r11b
    0.00 :   2d7e2:  je     2d80f <__gconv_transform_internal_utf8+0xadf>
    0.00 :   2d7e4:  mov    0x90(%rsp),%rdx
    0.00 :   2d7ec:  mov    0x48(%rsp),%rax
    0.00 :   2d7f1:  addq   $0x1,(%rax)
    0.00 :   2d7f5:  lea    0x4(%rdx),%rax
    0.00 :   2d7f9:  mov    %rax,0x90(%rsp)
    0.00 :   2d801:  mov    0x50(%rsp),%rsi
    0.00 :   2d806:  cmp    %rsi,%rax
    0.00 :   2d809:  jne    2d197 <__gconv_transform_internal_utf8+0x467>
    0.00 :   2d80f:  mov    $0x6,%r15d
    0.00 :   2d815:  jmp    2cf9d <__gconv_transform_internal_utf8+0x26d>
    0.00 :   2d81a:  mov    0x50(%rsp),%rax
    0.00 :   2d81f:  mov    %r10,0x70(%rsp)
    0.00 :   2d824:  mov    %r12,%rdx
    0.00 :   2d827:  mov    %rbp,%rsi
    0.00 :   2d82a:  mov    %r11d,0x7c(%rsp)
    0.00 :   2d82f:  lea    0x90(%rsp),%rcx
    0.00 :   2d837:  lea    (%rax,%r10,1),%r8
    0.00 :   2d83b:  push   %r10
    0.00 :   2d83d:  push   0x50(%rsp)
    0.00 :   2d841:  lea    0xa8(%rsp),%r9
    0.00 :   2d849:  mov    %r8,0x78(%rsp)
    0.00 :   2d84e:  mov    %rdi,0x70(%rsp)
    0.00 :   2d853:  call   310b0 <__gconv_transliterate>
    0.00 :   2d858:  pop    %r11
    0.00 :   2d85a:  pop    %r12
    0.00 :   2d85c:  mov    %eax,%r15d
    0.00 :   2d85f:  mov    0x60(%rsp),%rdi
    0.00 :   2d864:  mov    0x68(%rsp),%r8
    0.00 :   2d869:  cmp    $0x6,%r15d
    0.00 :   2d86d:  mov    0x70(%rsp),%r10
    0.00 :   2d872:  mov    0x7c(%rsp),%r11d
    0.00 :   2d877:  mov    0x90(%rsp),%rax
    0.00 :   2d87f:  je     2d97b <__gconv_transform_internal_utf8+0xc4b>
    0.00 :   2d885:  mov    0x50(%rsp),%rsi
    0.00 :   2d88a:  cmp    %rsi,%rax
    0.00 :   2d88d:  jne    2d197 <__gconv_transform_internal_utf8+0x467>
    0.00 :   2d893:  cmp    $0x7,%r15d
    0.00 :   2d897:  jne    2d5cb <__gconv_transform_internal_utf8+0x89b>
    0.00 :   2d89d:  lea    0xa8(%rsp),%rax
    0.00 :   2d8a5:  cmp    %rax,%r8
    0.00 :   2d8a8:  je     2d95c <__gconv_transform_internal_utf8+0xc2c>
    0.00 :   2d8ae:  mov    0x20(%rsp),%rax
    0.00 :   2d8b3:  mov    0x8(%rsp),%rdi
    0.00 :   2d8b8:  mov    %r10,%rdx
    0.00 :   2d8bb:  mov    (%rax),%eax
    0.00 :   2d8bd:  mov    %eax,%ecx
    0.00 :   2d8bf:  and    $0xfffffff8,%eax
    0.00 :   2d8c2:  and    $0x7,%ecx
    0.00 :   2d8c5:  sub    %rcx,%rdx
    0.00 :   2d8c8:  add    %rdx,(%rdi)
    0.00 :   2d8cb:  movslq %eax,%rdx
    0.00 :   2d8ce:  cmp    %rdx,%r10
    0.00 :   2d8d1:  jle    2d93d <__gconv_transform_internal_utf8+0xc0d>
    0.00 :   2d8d3:  cmp    $0x4,%r10
    0.00 :   2d8d7:  ja     2d91e <__gconv_transform_internal_utf8+0xbee>
    0.00 :   2d8d9:  mov    0x20(%rsp),%rdi
    0.00 :   2d8de:  or     %r10d,%eax
    0.00 :   2d8e1:  mov    0x50(%rsp),%rcx
    0.00 :   2d8e6:  mov    %eax,(%rdi)
    0.00 :   2d8e8:  xor    %eax,%eax
    0.00 :   2d8ea:  movzbl (%rcx,%rax,1),%edx
    0.00 :   2d8ee:  mov    0x20(%rsp),%rdi
    0.00 :   2d8f3:  mov    %dl,0x4(%rdi,%rax,1)
    0.00 :   2d8f7:  mov    %rax,%rdx
    0.00 :   2d8fa:  add    $0x1,%rax
    0.00 :   2d8fe:  cmp    %rdx,0x58(%rsp)
    0.00 :   2d903:  jne    2d8ea <__gconv_transform_internal_utf8+0xbba>
    0.00 :   2d905:  jmp    2d62a <__gconv_transform_internal_utf8+0x8fa>
    0.00 :   2d90a:  mov    $0x4,%ecx
    0.00 :   2d90f:  jmp    2d67e <__gconv_transform_internal_utf8+0x94e>
    0.00 :   2d914:  mov    $0x3,%ecx
    0.00 :   2d919:  jmp    2d67e <__gconv_transform_internal_utf8+0x94e>
    0.00 :   2d91e:  lea    0x17243b(%rip),%rcx        # 19fd60 <default_gconv_path+0xa0>
    0.00 :   2d925:  mov    $0x1f3,%edx
    0.00 :   2d92a:  lea    0x169258(%rip),%rsi        # 196b89 <gconv_module_ext+0x72>
    0.00 :   2d931:  lea    0x16df68(%rip),%rdi        # 19b8a0 <gconv_conf_filename+0x168>
    0.00 :   2d938:  call   35610 <__assert_fail>
    0.00 :   2d93d:  lea    0x17241c(%rip),%rcx        # 19fd60 <default_gconv_path+0xa0>
    0.00 :   2d944:  mov    $0x1f2,%edx
    0.00 :   2d949:  lea    0x169239(%rip),%rsi        # 196b89 <gconv_module_ext+0x72>
    0.00 :   2d950:  lea    0x16df21(%rip),%rdi        # 19b878 <gconv_conf_filename+0x140>
    0.00 :   2d957:  call   35610 <__assert_fail>
    0.00 :   2d95c:  lea    0x1723fd(%rip),%rcx        # 19fd60 <default_gconv_path+0xa0>
    0.00 :   2d963:  mov    $0x1e8,%edx
    0.00 :   2d968:  lea    0x16921a(%rip),%rsi        # 196b89 <gconv_module_ext+0x72>
    0.00 :   2d96f:  lea    0x16deda(%rip),%rdi        # 19b850 <gconv_conf_filename+0x118>
    0.00 :   2d976:  call   35610 <__assert_fail>
    0.00 :   2d97b:  and    $0x2,%r11b
    0.00 :   2d97f:  mov    %rax,%rdx
    0.00 :   2d982:  je     2d801 <__gconv_transform_internal_utf8+0xad1>
    0.00 :   2d988:  jmp    2d7ec <__gconv_transform_internal_utf8+0xabc>
    0.00 :   2d98d:  lea    0x16d8ec(%rip),%rcx        # 19b280 <banner+0x340>
    0.00 :   2d994:  mov    $0x1a3,%edx
    0.00 :   2d999:  lea    0x16918b(%rip),%rsi        # 196b2b <gconv_module_ext+0x14>
    0.00 :   2d9a0:  lea    0x169198(%rip),%rdi        # 196b3f <gconv_module_ext+0x28>
    0.00 :   2d9a7:  call   35610 <__assert_fail>
    0.00 :   2d9ac:  mov    $0x2,%ecx
    0.00 :   2d9b1:  jmp    2d67e <__gconv_transform_internal_utf8+0x94e>
    0.00 :   2d9b6:  lea    0x1723a3(%rip),%rcx        # 19fd60 <default_gconv_path+0xa0>
    0.00 :   2d9bd:  mov    $0x1a7,%edx
    0.00 :   2d9c2:  lea    0x1691c0(%rip),%rsi        # 196b89 <gconv_module_ext+0x72>
    0.00 :   2d9c9:  lea    0x16de28(%rip),%rdi        # 19b7f8 <gconv_conf_filename+0xc0>
    0.00 :   2d9d0:  call   35610 <__assert_fail>
    0.00 :   2d9d5:  lea    0x172384(%rip),%rcx        # 19fd60 <default_gconv_path+0xa0>
    0.00 :   2d9dc:  mov    $0x18a,%edx
    0.00 :   2d9e1:  lea    0x1691a1(%rip),%rsi        # 196b89 <gconv_module_ext+0x72>
    0.00 :   2d9e8:  lea    0x16ddd9(%rip),%rdi        # 19b7c8 <gconv_conf_filename+0x90>
    0.00 :   2d9ef:  call   35610 <__assert_fail>
    0.00 :   2d9f4:  lea    0x16d885(%rip),%rcx        # 19b280 <banner+0x340>
    0.00 :   2d9fb:  mov    $0x31e,%edx
    0.00 :   2da00:  lea    0x169124(%rip),%rsi        # 196b2b <gconv_module_ext+0x14>
    0.00 :   2da07:  lea    0x16dd82(%rip),%rdi        # 19b790 <gconv_conf_filename+0x58>
    0.00 :   2da0e:  call   35610 <__assert_fail>
    0.00 :   2da13:  lea    0x172346(%rip),%rcx        # 19fd60 <default_gconv_path+0xa0>
    0.00 :   2da1a:  mov    $0x1d6,%edx
    0.00 :   2da1f:  lea    0x169163(%rip),%rsi        # 196b89 <gconv_module_ext+0x72>
    0.00 :   2da26:  lea    0x16ddfb(%rip),%rdi        # 19b828 <gconv_conf_filename+0xf0>
    0.00 :   2da2d:  call   35610 <__assert_fail>
    0.00 :   2da32:  lea    0x16d847(%rip),%rcx        # 19b280 <banner+0x340>
    0.00 :   2da39:  mov    $0x233,%edx
    0.00 :   2da3e:  lea    0x1690e6(%rip),%rsi        # 196b2b <gconv_module_ext+0x14>
    0.00 :   2da45:  lea    0x1690f3(%rip),%rdi        # 196b3f <gconv_module_ext+0x28>
    0.00 :   2da4c:  call   35610 <__assert_fail>
    0.00 :   2da51:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   54.87 libc.so.6[8fd44]
   45.13 libc.so.6[8fd40]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008fd40 <__pthread_mutex_unlock@GLIBC_2.2.5>:
         : 6     ___pthread_mutex_unlock():
   45.13 :   8fd40:  endbr64 // libc.so.6[8fd40]
   54.87 :   8fd44:  mov    $0x1,%esi // libc.so.6[8fd44]
    0.00 :   8fd49:  jmp    8fc20 <__GI___pthread_mutex_unlock_usercnt>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   68.23 dbt2-client[4134d6]
   31.77 dbt2-client[413472]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000413448 <enqueue_transaction>:
         : 6      enqueue_transaction():
    0.00 :   413448: push   %rbp
    0.00 :   413449: mov    %rsp,%rbp
    0.00 :   41344c: sub    $0x10,%rsp
    0.00 :   413450: mov    %rdi,-0x8(%rbp)
    0.00 :   413454: mov    -0x8(%rbp),%rax
    0.00 :   413458: mov    0xc(%rax),%eax
    0.00 :   41345b: movslq %eax,%rdx
    0.00 :   41345e: mov    %rdx,%rax
    0.00 :   413461: shl    $0x2,%rax
    0.00 :   413465: add    %rdx,%rax
    0.00 :   413468: shl    $0x3,%rax
    0.00 :   41346c: add    $0x41c8c0,%rax
   31.77 :   413472: mov    %rax,%rdi // dbt2-client[413472]
    0.00 :   413475: call   407400 <pthread_mutex_lock@plt>
    0.00 :   41347a: mov    -0x8(%rbp),%rax
    0.00 :   41347e: mov    0xc(%rax),%eax
    0.00 :   413481: movslq %eax,%rdx
    0.00 :   413484: mov    0x41c880(,%rdx,4),%edx
    0.00 :   41348b: add    $0x1,%edx
    0.00 :   41348e: cltq
    0.00 :   413490: mov    %edx,0x41c880(,%rax,4)
    0.00 :   413497: mov    -0x8(%rbp),%rax
    0.00 :   41349b: mov    0xc(%rax),%eax
    0.00 :   41349e: movslq %eax,%rdx
    0.00 :   4134a1: mov    %rdx,%rax
    0.00 :   4134a4: shl    $0x2,%rax
    0.00 :   4134a8: add    %rdx,%rax
    0.00 :   4134ab: shl    $0x3,%rax
    0.00 :   4134af: add    $0x41c8c0,%rax
    0.00 :   4134b5: mov    %rax,%rdi
    0.00 :   4134b8: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   4134bd: mov    $0x41c840,%edi
    0.00 :   4134c2: call   407400 <pthread_mutex_lock@plt>
    0.00 :   4134c7: mov    -0x8(%rbp),%rax
    0.00 :   4134cb: movq   $0x0,0x2ee8(%rax)
   68.23 :   4134d6: mov    0x938c(%rip),%eax        # 41c868 <transaction_id> // dbt2-client[4134d6]
    0.00 :   4134dc: add    $0x1,%eax
    0.00 :   4134df: mov    %eax,0x9383(%rip)        # 41c868 <transaction_id>
    0.00 :   4134e5: mov    0x937d(%rip),%edx        # 41c868 <transaction_id>
    0.00 :   4134eb: mov    -0x8(%rbp),%rax
    0.00 :   4134ef: mov    %edx,0x4(%rax)
    0.00 :   4134f2: mov    0x932f(%rip),%rax        # 41c828 <transaction_tail>
    0.00 :   4134f9: test   %rax,%rax
    0.00 :   4134fc: je     41351d <enqueue_transaction+0xd5>
    0.00 :   4134fe: mov    0x9323(%rip),%rax        # 41c828 <transaction_tail>
    0.00 :   413505: mov    -0x8(%rbp),%rdx
    0.00 :   413509: mov    %rdx,0x2ee8(%rax)
    0.00 :   413510: mov    -0x8(%rbp),%rax
    0.00 :   413514: mov    %rax,0x930d(%rip)        # 41c828 <transaction_tail>
    0.00 :   41351b: jmp    413536 <enqueue_transaction+0xee>
    0.00 :   41351d: mov    -0x8(%rbp),%rax
    0.00 :   413521: mov    %rax,0x9300(%rip)        # 41c828 <transaction_tail>
    0.00 :   413528: mov    0x92f9(%rip),%rax        # 41c828 <transaction_tail>
    0.00 :   41352f: mov    %rax,0x92ea(%rip)        # 41c820 <transaction_head>
    0.00 :   413536: mov    $0x41c7c0,%edi
    0.00 :   41353b: call   411af4 <sem_post>
    0.00 :   413540: mov    $0x41c840,%edi
    0.00 :   413545: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   41354a: mov    $0x1,%eax
    0.00 :   41354f: leave
    0.00 :   413550: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   54.20 [nf_conntrack][cfe]
   45.80 [nf_conntrack][ce6]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000cc0 <__nf_ct_refresh_acct>:
         : 6   __nf_ct_refresh_acct():
    0.00 :   cc0:    call   cc5 <__nf_ct_refresh_acct+0x5>
    0.00 :   cc5:    mov    0x80(%rdi),%rax
    0.00 :   ccc:    test   $0x4,%ah
    0.00 :   ccf:    je     cdb <__nf_ct_refresh_acct+0x1b>
    0.00 :   cd1:    test   %r8b,%r8b
    0.00 :   cd4:    jne    cfe <__nf_ct_refresh_acct+0x3e>
    0.00 :   cd6:    jmp    cdb <__nf_ct_refresh_acct+0x1b>
    0.00 :   cdb:    mov    0x80(%rdi),%rax
    0.00 :   ce2:    test   $0x8,%al
    0.00 :   ce4:    je     cef <__nf_ct_refresh_acct+0x2f>
   45.80 :   ce6:    mov    0x0(%rip),%rax        # ced <__nf_ct_refresh_acct+0x2d> // [nf_conntrack][ce6]
    0.00 :   ced:    add    %eax,%ecx
    0.00 :   cef:    mov    0x8(%rdi),%eax
    0.00 :   cf2:    cmp    %eax,%ecx
    0.00 :   cf4:    je     cd1 <__nf_ct_refresh_acct+0x11>
    0.00 :   cf6:    mov    %ecx,0x8(%rdi)
    0.00 :   cf9:    test   %r8b,%r8b
    0.00 :   cfc:    je     cd6 <__nf_ct_refresh_acct+0x16>
   54.20 :   cfe:    cmp    $0x2,%esi // [nf_conntrack][cfe]
    0.00 :   d01:    mov    0x70(%rdx),%ecx
    0.00 :   d04:    mov    $0x1,%edx
    0.00 :   d09:    seta   %sil
    0.00 :   d0d:    movzbl %sil,%esi
    0.00 :   d11:    jmp    c40 <nf_ct_acct_add>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

   61.66 dbt2-client[411b07]
   38.34 dbt2-client[411af4]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000411af4 <sem_post>:
         : 6      sem_post():
   38.34 :   411af4: push   %rbp // dbt2-client[411af4]
    0.00 :   411af5: mov    %rsp,%rbp
    0.00 :   411af8: push   %r12
    0.00 :   411afa: push   %rbx
    0.00 :   411afb: sub    $0x10,%rsp
    0.00 :   411aff: mov    %rdi,-0x18(%rbp)
    0.00 :   411b03: mov    -0x18(%rbp),%r12
   61.66 :   411b07: call   407060 <__errno_location@plt> // dbt2-client[411b07]
    0.00 :   411b0c: mov    %rax,%rbx
    0.00 :   411b0f: mov    %r12,%rdi
    0.00 :   411b12: call   407400 <pthread_mutex_lock@plt>
    0.00 :   411b17: mov    %eax,(%rbx)
    0.00 :   411b19: mov    (%rbx),%eax
    0.00 :   411b1b: test   %eax,%eax
    0.00 :   411b1d: je     411b26 <sem_post+0x32>
    0.00 :   411b1f: mov    $0xffffffff,%eax
    0.00 :   411b24: jmp    411b58 <sem_post+0x64>
    0.00 :   411b26: mov    -0x18(%rbp),%rax
    0.00 :   411b2a: mov    0x58(%rax),%eax
    0.00 :   411b2d: lea    0x1(%rax),%edx
    0.00 :   411b30: mov    -0x18(%rbp),%rax
    0.00 :   411b34: mov    %edx,0x58(%rax)
    0.00 :   411b37: mov    -0x18(%rbp),%rax
    0.00 :   411b3b: mov    %rax,%rdi
    0.00 :   411b3e: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   411b43: mov    -0x18(%rbp),%rax
    0.00 :   411b47: add    $0x28,%rax
    0.00 :   411b4b: mov    %rax,%rdi
    0.00 :   411b4e: call   407030 <pthread_cond_signal@plt>
    0.00 :   411b53: mov    $0x0,%eax
    0.00 :   411b58: add    $0x10,%rsp
    0.00 :   411b5c: pop    %rbx
    0.00 :   411b5d: pop    %r12
    0.00 :   411b5f: pop    %rbp
    0.00 :   411b60: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/sunrpc/sunrpc.ko.xz
----------------------------------------------

   64.08 [sunrpc][2d1ab]
   35.92 [sunrpc][2d29a]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/sunrpc/sunrpc.ko.xz for cycles (2 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000002d160 <cache_clean>:
         : 6     cache_clean():
    0.00 :   2d160:  call   2d165 <cache_clean+0x5>
    0.00 :   2d165:  push   %r13
    0.00 :   2d167:  mov    $0x0,%rdi
    0.00 :   2d16e:  push   %r12
    0.00 :   2d170:  push   %rbp
    0.00 :   2d171:  push   %rbx
    0.00 :   2d172:  sub    $0x10,%rsp
    0.00 :   2d176:  call   2d17b <cache_clean+0x1b>
    0.00 :   2d17b:  mov    0x0(%rip),%rdi        # 2d182 <cache_clean+0x22>
    0.00 :   2d182:  test   %rdi,%rdi
    0.00 :   2d185:  je     2d1f5 <cache_clean+0x95>
    0.00 :   2d187:  mov    0x8(%rdi),%edx
    0.00 :   2d18a:  mov    0x0(%rip),%eax        # 2d190 <cache_clean+0x30>
    0.00 :   2d190:  cmp    %eax,%edx
    0.00 :   2d192:  jg     2d274 <cache_clean+0x114>
    0.00 :   2d198:  mov    0x88(%rdi),%rax
    0.00 :   2d19f:  cmp    $0x0,%rax
    0.00 :   2d1a5:  je     2d204 <cache_clean+0xa4>
    0.00 :   2d1a7:  mov    0x10(%rax),%rbp
   64.08 :   2d1ab:  movq   $0x0,(%rsp) // [sunrpc][2d1ab]
    0.00 :   2d1b3:  lea    -0x88(%rax),%rdx
    0.00 :   2d1ba:  mov    %rsp,%rdi
    0.00 :   2d1bd:  movq   $0x0,0x8(%rsp)
    0.00 :   2d1c6:  mov    %rdx,0x0(%rip)        # 2d1cd <cache_clean+0x6d>
    0.00 :   2d1cd:  call   2d1d2 <cache_clean+0x72>
    0.00 :   2d1d2:  call   2d1d7 <cache_clean+0x77>
    0.00 :   2d1d7:  sub    (%rsp),%rax
    0.00 :   2d1db:  cmp    %rax,%rbp
    0.00 :   2d1de:  jle    2d22f <cache_clean+0xcf>
    0.00 :   2d1e0:  mov    0x0(%rip),%rdi        # 2d1e7 <cache_clean+0x87>
    0.00 :   2d1e7:  mov    0x8(%rdi),%eax
    0.00 :   2d1ea:  mov    %eax,0x0(%rip)        # 2d1f0 <cache_clean+0x90>
    0.00 :   2d1f0:  test   %rdi,%rdi
    0.00 :   2d1f3:  jne    2d187 <cache_clean+0x27>
    0.00 :   2d1f5:  mov    0x0(%rip),%rax        # 2d1fc <cache_clean+0x9c>
    0.00 :   2d1fc:  cmp    $0x0,%rax
    0.00 :   2d202:  jne    2d1a7 <cache_clean+0x47>
    0.00 :   2d204:  mov    $0x0,%rdi
    0.00 :   2d20b:  movq   $0x0,0x0(%rip)        # 2d216 <cache_clean+0xb6>
    0.00 :   2d216:  call   2d21b <cache_clean+0xbb>
    0.00 :   2d21b:  mov    $0xffffffff,%eax
    0.00 :   2d220:  add    $0x10,%rsp
    0.00 :   2d224:  pop    %rbx
    0.00 :   2d225:  pop    %rbp
    0.00 :   2d226:  pop    %r12
    0.00 :   2d228:  pop    %r13
    0.00 :   2d22a:  jmp    2d22f <cache_clean+0xcf>
    0.00 :   2d22f:  movq   $0x0,(%rsp)
    0.00 :   2d237:  mov    %rsp,%rdi
    0.00 :   2d23a:  movq   $0x0,0x8(%rsp)
    0.00 :   2d243:  movl   $0x0,0x0(%rip)        # 2d24d <cache_clean+0xed>
    0.00 :   2d24d:  call   2d252 <cache_clean+0xf2>
    0.00 :   2d252:  call   2d257 <cache_clean+0xf7>
    0.00 :   2d257:  mov    0x0(%rip),%rdi        # 2d25e <cache_clean+0xfe>
    0.00 :   2d25e:  sub    (%rsp),%rax
    0.00 :   2d262:  add    $0x708,%rax
    0.00 :   2d268:  mov    %rax,0x98(%rdi)
    0.00 :   2d26f:  jmp    2d182 <cache_clean+0x22>
    0.00 :   2d274:  mov    0x10(%rdi),%rsi
    0.00 :   2d278:  xor    %r8d,%r8d
    0.00 :   2d27b:  jmp    2d290 <cache_clean+0x130>
    0.00 :   2d27d:  add    $0x1,%eax
    0.00 :   2d280:  mov    $0x1,%r8d
    0.00 :   2d286:  cmp    %eax,%edx
    0.00 :   2d288:  jle    2d335 <cache_clean+0x1d5>
    0.00 :   2d28e:  mov    %eax,%ebx
    0.00 :   2d290:  movslq %eax,%rcx
    0.00 :   2d293:  lea    (%rsi,%rcx,8),%rcx
    0.00 :   2d297:  mov    (%rcx),%rcx
   35.92 :   2d29a:  test   %rcx,%rcx // [sunrpc][2d29a]
    0.00 :   2d29d:  je     2d27d <cache_clean+0x11d>
    0.00 :   2d29f:  test   %r8b,%r8b
    0.00 :   2d2a2:  je     2d2aa <cache_clean+0x14a>
    0.00 :   2d2a4:  mov    %ebx,0x0(%rip)        # 2d2aa <cache_clean+0x14a>
    0.00 :   2d2aa:  cmp    %eax,%edx
    0.00 :   2d2ac:  jle    2d33b <cache_clean+0x1db>
    0.00 :   2d2b2:  add    $0x18,%rdi
    0.00 :   2d2b6:  call   2d2bb <cache_clean+0x15b>
    0.00 :   2d2bb:  mov    0x0(%rip),%r12        # 2d2c2 <cache_clean+0x162>
    0.00 :   2d2c2:  movslq 0x0(%rip),%rdx        # 2d2c9 <cache_clean+0x169>
    0.00 :   2d2c9:  mov    0x10(%r12),%rax
    0.00 :   2d2ce:  mov    (%rax,%rdx,8),%rbx
    0.00 :   2d2d2:  test   %rbx,%rbx
    0.00 :   2d2d5:  je     2d46a <cache_clean+0x30a>
    0.00 :   2d2db:  mov    (%rbx),%r13
    0.00 :   2d2de:  mov    0x10(%rbx),%rbp
    0.00 :   2d2e2:  cmp    %rbp,0x98(%r12)
    0.00 :   2d2ea:  jg     2d358 <cache_clean+0x1f8>
    0.00 :   2d2ec:  movq   $0x0,(%rsp)
    0.00 :   2d2f4:  mov    %rsp,%rdi
    0.00 :   2d2f7:  movq   $0x0,0x8(%rsp)
    0.00 :   2d300:  call   2d305 <cache_clean+0x1a5>
    0.00 :   2d305:  call   2d30a <cache_clean+0x1aa>
    0.00 :   2d30a:  sub    (%rsp),%rax
    0.00 :   2d30e:  cmp    %rbp,%rax
    0.00 :   2d311:  jg     2d36a <cache_clean+0x20a>
    0.00 :   2d313:  mov    0x28(%rbx),%rax
    0.00 :   2d317:  test   $0x1,%al
    0.00 :   2d319:  je     2d329 <cache_clean+0x1c9>
    0.00 :   2d31b:  mov    0x18(%rbx),%rax
    0.00 :   2d31f:  cmp    %rax,0x80(%r12)
    0.00 :   2d327:  jge    2d36a <cache_clean+0x20a>
    0.00 :   2d329:  mov    0x0(%rip),%r12        # 2d330 <cache_clean+0x1d0>
    0.00 :   2d330:  mov    %r13,%rbx
    0.00 :   2d333:  jmp    2d2d2 <cache_clean+0x172>
    0.00 :   2d335:  mov    %eax,0x0(%rip)        # 2d33b <cache_clean+0x1db>
    0.00 :   2d33b:  mov    $0x0,%rdi
    0.00 :   2d342:  call   2d347 <cache_clean+0x1e7>
    0.00 :   2d347:  xor    %eax,%eax
    0.00 :   2d349:  add    $0x10,%rsp
    0.00 :   2d34d:  pop    %rbx
    0.00 :   2d34e:  pop    %rbp
    0.00 :   2d34f:  pop    %r12
    0.00 :   2d351:  pop    %r13
    0.00 :   2d353:  jmp    2d358 <cache_clean+0x1f8>
    0.00 :   2d358:  add    $0x1,%rbp
    0.00 :   2d35c:  mov    %rbp,0x98(%r12)
    0.00 :   2d364:  mov    0x10(%rbx),%rbp
    0.00 :   2d368:  jmp    2d2ec <cache_clean+0x18c>
    0.00 :   2d36a:  mov    0x8(%rbx),%rax
    0.00 :   2d36e:  mov    0x0(%rip),%rdx        # 2d375 <cache_clean+0x215>
    0.00 :   2d375:  test   %rax,%rax
    0.00 :   2d378:  je     2d391 <cache_clean+0x231>
    0.00 :   2d37a:  mov    (%rbx),%rcx
    0.00 :   2d37d:  mov    %rcx,(%rax)
    0.00 :   2d380:  test   %rcx,%rcx
    0.00 :   2d383:  je     2d389 <cache_clean+0x229>
    0.00 :   2d385:  mov    %rax,0x8(%rcx)
    0.00 :   2d389:  movq   $0x0,0x8(%rbx)
    0.00 :   2d391:  lock orb $0x8,0x28(%rbx)
    0.00 :   2d396:  mov    0x0(%rip),%rsi        # 2d39d <cache_clean+0x23d>
    0.00 :   2d39d:  subl   $0x1,0xa0(%rdx)
    0.00 :   2d3a4:  xchg   %ax,%ax
    0.00 :   2d3a6:  lea    0x18(%rsi),%rdi
    0.00 :   2d3aa:  call   2d3af <cache_clean+0x24f>
    0.00 :   2d3af:  mov    0x0(%rip),%rbp        # 2d3b6 <cache_clean+0x256>
    0.00 :   2d3b6:  mov    $0x0,%rdi
    0.00 :   2d3bd:  call   2d3c2 <cache_clean+0x262>
    0.00 :   2d3c2:  mov    %rbp,%rsi
    0.00 :   2d3c5:  mov    %rbx,%rdi
    0.00 :   2d3c8:  call   2b630 <cache_fresh_unlocked>
    0.00 :   2d3cd:  mov    0x20(%rbx),%eax
    0.00 :   2d3d0:  cmp    $0x2,%eax
    0.00 :   2d3d3:  ja     2d3e6 <cache_clean+0x286>
    0.00 :   2d3d5:  mov    0x10(%rbx),%rax
    0.00 :   2d3d9:  cmp    0x98(%rbp),%rax
    0.00 :   2d3e0:  jl     2d48e <cache_clean+0x32e>
    0.00 :   2d3e6:  mov    0x28(%rbp),%rdx
    0.00 :   2d3ea:  lea    0x20(%rbx),%rdi
    0.00 :   2d3ee:  mov    $0xffffffff,%eax
    0.00 :   2d3f3:  lock xadd %eax,0x20(%rbx)
    0.00 :   2d3f8:  cmp    $0x1,%eax
    0.00 :   2d3fb:  je     2d49a <cache_clean+0x33a>
    0.00 :   2d401:  test   %eax,%eax
    0.00 :   2d403:  jle    2d4a4 <cache_clean+0x344>
    0.00 :   2d409:  mov    $0x1,%eax
    0.00 :   2d40e:  jmp    2d220 <cache_clean+0xc0>
    0.00 :   2d413:  mov    %gs:0x0(%rip),%eax        # 2d41a <cache_clean+0x2ba>
    0.00 :   2d41a:  mov    %eax,%eax
    0.00 :   2d41c:  bt     %rax,0x0(%rip)        # 2d424 <cache_clean+0x2c4>
    0.00 :   2d424:  jae    2d44e <cache_clean+0x2ee>
    0.00 :   2d426:  incl   %gs:0x0(%rip)        # 2d42d <cache_clean+0x2cd>
    0.00 :   2d42d:  mov    0x0(%rip),%rax        # 2d434 <cache_clean+0x2d4>
    0.00 :   2d434:  test   %rax,%rax
    0.00 :   2d437:  je     2d445 <cache_clean+0x2e5>
    0.00 :   2d439:  mov    0x8(%rax),%rdi
    0.00 :   2d43d:  mov    %rbx,%rdx
    0.00 :   2d440:  call   2d445 <cache_clean+0x2e5>
    0.00 :   2d445:  decl   %gs:0x0(%rip)        # 2d44c <cache_clean+0x2ec>
    0.00 :   2d44c:  je     2d4b3 <cache_clean+0x353>
    0.00 :   2d44e:  mov    0x0(%rip),%rax        # 2d455 <cache_clean+0x2f5>
    0.00 :   2d455:  lea    0x18(%rax),%rdi
    0.00 :   2d459:  call   2d45e <cache_clean+0x2fe>
    0.00 :   2d45e:  mov    0x0(%rip),%rbp        # 2d465 <cache_clean+0x305>
    0.00 :   2d465:  jmp    2d3b6 <cache_clean+0x256>
    0.00 :   2d46a:  lea    0x18(%r12),%rdi
    0.00 :   2d46f:  call   2d474 <cache_clean+0x314>
    0.00 :   2d474:  mov    $0x0,%rdi
    0.00 :   2d47b:  addl   $0x1,0x0(%rip)        # 2d482 <cache_clean+0x322>
    0.00 :   2d482:  call   2d487 <cache_clean+0x327>
    0.00 :   2d487:  xor    %eax,%eax
    0.00 :   2d489:  jmp    2d349 <cache_clean+0x1e9>
    0.00 :   2d48e:  mov    %rax,0x98(%rbp)
    0.00 :   2d495:  jmp    2d3e6 <cache_clean+0x286>
    0.00 :   2d49a:  call   2d49f <cache_clean+0x33f>
    0.00 :   2d49f:  jmp    2d409 <cache_clean+0x2a9>
    0.00 :   2d4a4:  mov    $0x3,%esi
    0.00 :   2d4a9:  call   2d4ae <cache_clean+0x34e>
    0.00 :   2d4ae:  jmp    2d409 <cache_clean+0x2a9>
    0.00 :   2d4b3:  call   2d4b8 <cache_clean+0x358>
    0.00 :   2d4b8:  mov    0x0(%rip),%rax        # 2d4bf <cache_clean+0x35f>
    0.00 :   2d4bf:  lea    0x18(%rax),%rdi
    0.00 :   2d4c3:  call   2d4c8 <cache_clean+0x368>
    0.00 :   2d4c8:  mov    0x0(%rip),%rbp        # 2d4cf <cache_clean+0x36f>
    0.00 :   2d4cf:  jmp    2d3b6 <cache_clean+0x256>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[87fb7]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000087fa0 <__GI___lll_lock_wake>:
         : 6     __GI___lll_lock_wake():
    0.00 :   87fa0:  endbr64
    0.00 :   87fa4:  xor    $0x81,%sil
    0.00 :   87fa8:  xor    %r10d,%r10d
    0.00 :   87fab:  mov    $0x1,%edx
    0.00 :   87fb0:  mov    $0xca,%eax
    0.00 :   87fb5:  syscall
  100.00 :   87fb7:  ret // libc.so.6[87fb7]

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   55.82 libc.so.6[89df0]
   44.18 libc.so.6[89d40]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000089d40 <pthread_cond_signal@@GLIBC_2.3.2>:
         : 6     __GI___pthread_cond_signal():
   44.18 :   89d40:  endbr64 // libc.so.6[89d40]
    0.00 :   89d44:  push   %r15
    0.00 :   89d46:  push   %r14
    0.00 :   89d48:  push   %r13
    0.00 :   89d4a:  push   %r12
    0.00 :   89d4c:  push   %rbp
    0.00 :   89d4d:  push   %rbx
    0.00 :   89d4e:  sub    $0x28,%rsp
    0.00 :   89d52:  nop
    0.00 :   89d53:  mov    0x24(%rdi),%ebx
    0.00 :   89d56:  mov    %ebx,%eax
    0.00 :   89d58:  shr    $0x3,%eax
    0.00 :   89d5b:  je     89df0 <pthread_cond_signal@@GLIBC_2.3.2+0xb0>
    0.00 :   89d61:  shl    $0x7,%ebx
    0.00 :   89d64:  mov    0x20(%rdi),%eax
    0.00 :   89d67:  mov    %rdi,%r8
    0.00 :   89d6a:  lea    0x20(%rdi),%r9
    0.00 :   89d6e:  movzbl %bl,%ebx
    0.00 :   89d71:  test   $0x3,%al
    0.00 :   89d73:  jne    8a000 <pthread_cond_signal@@GLIBC_2.3.2+0x2c0>
    0.00 :   89d79:  mov    %eax,%edx
    0.00 :   89d7b:  or     $0x1,%edx
    0.00 :   89d7e:  lock cmpxchg %edx,(%r9)
    0.00 :   89d83:  jne    89d71 <pthread_cond_signal@@GLIBC_2.3.2+0x31>
    0.00 :   89d85:  mov    (%r8),%r10
    0.00 :   89d88:  lea    0x28(%r8),%r14
    0.00 :   89d8c:  mov    %r10,%rax
    0.00 :   89d8f:  not    %rax
    0.00 :   89d92:  and    $0x1,%eax
    0.00 :   89d95:  mov    0x18(%r8,%rax,4),%edx
    0.00 :   89d9a:  mov    %eax,%r12d
    0.00 :   89d9d:  test   %edx,%edx
    0.00 :   89d9f:  je     89e08 <pthread_cond_signal@@GLIBC_2.3.2+0xc8>
    0.00 :   89da1:  lea    (%r14,%rax,4),%rdi
    0.00 :   89da5:  lock addl $0x2,(%rdi)
    0.00 :   89da9:  mov    %r12d,%eax
    0.00 :   89dac:  subl   $0x1,0x18(%r8,%rax,4)
    0.00 :   89db2:  mov    0x20(%r8),%eax
    0.00 :   89db6:  mov    %eax,%ecx
    0.00 :   89db8:  mov    %eax,%edx
    0.00 :   89dba:  and    $0xfffffffc,%ecx
    0.00 :   89dbd:  lock cmpxchg %ecx,(%r9)
    0.00 :   89dc2:  jne    89db6 <pthread_cond_signal@@GLIBC_2.3.2+0x76>
    0.00 :   89dc4:  and    $0x3,%edx
    0.00 :   89dc7:  cmp    $0x2,%edx
    0.00 :   89dca:  je     89fb0 <pthread_cond_signal@@GLIBC_2.3.2+0x270>
    0.00 :   89dd0:  xor    $0x81,%bl
    0.00 :   89dd3:  xor    %r10d,%r10d
    0.00 :   89dd6:  mov    $0x1,%edx
    0.00 :   89ddb:  mov    %ebx,%esi
    0.00 :   89ddd:  mov    $0xca,%eax
    0.00 :   89de2:  syscall
    0.00 :   89de4:  cmp    $0xfffffffffffff000,%rax
    0.00 :   89dea:  ja     89fe0 <pthread_cond_signal@@GLIBC_2.3.2+0x2a0>
   55.82 :   89df0:  add    $0x28,%rsp // libc.so.6[89df0]
    0.00 :   89df4:  xor    %eax,%eax
    0.00 :   89df6:  pop    %rbx
    0.00 :   89df7:  pop    %rbp
    0.00 :   89df8:  pop    %r12
    0.00 :   89dfa:  pop    %r13
    0.00 :   89dfc:  pop    %r14
    0.00 :   89dfe:  pop    %r15
    0.00 :   89e00:  ret
    0.00 :   89e01:  nopl   0x0(%rax)
    0.00 :   89e08:  mov    %eax,%edx
    0.00 :   89e0a:  mov    0x20(%r8),%ebp
    0.00 :   89e0e:  mov    %r10,%rsi
    0.00 :   89e11:  mov    0x8(%r8),%r13
    0.00 :   89e15:  xor    $0x1,%edx
    0.00 :   89e18:  shr    %rsi
    0.00 :   89e1b:  shr    $0x2,%ebp
    0.00 :   89e1e:  mov    %edx,%ecx
    0.00 :   89e20:  shr    %r13
    0.00 :   89e23:  lea    (%r8,%rcx,4),%r15
    0.00 :   89e27:  add    0x18(%r15),%esi
    0.00 :   89e2b:  sub    %ebp,%esi
    0.00 :   89e2d:  cmp    %esi,%r13d
    0.00 :   89e30:  jne    89e90 <pthread_cond_signal@@GLIBC_2.3.2+0x150>
    0.00 :   89e32:  mov    0x20(%r8),%eax
    0.00 :   89e36:  mov    %eax,%ecx
    0.00 :   89e38:  mov    %eax,%edx
    0.00 :   89e3a:  and    $0xfffffffc,%ecx
    0.00 :   89e3d:  lock cmpxchg %ecx,(%r9)
    0.00 :   89e42:  jne    89e36 <pthread_cond_signal@@GLIBC_2.3.2+0xf6>
    0.00 :   89e44:  and    $0x3,%edx
    0.00 :   89e47:  cmp    $0x2,%edx
    0.00 :   89e4a:  jne    89df0 <pthread_cond_signal@@GLIBC_2.3.2+0xb0>
    0.00 :   89e4c:  xor    %ebp,%ebp
    0.00 :   89e4e:  xor    $0x81,%bl
    0.00 :   89e51:  xor    %r10d,%r10d
    0.00 :   89e54:  mov    $0x1,%edx
    0.00 :   89e59:  mov    %r9,%rdi
    0.00 :   89e5c:  mov    %ebx,%esi
    0.00 :   89e5e:  mov    $0xca,%eax
    0.00 :   89e63:  syscall
    0.00 :   89e65:  cmp    $0xfffffffffffff000,%rax
    0.00 :   89e6b:  ja     8a060 <pthread_cond_signal@@GLIBC_2.3.2+0x320>
    0.00 :   89e71:  test   %bpl,%bpl
    0.00 :   89e74:  je     89df0 <pthread_cond_signal@@GLIBC_2.3.2+0xb0>
    0.00 :   89e7a:  mov    %r12d,%r12d
    0.00 :   89e7d:  lea    0x28(%r8,%r12,4),%rdi
    0.00 :   89e82:  jmp    89dd3 <pthread_cond_signal@@GLIBC_2.3.2+0x93>
    0.00 :   89e87:  nopw   0x0(%rax,%rax,1)
    0.00 :   89e90:  lea    0x28(%r8),%r14
    0.00 :   89e94:  shl    $0x2,%rax
    0.00 :   89e98:  lea    (%r14,%rax,1),%rsi
    0.00 :   89e9c:  mov    %rsi,0x18(%rsp)
    0.00 :   89ea1:  lock orl $0x1,(%rsi)
    0.00 :   89ea5:  lea    0x10(%r8,%rax,1),%rdi
    0.00 :   89eaa:  mov    (%rdi),%eax
    0.00 :   89eac:  mov    %eax,%r11d
    0.00 :   89eaf:  lock cmpxchg %eax,(%rdi)
    0.00 :   89eb3:  jne    89eac <pthread_cond_signal@@GLIBC_2.3.2+0x16c>
    0.00 :   89eb5:  mov    %ebx,%esi
    0.00 :   89eb7:  mov    $0xca,%r12d
    0.00 :   89ebd:  xor    $0x80,%sil
    0.00 :   89ec1:  shr    %r11d
    0.00 :   89ec4:  je     89f21 <pthread_cond_signal@@GLIBC_2.3.2+0x1e1>
    0.00 :   89ec6:  mov    %r10,0x8(%rsp)
    0.00 :   89ecb:  mov    %r14,(%rsp)
    0.00 :   89ecf:  mov    %edx,%r14d
    0.00 :   89ed2:  mov    %r9,0x10(%rsp)
    0.00 :   89ed7:  mov    %rcx,%r9
    0.00 :   89eda:  nopw   0x0(%rax,%rax,1)
    0.00 :   89ee0:  mov    (%rdi),%eax
    0.00 :   89ee2:  mov    %eax,%edx
    0.00 :   89ee4:  or     $0x1,%edx
    0.00 :   89ee7:  lock cmpxchg %edx,(%rdi)
    0.00 :   89eeb:  jne    89ee2 <pthread_cond_signal@@GLIBC_2.3.2+0x1a2>
    0.00 :   89eed:  mov    %edx,%eax
    0.00 :   89eef:  shr    %eax
    0.00 :   89ef1:  je     89f07 <pthread_cond_signal@@GLIBC_2.3.2+0x1c7>
    0.00 :   89ef3:  xor    %r10d,%r10d
    0.00 :   89ef6:  mov    %r12d,%eax
    0.00 :   89ef9:  syscall
    0.00 :   89efb:  cmp    $0xfffffffffffff000,%rax
    0.00 :   89f01:  ja     89f98 <pthread_cond_signal@@GLIBC_2.3.2+0x258>
    0.00 :   89f07:  mov    (%rdi),%eax
    0.00 :   89f09:  shr    %eax
    0.00 :   89f0b:  jne    89ee0 <pthread_cond_signal@@GLIBC_2.3.2+0x1a0>
    0.00 :   89f0d:  mov    %r9,%rcx
    0.00 :   89f10:  mov    %r14d,%edx
    0.00 :   89f13:  mov    0x8(%rsp),%r10
    0.00 :   89f18:  mov    0x10(%rsp),%r9
    0.00 :   89f1d:  mov    (%rsp),%r14
    0.00 :   89f21:  and    $0x1,%r10d
    0.00 :   89f25:  cmp    $0x1,%r10
    0.00 :   89f29:  sbb    %eax,%eax
    0.00 :   89f2b:  mov    0x8(%r8),%rsi
    0.00 :   89f2f:  and    $0x2,%eax
    0.00 :   89f32:  lea    -0x1(%rax,%rbp,2),%eax
    0.00 :   89f36:  add    %rsi,%rax
    0.00 :   89f39:  mov    %rax,0x8(%r8)
    0.00 :   89f3d:  mov    0x18(%rsp),%rax
    0.00 :   89f42:  movl   $0x0,(%rax)
    0.00 :   89f48:  mov    (%r8),%rax
    0.00 :   89f4b:  mov    %rax,%rdi
    0.00 :   89f4e:  mov    %rax,%rsi
    0.00 :   89f51:  xor    $0x1,%rdi
    0.00 :   89f55:  lock cmpxchg %rdi,(%r8)
    0.00 :   89f5a:  jne    89f4b <pthread_cond_signal@@GLIBC_2.3.2+0x20b>
    0.00 :   89f5c:  mov    0x20(%r8),%eax
    0.00 :   89f60:  shr    %rsi
    0.00 :   89f63:  add    %r13d,%ebp
    0.00 :   89f66:  sub    %ebp,%esi
    0.00 :   89f68:  lea    0x0(,%rsi,4),%edi
    0.00 :   89f6f:  and    $0x3,%eax
    0.00 :   89f72:  or     %edi,%eax
    0.00 :   89f74:  mov    %eax,%r10d
    0.00 :   89f77:  xchg   %r10d,(%r9)
    0.00 :   89f7a:  xor    %r10d,%eax
    0.00 :   89f7d:  test   $0x3,%al
    0.00 :   89f7f:  jne    89fd0 <pthread_cond_signal@@GLIBC_2.3.2+0x290>
    0.00 :   89f81:  add    %esi,0x18(%r15)
    0.00 :   89f85:  je     89fc0 <pthread_cond_signal@@GLIBC_2.3.2+0x280>
    0.00 :   89f87:  mov    %rcx,%rax
    0.00 :   89f8a:  mov    %edx,%r12d
    0.00 :   89f8d:  jmp    89da1 <pthread_cond_signal@@GLIBC_2.3.2+0x61>
    0.00 :   89f92:  nopw   0x0(%rax,%rax,1)
    0.00 :   89f98:  cmp    $0xfffffff5,%eax
    0.00 :   89f9b:  je     89f07 <pthread_cond_signal@@GLIBC_2.3.2+0x1c7>
    0.00 :   89fa1:  cmp    $0xfffffffc,%eax
    0.00 :   89fa4:  je     89f07 <pthread_cond_signal@@GLIBC_2.3.2+0x1c7>
    0.00 :   89faa:  jmp    89fec <pthread_cond_signal@@GLIBC_2.3.2+0x2ac>
    0.00 :   89fac:  nopl   0x0(%rax)
    0.00 :   89fb0:  mov    $0x1,%ebp
    0.00 :   89fb5:  jmp    89e4e <pthread_cond_signal@@GLIBC_2.3.2+0x10e>
    0.00 :   89fba:  nopw   0x0(%rax,%rax,1)
    0.00 :   89fc0:  mov    %edx,%r12d
    0.00 :   89fc3:  jmp    89e32 <pthread_cond_signal@@GLIBC_2.3.2+0xf2>
    0.00 :   89fc8:  nopl   0x0(%rax,%rax,1)
    0.00 :   89fd0:  or     $0x2,%edi
    0.00 :   89fd3:  mov    %edi,0x20(%r8)
    0.00 :   89fd7:  jmp    89f81 <pthread_cond_signal@@GLIBC_2.3.2+0x241>
    0.00 :   89fd9:  nopl   0x0(%rax)
    0.00 :   89fe0:  add    $0x16,%eax
    0.00 :   89fe3:  and    $0xfffffff7,%eax
    0.00 :   89fe6:  je     89df0 <pthread_cond_signal@@GLIBC_2.3.2+0xb0>
    0.00 :   89fec:  lea    0x1125fd(%rip),%rdi        # 19c5f0 <aliasfile.0+0xba8>
    0.00 :   89ff3:  call   810e0 <__libc_fatal>
    0.00 :   89ff8:  nopl   0x0(%rax,%rax,1)
    0.00 :   8a000:  mov    %ebx,%esi
    0.00 :   8a002:  mov    $0xca,%ebp
    0.00 :   8a007:  xor    $0x80,%sil
    0.00 :   8a00b:  jmp    8a013 <pthread_cond_signal@@GLIBC_2.3.2+0x2d3>
    0.00 :   8a00d:  nopl   (%rax)
    0.00 :   8a010:  mov    (%r9),%eax
    0.00 :   8a013:  mov    %eax,%edx
    0.00 :   8a015:  and    $0x3,%edx
    0.00 :   8a018:  cmp    $0x2,%edx
    0.00 :   8a01b:  je     8a034 <pthread_cond_signal@@GLIBC_2.3.2+0x2f4>
    0.00 :   8a01d:  mov    %eax,%edx
    0.00 :   8a01f:  and    $0xfffffffc,%edx
    0.00 :   8a022:  or     $0x2,%edx
    0.00 :   8a025:  lock cmpxchg %edx,(%r9)
    0.00 :   8a02a:  jne    8a013 <pthread_cond_signal@@GLIBC_2.3.2+0x2d3>
    0.00 :   8a02c:  test   $0x3,%al
    0.00 :   8a02e:  je     89d85 <pthread_cond_signal@@GLIBC_2.3.2+0x45>
    0.00 :   8a034:  and    $0xfffffffc,%eax
    0.00 :   8a037:  xor    %r10d,%r10d
    0.00 :   8a03a:  mov    %r9,%rdi
    0.00 :   8a03d:  or     $0x2,%eax
    0.00 :   8a040:  mov    %eax,%edx
    0.00 :   8a042:  mov    %ebp,%eax
    0.00 :   8a044:  syscall
    0.00 :   8a046:  cmp    $0xfffffffffffff000,%rax
    0.00 :   8a04c:  jbe    8a010 <pthread_cond_signal@@GLIBC_2.3.2+0x2d0>
    0.00 :   8a04e:  cmp    $0xfffffff5,%eax
    0.00 :   8a051:  je     8a010 <pthread_cond_signal@@GLIBC_2.3.2+0x2d0>
    0.00 :   8a053:  cmp    $0xfffffffc,%eax
    0.00 :   8a056:  je     8a010 <pthread_cond_signal@@GLIBC_2.3.2+0x2d0>
    0.00 :   8a058:  jmp    89fec <pthread_cond_signal@@GLIBC_2.3.2+0x2ac>
    0.00 :   8a05a:  nopw   0x0(%rax,%rax,1)
    0.00 :   8a060:  add    $0x16,%eax
    0.00 :   8a063:  and    $0xfffffff7,%eax
    0.00 :   8a066:  jne    89fec <pthread_cond_signal@@GLIBC_2.3.2+0x2ac>
    0.00 :   8a068:  jmp    89e71 <pthread_cond_signal@@GLIBC_2.3.2+0x131>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[36030]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000036030 <bindtextdomain>:
         : 6     __bindtextdomain():
  100.00 :   36030:  endbr64 // libc.so.6[36030]
    0.00 :   36034:  sub    $0x18,%rsp
    0.00 :   36038:  xor    %eax,%eax
    0.00 :   3603a:  mov    %rsi,0x8(%rsp)
    0.00 :   3603f:  test   %rdi,%rdi
    0.00 :   36042:  je     36049 <bindtextdomain+0x19>
    0.00 :   36044:  cmpb   $0x0,(%rdi)
    0.00 :   36047:  jne    36050 <bindtextdomain+0x20>
    0.00 :   36049:  add    $0x18,%rsp
    0.00 :   3604d:  ret
    0.00 :   3604e:  xchg   %ax,%ax
    0.00 :   36050:  lea    0x8(%rsp),%rsi
    0.00 :   36055:  xor    %edx,%edx
    0.00 :   36057:  call   35be0 <set_binding_values.part.0>
    0.00 :   3605c:  mov    0x8(%rsp),%rax
    0.00 :   36061:  add    $0x18,%rsp
    0.00 :   36065:  ret

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[1ea80]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (2 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001ea80 <PQsendQuery@@Base>:
  100.00 :   1ea80:  endbr64 // libpq.so.private14-5.14[1ea80]
    0.00 :   1ea84:  mov    $0x1,%edx
    0.00 :   1ea89:  jmp    1e660 <PQflush@@Base+0x210>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   76.13 libc.so.6[87f2e]
   23.87 libc.so.6[87f50]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000087f20 <__GI___lll_lock_wait>:
         : 6     __GI___lll_lock_wait():
    0.00 :   87f20:  endbr64
    0.00 :   87f24:  mov    (%rdi),%eax
    0.00 :   87f26:  mov    %esi,%r8d
    0.00 :   87f29:  cmp    $0x2,%eax
    0.00 :   87f2c:  je     87f39 <__GI___lll_lock_wait+0x19>
   76.13 :   87f2e:  mov    $0x2,%eax // libc.so.6[87f2e]
    0.00 :   87f33:  xchg   %eax,(%rdi)
    0.00 :   87f35:  test   %eax,%eax
    0.00 :   87f37:  je     87f70 <__GI___lll_lock_wait+0x50>
    0.00 :   87f39:  nop
    0.00 :   87f3a:  mov    %r8d,%esi
    0.00 :   87f3d:  xor    %r10d,%r10d
    0.00 :   87f40:  mov    $0x2,%edx
    0.00 :   87f45:  mov    $0xca,%eax
    0.00 :   87f4a:  xor    $0x80,%sil
    0.00 :   87f4e:  syscall
   23.87 :   87f50:  cmp    $0xfffffffffffff000,%rax // libc.so.6[87f50]
    0.00 :   87f56:  jbe    87f2e <__GI___lll_lock_wait+0xe>
    0.00 :   87f58:  cmp    $0xfffffff5,%eax
    0.00 :   87f5b:  je     87f2e <__GI___lll_lock_wait+0xe>
    0.00 :   87f5d:  cmp    $0xfffffffc,%eax
    0.00 :   87f60:  je     87f2e <__GI___lll_lock_wait+0xe>
    0.00 :   87f62:  push   %rax
    0.00 :   87f63:  lea    0x114686(%rip),%rdi        # 19c5f0 <aliasfile.0+0xba8>
    0.00 :   87f6a:  call   810e0 <__libc_fatal>
    0.00 :   87f6f:  nop
    0.00 :   87f70:  ret

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

  100.00 dbt2-client[40a4b1]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040a376 <execute_stock_level_libpq>:
         : 6      execute_stock_level_libpq():
    0.00 :   40a376: push   %rbp
    0.00 :   40a377: mov    %rsp,%rbp
    0.00 :   40a37a: sub    $0x60,%rsp
    0.00 :   40a37e: mov    %rdi,-0x58(%rbp)
    0.00 :   40a382: mov    %rsi,-0x60(%rbp)
    0.00 :   40a386: movl   $0x4,-0x2c(%rbp)
    0.00 :   40a38d: movl   $0x4,-0x28(%rbp)
    0.00 :   40a394: movl   $0x4,-0x24(%rbp)
    0.00 :   40a39b: movl   $0x1,-0x38(%rbp)
    0.00 :   40a3a2: movl   $0x1,-0x34(%rbp)
    0.00 :   40a3a9: movl   $0x1,-0x30(%rbp)
    0.00 :   40a3b0: mov    -0x60(%rbp),%rax
    0.00 :   40a3b4: mov    (%rax),%eax
    0.00 :   40a3b6: mov    %eax,%edi
    0.00 :   40a3b8: call   4071b0 <htonl@plt>
    0.00 :   40a3bd: mov    %eax,-0x3c(%rbp)
    0.00 :   40a3c0: mov    -0x60(%rbp),%rax
    0.00 :   40a3c4: mov    0x4(%rax),%eax
    0.00 :   40a3c7: mov    %eax,%edi
    0.00 :   40a3c9: call   4071b0 <htonl@plt>
    0.00 :   40a3ce: mov    %eax,-0x40(%rbp)
    0.00 :   40a3d1: mov    -0x60(%rbp),%rax
    0.00 :   40a3d5: mov    0x8(%rax),%eax
    0.00 :   40a3d8: mov    %eax,%edi
    0.00 :   40a3da: call   4071b0 <htonl@plt>
    0.00 :   40a3df: mov    %eax,-0x44(%rbp)
    0.00 :   40a3e2: lea    -0x3c(%rbp),%rax
    0.00 :   40a3e6: mov    %rax,-0x20(%rbp)
    0.00 :   40a3ea: lea    -0x40(%rbp),%rax
    0.00 :   40a3ee: mov    %rax,-0x18(%rbp)
    0.00 :   40a3f2: lea    -0x44(%rbp),%rax
    0.00 :   40a3f6: mov    %rax,-0x10(%rbp)
    0.00 :   40a3fa: mov    -0x58(%rbp),%rax
    0.00 :   40a3fe: mov    0x78(%rax),%rax
    0.00 :   40a402: mov    $0x414f08,%esi
    0.00 :   40a407: mov    %rax,%rdi
    0.00 :   40a40a: call   407130 <PQexec@plt>
    0.00 :   40a40f: mov    %rax,-0x8(%rbp)
    0.00 :   40a413: cmpq   $0x0,-0x8(%rbp)
    0.00 :   40a418: je     40a42b <execute_stock_level_libpq+0xb5>
    0.00 :   40a41a: mov    -0x8(%rbp),%rax
    0.00 :   40a41e: mov    %rax,%rdi
    0.00 :   40a421: call   407040 <PQresultStatus@plt>
    0.00 :   40a426: cmp    $0x1,%eax
    0.00 :   40a429: je     40a46d <execute_stock_level_libpq+0xf7>
    0.00 :   40a42b: mov    -0x58(%rbp),%rax
    0.00 :   40a42f: mov    0x78(%rax),%rax
    0.00 :   40a433: mov    %rax,%rdi
    0.00 :   40a436: call   4071c0 <PQerrorMessage@plt>
    0.00 :   40a43b: mov    %rax,%rcx
    0.00 :   40a43e: mov    $0x414f0e,%edx
    0.00 :   40a443: mov    $0x2f,%esi
    0.00 :   40a448: mov    $0x414f18,%edi
    0.00 :   40a44d: mov    $0x0,%eax
    0.00 :   40a452: call   40840f <log_error_message>
    0.00 :   40a457: mov    -0x8(%rbp),%rax
    0.00 :   40a45b: mov    %rax,%rdi
    0.00 :   40a45e: call   407080 <PQclear@plt>
    0.00 :   40a463: mov    $0x0,%eax
    0.00 :   40a468: jmp    40a51d <execute_stock_level_libpq+0x1a7>
    0.00 :   40a46d: mov    -0x8(%rbp),%rax
    0.00 :   40a471: mov    %rax,%rdi
    0.00 :   40a474: call   407080 <PQclear@plt>
    0.00 :   40a479: mov    -0x58(%rbp),%rax
    0.00 :   40a47d: mov    0x78(%rax),%rax
    0.00 :   40a481: lea    -0x2c(%rbp),%rsi
    0.00 :   40a485: lea    -0x20(%rbp),%rcx
    0.00 :   40a489: push   $0x1
    0.00 :   40a48b: lea    -0x38(%rbp),%rdx
    0.00 :   40a48f: push   %rdx
    0.00 :   40a490: mov    %rsi,%r9
    0.00 :   40a493: mov    %rcx,%r8
    0.00 :   40a496: mov    $0x0,%ecx
    0.00 :   40a49b: mov    $0x3,%edx
    0.00 :   40a4a0: mov    $0x414f48,%esi
    0.00 :   40a4a5: mov    %rax,%rdi
    0.00 :   40a4a8: call   407280 <PQexecParams@plt>
    0.00 :   40a4ad: add    $0x10,%rsp
  100.00 :   40a4b1: mov    %rax,-0x8(%rbp) // dbt2-client[40a4b1]
    0.00 :   40a4b5: cmpq   $0x0,-0x8(%rbp)
    0.00 :   40a4ba: je     40a4cd <execute_stock_level_libpq+0x157>
    0.00 :   40a4bc: mov    -0x8(%rbp),%rax
    0.00 :   40a4c0: mov    %rax,%rdi
    0.00 :   40a4c3: call   407040 <PQresultStatus@plt>
    0.00 :   40a4c8: cmp    $0x2,%eax
    0.00 :   40a4cb: je     40a50c <execute_stock_level_libpq+0x196>
    0.00 :   40a4cd: mov    -0x58(%rbp),%rax
    0.00 :   40a4d1: mov    0x78(%rax),%rax
    0.00 :   40a4d5: mov    %rax,%rdi
    0.00 :   40a4d8: call   4071c0 <PQerrorMessage@plt>
    0.00 :   40a4dd: mov    %rax,%rcx
    0.00 :   40a4e0: mov    $0x414f6e,%edx
    0.00 :   40a4e5: mov    $0x38,%esi
    0.00 :   40a4ea: mov    $0x414f18,%edi
    0.00 :   40a4ef: mov    $0x0,%eax
    0.00 :   40a4f4: call   40840f <log_error_message>
    0.00 :   40a4f9: mov    -0x8(%rbp),%rax
    0.00 :   40a4fd: mov    %rax,%rdi
    0.00 :   40a500: call   407080 <PQclear@plt>
    0.00 :   40a505: mov    $0x0,%eax
    0.00 :   40a50a: jmp    40a51d <execute_stock_level_libpq+0x1a7>
    0.00 :   40a50c: mov    -0x8(%rbp),%rax
    0.00 :   40a510: mov    %rax,%rdi
    0.00 :   40a513: call   407080 <PQclear@plt>
    0.00 :   40a518: mov    $0x1,%eax
    0.00 :   40a51d: leave
    0.00 :   40a51e: ret

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

  100.00 dbt2-client[413363]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004132c8 <dequeue_transaction>:
         : 6      dequeue_transaction():
    0.00 :   4132c8: push   %rbp
    0.00 :   4132c9: mov    %rsp,%rbp
    0.00 :   4132cc: sub    $0x10,%rsp
    0.00 :   4132d0: mov    $0x41c7c0,%edi
    0.00 :   4132d5: call   4119dc <sem_wait>
    0.00 :   4132da: mov    $0x41c840,%edi
    0.00 :   4132df: call   407400 <pthread_mutex_lock@plt>
    0.00 :   4132e4: mov    0x9535(%rip),%rax        # 41c820 <transaction_head>
    0.00 :   4132eb: mov    %rax,-0x8(%rbp)
    0.00 :   4132ef: mov    0x952a(%rip),%rax        # 41c820 <transaction_head>
    0.00 :   4132f6: test   %rax,%rax
    0.00 :   4132f9: jne    41330f <dequeue_transaction+0x47>
    0.00 :   4132fb: mov    $0x41c840,%edi
    0.00 :   413300: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   413305: mov    $0x0,%eax
    0.00 :   41330a: jmp    413446 <dequeue_transaction+0x17e>
    0.00 :   41330f: mov    0x950a(%rip),%rax        # 41c820 <transaction_head>
    0.00 :   413316: mov    0x2ee8(%rax),%rax
    0.00 :   41331d: test   %rax,%rax
    0.00 :   413320: jne    41333d <dequeue_transaction+0x75>
    0.00 :   413322: movq   $0x0,0x94fb(%rip)        # 41c828 <transaction_tail>
    0.00 :   41332d: mov    0x94f4(%rip),%rax        # 41c828 <transaction_tail>
    0.00 :   413334: mov    %rax,0x94e5(%rip)        # 41c820 <transaction_head>
    0.00 :   41333b: jmp    413352 <dequeue_transaction+0x8a>
    0.00 :   41333d: mov    0x94dc(%rip),%rax        # 41c820 <transaction_head>
    0.00 :   413344: mov    0x2ee8(%rax),%rax
    0.00 :   41334b: mov    %rax,0x94ce(%rip)        # 41c820 <transaction_head>
    0.00 :   413352: mov    $0x41c840,%edi
    0.00 :   413357: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   41335c: mov    -0x8(%rbp),%rax
    0.00 :   413360: mov    0xc(%rax),%eax
  100.00 :   413363: movslq %eax,%rdx // dbt2-client[413363]
    0.00 :   413366: mov    %rdx,%rax
    0.00 :   413369: shl    $0x2,%rax
    0.00 :   41336d: add    %rdx,%rax
    0.00 :   413370: shl    $0x3,%rax
    0.00 :   413374: add    $0x41c8c0,%rax
    0.00 :   41337a: mov    %rax,%rdi
    0.00 :   41337d: call   407400 <pthread_mutex_lock@plt>
    0.00 :   413382: mov    -0x8(%rbp),%rax
    0.00 :   413386: mov    0xc(%rax),%eax
    0.00 :   413389: movslq %eax,%rdx
    0.00 :   41338c: mov    0x41c880(,%rdx,4),%edx
    0.00 :   413393: sub    $0x1,%edx
    0.00 :   413396: cltq
    0.00 :   413398: mov    %edx,0x41c880(,%rax,4)
    0.00 :   41339f: mov    -0x8(%rbp),%rax
    0.00 :   4133a3: mov    0xc(%rax),%eax
    0.00 :   4133a6: movslq %eax,%rdx
    0.00 :   4133a9: mov    %rdx,%rax
    0.00 :   4133ac: shl    $0x2,%rax
    0.00 :   4133b0: add    %rdx,%rax
    0.00 :   4133b3: shl    $0x3,%rax
    0.00 :   4133b7: add    $0x41c8c0,%rax
    0.00 :   4133bd: mov    %rax,%rdi
    0.00 :   4133c0: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   4133c5: mov    -0x8(%rbp),%rax
    0.00 :   4133c9: mov    0xc(%rax),%eax
    0.00 :   4133cc: movslq %eax,%rdx
    0.00 :   4133cf: mov    %rdx,%rax
    0.00 :   4133d2: shl    $0x2,%rax
    0.00 :   4133d6: add    %rdx,%rax
    0.00 :   4133d9: shl    $0x3,%rax
    0.00 :   4133dd: add    $0xc8,%rax
    0.00 :   4133e3: add    $0x41c8c0,%rax
    0.00 :   4133e9: mov    %rax,%rdi
    0.00 :   4133ec: call   407400 <pthread_mutex_lock@plt>
    0.00 :   4133f1: mov    -0x8(%rbp),%rax
    0.00 :   4133f5: mov    0xc(%rax),%eax
    0.00 :   4133f8: movslq %eax,%rdx
    0.00 :   4133fb: add    $0x5,%rdx
    0.00 :   4133ff: mov    0x41c880(,%rdx,4),%edx
    0.00 :   413406: add    $0x1,%edx
    0.00 :   413409: cltq
    0.00 :   41340b: add    $0x5,%rax
    0.00 :   41340f: mov    %edx,0x41c880(,%rax,4)
    0.00 :   413416: mov    -0x8(%rbp),%rax
    0.00 :   41341a: mov    0xc(%rax),%eax
    0.00 :   41341d: movslq %eax,%rdx
    0.00 :   413420: mov    %rdx,%rax
    0.00 :   413423: shl    $0x2,%rax
    0.00 :   413427: add    %rdx,%rax
    0.00 :   41342a: shl    $0x3,%rax
    0.00 :   41342e: add    $0xc8,%rax
    0.00 :   413434: add    $0x41c8c0,%rax
    0.00 :   41343a: mov    %rax,%rdi
    0.00 :   41343d: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   413442: mov    -0x8(%rbp),%rax
    0.00 :   413446: leave
    0.00 :   413447: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[87740]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000087740 <_pthread_cleanup_pop@@GLIBC_2.34>:
         : 6     __pthread_cleanup_pop():
  100.00 :   87740:  endbr64 // libc.so.6[87740]
    0.00 :   87744:  mov    0x18(%rdi),%rax
    0.00 :   87748:  mov    %rax,%fs:0x2f8
    0.00 :   87751:  test   %esi,%esi
    0.00 :   87753:  je     87768 <_pthread_cleanup_pop@@GLIBC_2.34+0x28>
    0.00 :   87755:  mov    0x8(%rdi),%rdx
    0.00 :   87759:  mov    (%rdi),%rax
    0.00 :   8775c:  mov    %rdx,%rdi
    0.00 :   8775f:  jmp    *%rax
    0.00 :   87761:  nopl   0x0(%rax)
    0.00 :   87768:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[cd470]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000cd300 <__strftime_internal>:
         : 6     __strftime_internal():
    0.00 :   cd300:  push   %r15
    0.00 :   cd302:  mov    %rdi,%r10
    0.00 :   cd305:  push   %r14
    0.00 :   cd307:  push   %r13
    0.00 :   cd309:  push   %r12
    0.00 :   cd30b:  mov    %rsi,%r12
    0.00 :   cd30e:  mov    %rdx,%rsi
    0.00 :   cd311:  push   %rbp
    0.00 :   cd312:  push   %rbx
    0.00 :   cd313:  sub    $0xc8,%rsp
    0.00 :   cd31a:  mov    0x100(%rsp),%rax
    0.00 :   cd322:  mov    %r9,0x18(%rsp)
    0.00 :   cd327:  mov    %rcx,(%rsp)
    0.00 :   cd32b:  mov    0x8(%rcx),%r9d
    0.00 :   cd32f:  mov    %r8d,0x28(%rsp)
    0.00 :   cd334:  mov    %rax,%rdi
    0.00 :   cd337:  mov    %rax,0x8(%rsp)
    0.00 :   cd33c:  mov    %fs:0x28,%rax
    0.00 :   cd345:  mov    %rax,0xb8(%rsp)
    0.00 :   cd34d:  mov    0x10(%rdi),%rax
    0.00 :   cd351:  mov    %rax,0x10(%rsp)
    0.00 :   cd356:  mov    0x30(%rcx),%rax
    0.00 :   cd35a:  mov    %rax,0x20(%rsp)
    0.00 :   cd35f:  cmp    $0xc,%r9d
    0.00 :   cd363:  jle    cd400 <__strftime_internal+0x100>
    0.00 :   cd369:  sub    $0xc,%r9d
    0.00 :   cd36d:  movzbl (%rsi),%eax
    0.00 :   cd370:  xor    %r11d,%r11d
    0.00 :   cd373:  test   %al,%al
    0.00 :   cd375:  je     cd3bb <__strftime_internal+0xbb>
    0.00 :   cd377:  mov    %r9d,0x2c(%rsp)
    0.00 :   cd37c:  mov    %r11,%r13
    0.00 :   cd37f:  mov    %r10,%rbx
    0.00 :   cd382:  cmp    $0x25,%al
    0.00 :   cd384:  je     cd418 <__strftime_internal+0x118>
    0.00 :   cd38a:  mov    %r12,%rdx
    0.00 :   cd38d:  sub    %r13,%rdx
    0.00 :   cd390:  cmp    $0x1,%rdx
    0.00 :   cd394:  jbe    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cd396:  test   %rbx,%rbx
    0.00 :   cd399:  je     cd3a1 <__strftime_internal+0xa1>
    0.00 :   cd39b:  mov    %al,(%rbx)
    0.00 :   cd39d:  add    $0x1,%rbx
    0.00 :   cd3a1:  add    $0x1,%r13
    0.00 :   cd3a5:  mov    %rsi,%r14
    0.00 :   cd3a8:  movzbl 0x1(%r14),%eax
    0.00 :   cd3ad:  lea    0x1(%r14),%rsi
    0.00 :   cd3b1:  test   %al,%al
    0.00 :   cd3b3:  jne    cd382 <__strftime_internal+0x82>
    0.00 :   cd3b5:  mov    %r13,%r11
    0.00 :   cd3b8:  mov    %rbx,%r10
    0.00 :   cd3bb:  test   %r10,%r10
    0.00 :   cd3be:  je     cd3d3 <__strftime_internal+0xd3>
    0.00 :   cd3c0:  test   %r12,%r12
    0.00 :   cd3c3:  je     cd3d3 <__strftime_internal+0xd3>
    0.00 :   cd3c5:  movb   $0x0,(%r10)
    0.00 :   cd3c9:  jmp    cd3d3 <__strftime_internal+0xd3>
    0.00 :   cd3cb:  nopl   0x0(%rax,%rax,1)
    0.00 :   cd3d0:  xor    %r11d,%r11d
    0.00 :   cd3d3:  mov    0xb8(%rsp),%rax
    0.00 :   cd3db:  sub    %fs:0x28,%rax
    0.00 :   cd3e4:  jne    cf5ee <__strftime_internal+0x22ee>
    0.00 :   cd3ea:  add    $0xc8,%rsp
    0.00 :   cd3f1:  mov    %r11,%rax
    0.00 :   cd3f4:  pop    %rbx
    0.00 :   cd3f5:  pop    %rbp
    0.00 :   cd3f6:  pop    %r12
    0.00 :   cd3f8:  pop    %r13
    0.00 :   cd3fa:  pop    %r14
    0.00 :   cd3fc:  pop    %r15
    0.00 :   cd3fe:  ret
    0.00 :   cd3ff:  nop
    0.00 :   cd400:  test   %r9d,%r9d
    0.00 :   cd403:  mov    $0xc,%eax
    0.00 :   cd408:  cmove  %eax,%r9d
    0.00 :   cd40c:  jmp    cd36d <__strftime_internal+0x6d>
    0.00 :   cd411:  nopl   0x0(%rax)
    0.00 :   cd418:  xor    %r9d,%r9d
    0.00 :   cd41b:  xor    %r11d,%r11d
    0.00 :   cd41e:  xor    %r15d,%r15d
    0.00 :   cd421:  nopl   0x0(%rax)
    0.00 :   cd428:  movsbl 0x1(%rsi),%r8d
    0.00 :   cd42d:  add    $0x1,%rsi
    0.00 :   cd431:  mov    %r8d,%ecx
    0.00 :   cd434:  cmp    $0x30,%r8b
    0.00 :   cd438:  je     cd5b8 <__strftime_internal+0x2b8>
    0.00 :   cd43e:  jg     cd450 <__strftime_internal+0x150>
    0.00 :   cd440:  cmp    $0x23,%r8b
    0.00 :   cd444:  jne    cd460 <__strftime_internal+0x160>
    0.00 :   cd446:  mov    $0x1,%r9d
    0.00 :   cd44c:  jmp    cd428 <__strftime_internal+0x128>
    0.00 :   cd44e:  xchg   %ax,%ax
    0.00 :   cd450:  cmp    $0x5e,%r8b
    0.00 :   cd454:  jne    cd470 <__strftime_internal+0x170>
    0.00 :   cd456:  mov    $0x1,%r11d
    0.00 :   cd45c:  jmp    cd428 <__strftime_internal+0x128>
    0.00 :   cd45e:  xchg   %ax,%ax
    0.00 :   cd460:  cmp    $0x2d,%r8b
    0.00 :   cd464:  jne    cd488 <__strftime_internal+0x188>
    0.00 :   cd466:  mov    $0x2d,%r15d
    0.00 :   cd46c:  jmp    cd428 <__strftime_internal+0x128>
    0.00 :   cd46e:  xchg   %ax,%ax
  100.00 :   cd470:  cmp    $0x5f,%r8b // libc.so.6[cd470]
    0.00 :   cd474:  jne    cd5c8 <__strftime_internal+0x2c8>
    0.00 :   cd47a:  mov    $0x5f,%r15d
    0.00 :   cd480:  jmp    cd428 <__strftime_internal+0x128>
    0.00 :   cd482:  nopw   0x0(%rax,%rax,1)
    0.00 :   cd488:  mov    $0xffffffff,%ebp
    0.00 :   cd48d:  cmp    $0x4f,%cl
    0.00 :   cd490:  je     cd4b5 <__strftime_internal+0x1b5>
    0.00 :   cd492:  cmp    $0x7a,%cl
    0.00 :   cd495:  ja     cd4e3 <__strftime_internal+0x1e3>
    0.00 :   cd497:  lea    0xc5476(%rip),%rdi        # 192914 <__mon_yday+0x2f4>
    0.00 :   cd49e:  movzbl %cl,%edx
    0.00 :   cd4a1:  movslq (%rdi,%rdx,4),%rdx
    0.00 :   cd4a5:  add    %rdi,%rdx
    0.00 :   cd4a8:  notrack jmp *%rdx
    0.00 :   cd4ab:  or     $0xffffffff,%ebp
    0.00 :   cd4ae:  xchg   %ax,%ax
    0.00 :   cd4b0:  cmp    $0x45,%cl
    0.00 :   cd4b3:  jne    cd48d <__strftime_internal+0x18d>
    0.00 :   cd4b5:  movzbl 0x1(%rsi),%ecx
    0.00 :   cd4b9:  lea    0x1(%rsi),%r14
    0.00 :   cd4bd:  cmp    $0x7a,%cl
    0.00 :   cd4c0:  ja     cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cd4c2:  lea    0xc5637(%rip),%rsi        # 192b00 <__mon_yday+0x4e0>
    0.00 :   cd4c9:  movzbl %cl,%edx
    0.00 :   cd4cc:  movslq (%rsi,%rdx,4),%rdx
    0.00 :   cd4d0:  add    %rsi,%rdx
    0.00 :   cd4d3:  notrack jmp *%rdx
    0.00 :   cd4d6:  cmp    $0x45,%r8d
    0.00 :   cd4da:  jne    ce2c2 <__strftime_internal+0xfc2>
    0.00 :   cd4e0:  mov    %r14,%rsi
    0.00 :   cd4e3:  mov    $0xffffffffffffffff,%r9
    0.00 :   cd4ea:  cmpb   $0x25,(%rsi,%r9,1)
    0.00 :   cd4ef:  lea    -0x1(%r9),%rax
    0.00 :   cd4f3:  jne    cd620 <__strftime_internal+0x320>
    0.00 :   cd4f9:  mov    $0x1,%r8d
    0.00 :   cd4ff:  lea    (%rsi,%r9,1),%r10
    0.00 :   cd503:  mov    %rsi,%r14
    0.00 :   cd506:  sub    %r9d,%r8d
    0.00 :   cd509:  sub    %r8d,%ebp
    0.00 :   cd50c:  mov    $0x0,%ecx
    0.00 :   cd511:  mov    %r12,%rax
    0.00 :   cd514:  cmovns %ebp,%ecx
    0.00 :   cd517:  sub    %r13,%rax
    0.00 :   cd51a:  add    %r8d,%ecx
    0.00 :   cd51d:  movslq %ecx,%rcx
    0.00 :   cd520:  cmp    %rax,%rcx
    0.00 :   cd523:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cd529:  test   %rbx,%rbx
    0.00 :   cd52c:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   cd52e:  test   %ebp,%ebp
    0.00 :   cd530:  jle    cd584 <__strftime_internal+0x284>
    0.00 :   cd532:  movslq %ebp,%rbp
    0.00 :   cd535:  mov    %r9,0x58(%rsp)
    0.00 :   cd53a:  mov    %r8d,0x50(%rsp)
    0.00 :   cd53f:  mov    %rbp,%rdx
    0.00 :   cd542:  mov    %rcx,0x48(%rsp)
    0.00 :   cd547:  mov    %r10,0x40(%rsp)
    0.00 :   cd54c:  mov    %r11d,0x30(%rsp)
    0.00 :   cd551:  cmp    $0x30,%r15d
    0.00 :   cd555:  je     cedb1 <__strftime_internal+0x1ab1>
    0.00 :   cd55b:  mov    $0x20,%esi
    0.00 :   cd560:  mov    %rbx,%rdi
    0.00 :   cd563:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cd568:  mov    0x30(%rsp),%r11d
    0.00 :   cd56d:  mov    0x40(%rsp),%r10
    0.00 :   cd572:  mov    0x48(%rsp),%rcx
    0.00 :   cd577:  mov    0x50(%rsp),%r8d
    0.00 :   cd57c:  mov    0x58(%rsp),%r9
    0.00 :   cd581:  add    %rbp,%rbx
    0.00 :   cd584:  movslq %r8d,%rbp
    0.00 :   cd587:  test   %r11d,%r11d
    0.00 :   cd58a:  jne    cec61 <__strftime_internal+0x1961>
    0.00 :   cd590:  mov    %rbp,%rdx
    0.00 :   cd593:  mov    %r10,%rsi
    0.00 :   cd596:  mov    %rbx,%rdi
    0.00 :   cd599:  mov    %rcx,0x30(%rsp)
    0.00 :   cd59e:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   cd5a3:  mov    0x30(%rsp),%rcx
    0.00 :   cd5a8:  add    %rbp,%rbx
    0.00 :   cd5ab:  add    %rcx,%r13
    0.00 :   cd5ae:  jmp    cd3a8 <__strftime_internal+0xa8>
    0.00 :   cd5b3:  nopl   0x0(%rax,%rax,1)
    0.00 :   cd5b8:  mov    $0x30,%r15d
    0.00 :   cd5be:  jmp    cd428 <__strftime_internal+0x128>
    0.00 :   cd5c3:  nopl   0x0(%rax,%rax,1)
    0.00 :   cd5c8:  lea    -0x30(%r8),%edx
    0.00 :   cd5cc:  cmp    $0x9,%edx
    0.00 :   cd5cf:  ja     cd4ab <__strftime_internal+0x1ab>
    0.00 :   cd5d5:  xor    %ebp,%ebp
    0.00 :   cd5d7:  jmp    cd606 <__strftime_internal+0x306>
    0.00 :   cd5d9:  nopl   0x0(%rax)
    0.00 :   cd5e0:  movsbl (%rsi),%edx
    0.00 :   cd5e3:  je     cd618 <__strftime_internal+0x318>
    0.00 :   cd5e5:  lea    0x0(%rbp,%rbp,4),%ecx
    0.00 :   cd5e9:  lea    -0x30(%rdx,%rcx,2),%ebp
    0.00 :   cd5ed:  movsbl 0x1(%rsi),%r8d
    0.00 :   cd5f2:  add    $0x1,%rsi
    0.00 :   cd5f6:  lea    -0x30(%r8),%edx
    0.00 :   cd5fa:  mov    %r8d,%ecx
    0.00 :   cd5fd:  cmp    $0x9,%edx
    0.00 :   cd600:  ja     cd4b0 <__strftime_internal+0x1b0>
    0.00 :   cd606:  cmp    $0xccccccc,%ebp
    0.00 :   cd60c:  jle    cd5e0 <__strftime_internal+0x2e0>
    0.00 :   cd60e:  mov    $0x7fffffff,%ebp
    0.00 :   cd613:  jmp    cd5ed <__strftime_internal+0x2ed>
    0.00 :   cd615:  nopl   (%rax)
    0.00 :   cd618:  cmp    $0x37,%dl
    0.00 :   cd61b:  jg     cd60e <__strftime_internal+0x30e>
    0.00 :   cd61d:  jmp    cd5e5 <__strftime_internal+0x2e5>
    0.00 :   cd61f:  nop
    0.00 :   cd620:  mov    %rax,%r9
    0.00 :   cd623:  jmp    cd4ea <__strftime_internal+0x1ea>
    0.00 :   cd628:  xor    %r8d,%r8d
    0.00 :   cd62b:  mov    (%rsp),%rax
    0.00 :   cd62f:  mov    0x1c(%rax),%r14d
    0.00 :   cd633:  mov    0x18(%rax),%r10d
    0.00 :   cd637:  mov    0x14(%rax),%r9d
    0.00 :   cd63b:  mov    %r14d,%edx
    0.00 :   cd63e:  sub    %r10d,%edx
    0.00 :   cd641:  mov    %r9d,0x30(%rsp)
    0.00 :   cd646:  add    $0x17e,%edx
    0.00 :   cd64c:  movslq %edx,%rax
    0.00 :   cd64f:  mov    %edx,%edi
    0.00 :   cd651:  imul   $0xffffffff92492493,%rax,%rax
    0.00 :   cd658:  sar    $0x1f,%edi
    0.00 :   cd65b:  shr    $0x20,%rax
    0.00 :   cd65f:  add    %edx,%eax
    0.00 :   cd661:  sar    $0x2,%eax
    0.00 :   cd664:  sub    %edi,%eax
    0.00 :   cd666:  lea    0x0(,%rax,8),%edi
    0.00 :   cd66d:  sub    %eax,%edi
    0.00 :   cd66f:  mov    %r14d,%eax
    0.00 :   cd672:  sub    %edx,%eax
    0.00 :   cd674:  lea    0x3(%rax,%rdi,1),%eax
    0.00 :   cd678:  test   %eax,%eax
    0.00 :   cd67a:  js     cee0a <__strftime_internal+0x1b0a>
    0.00 :   cd680:  mov    0x30(%rsp),%r9d
    0.00 :   cd685:  mov    $0x16d,%edx
    0.00 :   cd68a:  lea    0x76c(%r9),%edi
    0.00 :   cd691:  and    $0x3,%r9d
    0.00 :   cd695:  jne    cd6d4 <__strftime_internal+0x3d4>
    0.00 :   cd697:  imul   $0xc28f5c29,%edi,%r9d
    0.00 :   cd69e:  add    $0x51eb850,%r9d
    0.00 :   cd6a5:  mov    %r9d,%edx
    0.00 :   cd6a8:  ror    $0x2,%edx
    0.00 :   cd6ab:  mov    %edx,0x40(%rsp)
    0.00 :   cd6af:  cmpl   $0x28f5c28,0x40(%rsp)
    0.00 :   cd6b7:  mov    $0x16e,%edx
    0.00 :   cd6bc:  ja     cd6d4 <__strftime_internal+0x3d4>
    0.00 :   cd6be:  ror    $0x4,%r9d
    0.00 :   cd6c2:  xor    %edx,%edx
    0.00 :   cd6c4:  cmp    $0xa3d70a,%r9d
    0.00 :   cd6cb:  setbe  %dl
    0.00 :   cd6ce:  add    $0x16d,%edx
    0.00 :   cd6d4:  sub    %edx,%r14d
    0.00 :   cd6d7:  mov    %r14d,%r9d
    0.00 :   cd6da:  sub    %r10d,%r9d
    0.00 :   cd6dd:  add    $0x17e,%r9d
    0.00 :   cd6e4:  movslq %r9d,%rdx
    0.00 :   cd6e7:  mov    %r9d,%r10d
    0.00 :   cd6ea:  imul   $0xffffffff92492493,%rdx,%rdx
    0.00 :   cd6f1:  sar    $0x1f,%r10d
    0.00 :   cd6f5:  shr    $0x20,%rdx
    0.00 :   cd6f9:  add    %r9d,%edx
    0.00 :   cd6fc:  sar    $0x2,%edx
    0.00 :   cd6ff:  sub    %r10d,%edx
    0.00 :   cd702:  lea    0x0(,%rdx,8),%r10d
    0.00 :   cd70a:  sub    %edx,%r10d
    0.00 :   cd70d:  mov    %r14d,%edx
    0.00 :   cd710:  sub    %r9d,%edx
    0.00 :   cd713:  lea    0x3(%rdx,%r10,1),%edx
    0.00 :   cd718:  test   %edx,%edx
    0.00 :   cd71a:  js     cd728 <__strftime_internal+0x428>
    0.00 :   cd71c:  mov    0x30(%rsp),%edi
    0.00 :   cd720:  mov    %edx,%eax
    0.00 :   cd722:  add    $0x76d,%edi
    0.00 :   cd728:  cmp    $0x47,%cl
    0.00 :   cd72b:  je     cef48 <__strftime_internal+0x1c48>
    0.00 :   cd731:  cmp    $0x67,%cl
    0.00 :   cd734:  jne    cef5e <__strftime_internal+0x1c5e>
    0.00 :   cd73a:  mov    $0x2,%eax
    0.00 :   cd73f:  mov    %edi,%edx
    0.00 :   cd741:  mov    %rsi,%r14
    0.00 :   cd744:  cmp    %eax,%ebp
    0.00 :   cd746:  cmovge %ebp,%eax
    0.00 :   cd749:  sar    $0x1f,%edx
    0.00 :   cd74c:  mov    %eax,0x30(%rsp)
    0.00 :   cd750:  movslq %edi,%rax
    0.00 :   cd753:  imul   $0x51eb851f,%rax,%rax
    0.00 :   cd75a:  sar    $0x25,%rax
    0.00 :   cd75e:  sub    %edx,%eax
    0.00 :   cd760:  imul   $0x64,%eax,%eax
    0.00 :   cd763:  sub    %eax,%edi
    0.00 :   cd765:  mov    %edi,%edx
    0.00 :   cd767:  add    $0x64,%edx
    0.00 :   cd76a:  mov    %rdx,%rax
    0.00 :   cd76d:  imul   $0x51eb851f,%rdx,%rdx
    0.00 :   cd774:  shr    $0x25,%rdx
    0.00 :   cd778:  imul   $0x64,%edx,%edx
    0.00 :   cd77b:  sub    %edx,%eax
    0.00 :   cd77d:  mov    %eax,%edi
    0.00 :   cd77f:  mov    %edi,%edx
    0.00 :   cd781:  xor    %r9d,%r9d
    0.00 :   cd784:  cmp    $0x4f,%r8d
    0.00 :   cd788:  jne    cdd0f <__strftime_internal+0xa0f>
    0.00 :   cd78e:  xchg   %ax,%ax
    0.00 :   cd790:  mov    0x10(%rsp),%rsi
    0.00 :   cd795:  mov    %r11d,0x48(%rsp)
    0.00 :   cd79a:  mov    %edi,0x40(%rsp)
    0.00 :   cd79e:  call   d2400 <_nl_get_alt_digit>
    0.00 :   cd7a3:  mov    0x40(%rsp),%edx
    0.00 :   cd7a7:  mov    0x48(%rsp),%r11d
    0.00 :   cd7ac:  test   %rax,%rax
    0.00 :   cd7af:  je     cec28 <__strftime_internal+0x1928>
    0.00 :   cd7b5:  mov    %rax,%rdi
    0.00 :   cd7b8:  mov    %edx,0x48(%rsp)
    0.00 :   cd7bc:  mov    %r11d,0x40(%rsp)
    0.00 :   cd7c1:  mov    %rax,0x50(%rsp)
    0.00 :   cd7c6:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   cd7cb:  mov    0x40(%rsp),%r11d
    0.00 :   cd7d0:  mov    0x48(%rsp),%edx
    0.00 :   cd7d4:  test   %rax,%rax
    0.00 :   cd7d7:  mov    %rax,%r8
    0.00 :   cd7da:  je     cec28 <__strftime_internal+0x1928>
    0.00 :   cd7e0:  sub    %eax,%ebp
    0.00 :   cd7e2:  mov    $0x0,%r9d
    0.00 :   cd7e8:  cmovns %ebp,%r9d
    0.00 :   cd7ec:  add    %eax,%r9d
    0.00 :   cd7ef:  mov    %r12,%rax
    0.00 :   cd7f2:  movslq %r9d,%r9
    0.00 :   cd7f5:  sub    %r13,%rax
    0.00 :   cd7f8:  cmp    %rax,%r9
    0.00 :   cd7fb:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cd801:  test   %rbx,%rbx
    0.00 :   cd804:  je     cd87e <__strftime_internal+0x57e>
    0.00 :   cd806:  test   %ebp,%ebp
    0.00 :   cd808:  mov    0x50(%rsp),%rcx
    0.00 :   cd80d:  jle    cd857 <__strftime_internal+0x557>
    0.00 :   cd80f:  mov    %r8,0x50(%rsp)
    0.00 :   cd814:  movslq %ebp,%rbp
    0.00 :   cd817:  mov    %rcx,0x48(%rsp)
    0.00 :   cd81c:  cmp    $0x30,%r15d
    0.00 :   cd820:  je     ceddc <__strftime_internal+0x1adc>
    0.00 :   cd826:  mov    %rbp,%rdx
    0.00 :   cd829:  mov    $0x20,%esi
    0.00 :   cd82e:  mov    %rbx,%rdi
    0.00 :   cd831:  mov    %r11d,0x40(%rsp)
    0.00 :   cd836:  mov    %r9,0x30(%rsp)
    0.00 :   cd83b:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cd840:  mov    0x30(%rsp),%r9
    0.00 :   cd845:  mov    0x40(%rsp),%r11d
    0.00 :   cd84a:  mov    0x48(%rsp),%rcx
    0.00 :   cd84f:  mov    0x50(%rsp),%r8
    0.00 :   cd854:  add    %rbp,%rbx
    0.00 :   cd857:  movslq %r8d,%rbp
    0.00 :   cd85a:  test   %r11d,%r11d
    0.00 :   cd85d:  jne    cec89 <__strftime_internal+0x1989>
    0.00 :   cd863:  mov    %rbp,%rdx
    0.00 :   cd866:  mov    %rcx,%rsi
    0.00 :   cd869:  mov    %rbx,%rdi
    0.00 :   cd86c:  mov    %r9,0x30(%rsp)
    0.00 :   cd871:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   cd876:  mov    0x30(%rsp),%r9
    0.00 :   cd87b:  add    %rbp,%rbx
    0.00 :   cd87e:  add    %r9,%r13
    0.00 :   cd881:  jmp    cd3a8 <__strftime_internal+0xa8>
    0.00 :   cd886:  mov    %r14,%rsi
    0.00 :   cd889:  cmp    $0x45,%r8d
    0.00 :   cd88d:  jne    cd62b <__strftime_internal+0x32b>
    0.00 :   cd893:  jmp    cd4e3 <__strftime_internal+0x1e3>
    0.00 :   cd898:  test   %r9d,%r9d
    0.00 :   cd89b:  jne    cf199 <__strftime_internal+0x1e99>
    0.00 :   cd8a1:  xor    %r8d,%r8d
    0.00 :   cd8a4:  mov    %rsi,%r14
    0.00 :   cd8a7:  mov    %r11d,%r9d
    0.00 :   cd8aa:  mov    (%rsp),%rax
    0.00 :   cd8ae:  mov    0x10(%rax),%edx
    0.00 :   cd8b1:  mov    %edx,%ecx
    0.00 :   cd8b3:  cmp    $0x4f,%r8d
    0.00 :   cd8b7:  je     cef8f <__strftime_internal+0x1c8f>
    0.00 :   cd8bd:  mov    $0x1,%r8d
    0.00 :   cd8c3:  cmp    $0xb,%edx
    0.00 :   cd8c6:  ja     cd8f5 <__strftime_internal+0x5f5>
    0.00 :   cd8c8:  lea    0x2000e(%rdx),%eax
    0.00 :   cd8ce:  mov    0x10(%rsp),%rdi
    0.00 :   cd8d3:  mov    %r9d,0x40(%rsp)
    0.00 :   cd8d8:  movzwl %ax,%eax
    0.00 :   cd8db:  mov    %edx,0x30(%rsp)
    0.00 :   cd8df:  mov    0x38(%rdi,%rax,8),%rdi
    0.00 :   cd8e4:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   cd8e9:  mov    0x40(%rsp),%r9d
    0.00 :   cd8ee:  mov    0x30(%rsp),%ecx
    0.00 :   cd8f2:  mov    %eax,%r8d
    0.00 :   cd8f5:  mov    %ebp,%eax
    0.00 :   cd8f7:  mov    $0x0,%edx
    0.00 :   cd8fc:  sub    %r8d,%eax
    0.00 :   cd8ff:  cmovns %eax,%edx
    0.00 :   cd902:  add    %r8d,%edx
    0.00 :   cd905:  movslq %edx,%rbp
    0.00 :   cd908:  mov    %r12,%rdx
    0.00 :   cd90b:  sub    %r13,%rdx
    0.00 :   cd90e:  cmp    %rdx,%rbp
    0.00 :   cd911:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cd917:  test   %rbx,%rbx
    0.00 :   cd91a:  je     cd9a0 <__strftime_internal+0x6a0>
    0.00 :   cd920:  test   %eax,%eax
    0.00 :   cd922:  jle    cd967 <__strftime_internal+0x667>
    0.00 :   cd924:  movslq %eax,%rdx
    0.00 :   cd927:  mov    %r8d,0x48(%rsp)
    0.00 :   cd92c:  lea    (%rbx,%rdx,1),%rax
    0.00 :   cd930:  mov    %r9d,0x40(%rsp)
    0.00 :   cd935:  mov    %rax,0x30(%rsp)
    0.00 :   cd93a:  cmp    $0x30,%r15d
    0.00 :   cd93e:  je     cf44b <__strftime_internal+0x214b>
    0.00 :   cd944:  mov    %rbx,%rdi
    0.00 :   cd947:  mov    $0x20,%esi
    0.00 :   cd94c:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cd951:  mov    (%rsp),%rax
    0.00 :   cd955:  mov    0x30(%rsp),%rbx
    0.00 :   cd95a:  mov    0x48(%rsp),%r8d
    0.00 :   cd95f:  mov    0x40(%rsp),%r9d
    0.00 :   cd964:  mov    0x10(%rax),%ecx
    0.00 :   cd967:  movslq %r8d,%r15
    0.00 :   cd96a:  lea    0xcaaa0(%rip),%rsi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cd971:  test   %r9d,%r9d
    0.00 :   cd974:  jne    cf408 <__strftime_internal+0x2108>
    0.00 :   cd97a:  cmp    $0xb,%ecx
    0.00 :   cd97d:  ja     cd992 <__strftime_internal+0x692>
    0.00 :   cd97f:  mov    0x10(%rsp),%rdi
    0.00 :   cd984:  lea    0x2000e(%rcx),%eax
    0.00 :   cd98a:  movzwl %ax,%eax
    0.00 :   cd98d:  mov    0x38(%rdi,%rax,8),%rsi
    0.00 :   cd992:  mov    %r15,%rdx
    0.00 :   cd995:  mov    %rbx,%rdi
    0.00 :   cd998:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   cd99d:  add    %r15,%rbx
    0.00 :   cd9a0:  add    %rbp,%r13
    0.00 :   cd9a3:  jmp    cd3a8 <__strftime_internal+0xa8>
    0.00 :   cd9a8:  test   %r9d,%r9d
    0.00 :   cd9ab:  jne    cf3b0 <__strftime_internal+0x20b0>
    0.00 :   cd9b1:  mov    %r11d,%r9d
    0.00 :   cd9b4:  cmp    $0x45,%r8d
    0.00 :   cd9b8:  jne    cd8aa <__strftime_internal+0x5aa>
    0.00 :   cd9be:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cd9c3:  mov    %r14,%rsi
    0.00 :   cd9c6:  cmpb   $0x25,-0x1(%rsi)
    0.00 :   cd9ca:  lea    -0x1(%rsi),%r10
    0.00 :   cd9ce:  jne    ceed9 <__strftime_internal+0x1bd9>
    0.00 :   cd9d4:  mov    %r10,%r14
    0.00 :   cd9d7:  mov    $0x1,%r8d
    0.00 :   cd9dd:  xor    %r9d,%r9d
    0.00 :   cd9e0:  jmp    cd509 <__strftime_internal+0x209>
    0.00 :   cd9e5:  mov    %rsi,%r14
    0.00 :   cd9e8:  lea    0xcaae2(%rip),%rax        # 1984d1 <_nl_C_name+0x55>
    0.00 :   cd9ef:  mov    %rax,0x30(%rsp)
    0.00 :   cd9f4:  nopl   0x0(%rax)
    0.00 :   cd9f8:  mov    %r11d,0x40(%rsp)
    0.00 :   cd9fd:  sub    $0x8,%rsp
    0.00 :   cda01:  xor    %edi,%edi
    0.00 :   cda03:  mov    $0xffffffffffffffff,%rsi
    0.00 :   cda0a:  push   0x10(%rsp)
    0.00 :   cda0e:  mov    0x40(%rsp),%rdx
    0.00 :   cda13:  mov    0x28(%rsp),%r9
    0.00 :   cda18:  mov    0x38(%rsp),%r8d
    0.00 :   cda1d:  mov    0x10(%rsp),%rcx
    0.00 :   cda22:  call   cd300 <__strftime_internal>
    0.00 :   cda27:  mov    %ebp,%edx
    0.00 :   cda29:  mov    %r12,%rbp
    0.00 :   cda2c:  pop    %r9
    0.00 :   cda2e:  sub    %eax,%edx
    0.00 :   cda30:  mov    %rax,%r10
    0.00 :   cda33:  mov    $0x0,%eax
    0.00 :   cda38:  pop    %r11
    0.00 :   cda3a:  cmovns %edx,%eax
    0.00 :   cda3d:  sub    %r13,%rbp
    0.00 :   cda40:  add    %r10d,%eax
    0.00 :   cda43:  cltq
    0.00 :   cda45:  cmp    %rbp,%rax
    0.00 :   cda48:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cda4e:  add    %rax,%r13
    0.00 :   cda51:  test   %rbx,%rbx
    0.00 :   cda54:  je     cd3a8 <__strftime_internal+0xa8>
    0.00 :   cda5a:  test   %edx,%edx
    0.00 :   cda5c:  mov    0x40(%rsp),%r11d
    0.00 :   cda61:  mov    %rbx,%rdi
    0.00 :   cda64:  jle    cda9f <__strftime_internal+0x79f>
    0.00 :   cda66:  movslq %edx,%rdx
    0.00 :   cda69:  mov    %r10,0x50(%rsp)
    0.00 :   cda6e:  mov    %r11d,0x48(%rsp)
    0.00 :   cda73:  mov    %rdx,0x40(%rsp)
    0.00 :   cda78:  cmp    $0x30,%r15d
    0.00 :   cda7c:  je     ced93 <__strftime_internal+0x1a93>
    0.00 :   cda82:  mov    $0x20,%esi
    0.00 :   cda87:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cda8c:  mov    0x40(%rsp),%rdx
    0.00 :   cda91:  mov    0x48(%rsp),%r11d
    0.00 :   cda96:  mov    0x50(%rsp),%r10
    0.00 :   cda9b:  lea    (%rbx,%rdx,1),%rdi
    0.00 :   cda9f:  mov    %r10,0x48(%rsp)
    0.00 :   cdaa4:  sub    $0x8,%rsp
    0.00 :   cdaa8:  mov    %rbp,%rsi
    0.00 :   cdaab:  mov    %r11d,0x48(%rsp)
    0.00 :   cdab0:  push   0x10(%rsp)
    0.00 :   cdab4:  mov    0x40(%rsp),%rdx
    0.00 :   cdab9:  mov    0x28(%rsp),%r9
    0.00 :   cdabe:  mov    0x38(%rsp),%r8d
    0.00 :   cdac3:  mov    0x10(%rsp),%rcx
    0.00 :   cdac8:  mov    %rdi,0x40(%rsp)
    0.00 :   cdacd:  call   cd300 <__strftime_internal>
    0.00 :   cdad2:  mov    0x58(%rsp),%r10
    0.00 :   cdad7:  mov    0x40(%rsp),%rdi
    0.00 :   cdadc:  movslq %r10d,%r10
    0.00 :   cdadf:  lea    (%rdi,%r10,1),%rax
    0.00 :   cdae3:  pop    %rdi
    0.00 :   cdae4:  pop    %r8
    0.00 :   cdae6:  mov    0x40(%rsp),%r11d
    0.00 :   cdaeb:  test   %r11d,%r11d
    0.00 :   cdaee:  jne    ced5b <__strftime_internal+0x1a5b>
    0.00 :   cdaf4:  mov    %rax,%rbx
    0.00 :   cdaf7:  jmp    cd3a8 <__strftime_internal+0xa8>
    0.00 :   cdafc:  mov    %rsi,%r14
    0.00 :   cdaff:  xor    %r8d,%r8d
    0.00 :   cdb02:  mov    (%rsp),%rax
    0.00 :   cdb06:  mov    0x20(%rax),%edx
    0.00 :   cdb09:  test   %edx,%edx
    0.00 :   cdb0b:  js     cd3a8 <__strftime_internal+0xa8>
    0.00 :   cdb11:  lea    -0x1(%rbp),%edx
    0.00 :   cdb14:  mov    0x28(%rax),%r9
    0.00 :   cdb18:  xor    %eax,%eax
    0.00 :   cdb1a:  test   %edx,%edx
    0.00 :   cdb1c:  cmovns %edx,%eax
    0.00 :   cdb1f:  mov    %r9d,%ecx
    0.00 :   cdb22:  add    $0x1,%eax
    0.00 :   cdb25:  movslq %eax,%rdi
    0.00 :   cdb28:  mov    %r12,%rax
    0.00 :   cdb2b:  mov    %rdi,0x30(%rsp)
    0.00 :   cdb30:  sub    %r13,%rax
    0.00 :   cdb33:  test   %r9d,%r9d
    0.00 :   cdb36:  js     cf0dc <__strftime_internal+0x1ddc>
    0.00 :   cdb3c:  cmp    %rax,0x30(%rsp)
    0.00 :   cdb41:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cdb47:  test   %rbx,%rbx
    0.00 :   cdb4a:  je     cdba0 <__strftime_internal+0x8a0>
    0.00 :   cdb4c:  test   %edx,%edx
    0.00 :   cdb4e:  jle    cdb99 <__strftime_internal+0x899>
    0.00 :   cdb50:  movslq %edx,%rax
    0.00 :   cdb53:  mov    %r8d,0x58(%rsp)
    0.00 :   cdb58:  mov    %rax,0x40(%rsp)
    0.00 :   cdb5d:  mov    %r9d,0x50(%rsp)
    0.00 :   cdb62:  mov    %r11d,0x48(%rsp)
    0.00 :   cdb67:  cmp    $0x30,%r15d
    0.00 :   cdb6b:  je     cf575 <__strftime_internal+0x2275>
    0.00 :   cdb71:  mov    0x40(%rsp),%rdx
    0.00 :   cdb76:  mov    $0x20,%esi
    0.00 :   cdb7b:  mov    %rbx,%rdi
    0.00 :   cdb7e:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cdb83:  mov    0x48(%rsp),%r11d
    0.00 :   cdb88:  mov    0x50(%rsp),%ecx
    0.00 :   cdb8c:  mov    0x58(%rsp),%r8d
    0.00 :   cdb91:  mov    0x40(%rsp),%rax
    0.00 :   cdb96:  add    %rax,%rbx
    0.00 :   cdb99:  movb   $0x2b,(%rbx)
    0.00 :   cdb9c:  add    $0x1,%rbx
    0.00 :   cdba0:  mov    0x30(%rsp),%rax
    0.00 :   cdba5:  add    %rax,%r13
    0.00 :   cdba8:  mov    %ecx,%edx
    0.00 :   cdbaa:  mov    $0x88888889,%ecx
    0.00 :   cdbaf:  mov    $0x4,%eax
    0.00 :   cdbb4:  imul   %rcx,%rdx
    0.00 :   cdbb8:  shr    $0x25,%rdx
    0.00 :   cdbbc:  cmp    %eax,%ebp
    0.00 :   cdbbe:  cmovge %ebp,%eax
    0.00 :   cdbc1:  mov    %eax,0x30(%rsp)
    0.00 :   cdbc5:  mov    %edx,%eax
    0.00 :   cdbc7:  imul   %rcx,%rax
    0.00 :   cdbcb:  shr    $0x25,%rax
    0.00 :   cdbcf:  imul   $0x28,%eax,%eax
    0.00 :   cdbd2:  lea    (%rax,%rdx,1),%edi
    0.00 :   cdbd5:  jmp    cd77f <__strftime_internal+0x47f>
    0.00 :   cdbda:  mov    %rsi,%r14
    0.00 :   cdbdd:  mov    (%rsp),%rax
    0.00 :   cdbe1:  test   %r9d,%r9d
    0.00 :   cdbe4:  mov    $0x1,%r8d
    0.00 :   cdbea:  cmove  %r11d,%r9d
    0.00 :   cdbee:  movslq 0x18(%rax),%rdx
    0.00 :   cdbf2:  cmp    $0x6,%edx
    0.00 :   cdbf5:  ja     cdc1f <__strftime_internal+0x91f>
    0.00 :   cdbf7:  mov    0x10(%rsp),%rdi
    0.00 :   cdbfc:  movslq %edx,%rax
    0.00 :   cdbff:  mov    %r9d,0x40(%rsp)
    0.00 :   cdc04:  mov    %edx,0x30(%rsp)
    0.00 :   cdc08:  mov    0x38(%rdi,%rax,8),%rdi
    0.00 :   cdc0d:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   cdc12:  mov    0x40(%rsp),%r9d
    0.00 :   cdc17:  movslq 0x30(%rsp),%rdx
    0.00 :   cdc1c:  mov    %eax,%r8d
    0.00 :   cdc1f:  sub    %r8d,%ebp
    0.00 :   cdc22:  mov    $0x0,%ecx
    0.00 :   cdc27:  mov    %r12,%rax
    0.00 :   cdc2a:  cmovns %ebp,%ecx
    0.00 :   cdc2d:  sub    %r13,%rax
    0.00 :   cdc30:  add    %r8d,%ecx
    0.00 :   cdc33:  movslq %ecx,%rcx
    0.00 :   cdc36:  cmp    %rax,%rcx
    0.00 :   cdc39:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cdc3f:  test   %rbx,%rbx
    0.00 :   cdc42:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   cdc48:  test   %ebp,%ebp
    0.00 :   cdc4a:  jle    cdc93 <__strftime_internal+0x993>
    0.00 :   cdc4c:  movslq %ebp,%rdx
    0.00 :   cdc4f:  mov    %r8d,0x48(%rsp)
    0.00 :   cdc54:  mov    %rcx,0x40(%rsp)
    0.00 :   cdc59:  lea    (%rbx,%rdx,1),%rbp
    0.00 :   cdc5d:  mov    %r9d,0x30(%rsp)
    0.00 :   cdc62:  cmp    $0x30,%r15d
    0.00 :   cdc66:  je     cf2df <__strftime_internal+0x1fdf>
    0.00 :   cdc6c:  mov    %rbx,%rdi
    0.00 :   cdc6f:  mov    $0x20,%esi
    0.00 :   cdc74:  mov    %rbp,%rbx
    0.00 :   cdc77:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cdc7c:  mov    (%rsp),%rax
    0.00 :   cdc80:  mov    0x48(%rsp),%r8d
    0.00 :   cdc85:  mov    0x40(%rsp),%rcx
    0.00 :   cdc8a:  mov    0x30(%rsp),%r9d
    0.00 :   cdc8f:  movslq 0x18(%rax),%rdx
    0.00 :   cdc93:  movslq %r8d,%rbp
    0.00 :   cdc96:  test   %r9d,%r9d
    0.00 :   cdc99:  jne    cf29e <__strftime_internal+0x1f9e>
    0.00 :   cdc9f:  lea    0xca76b(%rip),%rsi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cdca6:  cmp    $0x6,%edx
    0.00 :   cdca9:  ja     cdcb5 <__strftime_internal+0x9b5>
    0.00 :   cdcab:  mov    0x10(%rsp),%rax
    0.00 :   cdcb0:  mov    0x38(%rax,%rdx,8),%rsi
    0.00 :   cdcb5:  mov    %rbp,%rdx
    0.00 :   cdcb8:  mov    %rbx,%rdi
    0.00 :   cdcbb:  mov    %rcx,0x30(%rsp)
    0.00 :   cdcc0:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   cdcc5:  mov    0x30(%rsp),%rcx
    0.00 :   cdcca:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cdccf:  mov    %rsi,%r14
    0.00 :   cdcd2:  xor    %r8d,%r8d
    0.00 :   cdcd5:  mov    $0x2,%eax
    0.00 :   cdcda:  cmp    %eax,%ebp
    0.00 :   cdcdc:  cmovge %ebp,%eax
    0.00 :   cdcdf:  mov    %eax,0x30(%rsp)
    0.00 :   cdce3:  mov    (%rsp),%rax
    0.00 :   cdce7:  mov    0xc(%rax),%edi
    0.00 :   cdcea:  nopw   0x0(%rax,%rax,1)
    0.00 :   cdcf0:  cmp    $0x4f,%r8d
    0.00 :   cdcf4:  jne    cdcfe <__strftime_internal+0x9fe>
    0.00 :   cdcf6:  test   %edi,%edi
    0.00 :   cdcf8:  jns    cd790 <__strftime_internal+0x490>
    0.00 :   cdcfe:  mov    %edi,%edx
    0.00 :   cdd00:  xor    %r9d,%r9d
    0.00 :   cdd03:  test   %edi,%edi
    0.00 :   cdd05:  jns    cdd0f <__strftime_internal+0xa0f>
    0.00 :   cdd07:  neg    %edx
    0.00 :   cdd09:  mov    $0x1,%r9d
    0.00 :   cdd0f:  lea    0xb6(%rsp),%rdi
    0.00 :   cdd17:  mov    $0xcccccccd,%r10d
    0.00 :   cdd1d:  mov    %rdi,%rcx
    0.00 :   cdd20:  mov    %edx,%eax
    0.00 :   cdd22:  mov    %edx,%esi
    0.00 :   cdd24:  sub    $0x1,%rcx
    0.00 :   cdd28:  imul   %r10,%rax
    0.00 :   cdd2c:  shr    $0x23,%rax
    0.00 :   cdd30:  lea    (%rax,%rax,4),%r8d
    0.00 :   cdd34:  add    %r8d,%r8d
    0.00 :   cdd37:  sub    %r8d,%esi
    0.00 :   cdd3a:  add    $0x30,%esi
    0.00 :   cdd3d:  mov    %sil,(%rcx)
    0.00 :   cdd40:  mov    %edx,%esi
    0.00 :   cdd42:  mov    %eax,%edx
    0.00 :   cdd44:  cmp    $0x9,%esi
    0.00 :   cdd47:  ja     cdd20 <__strftime_internal+0xa20>
    0.00 :   cdd49:  test   %r9d,%r9d
    0.00 :   cdd4c:  je     cdd56 <__strftime_internal+0xa56>
    0.00 :   cdd4e:  movb   $0x2d,-0x1(%rcx)
    0.00 :   cdd52:  sub    $0x1,%rcx
    0.00 :   cdd56:  mov    %rdi,%r8
    0.00 :   cdd59:  sub    %rcx,%r8
    0.00 :   cdd5c:  cmp    $0x2d,%r15d
    0.00 :   cdd60:  je     cddeb <__strftime_internal+0xaeb>
    0.00 :   cdd66:  mov    0x30(%rsp),%r10d
    0.00 :   cdd6b:  sub    %r8d,%r10d
    0.00 :   cdd6e:  test   %r10d,%r10d
    0.00 :   cdd71:  jle    cddeb <__strftime_internal+0xaeb>
    0.00 :   cdd73:  mov    %r12,%rax
    0.00 :   cdd76:  sub    %r13,%rax
    0.00 :   cdd79:  cmp    $0x5f,%r15d
    0.00 :   cdd7d:  je     cecdf <__strftime_internal+0x19df>
    0.00 :   cdd83:  movslq 0x30(%rsp),%rdx
    0.00 :   cdd88:  cmp    %rax,%rdx
    0.00 :   cdd8b:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cdd91:  mov    %r10d,%ebp
    0.00 :   cdd94:  test   %r9d,%r9d
    0.00 :   cdd97:  je     ced4a <__strftime_internal+0x1a4a>
    0.00 :   cdd9d:  add    $0x1,%rcx
    0.00 :   cdda1:  add    $0x1,%r13
    0.00 :   cdda5:  sub    %rcx,%rdi
    0.00 :   cdda8:  mov    %rdi,%r8
    0.00 :   cddab:  test   %rbx,%rbx
    0.00 :   cddae:  je     cdde6 <__strftime_internal+0xae6>
    0.00 :   cddb0:  movb   $0x2d,(%rbx)
    0.00 :   cddb3:  lea    0x1(%rbx),%rdi
    0.00 :   cddb7:  mov    %rbp,%rdx
    0.00 :   cddba:  mov    $0x30,%esi
    0.00 :   cddbf:  mov    %r8,0x48(%rsp)
    0.00 :   cddc4:  mov    %rcx,0x40(%rsp)
    0.00 :   cddc9:  mov    %r11d,0x30(%rsp)
    0.00 :   cddce:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cddd3:  mov    0x48(%rsp),%r8
    0.00 :   cddd8:  mov    0x40(%rsp),%rcx
    0.00 :   cdddd:  mov    0x30(%rsp),%r11d
    0.00 :   cdde2:  lea    (%rax,%rbp,1),%rbx
    0.00 :   cdde6:  add    %rbp,%r13
    0.00 :   cdde9:  xor    %ebp,%ebp
    0.00 :   cddeb:  sub    %r8d,%ebp
    0.00 :   cddee:  mov    $0x0,%eax
    0.00 :   cddf3:  mov    %r8d,%r9d
    0.00 :   cddf6:  cmovns %ebp,%eax
    0.00 :   cddf9:  add    %eax,%r8d
    0.00 :   cddfc:  mov    %r12,%rax
    0.00 :   cddff:  movslq %r8d,%r8
    0.00 :   cde02:  sub    %r13,%rax
    0.00 :   cde05:  cmp    %rax,%r8
    0.00 :   cde08:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cde0e:  test   %rbx,%rbx
    0.00 :   cde11:  je     cde86 <__strftime_internal+0xb86>
    0.00 :   cde13:  test   %ebp,%ebp
    0.00 :   cde15:  jle    cde5f <__strftime_internal+0xb5f>
    0.00 :   cde17:  movslq %ebp,%rbp
    0.00 :   cde1a:  mov    %r9d,0x50(%rsp)
    0.00 :   cde1f:  mov    %rcx,0x48(%rsp)
    0.00 :   cde24:  mov    %rbp,%rdx
    0.00 :   cde27:  mov    %r11d,0x40(%rsp)
    0.00 :   cde2c:  mov    %r8,0x30(%rsp)
    0.00 :   cde31:  cmp    $0x30,%r15d
    0.00 :   cde35:  je     cecb9 <__strftime_internal+0x19b9>
    0.00 :   cde3b:  mov    $0x20,%esi
    0.00 :   cde40:  mov    %rbx,%rdi
    0.00 :   cde43:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cde48:  mov    0x30(%rsp),%r8
    0.00 :   cde4d:  mov    0x40(%rsp),%r11d
    0.00 :   cde52:  mov    0x48(%rsp),%rcx
    0.00 :   cde57:  mov    0x50(%rsp),%r9d
    0.00 :   cde5c:  add    %rbp,%rbx
    0.00 :   cde5f:  movslq %r9d,%rbp
    0.00 :   cde62:  test   %r11d,%r11d
    0.00 :   cde65:  jne    cec30 <__strftime_internal+0x1930>
    0.00 :   cde6b:  mov    %rbp,%rdx
    0.00 :   cde6e:  mov    %rcx,%rsi
    0.00 :   cde71:  mov    %rbx,%rdi
    0.00 :   cde74:  mov    %r8,0x30(%rsp)
    0.00 :   cde79:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   cde7e:  mov    0x30(%rsp),%r8
    0.00 :   cde83:  add    %rbp,%rbx
    0.00 :   cde86:  add    %r8,%r13
    0.00 :   cde89:  jmp    cd3a8 <__strftime_internal+0xa8>
    0.00 :   cde8e:  mov    %rsi,%r14
    0.00 :   cde91:  mov    0x10(%rsp),%rax
    0.00 :   cde96:  mov    0x178(%rax),%rax
    0.00 :   cde9d:  mov    %rax,0x30(%rsp)
    0.00 :   cdea2:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   cdea7:  mov    %rsi,%r14
    0.00 :   cdeaa:  mov    0x20(%rsp),%rdi
    0.00 :   cdeaf:  xor    %eax,%eax
    0.00 :   cdeb1:  test   %r9d,%r9d
    0.00 :   cdeb4:  cmovne %eax,%r11d
    0.00 :   cdeb8:  test   %rdi,%rdi
    0.00 :   cdebb:  je     cef29 <__strftime_internal+0x1c29>
    0.00 :   cdec1:  cmpb   $0x0,(%rdi)
    0.00 :   cdec4:  je     ceee1 <__strftime_internal+0x1be1>
    0.00 :   cdeca:  mov    %r11d,0x40(%rsp)
    0.00 :   cdecf:  mov    %r9d,0x30(%rsp)
    0.00 :   cded4:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   cded9:  mov    0x30(%rsp),%r9d
    0.00 :   cdede:  mov    0x40(%rsp),%r11d
    0.00 :   cdee3:  mov    %eax,%r8d
    0.00 :   cdee6:  sub    %eax,%ebp
    0.00 :   cdee8:  xor    %ecx,%ecx
    0.00 :   cdeea:  test   %ebp,%ebp
    0.00 :   cdeec:  mov    %r12,%rax
    0.00 :   cdeef:  cmovns %ebp,%ecx
    0.00 :   cdef2:  sub    %r13,%rax
    0.00 :   cdef5:  add    %r8d,%ecx
    0.00 :   cdef8:  movslq %ecx,%rcx
    0.00 :   cdefb:  cmp    %rax,%rcx
    0.00 :   cdefe:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cdf04:  test   %rbx,%rbx
    0.00 :   cdf07:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   cdf0d:  test   %ebp,%ebp
    0.00 :   cdf0f:  jle    cdf59 <__strftime_internal+0xc59>
    0.00 :   cdf11:  movslq %ebp,%rbp
    0.00 :   cdf14:  mov    %r8d,0x50(%rsp)
    0.00 :   cdf19:  mov    %rcx,0x48(%rsp)
    0.00 :   cdf1e:  mov    %rbp,%rdx
    0.00 :   cdf21:  mov    %r11d,0x40(%rsp)
    0.00 :   cdf26:  mov    %r9d,0x30(%rsp)
    0.00 :   cdf2b:  cmp    $0x30,%r15d
    0.00 :   cdf2f:  je     cf38a <__strftime_internal+0x208a>
    0.00 :   cdf35:  mov    $0x20,%esi
    0.00 :   cdf3a:  mov    %rbx,%rdi
    0.00 :   cdf3d:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cdf42:  mov    0x30(%rsp),%r9d
    0.00 :   cdf47:  mov    0x40(%rsp),%r11d
    0.00 :   cdf4c:  mov    0x48(%rsp),%rcx
    0.00 :   cdf51:  mov    0x50(%rsp),%r8d
    0.00 :   cdf56:  add    %rbp,%rbx
    0.00 :   cdf59:  movslq %r8d,%rbp
    0.00 :   cdf5c:  test   %r9d,%r9d
    0.00 :   cdf5f:  jne    cf1d4 <__strftime_internal+0x1ed4>
    0.00 :   cdf65:  test   %r11d,%r11d
    0.00 :   cdf68:  jne    cf1a4 <__strftime_internal+0x1ea4>
    0.00 :   cdf6e:  mov    0x20(%rsp),%rsi
    0.00 :   cdf73:  mov    %rbp,%rdx
    0.00 :   cdf76:  mov    %rbx,%rdi
    0.00 :   cdf79:  mov    %rcx,0x30(%rsp)
    0.00 :   cdf7e:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   cdf83:  mov    0x30(%rsp),%rcx
    0.00 :   cdf88:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cdf8d:  mov    %rsi,%r14
    0.00 :   cdf90:  xor    %r8d,%r8d
    0.00 :   cdf93:  test   %ebp,%ebp
    0.00 :   cdf95:  mov    $0x1,%eax
    0.00 :   cdf9a:  cmovg  %ebp,%eax
    0.00 :   cdf9d:  mov    %eax,0x30(%rsp)
    0.00 :   cdfa1:  mov    (%rsp),%rax
    0.00 :   cdfa5:  mov    0x14(%rax),%eax
    0.00 :   cdfa8:  mov    %eax,0x40(%rsp)
    0.00 :   cdfac:  lea    0x76c(%rax),%edi
    0.00 :   cdfb2:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   cdfb7:  mov    %rsi,%r14
    0.00 :   cdfba:  xor    %r8d,%r8d
    0.00 :   cdfbd:  test   %ebp,%ebp
    0.00 :   cdfbf:  mov    $0x1,%eax
    0.00 :   cdfc4:  cmovg  %ebp,%eax
    0.00 :   cdfc7:  mov    %eax,0x30(%rsp)
    0.00 :   cdfcb:  mov    (%rsp),%rax
    0.00 :   cdfcf:  mov    0x18(%rax),%edi
    0.00 :   cdfd2:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   cdfd7:  mov    %rsi,%r14
    0.00 :   cdfda:  xor    %r8d,%r8d
    0.00 :   cdfdd:  test   %ebp,%ebp
    0.00 :   cdfdf:  mov    $0x1,%eax
    0.00 :   cdfe4:  cmovg  %ebp,%eax
    0.00 :   cdfe7:  mov    %eax,0x30(%rsp)
    0.00 :   cdfeb:  mov    (%rsp),%rax
    0.00 :   cdfef:  mov    0x18(%rax),%eax
    0.00 :   cdff2:  lea    0x6(%rax),%edx
    0.00 :   cdff5:  mov    %eax,0x40(%rsp)
    0.00 :   cdff9:  movslq %edx,%rax
    0.00 :   cdffc:  mov    %edx,%ecx
    0.00 :   cdffe:  imul   $0xffffffff92492493,%rax,%rax
    0.00 :   ce005:  sar    $0x1f,%ecx
    0.00 :   ce008:  shr    $0x20,%rax
    0.00 :   ce00c:  add    %edx,%eax
    0.00 :   ce00e:  sar    $0x2,%eax
    0.00 :   ce011:  sub    %ecx,%eax
    0.00 :   ce013:  lea    0x0(,%rax,8),%ecx
    0.00 :   ce01a:  sub    %eax,%ecx
    0.00 :   ce01c:  sub    %ecx,%edx
    0.00 :   ce01e:  lea    0x1(%rdx),%edi
    0.00 :   ce021:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce026:  mov    %rsi,%r14
    0.00 :   ce029:  sub    $0x1,%ebp
    0.00 :   ce02c:  mov    $0x0,%ecx
    0.00 :   ce031:  mov    %r12,%rax
    0.00 :   ce034:  cmovns %ebp,%ecx
    0.00 :   ce037:  sub    %r13,%rax
    0.00 :   ce03a:  add    $0x1,%ecx
    0.00 :   ce03d:  movslq %ecx,%rcx
    0.00 :   ce040:  cmp    %rax,%rcx
    0.00 :   ce043:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ce049:  test   %rbx,%rbx
    0.00 :   ce04c:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce052:  test   %ebp,%ebp
    0.00 :   ce054:  jle    ce080 <__strftime_internal+0xd80>
    0.00 :   ce056:  movslq %ebp,%rbp
    0.00 :   ce059:  mov    %rcx,0x30(%rsp)
    0.00 :   ce05e:  mov    %rbp,%rdx
    0.00 :   ce061:  cmp    $0x30,%r15d
    0.00 :   ce065:  je     cf30b <__strftime_internal+0x200b>
    0.00 :   ce06b:  mov    $0x20,%esi
    0.00 :   ce070:  mov    %rbx,%rdi
    0.00 :   ce073:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ce078:  mov    0x30(%rsp),%rcx
    0.00 :   ce07d:  add    %rbp,%rbx
    0.00 :   ce080:  movb   $0x9,(%rbx)
    0.00 :   ce083:  add    $0x1,%rbx
    0.00 :   ce087:  jmp    cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce08c:  mov    %rsi,%r14
    0.00 :   ce08f:  xor    %r8d,%r8d
    0.00 :   ce092:  mov    $0x2,%eax
    0.00 :   ce097:  cmp    %eax,%ebp
    0.00 :   ce099:  cmovge %ebp,%eax
    0.00 :   ce09c:  mov    %eax,0x30(%rsp)
    0.00 :   ce0a0:  mov    (%rsp),%rax
    0.00 :   ce0a4:  movslq 0x14(%rax),%rax
    0.00 :   ce0a8:  mov    %rax,%rdx
    0.00 :   ce0ab:  imul   $0x51eb851f,%rax,%rax
    0.00 :   ce0b2:  mov    %edx,%ecx
    0.00 :   ce0b4:  sar    $0x1f,%ecx
    0.00 :   ce0b7:  sar    $0x25,%rax
    0.00 :   ce0bb:  sub    %ecx,%eax
    0.00 :   ce0bd:  imul   $0x64,%eax,%eax
    0.00 :   ce0c0:  sub    %eax,%edx
    0.00 :   ce0c2:  add    $0x64,%edx
    0.00 :   ce0c5:  mov    %rdx,%rax
    0.00 :   ce0c8:  imul   $0x51eb851f,%rdx,%rdx
    0.00 :   ce0cf:  shr    $0x25,%rdx
    0.00 :   ce0d3:  imul   $0x64,%edx,%edx
    0.00 :   ce0d6:  sub    %edx,%eax
    0.00 :   ce0d8:  mov    %eax,%edi
    0.00 :   ce0da:  jmp    cd77f <__strftime_internal+0x47f>
    0.00 :   ce0df:  mov    %rsi,%r14
    0.00 :   ce0e2:  mov    0x10(%rsp),%rax
    0.00 :   ce0e7:  mov    0x180(%rax),%rax
    0.00 :   ce0ee:  mov    %rax,0x30(%rsp)
    0.00 :   ce0f3:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   ce0f8:  mov    %rsi,%r14
    0.00 :   ce0fb:  xor    %r8d,%r8d
    0.00 :   ce0fe:  mov    $0x2,%eax
    0.00 :   ce103:  mov    (%rsp),%rdi
    0.00 :   ce107:  cmp    %eax,%ebp
    0.00 :   ce109:  cmovge %ebp,%eax
    0.00 :   ce10c:  mov    %eax,0x30(%rsp)
    0.00 :   ce110:  mov    0x1c(%rdi),%eax
    0.00 :   ce113:  sub    0x18(%rdi),%eax
    0.00 :   ce116:  add    $0x7,%eax
    0.00 :   ce119:  movslq %eax,%rdx
    0.00 :   ce11c:  imul   $0xffffffff92492493,%rdx,%rdx
    0.00 :   ce123:  shr    $0x20,%rdx
    0.00 :   ce127:  add    %eax,%edx
    0.00 :   ce129:  sar    $0x1f,%eax
    0.00 :   ce12c:  sar    $0x2,%edx
    0.00 :   ce12f:  mov    %edx,%edi
    0.00 :   ce131:  sub    %eax,%edi
    0.00 :   ce133:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce138:  mov    %rsi,%r14
    0.00 :   ce13b:  xor    %r8d,%r8d
    0.00 :   ce13e:  mov    $0x2,%eax
    0.00 :   ce143:  cmp    %eax,%ebp
    0.00 :   ce145:  cmovge %ebp,%eax
    0.00 :   ce148:  mov    %eax,0x30(%rsp)
    0.00 :   ce14c:  mov    (%rsp),%rax
    0.00 :   ce150:  mov    (%rax),%edi
    0.00 :   ce152:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce157:  mov    %rsi,%r14
    0.00 :   ce15a:  lea    0xca379(%rip),%rax        # 1984da <_nl_C_name+0x5e>
    0.00 :   ce161:  mov    %rax,0x30(%rsp)
    0.00 :   ce166:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   ce16b:  mov    %rsi,%r14
    0.00 :   ce16e:  mov    $0x1,%eax
    0.00 :   ce173:  test   %r9d,%r9d
    0.00 :   ce176:  jne    ced8b <__strftime_internal+0x1a8b>
    0.00 :   ce17c:  mov    %eax,%r9d
    0.00 :   ce17f:  mov    (%rsp),%rax
    0.00 :   ce183:  mov    0x10(%rsp),%rdi
    0.00 :   ce188:  mov    %r11d,0x48(%rsp)
    0.00 :   ce18d:  mov    %r9d,0x40(%rsp)
    0.00 :   ce192:  mov    0x8(%rax),%edx
    0.00 :   ce195:  cmp    $0xb,%edx
    0.00 :   ce198:  mov    %edx,0x30(%rsp)
    0.00 :   ce19c:  setg   %al
    0.00 :   ce19f:  movzbl %al,%eax
    0.00 :   ce1a2:  mov    0x168(%rdi,%rax,8),%rdi
    0.00 :   ce1aa:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   ce1af:  mov    $0x0,%ecx
    0.00 :   ce1b4:  sub    %eax,%ebp
    0.00 :   ce1b6:  mov    %rax,%r8
    0.00 :   ce1b9:  cmovns %ebp,%ecx
    0.00 :   ce1bc:  add    %eax,%ecx
    0.00 :   ce1be:  mov    %r12,%rax
    0.00 :   ce1c1:  movslq %ecx,%rcx
    0.00 :   ce1c4:  sub    %r13,%rax
    0.00 :   ce1c7:  cmp    %rax,%rcx
    0.00 :   ce1ca:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ce1d0:  test   %rbx,%rbx
    0.00 :   ce1d3:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce1d9:  test   %ebp,%ebp
    0.00 :   ce1db:  mov    0x30(%rsp),%edx
    0.00 :   ce1df:  mov    0x40(%rsp),%r9d
    0.00 :   ce1e4:  mov    0x48(%rsp),%r11d
    0.00 :   ce1e9:  jle    ce23b <__strftime_internal+0xf3b>
    0.00 :   ce1eb:  movslq %ebp,%rdx
    0.00 :   ce1ee:  mov    %r8,0x50(%rsp)
    0.00 :   ce1f3:  lea    (%rbx,%rdx,1),%rbp
    0.00 :   ce1f7:  cmp    $0x30,%r15d
    0.00 :   ce1fb:  je     cf0a2 <__strftime_internal+0x1da2>
    0.00 :   ce201:  mov    %rbx,%rdi
    0.00 :   ce204:  mov    $0x20,%esi
    0.00 :   ce209:  mov    %r11d,0x48(%rsp)
    0.00 :   ce20e:  mov    %rbp,%rbx
    0.00 :   ce211:  mov    %rcx,0x40(%rsp)
    0.00 :   ce216:  mov    %r9d,0x30(%rsp)
    0.00 :   ce21b:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ce220:  mov    (%rsp),%rax
    0.00 :   ce224:  mov    0x50(%rsp),%r8
    0.00 :   ce229:  mov    0x48(%rsp),%r11d
    0.00 :   ce22e:  mov    0x40(%rsp),%rcx
    0.00 :   ce233:  mov    0x8(%rax),%edx
    0.00 :   ce236:  mov    0x30(%rsp),%r9d
    0.00 :   ce23b:  movslq %r8d,%rbp
    0.00 :   ce23e:  test   %r9d,%r9d
    0.00 :   ce241:  jne    cee95 <__strftime_internal+0x1b95>
    0.00 :   ce247:  test   %r11d,%r11d
    0.00 :   ce24a:  jne    cf062 <__strftime_internal+0x1d62>
    0.00 :   ce250:  mov    0x10(%rsp),%rdi
    0.00 :   ce255:  xor    %eax,%eax
    0.00 :   ce257:  cmp    $0xb,%edx
    0.00 :   ce25a:  mov    %rbp,%rdx
    0.00 :   ce25d:  setg   %al
    0.00 :   ce260:  mov    %rcx,0x30(%rsp)
    0.00 :   ce265:  mov    0x168(%rdi,%rax,8),%rsi
    0.00 :   ce26d:  mov    %rbx,%rdi
    0.00 :   ce270:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   ce275:  mov    0x30(%rsp),%rcx
    0.00 :   ce27a:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   ce27f:  mov    %rsi,%r14
    0.00 :   ce282:  xor    %r8d,%r8d
    0.00 :   ce285:  mov    $0x2,%eax
    0.00 :   ce28a:  cmp    %eax,%ebp
    0.00 :   ce28c:  cmovge %ebp,%eax
    0.00 :   ce28f:  mov    %eax,0x30(%rsp)
    0.00 :   ce293:  mov    (%rsp),%rax
    0.00 :   ce297:  mov    0x4(%rax),%edi
    0.00 :   ce29a:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce29f:  mov    %rsi,%r14
    0.00 :   ce2a2:  xor    %r8d,%r8d
    0.00 :   ce2a5:  mov    $0x2,%eax
    0.00 :   ce2aa:  mov    0x2c(%rsp),%edi
    0.00 :   ce2ae:  cmp    %eax,%ebp
    0.00 :   ce2b0:  cmovge %ebp,%eax
    0.00 :   ce2b3:  mov    %eax,0x30(%rsp)
    0.00 :   ce2b7:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce2bc:  mov    %rsi,%r14
    0.00 :   ce2bf:  xor    %r8d,%r8d
    0.00 :   ce2c2:  mov    $0x2,%eax
    0.00 :   ce2c7:  cmp    %eax,%ebp
    0.00 :   ce2c9:  cmovge %ebp,%eax
    0.00 :   ce2cc:  mov    %eax,0x30(%rsp)
    0.00 :   ce2d0:  mov    (%rsp),%rax
    0.00 :   ce2d4:  mov    0x8(%rax),%edi
    0.00 :   ce2d7:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce2dc:  mov    %rsi,%r14
    0.00 :   ce2df:  xor    %r8d,%r8d
    0.00 :   ce2e2:  mov    (%rsp),%rax
    0.00 :   ce2e6:  mov    $0x1,%edx
    0.00 :   ce2eb:  mov    0x14(%rax),%eax
    0.00 :   ce2ee:  add    $0x76c,%eax
    0.00 :   ce2f3:  test   %ebp,%ebp
    0.00 :   ce2f5:  cmovg  %ebp,%edx
    0.00 :   ce2f8:  mov    %eax,%ecx
    0.00 :   ce2fa:  sar    $0x1f,%ecx
    0.00 :   ce2fd:  mov    %edx,0x30(%rsp)
    0.00 :   ce301:  movslq %eax,%rdx
    0.00 :   ce304:  imul   $0x51eb851f,%rdx,%rdx
    0.00 :   ce30b:  sar    $0x25,%rdx
    0.00 :   ce30f:  sub    %ecx,%edx
    0.00 :   ce311:  imul   $0x64,%edx,%ecx
    0.00 :   ce314:  mov    %edx,%edi
    0.00 :   ce316:  sub    %ecx,%eax
    0.00 :   ce318:  shr    $0x1f,%eax
    0.00 :   ce31b:  sub    %eax,%edi
    0.00 :   ce31d:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce322:  mov    %rsi,%r14
    0.00 :   ce325:  mov    (%rsp),%rax
    0.00 :   ce329:  test   %r9d,%r9d
    0.00 :   ce32c:  mov    $0x1,%r8d
    0.00 :   ce332:  cmove  %r11d,%r9d
    0.00 :   ce336:  mov    0x18(%rax),%edx
    0.00 :   ce339:  cmp    $0x6,%edx
    0.00 :   ce33c:  ja     ce36b <__strftime_internal+0x106b>
    0.00 :   ce33e:  lea    0x20007(%rdx),%eax
    0.00 :   ce344:  mov    0x10(%rsp),%rdi
    0.00 :   ce349:  mov    %r9d,0x40(%rsp)
    0.00 :   ce34e:  movzwl %ax,%eax
    0.00 :   ce351:  mov    %edx,0x30(%rsp)
    0.00 :   ce355:  mov    0x38(%rdi,%rax,8),%rdi
    0.00 :   ce35a:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   ce35f:  mov    0x40(%rsp),%r9d
    0.00 :   ce364:  mov    0x30(%rsp),%edx
    0.00 :   ce368:  mov    %eax,%r8d
    0.00 :   ce36b:  sub    %r8d,%ebp
    0.00 :   ce36e:  mov    $0x0,%ecx
    0.00 :   ce373:  mov    %r12,%rax
    0.00 :   ce376:  cmovns %ebp,%ecx
    0.00 :   ce379:  sub    %r13,%rax
    0.00 :   ce37c:  add    %r8d,%ecx
    0.00 :   ce37f:  movslq %ecx,%rcx
    0.00 :   ce382:  cmp    %rax,%rcx
    0.00 :   ce385:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ce38b:  test   %rbx,%rbx
    0.00 :   ce38e:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce394:  test   %ebp,%ebp
    0.00 :   ce396:  jle    ce3de <__strftime_internal+0x10de>
    0.00 :   ce398:  movslq %ebp,%rdx
    0.00 :   ce39b:  mov    %r8d,0x48(%rsp)
    0.00 :   ce3a0:  mov    %rcx,0x40(%rsp)
    0.00 :   ce3a5:  lea    (%rbx,%rdx,1),%rbp
    0.00 :   ce3a9:  mov    %r9d,0x30(%rsp)
    0.00 :   ce3ae:  cmp    $0x30,%r15d
    0.00 :   ce3b2:  je     cf35f <__strftime_internal+0x205f>
    0.00 :   ce3b8:  mov    %rbx,%rdi
    0.00 :   ce3bb:  mov    $0x20,%esi
    0.00 :   ce3c0:  mov    %rbp,%rbx
    0.00 :   ce3c3:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ce3c8:  mov    (%rsp),%rax
    0.00 :   ce3cc:  mov    0x48(%rsp),%r8d
    0.00 :   ce3d1:  mov    0x40(%rsp),%rcx
    0.00 :   ce3d6:  mov    0x30(%rsp),%r9d
    0.00 :   ce3db:  mov    0x18(%rax),%edx
    0.00 :   ce3de:  movslq %r8d,%rbp
    0.00 :   ce3e1:  test   %r9d,%r9d
    0.00 :   ce3e4:  jne    cf254 <__strftime_internal+0x1f54>
    0.00 :   ce3ea:  lea    0xca020(%rip),%rsi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   ce3f1:  cmp    $0x6,%edx
    0.00 :   ce3f4:  ja     cdcb5 <__strftime_internal+0x9b5>
    0.00 :   ce3fa:  mov    0x10(%rsp),%rdi
    0.00 :   ce3ff:  lea    0x20007(%rdx),%eax
    0.00 :   ce405:  movzwl %ax,%eax
    0.00 :   ce408:  mov    0x38(%rdi,%rax,8),%rsi
    0.00 :   ce40d:  jmp    cdcb5 <__strftime_internal+0x9b5>
    0.00 :   ce412:  mov    %rsi,%r14
    0.00 :   ce415:  mov    (%rsp),%rax
    0.00 :   ce419:  lea    0x60(%rsp),%rdi
    0.00 :   ce41e:  mov    %r11d,0x40(%rsp)
    0.00 :   ce423:  movdqu 0x20(%rax),%xmm4
    0.00 :   ce428:  movdqu (%rax),%xmm0
    0.00 :   ce42c:  movdqu 0x10(%rax),%xmm2
    0.00 :   ce431:  mov    0x30(%rax),%rax
    0.00 :   ce435:  movaps %xmm0,0x60(%rsp)
    0.00 :   ce43a:  mov    %rax,0x90(%rsp)
    0.00 :   ce442:  movaps %xmm2,0x70(%rsp)
    0.00 :   ce447:  movaps %xmm4,0x30(%rsp)
    0.00 :   ce44c:  movaps %xmm4,0x80(%rsp)
    0.00 :   ce454:  call   c6ba0 <mktime>
    0.00 :   ce459:  mov    0x40(%rsp),%r11d
    0.00 :   ce45e:  lea    0xb6(%rsp),%rdi
    0.00 :   ce466:  movabs $0x6666666666666667,%r8
    0.00 :   ce470:  mov    %rax,%r10
    0.00 :   ce473:  shr    $0x3f,%rax
    0.00 :   ce477:  mov    %rdi,%rcx
    0.00 :   ce47a:  mov    %r11d,0x30(%rsp)
    0.00 :   ce47f:  mov    %rax,%r9
    0.00 :   ce482:  mov    %r10,%rsi
    0.00 :   ce485:  nopl   (%rax)
    0.00 :   ce488:  mov    %rsi,%rax
    0.00 :   ce48b:  imul   %r8
    0.00 :   ce48e:  mov    %rsi,%rax
    0.00 :   ce491:  sar    $0x3f,%rax
    0.00 :   ce495:  sar    $0x2,%rdx
    0.00 :   ce499:  sub    %rax,%rdx
    0.00 :   ce49c:  mov    %rsi,%rax
    0.00 :   ce49f:  lea    (%rdx,%rdx,4),%r11
    0.00 :   ce4a3:  mov    %rdx,%rsi
    0.00 :   ce4a6:  add    %r11,%r11
    0.00 :   ce4a9:  sub    %r11,%rax
    0.00 :   ce4ac:  mov    %eax,%edx
    0.00 :   ce4ae:  neg    %edx
    0.00 :   ce4b0:  test   %r10,%r10
    0.00 :   ce4b3:  cmovs  %edx,%eax
    0.00 :   ce4b6:  sub    $0x1,%rcx
    0.00 :   ce4ba:  add    $0x30,%eax
    0.00 :   ce4bd:  mov    %al,(%rcx)
    0.00 :   ce4bf:  test   %rsi,%rsi
    0.00 :   ce4c2:  jne    ce488 <__strftime_internal+0x1188>
    0.00 :   ce4c4:  mov    0x30(%rsp),%r11d
    0.00 :   ce4c9:  movl   $0x1,0x30(%rsp)
    0.00 :   ce4d1:  jmp    cdd49 <__strftime_internal+0xa49>
    0.00 :   ce4d6:  mov    %rsi,%r14
    0.00 :   ce4d9:  mov    0x10(%rsp),%rax
    0.00 :   ce4de:  mov    0x190(%rax),%rdi
    0.00 :   ce4e5:  lea    0xc88d8(%rip),%rax        # 196dc4 <dir_suffix+0x15f>
    0.00 :   ce4ec:  cmpb   $0x0,(%rdi)
    0.00 :   ce4ef:  cmovne %rdi,%rax
    0.00 :   ce4f3:  mov    %rax,0x30(%rsp)
    0.00 :   ce4f8:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   ce4fd:  mov    %rsi,%r14
    0.00 :   ce500:  sub    $0x1,%ebp
    0.00 :   ce503:  mov    $0x0,%ecx
    0.00 :   ce508:  mov    %r12,%rax
    0.00 :   ce50b:  cmovns %ebp,%ecx
    0.00 :   ce50e:  sub    %r13,%rax
    0.00 :   ce511:  add    $0x1,%ecx
    0.00 :   ce514:  movslq %ecx,%rcx
    0.00 :   ce517:  cmp    %rax,%rcx
    0.00 :   ce51a:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ce520:  test   %rbx,%rbx
    0.00 :   ce523:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce529:  test   %ebp,%ebp
    0.00 :   ce52b:  jle    ce557 <__strftime_internal+0x1257>
    0.00 :   ce52d:  movslq %ebp,%rbp
    0.00 :   ce530:  mov    %rcx,0x30(%rsp)
    0.00 :   ce535:  mov    %rbp,%rdx
    0.00 :   ce538:  cmp    $0x30,%r15d
    0.00 :   ce53c:  je     cf348 <__strftime_internal+0x2048>
    0.00 :   ce542:  mov    $0x20,%esi
    0.00 :   ce547:  mov    %rbx,%rdi
    0.00 :   ce54a:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ce54f:  mov    0x30(%rsp),%rcx
    0.00 :   ce554:  add    %rbp,%rbx
    0.00 :   ce557:  movb   $0xa,(%rbx)
    0.00 :   ce55a:  add    $0x1,%rbx
    0.00 :   ce55e:  jmp    cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce563:  mov    %rsi,%r14
    0.00 :   ce566:  xor    %r8d,%r8d
    0.00 :   ce569:  mov    $0x2,%eax
    0.00 :   ce56e:  cmp    %eax,%ebp
    0.00 :   ce570:  cmovge %ebp,%eax
    0.00 :   ce573:  mov    %eax,0x30(%rsp)
    0.00 :   ce577:  mov    (%rsp),%rax
    0.00 :   ce57b:  mov    0x10(%rax),%eax
    0.00 :   ce57e:  mov    %eax,0x40(%rsp)
    0.00 :   ce582:  lea    0x1(%rax),%edi
    0.00 :   ce585:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce58a:  mov    %rsi,%r14
    0.00 :   ce58d:  xor    %r8d,%r8d
    0.00 :   ce590:  mov    $0x2,%eax
    0.00 :   ce595:  mov    0x2c(%rsp),%edi
    0.00 :   ce599:  cmp    %eax,%ebp
    0.00 :   ce59b:  cmovge %ebp,%eax
    0.00 :   ce59e:  mov    %eax,0x30(%rsp)
    0.00 :   ce5a2:  cmp    $0x30,%r15d
    0.00 :   ce5a6:  je     cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce5ac:  cmp    $0x2d,%r15d
    0.00 :   ce5b0:  mov    $0x5f,%eax
    0.00 :   ce5b5:  cmovne %eax,%r15d
    0.00 :   ce5b9:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce5be:  mov    %rsi,%r14
    0.00 :   ce5c1:  xor    %r8d,%r8d
    0.00 :   ce5c4:  mov    $0x2,%eax
    0.00 :   ce5c9:  cmp    %eax,%ebp
    0.00 :   ce5cb:  cmovge %ebp,%eax
    0.00 :   ce5ce:  mov    %eax,0x30(%rsp)
    0.00 :   ce5d2:  mov    (%rsp),%rax
    0.00 :   ce5d6:  mov    0x8(%rax),%edi
    0.00 :   ce5d9:  jmp    ce5a2 <__strftime_internal+0x12a2>
    0.00 :   ce5db:  mov    %rsi,%r14
    0.00 :   ce5de:  xor    %r8d,%r8d
    0.00 :   ce5e1:  mov    $0x3,%eax
    0.00 :   ce5e6:  cmp    %eax,%ebp
    0.00 :   ce5e8:  cmovge %ebp,%eax
    0.00 :   ce5eb:  mov    %eax,0x30(%rsp)
    0.00 :   ce5ef:  mov    (%rsp),%rax
    0.00 :   ce5f3:  mov    0x1c(%rax),%eax
    0.00 :   ce5f6:  mov    %eax,0x40(%rsp)
    0.00 :   ce5fa:  lea    0x1(%rax),%edi
    0.00 :   ce5fd:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   ce602:  mov    %rsi,%r14
    0.00 :   ce605:  xor    %r8d,%r8d
    0.00 :   ce608:  mov    $0x2,%eax
    0.00 :   ce60d:  cmp    %eax,%ebp
    0.00 :   ce60f:  cmovge %ebp,%eax
    0.00 :   ce612:  mov    %eax,0x30(%rsp)
    0.00 :   ce616:  mov    (%rsp),%rax
    0.00 :   ce61a:  mov    0xc(%rax),%edi
    0.00 :   ce61d:  jmp    ce5a2 <__strftime_internal+0x12a2>
    0.00 :   ce61f:  mov    %rsi,%r14
    0.00 :   ce622:  mov    0x10(%rsp),%rax
    0.00 :   ce627:  mov    0x188(%rax),%rax
    0.00 :   ce62e:  mov    %rax,0x30(%rsp)
    0.00 :   ce633:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   ce638:  mov    %rsi,%r14
    0.00 :   ce63b:  xor    %r8d,%r8d
    0.00 :   ce63e:  mov    $0x2,%eax
    0.00 :   ce643:  mov    (%rsp),%rdi
    0.00 :   ce647:  cmp    %eax,%ebp
    0.00 :   ce649:  cmovge %ebp,%eax
    0.00 :   ce64c:  mov    0x1c(%rdi),%esi
    0.00 :   ce64f:  mov    %eax,0x30(%rsp)
    0.00 :   ce653:  mov    0x18(%rdi),%eax
    0.00 :   ce656:  lea    0x6(%rax),%edx
    0.00 :   ce659:  mov    %eax,0x40(%rsp)
    0.00 :   ce65d:  movslq %edx,%rax
    0.00 :   ce660:  mov    %edx,%ecx
    0.00 :   ce662:  imul   $0xffffffff92492493,%rax,%rax
    0.00 :   ce669:  sar    $0x1f,%ecx
    0.00 :   ce66c:  shr    $0x20,%rax
    0.00 :   ce670:  add    %edx,%eax
    0.00 :   ce672:  sar    $0x2,%eax
    0.00 :   ce675:  sub    %ecx,%eax
    0.00 :   ce677:  lea    0x0(,%rax,8),%ecx
    0.00 :   ce67e:  sub    %eax,%ecx
    0.00 :   ce680:  mov    %ecx,%eax
    0.00 :   ce682:  sub    %edx,%eax
    0.00 :   ce684:  lea    0x7(%rax,%rsi,1),%eax
    0.00 :   ce688:  jmp    ce119 <__strftime_internal+0xe19>
    0.00 :   ce68d:  mov    %rsi,%r14
    0.00 :   ce690:  xor    %eax,%eax
    0.00 :   ce692:  jmp    ce173 <__strftime_internal+0xe73>
    0.00 :   ce697:  mov    %rsi,%r14
    0.00 :   ce69a:  lea    0xc8711(%rip),%rax        # 196db2 <dir_suffix+0x14d>
    0.00 :   ce6a1:  mov    %rax,0x30(%rsp)
    0.00 :   ce6a6:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   ce6ab:  mov    (%rsp),%rax
    0.00 :   ce6af:  mov    %rsi,%r14
    0.00 :   ce6b2:  mov    0x10(%rax),%ecx
    0.00 :   ce6b5:  test   %r9d,%r9d
    0.00 :   ce6b8:  jne    ce6bd <__strftime_internal+0x13bd>
    0.00 :   ce6ba:  mov    %r11d,%r9d
    0.00 :   ce6bd:  mov    $0x1,%r8d
    0.00 :   ce6c3:  cmp    $0xb,%ecx
    0.00 :   ce6c6:  ja     ce6f5 <__strftime_internal+0x13f5>
    0.00 :   ce6c8:  lea    0x2001a(%rcx),%eax
    0.00 :   ce6ce:  mov    0x10(%rsp),%rdi
    0.00 :   ce6d3:  mov    %r9d,0x40(%rsp)
    0.00 :   ce6d8:  movzwl %ax,%eax
    0.00 :   ce6db:  mov    %ecx,0x30(%rsp)
    0.00 :   ce6df:  mov    0x38(%rdi,%rax,8),%rdi
    0.00 :   ce6e4:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   ce6e9:  mov    0x40(%rsp),%r9d
    0.00 :   ce6ee:  mov    0x30(%rsp),%ecx
    0.00 :   ce6f2:  mov    %eax,%r8d
    0.00 :   ce6f5:  mov    %ebp,%eax
    0.00 :   ce6f7:  mov    $0x0,%edx
    0.00 :   ce6fc:  sub    %r8d,%eax
    0.00 :   ce6ff:  cmovns %eax,%edx
    0.00 :   ce702:  add    %r8d,%edx
    0.00 :   ce705:  movslq %edx,%rbp
    0.00 :   ce708:  mov    %r12,%rdx
    0.00 :   ce70b:  sub    %r13,%rdx
    0.00 :   ce70e:  cmp    %rdx,%rbp
    0.00 :   ce711:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ce717:  test   %rbx,%rbx
    0.00 :   ce71a:  je     cd9a0 <__strftime_internal+0x6a0>
    0.00 :   ce720:  test   %eax,%eax
    0.00 :   ce722:  jle    ce767 <__strftime_internal+0x1467>
    0.00 :   ce724:  movslq %eax,%rdx
    0.00 :   ce727:  mov    %r8d,0x48(%rsp)
    0.00 :   ce72c:  lea    (%rbx,%rdx,1),%rax
    0.00 :   ce730:  mov    %r9d,0x40(%rsp)
    0.00 :   ce735:  mov    %rax,0x30(%rsp)
    0.00 :   ce73a:  cmp    $0x30,%r15d
    0.00 :   ce73e:  je     cf473 <__strftime_internal+0x2173>
    0.00 :   ce744:  mov    %rbx,%rdi
    0.00 :   ce747:  mov    $0x20,%esi
    0.00 :   ce74c:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ce751:  mov    (%rsp),%rax
    0.00 :   ce755:  mov    0x30(%rsp),%rbx
    0.00 :   ce75a:  mov    0x48(%rsp),%r8d
    0.00 :   ce75f:  mov    0x40(%rsp),%r9d
    0.00 :   ce764:  mov    0x10(%rax),%ecx
    0.00 :   ce767:  movslq %r8d,%r15
    0.00 :   ce76a:  lea    0xc9ca0(%rip),%rsi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   ce771:  test   %r9d,%r9d
    0.00 :   ce774:  jne    cf3c5 <__strftime_internal+0x20c5>
    0.00 :   ce77a:  cmp    $0xb,%ecx
    0.00 :   ce77d:  ja     cd992 <__strftime_internal+0x692>
    0.00 :   ce783:  mov    0x10(%rsp),%rdi
    0.00 :   ce788:  lea    0x2001a(%rcx),%eax
    0.00 :   ce78e:  movzwl %ax,%eax
    0.00 :   ce791:  mov    0x38(%rdi,%rax,8),%rsi
    0.00 :   ce796:  jmp    cd992 <__strftime_internal+0x692>
    0.00 :   ce79b:  mov    %r12,%rdx
    0.00 :   ce79e:  mov    %rsi,%r14
    0.00 :   ce7a1:  sub    %r13,%rdx
    0.00 :   ce7a4:  sub    $0x1,%ebp
    0.00 :   ce7a7:  mov    $0x0,%ecx
    0.00 :   ce7ac:  cmovns %ebp,%ecx
    0.00 :   ce7af:  add    $0x1,%ecx
    0.00 :   ce7b2:  movslq %ecx,%rcx
    0.00 :   ce7b5:  cmp    %rdx,%rcx
    0.00 :   ce7b8:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ce7be:  test   %rbx,%rbx
    0.00 :   ce7c1:  je     cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce7c7:  test   %ebp,%ebp
    0.00 :   ce7c9:  jle    ce7fb <__strftime_internal+0x14fb>
    0.00 :   ce7cb:  movslq %ebp,%rdx
    0.00 :   ce7ce:  mov    %rcx,0x30(%rsp)
    0.00 :   ce7d3:  mov    $0x30,%esi
    0.00 :   ce7d8:  lea    (%rbx,%rdx,1),%rbp
    0.00 :   ce7dc:  cmp    $0x30,%r15d
    0.00 :   ce7e0:  je     ce7e7 <__strftime_internal+0x14e7>
    0.00 :   ce7e2:  mov    $0x20,%esi
    0.00 :   ce7e7:  mov    %rbx,%rdi
    0.00 :   ce7ea:  mov    %rbp,%rbx
    0.00 :   ce7ed:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ce7f2:  movzbl (%r14),%eax
    0.00 :   ce7f6:  mov    0x30(%rsp),%rcx
    0.00 :   ce7fb:  mov    %al,(%rbx)
    0.00 :   ce7fd:  add    $0x1,%rbx
    0.00 :   ce801:  jmp    cd5ab <__strftime_internal+0x2ab>
    0.00 :   ce806:  mov    %rsi,%r14
    0.00 :   ce809:  lea    0xc85ab(%rip),%rax        # 196dbb <dir_suffix+0x156>
    0.00 :   ce810:  mov    %rax,0x30(%rsp)
    0.00 :   ce815:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   ce81a:  cmp    $0x45,%r8d
    0.00 :   ce81e:  jne    ce092 <__strftime_internal+0xd92>
    0.00 :   ce824:  mov    0x10(%rsp),%rsi
    0.00 :   ce829:  mov    (%rsp),%rdi
    0.00 :   ce82d:  mov    %r8d,0x40(%rsp)
    0.00 :   ce832:  mov    %r11d,0x30(%rsp)
    0.00 :   ce837:  call   d2210 <_nl_get_era_entry>
    0.00 :   ce83c:  mov    0x30(%rsp),%r11d
    0.00 :   ce841:  mov    0x40(%rsp),%r8d
    0.00 :   ce846:  test   %rax,%rax
    0.00 :   ce849:  je     ce092 <__strftime_internal+0xd92>
    0.00 :   ce84f:  mov    (%rsp),%rdi
    0.00 :   ce853:  mov    $0x2,%ecx
    0.00 :   ce858:  mov    0x14(%rdi),%edx
    0.00 :   ce85b:  mov    0x28(%rsp),%edi
    0.00 :   ce85f:  sub    0x8(%rax),%edx
    0.00 :   ce862:  test   %edi,%edi
    0.00 :   ce864:  cmovne %edi,%r15d
    0.00 :   ce868:  cmp    %ecx,%ebp
    0.00 :   ce86a:  mov    0x4(%rax),%edi
    0.00 :   ce86d:  cmovge %ebp,%ecx
    0.00 :   ce870:  imul   0x40(%rax),%edx
    0.00 :   ce874:  mov    %ecx,0x30(%rsp)
    0.00 :   ce878:  add    %edx,%edi
    0.00 :   ce87a:  jmp    cdcfe <__strftime_internal+0x9fe>
    0.00 :   ce87f:  cmp    $0x45,%r8d
    0.00 :   ce883:  jne    ce2e2 <__strftime_internal+0xfe2>
    0.00 :   ce889:  mov    0x10(%rsp),%rsi
    0.00 :   ce88e:  mov    (%rsp),%rdi
    0.00 :   ce892:  mov    %r8d,0x48(%rsp)
    0.00 :   ce897:  mov    %r11d,0x30(%rsp)
    0.00 :   ce89c:  call   d2210 <_nl_get_era_entry>
    0.00 :   ce8a1:  mov    0x30(%rsp),%r11d
    0.00 :   ce8a6:  mov    0x48(%rsp),%r8d
    0.00 :   ce8ab:  test   %rax,%rax
    0.00 :   ce8ae:  mov    %rax,0x40(%rsp)
    0.00 :   ce8b3:  je     ce2e2 <__strftime_internal+0xfe2>
    0.00 :   ce8b9:  mov    0x20(%rax),%rsi
    0.00 :   ce8bd:  mov    %r11d,0x58(%rsp)
    0.00 :   ce8c2:  mov    %rsi,%rdi
    0.00 :   ce8c5:  mov    %rsi,0x50(%rsp)
    0.00 :   ce8ca:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   ce8cf:  sub    %eax,%ebp
    0.00 :   ce8d1:  mov    %rax,%rdi
    0.00 :   ce8d4:  mov    %rax,0x48(%rsp)
    0.00 :   ce8d9:  mov    $0x0,%eax
    0.00 :   ce8de:  cmovns %ebp,%eax
    0.00 :   ce8e1:  add    %edi,%eax
    0.00 :   ce8e3:  movslq %eax,%rdi
    0.00 :   ce8e6:  mov    %r12,%rax
    0.00 :   ce8e9:  sub    %r13,%rax
    0.00 :   ce8ec:  mov    %rdi,0x30(%rsp)
    0.00 :   ce8f1:  cmp    %rax,%rdi
    0.00 :   ce8f4:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ce8fa:  test   %rbx,%rbx
    0.00 :   ce8fd:  je     ce95c <__strftime_internal+0x165c>
    0.00 :   ce8ff:  test   %ebp,%ebp
    0.00 :   ce901:  mov    0x50(%rsp),%rsi
    0.00 :   ce906:  mov    0x58(%rsp),%r11d
    0.00 :   ce90b:  jle    ce940 <__strftime_internal+0x1640>
    0.00 :   ce90d:  movslq %ebp,%rbp
    0.00 :   ce910:  mov    %r11d,0x50(%rsp)
    0.00 :   ce915:  mov    %rbp,%rdx
    0.00 :   ce918:  cmp    $0x30,%r15d
    0.00 :   ce91c:  je     cf5d7 <__strftime_internal+0x22d7>
    0.00 :   ce922:  mov    $0x20,%esi
    0.00 :   ce927:  mov    %rbx,%rdi
    0.00 :   ce92a:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ce92f:  mov    0x50(%rsp),%r11d
    0.00 :   ce934:  mov    0x40(%rsp),%rax
    0.00 :   ce939:  add    %rbp,%rbx
    0.00 :   ce93c:  mov    0x20(%rax),%rsi
    0.00 :   ce940:  movslq 0x48(%rsp),%rbp
    0.00 :   ce945:  test   %r11d,%r11d
    0.00 :   ce948:  jne    cf49b <__strftime_internal+0x219b>
    0.00 :   ce94e:  mov    %rbp,%rdx
    0.00 :   ce951:  mov    %rbx,%rdi
    0.00 :   ce954:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   ce959:  add    %rbp,%rbx
    0.00 :   ce95c:  mov    0x30(%rsp),%rax
    0.00 :   ce961:  add    %rax,%r13
    0.00 :   ce964:  jmp    cd3a8 <__strftime_internal+0xa8>
    0.00 :   ce969:  mov    %r12,%rdx
    0.00 :   ce96c:  sub    %r13,%rdx
    0.00 :   ce96f:  test   %r8d,%r8d
    0.00 :   ce972:  je     ce7a4 <__strftime_internal+0x14a4>
    0.00 :   ce978:  mov    %r14,%r10
    0.00 :   ce97b:  mov    $0x1,%r8d
    0.00 :   ce981:  xor    %r9d,%r9d
    0.00 :   ce984:  jmp    cd509 <__strftime_internal+0x209>
    0.00 :   ce989:  cmp    $0x45,%r8d
    0.00 :   ce98d:  jne    ce285 <__strftime_internal+0xf85>
    0.00 :   ce993:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ce998:  cmp    $0x45,%r8d
    0.00 :   ce99c:  jne    ce2a5 <__strftime_internal+0xfa5>
    0.00 :   ce9a2:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ce9a7:  cmp    $0x45,%r8d
    0.00 :   ce9ab:  jne    ce13e <__strftime_internal+0xe3e>
    0.00 :   ce9b1:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ce9b6:  cmp    $0x45,%r8d
    0.00 :   ce9ba:  jne    ce63e <__strftime_internal+0x133e>
    0.00 :   ce9c0:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ce9c5:  cmp    $0x45,%r8d
    0.00 :   ce9c9:  jne    ce0fe <__strftime_internal+0xdfe>
    0.00 :   ce9cf:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ce9d4:  test   %r8d,%r8d
    0.00 :   ce9d7:  je     cdbdd <__strftime_internal+0x8dd>
    0.00 :   ce9dd:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ce9e2:  cmp    $0x45,%r8d
    0.00 :   ce9e6:  je     cf151 <__strftime_internal+0x1e51>
    0.00 :   ce9ec:  cmp    $0x4f,%r8d
    0.00 :   ce9f0:  jne    cdf93 <__strftime_internal+0xc93>
    0.00 :   ce9f6:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ce9fb:  cmp    $0x4f,%r8d
    0.00 :   ce9ff:  je     cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cea05:  cmp    $0x45,%r8d
    0.00 :   cea09:  jne    ce622 <__strftime_internal+0x1322>
    0.00 :   cea0f:  mov    0x10(%rsp),%rax
    0.00 :   cea14:  mov    0x1c0(%rax),%rax
    0.00 :   cea1b:  cmpb   $0x0,(%rax)
    0.00 :   cea1e:  mov    %rax,0x30(%rsp)
    0.00 :   cea23:  jne    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   cea29:  jmp    ce622 <__strftime_internal+0x1322>
    0.00 :   cea2e:  test   %r8d,%r8d
    0.00 :   cea31:  je     ce325 <__strftime_internal+0x1025>
    0.00 :   cea37:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cea3c:  cmp    $0x45,%r8d
    0.00 :   cea40:  je     cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cea46:  mov    (%rsp),%rax
    0.00 :   cea4a:  test   %r9d,%r9d
    0.00 :   cea4d:  cmove  %r11d,%r9d
    0.00 :   cea51:  mov    0x10(%rax),%edx
    0.00 :   cea54:  mov    %edx,%ecx
    0.00 :   cea56:  cmp    $0x4f,%r8d
    0.00 :   cea5a:  jne    ce6bd <__strftime_internal+0x13bd>
    0.00 :   cea60:  mov    $0x1,%ecx
    0.00 :   cea65:  cmp    $0xb,%edx
    0.00 :   cea68:  ja     cea96 <__strftime_internal+0x1796>
    0.00 :   cea6a:  lea    0x2006f(%rdx),%eax
    0.00 :   cea70:  mov    0x10(%rsp),%rdi
    0.00 :   cea75:  mov    %r9d,0x40(%rsp)
    0.00 :   cea7a:  movzwl %ax,%eax
    0.00 :   cea7d:  mov    %edx,0x30(%rsp)
    0.00 :   cea81:  mov    0x38(%rdi,%rax,8),%rdi
    0.00 :   cea86:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   cea8b:  mov    0x40(%rsp),%r9d
    0.00 :   cea90:  mov    0x30(%rsp),%edx
    0.00 :   cea94:  mov    %eax,%ecx
    0.00 :   cea96:  sub    %ecx,%ebp
    0.00 :   cea98:  mov    $0x0,%eax
    0.00 :   cea9d:  cmovns %ebp,%eax
    0.00 :   ceaa0:  add    %ecx,%eax
    0.00 :   ceaa2:  movslq %eax,%rdi
    0.00 :   ceaa5:  mov    %r12,%rax
    0.00 :   ceaa8:  sub    %r13,%rax
    0.00 :   ceaab:  mov    %rdi,0x30(%rsp)
    0.00 :   ceab0:  cmp    %rax,%rdi
    0.00 :   ceab3:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ceab9:  test   %rbx,%rbx
    0.00 :   ceabc:  je     ce95c <__strftime_internal+0x165c>
    0.00 :   ceac2:  test   %ebp,%ebp
    0.00 :   ceac4:  jle    ceaff <__strftime_internal+0x17ff>
    0.00 :   ceac6:  movslq %ebp,%rbp
    0.00 :   ceac9:  mov    %ecx,0x48(%rsp)
    0.00 :   ceacd:  mov    %r9d,0x40(%rsp)
    0.00 :   cead2:  mov    %rbp,%rdx
    0.00 :   cead5:  cmp    $0x30,%r15d
    0.00 :   cead9:  je     cf598 <__strftime_internal+0x2298>
    0.00 :   ceadf:  mov    $0x20,%esi
    0.00 :   ceae4:  mov    %rbx,%rdi
    0.00 :   ceae7:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ceaec:  mov    0x40(%rsp),%r9d
    0.00 :   ceaf1:  mov    0x48(%rsp),%ecx
    0.00 :   ceaf5:  mov    (%rsp),%rax
    0.00 :   ceaf9:  add    %rbp,%rbx
    0.00 :   ceafc:  mov    0x10(%rax),%edx
    0.00 :   ceaff:  movslq %ecx,%rbp
    0.00 :   ceb02:  test   %r9d,%r9d
    0.00 :   ceb05:  jne    cf4c6 <__strftime_internal+0x21c6>
    0.00 :   ceb0b:  lea    0xc98ff(%rip),%rsi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   ceb12:  cmp    $0xb,%edx
    0.00 :   ceb15:  ja     ce94e <__strftime_internal+0x164e>
    0.00 :   ceb1b:  mov    0x10(%rsp),%rdi
    0.00 :   ceb20:  lea    0x2006f(%rdx),%eax
    0.00 :   ceb26:  movzwl %ax,%eax
    0.00 :   ceb29:  mov    0x38(%rdi,%rax,8),%rsi
    0.00 :   ceb2e:  jmp    ce94e <__strftime_internal+0x164e>
    0.00 :   ceb33:  mov    %r14,%rsi
    0.00 :   ceb36:  test   %r8d,%r8d
    0.00 :   ceb39:  jne    cd4e3 <__strftime_internal+0x1e3>
    0.00 :   ceb3f:  jmp    cd9e8 <__strftime_internal+0x6e8>
    0.00 :   ceb44:  cmp    $0x45,%r8d
    0.00 :   ceb48:  jne    ce569 <__strftime_internal+0x1269>
    0.00 :   ceb4e:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ceb53:  cmp    $0x45,%r8d
    0.00 :   ceb57:  jne    ce590 <__strftime_internal+0x1290>
    0.00 :   ceb5d:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ceb62:  cmp    $0x45,%r8d
    0.00 :   ceb66:  jne    ce5c4 <__strftime_internal+0x12c4>
    0.00 :   ceb6c:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ceb71:  cmp    $0x45,%r8d
    0.00 :   ceb75:  jne    ce5e1 <__strftime_internal+0x12e1>
    0.00 :   ceb7b:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ceb80:  cmp    $0x4f,%r8d
    0.00 :   ceb84:  je     cd4e0 <__strftime_internal+0x1e0>
    0.00 :   ceb8a:  cmp    $0x45,%r8d
    0.00 :   ceb8e:  jne    cde91 <__strftime_internal+0xb91>
    0.00 :   ceb94:  mov    0x10(%rsp),%rax
    0.00 :   ceb99:  mov    0x1b8(%rax),%rax
    0.00 :   ceba0:  cmpb   $0x0,(%rax)
    0.00 :   ceba3:  mov    %rax,0x30(%rsp)
    0.00 :   ceba8:  jne    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   cebae:  jmp    cde91 <__strftime_internal+0xb91>
    0.00 :   cebb3:  cmp    $0x4f,%r8d
    0.00 :   cebb7:  je     cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cebbd:  cmp    $0x45,%r8d
    0.00 :   cebc1:  jne    ce0e2 <__strftime_internal+0xde2>
    0.00 :   cebc7:  mov    0x10(%rsp),%rax
    0.00 :   cebcc:  mov    0x1a8(%rax),%rax
    0.00 :   cebd3:  cmpb   $0x0,(%rax)
    0.00 :   cebd6:  mov    %rax,0x30(%rsp)
    0.00 :   cebdb:  jne    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   cebe1:  jmp    ce0e2 <__strftime_internal+0xde2>
    0.00 :   cebe6:  cmp    $0x45,%r8d
    0.00 :   cebea:  jne    cdfbd <__strftime_internal+0xcbd>
    0.00 :   cebf0:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cebf5:  cmp    $0x45,%r8d
    0.00 :   cebf9:  jne    ce608 <__strftime_internal+0x1308>
    0.00 :   cebff:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cec04:  cmp    $0x45,%r8d
    0.00 :   cec08:  jne    cdcd5 <__strftime_internal+0x9d5>
    0.00 :   cec0e:  jmp    cd4e0 <__strftime_internal+0x1e0>
    0.00 :   cec13:  mov    %r14,%rsi
    0.00 :   cec16:  test   %r8d,%r8d
    0.00 :   cec19:  jne    cd4e3 <__strftime_internal+0x1e3>
    0.00 :   cec1f:  jmp    ce69a <__strftime_internal+0x139a>
    0.00 :   cec24:  nopl   0x0(%rax)
    0.00 :   cec28:  xor    %r9d,%r9d
    0.00 :   cec2b:  jmp    cdd0f <__strftime_internal+0xa0f>
    0.00 :   cec30:  lea    -0x1(%rbp),%rax
    0.00 :   cec34:  test   %rbp,%rbp
    0.00 :   cec37:  je     cde83 <__strftime_internal+0xb83>
    0.00 :   cec3d:  mov    0x8(%rsp),%rdi
    0.00 :   cec42:  nopw   0x0(%rax,%rax,1)
    0.00 :   cec48:  movzbl (%rcx,%rax,1),%esi
    0.00 :   cec4c:  mov    0x78(%rdi),%rdx
    0.00 :   cec50:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cec53:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cec56:  sub    $0x1,%rax
    0.00 :   cec5a:  jae    cec48 <__strftime_internal+0x1948>
    0.00 :   cec5c:  jmp    cde83 <__strftime_internal+0xb83>
    0.00 :   cec61:  mov    0x8(%rsp),%r8
    0.00 :   cec66:  lea    -0x1(%rbp),%rax
    0.00 :   cec6a:  lea    (%r14,%r9,1),%rdi
    0.00 :   cec6e:  xchg   %ax,%ax
    0.00 :   cec70:  movzbl (%rdi,%rax,1),%esi
    0.00 :   cec74:  mov    0x78(%r8),%rdx
    0.00 :   cec78:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cec7b:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cec7e:  sub    $0x1,%rax
    0.00 :   cec82:  jae    cec70 <__strftime_internal+0x1970>
    0.00 :   cec84:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cec89:  lea    -0x1(%rbp),%rax
    0.00 :   cec8d:  test   %rbp,%rbp
    0.00 :   cec90:  je     cd87b <__strftime_internal+0x57b>
    0.00 :   cec96:  mov    0x8(%rsp),%rdi
    0.00 :   cec9b:  nopl   0x0(%rax,%rax,1)
    0.00 :   ceca0:  movzbl (%rcx,%rax,1),%esi
    0.00 :   ceca4:  mov    0x78(%rdi),%rdx
    0.00 :   ceca8:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cecab:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cecae:  sub    $0x1,%rax
    0.00 :   cecb2:  jae    ceca0 <__strftime_internal+0x19a0>
    0.00 :   cecb4:  jmp    cd87b <__strftime_internal+0x57b>
    0.00 :   cecb9:  mov    $0x30,%esi
    0.00 :   cecbe:  mov    %rbx,%rdi
    0.00 :   cecc1:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cecc6:  mov    0x50(%rsp),%r9d
    0.00 :   ceccb:  mov    0x48(%rsp),%rcx
    0.00 :   cecd0:  mov    0x40(%rsp),%r11d
    0.00 :   cecd5:  mov    0x30(%rsp),%r8
    0.00 :   cecda:  jmp    cde5c <__strftime_internal+0xb5c>
    0.00 :   cecdf:  mov    %r10d,%edx
    0.00 :   cece2:  cmp    %rax,%rdx
    0.00 :   cece5:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   ceceb:  test   %rbx,%rbx
    0.00 :   cecee:  je     ced32 <__strftime_internal+0x1a32>
    0.00 :   cecf0:  mov    %rbx,%rdi
    0.00 :   cecf3:  mov    $0x20,%esi
    0.00 :   cecf8:  mov    %r8,0x58(%rsp)
    0.00 :   cecfd:  mov    %rcx,0x50(%rsp)
    0.00 :   ced02:  mov    %r11d,0x48(%rsp)
    0.00 :   ced07:  mov    %r10d,0x40(%rsp)
    0.00 :   ced0c:  mov    %rdx,0x30(%rsp)
    0.00 :   ced11:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ced16:  mov    0x30(%rsp),%rdx
    0.00 :   ced1b:  mov    0x58(%rsp),%r8
    0.00 :   ced20:  mov    0x50(%rsp),%rcx
    0.00 :   ced25:  mov    0x48(%rsp),%r11d
    0.00 :   ced2a:  mov    0x40(%rsp),%r10d
    0.00 :   ced2f:  add    %rdx,%rbx
    0.00 :   ced32:  mov    %ebp,%eax
    0.00 :   ced34:  add    %rdx,%r13
    0.00 :   ced37:  sub    %r10d,%eax
    0.00 :   ced3a:  cmp    %ebp,%r10d
    0.00 :   ced3d:  mov    $0x0,%ebp
    0.00 :   ced42:  cmovl  %eax,%ebp
    0.00 :   ced45:  jmp    cddeb <__strftime_internal+0xaeb>
    0.00 :   ced4a:  test   %rbx,%rbx
    0.00 :   ced4d:  je     cdde6 <__strftime_internal+0xae6>
    0.00 :   ced53:  mov    %rbx,%rdi
    0.00 :   ced56:  jmp    cddb7 <__strftime_internal+0xab7>
    0.00 :   ced5b:  mov    0x8(%rsp),%rsi
    0.00 :   ced60:  cmp    %rax,%rbx
    0.00 :   ced63:  jae    cdaf4 <__strftime_internal+0x7f4>
    0.00 :   ced69:  nopl   0x0(%rax)
    0.00 :   ced70:  movzbl (%rbx),%ecx
    0.00 :   ced73:  mov    0x78(%rsi),%rdx
    0.00 :   ced77:  add    $0x1,%rbx
    0.00 :   ced7b:  mov    (%rdx,%rcx,4),%edx
    0.00 :   ced7e:  mov    %dl,-0x1(%rbx)
    0.00 :   ced81:  cmp    %rbx,%rax
    0.00 :   ced84:  jne    ced70 <__strftime_internal+0x1a70>
    0.00 :   ced86:  jmp    cdaf4 <__strftime_internal+0x7f4>
    0.00 :   ced8b:  xor    %r11d,%r11d
    0.00 :   ced8e:  jmp    ce17f <__strftime_internal+0xe7f>
    0.00 :   ced93:  mov    $0x30,%esi
    0.00 :   ced98:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   ced9d:  mov    0x50(%rsp),%r10
    0.00 :   ceda2:  mov    0x48(%rsp),%r11d
    0.00 :   ceda7:  mov    0x40(%rsp),%rdx
    0.00 :   cedac:  jmp    cda9b <__strftime_internal+0x79b>
    0.00 :   cedb1:  mov    $0x30,%esi
    0.00 :   cedb6:  mov    %rbx,%rdi
    0.00 :   cedb9:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cedbe:  mov    0x58(%rsp),%r9
    0.00 :   cedc3:  mov    0x50(%rsp),%r8d
    0.00 :   cedc8:  mov    0x48(%rsp),%rcx
    0.00 :   cedcd:  mov    0x40(%rsp),%r10
    0.00 :   cedd2:  mov    0x30(%rsp),%r11d
    0.00 :   cedd7:  jmp    cd581 <__strftime_internal+0x281>
    0.00 :   ceddc:  mov    %rbp,%rdx
    0.00 :   ceddf:  mov    $0x30,%esi
    0.00 :   cede4:  mov    %rbx,%rdi
    0.00 :   cede7:  mov    %r9,0x30(%rsp)
    0.00 :   cedec:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cedf1:  mov    0x50(%rsp),%r8
    0.00 :   cedf6:  mov    0x48(%rsp),%rcx
    0.00 :   cedfb:  mov    0x40(%rsp),%r11d
    0.00 :   cee00:  mov    0x30(%rsp),%r9
    0.00 :   cee05:  jmp    cd854 <__strftime_internal+0x554>
    0.00 :   cee0a:  mov    %r9d,%edi
    0.00 :   cee0d:  mov    $0x16d,%edx
    0.00 :   cee12:  add    $0x76b,%edi
    0.00 :   cee18:  test   $0x3,%dil
    0.00 :   cee1c:  jne    cee4f <__strftime_internal+0x1b4f>
    0.00 :   cee1e:  imul   $0xc28f5c29,%edi,%eax
    0.00 :   cee24:  mov    $0x16e,%edx
    0.00 :   cee29:  add    $0x51eb850,%eax
    0.00 :   cee2e:  ror    $0x2,%eax
    0.00 :   cee31:  cmp    $0x28f5c28,%eax
    0.00 :   cee36:  ja     cee4f <__strftime_internal+0x1b4f>
    0.00 :   cee38:  mov    %edi,%eax
    0.00 :   cee3a:  mov    $0x190,%r9d
    0.00 :   cee40:  cltd
    0.00 :   cee41:  idiv   %r9d
    0.00 :   cee44:  cmp    $0x1,%edx
    0.00 :   cee47:  mov    $0x16d,%edx
    0.00 :   cee4c:  adc    $0x0,%edx
    0.00 :   cee4f:  add    %r14d,%edx
    0.00 :   cee52:  mov    %edx,%r9d
    0.00 :   cee55:  sub    %r10d,%r9d
    0.00 :   cee58:  add    $0x17e,%r9d
    0.00 :   cee5f:  movslq %r9d,%rax
    0.00 :   cee62:  mov    %r9d,%r10d
    0.00 :   cee65:  sub    %r9d,%edx
    0.00 :   cee68:  imul   $0xffffffff92492493,%rax,%rax
    0.00 :   cee6f:  sar    $0x1f,%r10d
    0.00 :   cee73:  shr    $0x20,%rax
    0.00 :   cee77:  add    %r9d,%eax
    0.00 :   cee7a:  sar    $0x2,%eax
    0.00 :   cee7d:  sub    %r10d,%eax
    0.00 :   cee80:  lea    0x0(,%rax,8),%r10d
    0.00 :   cee88:  sub    %eax,%r10d
    0.00 :   cee8b:  lea    0x3(%rdx,%r10,1),%eax
    0.00 :   cee90:  jmp    cd728 <__strftime_internal+0x428>
    0.00 :   cee95:  xor    %eax,%eax
    0.00 :   cee97:  mov    0x10(%rsp),%rdi
    0.00 :   cee9c:  cmp    $0xb,%edx
    0.00 :   cee9f:  setg   %al
    0.00 :   ceea2:  mov    0x168(%rdi,%rax,8),%rdi
    0.00 :   ceeaa:  lea    -0x1(%rbp),%rax
    0.00 :   ceeae:  test   %rbp,%rbp
    0.00 :   ceeb1:  je     cd5a8 <__strftime_internal+0x2a8>
    0.00 :   ceeb7:  mov    0x8(%rsp),%r8
    0.00 :   ceebc:  nopl   0x0(%rax)
    0.00 :   ceec0:  movzbl (%rdi,%rax,1),%esi
    0.00 :   ceec4:  mov    0x70(%r8),%rdx
    0.00 :   ceec8:  mov    (%rdx,%rsi,4),%edx
    0.00 :   ceecb:  mov    %dl,(%rbx,%rax,1)
    0.00 :   ceece:  sub    $0x1,%rax
    0.00 :   ceed2:  jae    ceec0 <__strftime_internal+0x1bc0>
    0.00 :   ceed4:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   ceed9:  mov    %r10,%rsi
    0.00 :   ceedc:  jmp    cd4e3 <__strftime_internal+0x1e3>
    0.00 :   ceee1:  mov    (%rsp),%rax
    0.00 :   ceee5:  mov    0x20(%rax),%esi
    0.00 :   ceee8:  test   %esi,%esi
    0.00 :   ceeea:  js     cf204 <__strftime_internal+0x1f04>
    0.00 :   ceef0:  mov    0x18(%rsp),%rax
    0.00 :   ceef5:  cmpb   $0x0,(%rax)
    0.00 :   ceef8:  je     cf322 <__strftime_internal+0x2022>
    0.00 :   ceefe:  mov    (%rsp),%rax
    0.00 :   cef02:  movslq 0x20(%rax),%rax
    0.00 :   cef06:  cmp    $0x1,%eax
    0.00 :   cef09:  jle    cf218 <__strftime_internal+0x1f18>
    0.00 :   cef0f:  lea    0xc94fb(%rip),%rax        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cef16:  sub    $0x1,%ebp
    0.00 :   cef19:  mov    $0x1,%r8d
    0.00 :   cef1f:  mov    %rax,0x20(%rsp)
    0.00 :   cef24:  jmp    cdee8 <__strftime_internal+0xbe8>
    0.00 :   cef29:  mov    (%rsp),%rax
    0.00 :   cef2d:  mov    0x20(%rax),%ecx
    0.00 :   cef30:  test   %ecx,%ecx
    0.00 :   cef32:  jns    ceef0 <__strftime_internal+0x1bf0>
    0.00 :   cef34:  lea    0xc7e9a(%rip),%rax        # 196dd5 <dir_suffix+0x170>
    0.00 :   cef3b:  xor    %r8d,%r8d
    0.00 :   cef3e:  mov    %rax,0x20(%rsp)
    0.00 :   cef43:  jmp    cdee8 <__strftime_internal+0xbe8>
    0.00 :   cef48:  test   %ebp,%ebp
    0.00 :   cef4a:  mov    $0x1,%eax
    0.00 :   cef4f:  mov    %rsi,%r14
    0.00 :   cef52:  cmovg  %ebp,%eax
    0.00 :   cef55:  mov    %eax,0x30(%rsp)
    0.00 :   cef59:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   cef5e:  mov    $0x2,%edx
    0.00 :   cef63:  mov    %rsi,%r14
    0.00 :   cef66:  cmp    %edx,%ebp
    0.00 :   cef68:  cmovge %ebp,%edx
    0.00 :   cef6b:  mov    %edx,0x30(%rsp)
    0.00 :   cef6f:  movslq %eax,%rdx
    0.00 :   cef72:  imul   $0xffffffff92492493,%rdx,%rdx
    0.00 :   cef79:  shr    $0x20,%rdx
    0.00 :   cef7d:  add    %eax,%edx
    0.00 :   cef7f:  sar    $0x1f,%eax
    0.00 :   cef82:  sar    $0x2,%edx
    0.00 :   cef85:  sub    %eax,%edx
    0.00 :   cef87:  lea    0x1(%rdx),%edi
    0.00 :   cef8a:  jmp    cdcf0 <__strftime_internal+0x9f0>
    0.00 :   cef8f:  mov    $0x1,%ecx
    0.00 :   cef94:  cmp    $0xb,%edx
    0.00 :   cef97:  ja     cefc5 <__strftime_internal+0x1cc5>
    0.00 :   cef99:  lea    0x20087(%rdx),%eax
    0.00 :   cef9f:  mov    0x10(%rsp),%rdi
    0.00 :   cefa4:  mov    %r9d,0x40(%rsp)
    0.00 :   cefa9:  movzwl %ax,%eax
    0.00 :   cefac:  mov    %edx,0x30(%rsp)
    0.00 :   cefb0:  mov    0x38(%rdi,%rax,8),%rdi
    0.00 :   cefb5:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   cefba:  mov    0x40(%rsp),%r9d
    0.00 :   cefbf:  mov    0x30(%rsp),%edx
    0.00 :   cefc3:  mov    %eax,%ecx
    0.00 :   cefc5:  sub    %ecx,%ebp
    0.00 :   cefc7:  mov    $0x0,%eax
    0.00 :   cefcc:  cmovns %ebp,%eax
    0.00 :   cefcf:  add    %ecx,%eax
    0.00 :   cefd1:  movslq %eax,%rdi
    0.00 :   cefd4:  mov    %r12,%rax
    0.00 :   cefd7:  sub    %r13,%rax
    0.00 :   cefda:  mov    %rdi,0x30(%rsp)
    0.00 :   cefdf:  cmp    %rax,%rdi
    0.00 :   cefe2:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cefe8:  test   %rbx,%rbx
    0.00 :   cefeb:  je     ce95c <__strftime_internal+0x165c>
    0.00 :   ceff1:  test   %ebp,%ebp
    0.00 :   ceff3:  jle    cf02e <__strftime_internal+0x1d2e>
    0.00 :   ceff5:  movslq %ebp,%rbp
    0.00 :   ceff8:  mov    %ecx,0x48(%rsp)
    0.00 :   ceffc:  mov    %r9d,0x40(%rsp)
    0.00 :   cf001:  mov    %rbp,%rdx
    0.00 :   cf004:  cmp    $0x30,%r15d
    0.00 :   cf008:  je     cf510 <__strftime_internal+0x2210>
    0.00 :   cf00e:  mov    $0x20,%esi
    0.00 :   cf013:  mov    %rbx,%rdi
    0.00 :   cf016:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf01b:  mov    0x40(%rsp),%r9d
    0.00 :   cf020:  mov    0x48(%rsp),%ecx
    0.00 :   cf024:  mov    (%rsp),%rax
    0.00 :   cf028:  add    %rbp,%rbx
    0.00 :   cf02b:  mov    0x10(%rax),%edx
    0.00 :   cf02e:  movslq %ecx,%rbp
    0.00 :   cf031:  test   %r9d,%r9d
    0.00 :   cf034:  jne    cf52b <__strftime_internal+0x222b>
    0.00 :   cf03a:  lea    0xc93d0(%rip),%rsi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cf041:  cmp    $0xb,%edx
    0.00 :   cf044:  ja     ce94e <__strftime_internal+0x164e>
    0.00 :   cf04a:  mov    0x10(%rsp),%rdi
    0.00 :   cf04f:  lea    0x20087(%rdx),%eax
    0.00 :   cf055:  movzwl %ax,%eax
    0.00 :   cf058:  mov    0x38(%rdi,%rax,8),%rsi
    0.00 :   cf05d:  jmp    ce94e <__strftime_internal+0x164e>
    0.00 :   cf062:  xor    %eax,%eax
    0.00 :   cf064:  mov    0x10(%rsp),%rdi
    0.00 :   cf069:  cmp    $0xb,%edx
    0.00 :   cf06c:  setg   %al
    0.00 :   cf06f:  mov    0x168(%rdi,%rax,8),%rdi
    0.00 :   cf077:  lea    -0x1(%rbp),%rax
    0.00 :   cf07b:  test   %rbp,%rbp
    0.00 :   cf07e:  je     cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf084:  mov    0x8(%rsp),%r8
    0.00 :   cf089:  movzbl (%rdi,%rax,1),%esi
    0.00 :   cf08d:  mov    0x78(%r8),%rdx
    0.00 :   cf091:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cf094:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf097:  sub    $0x1,%rax
    0.00 :   cf09b:  jae    cf089 <__strftime_internal+0x1d89>
    0.00 :   cf09d:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf0a2:  mov    %rbx,%rdi
    0.00 :   cf0a5:  mov    $0x30,%esi
    0.00 :   cf0aa:  mov    %rcx,0x40(%rsp)
    0.00 :   cf0af:  mov    %rbp,%rbx
    0.00 :   cf0b2:  mov    %r9d,0x30(%rsp)
    0.00 :   cf0b7:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf0bc:  mov    (%rsp),%rax
    0.00 :   cf0c0:  mov    0x30(%rsp),%r9d
    0.00 :   cf0c5:  mov    0x40(%rsp),%rcx
    0.00 :   cf0ca:  mov    0x48(%rsp),%r11d
    0.00 :   cf0cf:  mov    0x8(%rax),%edx
    0.00 :   cf0d2:  mov    0x50(%rsp),%r8
    0.00 :   cf0d7:  jmp    ce23b <__strftime_internal+0xf3b>
    0.00 :   cf0dc:  cmp    %rax,%rdi
    0.00 :   cf0df:  jae    cd3d0 <__strftime_internal+0xd0>
    0.00 :   cf0e5:  test   %rbx,%rbx
    0.00 :   cf0e8:  je     cf13f <__strftime_internal+0x1e3f>
    0.00 :   cf0ea:  test   %edx,%edx
    0.00 :   cf0ec:  jle    cf138 <__strftime_internal+0x1e38>
    0.00 :   cf0ee:  movslq %edx,%rax
    0.00 :   cf0f1:  mov    %r9,0x58(%rsp)
    0.00 :   cf0f6:  mov    %rax,0x40(%rsp)
    0.00 :   cf0fb:  mov    %r8d,0x50(%rsp)
    0.00 :   cf100:  mov    %r11d,0x48(%rsp)
    0.00 :   cf105:  cmp    $0x30,%r15d
    0.00 :   cf109:  je     cf5b3 <__strftime_internal+0x22b3>
    0.00 :   cf10f:  mov    0x40(%rsp),%rdx
    0.00 :   cf114:  mov    $0x20,%esi
    0.00 :   cf119:  mov    %rbx,%rdi
    0.00 :   cf11c:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf121:  mov    0x48(%rsp),%r11d
    0.00 :   cf126:  mov    0x50(%rsp),%r8d
    0.00 :   cf12b:  mov    0x58(%rsp),%r9
    0.00 :   cf130:  mov    0x40(%rsp),%rax
    0.00 :   cf135:  add    %rax,%rbx
    0.00 :   cf138:  movb   $0x2d,(%rbx)
    0.00 :   cf13b:  add    $0x1,%rbx
    0.00 :   cf13f:  mov    0x30(%rsp),%rax
    0.00 :   cf144:  mov    %r9d,%ecx
    0.00 :   cf147:  neg    %ecx
    0.00 :   cf149:  add    %rax,%r13
    0.00 :   cf14c:  jmp    cdba8 <__strftime_internal+0x8a8>
    0.00 :   cf151:  mov    0x10(%rsp),%rsi
    0.00 :   cf156:  mov    (%rsp),%rdi
    0.00 :   cf15a:  mov    %r8d,0x40(%rsp)
    0.00 :   cf15f:  mov    %r11d,0x30(%rsp)
    0.00 :   cf164:  call   d2210 <_nl_get_era_entry>
    0.00 :   cf169:  mov    0x40(%rsp),%r8d
    0.00 :   cf16e:  mov    0x30(%rsp),%r11d
    0.00 :   cf173:  test   %rax,%rax
    0.00 :   cf176:  je     cdf93 <__strftime_internal+0xc93>
    0.00 :   cf17c:  mov    0x28(%rax),%rax
    0.00 :   cf180:  test   %r15d,%r15d
    0.00 :   cf183:  mov    %rax,0x30(%rsp)
    0.00 :   cf188:  mov    0x28(%rsp),%eax
    0.00 :   cf18c:  cmovne %r15d,%eax
    0.00 :   cf190:  mov    %eax,0x28(%rsp)
    0.00 :   cf194:  jmp    cd9f8 <__strftime_internal+0x6f8>
    0.00 :   cf199:  mov    %rsi,%r14
    0.00 :   cf19c:  xor    %r8d,%r8d
    0.00 :   cf19f:  jmp    cd8aa <__strftime_internal+0x5aa>
    0.00 :   cf1a4:  lea    -0x1(%rbp),%rax
    0.00 :   cf1a8:  test   %rbp,%rbp
    0.00 :   cf1ab:  je     cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf1b1:  mov    0x20(%rsp),%rdi
    0.00 :   cf1b6:  mov    0x8(%rsp),%r8
    0.00 :   cf1bb:  movzbl (%rdi,%rax,1),%esi
    0.00 :   cf1bf:  mov    0x78(%r8),%rdx
    0.00 :   cf1c3:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cf1c6:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf1c9:  sub    $0x1,%rax
    0.00 :   cf1cd:  jae    cf1bb <__strftime_internal+0x1ebb>
    0.00 :   cf1cf:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf1d4:  lea    -0x1(%rbp),%rax
    0.00 :   cf1d8:  test   %rbp,%rbp
    0.00 :   cf1db:  je     cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf1e1:  mov    0x20(%rsp),%rdi
    0.00 :   cf1e6:  mov    0x8(%rsp),%r8
    0.00 :   cf1eb:  movzbl (%rdi,%rax,1),%esi
    0.00 :   cf1ef:  mov    0x70(%r8),%rdx
    0.00 :   cf1f3:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cf1f6:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf1f9:  sub    $0x1,%rax
    0.00 :   cf1fd:  jae    cf1eb <__strftime_internal+0x1eeb>
    0.00 :   cf1ff:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf204:  mov    %r11d,0x40(%rsp)
    0.00 :   cf209:  mov    0x20(%rsp),%rdi
    0.00 :   cf20e:  mov    %r9d,0x30(%rsp)
    0.00 :   cf213:  jmp    cded4 <__strftime_internal+0xbd4>
    0.00 :   cf218:  mov    0x103d61(%rip),%rdx        # 1d2f80 <__tzname@@GLIBC_2.2.5-0x15a0>
    0.00 :   cf21f:  mov    (%rdx,%rax,8),%rdi
    0.00 :   cf223:  mov    %rdi,0x20(%rsp)
    0.00 :   cf228:  test   %rdi,%rdi
    0.00 :   cf22b:  je     cef34 <__strftime_internal+0x1c34>
    0.00 :   cf231:  mov    %r11d,0x40(%rsp)
    0.00 :   cf236:  mov    %r9d,0x30(%rsp)
    0.00 :   cf23b:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   cf240:  mov    0x40(%rsp),%r11d
    0.00 :   cf245:  mov    0x30(%rsp),%r9d
    0.00 :   cf24a:  mov    %eax,%r8d
    0.00 :   cf24d:  sub    %eax,%ebp
    0.00 :   cf24f:  jmp    cdee8 <__strftime_internal+0xbe8>
    0.00 :   cf254:  lea    0xc91b6(%rip),%rdi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cf25b:  cmp    $0x6,%edx
    0.00 :   cf25e:  ja     cf273 <__strftime_internal+0x1f73>
    0.00 :   cf260:  mov    0x10(%rsp),%rdi
    0.00 :   cf265:  lea    0x20007(%rdx),%eax
    0.00 :   cf26b:  movzwl %ax,%eax
    0.00 :   cf26e:  mov    0x38(%rdi,%rax,8),%rdi
    0.00 :   cf273:  lea    -0x1(%rbp),%rax
    0.00 :   cf277:  test   %rbp,%rbp
    0.00 :   cf27a:  je     cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf280:  mov    0x8(%rsp),%r8
    0.00 :   cf285:  movzbl (%rdi,%rax,1),%esi
    0.00 :   cf289:  mov    0x78(%r8),%rdx
    0.00 :   cf28d:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cf290:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf293:  sub    $0x1,%rax
    0.00 :   cf297:  jae    cf285 <__strftime_internal+0x1f85>
    0.00 :   cf299:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf29e:  lea    0xc916c(%rip),%rdi        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cf2a5:  cmp    $0x6,%edx
    0.00 :   cf2a8:  ja     cf2b4 <__strftime_internal+0x1fb4>
    0.00 :   cf2aa:  mov    0x10(%rsp),%rax
    0.00 :   cf2af:  mov    0x38(%rax,%rdx,8),%rdi
    0.00 :   cf2b4:  lea    -0x1(%rbp),%rax
    0.00 :   cf2b8:  test   %rbp,%rbp
    0.00 :   cf2bb:  je     cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf2c1:  mov    0x8(%rsp),%r8
    0.00 :   cf2c6:  movzbl (%rdi,%rax,1),%esi
    0.00 :   cf2ca:  mov    0x78(%r8),%rdx
    0.00 :   cf2ce:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cf2d1:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf2d4:  sub    $0x1,%rax
    0.00 :   cf2d8:  jae    cf2c6 <__strftime_internal+0x1fc6>
    0.00 :   cf2da:  jmp    cd5a8 <__strftime_internal+0x2a8>
    0.00 :   cf2df:  mov    %rbx,%rdi
    0.00 :   cf2e2:  mov    $0x30,%esi
    0.00 :   cf2e7:  mov    %rbp,%rbx
    0.00 :   cf2ea:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf2ef:  mov    (%rsp),%rax
    0.00 :   cf2f3:  mov    0x30(%rsp),%r9d
    0.00 :   cf2f8:  mov    0x40(%rsp),%rcx
    0.00 :   cf2fd:  mov    0x48(%rsp),%r8d
    0.00 :   cf302:  movslq 0x18(%rax),%rdx
    0.00 :   cf306:  jmp    cdc93 <__strftime_internal+0x993>
    0.00 :   cf30b:  mov    $0x30,%esi
    0.00 :   cf310:  mov    %rbx,%rdi
    0.00 :   cf313:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf318:  mov    0x30(%rsp),%rcx
    0.00 :   cf31d:  jmp    ce07d <__strftime_internal+0xd7d>
    0.00 :   cf322:  mov    %r11d,0x30(%rsp)
    0.00 :   cf327:  mov    %r9d,0x20(%rsp)
    0.00 :   cf32c:  call   c7e50 <tzset>
    0.00 :   cf331:  mov    0x18(%rsp),%rax
    0.00 :   cf336:  mov    0x30(%rsp),%r11d
    0.00 :   cf33b:  mov    0x20(%rsp),%r9d
    0.00 :   cf340:  movb   $0x1,(%rax)
    0.00 :   cf343:  jmp    ceefe <__strftime_internal+0x1bfe>
    0.00 :   cf348:  mov    $0x30,%esi
    0.00 :   cf34d:  mov    %rbx,%rdi
    0.00 :   cf350:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf355:  mov    0x30(%rsp),%rcx
    0.00 :   cf35a:  jmp    ce554 <__strftime_internal+0x1254>
    0.00 :   cf35f:  mov    %rbx,%rdi
    0.00 :   cf362:  mov    $0x30,%esi
    0.00 :   cf367:  mov    %rbp,%rbx
    0.00 :   cf36a:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf36f:  mov    (%rsp),%rax
    0.00 :   cf373:  mov    0x30(%rsp),%r9d
    0.00 :   cf378:  mov    0x40(%rsp),%rcx
    0.00 :   cf37d:  mov    0x48(%rsp),%r8d
    0.00 :   cf382:  mov    0x18(%rax),%edx
    0.00 :   cf385:  jmp    ce3de <__strftime_internal+0x10de>
    0.00 :   cf38a:  mov    $0x30,%esi
    0.00 :   cf38f:  mov    %rbx,%rdi
    0.00 :   cf392:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf397:  mov    0x50(%rsp),%r8d
    0.00 :   cf39c:  mov    0x48(%rsp),%rcx
    0.00 :   cf3a1:  mov    0x40(%rsp),%r11d
    0.00 :   cf3a6:  mov    0x30(%rsp),%r9d
    0.00 :   cf3ab:  jmp    cdf56 <__strftime_internal+0xc56>
    0.00 :   cf3b0:  cmp    $0x45,%r8d
    0.00 :   cf3b4:  jne    cd8aa <__strftime_internal+0x5aa>
    0.00 :   cf3ba:  mov    %r9d,%r11d
    0.00 :   cf3bd:  mov    %r14,%rsi
    0.00 :   cf3c0:  jmp    cd4e3 <__strftime_internal+0x1e3>
    0.00 :   cf3c5:  cmp    $0xb,%ecx
    0.00 :   cf3c8:  ja     cf3dd <__strftime_internal+0x20dd>
    0.00 :   cf3ca:  mov    0x10(%rsp),%rdi
    0.00 :   cf3cf:  lea    0x2001a(%rcx),%eax
    0.00 :   cf3d5:  movzwl %ax,%eax
    0.00 :   cf3d8:  mov    0x38(%rdi,%rax,8),%rsi
    0.00 :   cf3dd:  lea    -0x1(%r15),%rax
    0.00 :   cf3e1:  test   %r15,%r15
    0.00 :   cf3e4:  je     cd99d <__strftime_internal+0x69d>
    0.00 :   cf3ea:  mov    0x8(%rsp),%rdi
    0.00 :   cf3ef:  movzbl (%rsi,%rax,1),%ecx
    0.00 :   cf3f3:  mov    0x78(%rdi),%rdx
    0.00 :   cf3f7:  mov    (%rdx,%rcx,4),%edx
    0.00 :   cf3fa:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf3fd:  sub    $0x1,%rax
    0.00 :   cf401:  jae    cf3ef <__strftime_internal+0x20ef>
    0.00 :   cf403:  jmp    cd99d <__strftime_internal+0x69d>
    0.00 :   cf408:  cmp    $0xb,%ecx
    0.00 :   cf40b:  ja     cf420 <__strftime_internal+0x2120>
    0.00 :   cf40d:  mov    0x10(%rsp),%rdi
    0.00 :   cf412:  lea    0x2000e(%rcx),%eax
    0.00 :   cf418:  movzwl %ax,%eax
    0.00 :   cf41b:  mov    0x38(%rdi,%rax,8),%rsi
    0.00 :   cf420:  lea    -0x1(%r15),%rax
    0.00 :   cf424:  test   %r15,%r15
    0.00 :   cf427:  je     cd99d <__strftime_internal+0x69d>
    0.00 :   cf42d:  mov    0x8(%rsp),%rdi
    0.00 :   cf432:  movzbl (%rsi,%rax,1),%ecx
    0.00 :   cf436:  mov    0x78(%rdi),%rdx
    0.00 :   cf43a:  mov    (%rdx,%rcx,4),%edx
    0.00 :   cf43d:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf440:  sub    $0x1,%rax
    0.00 :   cf444:  jae    cf432 <__strftime_internal+0x2132>
    0.00 :   cf446:  jmp    cd99d <__strftime_internal+0x69d>
    0.00 :   cf44b:  mov    %rbx,%rdi
    0.00 :   cf44e:  mov    $0x30,%esi
    0.00 :   cf453:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf458:  mov    (%rsp),%rax
    0.00 :   cf45c:  mov    0x30(%rsp),%rbx
    0.00 :   cf461:  mov    0x40(%rsp),%r9d
    0.00 :   cf466:  mov    0x48(%rsp),%r8d
    0.00 :   cf46b:  mov    0x10(%rax),%ecx
    0.00 :   cf46e:  jmp    cd967 <__strftime_internal+0x667>
    0.00 :   cf473:  mov    %rbx,%rdi
    0.00 :   cf476:  mov    $0x30,%esi
    0.00 :   cf47b:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf480:  mov    (%rsp),%rax
    0.00 :   cf484:  mov    0x30(%rsp),%rbx
    0.00 :   cf489:  mov    0x40(%rsp),%r9d
    0.00 :   cf48e:  mov    0x48(%rsp),%r8d
    0.00 :   cf493:  mov    0x10(%rax),%ecx
    0.00 :   cf496:  jmp    ce767 <__strftime_internal+0x1467>
    0.00 :   cf49b:  lea    -0x1(%rbp),%rax
    0.00 :   cf49f:  test   %rbp,%rbp
    0.00 :   cf4a2:  je     ce959 <__strftime_internal+0x1659>
    0.00 :   cf4a8:  mov    0x8(%rsp),%rdi
    0.00 :   cf4ad:  movzbl (%rsi,%rax,1),%ecx
    0.00 :   cf4b1:  mov    0x78(%rdi),%rdx
    0.00 :   cf4b5:  mov    (%rdx,%rcx,4),%edx
    0.00 :   cf4b8:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf4bb:  sub    $0x1,%rax
    0.00 :   cf4bf:  jae    cf4ad <__strftime_internal+0x21ad>
    0.00 :   cf4c1:  jmp    ce959 <__strftime_internal+0x1659>
    0.00 :   cf4c6:  lea    0xc8f44(%rip),%rcx        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cf4cd:  cmp    $0xb,%edx
    0.00 :   cf4d0:  ja     cf4e5 <__strftime_internal+0x21e5>
    0.00 :   cf4d2:  mov    0x10(%rsp),%rdi
    0.00 :   cf4d7:  lea    0x2006f(%rdx),%eax
    0.00 :   cf4dd:  movzwl %ax,%eax
    0.00 :   cf4e0:  mov    0x38(%rdi,%rax,8),%rcx
    0.00 :   cf4e5:  lea    -0x1(%rbp),%rax
    0.00 :   cf4e9:  test   %rbp,%rbp
    0.00 :   cf4ec:  je     ce959 <__strftime_internal+0x1659>
    0.00 :   cf4f2:  mov    0x8(%rsp),%rdi
    0.00 :   cf4f7:  movzbl (%rcx,%rax,1),%esi
    0.00 :   cf4fb:  mov    0x78(%rdi),%rdx
    0.00 :   cf4ff:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cf502:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf505:  sub    $0x1,%rax
    0.00 :   cf509:  jae    cf4f7 <__strftime_internal+0x21f7>
    0.00 :   cf50b:  jmp    ce959 <__strftime_internal+0x1659>
    0.00 :   cf510:  mov    $0x30,%esi
    0.00 :   cf515:  mov    %rbx,%rdi
    0.00 :   cf518:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf51d:  mov    0x48(%rsp),%ecx
    0.00 :   cf521:  mov    0x40(%rsp),%r9d
    0.00 :   cf526:  jmp    cf024 <__strftime_internal+0x1d24>
    0.00 :   cf52b:  lea    0xc8edf(%rip),%rcx        # 198411 <__nss_invalid_field_characters+0x187>
    0.00 :   cf532:  cmp    $0xb,%edx
    0.00 :   cf535:  ja     cf54a <__strftime_internal+0x224a>
    0.00 :   cf537:  mov    0x10(%rsp),%rdi
    0.00 :   cf53c:  lea    0x20087(%rdx),%eax
    0.00 :   cf542:  movzwl %ax,%eax
    0.00 :   cf545:  mov    0x38(%rdi,%rax,8),%rcx
    0.00 :   cf54a:  lea    -0x1(%rbp),%rax
    0.00 :   cf54e:  test   %rbp,%rbp
    0.00 :   cf551:  je     ce959 <__strftime_internal+0x1659>
    0.00 :   cf557:  mov    0x8(%rsp),%rdi
    0.00 :   cf55c:  movzbl (%rcx,%rax,1),%esi
    0.00 :   cf560:  mov    0x78(%rdi),%rdx
    0.00 :   cf564:  mov    (%rdx,%rsi,4),%edx
    0.00 :   cf567:  mov    %dl,(%rbx,%rax,1)
    0.00 :   cf56a:  sub    $0x1,%rax
    0.00 :   cf56e:  jae    cf55c <__strftime_internal+0x225c>
    0.00 :   cf570:  jmp    ce959 <__strftime_internal+0x1659>
    0.00 :   cf575:  mov    %rax,%rdx
    0.00 :   cf578:  mov    $0x30,%esi
    0.00 :   cf57d:  mov    %rbx,%rdi
    0.00 :   cf580:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf585:  mov    0x58(%rsp),%r8d
    0.00 :   cf58a:  mov    0x50(%rsp),%ecx
    0.00 :   cf58e:  mov    0x48(%rsp),%r11d
    0.00 :   cf593:  jmp    cdb91 <__strftime_internal+0x891>
    0.00 :   cf598:  mov    $0x30,%esi
    0.00 :   cf59d:  mov    %rbx,%rdi
    0.00 :   cf5a0:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf5a5:  mov    0x48(%rsp),%ecx
    0.00 :   cf5a9:  mov    0x40(%rsp),%r9d
    0.00 :   cf5ae:  jmp    ceaf5 <__strftime_internal+0x17f5>
    0.00 :   cf5b3:  mov    %rax,%rdx
    0.00 :   cf5b6:  mov    $0x30,%esi
    0.00 :   cf5bb:  mov    %rbx,%rdi
    0.00 :   cf5be:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf5c3:  mov    0x58(%rsp),%r9
    0.00 :   cf5c8:  mov    0x50(%rsp),%r8d
    0.00 :   cf5cd:  mov    0x48(%rsp),%r11d
    0.00 :   cf5d2:  jmp    cf130 <__strftime_internal+0x1e30>
    0.00 :   cf5d7:  mov    $0x30,%esi
    0.00 :   cf5dc:  mov    %rbx,%rdi
    0.00 :   cf5df:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   cf5e4:  mov    0x50(%rsp),%r11d
    0.00 :   cf5e9:  jmp    ce934 <__strftime_internal+0x1634>
    0.00 :   cf5ee:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

  100.00 dbt2-client[407120]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .plt:
         :
         : 5      0000000000407120 <strlen@plt>:
  100.00 :   407120: jmp    *0x14f6a(%rip)        # 41c090 <strlen@GLIBC_2.2.5> // dbt2-client[407120]
    0.00 :   407126: push   $0xf
    0.00 :   40712b: jmp    407020 <_init+0x20>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

  100.00 dbt2-client[411a42]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004119dc <sem_wait>:
         : 6      sem_wait():
    0.00 :   4119dc: push   %rbp
    0.00 :   4119dd: mov    %rsp,%rbp
    0.00 :   4119e0: push   %r12
    0.00 :   4119e2: push   %rbx
    0.00 :   4119e3: sub    $0x10,%rsp
    0.00 :   4119e7: mov    %rdi,-0x18(%rbp)
    0.00 :   4119eb: mov    -0x18(%rbp),%r12
    0.00 :   4119ef: call   407060 <__errno_location@plt>
    0.00 :   4119f4: mov    %rax,%rbx
    0.00 :   4119f7: mov    %r12,%rdi
    0.00 :   4119fa: call   407400 <pthread_mutex_lock@plt>
    0.00 :   4119ff: mov    %eax,(%rbx)
    0.00 :   411a01: mov    (%rbx),%eax
    0.00 :   411a03: test   %eax,%eax
    0.00 :   411a05: je     411a25 <sem_wait+0x49>
    0.00 :   411a07: mov    $0xffffffff,%eax
    0.00 :   411a0c: jmp    411a64 <sem_wait+0x88>
    0.00 :   411a0e: mov    -0x18(%rbp),%rax
    0.00 :   411a12: mov    -0x18(%rbp),%rdx
    0.00 :   411a16: add    $0x28,%rdx
    0.00 :   411a1a: mov    %rax,%rsi
    0.00 :   411a1d: mov    %rdx,%rdi
    0.00 :   411a20: call   407440 <pthread_cond_wait@plt>
    0.00 :   411a25: mov    -0x18(%rbp),%rax
    0.00 :   411a29: mov    0x58(%rax),%eax
    0.00 :   411a2c: test   %eax,%eax
    0.00 :   411a2e: je     411a0e <sem_wait+0x32>
    0.00 :   411a30: call   407060 <__errno_location@plt>
    0.00 :   411a35: mov    (%rax),%eax
    0.00 :   411a37: test   %eax,%eax
    0.00 :   411a39: je     411a42 <sem_wait+0x66>
    0.00 :   411a3b: mov    $0xffffffff,%eax
    0.00 :   411a40: jmp    411a64 <sem_wait+0x88>
  100.00 :   411a42: mov    -0x18(%rbp),%rax // dbt2-client[411a42]
    0.00 :   411a46: mov    0x58(%rax),%eax
    0.00 :   411a49: lea    -0x1(%rax),%edx
    0.00 :   411a4c: mov    -0x18(%rbp),%rax
    0.00 :   411a50: mov    %edx,0x58(%rax)
    0.00 :   411a53: mov    -0x18(%rbp),%rax
    0.00 :   411a57: mov    %rax,%rdi
    0.00 :   411a5a: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   411a5f: mov    $0x0,%eax
    0.00 :   411a64: add    $0x10,%rsp
    0.00 :   411a68: pop    %rbx
    0.00 :   411a69: pop    %r12
    0.00 :   411a6b: pop    %rbp
    0.00 :   411a6c: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[975d3]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000975a0 <unlink_chunk.constprop.0>:
         : 6     unlink_chunk.constprop.0():
    0.00 :   975a0:  sub    $0x8,%rsp
    0.00 :   975a4:  mov    0x8(%rdi),%rcx
    0.00 :   975a8:  mov    %rcx,%rax
    0.00 :   975ab:  and    $0xfffffffffffffff8,%rax
    0.00 :   975af:  cmp    (%rdi,%rax,1),%rax
    0.00 :   975b3:  jne    97662 <unlink_chunk.constprop.0+0xc2>
    0.00 :   975b9:  movdqu 0x10(%rdi),%xmm0
    0.00 :   975be:  mov    0x18(%rdi),%rdx
    0.00 :   975c2:  movq   %xmm0,%rax
    0.00 :   975c7:  cmp    0x18(%rax),%rdi
    0.00 :   975cb:  jne    97648 <unlink_chunk.constprop.0+0xa8>
    0.00 :   975cd:  cmp    0x10(%rdx),%rdi
    0.00 :   975d1:  jne    97648 <unlink_chunk.constprop.0+0xa8>
  100.00 :   975d3:  mov    0x10(%rdi),%rsi // libc.so.6[975d3]
    0.00 :   975d7:  mov    %rdx,0x18(%rax)
    0.00 :   975db:  movq   %xmm0,0x10(%rdx)
    0.00 :   975e0:  cmp    $0x3ff,%rcx
    0.00 :   975e7:  jbe    97611 <unlink_chunk.constprop.0+0x71>
    0.00 :   975e9:  mov    0x20(%rdi),%rdx
    0.00 :   975ed:  test   %rdx,%rdx
    0.00 :   975f0:  je     97611 <unlink_chunk.constprop.0+0x71>
    0.00 :   975f2:  cmp    0x28(%rdx),%rdi
    0.00 :   975f6:  jne    9766e <unlink_chunk.constprop.0+0xce>
    0.00 :   975f8:  mov    0x28(%rdi),%rcx
    0.00 :   975fc:  cmp    0x20(%rcx),%rdi
    0.00 :   97600:  jne    9766e <unlink_chunk.constprop.0+0xce>
    0.00 :   97602:  cmpq   $0x0,0x20(%rax)
    0.00 :   97607:  je     97620 <unlink_chunk.constprop.0+0x80>
    0.00 :   97609:  mov    %rcx,0x28(%rdx)
    0.00 :   9760d:  mov    %rdx,0x20(%rcx)
    0.00 :   97611:  add    $0x8,%rsp
    0.00 :   97615:  ret
    0.00 :   97616:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   97620:  cmp    %rdx,%rdi
    0.00 :   97623:  je     97658 <unlink_chunk.constprop.0+0xb8>
    0.00 :   97625:  movq   %rdx,%xmm0
    0.00 :   9762a:  movq   %rcx,%xmm1
    0.00 :   9762f:  punpcklqdq %xmm1,%xmm0
    0.00 :   97633:  movups %xmm0,0x20(%rax)
    0.00 :   97637:  mov    %rax,0x28(%rdx)
    0.00 :   9763b:  mov    0x28(%rdi),%rdx
    0.00 :   9763f:  mov    %rax,0x20(%rdx)
    0.00 :   97643:  jmp    97611 <unlink_chunk.constprop.0+0x71>
    0.00 :   97645:  nopl   (%rax)
    0.00 :   97648:  lea    0x100a2c(%rip),%rdi        # 19807b <null+0xec1>
    0.00 :   9764f:  call   96b80 <malloc_printerr>
    0.00 :   97654:  nopl   0x0(%rax)
    0.00 :   97658:  punpcklqdq %xmm0,%xmm0
    0.00 :   9765c:  movups %xmm0,0x20(%rsi)
    0.00 :   97660:  jmp    97611 <unlink_chunk.constprop.0+0x71>
    0.00 :   97662:  lea    0x1009f5(%rip),%rdi        # 19805e <null+0xea4>
    0.00 :   97669:  call   96b80 <malloc_printerr>
    0.00 :   9766e:  lea    0x10580b(%rip),%rdi        # 19ce80 <aliasfile.0+0x1438>
    0.00 :   97675:  call   96b80 <malloc_printerr>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

  100.00 dbt2-client[412f33]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000412ea7 <get_node>:
         : 6      get_node():
    0.00 :   412ea7: push   %rbp
    0.00 :   412ea8: mov    %rsp,%rbp
    0.00 :   412eab: sub    $0x10,%rsp
    0.00 :   412eaf: mov    $0x41c700,%edi
    0.00 :   412eb4: call   4119dc <sem_wait>
    0.00 :   412eb9: mov    $0x41c780,%edi
    0.00 :   412ebe: call   407400 <pthread_mutex_lock@plt>
    0.00 :   412ec3: mov    0x9896(%rip),%rax        # 41c760 <node_head>
    0.00 :   412eca: mov    %rax,-0x8(%rbp)
    0.00 :   412ece: mov    0x988b(%rip),%rax        # 41c760 <node_head>
    0.00 :   412ed5: test   %rax,%rax
    0.00 :   412ed8: jne    412ee1 <get_node+0x3a>
    0.00 :   412eda: mov    $0x0,%eax
    0.00 :   412edf: jmp    412f32 <get_node+0x8b>
    0.00 :   412ee1: mov    0x9878(%rip),%rax        # 41c760 <node_head>
    0.00 :   412ee8: mov    0x2ee8(%rax),%rax
    0.00 :   412eef: test   %rax,%rax
    0.00 :   412ef2: jne    412f0f <get_node+0x68>
    0.00 :   412ef4: movq   $0x0,0x9869(%rip)        # 41c768 <node_tail>
    0.00 :   412eff: mov    0x9862(%rip),%rax        # 41c768 <node_tail>
    0.00 :   412f06: mov    %rax,0x9853(%rip)        # 41c760 <node_head>
    0.00 :   412f0d: jmp    412f24 <get_node+0x7d>
    0.00 :   412f0f: mov    0x984a(%rip),%rax        # 41c760 <node_head>
    0.00 :   412f16: mov    0x2ee8(%rax),%rax
    0.00 :   412f1d: mov    %rax,0x983c(%rip)        # 41c760 <node_head>
    0.00 :   412f24: mov    $0x41c780,%edi
    0.00 :   412f29: call   4071a0 <pthread_mutex_unlock@plt>
    0.00 :   412f2e: mov    -0x8(%rbp),%rax
    0.00 :   412f32: leave
  100.00 :   412f33: ret // dbt2-client[412f33]

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[8d603]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000008d5d0 <__pthread_mutex_cond_lock>:
         : 6     __pthread_mutex_cond_lock():
    0.00 :   8d5d0:  endbr64
    0.00 :   8d5d4:  mov    0x10(%rdi),%eax
    0.00 :   8d5d7:  mov    %eax,%edx
    0.00 :   8d5d9:  and    $0x17f,%edx
    0.00 :   8d5df:  nop
    0.00 :   8d5e0:  and    $0x7c,%eax
    0.00 :   8d5e3:  jne    8d668 <__pthread_mutex_cond_lock+0x98>
    0.00 :   8d5e9:  push   %rbp
    0.00 :   8d5ea:  sub    $0x10,%rsp
    0.00 :   8d5ee:  test   %edx,%edx
    0.00 :   8d5f0:  jne    8d670 <__pthread_mutex_cond_lock+0xa0>
    0.00 :   8d5f2:  mov    0x148458(%rip),%ecx        # 1d5a50 <__GI___pthread_force_elision>
    0.00 :   8d5f8:  test   %ecx,%ecx
    0.00 :   8d5fa:  jne    8d630 <__pthread_mutex_cond_lock+0x60>
    0.00 :   8d5fc:  mov    $0x2,%eax
    0.00 :   8d601:  xchg   %eax,(%rdi)
  100.00 :   8d603:  test   %eax,%eax // libc.so.6[8d603]
    0.00 :   8d605:  jne    8d6c0 <__pthread_mutex_cond_lock+0xf0>
    0.00 :   8d60b:  mov    0x8(%rdi),%edx
    0.00 :   8d60e:  test   %edx,%edx
    0.00 :   8d610:  jne    8d754 <__pthread_mutex_cond_lock+0x184>
    0.00 :   8d616:  mov    %fs:0x2d0,%eax
    0.00 :   8d61e:  mov    %eax,0x8(%rdi)
    0.00 :   8d621:  nop
    0.00 :   8d622:  xor    %eax,%eax
    0.00 :   8d624:  add    $0x10,%rsp
    0.00 :   8d628:  pop    %rbp
    0.00 :   8d629:  ret
    0.00 :   8d62a:  nopw   0x0(%rax,%rax,1)
    0.00 :   8d630:  mov    0x10(%rdi),%eax
    0.00 :   8d633:  test   $0x3,%ah
    0.00 :   8d636:  je     8d640 <__pthread_mutex_cond_lock+0x70>
    0.00 :   8d638:  test   $0x1,%ah
    0.00 :   8d63b:  je     8d5fc <__pthread_mutex_cond_lock+0x2c>
    0.00 :   8d63d:  jmp    8d646 <__pthread_mutex_cond_lock+0x76>
    0.00 :   8d63f:  nop
    0.00 :   8d640:  or     $0x1,%ah
    0.00 :   8d643:  mov    %eax,0x10(%rdi)
    0.00 :   8d646:  mov    $0x2,%eax
    0.00 :   8d64b:  xchg   %eax,(%rdi)
    0.00 :   8d64d:  test   %eax,%eax
    0.00 :   8d64f:  je     8d622 <__pthread_mutex_cond_lock+0x52>
    0.00 :   8d651:  mov    0x10(%rdi),%esi
    0.00 :   8d654:  and    $0x80,%esi
    0.00 :   8d65a:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8d65f:  jmp    8d622 <__pthread_mutex_cond_lock+0x52>
    0.00 :   8d661:  nopl   0x0(%rax)
    0.00 :   8d668:  jmp    8cee0 <__pthread_mutex_cond_lock_full>
    0.00 :   8d66d:  nopl   (%rax)
    0.00 :   8d670:  cmp    $0x100,%edx
    0.00 :   8d676:  je     8d646 <__pthread_mutex_cond_lock+0x76>
    0.00 :   8d678:  mov    0x10(%rdi),%edx
    0.00 :   8d67b:  and    $0x7f,%edx
    0.00 :   8d67e:  cmp    $0x1,%edx
    0.00 :   8d681:  jne    8d6f4 <__pthread_mutex_cond_lock+0x124>
    0.00 :   8d683:  mov    %fs:0x2d0,%eax
    0.00 :   8d68b:  cmp    %eax,0x8(%rdi)
    0.00 :   8d68e:  je     8d6dd <__pthread_mutex_cond_lock+0x10d>
    0.00 :   8d690:  mov    $0x2,%eax
    0.00 :   8d695:  xchg   %eax,(%rdi)
    0.00 :   8d697:  test   %eax,%eax
    0.00 :   8d699:  jne    8d737 <__pthread_mutex_cond_lock+0x167>
    0.00 :   8d69f:  mov    0x8(%rdi),%eax
    0.00 :   8d6a2:  test   %eax,%eax
    0.00 :   8d6a4:  jne    8d836 <__pthread_mutex_cond_lock+0x266>
    0.00 :   8d6aa:  movl   $0x1,0x4(%rdi)
    0.00 :   8d6b1:  jmp    8d616 <__pthread_mutex_cond_lock+0x46>
    0.00 :   8d6b6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   8d6c0:  mov    0x10(%rdi),%esi
    0.00 :   8d6c3:  mov    %rdi,0x8(%rsp)
    0.00 :   8d6c8:  and    $0x80,%esi
    0.00 :   8d6ce:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8d6d3:  mov    0x8(%rsp),%rdi
    0.00 :   8d6d8:  jmp    8d60b <__pthread_mutex_cond_lock+0x3b>
    0.00 :   8d6dd:  mov    0x4(%rdi),%eax
    0.00 :   8d6e0:  cmp    $0xffffffff,%eax
    0.00 :   8d6e3:  je     8d773 <__pthread_mutex_cond_lock+0x1a3>
    0.00 :   8d6e9:  add    $0x1,%eax
    0.00 :   8d6ec:  mov    %eax,0x4(%rdi)
    0.00 :   8d6ef:  jmp    8d622 <__pthread_mutex_cond_lock+0x52>
    0.00 :   8d6f4:  mov    0x10(%rdi),%edx
    0.00 :   8d6f7:  and    $0x7f,%edx
    0.00 :   8d6fa:  cmp    $0x3,%edx
    0.00 :   8d6fd:  jne    8d7eb <__pthread_mutex_cond_lock+0x21b>
    0.00 :   8d703:  mov    $0x2,%edx
    0.00 :   8d708:  lock cmpxchg %edx,(%rdi)
    0.00 :   8d70c:  jne    8d77d <__pthread_mutex_cond_lock+0x1ad>
    0.00 :   8d70e:  cmpl   $0x0,0x8(%rdi)
    0.00 :   8d712:  je     8d616 <__pthread_mutex_cond_lock+0x46>
    0.00 :   8d718:  lea    0x112a11(%rip),%rcx        # 1a0130 <blanks+0x110>
    0.00 :   8d71f:  mov    $0xa7,%edx
    0.00 :   8d724:  lea    0x10a7b9(%rip),%rsi        # 197ee4 <null+0xd2a>
    0.00 :   8d72b:  lea    0x10a7e5(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8d732:  call   35610 <__assert_fail>
    0.00 :   8d737:  mov    0x10(%rdi),%esi
    0.00 :   8d73a:  mov    %rdi,0x8(%rsp)
    0.00 :   8d73f:  and    $0x80,%esi
    0.00 :   8d745:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8d74a:  mov    0x8(%rsp),%rdi
    0.00 :   8d74f:  jmp    8d69f <__pthread_mutex_cond_lock+0xcf>
    0.00 :   8d754:  lea    0x1129d5(%rip),%rcx        # 1a0130 <blanks+0x110>
    0.00 :   8d75b:  mov    $0x5e,%edx
    0.00 :   8d760:  lea    0x10a77d(%rip),%rsi        # 197ee4 <null+0xd2a>
    0.00 :   8d767:  lea    0x10a7a9(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8d76e:  call   35610 <__assert_fail>
    0.00 :   8d773:  mov    $0xb,%eax
    0.00 :   8d778:  jmp    8d624 <__pthread_mutex_cond_lock+0x54>
    0.00 :   8d77d:  movswl 0x14(%rdi),%eax
    0.00 :   8d781:  movswl 0x145b24(%rip),%edx        # 1d32ac <__GI___mutex_aconf>
    0.00 :   8d788:  lea    0xa(%rax,%rax,1),%eax
    0.00 :   8d78c:  mov    %edx,%ecx
    0.00 :   8d78e:  cmp    %edx,%eax
    0.00 :   8d790:  cmovle %eax,%ecx
    0.00 :   8d793:  rdtsc
    0.00 :   8d795:  mov    $0x1,%edx
    0.00 :   8d79a:  xor    %ebp,%ebp
    0.00 :   8d79c:  mov    %eax,%esi
    0.00 :   8d79e:  lea    -0x1(%rdx),%eax
    0.00 :   8d7a1:  and    %esi,%eax
    0.00 :   8d7a3:  add    %edx,%eax
    0.00 :   8d7a5:  add    %eax,%ebp
    0.00 :   8d7a7:  cmp    %ebp,%ecx
    0.00 :   8d7a9:  jle    8d811 <__pthread_mutex_cond_lock+0x241>
    0.00 :   8d7ab:  pause
    0.00 :   8d7ad:  sub    $0x1,%eax
    0.00 :   8d7b0:  test   %eax,%eax
    0.00 :   8d7b2:  jg     8d7ab <__pthread_mutex_cond_lock+0x1db>
    0.00 :   8d7b4:  cmp    $0xf,%edx
    0.00 :   8d7b7:  jg     8d7bb <__pthread_mutex_cond_lock+0x1eb>
    0.00 :   8d7b9:  add    %edx,%edx
    0.00 :   8d7bb:  mov    (%rdi),%eax
    0.00 :   8d7bd:  test   %eax,%eax
    0.00 :   8d7bf:  jne    8d79e <__pthread_mutex_cond_lock+0x1ce>
    0.00 :   8d7c1:  mov    $0x2,%r8d
    0.00 :   8d7c7:  lock cmpxchg %r8d,(%rdi)
    0.00 :   8d7cc:  jne    8d79e <__pthread_mutex_cond_lock+0x1ce>
    0.00 :   8d7ce:  movswl 0x14(%rdi),%edx
    0.00 :   8d7d2:  mov    %ebp,%eax
    0.00 :   8d7d4:  mov    $0x8,%esi
    0.00 :   8d7d9:  sub    %edx,%eax
    0.00 :   8d7db:  mov    %edx,%ecx
    0.00 :   8d7dd:  cltd
    0.00 :   8d7de:  idiv   %esi
    0.00 :   8d7e0:  add    %eax,%ecx
    0.00 :   8d7e2:  mov    %cx,0x14(%rdi)
    0.00 :   8d7e6:  jmp    8d70e <__pthread_mutex_cond_lock+0x13e>
    0.00 :   8d7eb:  mov    %fs:0x2d0,%edx
    0.00 :   8d7f3:  mov    0x10(%rdi),%eax
    0.00 :   8d7f6:  and    $0x7f,%eax
    0.00 :   8d7f9:  cmp    $0x2,%eax
    0.00 :   8d7fc:  jne    8d855 <__pthread_mutex_cond_lock+0x285>
    0.00 :   8d7fe:  cmp    %edx,0x8(%rdi)
    0.00 :   8d801:  jne    8d5fc <__pthread_mutex_cond_lock+0x2c>
    0.00 :   8d807:  mov    $0x23,%eax
    0.00 :   8d80c:  jmp    8d624 <__pthread_mutex_cond_lock+0x54>
    0.00 :   8d811:  mov    $0x2,%eax
    0.00 :   8d816:  xchg   %eax,(%rdi)
    0.00 :   8d818:  test   %eax,%eax
    0.00 :   8d81a:  je     8d7ce <__pthread_mutex_cond_lock+0x1fe>
    0.00 :   8d81c:  mov    0x10(%rdi),%esi
    0.00 :   8d81f:  mov    %rdi,0x8(%rsp)
    0.00 :   8d824:  and    $0x80,%esi
    0.00 :   8d82a:  call   87f20 <__GI___lll_lock_wait>
    0.00 :   8d82f:  mov    0x8(%rsp),%rdi
    0.00 :   8d834:  jmp    8d7ce <__pthread_mutex_cond_lock+0x1fe>
    0.00 :   8d836:  lea    0x1128f3(%rip),%rcx        # 1a0130 <blanks+0x110>
    0.00 :   8d83d:  mov    $0x82,%edx
    0.00 :   8d842:  lea    0x10a69b(%rip),%rsi        # 197ee4 <null+0xd2a>
    0.00 :   8d849:  lea    0x10a6c7(%rip),%rdi        # 197f17 <null+0xd5d>
    0.00 :   8d850:  call   35610 <__assert_fail>
    0.00 :   8d855:  lea    0x1128d4(%rip),%rcx        # 1a0130 <blanks+0x110>
    0.00 :   8d85c:  mov    $0xac,%edx
    0.00 :   8d861:  lea    0x10a67c(%rip),%rsi        # 197ee4 <null+0xd2a>
    0.00 :   8d868:  lea    0x10ef19(%rip),%rdi        # 19c788 <aliasfile.0+0xd40>
    0.00 :   8d86f:  call   35610 <__assert_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[105fd4]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000105fd0 <__tfind>:
         : 6      __GI___tfind():
    0.00 :   105fd0: endbr64
  100.00 :   105fd4: push   %r12 // libc.so.6[105fd4]
    0.00 :   105fd6: push   %rbp
    0.00 :   105fd7: push   %rbx
    0.00 :   105fd8: test   %rsi,%rsi
    0.00 :   105fdb: je     106020 <__tfind+0x50>
    0.00 :   105fdd: mov    (%rsi),%rbx
    0.00 :   105fe0: mov    %rdi,%rbp
    0.00 :   105fe3: mov    %rdx,%r12
    0.00 :   105fe6: cmp    $0x1,%rbx
    0.00 :   105fea: ja     106007 <__tfind+0x37>
    0.00 :   105fec: jmp    106020 <__tfind+0x50>
    0.00 :   105fee: xchg   %ax,%ax
    0.00 :   105ff0: lea    0x8(%rbx),%rdx
    0.00 :   105ff4: add    $0x10,%rbx
    0.00 :   105ff8: test   %eax,%eax
    0.00 :   105ffa: cmovs  %rdx,%rbx
    0.00 :   105ffe: mov    (%rbx),%rbx
    0.00 :   106001: cmp    $0x1,%rbx
    0.00 :   106005: jbe    106020 <__tfind+0x50>
    0.00 :   106007: and    $0xfffffffffffffffe,%rbx
    0.00 :   10600b: mov    %rbp,%rdi
    0.00 :   10600e: mov    (%rbx),%rsi
    0.00 :   106011: call   *%r12
    0.00 :   106014: test   %eax,%eax
    0.00 :   106016: jne    105ff0 <__tfind+0x20>
    0.00 :   106018: mov    %rbx,%rax
    0.00 :   10601b: pop    %rbx
    0.00 :   10601c: pop    %rbp
    0.00 :   10601d: pop    %r12
    0.00 :   10601f: ret
    0.00 :   106020: xor    %ebx,%ebx
    0.00 :   106022: mov    %rbx,%rax
    0.00 :   106025: pop    %rbx
    0.00 :   106026: pop    %rbp
    0.00 :   106027: pop    %r12
    0.00 :   106029: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz
----------------------------------------------

  100.00 [virtio_gpu][2b87]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002b80 <virtio_gpu_cmd_resource_flush>:
         : 6    virtio_gpu_cmd_resource_flush():
    0.00 :   2b80:   call   2b85 <virtio_gpu_cmd_resource_flush+0x5>
    0.00 :   2b85:   push   %r15
  100.00 :   2b87:   push   %r14 // [virtio_gpu][2b87]
    0.00 :   2b89:   mov    %esi,%r14d
    0.00 :   2b8c:   mov    $0x8dc0,%esi
    0.00 :   2b91:   push   %r13
    0.00 :   2b93:   mov    %r8d,%r13d
    0.00 :   2b96:   push   %r12
    0.00 :   2b98:   mov    %r9d,%r12d
    0.00 :   2b9b:   push   %rbp
    0.00 :   2b9c:   mov    %edx,%ebp
    0.00 :   2b9e:   push   %rbx
    0.00 :   2b9f:   mov    %rdi,%rbx
    0.00 :   2ba2:   sub    $0x10,%rsp
    0.00 :   2ba6:   mov    0x9da8(%rdi),%rdi
    0.00 :   2bad:   mov    0x50(%rsp),%rax
    0.00 :   2bb2:   mov    0x48(%rsp),%r15
    0.00 :   2bb7:   mov    %ecx,0x4(%rsp)
    0.00 :   2bbb:   mov    %rax,0x8(%rsp)
    0.00 :   2bc0:   call   2bc5 <virtio_gpu_cmd_resource_flush+0x45>
    0.00 :   2bc5:   mov    %rax,%rsi
    0.00 :   2bc8:   add    $0x58,%rax
    0.00 :   2bcc:   mov    %rax,(%rsi)
    0.00 :   2bcf:   lea    0x88(%rsi),%rax
    0.00 :   2bd6:   movl   $0x30,0x8(%rsi)
    0.00 :   2bdd:   movq   $0x0,0x30(%rsi)
    0.00 :   2be5:   movl   $0x18,0x28(%rsi)
    0.00 :   2bec:   mov    %rax,0x20(%rsi)
    0.00 :   2bf0:   test   %rax,%rax
    0.00 :   2bf3:   je     2c61 <virtio_gpu_cmd_resource_flush+0xe1>
    0.00 :   2bf5:   lea    0x64(%rsi),%rdi
    0.00 :   2bf9:   mov    %esi,%eax
    0.00 :   2bfb:   movq   $0x0,0x80(%rsi)
    0.00 :   2c06:   and    $0xfffffffffffffff8,%rdi
    0.00 :   2c0a:   movq   $0x0,0x5c(%rsi)
    0.00 :   2c12:   sub    %edi,%eax
    0.00 :   2c14:   lea    0x88(%rax),%ecx
    0.00 :   2c1a:   xor    %eax,%eax
    0.00 :   2c1c:   shr    $0x3,%ecx
    0.00 :   2c1f:   rep stos %rax,%es:(%rdi)
    0.00 :   2c22:   mov    %r15,0x40(%rsi)
    0.00 :   2c26:   mov    %rbx,%rdi
    0.00 :   2c29:   movl   $0x104,0x58(%rsi)
    0.00 :   2c30:   mov    0x4(%rsp),%eax
    0.00 :   2c34:   mov    %r14d,0x80(%rsi)
    0.00 :   2c3b:   mov    %r13d,0x78(%rsi)
    0.00 :   2c3f:   mov    0x8(%rsp),%rdx
    0.00 :   2c44:   mov    %r12d,0x7c(%rsi)
    0.00 :   2c48:   mov    %ebp,0x70(%rsi)
    0.00 :   2c4b:   mov    %eax,0x74(%rsi)
    0.00 :   2c4e:   add    $0x10,%rsp
    0.00 :   2c52:   pop    %rbx
    0.00 :   2c53:   pop    %rbp
    0.00 :   2c54:   pop    %r12
    0.00 :   2c56:   pop    %r13
    0.00 :   2c58:   pop    %r14
    0.00 :   2c5a:   pop    %r15
    0.00 :   2c5c:   jmp    1f80 <virtio_gpu_queue_fenced_ctrl_buffer>
    0.00 :   2c61:   ud2

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz
----------------------------------------------

  100.00 [virtio_gpu][5260]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/gpu/drm/virtio/virtio-gpu.ko.xz for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000005260 <virtio_gpu_primary_plane_update>:
         : 6    virtio_gpu_primary_plane_update():
  100.00 :   5260:   call   5265 <virtio_gpu_primary_plane_update+0x5> // [virtio_gpu][5260]
    0.00 :   5265:   push   %r15
    0.00 :   5267:   push   %r14
    0.00 :   5269:   push   %r13
    0.00 :   526b:   push   %r12
    0.00 :   526d:   push   %rbp
    0.00 :   526e:   push   %rbx
    0.00 :   526f:   mov    %rdi,%rbx
    0.00 :   5272:   sub    $0x30,%rsp
    0.00 :   5276:   mov    0x24c(%rdi),%eax
    0.00 :   527c:   movq   $0x0,0x20(%rsp)
    0.00 :   5285:   shl    $0x5,%rax
    0.00 :   5289:   add    0x18(%rsi),%rax
    0.00 :   528d:   mov    0x258(%rdi),%rsi
    0.00 :   5294:   mov    0x10(%rax),%r14
    0.00 :   5298:   mov    (%rdi),%rax
    0.00 :   529b:   movq   $0x0,0x28(%rsp)
    0.00 :   52a4:   mov    0x38(%rax),%r12
    0.00 :   52a8:   mov    0x8(%rsi),%rax
    0.00 :   52ac:   mov    0x8(%r14),%rbp
    0.00 :   52b0:   test   %rax,%rax
    0.00 :   52b3:   je     54d5 <virtio_gpu_primary_plane_update+0x275>
    0.00 :   52b9:   test   %rbp,%rbp
    0.00 :   52bc:   je     54cc <virtio_gpu_primary_plane_update+0x26c>
    0.00 :   52c2:   sub    $0x8,%rbp
    0.00 :   52c6:   test   %rbp,%rbp
    0.00 :   52c9:   je     54de <virtio_gpu_primary_plane_update+0x27e>
    0.00 :   52cf:   cmpq   $0x0,0x10(%rsi)
    0.00 :   52d4:   je     52e3 <virtio_gpu_primary_plane_update+0x83>
    0.00 :   52d6:   mov    0x350(%rbp),%rax
    0.00 :   52dd:   cmpb   $0x0,0x9(%rax)
    0.00 :   52e1:   jne    531f <virtio_gpu_primary_plane_update+0xbf>
    0.00 :   52e3:   nopl   0x0(%rax,%rax,1)
    0.00 :   52e8:   movzwl 0x3a(%rsi),%r8d
    0.00 :   52ed:   movzwl 0x3e(%rsi),%ecx
    0.00 :   52f1:   xor    %r9d,%r9d
    0.00 :   52f4:   xor    %edx,%edx
    0.00 :   52f6:   mov    0x0(%rbp),%esi
    0.00 :   52f9:   push   $0x0
    0.00 :   52fb:   mov    %r12,%rdi
    0.00 :   52fe:   call   5303 <virtio_gpu_primary_plane_update+0xa3>
    0.00 :   5303:   mov    %r12,%rdi
    0.00 :   5306:   call   530b <virtio_gpu_primary_plane_update+0xab>
    0.00 :   530b:   pop    %rbx
    0.00 :   530c:   add    $0x30,%rsp
    0.00 :   5310:   pop    %rbx
    0.00 :   5311:   pop    %rbp
    0.00 :   5312:   pop    %r12
    0.00 :   5314:   pop    %r13
    0.00 :   5316:   pop    %r14
    0.00 :   5318:   pop    %r15
    0.00 :   531a:   jmp    531f <virtio_gpu_primary_plane_update+0xbf>
    0.00 :   531f:   lea    0x20(%rsp),%rdx
    0.00 :   5324:   mov    %r14,%rdi
    0.00 :   5327:   call   532c <virtio_gpu_primary_plane_update+0xcc>
    0.00 :   532c:   test   %al,%al
    0.00 :   532e:   je     530c <virtio_gpu_primary_plane_update+0xac>
    0.00 :   5330:   mov    0x258(%rbx),%rax
    0.00 :   5337:   mov    0x10(%rax),%r15
    0.00 :   533b:   mov    0xa8(%r15),%r13
    0.00 :   5342:   cmpb   $0x0,0x1d4(%r13)
    0.00 :   534a:   jne    5572 <virtio_gpu_primary_plane_update+0x312>
    0.00 :   5350:   cmp    %r15,0x10(%r14)
    0.00 :   5354:   je     5617 <virtio_gpu_primary_plane_update+0x3b7>
    0.00 :   535a:   movb   $0x0,0x9c8(%rbp)
    0.00 :   5361:   nopl   0x0(%rax,%rax,1)
    0.00 :   5366:   mov    0x258(%rbx),%rax
    0.00 :   536d:   mov    0x0(%rbp),%esi
    0.00 :   5370:   cmpw   $0x0,0x1d6(%r13)
    0.00 :   5379:   movzwl 0x36(%rax),%edx
    0.00 :   537d:   movzwl 0x32(%rax),%r9d
    0.00 :   5382:   movzwl 0x3a(%rax),%r8d
    0.00 :   5387:   movzwl 0x3e(%rax),%ecx
    0.00 :   538b:   jne    54f3 <virtio_gpu_primary_plane_update+0x293>
    0.00 :   5391:   mov    0x1d0(%r13),%eax
    0.00 :   5398:   push   %rdx
    0.00 :   5399:   mov    %r12,%rdi
    0.00 :   539c:   mov    %eax,%edx
    0.00 :   539e:   call   53a3 <virtio_gpu_primary_plane_update+0x143>
    0.00 :   53a3:   mov    0x258(%rbx),%rax
    0.00 :   53aa:   pop    %rdi
    0.00 :   53ab:   mov    0x10(%rax),%r15
    0.00 :   53af:   mov    0x24(%rsp),%r12d
    0.00 :   53b4:   mov    0x2c(%rsp),%eax
    0.00 :   53b8:   mov    0x20(%rsp),%ebp
    0.00 :   53bc:   mov    0x28(%rsp),%ecx
    0.00 :   53c0:   sub    %r12d,%eax
    0.00 :   53c3:   mov    0xa8(%r15),%r14
    0.00 :   53ca:   mov    %eax,0x4(%rsp)
    0.00 :   53ce:   mov    (%rbx),%rax
    0.00 :   53d1:   sub    %ebp,%ecx
    0.00 :   53d3:   cmpq   $0x0,0xc8(%r15)
    0.00 :   53db:   mov    %ecx,0x8(%rsp)
    0.00 :   53df:   mov    0x38(%rax),%r13
    0.00 :   53e3:   je     5645 <virtio_gpu_primary_plane_update+0x3e5>
    0.00 :   53e9:   mov    $0x1,%edi
    0.00 :   53ee:   call   53f3 <virtio_gpu_primary_plane_update+0x193>
    0.00 :   53f3:   mov    %rax,%rbx
    0.00 :   53f6:   test   %rax,%rax
    0.00 :   53f9:   je     530c <virtio_gpu_primary_plane_update+0xac>
    0.00 :   53ff:   mov    0xa8(%r15),%rsi
    0.00 :   5406:   mov    %rax,%rdi
    0.00 :   5409:   call   540e <virtio_gpu_primary_plane_update+0x1ae>
    0.00 :   540e:   mov    %rbx,%rdi
    0.00 :   5411:   call   5416 <virtio_gpu_primary_plane_update+0x1b6>
    0.00 :   5416:   mov    %r12d,%ecx
    0.00 :   5419:   mov    %ebp,%edx
    0.00 :   541b:   mov    %r13,%rdi
    0.00 :   541e:   mov    0x1d0(%r14),%esi
    0.00 :   5425:   push   0xc8(%r15)
    0.00 :   542c:   push   %rbx
    0.00 :   542d:   mov    0x14(%rsp),%r9d
    0.00 :   5432:   mov    0x18(%rsp),%r8d
    0.00 :   5437:   call   543c <virtio_gpu_primary_plane_update+0x1dc>
    0.00 :   543c:   mov    %r13,%rdi
    0.00 :   543f:   call   5444 <virtio_gpu_primary_plane_update+0x1e4>
    0.00 :   5444:   mov    $0x1,%esi
    0.00 :   5449:   mov    $0x32,%edx
    0.00 :   544e:   mov    0xc8(%r15),%rdi
    0.00 :   5455:   call   545a <virtio_gpu_primary_plane_update+0x1fa>
    0.00 :   545a:   mov    0xc8(%r15),%rax
    0.00 :   5461:   pop    %rcx
    0.00 :   5462:   pop    %rsi
    0.00 :   5463:   test   %rax,%rax
    0.00 :   5466:   je     548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   5468:   lea    0x38(%rax),%rdi
    0.00 :   546c:   mov    $0xffffffff,%edx
    0.00 :   5471:   lock xadd %edx,0x38(%rax)
    0.00 :   5476:   cmp    $0x1,%edx
    0.00 :   5479:   je     5676 <virtio_gpu_primary_plane_update+0x416>
    0.00 :   547f:   test   %edx,%edx
    0.00 :   5481:   jg     548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   5483:   mov    $0x3,%esi
    0.00 :   5488:   call   548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   548d:   movq   $0x0,0xc8(%r15)
    0.00 :   5498:   add    $0x30,%rsp
    0.00 :   549c:   pop    %rbx
    0.00 :   549d:   pop    %rbp
    0.00 :   549e:   pop    %r12
    0.00 :   54a0:   pop    %r13
    0.00 :   54a2:   pop    %r14
    0.00 :   54a4:   pop    %r15
    0.00 :   54a6:   jmp    54ab <virtio_gpu_primary_plane_update+0x24b>
    0.00 :   54ab:   xor    %esi,%esi
    0.00 :   54ad:   mov    $0x0,%rdx
    0.00 :   54b4:   mov    $0x0,%rdi
    0.00 :   54bb:   call   54c0 <virtio_gpu_primary_plane_update+0x260>
    0.00 :   54c0:   mov    0x258(%rbx),%rsi
    0.00 :   54c7:   jmp    52e8 <virtio_gpu_primary_plane_update+0x88>
    0.00 :   54cc:   lea    -0x8(%rax),%rbp
    0.00 :   54d0:   jmp    52c6 <virtio_gpu_primary_plane_update+0x66>
    0.00 :   54d5:   test   %rbp,%rbp
    0.00 :   54d8:   jne    52c2 <virtio_gpu_primary_plane_update+0x62>
    0.00 :   54de:   ud2
    0.00 :   54e0:   add    $0x30,%rsp
    0.00 :   54e4:   pop    %rbx
    0.00 :   54e5:   pop    %rbp
    0.00 :   54e6:   pop    %r12
    0.00 :   54e8:   pop    %r13
    0.00 :   54ea:   pop    %r14
    0.00 :   54ec:   pop    %r15
    0.00 :   54ee:   jmp    54f3 <virtio_gpu_primary_plane_update+0x293>
    0.00 :   54f3:   mov    0x10(%rax),%rax
    0.00 :   54f7:   push   %rdx
    0.00 :   54f8:   mov    %r12,%rdi
    0.00 :   54fb:   mov    %r13,%rdx
    0.00 :   54fe:   push   %r9
    0.00 :   5500:   mov    %r8d,%r9d
    0.00 :   5503:   mov    %ecx,%r8d
    0.00 :   5506:   mov    %rax,%rcx
    0.00 :   5509:   call   550e <virtio_gpu_primary_plane_update+0x2ae>
    0.00 :   550e:   mov    0x258(%rbx),%rax
    0.00 :   5515:   pop    %r8
    0.00 :   5517:   pop    %r9
    0.00 :   5519:   mov    0x10(%rax),%r15
    0.00 :   551d:   jmp    53af <virtio_gpu_primary_plane_update+0x14f>
    0.00 :   5522:   mov    0x258(%rbx),%rax
    0.00 :   5529:   mov    0x1d0(%r13),%ecx
    0.00 :   5530:   xor    %esi,%esi
    0.00 :   5532:   mov    $0x0,%rdi
    0.00 :   5539:   movzwl 0x36(%rax),%edx
    0.00 :   553d:   mov    0x2c(%rax),%r9d
    0.00 :   5541:   mov    0x28(%rax),%r8d
    0.00 :   5545:   push   %rdx
    0.00 :   5546:   movzwl 0x32(%rax),%edx
    0.00 :   554a:   push   %rdx
    0.00 :   554b:   movzwl 0x3a(%rax),%edx
    0.00 :   554f:   push   %rdx
    0.00 :   5550:   movzwl 0x3e(%rax),%edx
    0.00 :   5554:   push   %rdx
    0.00 :   5555:   mov    0x24(%rax),%edx
    0.00 :   5558:   push   %rdx
    0.00 :   5559:   mov    0x20(%rax),%eax
    0.00 :   555c:   mov    $0x0,%rdx
    0.00 :   5563:   push   %rax
    0.00 :   5564:   call   5569 <virtio_gpu_primary_plane_update+0x309>
    0.00 :   5569:   add    $0x30,%rsp
    0.00 :   556d:   jmp    5366 <virtio_gpu_primary_plane_update+0x106>
    0.00 :   5572:   mov    0x20(%rsp),%eax
    0.00 :   5576:   mov    $0x1,%edi
    0.00 :   557b:   mov    %eax,0x4(%rsp)
    0.00 :   557f:   mov    0x24(%rsp),%eax
    0.00 :   5583:   mov    %eax,0x8(%rsp)
    0.00 :   5587:   mov    0x28(%rsp),%eax
    0.00 :   558b:   mov    %eax,0xc(%rsp)
    0.00 :   558f:   mov    0x2c(%rsp),%eax
    0.00 :   5593:   mov    %eax,0x10(%rsp)
    0.00 :   5597:   mov    0x48(%r15),%rax
    0.00 :   559b:   mov    0x58(%r15),%r15d
    0.00 :   559f:   movzbl 0x6(%rax),%eax
    0.00 :   55a3:   mov    %al,0x17(%rsp)
    0.00 :   55a7:   call   55ac <virtio_gpu_primary_plane_update+0x34c>
    0.00 :   55ac:   test   %rax,%rax
    0.00 :   55af:   je     5680 <virtio_gpu_primary_plane_update+0x420>
    0.00 :   55b5:   mov    %rax,%rdi
    0.00 :   55b8:   mov    %r13,%rsi
    0.00 :   55bb:   mov    %rax,0x18(%rsp)
    0.00 :   55c0:   call   55c5 <virtio_gpu_primary_plane_update+0x365>
    0.00 :   55c5:   mov    0x8(%rsp),%r9d
    0.00 :   55ca:   mov    0x4(%rsp),%r8d
    0.00 :   55cf:   movzbl 0x17(%rsp),%edx
    0.00 :   55d4:   mov    0x10(%rsp),%ecx
    0.00 :   55d8:   mov    0xc(%rsp),%esi
    0.00 :   55dc:   imul   %r9d,%r15d
    0.00 :   55e0:   push   $0x0
    0.00 :   55e2:   imul   %r8d,%edx
    0.00 :   55e6:   mov    0x20(%rsp),%rax
    0.00 :   55eb:   sub    %r9d,%ecx
    0.00 :   55ee:   sub    %r8d,%esi
    0.00 :   55f1:   push   %rax
    0.00 :   55f2:   lea    (%rdx,%r15,1),%edi
    0.00 :   55f6:   mov    %esi,%edx
    0.00 :   55f8:   mov    %rdi,%rsi
    0.00 :   55fb:   mov    %r12,%rdi
    0.00 :   55fe:   call   5603 <virtio_gpu_primary_plane_update+0x3a3>
    0.00 :   5603:   mov    0x258(%rbx),%rax
    0.00 :   560a:   pop    %r10
    0.00 :   560c:   pop    %r11
    0.00 :   560e:   mov    0x10(%rax),%r15
    0.00 :   5612:   jmp    5350 <virtio_gpu_primary_plane_update+0xf0>
    0.00 :   5617:   mov    0x38(%r14),%rcx
    0.00 :   561b:   cmp    %rcx,0x38(%rax)
    0.00 :   561f:   jne    535a <virtio_gpu_primary_plane_update+0xfa>
    0.00 :   5625:   mov    0x30(%r14),%rcx
    0.00 :   5629:   cmp    %rcx,0x30(%rax)
    0.00 :   562d:   jne    535a <virtio_gpu_primary_plane_update+0xfa>
    0.00 :   5633:   cmpb   $0x0,0x9c8(%rbp)
    0.00 :   563a:   je     53af <virtio_gpu_primary_plane_update+0x14f>
    0.00 :   5640:   jmp    535a <virtio_gpu_primary_plane_update+0xfa>
    0.00 :   5645:   mov    0x1d0(%r14),%esi
    0.00 :   564c:   push   $0x0
    0.00 :   564e:   mov    %ebp,%edx
    0.00 :   5650:   mov    %r12d,%ecx
    0.00 :   5653:   push   $0x0
    0.00 :   5655:   mov    0x14(%rsp),%r9d
    0.00 :   565a:   mov    %r13,%rdi
    0.00 :   565d:   mov    0x18(%rsp),%r8d
    0.00 :   5662:   call   5667 <virtio_gpu_primary_plane_update+0x407>
    0.00 :   5667:   mov    %r13,%rdi
    0.00 :   566a:   call   566f <virtio_gpu_primary_plane_update+0x40f>
    0.00 :   566f:   pop    %rax
    0.00 :   5670:   pop    %rdx
    0.00 :   5671:   jmp    530c <virtio_gpu_primary_plane_update+0xac>
    0.00 :   5676:   call   567b <virtio_gpu_primary_plane_update+0x41b>
    0.00 :   567b:   jmp    548d <virtio_gpu_primary_plane_update+0x22d>
    0.00 :   5680:   mov    0x258(%rbx),%rax
    0.00 :   5687:   mov    0x10(%rax),%r15
    0.00 :   568b:   jmp    5350 <virtio_gpu_primary_plane_update+0xf0>

Sorted summary for file /usr/local/bin/dbt2-client
----------------------------------------------

  100.00 dbt2-client[407b7c]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-client for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407adb <send_transaction_data>:
         : 6      send_transaction_data():
    0.00 :   407adb: push   %rbp
    0.00 :   407adc: mov    %rsp,%rbp
    0.00 :   407adf: sub    $0x20,%rsp
    0.00 :   407ae3: mov    %edi,-0x14(%rbp)
    0.00 :   407ae6: mov    %rsi,-0x20(%rbp)
    0.00 :   407aea: mov    -0x20(%rbp),%rcx
    0.00 :   407aee: mov    -0x14(%rbp),%eax
    0.00 :   407af1: mov    $0x2ee0,%edx
    0.00 :   407af6: mov    %rcx,%rsi
    0.00 :   407af9: mov    %eax,%edi
    0.00 :   407afb: call   40787a <_send>
    0.00 :   407b00: mov    %eax,-0x4(%rbp)
    0.00 :   407b03: cmpl   $0xffffffff,-0x4(%rbp)
    0.00 :   407b07: jne    407b29 <send_transaction_data+0x4e>
    0.00 :   407b09: mov    $0x4141c2,%edx
    0.00 :   407b0e: mov    $0x30,%esi
    0.00 :   407b13: mov    $0x414168,%edi
    0.00 :   407b18: mov    $0x0,%eax
    0.00 :   407b1d: call   40840f <log_error_message>
    0.00 :   407b22: mov    $0x0,%eax
    0.00 :   407b27: jmp    407b7b <send_transaction_data+0xa0>
    0.00 :   407b29: cmpl   $0x0,-0x4(%rbp)
    0.00 :   407b2d: jne    407b4f <send_transaction_data+0x74>
    0.00 :   407b2f: mov    $0x4141df,%edx
    0.00 :   407b34: mov    $0x33,%esi
    0.00 :   407b39: mov    $0x414168,%edi
    0.00 :   407b3e: mov    $0x0,%eax
    0.00 :   407b43: call   40840f <log_error_message>
    0.00 :   407b48: mov    $0x3,%eax
    0.00 :   407b4d: jmp    407b7b <send_transaction_data+0xa0>
    0.00 :   407b4f: cmpl   $0x2ee0,-0x4(%rbp)
    0.00 :   407b56: je     407b78 <send_transaction_data+0x9d>
    0.00 :   407b58: mov    $0x4141f6,%edx
    0.00 :   407b5d: mov    $0x36,%esi
    0.00 :   407b62: mov    $0x414168,%edi
    0.00 :   407b67: mov    $0x0,%eax
    0.00 :   407b6c: call   40840f <log_error_message>
    0.00 :   407b71: mov    $0x0,%eax
    0.00 :   407b76: jmp    407b7b <send_transaction_data+0xa0>
    0.00 :   407b78: mov    -0x4(%rbp),%eax
    0.00 :   407b7b: leave
  100.00 :   407b7c: ret // dbt2-client[407b7c]
