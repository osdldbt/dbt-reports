
Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   52.34 [nf_tables][16a]
   38.98 [nf_tables][1d5]
   35.07 [nf_tables][167]
   35.07 [nf_tables][163]
   12.88 [nf_tables][187]
    4.81 [nf_tables][5bb]
    4.81 [nf_tables][22d]
    4.57 [nf_tables][fa]
    4.57 [nf_tables][f8]
    3.44 [nf_tables][1de]
    3.44 [nf_tables][1dc]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (21 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000000e0 <nft_do_chain>:
         : 6   nft_do_chain():
    0.00 :    e0:     call   e5 <nft_do_chain+0x5>
    0.00 :    e5:     push   %r15
    0.00 :    e7:     mov    $0xa,%ecx
    0.00 :    ec:     push   %r14
    0.00 :    ee:     mov    %rdi,%r14
    0.00 :    f1:     push   %r13
    0.00 :    f3:     push   %r12
    0.00 :    f5:     push   %rbp
    0.00 :    f6:     mov    %rsi,%rbp
    0.00 :    f9:     push   %rbx
    4.57 :    fa:     sub    $0x218,%rsp // [nf_tables][fa]
    0.00 :   101:    mov    0x8(%rdi),%rax
    0.00 :   105:    lea    0x48(%rsp),%rbx
    0.00 :   10a:    lea    0x98(%rsp),%rdx
    0.00 :   112:    mov    0x20(%rax),%rsi
    0.00 :   116:    mov    %rbx,%rdi
    0.00 :   119:    xor    %eax,%eax
    0.00 :   11b:    rep stos %rax,%es:(%rdi)
    0.00 :   11e:    mov    $0x30,%ecx
    0.00 :   123:    mov    %rdx,%rdi
    0.00 :   126:    rep stos %rax,%es:(%rdi)
    0.00 :   129:    mov    $0x6,%ecx
    0.00 :   12e:    lea    0x18(%rsp),%rdi
    0.00 :   133:    movzbl 0xc20(%rsi),%r15d
    0.00 :   13b:    rep stos %rax,%es:(%rdi)
    0.00 :   13e:    nopl   0x0(%rax,%rax,1)
    0.00 :   143:    mov    %r15b,0xf(%rsp)
    0.00 :   148:    xor    %r12d,%r12d
    0.00 :   14b:    cmpb   $0x0,0xf(%rsp)
    0.00 :   150:    mov    %rbp,(%rsp)
    0.00 :   154:    mov    (%rsp),%rax
    0.00 :   158:    mov    %rbp,0x10(%rsp)
    0.00 :   15d:    je     328 <nft_do_chain+0x248>
    0.00 :   163:    mov    0x8(%rax),%rax
   35.07 :   167:    mov    (%rax),%rbp // [nf_tables][167]
   26.17 :   16a:    lea    0x8(%rax),%r13 // [nf_tables][16a]
    0.00 :   16e:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   176:    add    %r13,%rbp
    0.00 :   179:    cmp    %rbp,%r13
    0.00 :   17c:    jae    454 <nft_do_chain+0x374>
    0.00 :   182:    mov    %r12d,0x8(%rsp)
    6.44 :   187:    mov    %rbp,%r12 // [nf_tables][187]
    0.00 :   18a:    movzwl 0x0(%r13),%eax
    0.00 :   18f:    lea    0x8(%r13),%rbp
    0.00 :   193:    shr    %ax
    0.00 :   196:    and    $0xfff,%eax
    0.00 :   19b:    lea    0x8(%r13,%rax,1),%r15
    0.00 :   1a0:    cmp    %r15,%rbp
    0.00 :   1a3:    jne    287 <nft_do_chain+0x1a7>
    0.00 :   1a9:    jmp    5d5 <nft_do_chain+0x4f5>
    0.00 :   1ae:    cmp    $0x0,%rax
    0.00 :   1b4:    je     34b <nft_do_chain+0x26b>
    0.00 :   1ba:    cmp    $0x0,%rax
    0.00 :   1c0:    je     330 <nft_do_chain+0x250>
    0.00 :   1c6:    cmp    $0x0,%rax
    0.00 :   1cc:    je     384 <nft_do_chain+0x2a4>
    0.00 :   1d2:    mov    (%rax),%rax
   19.49 :   1d5:    mov    %r14,%rdx // [nf_tables][1d5]
    0.00 :   1d8:    mov    %rbx,%rsi
    0.00 :   1db:    mov    %rbp,%rdi
    3.44 :   1de:    cmp    $0x0,%rax // [nf_tables][1de]
    0.00 :   1e4:    je     474 <nft_do_chain+0x394>
    0.00 :   1ea:    cmp    $0x0,%rax
    0.00 :   1f0:    je     4b6 <nft_do_chain+0x3d6>
    0.00 :   1f6:    cmp    $0x0,%rax
    0.00 :   1fc:    je     4c0 <nft_do_chain+0x3e0>
    0.00 :   202:    cmp    $0x0,%rax
    0.00 :   208:    je     4d5 <nft_do_chain+0x3f5>
    0.00 :   20e:    cmp    $0x0,%rax
    0.00 :   214:    je     4df <nft_do_chain+0x3ff>
    0.00 :   21a:    cmp    $0x0,%rax
    0.00 :   220:    je     521 <nft_do_chain+0x441>
    0.00 :   226:    cmp    $0x0,%rax
    0.00 :   22c:    je     52b <nft_do_chain+0x44b>
    0.00 :   232:    cmp    $0x0,%rax
    0.00 :   238:    je     564 <nft_do_chain+0x484>
    0.00 :   23e:    cmp    $0x0,%rax
    0.00 :   244:    je     56e <nft_do_chain+0x48e>
    0.00 :   24a:    cmp    $0x0,%rax
    0.00 :   250:    je     578 <nft_do_chain+0x498>
    0.00 :   256:    cmp    $0x0,%rax
    0.00 :   25c:    je     582 <nft_do_chain+0x4a2>
    0.00 :   262:    call   267 <nft_do_chain+0x187>
    0.00 :   267:    mov    0x48(%rsp),%edx
    0.00 :   26b:    cmp    $0xffffffff,%edx
    0.00 :   26e:    jne    670 <nft_do_chain+0x590>
    0.00 :   274:    mov    0x0(%rbp),%rax
    0.00 :   278:    mov    0x10(%rax),%eax
    0.00 :   27b:    add    %rax,%rbp
    0.00 :   27e:    cmp    %rbp,%r15
    0.00 :   281:    je     47e <nft_do_chain+0x39e>
    0.00 :   287:    mov    0x0(%rbp),%rax
    0.00 :   28b:    cmp    $0x0,%rax
    0.00 :   291:    jne    1ae <nft_do_chain+0xce>
    0.00 :   297:    movzbl 0x10(%rbp),%eax
    0.00 :   29b:    mov    0x48(%rsp,%rax,4),%eax
    0.00 :   29f:    and    0xc(%rbp),%eax
    0.00 :   2a2:    cmp    0x8(%rbp),%eax
    0.00 :   2a5:    sete   %al
    0.00 :   2a8:    cmp    0x12(%rbp),%al
    0.00 :   2ab:    jne    267 <nft_do_chain+0x187>
    0.00 :   2ad:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   2b5:    nopl   0x0(%rax,%rax,1)
    0.00 :   2ba:    movzwl 0x0(%r13),%eax
    0.00 :   2bf:    shr    %ax
    0.00 :   2c2:    and    $0xfff,%eax
    0.00 :   2c7:    lea    0x8(%r13,%rax,1),%r13
    0.00 :   2cc:    cmp    %r12,%r13
    0.00 :   2cf:    jb     18a <nft_do_chain+0xaa>
    0.00 :   2d5:    mov    %r12,%rbp
    0.00 :   2d8:    mov    0x48(%rsp),%edx
    0.00 :   2dc:    mov    0x8(%rsp),%r12d
    0.00 :   2e1:    nopl   0x0(%rax,%rax,1)
    0.00 :   2e6:    test   $0xfc,%dl
    0.00 :   2e9:    je     509 <nft_do_chain+0x429>
    0.00 :   2ef:    cmp    $0xfffffffd,%edx
    0.00 :   2f2:    je     58c <nft_do_chain+0x4ac>
    0.00 :   2f8:    ja     407 <nft_do_chain+0x327>
    0.00 :   2fe:    cmp    $0xfffffffb,%edx
    0.00 :   301:    je     40e <nft_do_chain+0x32e>
    0.00 :   307:    cmp    $0xfffffffc,%edx
    0.00 :   30a:    jne    40c <nft_do_chain+0x32c>
    0.00 :   310:    mov    0x50(%rsp),%rax
    0.00 :   315:    cmpb   $0x0,0xf(%rsp)
    0.00 :   31a:    mov    %rax,(%rsp)
    0.00 :   31e:    mov    (%rsp),%rax
    0.00 :   322:    jne    163 <nft_do_chain+0x83>
    0.00 :   328:    mov    (%rax),%rax
    0.00 :   32b:    jmp    167 <nft_do_chain+0x87>
    0.00 :   330:    movzbl 0x10(%rbp),%eax
    0.00 :   334:    movzbl 0x11(%rbp),%edx
    0.00 :   338:    mov    0x48(%rsp,%rax,4),%eax
    0.00 :   33c:    and    0x8(%rbp),%eax
    0.00 :   33f:    xor    0xc(%rbp),%eax
    0.00 :   342:    mov    %eax,0x48(%rsp,%rdx,4)
    0.00 :   346:    jmp    267 <nft_do_chain+0x187>
    0.00 :   34b:    movzbl 0x28(%rbp),%eax
    0.00 :   34f:    xor    %edx,%edx
    0.00 :   351:    lea    (%rbx,%rax,4),%rcx
    0.00 :   355:    mov    (%rcx),%rax
    0.00 :   358:    and    0x18(%rbp),%rax
    0.00 :   35c:    cmp    0x8(%rbp),%rax
    0.00 :   360:    jne    373 <nft_do_chain+0x293>
    0.00 :   362:    xor    %edx,%edx
    0.00 :   364:    mov    0x8(%rcx),%rax
    0.00 :   368:    and    0x20(%rbp),%rax
    0.00 :   36c:    cmp    0x10(%rbp),%rax
    0.00 :   370:    sete   %dl
    0.00 :   373:    movzbl 0x2a(%rbp),%eax
    0.00 :   377:    cmp    %edx,%eax
    0.00 :   379:    jne    267 <nft_do_chain+0x187>
    0.00 :   37f:    jmp    2ad <nft_do_chain+0x1cd>
    0.00 :   384:    cmpb   $0x1,0x8(%rbp)
    0.00 :   388:    mov    (%r14),%rsi
    0.00 :   38b:    je     45e <nft_do_chain+0x37e>
    0.00 :   391:    testb  $0x1,0x10(%r14)
    0.00 :   396:    je     1d2 <nft_do_chain+0xf2>
    0.00 :   39c:    movzwl 0xb8(%rsi),%edx
    0.00 :   3a3:    mov    0x14(%r14),%edi
    0.00 :   3a7:    mov    0xc8(%rsi),%rcx
    0.00 :   3ae:    add    %rdi,%rdx
    0.00 :   3b1:    add    %rcx,%rdx
    0.00 :   3b4:    movzbl 0x9(%rbp),%edi
    0.00 :   3b8:    mov    0xbc(%rsi),%esi
    0.00 :   3be:    add    %rdi,%rdx
    0.00 :   3c1:    movzbl 0xa(%rbp),%edi
    0.00 :   3c5:    add    %rsi,%rcx
    0.00 :   3c8:    add    %rdx,%rdi
    0.00 :   3cb:    cmp    %rdi,%rcx
    0.00 :   3ce:    jb     1d2 <nft_do_chain+0xf2>
    0.00 :   3d4:    movzbl 0xb(%rbp),%ecx
    0.00 :   3d8:    movl   $0x0,0x48(%rsp,%rcx,4)
    0.00 :   3e0:    lea    (%rbx,%rcx,4),%rsi
    0.00 :   3e4:    mov    %rcx,%rax
    0.00 :   3e7:    movzbl 0xa(%rbp),%ecx
    0.00 :   3eb:    cmp    $0x2,%cl
    0.00 :   3ee:    je     4ca <nft_do_chain+0x3ea>
    0.00 :   3f4:    cmp    $0x4,%cl
    0.00 :   3f7:    je     535 <nft_do_chain+0x455>
    0.00 :   3fd:    movzbl (%rdx),%eax
    0.00 :   400:    mov    %al,(%rsi)
    0.00 :   402:    jmp    267 <nft_do_chain+0x187>
    0.00 :   407:    cmp    $0xffffffff,%edx
    0.00 :   40a:    je     40e <nft_do_chain+0x32e>
    0.00 :   40c:    ud2
    0.00 :   40e:    test   %r12d,%r12d
    0.00 :   411:    je     619 <nft_do_chain+0x539>
    0.00 :   417:    lea    -0x1(%r12),%eax
    0.00 :   41c:    movl   $0xffffffff,0x48(%rsp)
    0.00 :   424:    mov    %rax,%r12
    0.00 :   427:    lea    (%rax,%rax,2),%rax
    0.00 :   42b:    shl    $0x3,%rax
    0.00 :   42f:    mov    0x98(%rsp,%rax,1),%rdi
    0.00 :   437:    mov    0xa0(%rsp,%rax,1),%r13
    0.00 :   43f:    mov    0xa8(%rsp,%rax,1),%rbp
    0.00 :   447:    mov    %rdi,(%rsp)
    0.00 :   44b:    cmp    %rbp,%r13
    0.00 :   44e:    jb     182 <nft_do_chain+0xa2>
    0.00 :   454:    mov    $0xffffffff,%edx
    0.00 :   459:    jmp    2e1 <nft_do_chain+0x201>
    0.00 :   45e:    mov    0xc8(%rsi),%rcx
    0.00 :   465:    movzwl 0xb8(%rsi),%edx
    0.00 :   46c:    add    %rcx,%rdx
    0.00 :   46f:    jmp    3b4 <nft_do_chain+0x2d4>
    0.00 :   474:    call   479 <nft_do_chain+0x399>
    0.00 :   479:    jmp    267 <nft_do_chain+0x187>
    0.00 :   47e:    xchg   %ax,%ax
    0.00 :   480:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   485:    mov    (%r14),%rax
    0.00 :   488:    mov    (%rsp),%rsi
    0.00 :   48c:    mov    $0x3,%edx
    0.00 :   491:    lea    0x18(%rsp),%rdi
    0.00 :   496:    mov    %r13,0x38(%rsp)
    0.00 :   49b:    movzbl 0x80(%rax),%eax
    0.00 :   4a2:    shr    $0x4,%al
    0.00 :   4a5:    and    $0x1,%eax
    0.00 :   4a8:    mov    %al,0x19(%rsp)
    0.00 :   4ac:    call   0 <__nft_trace_packet>
    0.00 :   4b1:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   4b6:    call   4bb <nft_do_chain+0x3db>
    0.00 :   4bb:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4c0:    call   4c5 <nft_do_chain+0x3e5>
    0.00 :   4c5:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4ca:    movzwl (%rdx),%eax
    0.00 :   4cd:    mov    %ax,(%rsi)
    0.00 :   4d0:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4d5:    call   4da <nft_do_chain+0x3fa>
    0.00 :   4da:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4df:    call   4e4 <nft_do_chain+0x404>
    0.00 :   4e4:    jmp    267 <nft_do_chain+0x187>
    0.00 :   4e9:    mov    (%rsp),%rsi
    0.00 :   4ed:    lea    0x18(%rsp),%rdi
    0.00 :   4f2:    mov    %r13,0x38(%rsp)
    0.00 :   4f7:    call   90 <__nft_trace_verdict.isra.0>
    0.00 :   4fc:    mov    0x48(%rsp),%edx
    0.00 :   500:    test   $0xfc,%dl
    0.00 :   503:    jne    2ef <nft_do_chain+0x20f>
    0.00 :   509:    add    $0x218,%rsp
    0.00 :   510:    mov    %edx,%eax
    0.00 :   512:    pop    %rbx
    0.00 :   513:    pop    %rbp
    0.00 :   514:    pop    %r12
    0.00 :   516:    pop    %r13
    0.00 :   518:    pop    %r14
    0.00 :   51a:    pop    %r15
    0.00 :   51c:    jmp    521 <nft_do_chain+0x441>
    0.00 :   521:    call   526 <nft_do_chain+0x446>
    0.00 :   526:    jmp    267 <nft_do_chain+0x187>
    0.00 :   52b:    call   530 <nft_do_chain+0x450>
    0.00 :   530:    jmp    267 <nft_do_chain+0x187>
    0.00 :   535:    mov    (%rdx),%edx
    0.00 :   537:    mov    %edx,0x48(%rsp,%rax,4)
    0.00 :   53b:    jmp    267 <nft_do_chain+0x187>
    0.00 :   540:    cmpb   $0x0,0x18(%rsp)
    0.00 :   545:    je     2ba <nft_do_chain+0x1da>
    0.00 :   54b:    mov    (%r14),%rax
    0.00 :   54e:    movzbl 0x80(%rax),%eax
    0.00 :   555:    shr    $0x4,%al
    0.00 :   558:    and    $0x1,%eax
    0.00 :   55b:    mov    %al,0x19(%rsp)
    0.00 :   55f:    jmp    2ba <nft_do_chain+0x1da>
    0.00 :   564:    call   569 <nft_do_chain+0x489>
    0.00 :   569:    jmp    267 <nft_do_chain+0x187>
    0.00 :   56e:    call   573 <nft_do_chain+0x493>
    0.00 :   573:    jmp    267 <nft_do_chain+0x187>
    0.00 :   578:    call   57d <nft_do_chain+0x49d>
    0.00 :   57d:    jmp    267 <nft_do_chain+0x187>
    0.00 :   582:    call   587 <nft_do_chain+0x4a7>
    0.00 :   587:    jmp    267 <nft_do_chain+0x187>
    0.00 :   58c:    cmp    $0xf,%r12d
    0.00 :   590:    ja     610 <nft_do_chain+0x530>
    0.00 :   592:    movzwl 0x0(%r13),%edx
    0.00 :   597:    mov    %r12d,%eax
    0.00 :   59a:    mov    (%rsp),%rdi
    0.00 :   59e:    add    $0x1,%r12d
    0.00 :   5a2:    lea    (%rax,%rax,2),%rax
    0.00 :   5a6:    shr    %dx
    0.00 :   5a9:    shl    $0x3,%rax
    0.00 :   5ad:    and    $0xfff,%edx
    0.00 :   5b3:    mov    %rdi,0x98(%rsp,%rax,1)
    4.81 :   5bb:    lea    0x8(%r13,%rdx,1),%rdx // [nf_tables][5bb]
    0.00 :   5c0:    mov    %rbp,0xa8(%rsp,%rax,1)
    0.00 :   5c8:    mov    %rdx,0xa0(%rsp,%rax,1)
    0.00 :   5d0:    jmp    310 <nft_do_chain+0x230>
    0.00 :   5d5:    mov    0x48(%rsp),%edx
    0.00 :   5d9:    cmp    $0xfffffffe,%edx
    0.00 :   5dc:    je     2ad <nft_do_chain+0x1cd>
    0.00 :   5e2:    cmp    $0xffffffff,%edx
    0.00 :   5e5:    je     47e <nft_do_chain+0x39e>
    0.00 :   5eb:    mov    %r12,%rbp
    0.00 :   5ee:    mov    0x8(%rsp),%r12d
    0.00 :   5f3:    jmp    2e1 <nft_do_chain+0x201>
    0.00 :   5f8:    mov    %rbp,%rcx
    0.00 :   5fb:    mov    %rbx,%rdx
    0.00 :   5fe:    lea    0x18(%rsp),%rdi
    0.00 :   603:    mov    %r14,%rsi
    0.00 :   606:    call   60b <nft_do_chain+0x52b>
    0.00 :   60b:    jmp    143 <nft_do_chain+0x63>
    0.00 :   610:    ud2
    0.00 :   612:    xor    %edx,%edx
    0.00 :   614:    jmp    509 <nft_do_chain+0x429>
    0.00 :   619:    mov    0x10(%rsp),%rbp
    0.00 :   61e:    xchg   %ax,%ax
    0.00 :   620:    xchg   %ax,%ax
    0.00 :   622:    movzbl -0x10(%rbp),%edx
    0.00 :   626:    jmp    509 <nft_do_chain+0x429>
    0.00 :   62b:    mov    %r14,%rsi
    0.00 :   62e:    mov    %rbp,%rdi
    0.00 :   631:    call   30 <nft_update_chain_stats>
    0.00 :   636:    movzbl -0x10(%rbp),%edx
    0.00 :   63a:    jmp    509 <nft_do_chain+0x429>
    0.00 :   63f:    mov    (%r14),%rax
    0.00 :   642:    mov    $0x1,%edx
    0.00 :   647:    mov    %rbp,%rsi
    0.00 :   64a:    lea    0x18(%rsp),%rdi
    0.00 :   64f:    movq   $0x0,0x38(%rsp)
    0.00 :   658:    movzbl 0x80(%rax),%eax
    0.00 :   65f:    shr    $0x4,%al
    0.00 :   662:    and    $0x1,%eax
    0.00 :   665:    mov    %al,0x19(%rsp)
    0.00 :   669:    call   0 <__nft_trace_packet>
    0.00 :   66e:    jmp    620 <nft_do_chain+0x540>
    0.00 :   670:    cmp    $0xfffffffe,%edx
    0.00 :   673:    jne    5eb <nft_do_chain+0x50b>
    0.00 :   679:    jmp    2ad <nft_do_chain+0x1cd>
         :
         : 333 Disassembly of section .init.text:
         :
         : 335 00000000000000e0 <init_module+0x3b>:
         : 336 nf_tables_module_init():
    0.00 :    e0:     mov    $0x0,%edi
    0.00 :    e6:     call   eb <init_module+0x46>
    0.00 :    eb:     mov    %eax,%ebx
    0.00 :    ed:     test   %eax,%eax
    0.00 :    ef:     js     16f <init_module+0xca>
    0.00 :    f1:     mov    $0x0,%rsi
    4.57 :    f8:     mov    $0x0,%rdi // [nf_tables][f8]
    0.00 :    ff:     call   104 <init_module+0x5f>
    0.00 :   104:    mov    %eax,%ebx
    0.00 :   106:    test   %eax,%eax
    0.00 :   108:    js     163 <init_module+0xbe>
    0.00 :   10a:    call   10f <init_module+0x6a>
    0.00 :   10f:    mov    %eax,%ebx
    0.00 :   111:    test   %eax,%eax
    0.00 :   113:    js     153 <init_module+0xae>
    0.00 :   115:    mov    $0x0,%rdi
    0.00 :   11c:    call   121 <init_module+0x7c>
    0.00 :   121:    mov    %eax,%ebx
    0.00 :   123:    test   %eax,%eax
    0.00 :   125:    js     14e <init_module+0xa9>
    0.00 :   127:    mov    $0x0,%rdi
    0.00 :   12e:    call   133 <init_module+0x8e>
    0.00 :   133:    mov    %eax,%ebx
    0.00 :   135:    test   %eax,%eax
    0.00 :   137:    jns    147 <init_module+0xa2>
    0.00 :   139:    mov    $0x0,%rdi
    0.00 :   140:    call   145 <init_module+0xa0>
    0.00 :   145:    jmp    14e <init_module+0xa9>
    0.00 :   147:    call   14c <init_module+0xa7>
    0.00 :   14c:    jmp    185 <init_module+0xe0>
    0.00 :   14e:    call   153 <init_module+0xae>
    0.00 :   153:    xor    %edx,%edx
    0.00 :   155:    xor    %esi,%esi
    0.00 :   157:    mov    $0x0,%rdi
    0.00 :   15e:    call   163 <init_module+0xbe>
   35.07 :   163:    mov    $0x0,%rdi // [nf_tables][163]
   26.17 :   16a:    call   16f <init_module+0xca> // [nf_tables][16a]
    0.00 :   16f:    call   174 <init_module+0xcf>
    0.00 :   174:    call   179 <init_module+0xd4>
    0.00 :   179:    mov    $0x0,%rdi
    0.00 :   180:    call   185 <init_module+0xe0>
    0.00 :   185:    mov    %ebx,%eax
    6.44 :   187:    pop    %rbx // [nf_tables][187]
    0.00 :   188:    jmp    18d <nft_chain_filter_init>
         :
         : 382 000000000000018d <nft_chain_filter_init>:
         : 383 nft_chain_filter_init():
    0.00 :   18d:    call   192 <nft_chain_filter_init+0x5>
    0.00 :   192:    push   %rbx
    0.00 :   193:    mov    $0x0,%rdi
    0.00 :   19a:    call   19f <nft_chain_filter_init+0x12>
    0.00 :   19f:    mov    $0x0,%rdi
    0.00 :   1a6:    call   1ab <nft_chain_filter_init+0x1e>
    0.00 :   1ab:    test   %eax,%eax
    0.00 :   1ad:    jne    1ef <nft_chain_filter_init+0x62>
    0.00 :   1af:    mov    $0x0,%rdi
    0.00 :   1b6:    xor    %ebx,%ebx
    0.00 :   1b8:    call   1bd <nft_chain_filter_init+0x30>
    0.00 :   1bd:    mov    $0x0,%rdi
    0.00 :   1c4:    call   1c9 <nft_chain_filter_init+0x3c>
    0.00 :   1c9:    mov    $0x0,%rdi
    0.00 :   1d0:    call   1d5 <nft_chain_filter_init+0x48>
   19.49 :   1d5:    mov    $0x0,%rdi // [nf_tables][1d5]
    3.44 :   1dc:    call   1e1 <nft_chain_filter_init+0x54> // [nf_tables][1dc]
    0.00 :   1e1:    mov    $0x0,%rdi
    0.00 :   1e8:    call   1ed <nft_chain_filter_init+0x60>
    0.00 :   1ed:    jmp    201 <nft_chain_filter_init+0x74>
    0.00 :   1ef:    mov    %eax,%ebx
    0.00 :   1f1:    mov    $0x0,%rdi
    0.00 :   1f8:    call   1fd <nft_chain_filter_init+0x70>
    0.00 :   1fd:    test   %ebx,%ebx
    0.00 :   1ff:    jns    1af <nft_chain_filter_init+0x22>
    0.00 :   201:    mov    %ebx,%eax
    0.00 :   203:    pop    %rbx
    0.00 :   204:    jmp    209 <nft_chain_route_init>
         :
         : 413 0000000000000209 <nft_chain_route_init>:
         : 414 nft_chain_route_init():
    0.00 :   209:    call   20e <nft_chain_route_init+0x5>
    0.00 :   20e:    mov    $0x0,%rdi
    0.00 :   215:    call   21a <nft_chain_route_init+0x11>
    0.00 :   21a:    mov    $0x0,%rdi
    0.00 :   221:    call   226 <nft_chain_route_init+0x1d>
    0.00 :   226:    mov    $0x0,%rdi
    4.81 :   22d:    jmp    232 <__kstrtab_nf_tables_trans_destroy_flush_work+0x4> // [nf_tables][22d]

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   17.77 [nf_conntrack][41c9]
   17.77 [nf_conntrack][3f82]
   14.13 [nf_conntrack][3f88]
   13.81 [nf_conntrack][3e71]
   13.39 [nf_conntrack][3dcb]
   13.25 [nf_conntrack][3cc6]
    9.87 [nf_conntrack][3d56]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (7 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003ca0 <nf_conntrack_in>:
         : 6    nf_conntrack_in():
    0.00 :   3ca0:   call   3ca5 <nf_conntrack_in+0x5>
    0.00 :   3ca5:   push   %r15
    0.00 :   3ca7:   push   %r14
    0.00 :   3ca9:   mov    %rdi,%r14
    0.00 :   3cac:   push   %r13
    0.00 :   3cae:   push   %r12
    0.00 :   3cb0:   push   %rbp
    0.00 :   3cb1:   mov    %rsi,%rbp
    0.00 :   3cb4:   push   %rbx
    0.00 :   3cb5:   sub    $0x50,%rsp
    0.00 :   3cb9:   mov    0x68(%rdi),%rbx
    0.00 :   3cbd:   mov    %gs:0x28,%rax
   13.25 :   3cc6:   mov    %rax,0x48(%rsp) // [nf_conntrack][3cc6]
    0.00 :   3ccb:   xor    %eax,%eax
    0.00 :   3ccd:   movb   $0x0,0x1b(%rsp)
    0.00 :   3cd2:   mov    %rbx,%rcx
    0.00 :   3cd5:   mov    %ebx,%eax
    0.00 :   3cd7:   mov    %rbx,0x8(%rsp)
    0.00 :   3cdc:   and    $0xfffffffffffffff8,%rcx
    0.00 :   3ce0:   and    $0x7,%eax
    0.00 :   3ce3:   mov    %rcx,0x10(%rsp)
    0.00 :   3ce8:   cmp    $0x7,%rbx
    0.00 :   3cec:   ja     4309 <nf_conntrack_in+0x669>
    0.00 :   3cf2:   mov    $0x1,%ebx
    0.00 :   3cf7:   cmp    $0x7,%eax
    0.00 :   3cfa:   je     3f8e <nf_conntrack_in+0x2ee>
    0.00 :   3d00:   movzbl 0x1(%rbp),%edx
    0.00 :   3d04:   movzwl 0xb8(%r14),%esi
    0.00 :   3d0c:   lea    0x1b(%rsp),%rcx
    0.00 :   3d11:   mov    %r14,%rdi
    0.00 :   3d14:   add    0xc8(%r14),%rsi
    0.00 :   3d1b:   sub    0xd0(%r14),%esi
    0.00 :   3d22:   call   930 <get_l4proto>
    0.00 :   3d27:   mov    %eax,0x4(%rsp)
    0.00 :   3d2b:   test   %eax,%eax
    0.00 :   3d2d:   jle    3f69 <nf_conntrack_in+0x2c9>
    0.00 :   3d33:   movzbl 0x1b(%rsp),%r8d
    0.00 :   3d39:   movzbl 0x1(%rbp),%edx
    0.00 :   3d3d:   cmp    $0x3a,%r8b
    0.00 :   3d41:   sete   %al
    0.00 :   3d44:   cmp    $0x1,%r8b
    0.00 :   3d48:   je     3d4e <nf_conntrack_in+0xae>
    0.00 :   3d4e:   test   %al,%al
    0.00 :   3d50:   jne    3d56 <nf_conntrack_in+0xb6>
    9.87 :   3d56:   lea    0x20(%rsp),%rbx // [nf_conntrack][3d56]
    0.00 :   3d5b:   movzbl 0x1(%rbp),%ecx
    0.00 :   3d5f:   movzwl 0xb8(%r14),%esi
    0.00 :   3d67:   movq   $0x0,(%rbx)
    0.00 :   3d6e:   mov    %r14,%rdi
    0.00 :   3d71:   add    0xc8(%r14),%rsi
    0.00 :   3d78:   movq   $0x0,0x8(%rbx)
    0.00 :   3d80:   movq   $0x0,0x10(%rbx)
    0.00 :   3d88:   movq   $0x0,0x18(%rbx)
    0.00 :   3d90:   movq   $0x0,0x20(%rbx)
    0.00 :   3d98:   movl   $0x0,0x1c(%rsp)
    0.00 :   3da0:   push   %rbx
    0.00 :   3da1:   mov    0x20(%rbp),%r9
    0.00 :   3da5:   mov    0xc(%rsp),%edx
    0.00 :   3da9:   sub    0xd0(%r14),%esi
    0.00 :   3db0:   call   6b0 <nf_ct_get_tuple>
    0.00 :   3db5:   pop    %rcx
    0.00 :   3db6:   test   %al,%al
    0.00 :   3db8:   je     403e <nf_conntrack_in+0x39e>
    0.00 :   3dbe:   cmpq   $0x7,0x8(%rsp)
    0.00 :   3dc4:   movzbl 0x0(%rip),%eax        # 3dcb <nf_conntrack_in+0x12b>
   13.39 :   3dcb:   mov    $0x0,%r12 // [nf_conntrack][3dcb]
    0.00 :   3dd2:   jbe    3e01 <nf_conntrack_in+0x161>
    0.00 :   3dd4:   mov    0x10(%rsp),%rdi
    0.00 :   3dd9:   movzbl 0xf(%rdi),%eax
    0.00 :   3ddd:   lea    0xc(%rdi),%r12
    0.00 :   3de1:   testb  $0x1,0xe(%rdi)
    0.00 :   3de5:   je     3e01 <nf_conntrack_in+0x161>
    0.00 :   3de7:   mov    0xa8(%r14),%edx
    0.00 :   3dee:   movb   $0x0,0x1e(%rsp)
    0.00 :   3df3:   lea    0x1c(%rsp),%r12
    0.00 :   3df8:   mov    %al,0x1f(%rsp)
    0.00 :   3dfc:   mov    %dx,0x1c(%rsp)
    0.00 :   3e01:   xor    %r15d,%r15d
    0.00 :   3e04:   test   $0x1,%al
    0.00 :   3e06:   je     3e0d <nf_conntrack_in+0x16d>
    0.00 :   3e08:   movzwl (%r12),%r15d
    0.00 :   3e0d:   mov    0x20(%rbp),%rdx
    0.00 :   3e11:   mov    %r15d,%esi
    0.00 :   3e14:   mov    %rbx,%rdi
    0.00 :   3e17:   call   3c0 <hash_conntrack_raw>
    0.00 :   3e1c:   mov    0x20(%rbp),%rdi
    0.00 :   3e20:   mov    %rbx,%rdx
    0.00 :   3e23:   mov    %r12,%rsi
    0.00 :   3e26:   mov    %eax,%ecx
    0.00 :   3e28:   mov    %eax,%r13d
    0.00 :   3e2b:   call   32c0 <__nf_conntrack_find_get>
    0.00 :   3e30:   test   %rax,%rax
    0.00 :   3e33:   je     40be <nf_conntrack_in+0x41e>
    0.00 :   3e39:   movzbl 0x37(%rax),%esi
    0.00 :   3e3d:   lea    0x0(,%rsi,8),%rdx
    0.00 :   3e45:   mov    %rsi,%rcx
    0.00 :   3e48:   sub    %rsi,%rdx
    0.00 :   3e4b:   mov    $0x3,%esi
    0.00 :   3e50:   shl    $0x3,%rdx
    0.00 :   3e54:   sub    %rdx,%rax
    0.00 :   3e57:   lea    -0x10(%rax),%r12
    0.00 :   3e5b:   cmp    $0x1,%cl
    0.00 :   3e5e:   je     3e78 <nf_conntrack_in+0x1d8>
    0.00 :   3e60:   mov    0x80(%r12),%rdx
    0.00 :   3e68:   and    $0x2,%edx
    0.00 :   3e6b:   je     409f <nf_conntrack_in+0x3ff>
   13.81 :   3e71:   nopl   0x0(%rax,%rax,1) // [nf_conntrack][3e71]
    0.00 :   3e76:   xor    %esi,%esi
    0.00 :   3e78:   movzbl 0x84(%r14),%ecx
    0.00 :   3e80:   mov    %r12,%rax
    0.00 :   3e83:   mov    %ecx,%edx
    0.00 :   3e85:   shr    $0x3,%dl
    0.00 :   3e88:   and    $0x1,%edx
    0.00 :   3e8b:   or     %rsi,%rax
    0.00 :   3e8e:   setne  %sil
    0.00 :   3e92:   and    $0xfffffff7,%ecx
    0.00 :   3e95:   mov    %rax,0x68(%r14)
    0.00 :   3e99:   or     %esi,%edx
    0.00 :   3e9b:   shl    $0x3,%edx
    0.00 :   3e9e:   or     %edx,%ecx
    0.00 :   3ea0:   mov    %cl,0x84(%r14)
    0.00 :   3ea7:   mov    %eax,%r12d
    0.00 :   3eaa:   mov    %rax,%r15
    0.00 :   3ead:   and    $0x7,%r12d
    0.00 :   3eb1:   and    $0xfffffffffffffff8,%r15
    0.00 :   3eb5:   cmp    $0x7,%rax
    0.00 :   3eb9:   jbe    3f6e <nf_conntrack_in+0x2ce>
    0.00 :   3ebf:   movzbl 0x46(%r15),%eax
    0.00 :   3ec4:   cmp    $0x2f,%al
    0.00 :   3ec6:   je     4186 <nf_conntrack_in+0x4e6>
    0.00 :   3ecc:   ja     3fdc <nf_conntrack_in+0x33c>
    0.00 :   3ed2:   cmp    $0x11,%al
    0.00 :   3ed4:   je     4169 <nf_conntrack_in+0x4c9>
    0.00 :   3eda:   ja     3fb7 <nf_conntrack_in+0x317>
    0.00 :   3ee0:   cmp    $0x1,%al
    0.00 :   3ee2:   je     4236 <nf_conntrack_in+0x596>
    0.00 :   3ee8:   cmp    $0x6,%al
    0.00 :   3eea:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   3ef0:   mov    0x4(%rsp),%edx
    0.00 :   3ef4:   mov    %rbp,%r8
    0.00 :   3ef7:   mov    %r12d,%ecx
    0.00 :   3efa:   mov    %r14,%rsi
    0.00 :   3efd:   mov    %r15,%rdi
    0.00 :   3f00:   call   3f05 <nf_conntrack_in+0x265>
    0.00 :   3f05:   mov    %eax,%r13d
    0.00 :   3f08:   test   %r13d,%r13d
    0.00 :   3f0b:   jg     435d <nf_conntrack_in+0x6bd>
    0.00 :   3f11:   nopl   0x0(%rax,%rax,1)
    0.00 :   3f16:   mov    $0xffffffff,%eax
    0.00 :   3f1b:   lock xadd %eax,(%r15)
    0.00 :   3f20:   cmp    $0x1,%eax
    0.00 :   3f23:   je     404c <nf_conntrack_in+0x3ac>
    0.00 :   3f29:   test   %eax,%eax
    0.00 :   3f2b:   jle    4148 <nf_conntrack_in+0x4a8>
    0.00 :   3f31:   movq   $0x0,0x68(%r14)
    0.00 :   3f39:   cmp    $0xfffffffc,%r13d
    0.00 :   3f3d:   jne    4066 <nf_conntrack_in+0x3c6>
    0.00 :   3f43:   movzbl 0x1b(%rsp),%r8d
    0.00 :   3f49:   jmp    3d5b <nf_conntrack_in+0xbb>
    0.00 :   3f4e:   mov    %r12,%rdx
    0.00 :   3f51:   mov    $0x0,%rsi
    0.00 :   3f58:   mov    $0x0,%rdi
    0.00 :   3f5f:   call   3f64 <nf_conntrack_in+0x2c4>
    0.00 :   3f64:   jmp    3e76 <nf_conntrack_in+0x1d6>
    0.00 :   3f69:   nopl   0x0(%rax,%rax,1)
    0.00 :   3f6e:   mov    0x20(%rbp),%rax
    0.00 :   3f72:   mov    0xb40(%rax),%rax
    0.00 :   3f79:   incl   %gs:0x4(%rax)
    0.00 :   3f7d:   mov    $0x1,%ebx
   17.77 :   3f82:   cmpq   $0x7,0x8(%rsp) // [nf_conntrack][3f82]
   14.13 :   3f88:   ja     42da <nf_conntrack_in+0x63a> // [nf_conntrack][3f88]
    0.00 :   3f8e:   mov    0x48(%rsp),%rax
    0.00 :   3f93:   sub    %gs:0x28,%rax
    0.00 :   3f9c:   jne    4374 <nf_conntrack_in+0x6d4>
    0.00 :   3fa2:   add    $0x50,%rsp
    0.00 :   3fa6:   mov    %ebx,%eax
    0.00 :   3fa8:   pop    %rbx
    0.00 :   3fa9:   pop    %rbp
    0.00 :   3faa:   pop    %r12
    0.00 :   3fac:   pop    %r13
    0.00 :   3fae:   pop    %r14
    0.00 :   3fb0:   pop    %r15
    0.00 :   3fb2:   jmp    3fb7 <nf_conntrack_in+0x317>
    0.00 :   3fb7:   cmp    $0x21,%al
    0.00 :   3fb9:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   3fbf:   mov    0x4(%rsp),%edx
    0.00 :   3fc3:   mov    %rbp,%r8
    0.00 :   3fc6:   mov    %r12d,%ecx
    0.00 :   3fc9:   mov    %r14,%rsi
    0.00 :   3fcc:   mov    %r15,%rdi
    0.00 :   3fcf:   call   3fd4 <nf_conntrack_in+0x334>
    0.00 :   3fd4:   mov    %eax,%r13d
    0.00 :   3fd7:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   3fdc:   cmp    $0x84,%al
    0.00 :   3fde:   je     424f <nf_conntrack_in+0x5af>
    0.00 :   3fe4:   cmp    $0x88,%al
    0.00 :   3fe6:   jne    4005 <nf_conntrack_in+0x365>
    0.00 :   3fe8:   mov    0x4(%rsp),%edx
    0.00 :   3fec:   mov    %rbp,%r8
    0.00 :   3fef:   mov    %r12d,%ecx
    0.00 :   3ff2:   mov    %r14,%rsi
    0.00 :   3ff5:   mov    %r15,%rdi
    0.00 :   3ff8:   call   3ffd <nf_conntrack_in+0x35d>
    0.00 :   3ffd:   mov    %eax,%r13d
    0.00 :   4000:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4005:   cmp    $0x3a,%al
    0.00 :   4007:   jne    41a3 <nf_conntrack_in+0x503>
    0.00 :   400d:   mov    %rbp,%rcx
    0.00 :   4010:   mov    %r12d,%edx
    0.00 :   4013:   mov    %r14,%rsi
    0.00 :   4016:   mov    %r15,%rdi
    0.00 :   4019:   call   401e <nf_conntrack_in+0x37e>
    0.00 :   401e:   mov    %eax,%r13d
    0.00 :   4021:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4026:   mov    $0x0,%rsi
    0.00 :   402d:   mov    $0x0,%rdi
    0.00 :   4034:   call   4039 <nf_conntrack_in+0x399>
    0.00 :   4039:   jmp    3f16 <nf_conntrack_in+0x276>
    0.00 :   403e:   nopl   0x0(%rax,%rax,1)
    0.00 :   4043:   mov    0x68(%r14),%rax
    0.00 :   4047:   jmp    3ea7 <nf_conntrack_in+0x207>
    0.00 :   404c:   mov    %r15,%rdi
    0.00 :   404f:   call   4054 <nf_conntrack_in+0x3b4>
    0.00 :   4054:   movq   $0x0,0x68(%r14)
    0.00 :   405c:   cmp    $0xfffffffc,%r13d
    0.00 :   4060:   je     3f43 <nf_conntrack_in+0x2a3>
    0.00 :   4066:   mov    0x20(%rbp),%rax
    0.00 :   406a:   mov    0xb40(%rax),%rax
    0.00 :   4071:   incl   %gs:0x4(%rax)
    0.00 :   4075:   test   %r13d,%r13d
    0.00 :   4078:   jne    4089 <nf_conntrack_in+0x3e9>
    0.00 :   407a:   mov    0x20(%rbp),%rax
    0.00 :   407e:   mov    0xb40(%rax),%rax
    0.00 :   4085:   incl   %gs:0x14(%rax)
    0.00 :   4089:   mov    %r13d,%ebx
    0.00 :   408c:   neg    %ebx
    0.00 :   408e:   cmpq   $0x7,0x8(%rsp)
    0.00 :   4094:   jbe    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   409a:   jmp    42da <nf_conntrack_in+0x63a>
    0.00 :   409f:   mov    0x80(%r12),%rax
    0.00 :   40a7:   test   $0x1,%al
    0.00 :   40a9:   je     415a <nf_conntrack_in+0x4ba>
    0.00 :   40af:   nopl   0x0(%rax,%rax,1)
    0.00 :   40b4:   mov    $0x1,%esi
    0.00 :   40b9:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   40be:   xor    %esi,%esi
    0.00 :   40c0:   testb  $0x2,0x3(%r12)
    0.00 :   40c6:   je     40cd <nf_conntrack_in+0x42d>
    0.00 :   40c8:   movzwl (%r12),%esi
    0.00 :   40cd:   mov    0x20(%rbp),%rdi
    0.00 :   40d1:   cmp    %r15d,%esi
    0.00 :   40d4:   jne    426c <nf_conntrack_in+0x5cc>
    0.00 :   40da:   mov    0x10(%rsp),%rsi
    0.00 :   40df:   mov    %r13d,%r8d
    0.00 :   40e2:   mov    %r14,%rcx
    0.00 :   40e5:   mov    %rbx,%rdx
    0.00 :   40e8:   call   1fd0 <init_conntrack.constprop.0>
    0.00 :   40ed:   test   %rax,%rax
    0.00 :   40f0:   je     4043 <nf_conntrack_in+0x3a3>
    0.00 :   40f6:   cmp    $0xfffffffffffff000,%rax
    0.00 :   40fc:   jbe    3e39 <nf_conntrack_in+0x199>
    0.00 :   4102:   test   %eax,%eax
    0.00 :   4104:   jns    4043 <nf_conntrack_in+0x3a3>
    0.00 :   410a:   mov    0x20(%rbp),%rax
    0.00 :   410e:   mov    0xb40(%rax),%rax
    0.00 :   4115:   incl   %gs:0x14(%rax)
    0.00 :   4119:   xor    %ebx,%ebx
    0.00 :   411b:   cmpq   $0x7,0x8(%rsp)
    0.00 :   4121:   jbe    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   4127:   jmp    42da <nf_conntrack_in+0x63a>
    0.00 :   412c:   mov    $0x0,%rsi
    0.00 :   4133:   mov    $0x0,%rdi
    0.00 :   413a:   call   413f <nf_conntrack_in+0x49f>
    0.00 :   413f:   mov    0x68(%r14),%rax
    0.00 :   4143:   jmp    3ea7 <nf_conntrack_in+0x207>
    0.00 :   4148:   mov    $0x3,%esi
    0.00 :   414d:   mov    %r15,%rdi
    0.00 :   4150:   call   4155 <nf_conntrack_in+0x4b5>
    0.00 :   4155:   jmp    3f31 <nf_conntrack_in+0x291>
    0.00 :   415a:   nopl   0x0(%rax,%rax,1)
    0.00 :   415f:   mov    $0x2,%esi
    0.00 :   4164:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   4169:   mov    0x4(%rsp),%edx
    0.00 :   416d:   mov    %rbp,%r8
    0.00 :   4170:   mov    %r12d,%ecx
    0.00 :   4173:   mov    %r14,%rsi
    0.00 :   4176:   mov    %r15,%rdi
    0.00 :   4179:   call   417e <nf_conntrack_in+0x4de>
    0.00 :   417e:   mov    %eax,%r13d
    0.00 :   4181:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   4186:   mov    0x4(%rsp),%edx
    0.00 :   418a:   mov    %rbp,%r8
    0.00 :   418d:   mov    %r12d,%ecx
    0.00 :   4190:   mov    %r14,%rsi
    0.00 :   4193:   mov    %r15,%rdi
    0.00 :   4196:   call   419b <nf_conntrack_in+0x4fb>
    0.00 :   419b:   mov    %eax,%r13d
    0.00 :   419e:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   41a3:   mov    0x88(%r15),%rax
    0.00 :   41aa:   mov    %r14,%rdx
    0.00 :   41ad:   mov    %r12d,%esi
    0.00 :   41b0:   mov    %r15,%rdi
    0.00 :   41b3:   mov    $0x1,%r8d
    0.00 :   41b9:   mov    $0x1,%ebx
    0.00 :   41be:   mov    0xb50(%rax),%ecx
    0.00 :   41c4:   call   41c9 <nf_conntrack_in+0x529>
   17.77 :   41c9:   cmp    $0x3,%r12d // [nf_conntrack][41c9]
    0.00 :   41cd:   jne    3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41d3:   lock btsq $0x1,0x80(%r15)
    0.00 :   41dd:   jb     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41e3:   mov    0x88(%r15),%rax
    0.00 :   41ea:   mov    0xb48(%rax),%rax
    0.00 :   41f1:   test   %rax,%rax
    0.00 :   41f4:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   41fa:   mov    0xb0(%r15),%rdi
    0.00 :   4201:   test   %rdi,%rdi
    0.00 :   4204:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   420a:   movzbl 0x4(%rdi),%eax
    0.00 :   420e:   test   %al,%al
    0.00 :   4210:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   4216:   mov    0xc(%rdi),%edx
    0.00 :   4219:   add    %rdi,%rax
    0.00 :   421c:   test   %edx,%edx
    0.00 :   421e:   jne    4365 <nf_conntrack_in+0x6c5>
    0.00 :   4224:   test   %rax,%rax
    0.00 :   4227:   je     3f82 <nf_conntrack_in+0x2e2>
    0.00 :   422d:   lock orb $0x8,(%rax)
    0.00 :   4231:   jmp    3f82 <nf_conntrack_in+0x2e2>
    0.00 :   4236:   mov    %rbp,%rcx
    0.00 :   4239:   mov    %r12d,%edx
    0.00 :   423c:   mov    %r14,%rsi
    0.00 :   423f:   mov    %r15,%rdi
    0.00 :   4242:   call   4247 <nf_conntrack_in+0x5a7>
    0.00 :   4247:   mov    %eax,%r13d
    0.00 :   424a:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   424f:   mov    0x4(%rsp),%edx
    0.00 :   4253:   mov    %rbp,%r8
    0.00 :   4256:   mov    %r12d,%ecx
    0.00 :   4259:   mov    %r14,%rsi
    0.00 :   425c:   mov    %r15,%rdi
    0.00 :   425f:   call   4264 <nf_conntrack_in+0x5c4>
    0.00 :   4264:   mov    %eax,%r13d
    0.00 :   4267:   jmp    3f08 <nf_conntrack_in+0x268>
    0.00 :   426c:   mov    %rdi,%rdx
    0.00 :   426f:   mov    %rbx,%rdi
    0.00 :   4272:   call   3c0 <hash_conntrack_raw>
    0.00 :   4277:   mov    0x20(%rbp),%rdi
    0.00 :   427b:   mov    %rbx,%rdx
    0.00 :   427e:   mov    %r12,%rsi
    0.00 :   4281:   mov    %eax,%ecx
    0.00 :   4283:   call   32c0 <__nf_conntrack_find_get>
    0.00 :   4288:   test   %rax,%rax
    0.00 :   428b:   jne    3e39 <nf_conntrack_in+0x199>
    0.00 :   4291:   mov    0x20(%rbp),%rdi
    0.00 :   4295:   jmp    40da <nf_conntrack_in+0x43a>
    0.00 :   429a:   mov    $0x0,%rsi
    0.00 :   42a1:   mov    %r12,%rdx
    0.00 :   42a4:   mov    $0x0,%rdi
    0.00 :   42ab:   call   42b0 <nf_conntrack_in+0x610>
    0.00 :   42b0:   mov    $0x1,%esi
    0.00 :   42b5:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   42ba:   mov    $0x0,%rsi
    0.00 :   42c1:   mov    %r12,%rdx
    0.00 :   42c4:   mov    $0x0,%rdi
    0.00 :   42cb:   call   42d0 <nf_conntrack_in+0x630>
    0.00 :   42d0:   mov    $0x2,%esi
    0.00 :   42d5:   jmp    3e78 <nf_conntrack_in+0x1d8>
    0.00 :   42da:   mov    0x10(%rsp),%rcx
    0.00 :   42df:   mov    $0xffffffff,%eax
    0.00 :   42e4:   lock xadd %eax,(%rcx)
    0.00 :   42e8:   cmp    $0x1,%eax
    0.00 :   42eb:   je     434e <nf_conntrack_in+0x6ae>
    0.00 :   42ed:   test   %eax,%eax
    0.00 :   42ef:   jg     3f8e <nf_conntrack_in+0x2ee>
    0.00 :   42f5:   mov    0x10(%rsp),%rdi
    0.00 :   42fa:   mov    $0x3,%esi
    0.00 :   42ff:   call   4304 <nf_conntrack_in+0x664>
    0.00 :   4304:   jmp    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   4309:   mov    0x10(%rsp),%rbx
    0.00 :   430e:   mov    0x80(%rbx),%rdx
    0.00 :   4315:   and    $0x8,%dh
    0.00 :   4318:   je     4344 <nf_conntrack_in+0x6a4>
    0.00 :   431a:   cmp    $0x7,%eax
    0.00 :   431d:   je     4344 <nf_conntrack_in+0x6a4>
    0.00 :   431f:   movq   $0x0,0x68(%rdi)
    0.00 :   4327:   jmp    3d00 <nf_conntrack_in+0x60>
    0.00 :   432c:   mov    $0x0,%rsi
    0.00 :   4333:   mov    $0x0,%rdi
    0.00 :   433a:   call   433f <nf_conntrack_in+0x69f>
    0.00 :   433f:   jmp    3f6e <nf_conntrack_in+0x2ce>
    0.00 :   4344:   mov    $0x1,%ebx
    0.00 :   4349:   jmp    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   434e:   mov    0x10(%rsp),%rdi
    0.00 :   4353:   call   4358 <nf_conntrack_in+0x6b8>
    0.00 :   4358:   jmp    3f8e <nf_conntrack_in+0x2ee>
    0.00 :   435d:   mov    %r13d,%ebx
    0.00 :   4360:   jmp    41c9 <nf_conntrack_in+0x529>
    0.00 :   4365:   mov    $0x4,%esi
    0.00 :   436a:   call   436f <nf_conntrack_in+0x6cf>
    0.00 :   436f:   jmp    4224 <nf_conntrack_in+0x584>
    0.00 :   4374:   call   4379 <nf_conntrack_in+0x6d9>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   19.25 [nf_conntrack][a780]
   15.04 [nf_conntrack][9973]
   14.12 [nf_conntrack][a3ca]
   14.11 [nf_conntrack][9462]
   13.54 [nf_conntrack][9ee6]
   13.17 [nf_conntrack][9419]
   10.77 [nf_conntrack][9580]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (7 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000093d0 <nf_conntrack_tcp_packet>:
         : 6    nf_conntrack_tcp_packet():
    0.00 :   93d0:   call   93d5 <nf_conntrack_tcp_packet+0x5>
    0.00 :   93d5:   push   %r15
    0.00 :   93d7:   push   %r14
    0.00 :   93d9:   mov    %edx,%r14d
    0.00 :   93dc:   push   %r13
    0.00 :   93de:   mov    %rsi,%r13
    0.00 :   93e1:   push   %r12
    0.00 :   93e3:   push   %rbp
    0.00 :   93e4:   push   %rbx
    0.00 :   93e5:   mov    %rdi,%rbx
    0.00 :   93e8:   sub    $0xc0,%rsp
    0.00 :   93ef:   mov    0x70(%rsi),%edx
    0.00 :   93f2:   mov    0xd0(%rsi),%rbp
    0.00 :   93f9:   mov    %ecx,(%rsp)
    0.00 :   93fc:   mov    %r8,0x10(%rsp)
    0.00 :   9401:   mov    %gs:0x28,%rax
    0.00 :   940a:   mov    %rax,0xb8(%rsp)
    0.00 :   9412:   mov    0x88(%rdi),%rax
   13.17 :   9419:   movl   $0x0,0x78(%rsp) // [nf_conntrack][9419]
    0.00 :   9421:   movq   $0x0,0x68(%rsp)
    0.00 :   942a:   movq   $0x0,0x70(%rsp)
    0.00 :   9433:   mov    %rax,0x30(%rsp)
    0.00 :   9438:   mov    %edx,%eax
    0.00 :   943a:   sub    0x74(%rsi),%eax
    0.00 :   943d:   sub    %r14d,%eax
    0.00 :   9440:   cmp    $0x13,%eax
    0.00 :   9443:   jle    a427 <nf_conntrack_tcp_packet+0x1057>
    0.00 :   9449:   movslq %r14d,%rax
    0.00 :   944c:   add    %rax,%rbp
    0.00 :   944f:   je     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   9455:   movzbl 0xc(%rbp),%eax
    0.00 :   9459:   sub    %r14d,%edx
    0.00 :   945c:   shr    $0x4,%al
    0.00 :   945f:   movzbl %al,%eax
   14.11 :   9462:   shl    $0x2,%eax // [nf_conntrack][9462]
    0.00 :   9465:   cmp    %eax,%edx
    0.00 :   9467:   setb   %r12b
    0.00 :   946b:   cmp    $0x13,%eax
    0.00 :   946e:   setle  %al
    0.00 :   9471:   or     %al,%r12b
    0.00 :   9474:   jne    947a <nf_conntrack_tcp_packet+0xaa>
    0.00 :   947a:   mov    0x10(%rsp),%rsi
    0.00 :   947f:   mov    0x20(%rsi),%rax
    0.00 :   9483:   cmpb   $0x0,0xb3e(%rax)
    0.00 :   948a:   jne    96a6 <nf_conntrack_tcp_packet+0x2d6>
    0.00 :   9490:   movzbl 0xd(%rbp),%eax
    0.00 :   9494:   and    $0x37,%eax
    0.00 :   9497:   cmpb   $0x0,0x0(%rax)
    0.00 :   949e:   je     94a4 <nf_conntrack_tcp_packet+0xd4>
    0.00 :   94a4:   mov    0x80(%rbx),%rax
    0.00 :   94ab:   test   $0x8,%al
    0.00 :   94ad:   je     96d4 <nf_conntrack_tcp_packet+0x304>
    0.00 :   94b3:   lea    0x4(%rbx),%rax
    0.00 :   94b7:   mov    %rax,%rdi
    0.00 :   94ba:   mov    %rax,0x28(%rsp)
    0.00 :   94bf:   call   94c4 <nf_conntrack_tcp_packet+0xf4>
    0.00 :   94c4:   movzbl 0xe0(%rbx),%eax
    0.00 :   94cb:   cmpl   $0x2,(%rsp)
    0.00 :   94cf:   seta   0x5d(%rsp)
    0.00 :   94d4:   mov    %eax,0x4(%rsp)
    0.00 :   94d8:   mov    %eax,%ecx
    0.00 :   94da:   seta   %al
    0.00 :   94dd:   movzbl %al,%eax
    0.00 :   94e0:   mov    %eax,0x24(%rsp)
    0.00 :   94e4:   movzbl 0xd(%rbp),%eax
    0.00 :   94e8:   mov    %al,0x8(%rsp)
    0.00 :   94ec:   test   $0x4,%al
    0.00 :   94ee:   jne    9f9c <nf_conntrack_tcp_packet+0xbcc>
    0.00 :   94f4:   movzbl 0x8(%rsp),%eax
    0.00 :   94f9:   testb  $0x2,0x8(%rsp)
    0.00 :   94fe:   jne    96f2 <nf_conntrack_tcp_packet+0x322>
    0.00 :   9504:   mov    0x4(%rsp),%r15d
    0.00 :   9509:   mov    0x24(%rsp),%r10d
    0.00 :   950e:   test   $0x1,%al
    0.00 :   9510:   jne    a3ff <nf_conntrack_tcp_packet+0x102f>
    0.00 :   9516:   test   $0x10,%al
    0.00 :   9518:   mov    %r10,%rax
    0.00 :   951b:   je     a147 <nf_conntrack_tcp_packet+0xd77>
    0.00 :   9521:   shl    $0x4,%rax
    0.00 :   9525:   movl   $0x3,0x1c(%rsp)
    0.00 :   952d:   sub    %r10,%rax
    0.00 :   9530:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   9539:   cmp    $0x8,%al
    0.00 :   953b:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   9541:   xor    %r9d,%r9d
    0.00 :   9544:   cmpl   $0x2,(%rsp)
    0.00 :   9548:   mov    0x4(%rbp),%eax
    0.00 :   954b:   movl   $0x8,0x20(%rsp)
    0.00 :   9553:   setbe  %r8b
    0.00 :   9557:   setbe  %r9b
    0.00 :   955b:   movzbl %r8b,%r8d
    0.00 :   955f:   mov    %eax,0x58(%rsp)
    0.00 :   9563:   bswap  %eax
    0.00 :   9565:   mov    %eax,0x18(%rsp)
    0.00 :   9569:   lea    (%r8,%r8,4),%rax
    0.00 :   956d:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   9575:   cmpl   $0x3,(%rsp)
    0.00 :   9579:   movzbl 0xc(%rbp),%edi
    0.00 :   957d:   sbb    %r12,%r12
   10.77 :   9580:   mov    0x70(%r13),%ecx // [nf_conntrack][9580]
    0.00 :   9584:   movzbl 0x8(%rsp),%edx
    0.00 :   9589:   not    %r12
    0.00 :   958c:   shr    $0x4,%dil
    0.00 :   9590:   mov    0x8(%rbp),%r11d
    0.00 :   9594:   and    $0x14,%r12d
    0.00 :   9598:   movzbl %dil,%edi
    0.00 :   959c:   lea    0xb8(%rbx,%r12,1),%rax
    0.00 :   95a4:   shl    $0x2,%edi
    0.00 :   95a7:   bswap  %r11d
    0.00 :   95aa:   mov    %rax,0x38(%rsp)
    0.00 :   95af:   movzwl 0xe(%rbp),%eax
    0.00 :   95b3:   rol    $0x8,%ax
    0.00 :   95b7:   mov    %ax,0x5e(%rsp)
    0.00 :   95bc:   movzwl %ax,%eax
    0.00 :   95bf:   mov    %eax,0x54(%rsp)
    0.00 :   95c3:   mov    %ecx,%eax
    0.00 :   95c5:   sub    %r14d,%eax
    0.00 :   95c8:   sub    %edi,%eax
    0.00 :   95ca:   mov    0x18(%rsp),%edi
    0.00 :   95ce:   add    %edi,%eax
    0.00 :   95d0:   mov    %edx,%edi
    0.00 :   95d2:   shr    %dl
    0.00 :   95d4:   and    $0x1,%edi
    0.00 :   95d7:   and    $0x1,%edx
    0.00 :   95da:   add    %edi,%eax
    0.00 :   95dc:   add    %edx,%eax
    0.00 :   95de:   and    $0x2,%esi
    0.00 :   95e1:   mov    %eax,0x8(%rsp)
    0.00 :   95e5:   jne    9ee6 <nf_conntrack_tcp_packet+0xb16>
    0.00 :   95eb:   mov    %r11d,%r15d
    0.00 :   95ee:   lea    -0x1(%r11),%edx
    0.00 :   95f2:   mov    %rbx,%rdi
    0.00 :   95f5:   add    %rbx,%r12
    0.00 :   95f8:   mov    %r9d,%esi
    0.00 :   95fb:   mov    %r8,0x48(%rsp)
    0.00 :   9600:   mov    %r10,0x40(%rsp)
    0.00 :   9605:   mov    %r11d,0x50(%rsp)
    0.00 :   960a:   call   960f <nf_conntrack_tcp_packet+0x23f>
    0.00 :   960f:   mov    0x50(%rsp),%r11d
    0.00 :   9614:   mov    0x40(%rsp),%r10
    0.00 :   9619:   mov    0xc0(%r12),%edi
    0.00 :   9621:   sub    %eax,%r15d
    0.00 :   9624:   mov    0x48(%rsp),%r8
    0.00 :   9629:   test   %edi,%edi
    0.00 :   962b:   jne    9973 <nf_conntrack_tcp_packet+0x5a3>
    0.00 :   9631:   testb  $0x2,0xd(%rbp)
    0.00 :   9635:   jne    9cd2 <nf_conntrack_tcp_packet+0x902>
    0.00 :   963b:   mov    0x8(%rsp),%edi
    0.00 :   963f:   lea    (%r10,%r10,4),%rdx
    0.00 :   9643:   mov    %edi,0xb8(%r12)
    0.00 :   964b:   movzbl 0xc8(%rbx,%rdx,4),%ecx
    0.00 :   9653:   mov    0x54(%rsp),%edx
    0.00 :   9657:   shl    %cl,%edx
    0.00 :   9659:   mov    $0x1,%ecx
    0.00 :   965e:   test   %edx,%edx
    0.00 :   9660:   cmove  %ecx,%edx
    0.00 :   9663:   lea    (%r8,%r8,4),%rcx
    0.00 :   9667:   lea    (%rbx,%rcx,4),%rcx
    0.00 :   966b:   mov    %edx,0xc0(%r12)
    0.00 :   9673:   add    %edi,%edx
    0.00 :   9675:   mov    %edx,0xbc(%r12)
    0.00 :   967d:   mov    0xc0(%rcx),%esi
    0.00 :   9683:   test   %esi,%esi
    0.00 :   9685:   je     a16c <nf_conntrack_tcp_packet+0xd9c>
    0.00 :   968b:   mov    0xb8(%rcx),%esi
    0.00 :   9691:   lea    0x1(%rsi),%edi
    0.00 :   9694:   cmp    %edi,%r15d
    0.00 :   9697:   je     a722 <nf_conntrack_tcp_packet+0x1352>
    0.00 :   969d:   movzbl 0xd(%rbp),%ecx
    0.00 :   96a1:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    0.00 :   96a6:   cmpb   $0x0,(%rsi)
    0.00 :   96a9:   jne    9490 <nf_conntrack_tcp_packet+0xc0>
    0.00 :   96af:   movzbl 0x1(%rsi),%r8d
    0.00 :   96b4:   mov    $0x6,%ecx
    0.00 :   96b9:   xor    %esi,%esi
    0.00 :   96bb:   mov    %r14d,%edx
    0.00 :   96be:   mov    %r13,%rdi
    0.00 :   96c1:   call   96c6 <nf_conntrack_tcp_packet+0x2f6>
    0.00 :   96c6:   test   %ax,%ax
    0.00 :   96c9:   je     9490 <nf_conntrack_tcp_packet+0xc0>
    0.00 :   96cf:   jmp    96d4 <nf_conntrack_tcp_packet+0x304>
    0.00 :   96d4:   mov    %rbp,%rcx
    0.00 :   96d7:   mov    %r14d,%edx
    0.00 :   96da:   mov    %r13,%rsi
    0.00 :   96dd:   mov    %rbx,%rdi
    0.00 :   96e0:   call   9200 <tcp_new>
    0.00 :   96e5:   test   %al,%al
    0.00 :   96e7:   jne    94b3 <nf_conntrack_tcp_packet+0xe3>
    0.00 :   96ed:   jmp    a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   96f2:   mov    0x24(%rsp),%r10d
    0.00 :   96f7:   shr    $0x4,%al
    0.00 :   96fa:   mov    0x4(%rsp),%r15d
    0.00 :   96ff:   and    $0x1,%eax
    0.00 :   9702:   mov    %r10,%rcx
    0.00 :   9705:   mov    %eax,0x1c(%rsp)
    0.00 :   9709:   lea    (%rax,%rax,4),%rax
    0.00 :   970d:   shl    $0x4,%rcx
    0.00 :   9711:   add    %rax,%rax
    0.00 :   9714:   sub    %r10,%rcx
    0.00 :   9717:   lea    0x0(%rax,%rcx,4),%rax
    0.00 :   971f:   movzbl (%rax,%r15,1),%eax
    0.00 :   9724:   cmp    $0x8,%al
    0.00 :   9726:   je     9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   972c:   cmp    $0x8,%al
    0.00 :   972e:   ja     97b6 <nf_conntrack_tcp_packet+0x3e6>
    0.00 :   9734:   cmp    $0x2,%al
    0.00 :   9736:   je     a2bf <nf_conntrack_tcp_packet+0xeef>
    0.00 :   973c:   cmp    $0x7,%al
    0.00 :   973e:   jne    98d3 <nf_conntrack_tcp_packet+0x503>
    0.00 :   9744:   cmpl   $0x6,0x4(%rsp)
    0.00 :   9749:   jne    a213 <nf_conntrack_tcp_packet+0xe43>
    0.00 :   974f:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   9754:   jne    a213 <nf_conntrack_tcp_packet+0xe43>
    0.00 :   975a:   movzbl 0x5d(%rsp),%eax
    0.00 :   975f:   cmp    %al,0xe1(%rbx)
    0.00 :   9765:   je     a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   976b:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   9772:   jne    a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   9778:   movzbl 0xf3(%rbx),%eax
    0.00 :   977f:   test   $0x40,%al
    0.00 :   9781:   je     a24c <nf_conntrack_tcp_packet+0xe7c>
    0.00 :   9787:   and    $0xffffffbf,%eax
    0.00 :   978a:   mov    0x28(%rsp),%rdi
    0.00 :   978f:   mov    %al,0xf3(%rbx)
    0.00 :   9795:   call   979a <nf_conntrack_tcp_packet+0x3ca>
    0.00 :   979a:   mov    0x10(%rsp),%rdx
    0.00 :   979f:   mov    %rbx,%rsi
    0.00 :   97a2:   mov    %r13,%rdi
    0.00 :   97a5:   mov    $0x0,%rcx
    0.00 :   97ac:   call   97b1 <nf_conntrack_tcp_packet+0x3e1>
    0.00 :   97b1:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   97b6:   cmp    $0xa,%al
    0.00 :   97b8:   je     a32c <nf_conntrack_tcp_packet+0xf5c>
    0.00 :   97be:   cmpl   $0x2,(%rsp)
    0.00 :   97c2:   setbe  %cl
    0.00 :   97c5:   cmp    $0xb,%al
    0.00 :   97c7:   jne    9923 <nf_conntrack_tcp_packet+0x553>
    0.00 :   97cd:   cmpl   $0x1,0x1c(%rsp)
    0.00 :   97d2:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97d8:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   97df:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97e5:   movzbl 0xe1(%rbx),%edx
    0.00 :   97ec:   cmp    0x5d(%rsp),%dl
    0.00 :   97f0:   je     a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   97f6:   mov    0x8(%rbp),%eax
    0.00 :   97f9:   bswap  %eax
    0.00 :   97fb:   cmp    0xec(%rbx),%eax
    0.00 :   9801:   jne    a5fc <nf_conntrack_tcp_packet+0x122c>
    0.00 :   9807:   lea    (%rdx,%rdx,4),%rdx
    0.00 :   980b:   mov    $0x1,%edi
    0.00 :   9810:   mov    %rcx,%r8
    0.00 :   9813:   movl   $0x1,0x4(%rsp)
    0.00 :   981b:   lea    0x0(,%rdx,4),%r9
    0.00 :   9823:   movl   $0x2,0x20(%rsp)
    0.00 :   982b:   lea    (%rbx,%r9,1),%rsi
    0.00 :   982f:   mov    %eax,0xb8(%rsi)
    0.00 :   9835:   mov    %eax,0xbc(%rsi)
    0.00 :   983b:   movzwl 0xf0(%rbx),%eax
    0.00 :   9842:   test   %ax,%ax
    0.00 :   9845:   cmove  %edi,%eax
    0.00 :   9848:   and    $0x1,%r8d
    0.00 :   984c:   mov    %eax,0xc0(%rsi)
    0.00 :   9852:   movzwl 0x0(%rip),%esi        # 9859 <nf_conntrack_tcp_packet+0x489>
    0.00 :   9859:   movzbl 0xf3(%rbx),%eax
    0.00 :   9860:   mov    0xf2(%rbx),%sil
    0.00 :   9867:   and    $0xffffffbf,%eax
    0.00 :   986a:   mov    %esi,%edx
    0.00 :   986c:   mov    %al,0xf3(%rbx)
    0.00 :   9872:   mov    %al,%dh
    0.00 :   9874:   lea    (%r10,%r10,4),%rax
    0.00 :   9878:   mov    %dx,0xc8(%rbx,%r9,1)
    0.00 :   9881:   lea    (%rbx,%rax,4),%rax
    0.00 :   9885:   movzbl %cl,%r9d
    0.00 :   9889:   andb   $0x8,0xc9(%rax)
    0.00 :   9890:   movq   $0x0,0xb8(%rax)
    0.00 :   989b:   movq   $0x0,0xc0(%rax)
    0.00 :   98a6:   movb   $0x0,0xc8(%rax)
    0.00 :   98ad:   movzbl 0xd(%rbp),%eax
    0.00 :   98b1:   mov    %al,0x8(%rsp)
    0.00 :   98b5:   mov    0x4(%rbp),%eax
    0.00 :   98b8:   mov    %eax,0x58(%rsp)
    0.00 :   98bc:   bswap  %eax
    0.00 :   98be:   mov    %eax,0x18(%rsp)
    0.00 :   98c2:   lea    (%r8,%r8,4),%rax
    0.00 :   98c6:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   98ce:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   98d3:   cmp    $0x1,%al
    0.00 :   98d5:   jne    a3ca <nf_conntrack_tcp_packet+0xffa>
    0.00 :   98db:   cmpl   $0x2,(%rsp)
    0.00 :   98df:   setbe  %r8b
    0.00 :   98e3:   setbe  %r9b
    0.00 :   98e7:   setbe  %cl
    0.00 :   98ea:   cmpl   $0x6,0x4(%rsp)
    0.00 :   98ef:   movzbl %r8b,%r8d
    0.00 :   98f3:   movzbl %r9b,%r9d
    0.00 :   98f7:   lea    (%r8,%r8,4),%rax
    0.00 :   98fb:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   9903:   ja     a1c2 <nf_conntrack_tcp_packet+0xdf2>
    0.00 :   9909:   mov    0x4(%rbp),%eax
    0.00 :   990c:   movl   $0x1,0x20(%rsp)
    0.00 :   9914:   mov    %eax,0x58(%rsp)
    0.00 :   9918:   bswap  %eax
    0.00 :   991a:   mov    %eax,0x18(%rsp)
    0.00 :   991e:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   9923:   cmp    $0x9,%al
    0.00 :   9925:   jne    a3ca <nf_conntrack_tcp_packet+0xffa>
    0.00 :   992b:   orb    $0x80,0xf3(%rbx)
    0.00 :   9932:   movzbl 0xd(%rbp),%eax
    0.00 :   9936:   xor    %r9d,%r9d
    0.00 :   9939:   cmpl   $0x2,(%rsp)
    0.00 :   993d:   movl   $0x9,0x20(%rsp)
    0.00 :   9945:   mov    %al,0x8(%rsp)
    0.00 :   9949:   setbe  %r8b
    0.00 :   994d:   mov    0x4(%rbp),%eax
    0.00 :   9950:   setbe  %r9b
    0.00 :   9954:   movzbl %r8b,%r8d
    0.00 :   9958:   mov    %eax,0x58(%rsp)
    0.00 :   995c:   bswap  %eax
    0.00 :   995e:   mov    %eax,0x18(%rsp)
    0.00 :   9962:   lea    (%r8,%r8,4),%rax
    0.00 :   9966:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   996e:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
   15.04 :   9973:   movzbl 0xd(%rbp),%ecx // [nf_conntrack][9973]
    0.00 :   9977:   test   $0x2,%cl
    0.00 :   997a:   jne    a056 <nf_conntrack_tcp_packet+0xc86>
    0.00 :   9980:   lea    (%r8,%r8,4),%rdx
    0.00 :   9984:   mov    0xb8(%rbx,%rdx,4),%esi
    0.00 :   998b:   mov    0xbc(%r12),%edx
    0.00 :   9993:   test   $0x10,%cl
    0.00 :   9996:   jne    9d84 <nf_conntrack_tcp_packet+0x9b4>
    0.00 :   999c:   mov    %esi,%eax
    0.00 :   999e:   mov    %esi,%r15d
    0.00 :   99a1:   test   $0x4,%cl
    0.00 :   99a4:   je     99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   99a6:   mov    0x58(%rsp),%r14d
    0.00 :   99ab:   test   %r14d,%r14d
    0.00 :   99ae:   je     a295 <nf_conntrack_tcp_packet+0xec5>
    0.00 :   99b4:   lea    0x1(%rdx),%edi
    0.00 :   99b7:   cmp    %edi,0x18(%rsp)
    0.00 :   99bb:   js     9da9 <nf_conntrack_tcp_packet+0x9d9>
    0.00 :   99c1:   lea    (%r8,%r8,4),%rcx
    0.00 :   99c5:   mov    0xc0(%r12),%r9d
    0.00 :   99cd:   mov    0xc0(%rbx,%rcx,4),%esi
    0.00 :   99d4:   test   %esi,%esi
    0.00 :   99d6:   je     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   99d8:   mov    0x8(%rsp),%r14d
    0.00 :   99dd:   mov    %r14d,%ecx
    0.00 :   99e0:   sub    %edx,%ecx
    0.00 :   99e2:   mov    $0x101d0,%edx
    0.00 :   99e7:   lea    0x1(%rcx),%r8d
    0.00 :   99eb:   mov    %esi,%ecx
    0.00 :   99ed:   not    %ecx
    0.00 :   99ef:   add    0xb8(%r12),%ecx
    0.00 :   99f7:   sub    %r14d,%ecx
    0.00 :   99fa:   shr    $0x1f,%ecx
    0.00 :   99fd:   cmp    %edx,%r9d
    0.00 :   9a00:   cmovb  %edx,%r9d
    0.00 :   9a04:   mov    %eax,%edx
    0.00 :   9a06:   sub    %r9d,%edx
    0.00 :   9a09:   sub    $0x1,%edx
    0.00 :   9a0c:   sub    %r15d,%edx
    0.00 :   9a0f:   shr    $0x1f,%edx
    0.00 :   9a12:   test   %dl,%cl
    0.00 :   9a14:   je     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a16:   cmp    %r8d,%esi
    0.00 :   9a19:   jb     9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a1b:   sub    $0x1,%r15d
    0.00 :   9a1f:   cmp    %eax,%r15d
    0.00 :   9a22:   jns    9a4b <nf_conntrack_tcp_packet+0x67b>
    0.00 :   9a24:   lea    (%r10,%r10,4),%rax
    0.00 :   9a28:   mov    %r14d,0xb8(%r12)
    0.00 :   9a30:   mov    $0x0,%r9
    0.00 :   9a37:   orb    $0x10,0xc9(%rbx,%rax,4)
    0.00 :   9a3f:   mov    %r10,0x8(%rsp)
    0.00 :   9a44:   push   %r8
    0.00 :   9a46:   xor    %r8d,%r8d
    0.00 :   9a49:   jmp    9a5e <nf_conntrack_tcp_packet+0x68e>
    0.00 :   9a4b:   mov    %r10,0x8(%rsp)
    0.00 :   9a50:   mov    $0x0,%r9
    0.00 :   9a57:   mov    $0x1,%r8d
    0.00 :   9a5d:   push   %rdi
    0.00 :   9a5e:   mov    0x40(%rsp),%rcx
    0.00 :   9a63:   mov    0x18(%rsp),%rdx
    0.00 :   9a68:   mov    %rbx,%rsi
    0.00 :   9a6b:   mov    %r13,%rdi
    0.00 :   9a6e:   call   8d20 <nf_tcp_log_invalid>
    0.00 :   9a73:   pop    %r11
    0.00 :   9a75:   mov    0x8(%rsp),%r10
    0.00 :   9a7a:   test   %eax,%eax
    0.00 :   9a7c:   jne    9aba <nf_conntrack_tcp_packet+0x6ea>
    0.00 :   9a7e:   mov    0x28(%rsp),%rdi
    0.00 :   9a83:   call   9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9a88:   mov    $0x1,%eax
    0.00 :   9a8d:   mov    0xb8(%rsp),%rdx
    0.00 :   9a95:   sub    %gs:0x28,%rdx
    0.00 :   9a9e:   jne    aa6a <nf_conntrack_tcp_packet+0x169a>
    0.00 :   9aa4:   add    $0xc0,%rsp
    0.00 :   9aab:   pop    %rbx
    0.00 :   9aac:   pop    %rbp
    0.00 :   9aad:   pop    %r12
    0.00 :   9aaf:   pop    %r13
    0.00 :   9ab1:   pop    %r14
    0.00 :   9ab3:   pop    %r15
    0.00 :   9ab5:   jmp    9aba <nf_conntrack_tcp_packet+0x6ea>
    0.00 :   9aba:   cmp    $0x1,%eax
    0.00 :   9abd:   je     9ac3 <nf_conntrack_tcp_packet+0x6f3>
    0.00 :   9ac3:   mov    0x20(%rsp),%ecx
    0.00 :   9ac7:   mov    0x4(%rsp),%esi
    0.00 :   9acb:   cmp    $0x4,%ecx
    0.00 :   9ace:   mov    %ecx,%eax
    0.00 :   9ad0:   sete   %r12b
    0.00 :   9ad4:   cmp    %esi,%ecx
    0.00 :   9ad6:   setne  %dl
    0.00 :   9ad9:   and    %edx,%r12d
    0.00 :   9adc:   movzbl 0x1c(%rsp),%ecx
    0.00 :   9ae1:   movzbl 0x5d(%rsp),%esi
    0.00 :   9ae6:   mov    %cl,0xe3(%rbx)
    0.00 :   9aec:   mov    %sil,0xe1(%rbx)
    0.00 :   9af3:   nopl   0x0(%rax,%rax,1)
    0.00 :   9af8:   nopl   0x0(%rax,%rax,1)
    0.00 :   9afd:   mov    %al,0xe0(%rbx)
    0.00 :   9b03:   test   %r12b,%r12b
    0.00 :   9b06:   je     9b14 <nf_conntrack_tcp_packet+0x744>
    0.00 :   9b08:   lea    (%r10,%r10,4),%rax
    0.00 :   9b0c:   orb    $0x4,0xc9(%rbx,%rax,4)
    0.00 :   9b14:   mov    0x30(%rsp),%rsi
    0.00 :   9b19:   movzbl 0xb8e(%rsi),%ecx
    0.00 :   9b20:   lea    0xb54(%rsi),%rax
    0.00 :   9b27:   cmp    %cl,0xe2(%rbx)
    0.00 :   9b2d:   jb     9bed <nf_conntrack_tcp_packet+0x81d>
    0.00 :   9b33:   mov    0x20(%rsp),%edx
    0.00 :   9b37:   mov    0xb84(%rsi),%r12d
    0.00 :   9b3e:   cmp    (%rax,%rdx,4),%r12d
    0.00 :   9b42:   jae    9bed <nf_conntrack_tcp_packet+0x81d>
    0.00 :   9b48:   mov    0x28(%rsp),%rdi
    0.00 :   9b4d:   call   9b52 <nf_conntrack_tcp_packet+0x782>
    0.00 :   9b52:   mov    0x4(%rsp),%esi
    0.00 :   9b56:   cmp    %esi,0x20(%rsp)
    0.00 :   9b5a:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b5c:   mov    0x88(%rbx),%rax
    0.00 :   9b63:   mov    0xb48(%rax),%rax
    0.00 :   9b6a:   test   %rax,%rax
    0.00 :   9b6d:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b6f:   mov    0xb0(%rbx),%rdi
    0.00 :   9b76:   test   %rdi,%rdi
    0.00 :   9b79:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b7b:   movzbl 0x4(%rdi),%eax
    0.00 :   9b7f:   test   %al,%al
    0.00 :   9b81:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b83:   mov    0xc(%rdi),%esi
    0.00 :   9b86:   add    %rdi,%rax
    0.00 :   9b89:   test   %esi,%esi
    0.00 :   9b8b:   jne    a896 <nf_conntrack_tcp_packet+0x14c6>
    0.00 :   9b91:   test   %rax,%rax
    0.00 :   9b94:   je     9b9a <nf_conntrack_tcp_packet+0x7ca>
    0.00 :   9b96:   lock orb $0x20,(%rax)
    0.00 :   9b9a:   mov    0x80(%rbx),%rax
    0.00 :   9ba1:   test   $0x2,%al
    0.00 :   9ba3:   jne    9c4d <nf_conntrack_tcp_packet+0x87d>
    0.00 :   9ba9:   testb  $0x4,0xd(%rbp)
    0.00 :   9bad:   jne    a4f3 <nf_conntrack_tcp_packet+0x1123>
    0.00 :   9bb3:   mov    0x1c(%rsp),%ecx
    0.00 :   9bb7:   test   %ecx,%ecx
    0.00 :   9bb9:   jne    9bc6 <nf_conntrack_tcp_packet+0x7f6>
    0.00 :   9bbb:   cmpl   $0x1,0x4(%rsp)
    0.00 :   9bc0:   je     9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9bc6:   cmpl   $0x3,0x20(%rsp)
    0.00 :   9bcb:   je     a506 <nf_conntrack_tcp_packet+0x1136>
    0.00 :   9bd1:   mov    (%rsp),%esi
    0.00 :   9bd4:   mov    $0x1,%r8d
    0.00 :   9bda:   mov    %r12d,%ecx
    0.00 :   9bdd:   mov    %r13,%rdx
    0.00 :   9be0:   mov    %rbx,%rdi
    0.00 :   9be3:   call   9be8 <nf_conntrack_tcp_packet+0x818>
    0.00 :   9be8:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   9bed:   cmpl   $0x4,0x1c(%rsp)
    0.00 :   9bf2:   je     a791 <nf_conntrack_tcp_packet+0x13c1>
    0.00 :   9bf8:   mov    0x20(%rsp),%edx
    0.00 :   9bfc:   mov    (%rax,%rdx,4),%r12d
    0.00 :   9c00:   movzbl 0xc9(%rbx),%eax
    0.00 :   9c07:   or     0xdd(%rbx),%al
    0.00 :   9c0d:   test   $0x10,%al
    0.00 :   9c0f:   je     9c29 <nf_conntrack_tcp_packet+0x859>
    0.00 :   9c11:   mov    0x30(%rsp),%rax
    0.00 :   9c16:   mov    0xb88(%rax),%eax
    0.00 :   9c1c:   cmp    %r12d,%eax
    0.00 :   9c1f:   jae    9c29 <nf_conntrack_tcp_packet+0x859>
    0.00 :   9c21:   mov    %eax,%r12d
    0.00 :   9c24:   jmp    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c29:   cmpw   $0x0,0xf0(%rbx)
    0.00 :   9c31:   jne    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c37:   mov    0x30(%rsp),%rax
    0.00 :   9c3c:   mov    0xb84(%rax),%eax
    0.00 :   9c42:   cmp    %r12d,%eax
    0.00 :   9c45:   jae    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   9c4b:   jmp    9c21 <nf_conntrack_tcp_packet+0x851>
    0.00 :   9c4d:   mov    0x80(%rbx),%rax
    0.00 :   9c54:   test   $0x4,%al
    0.00 :   9c56:   jne    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c5c:   mov    0x4(%rsp),%eax
    0.00 :   9c60:   sub    $0x2,%eax
    0.00 :   9c63:   cmp    $0x1,%eax
    0.00 :   9c66:   ja     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c6c:   cmpl   $0x3,0x20(%rsp)
    0.00 :   9c71:   jne    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c77:   lock orb $0x4,0x80(%rbx)
    0.00 :   9c7f:   mov    0x88(%rbx),%rax
    0.00 :   9c86:   mov    0xb48(%rax),%rax
    0.00 :   9c8d:   test   %rax,%rax
    0.00 :   9c90:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9c96:   mov    0xb0(%rbx),%rdi
    0.00 :   9c9d:   test   %rdi,%rdi
    0.00 :   9ca0:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9ca6:   movzbl 0x4(%rdi),%eax
    0.00 :   9caa:   test   %al,%al
    0.00 :   9cac:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cb2:   mov    0xc(%rdi),%edx
    0.00 :   9cb5:   add    %rdi,%rax
    0.00 :   9cb8:   test   %edx,%edx
    0.00 :   9cba:   jne    a9dd <nf_conntrack_tcp_packet+0x160d>
    0.00 :   9cc0:   test   %rax,%rax
    0.00 :   9cc3:   je     9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cc9:   lock orb $0x10,(%rax)
    0.00 :   9ccd:   jmp    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   9cd2:   mov    %eax,0x40(%rsp)
    0.00 :   9cd6:   mov    0x8(%rsp),%eax
    0.00 :   9cda:   mov    $0x1,%edx
    0.00 :   9cdf:   mov    %r14d,%esi
    0.00 :   9ce2:   mov    0x38(%rsp),%rcx
    0.00 :   9ce7:   mov    %r13,%rdi
    0.00 :   9cea:   mov    %r8,0x60(%rsp)
    0.00 :   9cef:   mov    %eax,0xbc(%r12)
    0.00 :   9cf7:   mov    %eax,0xb8(%r12)
    0.00 :   9cff:   mov    0x54(%rsp),%eax
    0.00 :   9d03:   mov    %r10,0x48(%rsp)
    0.00 :   9d08:   test   %eax,%eax
    0.00 :   9d0a:   cmovne %eax,%edx
    0.00 :   9d0d:   mov    %edx,0xc0(%r12)
    0.00 :   9d15:   mov    %rbp,%rdx
    0.00 :   9d18:   call   90c0 <tcp_options>
    0.00 :   9d1d:   mov    0x48(%rsp),%r10
    0.00 :   9d22:   mov    0x50(%rsp),%r11d
    0.00 :   9d27:   mov    0x40(%rsp),%eax
    0.00 :   9d2b:   mov    0x60(%rsp),%r8
    0.00 :   9d30:   lea    (%r10,%r10,4),%rdx
    0.00 :   9d34:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   9d3c:   je     9d4c <nf_conntrack_tcp_packet+0x97c>
    0.00 :   9d3e:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d42:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   9d4a:   jne    9d64 <nf_conntrack_tcp_packet+0x994>
    0.00 :   9d4c:   lea    (%r10,%r10,4),%rdx
    0.00 :   9d50:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   9d58:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d5c:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   9d64:   movzbl 0xd(%rbp),%ecx
    0.00 :   9d68:   test   $0x10,%cl
    0.00 :   9d6b:   je     a129 <nf_conntrack_tcp_packet+0xd59>
    0.00 :   9d71:   lea    (%r8,%r8,4),%rdx
    0.00 :   9d75:   mov    0xb8(%rbx,%rdx,4),%esi
    0.00 :   9d7c:   mov    0xbc(%r12),%edx
    0.00 :   9d84:   sub    %eax,%r11d
    0.00 :   9d87:   mov    0xc(%rbp),%eax
    0.00 :   9d8a:   and    $0x1400,%eax
    0.00 :   9d8f:   cmp    $0x1400,%eax
    0.00 :   9d94:   mov    %esi,%eax
    0.00 :   9d96:   jne    9da1 <nf_conntrack_tcp_packet+0x9d1>
    0.00 :   9d98:   test   %r11d,%r11d
    0.00 :   9d9b:   je     a1ba <nf_conntrack_tcp_packet+0xdea>
    0.00 :   9da1:   mov    %r11d,%esi
    0.00 :   9da4:   jmp    99a1 <nf_conntrack_tcp_packet+0x5d1>
    0.00 :   9da9:   lea    0x1(%rax),%edi
    0.00 :   9dac:   cmp    %edi,%r15d
    0.00 :   9daf:   jns    a4bc <nf_conntrack_tcp_packet+0x10ec>
    0.00 :   9db5:   lea    (%r8,%r8,4),%rdi
    0.00 :   9db9:   lea    (%rbx,%rdi,4),%rdi
    0.00 :   9dbd:   mov    0xc0(%rdi),%r9d
    0.00 :   9dc4:   test   %r9d,%r9d
    0.00 :   9dc7:   jne    a18e <nf_conntrack_tcp_packet+0xdbe>
    0.00 :   9dcd:   mov    0xc0(%r12),%r9d
    0.00 :   9dd5:   mov    $0x101d0,%r11d
    0.00 :   9ddb:   cmp    %r11d,%r9d
    0.00 :   9dde:   cmovae %r9d,%r11d
    0.00 :   9de2:   sub    %r11d,%eax
    0.00 :   9de5:   sub    $0x1,%eax
    0.00 :   9de8:   cmp    %r15d,%eax
    0.00 :   9deb:   jns    a4d4 <nf_conntrack_tcp_packet+0x1104>
    0.00 :   9df1:   and    $0x2,%ecx
    0.00 :   9df4:   jne    9e06 <nf_conntrack_tcp_packet+0xa36>
    0.00 :   9df6:   lea    (%r10,%r10,4),%rax
    0.00 :   9dfa:   movzbl 0xc8(%rbx,%rax,4),%ecx
    0.00 :   9e02:   shll   %cl,0x54(%rsp)
    0.00 :   9e06:   mov    0x54(%rsp),%ecx
    0.00 :   9e0a:   mov    %r15d,%eax
    0.00 :   9e0d:   sub    %esi,%eax
    0.00 :   9e0f:   add    %ecx,%eax
    0.00 :   9e11:   cmp    %eax,%r9d
    0.00 :   9e14:   jae    9e1e <nf_conntrack_tcp_packet+0xa4e>
    0.00 :   9e16:   mov    %eax,0xc0(%r12)
    0.00 :   9e1e:   mov    0x8(%rsp),%eax
    0.00 :   9e22:   cmp    %eax,0xb8(%r12)
    0.00 :   9e2a:   jns    9e40 <nf_conntrack_tcp_packet+0xa70>
    0.00 :   9e2c:   mov    %eax,0xb8(%r12)
    0.00 :   9e34:   lea    (%r10,%r10,4),%rax
    0.00 :   9e38:   orb    $0x10,0xc9(%rbx,%rax,4)
    0.00 :   9e40:   testb  $0x10,0xd(%rbp)
    0.00 :   9e44:   je     9e6f <nf_conntrack_tcp_packet+0xa9f>
    0.00 :   9e46:   lea    (%r10,%r10,4),%rax
    0.00 :   9e4a:   lea    (%rbx,%rax,4),%rcx
    0.00 :   9e4e:   movzbl 0xc9(%rcx),%eax
    0.00 :   9e55:   test   $0x20,%al
    0.00 :   9e57:   je     a51d <nf_conntrack_tcp_packet+0x114d>
    0.00 :   9e5d:   cmp    %esi,0xc4(%r12)
    0.00 :   9e65:   jns    9e6f <nf_conntrack_tcp_packet+0xa9f>
    0.00 :   9e67:   mov    %esi,0xc4(%r12)
    0.00 :   9e6f:   mov    0xc0(%rdi),%eax
    0.00 :   9e75:   test   %eax,%eax
    0.00 :   9e77:   je     9e85 <nf_conntrack_tcp_packet+0xab5>
    0.00 :   9e79:   mov    0x8(%rsp),%ecx
    0.00 :   9e7d:   cmp    %ecx,%edx
    0.00 :   9e7f:   js     a5ed <nf_conntrack_tcp_packet+0x121d>
    0.00 :   9e85:   mov    0x54(%rsp),%ecx
    0.00 :   9e89:   lea    (%rcx,%r15,1),%eax
    0.00 :   9e8d:   mov    %eax,%edx
    0.00 :   9e8f:   not    %edx
    0.00 :   9e91:   add    0xbc(%rdi),%edx
    0.00 :   9e97:   jns    9ea9 <nf_conntrack_tcp_packet+0xad9>
    0.00 :   9e99:   add    $0x1,%r15d
    0.00 :   9e9d:   test   %ecx,%ecx
    0.00 :   9e9f:   cmove  %r15d,%eax
    0.00 :   9ea3:   mov    %eax,0xbc(%rdi)
    0.00 :   9ea9:   cmp    0xb8(%rdi),%esi
    0.00 :   9eaf:   jne    9ebd <nf_conntrack_tcp_packet+0xaed>
    0.00 :   9eb1:   lea    (%r8,%r8,4),%rax
    0.00 :   9eb5:   andb   $0xef,0xc9(%rbx,%rax,4)
    0.00 :   9ebd:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   9ec2:   je     a73d <nf_conntrack_tcp_packet+0x136d>
    0.00 :   9ec8:   mov    0x20(%rsp),%esi
    0.00 :   9ecc:   mov    0x4(%rsp),%edi
    0.00 :   9ed0:   cmp    %edi,%esi
    0.00 :   9ed2:   mov    %esi,%eax
    0.00 :   9ed4:   setne  %r12b
    0.00 :   9ed8:   cmp    $0x4,%esi
    0.00 :   9edb:   sete   %dl
    0.00 :   9ede:   and    %edx,%r12d
    0.00 :   9ee1:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
   13.54 :   9ee6:   movq   $0x0,0x90(%rsp) // [nf_conntrack][9ee6]
    0.00 :   9ef2:   movq   $0x0,0x98(%rsp)
    0.00 :   9efe:   movq   $0x0,0xa0(%rsp)
    0.00 :   9f0a:   movq   $0x0,0xa8(%rsp)
    0.00 :   9f16:   movq   $0x0,0xb0(%rsp)
    0.00 :   9f22:   movzbl 0xc(%rbp),%eax
    0.00 :   9f26:   shr    $0x4,%al
    0.00 :   9f29:   movzbl %al,%eax
    0.00 :   9f2c:   lea    -0x14(,%rax,4),%r15d
    0.00 :   9f34:   test   %r15d,%r15d
    0.00 :   9f37:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f3d:   lea    0x14(%r14),%esi
    0.00 :   9f41:   sub    0x74(%r13),%ecx
    0.00 :   9f45:   mov    0xd0(%r13),%rax
    0.00 :   9f4c:   sub    %esi,%ecx
    0.00 :   9f4e:   cmp    %ecx,%r15d
    0.00 :   9f51:   jg     a7f3 <nf_conntrack_tcp_packet+0x1423>
    0.00 :   9f57:   movslq %esi,%rsi
    0.00 :   9f5a:   add    %rsi,%rax
    0.00 :   9f5d:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f63:   cmp    $0xc,%r15d
    0.00 :   9f67:   je     a780 <nf_conntrack_tcp_packet+0x13b0>
    0.00 :   9f6d:   test   %r15d,%r15d
    0.00 :   9f70:   jle    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f76:   movzbl (%rax),%ecx
    0.00 :   9f79:   test   %cl,%cl
    0.00 :   9f7b:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f81:   cmp    $0x1,%cl
    0.00 :   9f84:   jne    a45b <nf_conntrack_tcp_packet+0x108b>
    0.00 :   9f8a:   sub    $0x1,%r15d
    0.00 :   9f8e:   add    $0x1,%rax
    0.00 :   9f92:   test   %r15d,%r15d
    0.00 :   9f95:   jg     9f76 <nf_conntrack_tcp_packet+0xba6>
    0.00 :   9f97:   jmp    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   9f9c:   mov    0x24(%rsp),%r10d
    0.00 :   9fa1:   mov    0x4(%rsp),%r15d
    0.00 :   9fa6:   mov    %r10,%rax
    0.00 :   9fa9:   shl    $0x4,%rax
    0.00 :   9fad:   sub    %r10,%rax
    0.00 :   9fb0:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   9fb9:   cmp    $0x8,%al
    0.00 :   9fbb:   je     a533 <nf_conntrack_tcp_packet+0x1163>
    0.00 :   9fc1:   movl   $0x4,0x1c(%rsp)
    0.00 :   9fc9:   jmp    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   9fce:   mov    %al,0x8(%rsp)
    0.00 :   9fd2:   mov    0x20(%rsp),%eax
    0.00 :   9fd6:   mov    $0x0,%rdi
    0.00 :   9fdd:   mov    $0x0,%rsi
    0.00 :   9fe4:   movzbl 0xd(%rbp),%r8d
    0.00 :   9fe9:   mov    %r10,0x10(%rsp)
    0.00 :   9fee:   push   %rax
    0.00 :   9fef:   mov    0xc(%rsp),%eax
    0.00 :   9ff3:   mov    %r8d,%r9d
    0.00 :   9ff6:   mov    %r8d,%ecx
    0.00 :   9ff9:   mov    %r8d,%edx
    0.00 :   9ffc:   and    $0x1,%r8d
    0.00 :   a000:   push   %rax
    0.00 :   a001:   shr    $0x2,%r9b
    0.00 :   a005:   shr    $0x4,%cl
    0.00 :   a008:   shr    %dl
    0.00 :   a00a:   and    $0x1,%ecx
    0.00 :   a00d:   and    $0x1,%r9d
    0.00 :   a011:   and    $0x1,%edx
    0.00 :   a014:   call   a019 <nf_conntrack_tcp_packet+0xc49>
    0.00 :   a019:   pop    %rdi
    0.00 :   a01a:   pop    %r8
    0.00 :   a01c:   mov    0x10(%rsp),%r10
    0.00 :   a021:   movzbl 0x8(%rsp),%eax
    0.00 :   a026:   jmp    9afd <nf_conntrack_tcp_packet+0x72d>
    0.00 :   a02b:   mov    $0x0,%rsi
    0.00 :   a032:   mov    $0x0,%rdi
    0.00 :   a039:   mov    %r10,0x10(%rsp)
    0.00 :   a03e:   mov    %al,0x8(%rsp)
    0.00 :   a042:   call   a047 <nf_conntrack_tcp_packet+0xc77>
    0.00 :   a047:   mov    0x10(%rsp),%r10
    0.00 :   a04c:   movzbl 0x8(%rsp),%eax
    0.00 :   a051:   jmp    9af8 <nf_conntrack_tcp_packet+0x728>
    0.00 :   a056:   mov    0x8(%rsp),%edi
    0.00 :   a05a:   cmp    %edi,0xb8(%r12)
    0.00 :   a062:   jns    9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a068:   movzbl 0xe0(%rbx),%esi
    0.00 :   a06f:   lea    -0x1(%rsi),%edx
    0.00 :   a072:   cmp    $0x1,%dl
    0.00 :   a075:   ja     9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a07b:   mov    %eax,0x40(%rsp)
    0.00 :   a07f:   mov    0x8(%rsp),%eax
    0.00 :   a083:   mov    $0x1,%edx
    0.00 :   a088:   mov    %r14d,%esi
    0.00 :   a08b:   mov    0x38(%rsp),%rcx
    0.00 :   a090:   mov    %r13,%rdi
    0.00 :   a093:   mov    %r8,0x60(%rsp)
    0.00 :   a098:   mov    %eax,0xbc(%r12)
    0.00 :   a0a0:   mov    %eax,0xb8(%r12)
    0.00 :   a0a8:   mov    0x54(%rsp),%eax
    0.00 :   a0ac:   mov    %r10,0x48(%rsp)
    0.00 :   a0b1:   test   %eax,%eax
    0.00 :   a0b3:   mov    %r11d,0x50(%rsp)
    0.00 :   a0b8:   cmovne %eax,%edx
    0.00 :   a0bb:   mov    %edx,0xc0(%r12)
    0.00 :   a0c3:   mov    %rbp,%rdx
    0.00 :   a0c6:   call   90c0 <tcp_options>
    0.00 :   a0cb:   mov    0x48(%rsp),%r10
    0.00 :   a0d0:   mov    0x50(%rsp),%r11d
    0.00 :   a0d5:   mov    0x40(%rsp),%eax
    0.00 :   a0d9:   mov    0x60(%rsp),%r8
    0.00 :   a0de:   lea    (%r10,%r10,4),%rdx
    0.00 :   a0e2:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   a0ea:   je     a0fa <nf_conntrack_tcp_packet+0xd2a>
    0.00 :   a0ec:   lea    (%r8,%r8,4),%rdx
    0.00 :   a0f0:   testb  $0x1,0xc9(%rbx,%rdx,4)
    0.00 :   a0f8:   jne    a112 <nf_conntrack_tcp_packet+0xd42>
    0.00 :   a0fa:   lea    (%r10,%r10,4),%rdx
    0.00 :   a0fe:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   a106:   lea    (%r8,%r8,4),%rdx
    0.00 :   a10a:   movb   $0x0,0xc8(%rbx,%rdx,4)
    0.00 :   a112:   cmpl   $0x2,(%rsp)
    0.00 :   a116:   movzbl 0xd(%rbp),%ecx
    0.00 :   a11a:   jbe    9980 <nf_conntrack_tcp_packet+0x5b0>
    0.00 :   a120:   test   $0x10,%cl
    0.00 :   a123:   jne    9d71 <nf_conntrack_tcp_packet+0x9a1>
    0.00 :   a129:   mov    0x20(%rsp),%esi
    0.00 :   a12d:   mov    0x4(%rsp),%edi
    0.00 :   a131:   cmp    $0x4,%esi
    0.00 :   a134:   mov    %esi,%eax
    0.00 :   a136:   sete   %r12b
    0.00 :   a13a:   cmp    %edi,%esi
    0.00 :   a13c:   setne  %dl
    0.00 :   a13f:   and    %edx,%r12d
    0.00 :   a142:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a147:   shl    $0x4,%rax
    0.00 :   a14b:   movl   $0x5,0x1c(%rsp)
    0.00 :   a153:   sub    %r10,%rax
    0.00 :   a156:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   a15f:   cmp    $0x8,%al
    0.00 :   a161:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   a167:   jmp    9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   a16c:   mov    %r15d,0xbc(%rcx)
    0.00 :   a173:   mov    %r15d,%esi
    0.00 :   a176:   mov    %r15d,0xb8(%rcx)
    0.00 :   a17d:   movzbl 0xd(%rbp),%ecx
    0.00 :   a181:   mov    0xbc(%r12),%edx
    0.00 :   a189:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    0.00 :   a18e:   mov    0x8(%rsp),%r11d
    0.00 :   a193:   not    %r9d
    0.00 :   a196:   add    0xb8(%r12),%r9d
    0.00 :   a19e:   cmp    %r11d,%r9d
    0.00 :   a1a1:   js     9dcd <nf_conntrack_tcp_packet+0x9fd>
    0.00 :   a1a7:   mov    %r10,0x8(%rsp)
    0.00 :   a1ac:   push   %r9
    0.00 :   a1ae:   mov    $0x0,%r9
    0.00 :   a1b5:   jmp    9a46 <nf_conntrack_tcp_packet+0x676>
    0.00 :   a1ba:   mov    %esi,%r15d
    0.00 :   a1bd:   jmp    99a1 <nf_conntrack_tcp_packet+0x5d1>
    0.00 :   a1c2:   lea    (%r10,%r10,4),%rax
    0.00 :   a1c6:   or     0xc9(%rbx,%rax,4),%sil
    0.00 :   a1ce:   and    $0x4,%esi
    0.00 :   a1d1:   jne    a1f1 <nf_conntrack_tcp_packet+0xe21>
    0.00 :   a1d3:   movzbl 0x5d(%rsp),%eax
    0.00 :   a1d8:   cmp    %al,0xe1(%rbx)
    0.00 :   a1de:   jne    97cd <nf_conntrack_tcp_packet+0x3fd>
    0.00 :   a1e4:   cmpb   $0x4,0xe3(%rbx)
    0.00 :   a1eb:   jne    97cd <nf_conntrack_tcp_packet+0x3fd>
    0.00 :   a1f1:   mov    0x28(%rsp),%rdi
    0.00 :   a1f6:   call   a1fb <nf_conntrack_tcp_packet+0xe2b>
    0.00 :   a1fb:   xor    %edx,%edx
    0.00 :   a1fd:   xor    %esi,%esi
    0.00 :   a1ff:   mov    %rbx,%rdi
    0.00 :   a202:   call   a207 <nf_conntrack_tcp_packet+0xe37>
    0.00 :   a207:   neg    %al
    0.00 :   a209:   sbb    %eax,%eax
    0.00 :   a20b:   and    $0xfffffffc,%eax
    0.00 :   a20e:   jmp    9a8d <nf_conntrack_tcp_packet+0x6bd>
    0.00 :   a213:   xor    %r9d,%r9d
    0.00 :   a216:   cmpl   $0x2,(%rsp)
    0.00 :   a21a:   mov    0x4(%rbp),%eax
    0.00 :   a21d:   movl   $0x7,0x20(%rsp)
    0.00 :   a225:   setbe  %r8b
    0.00 :   a229:   setbe  %r9b
    0.00 :   a22d:   movzbl %r8b,%r8d
    0.00 :   a231:   mov    %eax,0x58(%rsp)
    0.00 :   a235:   bswap  %eax
    0.00 :   a237:   mov    %eax,0x18(%rsp)
    0.00 :   a23b:   lea    (%r8,%r8,4),%rax
    0.00 :   a23f:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a247:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a24c:   xor    %r9d,%r9d
    0.00 :   a24f:   cmpl   $0x2,(%rsp)
    0.00 :   a253:   mov    0x4(%rbp),%eax
    0.00 :   a256:   setbe  %r8b
    0.00 :   a25a:   setbe  %r9b
    0.00 :   a25e:   movzbl %r8b,%r8d
    0.00 :   a262:   mov    %eax,0x58(%rsp)
    0.00 :   a266:   bswap  %eax
    0.00 :   a268:   mov    %eax,0x18(%rsp)
    0.00 :   a26c:   lea    (%r8,%r8,4),%rax
    0.00 :   a270:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a278:   movl   $0x3,0x1c(%rsp)
    0.00 :   a280:   movl   $0x6,0x4(%rsp)
    0.00 :   a288:   movl   $0x7,0x20(%rsp)
    0.00 :   a290:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a295:   cmpb   $0x1,0xe0(%rbx)
    0.00 :   a29c:   movl   $0x0,0x18(%rsp)
    0.00 :   a2a4:   jne    99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   a2aa:   mov    0xb8(%r12),%edi
    0.00 :   a2b2:   mov    %edi,0x18(%rsp)
    0.00 :   a2b6:   mov    %edi,0x8(%rsp)
    0.00 :   a2ba:   jmp    99b4 <nf_conntrack_tcp_packet+0x5e4>
    0.00 :   a2bf:   xor    %r9d,%r9d
    0.00 :   a2c2:   cmpl   $0x2,(%rsp)
    0.00 :   a2c6:   mov    0x1c(%rsp),%ecx
    0.00 :   a2ca:   setbe  %r8b
    0.00 :   a2ce:   setbe  %r9b
    0.00 :   a2d2:   movzbl %r8b,%r8d
    0.00 :   a2d6:   lea    (%r8,%r8,4),%rax
    0.00 :   a2da:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a2e2:   mov    0x4(%rbp),%eax
    0.00 :   a2e5:   mov    %eax,0x58(%rsp)
    0.00 :   a2e9:   bswap  %eax
    0.00 :   a2eb:   mov    %eax,0x18(%rsp)
    0.00 :   a2ef:   cmp    $0x3,%ecx
    0.00 :   a2f2:   jne    a4e6 <nf_conntrack_tcp_packet+0x1116>
    0.00 :   a2f8:   cmpb   $0x0,0x5d(%rsp)
    0.00 :   a2fd:   je     a4e6 <nf_conntrack_tcp_packet+0x1116>
    0.00 :   a303:   cmpb   $0x0,0xf3(%rbx)
    0.00 :   a30a:   mov    $0x3,%eax
    0.00 :   a30f:   cmovns %ecx,%eax
    0.00 :   a312:   mov    %eax,0x1c(%rsp)
    0.00 :   a316:   movsbl 0xf3(%rbx),%eax
    0.00 :   a31d:   cltd
    0.00 :   a31e:   not    %edx
    0.00 :   a320:   add    $0x3,%edx
    0.00 :   a323:   mov    %edx,0x20(%rsp)
    0.00 :   a327:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a32c:   mov    0xb0(%rbx),%rdi
    0.00 :   a333:   test   %rdi,%rdi
    0.00 :   a336:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a33c:   movzbl 0x7(%rdi),%eax
    0.00 :   a340:   test   %al,%al
    0.00 :   a342:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a348:   mov    0xc(%rdi),%r12d
    0.00 :   a34c:   add    %rdi,%rax
    0.00 :   a34f:   test   %r12d,%r12d
    0.00 :   a352:   jne    a931 <nf_conntrack_tcp_packet+0x1561>
    0.00 :   a358:   test   %rax,%rax
    0.00 :   a35b:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a361:   cmpl   $0x1,0x4(%rsp)
    0.00 :   a366:   sete   %dl
    0.00 :   a369:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   a36e:   sete   %al
    0.00 :   a371:   test   %al,%dl
    0.00 :   a373:   je     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a379:   cmpl   $0x2,(%rsp)
    0.00 :   a37d:   ja     a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a383:   cmpb   $0x0,0xe1(%rbx)
    0.00 :   a38a:   jne    a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a390:   lea    (%r10,%r10,4),%rdx
    0.00 :   a394:   mov    0x4(%rbp),%eax
    0.00 :   a397:   mov    0xb8(%rbx,%rdx,4),%edx
    0.00 :   a39e:   bswap  %eax
    0.00 :   a3a0:   sub    $0x1,%edx
    0.00 :   a3a3:   cmp    %eax,%edx
    0.00 :   a3a5:   jne    a7a2 <nf_conntrack_tcp_packet+0x13d2>
    0.00 :   a3ab:   xchg   %ax,%ax
    0.00 :   a3ad:   jmp    9a7e <nf_conntrack_tcp_packet+0x6ae>
    0.00 :   a3b2:   mov    $0x0,%rsi
    0.00 :   a3b9:   mov    $0x0,%rdi
    0.00 :   a3c0:   call   a3c5 <nf_conntrack_tcp_packet+0xff5>
    0.00 :   a3c5:   jmp    9a7e <nf_conntrack_tcp_packet+0x6ae>
   14.12 :   a3ca:   xor    %r9d,%r9d // [nf_conntrack][a3ca]
    0.00 :   a3cd:   cmpl   $0x2,(%rsp)
    0.00 :   a3d1:   mov    %eax,0x20(%rsp)
    0.00 :   a3d5:   setbe  %r8b
    0.00 :   a3d9:   mov    0x4(%rbp),%eax
    0.00 :   a3dc:   setbe  %r9b
    0.00 :   a3e0:   movzbl %r8b,%r8d
    0.00 :   a3e4:   mov    %eax,0x58(%rsp)
    0.00 :   a3e8:   bswap  %eax
    0.00 :   a3ea:   mov    %eax,0x18(%rsp)
    0.00 :   a3ee:   lea    (%r8,%r8,4),%rax
    0.00 :   a3f2:   movzbl 0xc9(%rbx,%rax,4),%esi
    0.00 :   a3fa:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a3ff:   mov    %r10,%rax
    0.00 :   a402:   movl   $0x2,0x1c(%rsp)
    0.00 :   a40a:   shl    $0x4,%rax
    0.00 :   a40e:   sub    %r10,%rax
    0.00 :   a411:   movzbl 0x0(%r15,%rax,4),%eax
    0.00 :   a41a:   cmp    $0x8,%al
    0.00 :   a41c:   jne    972c <nf_conntrack_tcp_packet+0x35c>
    0.00 :   a422:   jmp    9541 <nf_conntrack_tcp_packet+0x171>
    0.00 :   a427:   test   %rsi,%rsi
    0.00 :   a42a:   je     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   a430:   mov    $0x14,%ecx
    0.00 :   a435:   lea    0x68(%rsp),%rdx
    0.00 :   a43a:   mov    %r14d,%esi
    0.00 :   a43d:   mov    %r13,%rdi
    0.00 :   a440:   call   a445 <nf_conntrack_tcp_packet+0x1075>
    0.00 :   a445:   test   %eax,%eax
    0.00 :   a447:   js     a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   a44d:   mov    0x70(%r13),%edx
    0.00 :   a451:   lea    0x68(%rsp),%rbp
    0.00 :   a456:   jmp    9455 <nf_conntrack_tcp_packet+0x85>
    0.00 :   a45b:   cmp    $0x1,%r15d
    0.00 :   a45f:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a465:   movzbl 0x1(%rax),%edx
    0.00 :   a469:   lea    0x2(%rax),%rsi
    0.00 :   a46d:   cmp    %r15d,%edx
    0.00 :   a470:   jg     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a476:   cmp    $0x1,%edx
    0.00 :   a479:   jle    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a47f:   lea    -0x2(%rdx),%eax
    0.00 :   a482:   cmp    $0x5,%cl
    0.00 :   a485:   jne    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a487:   cmp    $0x9,%edx
    0.00 :   a48a:   jle    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a48c:   test   $0x7,%al
    0.00 :   a48e:   jne    a4af <nf_conntrack_tcp_packet+0x10df>
    0.00 :   a490:   mov    %r11d,%r15d
    0.00 :   a493:   xor    %ecx,%ecx
    0.00 :   a495:   mov    0x4(%rsi,%rcx,1),%edx
    0.00 :   a499:   bswap  %edx
    0.00 :   a49b:   cmp    %edx,%r15d
    0.00 :   a49e:   cmovs  %edx,%r15d
    0.00 :   a4a2:   add    $0x8,%rcx
    0.00 :   a4a6:   cmp    %ecx,%eax
    0.00 :   a4a8:   jg     a495 <nf_conntrack_tcp_packet+0x10c5>
    0.00 :   a4aa:   jmp    95ee <nf_conntrack_tcp_packet+0x21e>
    0.00 :   a4af:   cltq
    0.00 :   a4b1:   sub    %edx,%r15d
    0.00 :   a4b4:   add    %rsi,%rax
    0.00 :   a4b7:   jmp    9f6d <nf_conntrack_tcp_packet+0xb9d>
    0.00 :   a4bc:   mov    %r10,0x8(%rsp)
    0.00 :   a4c1:   mov    $0x0,%r9
    0.00 :   a4c8:   mov    $0x1,%r8d
    0.00 :   a4ce:   push   %rdi
    0.00 :   a4cf:   jmp    9a5e <nf_conntrack_tcp_packet+0x68e>
    0.00 :   a4d4:   mov    %r10,0x8(%rsp)
    0.00 :   a4d9:   mov    $0x0,%r9
    0.00 :   a4e0:   push   %rax
    0.00 :   a4e1:   jmp    9a46 <nf_conntrack_tcp_packet+0x676>
    0.00 :   a4e6:   movl   $0x2,0x20(%rsp)
    0.00 :   a4ee:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a4f3:   mov    (%rsp),%esi
    0.00 :   a4f6:   mov    %r13,%rdx
    0.00 :   a4f9:   mov    %rbx,%rdi
    0.00 :   a4fc:   call   a501 <nf_conntrack_tcp_packet+0x1131>
    0.00 :   a501:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   a506:   mov    0x30(%rsp),%rax
    0.00 :   a50b:   mov    0xb88(%rax),%eax
    0.00 :   a511:   cmp    %rax,%r12
    0.00 :   a514:   cmova  %rax,%r12
    0.00 :   a518:   jmp    9bd1 <nf_conntrack_tcp_packet+0x801>
    0.00 :   a51d:   or     $0x20,%eax
    0.00 :   a520:   mov    %esi,0xc4(%r12)
    0.00 :   a528:   mov    %al,0xc9(%rcx)
    0.00 :   a52e:   jmp    9e6f <nf_conntrack_tcp_packet+0xa9f>
    0.00 :   a533:   movzbl %cl,%edi
    0.00 :   a536:   lea    -0x4(%rdi),%esi
    0.00 :   a539:   cmp    $0x4,%esi
    0.00 :   a53c:   jbe    a7de <nf_conntrack_tcp_packet+0x140e>
    0.00 :   a542:   xor    %r9d,%r9d
    0.00 :   a545:   cmpl   $0x2,(%rsp)
    0.00 :   a549:   setbe  %r8b
    0.00 :   a54d:   setbe  %r9b
    0.00 :   a551:   movzbl %r8b,%r8d
    0.00 :   a555:   lea    (%r8,%r8,4),%rax
    0.00 :   a559:   lea    (%rbx,%rax,4),%rax
    0.00 :   a55d:   movzbl 0xc9(%rax),%esi
    0.00 :   a564:   test   $0x20,%sil
    0.00 :   a568:   jne    a8a5 <nf_conntrack_tcp_packet+0x14d5>
    0.00 :   a56e:   mov    0x80(%rbx),%rax
    0.00 :   a575:   test   $0x2,%al
    0.00 :   a577:   jne    a94a <nf_conntrack_tcp_packet+0x157a>
    0.00 :   a57d:   movl   $0x8,0x20(%rsp)
    0.00 :   a585:   mov    0x80(%rbx),%rax
    0.00 :   a58c:   test   $0x4,%al
    0.00 :   a58e:   jne    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a590:   cmpb   $0x3,0xe3(%rbx)
    0.00 :   a597:   je     a95f <nf_conntrack_tcp_packet+0x158f>
    0.00 :   a59d:   mov    0x4(%rbp),%eax
    0.00 :   a5a0:   cmpl   $0x1,0x4(%rsp)
    0.00 :   a5a5:   movl   $0x4,0x1c(%rsp)
    0.00 :   a5ad:   mov    %eax,0x58(%rsp)
    0.00 :   a5b1:   bswap  %eax
    0.00 :   a5b3:   mov    %eax,0x18(%rsp)
    0.00 :   a5b7:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5bd:   mov    0xe0(%rbx),%eax
    0.00 :   a5c3:   and    $0xff00ff00,%eax
    0.00 :   a5c8:   cmp    $0x3000100,%eax
    0.00 :   a5cd:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5d3:   mov    0x18(%rsp),%eax
    0.00 :   a5d7:   cmp    %eax,0xe8(%rbx)
    0.00 :   a5dd:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a5e3:   movzbl 0x20(%rsp),%eax
    0.00 :   a5e8:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a5ed:   sub    %edx,%eax
    0.00 :   a5ef:   add    %ecx,%eax
    0.00 :   a5f1:   mov    %eax,0xc0(%rdi)
    0.00 :   a5f7:   jmp    9e85 <nf_conntrack_tcp_packet+0xab5>
    0.00 :   a5fc:   movzbl 0x5d(%rsp),%eax
    0.00 :   a601:   mov    0x1c(%rsp),%r9d
    0.00 :   a606:   mov    %al,0xe1(%rbx)
    0.00 :   a60c:   mov    %r9b,0xe3(%rbx)
    0.00 :   a613:   mov    0x4(%rbp),%eax
    0.00 :   a616:   bswap  %eax
    0.00 :   a618:   mov    %eax,0xe4(%rbx)
    0.00 :   a61e:   movzbl 0xd(%rbp),%edx
    0.00 :   a622:   mov    0x70(%r13),%eax
    0.00 :   a626:   mov    0x4(%rbp),%esi
    0.00 :   a629:   mov    %edx,%edi
    0.00 :   a62b:   shr    %dl
    0.00 :   a62d:   sub    %r14d,%eax
    0.00 :   a630:   and    $0x1,%edi
    0.00 :   a633:   and    $0x1,%edx
    0.00 :   a636:   bswap  %esi
    0.00 :   a638:   add    %edi,%eax
    0.00 :   a63a:   add    %edx,%eax
    0.00 :   a63c:   movzbl 0xc(%rbp),%edx
    0.00 :   a640:   shr    $0x4,%dl
    0.00 :   a643:   movzbl %dl,%edx
    0.00 :   a646:   shl    $0x2,%edx
    0.00 :   a649:   sub    %edx,%eax
    0.00 :   a64b:   add    %esi,%eax
    0.00 :   a64d:   mov    %eax,0xec(%rbx)
    0.00 :   a653:   movzwl 0xe(%rbp),%eax
    0.00 :   a657:   rol    $0x8,%ax
    0.00 :   a65b:   mov    %ax,0xf0(%rbx)
    0.00 :   a662:   test   %r9d,%r9d
    0.00 :   a665:   jne    aa94 <nf_conntrack_tcp_packet+0x16c4>
    0.00 :   a66b:   test   %cl,%cl
    0.00 :   a66d:   je     aa94 <nf_conntrack_tcp_packet+0x16c4>
    0.00 :   a673:   movzwl 0x0(%rip),%r12d        # a67b <nf_conntrack_tcp_packet+0x12ab>
    0.00 :   a67b:   xor    %eax,%eax
    0.00 :   a67d:   mov    %rbp,%rdx
    0.00 :   a680:   mov    %r14d,%esi
    0.00 :   a683:   lea    0x7c(%rsp),%rdi
    0.00 :   a688:   mov    $0x5,%ecx
    0.00 :   a68d:   rep stos %eax,%es:(%rdi)
    0.00 :   a68f:   mov    %r12w,0xf2(%rbx)
    0.00 :   a697:   lea    0x7c(%rsp),%rcx
    0.00 :   a69c:   mov    %r13,%rdi
    0.00 :   a69f:   call   90c0 <tcp_options>
    0.00 :   a6a4:   movzbl 0x8d(%rsp),%ecx
    0.00 :   a6ac:   test   $0x1,%cl
    0.00 :   a6af:   je     a6ce <nf_conntrack_tcp_packet+0x12fe>
    0.00 :   a6b1:   movzbl 0xf3(%rbx),%edx
    0.00 :   a6b8:   mov    %r12d,%eax
    0.00 :   a6bb:   mov    0x8c(%rsp),%al
    0.00 :   a6c2:   or     $0x1,%edx
    0.00 :   a6c5:   mov    %dl,%ah
    0.00 :   a6c7:   mov    %ax,0xf2(%rbx)
    0.00 :   a6ce:   and    $0x2,%cl
    0.00 :   a6d1:   je     a6da <nf_conntrack_tcp_packet+0x130a>
    0.00 :   a6d3:   orb    $0x2,0xf3(%rbx)
    0.00 :   a6da:   cmpl   $0x6,0x4(%rsp)
    0.00 :   a6df:   jne    a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   a6e1:   orb    $0x40,0xf3(%rbx)
    0.00 :   a6e8:   mov    0x28(%rsp),%rdi
    0.00 :   a6ed:   call   a6f2 <nf_conntrack_tcp_packet+0x1322>
    0.00 :   a6f2:   push   0x0(,%r15,8)
    0.00 :   a6fa:   mov    0x2c(%rsp),%r9d
    0.00 :   a6ff:   mov    %r13,%rdi
    0.00 :   a702:   mov    0x24(%rsp),%r8d
    0.00 :   a707:   mov    $0x0,%rcx
    0.00 :   a70e:   mov    %rbx,%rsi
    0.00 :   a711:   mov    0x18(%rsp),%rdx
    0.00 :   a716:   call   a71b <nf_conntrack_tcp_packet+0x134b>
    0.00 :   a71b:   pop    %r13
    0.00 :   a71d:   jmp    9a88 <nf_conntrack_tcp_packet+0x6b8>
    0.00 :   a722:   mov    %r15d,0xb8(%rcx)
    0.00 :   a729:   mov    %r15d,%esi
    0.00 :   a72c:   movzbl 0xd(%rbp),%ecx
    0.00 :   a730:   mov    0xbc(%r12),%edx
    0.00 :   a738:   jmp    9993 <nf_conntrack_tcp_packet+0x5c3>
    0.00 :   a73d:   movzbl 0xe1(%rbx),%eax
    0.00 :   a744:   cmp    %eax,0x24(%rsp)
    0.00 :   a748:   je     a84c <nf_conntrack_tcp_packet+0x147c>
    0.00 :   a74e:   mov    0x18(%rsp),%eax
    0.00 :   a752:   mov    %esi,0xe8(%rbx)
    0.00 :   a758:   movb   $0x0,0xe2(%rbx)
    0.00 :   a75f:   mov    %eax,0xe4(%rbx)
    0.00 :   a765:   mov    0x8(%rsp),%eax
    0.00 :   a769:   mov    %eax,0xec(%rbx)
    0.00 :   a76f:   movzwl 0x5e(%rsp),%eax
    0.00 :   a774:   mov    %ax,0xf0(%rbx)
    0.00 :   a77b:   jmp    9ec8 <nf_conntrack_tcp_packet+0xaf8>
   19.25 :   a780:   cmpl   $0xa080101,(%rax) // [nf_conntrack][a780]
    0.00 :   a786:   jne    9f76 <nf_conntrack_tcp_packet+0xba6>
    0.00 :   a78c:   jmp    95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a791:   mov    0x30(%rsp),%rax
    0.00 :   a796:   mov    0xb74(%rax),%r12d
    0.00 :   a79d:   jmp    9b48 <nf_conntrack_tcp_packet+0x778>
    0.00 :   a7a2:   mov    0x28(%rsp),%rdi
    0.00 :   a7a7:   call   a7ac <nf_conntrack_tcp_packet+0x13dc>
    0.00 :   a7ac:   push   0x0(,%r15,8)
    0.00 :   a7b4:   mov    0x2c(%rsp),%r9d
    0.00 :   a7b9:   mov    %rbx,%rsi
    0.00 :   a7bc:   mov    0x24(%rsp),%r8d
    0.00 :   a7c1:   mov    $0x0,%rcx
    0.00 :   a7c8:   mov    %r13,%rdi
    0.00 :   a7cb:   mov    0x18(%rsp),%rdx
    0.00 :   a7d0:   call   a7d5 <nf_conntrack_tcp_packet+0x1405>
    0.00 :   a7d5:   pop    %rbx
    0.00 :   a7d6:   or     $0xffffffff,%eax
    0.00 :   a7d9:   jmp    9a8d <nf_conntrack_tcp_packet+0x6bd>
    0.00 :   a7de:   movl   $0x4,0x1c(%rsp)
    0.00 :   a7e6:   movl   $0x8,0x20(%rsp)
    0.00 :   a7ee:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a7f3:   test   %r13,%r13
    0.00 :   a7f6:   je     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a7fc:   mov    %r15d,%ecx
    0.00 :   a7ff:   lea    0x90(%rsp),%rdx
    0.00 :   a807:   mov    %r13,%rdi
    0.00 :   a80a:   mov    %r9d,0x60(%rsp)
    0.00 :   a80f:   mov    %r8,0x48(%rsp)
    0.00 :   a814:   mov    %r10,0x40(%rsp)
    0.00 :   a819:   mov    %r11d,0x50(%rsp)
    0.00 :   a81e:   call   a823 <nf_conntrack_tcp_packet+0x1453>
    0.00 :   a823:   mov    0x50(%rsp),%r11d
    0.00 :   a828:   mov    0x40(%rsp),%r10
    0.00 :   a82d:   test   %eax,%eax
    0.00 :   a82f:   mov    0x48(%rsp),%r8
    0.00 :   a834:   mov    0x60(%rsp),%r9d
    0.00 :   a839:   js     95eb <nf_conntrack_tcp_packet+0x21b>
    0.00 :   a83f:   lea    0x90(%rsp),%rax
    0.00 :   a847:   jmp    9f63 <nf_conntrack_tcp_packet+0xb93>
    0.00 :   a84c:   mov    0x18(%rsp),%eax
    0.00 :   a850:   cmp    0xe4(%rbx),%eax
    0.00 :   a856:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a85c:   cmp    0xe8(%rbx),%esi
    0.00 :   a862:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a868:   mov    0x8(%rsp),%eax
    0.00 :   a86c:   cmp    0xec(%rbx),%eax
    0.00 :   a872:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a878:   movzwl 0x5e(%rsp),%eax
    0.00 :   a87d:   cmp    0xf0(%rbx),%ax
    0.00 :   a884:   jne    a74e <nf_conntrack_tcp_packet+0x137e>
    0.00 :   a88a:   addb   $0x1,0xe2(%rbx)
    0.00 :   a891:   jmp    9ec8 <nf_conntrack_tcp_packet+0xaf8>
    0.00 :   a896:   mov    $0x4,%esi
    0.00 :   a89b:   call   a8a0 <nf_conntrack_tcp_packet+0x14d0>
    0.00 :   a8a0:   jmp    9b91 <nf_conntrack_tcp_packet+0x7c1>
    0.00 :   a8a5:   movzbl 0xe3(%rbx),%edi
    0.00 :   a8ac:   test   %dil,%dil
    0.00 :   a8af:   je     a982 <nf_conntrack_tcp_packet+0x15b2>
    0.00 :   a8b5:   mov    0x4(%rbp),%edx
    0.00 :   a8b8:   mov    %edx,%r11d
    0.00 :   a8bb:   mov    %edx,0x58(%rsp)
    0.00 :   a8bf:   bswap  %r11d
    0.00 :   a8c2:   mov    %r11d,0x18(%rsp)
    0.00 :   a8c7:   test   %edx,%edx
    0.00 :   a8c9:   je     a9a1 <nf_conntrack_tcp_packet+0x15d1>
    0.00 :   a8cf:   mov    0xc4(%rax),%eax
    0.00 :   a8d5:   cmp    %eax,0x18(%rsp)
    0.00 :   a8d9:   jns    a8ed <nf_conntrack_tcp_packet+0x151d>
    0.00 :   a8db:   mov    0x30(%rsp),%rdx
    0.00 :   a8e0:   cmpb   $0x0,0xb8f(%rdx)
    0.00 :   a8e7:   je     aa1e <nf_conntrack_tcp_packet+0x164e>
    0.00 :   a8ed:   movl   $0x4,0x1c(%rsp)
    0.00 :   a8f5:   movl   $0x8,0x20(%rsp)
    0.00 :   a8fd:   cmp    $0x3,%cl
    0.00 :   a900:   jne    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a906:   mov    0x80(%rbx),%rcx
    0.00 :   a90d:   and    $0x4,%ecx
    0.00 :   a910:   je     a91c <nf_conntrack_tcp_packet+0x154c>
    0.00 :   a912:   cmp    %eax,0x18(%rsp)
    0.00 :   a916:   jne    a9c3 <nf_conntrack_tcp_packet+0x15f3>
    0.00 :   a91c:   movl   $0x4,0x1c(%rsp)
    0.00 :   a924:   movl   $0x8,0x20(%rsp)
    0.00 :   a92c:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a931:   mov    $0x7,%esi
    0.00 :   a936:   mov    %r10,0x8(%rsp)
    0.00 :   a93b:   call   a940 <nf_conntrack_tcp_packet+0x1570>
    0.00 :   a940:   mov    0x8(%rsp),%r10
    0.00 :   a945:   jmp    a358 <nf_conntrack_tcp_packet+0xf88>
    0.00 :   a94a:   cmpb   $0x0,0xe3(%rbx)
    0.00 :   a951:   movl   $0x8,0x20(%rsp)
    0.00 :   a959:   jne    a585 <nf_conntrack_tcp_packet+0x11b5>
    0.00 :   a95f:   mov    0x8(%rbp),%eax
    0.00 :   a962:   bswap  %eax
    0.00 :   a964:   cmp    0xec(%rbx),%eax
    0.00 :   a96a:   jne    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a970:   movl   $0x4,0x1c(%rsp)
    0.00 :   a978:   movzbl 0x20(%rsp),%eax
    0.00 :   a97d:   jmp    9adc <nf_conntrack_tcp_packet+0x70c>
    0.00 :   a982:   mov    0x80(%rbx),%rax
    0.00 :   a989:   movl   $0x8,0x20(%rsp)
    0.00 :   a991:   test   $0x2,%al
    0.00 :   a993:   jne    a95f <nf_conntrack_tcp_packet+0x158f>
    0.00 :   a995:   mov    0x80(%rbx),%rax
    0.00 :   a99c:   jmp    a59d <nf_conntrack_tcp_packet+0x11cd>
    0.00 :   a9a1:   cmp    $0x3,%cl
    0.00 :   a9a4:   je     a9ec <nf_conntrack_tcp_packet+0x161c>
    0.00 :   a9a6:   movl   $0x0,0x18(%rsp)
    0.00 :   a9ae:   movl   $0x4,0x1c(%rsp)
    0.00 :   a9b6:   movl   $0x8,0x20(%rsp)
    0.00 :   a9be:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   a9c3:   cmp    $0x3,%dil
    0.00 :   a9c7:   je     aa44 <nf_conntrack_tcp_packet+0x1674>
    0.00 :   a9c9:   mov    0x80(%rbx),%rax
    0.00 :   a9d0:   mov    0x4(%rsp),%eax
    0.00 :   a9d4:   mov    %eax,0x20(%rsp)
    0.00 :   a9d8:   jmp    a585 <nf_conntrack_tcp_packet+0x11b5>
    0.00 :   a9dd:   mov    $0x4,%esi
    0.00 :   a9e2:   call   a9e7 <nf_conntrack_tcp_packet+0x1617>
    0.00 :   a9e7:   jmp    9cc0 <nf_conntrack_tcp_packet+0x8f0>
    0.00 :   a9ec:   mov    0x80(%rbx),%rax
    0.00 :   a9f3:   test   $0x4,%al
    0.00 :   a9f5:   je     aa6f <nf_conntrack_tcp_packet+0x169f>
    0.00 :   a9f7:   imul   $0x14,%r8,%rax
    0.00 :   a9fb:   mov    0xc4(%rbx,%rax,1),%eax
    0.00 :   aa02:   mov    %eax,%ecx
    0.00 :   aa04:   neg    %ecx
    0.00 :   aa06:   jns    a906 <nf_conntrack_tcp_packet+0x1536>
    0.00 :   aa0c:   mov    0x30(%rsp),%rcx
    0.00 :   aa11:   cmpb   $0x0,0xb8f(%rcx)
    0.00 :   aa18:   jne    a906 <nf_conntrack_tcp_packet+0x1536>
    0.00 :   aa1e:   mov    0x28(%rsp),%rdi
    0.00 :   aa23:   call   aa28 <nf_conntrack_tcp_packet+0x1658>
    0.00 :   aa28:   mov    0x10(%rsp),%rdx
    0.00 :   aa2d:   mov    %rbx,%rsi
    0.00 :   aa30:   mov    %r13,%rdi
    0.00 :   aa33:   mov    $0x0,%rcx
    0.00 :   aa3a:   call   aa3f <nf_conntrack_tcp_packet+0x166f>
    0.00 :   aa3f:   jmp    a7d6 <nf_conntrack_tcp_packet+0x1406>
    0.00 :   aa44:   movzbl 0x5d(%rsp),%eax
    0.00 :   aa49:   cmp    %al,0xe1(%rbx)
    0.00 :   aa4f:   jne    a9c9 <nf_conntrack_tcp_packet+0x15f9>
    0.00 :   aa55:   mov    0x18(%rsp),%eax
    0.00 :   aa59:   cmp    %eax,0xec(%rbx)
    0.00 :   aa5f:   jne    a9c9 <nf_conntrack_tcp_packet+0x15f9>
    0.00 :   aa65:   jmp    a91c <nf_conntrack_tcp_packet+0x154c>
    0.00 :   aa6a:   call   aa6f <nf_conntrack_tcp_packet+0x169f>
    0.00 :   aa6f:   xor    %r11d,%r11d
    0.00 :   aa72:   movl   $0x4,0x1c(%rsp)
    0.00 :   aa7a:   mov    %r11d,0x18(%rsp)
    0.00 :   aa7f:   movl   $0x3,0x4(%rsp)
    0.00 :   aa87:   movl   $0x8,0x20(%rsp)
    0.00 :   aa8f:   jmp    9575 <nf_conntrack_tcp_packet+0x1a5>
    0.00 :   aa94:   cmpl   $0x1,0x4(%rsp)
    0.00 :   aa99:   sete   %al
    0.00 :   aa9c:   test   %al,0x5d(%rsp)
    0.00 :   aaa0:   je     a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   aaa6:   cmpl   $0x3,0x1c(%rsp)
    0.00 :   aaab:   jne    a6e8 <nf_conntrack_tcp_packet+0x1318>
    0.00 :   aab1:   mov    0x8(%rbp),%eax
    0.00 :   aab4:   bswap  %eax
    0.00 :   aab6:   mov    %eax,0xe8(%rbx)
    0.00 :   aabc:   jmp    a6e8 <nf_conntrack_tcp_packet+0x1318>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   61.77 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:370
   29.71 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:413
    8.51 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:400
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (4 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009210 <do_lookup_x>:
         : 6    do_lookup_x():
    0.00 :   9210:   push   %r15
    0.00 :   9212:   push   %r14
    0.00 :   9214:   push   %r13
    0.00 :   9216:   push   %r12
    0.00 :   9218:   mov    %esi,%r12d
    0.00 :   921b:   push   %rbp
    0.00 :   921c:   push   %rbx
    0.00 :   921d:   sub    $0x88,%rsp
    0.00 :   9224:   mov    0x8(%r9),%esi
    0.00 :   9228:   mov    %r8,0x18(%rsp)
    0.00 :   922d:   mov    0xc0(%rsp),%rbp
    0.00 :   9235:   mov    %rdi,0x8(%rsp)
    0.00 :   923a:   mov    0xd8(%rsp),%r8
    0.00 :   9242:   mov    %rsi,%r10
    0.00 :   9245:   mov    %rdx,0x20(%rsp)
    0.00 :   924a:   mov    %rcx,0x10(%rsp)
    0.00 :   924f:   mov    (%r9),%r13
    0.00 :   9252:   mov    %r12d,%r11d
    0.00 :   9255:   mov    0xe0(%rsp),%r9d
    0.00 :   925d:   mov    %r8,%r14
    0.00 :   9260:   shr    $0x6,%r11d
    0.00 :   9264:   mov    %r11d,%r8d
    0.00 :   9267:   and    $0x2,%r9d
    0.00 :   926b:   mov    %r12d,%r11d
    0.00 :   926e:   jmp    9306 <do_lookup_x+0xf6>
    0.00 :   9273:   nopl   0x0(%rax,%rax,1)
    0.00 :   9278:   mov    0x30c(%rbx),%edi
    0.00 :   927e:   test   %edi,%edi
    0.00 :   9280:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9282:   mov    0x70(%rbx),%rax
    0.00 :   9286:   movl   $0x0,0x74(%rsp)
    0.00 :   928e:   movq   $0x0,0x78(%rsp)
    0.00 :   9297:   mov    0x8(%rax),%rsi
    0.00 :   929b:   xor    %eax,%eax
    0.00 :   929d:   testb  $0x20,0x336(%rbx)
    0.00 :   92a4:   je     92ac <do_lookup_x+0x9c>
    0.00 :   92a6:   mov    (%rbx),%rax
    0.00 :   92a9:   add    %rax,%rsi
    0.00 :   92ac:   mov    0x68(%rbx),%rdx
    0.00 :   92b0:   add    0x8(%rdx),%rax
    0.00 :   92b4:   mov    0x318(%rbx),%rdx
    0.00 :   92bb:   mov    %rax,%r15
    0.00 :   92be:   test   %rdx,%rdx
    0.00 :   92c1:   je     93a8 <do_lookup_x+0x198>
    0.00 :   92c7:   mov    0x314(%rbx),%ecx
    0.00 :   92cd:   mov    %r8d,%eax
    0.00 :   92d0:   and    0x310(%rbx),%eax
    0.00 :   92d6:   mov    (%rdx,%rax,8),%rax
    0.00 :   92da:   mov    %r11d,%edx
    8.51 :   92dd:   shr    %cl,%edx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:400
    0.00 :   92df:   mov    %edx,%ecx
    0.00 :   92e1:   mov    %rax,%rdx
    0.00 :   92e4:   shr    %cl,%rdx
    0.00 :   92e7:   mov    %r11d,%ecx
    0.00 :   92ea:   shr    %cl,%rax
    0.00 :   92ed:   and    %rax,%rdx
    0.00 :   92f0:   and    $0x1,%edx
    0.00 :   92f3:   jne    9508 <do_lookup_x+0x2f8>
    0.00 :   92f9:   add    $0x1,%rbp
    0.00 :   92fd:   cmp    %r10,%rbp
    0.00 :   9300:   jae    95e0 <do_lookup_x+0x3d0>
    0.00 :   9306:   mov    0x0(%r13,%rbp,8),%rax
    0.00 :   930b:   mov    0x28(%rax),%rbx
    0.00 :   930f:   cmp    %r14,%rbx
    0.00 :   9312:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9314:   test   %r9d,%r9d
    0.00 :   9317:   je     9322 <do_lookup_x+0x112>
    0.00 :   9319:   testb  $0x3,0x334(%rbx)
    0.00 :   9320:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9322:   testb  $0x4,0x336(%rbx)
   61.77 :   9329:   jne    92f9 <do_lookup_x+0xe9> // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:370
    0.00 :   932b:   testb  $0x8,0x2b72e(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9332:   je     9278 <do_lookup_x+0x68>
    0.00 :   9338:   mov    0x8(%rbx),%rdx
    0.00 :   933c:   mov    0x30(%rbx),%rcx
    0.00 :   9340:   cmpb   $0x0,(%rdx)
    0.00 :   9343:   je     9388 <do_lookup_x+0x178>
    0.00 :   9345:   mov    0x8(%rsp),%rsi
    0.00 :   934a:   lea    0x229ff(%rip),%rdi        # 2bd50 <__PRETTY_FUNCTION__.9+0x60>
    0.00 :   9351:   xor    %eax,%eax
    0.00 :   9353:   mov    %r9d,0x40(%rsp)
    0.00 :   9358:   mov    %r10,0x38(%rsp)
    0.00 :   935d:   mov    %r11d,0x30(%rsp)
    0.00 :   9362:   mov    %r8d,0x28(%rsp)
    0.00 :   9367:   call   d1d0 <_dl_debug_printf>
    0.00 :   936c:   mov    0x40(%rsp),%r9d
    0.00 :   9371:   mov    0x38(%rsp),%r10
    0.00 :   9376:   mov    0x30(%rsp),%r11d
    0.00 :   937b:   mov    0x28(%rsp),%r8d
    0.00 :   9380:   jmp    9278 <do_lookup_x+0x68>
    0.00 :   9385:   nopl   (%rax)
    0.00 :   9388:   mov    0x2b6a9(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   938f:   mov    (%rax),%rdx
    0.00 :   9392:   lea    0x20593(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   9399:   test   %rdx,%rdx
    0.00 :   939c:   cmove  %rax,%rdx
    0.00 :   93a0:   jmp    9345 <do_lookup_x+0x135>
    0.00 :   93a2:   nopw   0x0(%rax,%rax,1)
    0.00 :   93a8:   mov    0x20(%rsp),%rax
    0.00 :   93ad:   mov    $0xffffffff,%edx
    0.00 :   93b2:   mov    (%rax),%rax
    0.00 :   93b5:   cmp    %rdx,%rax
    0.00 :   93b8:   je     99fc <do_lookup_x+0x7ec>
    0.00 :   93be:   xor    %edx,%edx
    0.00 :   93c0:   div    %rdi
    0.00 :   93c3:   shl    $0x2,%rdx
    0.00 :   93c7:   mov    0x328(%rbx),%rax
    0.00 :   93ce:   mov    (%rax,%rdx,1),%eax
    0.00 :   93d1:   test   %eax,%eax
    0.00 :   93d3:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   93d9:   lea    0x78(%rsp),%rdi
    0.00 :   93de:   mov    %r13,0x30(%rsp)
    0.00 :   93e3:   lea    0x74(%rsp),%r12
    0.00 :   93e8:   mov    %rbp,0xc0(%rsp)
    0.00 :   93f0:   mov    %rdi,%r13
    0.00 :   93f3:   mov    %rsi,%rbp
    0.00 :   93f6:   mov    %r8d,0x28(%rsp)
    0.00 :   93fb:   mov    %r11d,0x38(%rsp)
    0.00 :   9400:   mov    %r14,0xd8(%rsp)
    0.00 :   9408:   mov    %r10,0x40(%rsp)
    0.00 :   940d:   mov    %r9d,0x48(%rsp)
    0.00 :   9412:   jmp    942b <do_lookup_x+0x21b>
    0.00 :   9414:   nopl   0x0(%rax)
    0.00 :   9418:   mov    0x320(%rbx),%rax
    0.00 :   941f:   mov    (%rax,%r14,4),%eax
    0.00 :   9423:   test   %eax,%eax
    0.00 :   9425:   je     9818 <do_lookup_x+0x608>
    0.00 :   942b:   sub    $0x8,%rsp
    0.00 :   942f:   mov    %eax,%r14d
    0.00 :   9432:   push   %r12
    0.00 :   9434:   lea    (%r14,%r14,2),%rdx
    0.00 :   9438:   push   %r13
    0.00 :   943a:   lea    0x0(%rbp,%rdx,8),%r9
    0.00 :   943f:   push   %rbx
    0.00 :   9440:   push   %r15
    0.00 :   9442:   push   %rax
    0.00 :   9443:   mov    0x110(%rsp),%r8d
    0.00 :   944b:   mov    0x100(%rsp),%ecx
    0.00 :   9452:   mov    0xf8(%rsp),%rdx
    0.00 :   945a:   mov    0x40(%rsp),%rsi
    0.00 :   945f:   mov    0x38(%rsp),%rdi
    0.00 :   9464:   call   9070 <check_match>
    0.00 :   9469:   add    $0x30,%rsp
    0.00 :   946d:   test   %rax,%rax
    0.00 :   9470:   je     9418 <do_lookup_x+0x208>
    0.00 :   9472:   mov    0x28(%rsp),%r8d
    0.00 :   9477:   mov    0x30(%rsp),%r13
    0.00 :   947c:   mov    %rax,%rcx
    0.00 :   947f:   mov    0x38(%rsp),%r11d
    0.00 :   9484:   mov    0xc0(%rsp),%rbp
    0.00 :   948c:   mov    0xd8(%rsp),%r14
    0.00 :   9494:   mov    0x40(%rsp),%r10
    0.00 :   9499:   mov    0x48(%rsp),%r9d
    0.00 :   949e:   xchg   %ax,%ax
    0.00 :   94a0:   movzbl 0x5(%rcx),%eax
    0.00 :   94a4:   mov    %eax,%edx
    0.00 :   94a6:   and    $0x3,%eax
    0.00 :   94a9:   sub    $0x1,%eax
    0.00 :   94ac:   and    $0x3,%edx
    0.00 :   94af:   cmp    $0x1,%eax
    0.00 :   94b2:   jbe    92f9 <do_lookup_x+0xe9>
    0.00 :   94b8:   cmpq   $0x0,0xe8(%rsp)
    0.00 :   94c1:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   94c3:   cmp    $0x3,%dl
    0.00 :   94c6:   je     95f8 <do_lookup_x+0x3e8>
    0.00 :   94cc:   movzbl 0x4(%rcx),%eax
    0.00 :   94d0:   shr    $0x4,%al
    0.00 :   94d3:   cmp    $0x2,%al
    0.00 :   94d5:   je     97e0 <do_lookup_x+0x5d0>
    0.00 :   94db:   cmp    $0xa,%al
    0.00 :   94dd:   je     9690 <do_lookup_x+0x480>
    0.00 :   94e3:   cmp    $0x1,%al
    0.00 :   94e5:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   94eb:   mov    0x18(%rsp),%rax
    0.00 :   94f0:   mov    %rcx,(%rax)
    0.00 :   94f3:   mov    %rbx,0x8(%rax)
    0.00 :   94f7:   mov    $0x1,%eax
    0.00 :   94fc:   jmp    95e2 <do_lookup_x+0x3d2>
    0.00 :   9501:   nopl   0x0(%rax)
    0.00 :   9508:   mov    %r11d,%eax
    0.00 :   950b:   xor    %edx,%edx
    0.00 :   950d:   div    %edi
    0.00 :   950f:   mov    0x320(%rbx),%rax
    0.00 :   9516:   mov    (%rax,%rdx,4),%eax
    0.00 :   9519:   test   %eax,%eax
    0.00 :   951b:   je     92f9 <do_lookup_x+0xe9>
    0.00 :   9521:   mov    0x328(%rbx),%rdx
    0.00 :   9528:   mov    %r13,0x30(%rsp)
    0.00 :   952d:   mov    %rsi,%r13
    0.00 :   9530:   mov    %rbp,0xc0(%rsp)
    0.00 :   9538:   mov    %r11d,%ebp
    0.00 :   953b:   lea    (%rdx,%rax,4),%r12
    0.00 :   953f:   lea    0x74(%rsp),%rax
    0.00 :   9544:   mov    %r8d,0x28(%rsp)
    0.00 :   9549:   mov    %r14,0xd8(%rsp)
    0.00 :   9551:   mov    %rax,%r14
    0.00 :   9554:   mov    %r10,0x38(%rsp)
    0.00 :   9559:   mov    %r9d,0x40(%rsp)
    0.00 :   955e:   jmp    956c <do_lookup_x+0x35c>
    0.00 :   9560:   add    $0x4,%r12
    0.00 :   9564:   test   $0x1,%al
    0.00 :   9566:   jne    9b63 <do_lookup_x+0x953>
    0.00 :   956c:   mov    (%r12),%eax
    0.00 :   9570:   mov    %eax,%edx
   29.71 :   9572:   xor    %ebp,%edx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:413
    0.00 :   9574:   shr    %edx
    0.00 :   9576:   jne    9560 <do_lookup_x+0x350>
    0.00 :   9578:   sub    $0x8,%rsp
    0.00 :   957c:   mov    %r12,%rax
    0.00 :   957f:   sub    0x328(%rbx),%rax
    0.00 :   9586:   push   %r14
    0.00 :   9588:   sar    $0x2,%rax
    0.00 :   958c:   mov    %eax,%edx
    0.00 :   958e:   lea    (%rdx,%rdx,2),%rdx
    0.00 :   9592:   lea    0x88(%rsp),%rcx
    0.00 :   959a:   lea    0x0(%r13,%rdx,8),%r9
    0.00 :   959f:   push   %rcx
    0.00 :   95a0:   push   %rbx
    0.00 :   95a1:   push   %r15
    0.00 :   95a3:   push   %rax
    0.00 :   95a4:   mov    0x110(%rsp),%r8d
    0.00 :   95ac:   mov    0x100(%rsp),%ecx
    0.00 :   95b3:   mov    0xf8(%rsp),%rdx
    0.00 :   95bb:   mov    0x40(%rsp),%rsi
    0.00 :   95c0:   mov    0x38(%rsp),%rdi
    0.00 :   95c5:   call   9070 <check_match>
    0.00 :   95ca:   add    $0x30,%rsp
    0.00 :   95ce:   test   %rax,%rax
    0.00 :   95d1:   jne    9d69 <do_lookup_x+0xb59>
    0.00 :   95d7:   mov    (%r12),%eax
    0.00 :   95db:   jmp    9560 <do_lookup_x+0x350>
    0.00 :   95dd:   nopl   (%rax)
    0.00 :   95e0:   xor    %eax,%eax
    0.00 :   95e2:   add    $0x88,%rsp
    0.00 :   95e9:   pop    %rbx
    0.00 :   95ea:   pop    %rbp
    0.00 :   95eb:   pop    %r12
    0.00 :   95ed:   pop    %r13
    0.00 :   95ef:   pop    %r14
    0.00 :   95f1:   pop    %r15
    0.00 :   95f3:   ret
    0.00 :   95f4:   nopl   0x0(%rax)
    0.00 :   95f8:   mov    0xe8(%rsp),%rax
    0.00 :   9600:   testb  $0x3,0x334(%rax)
    0.00 :   9607:   jne    94cc <do_lookup_x+0x2bc>
    0.00 :   960d:   test   %r9d,%r9d
    0.00 :   9610:   jne    9b8f <do_lookup_x+0x97f>
    0.00 :   9616:   testb  $0x1,0xe0(%rsp)
    0.00 :   961e:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9624:   mov    0x10(%rsp),%rax
    0.00 :   9629:   cmpq   $0x0,0x8(%rax)
    0.00 :   962e:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9634:   cmpw   $0x0,0x6(%rax)
    0.00 :   9639:   jne    94cc <do_lookup_x+0x2bc>
    0.00 :   963f:   mov    0x8(%rbx),%rdx
    0.00 :   9643:   mov    0x8(%rsp),%rsi
    0.00 :   9648:   xor    %eax,%eax
    0.00 :   964a:   mov    %rcx,0x48(%rsp)
    0.00 :   964f:   lea    0x22772(%rip),%rdi        # 2bdc8 <__PRETTY_FUNCTION__.9+0xd8>
    0.00 :   9656:   mov    %r9d,0x40(%rsp)
    0.00 :   965b:   mov    %r10,0x38(%rsp)
    0.00 :   9660:   mov    %r11d,0x30(%rsp)
    0.00 :   9665:   mov    %r8d,0x28(%rsp)
    0.00 :   966a:   call   d480 <_dl_error_printf>
    0.00 :   966f:   mov    0x48(%rsp),%rcx
    0.00 :   9674:   mov    0x40(%rsp),%r9d
    0.00 :   9679:   mov    0x38(%rsp),%r10
    0.00 :   967e:   mov    0x30(%rsp),%r11d
    0.00 :   9683:   mov    0x28(%rsp),%r8d
    0.00 :   9688:   jmp    9bd8 <do_lookup_x+0x9c8>
    0.00 :   968d:   nopl   (%rax)
    0.00 :   9690:   mov    0x30(%rbx),%rax
    0.00 :   9694:   mov    %r15,0x48(%rsp)
    0.00 :   9699:   lea    0x2b960(%rip),%r15        # 35000 <_rtld_global>
    0.00 :   96a0:   mov    %r11d,%r12d
    0.00 :   96a3:   mov    %rcx,0x40(%rsp)
    0.00 :   96a8:   lea    0x0(,%rax,4),%rsi
    0.00 :   96b0:   mov    %rax,0x20(%rsp)
    0.00 :   96b5:   lea    (%rsi,%rax,1),%rbp
    0.00 :   96b9:   mov    %r9d,0x30(%rsp)
    0.00 :   96be:   shl    $0x5,%rbp
    0.00 :   96c2:   mov    %rsi,0x28(%rsp)
    0.00 :   96c7:   lea    0x28(%r15,%rbp,1),%rax
    0.00 :   96cc:   add    %r15,%rbp
    0.00 :   96cf:   mov    %rax,0x38(%rsp)
    0.00 :   96d4:   mov    %rax,%rdi
    0.00 :   96d7:   call   *0x2b31b(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   96dd:   mov    0x50(%rbp),%r11
    0.00 :   96e1:   mov    0x58(%rbp),%r14
    0.00 :   96e5:   mov    0x30(%rsp),%r9d
    0.00 :   96ea:   mov    0x40(%rsp),%rcx
    0.00 :   96ef:   test   %r11,%r11
    0.00 :   96f2:   je     9aba <do_lookup_x+0x8aa>
    0.00 :   96f8:   mov    %r12d,%eax
    0.00 :   96fb:   xor    %edx,%edx
    0.00 :   96fd:   lea    -0x2(%r14),%rdi
    0.00 :   9701:   mov    %r11,0x30(%rsp)
    0.00 :   9706:   mov    %rax,%r8
    0.00 :   9709:   mov    %rax,0x68(%rsp)
    0.00 :   970e:   div    %r14
    0.00 :   9711:   mov    %r9d,0x5c(%rsp)
    0.00 :   9716:   mov    %rbx,0x50(%rsp)
    0.00 :   971b:   mov    %r8,%rax
    0.00 :   971e:   mov    %r14,%rbx
    0.00 :   9721:   mov    %rdx,%rsi
    0.00 :   9724:   xor    %edx,%edx
    0.00 :   9726:   div    %rdi
    0.00 :   9729:   mov    %rsi,0x60(%rsp)
    0.00 :   972e:   mov    %r12d,%eax
    0.00 :   9731:   mov    %eax,%r13d
    0.00 :   9734:   lea    0x1(%rdx),%r15
    0.00 :   9738:   mov    %r15,%rdx
    0.00 :   973b:   mov    %r15,%r12
    0.00 :   973e:   mov    %rsi,%r15
    0.00 :   9741:   shl    $0x5,%rdx
    0.00 :   9745:   mov    %rdx,%r14
    0.00 :   9748:   mov    0x30(%rsp),%rax
    0.00 :   974d:   mov    %r15,%rbp
    0.00 :   9750:   shl    $0x5,%rbp
    0.00 :   9754:   add    %rax,%rbp
    0.00 :   9757:   mov    %r14,%rax
    0.00 :   975a:   mov    %r12,%r14
    0.00 :   975d:   mov    %rbx,%r12
    0.00 :   9760:   mov    %rax,%rbx
    0.00 :   9763:   jmp    9780 <do_lookup_x+0x570>
    0.00 :   9765:   nopl   (%rax)
    0.00 :   9768:   test   %rdi,%rdi
    0.00 :   976b:   je     9860 <do_lookup_x+0x650>
    0.00 :   9771:   add    %r14,%r15
    0.00 :   9774:   add    %rbx,%rbp
    0.00 :   9777:   cmp    %r12,%r15
    0.00 :   977a:   jae    99e0 <do_lookup_x+0x7d0>
    0.00 :   9780:   mov    0x8(%rbp),%rdi
    0.00 :   9784:   cmp    0x0(%rbp),%r13d
    0.00 :   9788:   jne    9768 <do_lookup_x+0x558>
    0.00 :   978a:   mov    0x8(%rsp),%rsi
    0.00 :   978f:   call   23430 <strcmp>
    0.00 :   9794:   test   %eax,%eax
    0.00 :   9796:   jne    9771 <do_lookup_x+0x561>
    0.00 :   9798:   mov    0x5c(%rsp),%r9d
    0.00 :   979d:   mov    0x40(%rsp),%rcx
    0.00 :   97a2:   mov    0x50(%rsp),%rbx
    0.00 :   97a7:   test   %r9d,%r9d
    0.00 :   97aa:   je     9d98 <do_lookup_x+0xb88>
    0.00 :   97b0:   movq   %rcx,%xmm0
    0.00 :   97b5:   movq   %rbx,%xmm2
    0.00 :   97ba:   punpcklqdq %xmm2,%xmm0
    0.00 :   97be:   mov    0x18(%rsp),%rax
    0.00 :   97c3:   mov    0x38(%rsp),%rdi
    0.00 :   97c8:   movups %xmm0,(%rax)
    0.00 :   97cb:   call   *0x2b21f(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   97d1:   jmp    94f7 <do_lookup_x+0x2e7>
    0.00 :   97d6:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   97e0:   mov    0x2b2ce(%rip),%eax        # 34ab4 <_rtld_global_ro+0x54>
    0.00 :   97e6:   test   %eax,%eax
    0.00 :   97e8:   je     94eb <do_lookup_x+0x2db>
    0.00 :   97ee:   mov    0x18(%rsp),%rax
    0.00 :   97f3:   cmpq   $0x0,(%rax)
    0.00 :   97f7:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   97fd:   movq   %rcx,%xmm0
    0.00 :   9802:   movq   %rbx,%xmm1
    0.00 :   9807:   punpcklqdq %xmm1,%xmm0
    0.00 :   980b:   movups %xmm0,(%rax)
    0.00 :   980e:   jmp    92f9 <do_lookup_x+0xe9>
    0.00 :   9813:   nopl   0x0(%rax,%rax,1)
    0.00 :   9818:   mov    0x28(%rsp),%r8d
    0.00 :   981d:   mov    0x30(%rsp),%r13
    0.00 :   9822:   mov    0x38(%rsp),%r11d
    0.00 :   9827:   mov    0xc0(%rsp),%rbp
    0.00 :   982f:   mov    0xd8(%rsp),%r14
    0.00 :   9837:   mov    0x40(%rsp),%r10
    0.00 :   983c:   mov    0x48(%rsp),%r9d
    0.00 :   9841:   cmpl   $0x1,0x74(%rsp)
    0.00 :   9846:   jne    92f9 <do_lookup_x+0xe9>
    0.00 :   984c:   mov    0x78(%rsp),%rcx
    0.00 :   9851:   test   %rcx,%rcx
    0.00 :   9854:   jne    94a0 <do_lookup_x+0x290>
    0.00 :   985a:   jmp    92f9 <do_lookup_x+0xe9>
    0.00 :   985f:   nop
    0.00 :   9860:   mov    0x28(%rsp),%rdi
    0.00 :   9865:   mov    0x20(%rsp),%rdx
    0.00 :   986a:   mov    %r14,%r15
    0.00 :   986d:   mov    %r12,%r14
    0.00 :   9870:   lea    (%r14,%r14,2),%rax
    0.00 :   9874:   mov    0x40(%rsp),%rcx
    0.00 :   9879:   mov    0x50(%rsp),%rbx
    0.00 :   987e:   mov    %r13d,%r12d
    0.00 :   9881:   add    %rdi,%rdx
    0.00 :   9884:   mov    0x30(%rsp),%r11
    0.00 :   9889:   mov    0x60(%rsp),%rsi
    0.00 :   988e:   lea    0x2b76b(%rip),%rdi        # 35000 <_rtld_global>
    0.00 :   9895:   shl    $0x5,%rdx
    0.00 :   9899:   mov    0x5c(%rsp),%r9d
    0.00 :   989e:   mov    0x60(%rdi,%rdx,1),%rdx
    0.00 :   98a3:   shl    $0x2,%rdx
    0.00 :   98a7:   cmp    %rax,%rdx
    0.00 :   98aa:   jae    9c00 <do_lookup_x+0x9f0>
    0.00 :   98b0:   mov    (%rcx),%edx
    0.00 :   98b2:   mov    0x48(%rsp),%rax
    0.00 :   98b7:   mov    %r15,%rdi
    0.00 :   98ba:   shl    $0x5,%rdi
    0.00 :   98be:   add    %rdx,%rax
    0.00 :   98c1:   mov    %rax,%rdx
    0.00 :   98c4:   test   %r9d,%r9d
    0.00 :   98c7:   je     9959 <do_lookup_x+0x749>
    0.00 :   98cd:   mov    %rsi,%rax
    0.00 :   98d0:   shl    $0x5,%rax
    0.00 :   98d4:   add    %r11,%rax
    0.00 :   98d7:   jmp    98ef <do_lookup_x+0x6df>
    0.00 :   98d9:   nopl   0x0(%rax)
    0.00 :   98e0:   add    %r15,%rsi
    0.00 :   98e3:   add    %rdi,%rax
    0.00 :   98e6:   cmp    %r14,%rsi
    0.00 :   98e9:   jae    99f4 <do_lookup_x+0x7e4>
    0.00 :   98ef:   cmpq   $0x0,0x8(%rax)
    0.00 :   98f4:   jne    98e0 <do_lookup_x+0x6d0>
    0.00 :   98f6:   mov    0x10(%rsp),%rsi
    0.00 :   98fb:   mov    %r12d,(%rax)
    0.00 :   98fe:   mov    %rdx,0x8(%rax)
    0.00 :   9902:   mov    %rsi,0x10(%rax)
    0.00 :   9906:   mov    0xe8(%rsp),%rsi
    0.00 :   990e:   mov    %rsi,0x18(%rax)
    0.00 :   9912:   mov    0x20(%rsp),%rsi
    0.00 :   9917:   mov    0x28(%rsp),%rax
    0.00 :   991c:   mov    %rcx,0x8(%rsp)
    0.00 :   9921:   mov    0x38(%rsp),%rdi
    0.00 :   9926:   add    %rsi,%rax
    0.00 :   9929:   lea    0x2b6d0(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   9930:   shl    $0x5,%rax
    0.00 :   9934:   addq   $0x1,0x60(%rsi,%rax,1)
    0.00 :   993a:   call   *0x2b0b0(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   9940:   mov    0x18(%rsp),%rax
    0.00 :   9945:   mov    0x8(%rsp),%rcx
    0.00 :   994a:   mov    %rbx,0x8(%rax)
    0.00 :   994e:   mov    %rcx,(%rax)
    0.00 :   9951:   jmp    94f7 <do_lookup_x+0x2e7>
    0.00 :   9956:   sub    %r14,%rsi
    0.00 :   9959:   mov    %rsi,%rax
    0.00 :   995c:   shl    $0x5,%rax
    0.00 :   9960:   add    %r11,%rax
    0.00 :   9963:   jmp    9973 <do_lookup_x+0x763>
    0.00 :   9965:   nopl   (%rax)
    0.00 :   9968:   add    %r15,%rsi
    0.00 :   996b:   add    %rdi,%rax
    0.00 :   996e:   cmp    %r14,%rsi
    0.00 :   9971:   jae    9956 <do_lookup_x+0x746>
    0.00 :   9973:   cmpq   $0x0,0x8(%rax)
    0.00 :   9978:   jne    9968 <do_lookup_x+0x758>
    0.00 :   997a:   mov    %r12d,(%rax)
    0.00 :   997d:   mov    %rdx,0x8(%rax)
    0.00 :   9981:   mov    %rcx,0x10(%rax)
    0.00 :   9985:   mov    %rbx,0x18(%rax)
    0.00 :   9989:   movzbl 0x334(%rbx),%eax
    0.00 :   9990:   and    $0x3,%eax
    0.00 :   9993:   cmp    $0x2,%al
    0.00 :   9995:   jne    9912 <do_lookup_x+0x702>
    0.00 :   999b:   cmpb   $0x0,0x337(%rbx)
    0.00 :   99a2:   jne    9912 <do_lookup_x+0x702>
    0.00 :   99a8:   testb  $0x8,0xd0(%rsp)
    0.00 :   99b0:   je     9da2 <do_lookup_x+0xb92>
    0.00 :   99b6:   cmpb   $0x0,0x338(%rbx)
    0.00 :   99bd:   jne    9912 <do_lookup_x+0x702>
    0.00 :   99c3:   testb  $0x4,0x2b096(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   99ca:   jne    9dd9 <do_lookup_x+0xbc9>
    0.00 :   99d0:   movb   $0x1,0x338(%rbx)
    0.00 :   99d7:   jmp    9912 <do_lookup_x+0x702>
    0.00 :   99dc:   nopl   0x0(%rax)
    0.00 :   99e0:   mov    %rbx,%rax
    0.00 :   99e3:   mov    %r12,%rbx
    0.00 :   99e6:   mov    %r14,%r12
    0.00 :   99e9:   sub    %rbx,%r15
    0.00 :   99ec:   mov    %rax,%r14
    0.00 :   99ef:   jmp    9748 <do_lookup_x+0x538>
    0.00 :   99f4:   sub    %r14,%rsi
    0.00 :   99f7:   jmp    98cd <do_lookup_x+0x6bd>
    0.00 :   99fc:   mov    0x8(%rsp),%rax
    0.00 :   9a01:   xor    %edx,%edx
    0.00 :   9a03:   movzbl (%rax),%ecx
    0.00 :   9a06:   test   %rcx,%rcx
    0.00 :   9a09:   je     9aad <do_lookup_x+0x89d>
    0.00 :   9a0f:   movzbl 0x1(%rax),%eax
    0.00 :   9a13:   test   %al,%al
    0.00 :   9a15:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a1b:   shl    $0x4,%rcx
    0.00 :   9a1f:   add    %rax,%rcx
    0.00 :   9a22:   mov    0x8(%rsp),%rax
    0.00 :   9a27:   movzbl 0x2(%rax),%eax
    0.00 :   9a2b:   test   %al,%al
    0.00 :   9a2d:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a33:   shl    $0x4,%rcx
    0.00 :   9a37:   add    %rax,%rcx
    0.00 :   9a3a:   mov    0x8(%rsp),%rax
    0.00 :   9a3f:   movzbl 0x3(%rax),%eax
    0.00 :   9a43:   test   %al,%al
    0.00 :   9a45:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a4b:   shl    $0x4,%rcx
    0.00 :   9a4f:   add    %rax,%rcx
    0.00 :   9a52:   mov    0x8(%rsp),%rax
    0.00 :   9a57:   movzbl 0x4(%rax),%eax
    0.00 :   9a5b:   test   %al,%al
    0.00 :   9a5d:   je     9d58 <do_lookup_x+0xb48>
    0.00 :   9a63:   shl    $0x4,%rcx
    0.00 :   9a67:   add    %rcx,%rax
    0.00 :   9a6a:   mov    0x8(%rsp),%rcx
    0.00 :   9a6f:   lea    0x5(%rcx),%rdx
    0.00 :   9a73:   movzbl 0x5(%rcx),%ecx
    0.00 :   9a77:   test   %cl,%cl
    0.00 :   9a79:   je     9a9c <do_lookup_x+0x88c>
    0.00 :   9a7b:   shl    $0x4,%rax
    0.00 :   9a7f:   add    $0x1,%rdx
    0.00 :   9a83:   add    %rax,%rcx
    0.00 :   9a86:   mov    %rcx,%rax
    0.00 :   9a89:   shr    $0x18,%rax
    0.00 :   9a8d:   and    $0xf0,%eax
    0.00 :   9a92:   xor    %rcx,%rax
    0.00 :   9a95:   movzbl (%rdx),%ecx
    0.00 :   9a98:   test   %cl,%cl
    0.00 :   9a9a:   jne    9a7b <do_lookup_x+0x86b>
    0.00 :   9a9c:   and    $0xfffffff,%eax
    0.00 :   9aa1:   xor    %edx,%edx
    0.00 :   9aa3:   mov    %rax,%rcx
    0.00 :   9aa6:   div    %rdi
    0.00 :   9aa9:   shl    $0x2,%rdx
    0.00 :   9aad:   mov    0x20(%rsp),%rax
    0.00 :   9ab2:   mov    %rcx,(%rax)
    0.00 :   9ab5:   jmp    93c7 <do_lookup_x+0x1b7>
    0.00 :   9aba:   mov    %r9d,0x30(%rsp)
    0.00 :   9abf:   mov    $0x1f,%esi
    0.00 :   9ac4:   mov    $0x20,%edi
    0.00 :   9ac9:   mov    %rcx,0x8(%rsp)
    0.00 :   9ace:   call   *0x2af14(%rip)        # 349e8 <__rtld_calloc>
    0.00 :   9ad4:   mov    %rax,%r11
    0.00 :   9ad7:   test   %rax,%rax
    0.00 :   9ada:   je     9dfe <do_lookup_x+0xbee>
    0.00 :   9ae0:   mov    %rax,0x50(%rbp)
    0.00 :   9ae4:   mov    0x2aef5(%rip),%rax        # 349e0 <__rtld_free>
    0.00 :   9aeb:   mov    %r12d,%r8d
    0.00 :   9aee:   mov    $0x1f,%r14d
    0.00 :   9af4:   movq   $0x1f,0x58(%rbp)
    0.00 :   9afc:   mov    0x30(%rsp),%r9d
    0.00 :   9b01:   mov    %rax,0x68(%rbp)
    0.00 :   9b05:   mov    0x8(%rsp),%rcx
    0.00 :   9b0a:   movabs $0x842108421084211,%rax
    0.00 :   9b14:   mul    %r8
    0.00 :   9b17:   mov    %r8,%rax
    0.00 :   9b1a:   sub    %rdx,%rax
    0.00 :   9b1d:   shr    %rax
    0.00 :   9b20:   lea    (%rdx,%rax,1),%rsi
    0.00 :   9b24:   shr    $0x4,%rsi
    0.00 :   9b28:   mov    %rsi,%rax
    0.00 :   9b2b:   shl    $0x5,%rax
    0.00 :   9b2f:   sub    %rsi,%rax
    0.00 :   9b32:   mov    %r8,%rsi
    0.00 :   9b35:   sub    %rax,%rsi
    0.00 :   9b38:   movabs $0x469ee58469ee5847,%rax
    0.00 :   9b42:   imul   %r8
    0.00 :   9b45:   mov    %rdx,%rax
    0.00 :   9b48:   and    $0xfffffffffffffff8,%rdx
    0.00 :   9b4c:   sar    $0x3,%rax
    0.00 :   9b50:   sub    %rax,%rdx
    0.00 :   9b53:   lea    (%rax,%rdx,4),%rax
    0.00 :   9b57:   sub    %rax,%r8
    0.00 :   9b5a:   lea    0x1(%r8),%r15
    0.00 :   9b5e:   jmp    98b0 <do_lookup_x+0x6a0>
    0.00 :   9b63:   mov    %ebp,%r11d
    0.00 :   9b66:   mov    0x28(%rsp),%r8d
    0.00 :   9b6b:   mov    0x30(%rsp),%r13
    0.00 :   9b70:   mov    0xc0(%rsp),%rbp
    0.00 :   9b78:   mov    0xd8(%rsp),%r14
    0.00 :   9b80:   mov    0x38(%rsp),%r10
    0.00 :   9b85:   mov    0x40(%rsp),%r9d
    0.00 :   9b8a:   jmp    9841 <do_lookup_x+0x631>
    0.00 :   9b8f:   mov    0x8(%rbx),%rdx
    0.00 :   9b93:   mov    0x8(%rsp),%rsi
    0.00 :   9b98:   xor    %eax,%eax
    0.00 :   9b9a:   mov    %rcx,0x48(%rsp)
    0.00 :   9b9f:   lea    0x221d2(%rip),%rdi        # 2bd78 <__PRETTY_FUNCTION__.9+0x88>
    0.00 :   9ba6:   mov    %r9d,0x40(%rsp)
    0.00 :   9bab:   mov    %r10,0x38(%rsp)
    0.00 :   9bb0:   mov    %r11d,0x30(%rsp)
    0.00 :   9bb5:   mov    %r8d,0x28(%rsp)
    0.00 :   9bba:   call   d480 <_dl_error_printf>
    0.00 :   9bbf:   mov    0x28(%rsp),%r8d
    0.00 :   9bc4:   mov    0x30(%rsp),%r11d
    0.00 :   9bc9:   mov    0x38(%rsp),%r10
    0.00 :   9bce:   mov    0x40(%rsp),%r9d
    0.00 :   9bd3:   mov    0x48(%rsp),%rcx
    0.00 :   9bd8:   testb  $0x1,0x344(%rbx)
    0.00 :   9bdf:   je     94cc <do_lookup_x+0x2bc>
    0.00 :   9be5:   mov    0x8(%rbx),%rsi
    0.00 :   9be9:   mov    0x8(%rsp),%rdx
    0.00 :   9bee:   lea    0x22233(%rip),%rcx        # 2be28 <__PRETTY_FUNCTION__.9+0x138>
    0.00 :   9bf5:   xor    %edi,%edi
    0.00 :   9bf7:   call   1070 <_dl_signal_error@plt>
    0.00 :   9bfc:   nopl   0x0(%rax)
    0.00 :   9c00:   lea    0x1(%r14),%rdi
    0.00 :   9c04:   mov    %r11,0x50(%rsp)
    0.00 :   9c09:   call   aec0 <_dl_higher_prime_number>
    0.00 :   9c0e:   mov    $0x20,%edi
    0.00 :   9c13:   mov    %rax,%rbp
    0.00 :   9c16:   mov    %rax,%rsi
    0.00 :   9c19:   call   *0x2adc9(%rip)        # 349e8 <__rtld_calloc>
    0.00 :   9c1f:   mov    %rax,0x30(%rsp)
    0.00 :   9c24:   test   %rax,%rax
    0.00 :   9c27:   je     9dfe <do_lookup_x+0xbee>
    0.00 :   9c2d:   lea    -0x2(%rbp),%rax
    0.00 :   9c31:   mov    0x50(%rsp),%r11
    0.00 :   9c36:   mov    0x30(%rsp),%r10
    0.00 :   9c3b:   mov    0x40(%rsp),%rcx
    0.00 :   9c40:   mov    0x5c(%rsp),%r9d
    0.00 :   9c45:   mov    %rax,0x8(%rsp)
    0.00 :   9c4a:   mov    %r14,%rax
    0.00 :   9c4d:   shl    $0x5,%rax
    0.00 :   9c51:   test   %r14,%r14
    0.00 :   9c54:   mov    %r11,%rdi
    0.00 :   9c57:   lea    (%rax,%r11,1),%r15
    0.00 :   9c5b:   je     9cda <do_lookup_x+0xaca>
    0.00 :   9c5d:   nopl   (%rax)
    0.00 :   9c60:   mov    0x8(%rdi),%rax
    0.00 :   9c64:   test   %rax,%rax
    0.00 :   9c67:   je     9cd1 <do_lookup_x+0xac1>
    0.00 :   9c69:   mov    (%rdi),%r14d
    0.00 :   9c6c:   movq   %rax,%xmm0
    0.00 :   9c71:   xor    %edx,%edx
    0.00 :   9c73:   mov    0x18(%rdi),%r13
    0.00 :   9c77:   movhps 0x10(%rdi),%xmm0
    0.00 :   9c7b:   mov    %r14,%rax
    0.00 :   9c7e:   mov    %r14,%r8
    0.00 :   9c81:   div    %rbp
    0.00 :   9c84:   mov    %r14,%rax
    0.00 :   9c87:   mov    %rdx,%rsi
    0.00 :   9c8a:   xor    %edx,%edx
    0.00 :   9c8c:   divq   0x8(%rsp)
    0.00 :   9c91:   add    $0x1,%rdx
    0.00 :   9c95:   mov    %rdx,%r14
    0.00 :   9c98:   shl    $0x5,%r14
    0.00 :   9c9c:   mov    %rsi,%rax
    0.00 :   9c9f:   shl    $0x5,%rax
    0.00 :   9ca3:   add    %r10,%rax
    0.00 :   9ca6:   jmp    9cbf <do_lookup_x+0xaaf>
    0.00 :   9ca8:   nopl   0x0(%rax,%rax,1)
    0.00 :   9cb0:   add    %rdx,%rsi
    0.00 :   9cb3:   add    %r14,%rax
    0.00 :   9cb6:   cmp    %rbp,%rsi
    0.00 :   9cb9:   jae    9d50 <do_lookup_x+0xb40>
    0.00 :   9cbf:   cmpq   $0x0,0x8(%rax)
    0.00 :   9cc4:   jne    9cb0 <do_lookup_x+0xaa0>
    0.00 :   9cc6:   mov    %r8d,(%rax)
    0.00 :   9cc9:   mov    %r13,0x18(%rax)
    0.00 :   9ccd:   movups %xmm0,0x8(%rax)
    0.00 :   9cd1:   add    $0x20,%rdi
    0.00 :   9cd5:   cmp    %rdi,%r15
    0.00 :   9cd8:   jne    9c60 <do_lookup_x+0xa50>
    0.00 :   9cda:   mov    0x28(%rsp),%rax
    0.00 :   9cdf:   mov    0x20(%rsp),%rsi
    0.00 :   9ce4:   mov    %r11,%rdi
    0.00 :   9ce7:   mov    %rbp,%r14
    0.00 :   9cea:   mov    %r9d,0x50(%rsp)
    0.00 :   9cef:   lea    (%rax,%rsi,1),%r13
    0.00 :   9cf3:   lea    0x2b306(%rip),%rax        # 35000 <_rtld_global>
    0.00 :   9cfa:   mov    %rcx,0x40(%rsp)
    0.00 :   9cff:   shl    $0x5,%r13
    0.00 :   9d03:   add    %rax,%r13
    0.00 :   9d06:   call   *0x68(%r13)
    0.00 :   9d0a:   xor    %edx,%edx
    0.00 :   9d0c:   mov    0x30(%rsp),%r11
    0.00 :   9d11:   mov    %rbp,0x58(%r13)
    0.00 :   9d15:   mov    0x2acc4(%rip),%rax        # 349e0 <__rtld_free>
    0.00 :   9d1c:   mov    0x40(%rsp),%rcx
    0.00 :   9d21:   mov    %r11,0x50(%r13)
    0.00 :   9d25:   mov    0x50(%rsp),%r9d
    0.00 :   9d2a:   mov    %rax,0x68(%r13)
    0.00 :   9d2e:   mov    0x68(%rsp),%rax
    0.00 :   9d33:   div    %rbp
    0.00 :   9d36:   mov    0x68(%rsp),%rax
    0.00 :   9d3b:   mov    %rdx,%rsi
    0.00 :   9d3e:   xor    %edx,%edx
    0.00 :   9d40:   divq   0x8(%rsp)
    0.00 :   9d45:   lea    0x1(%rdx),%r15
    0.00 :   9d49:   jmp    98b0 <do_lookup_x+0x6a0>
    0.00 :   9d4e:   xchg   %ax,%ax
    0.00 :   9d50:   sub    %rbp,%rsi
    0.00 :   9d53:   jmp    9c9c <do_lookup_x+0xa8c>
    0.00 :   9d58:   mov    %rcx,%rax
    0.00 :   9d5b:   xor    %edx,%edx
    0.00 :   9d5d:   div    %rdi
    0.00 :   9d60:   shl    $0x2,%rdx
    0.00 :   9d64:   jmp    9aad <do_lookup_x+0x89d>
    0.00 :   9d69:   mov    %ebp,%r11d
    0.00 :   9d6c:   mov    0x28(%rsp),%r8d
    0.00 :   9d71:   mov    0x30(%rsp),%r13
    0.00 :   9d76:   mov    %rax,%rcx
    0.00 :   9d79:   mov    0xc0(%rsp),%rbp
    0.00 :   9d81:   mov    0xd8(%rsp),%r14
    0.00 :   9d89:   mov    0x38(%rsp),%r10
    0.00 :   9d8e:   mov    0x40(%rsp),%r9d
    0.00 :   9d93:   jmp    94a0 <do_lookup_x+0x290>
    0.00 :   9d98:   movdqu 0x10(%rbp),%xmm0
    0.00 :   9d9d:   jmp    97be <do_lookup_x+0x5ae>
    0.00 :   9da2:   testb  $0x4,0x2acb7(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9da9:   jne    9db7 <do_lookup_x+0xba7>
    0.00 :   9dab:   movb   $0x1,0x337(%rbx)
    0.00 :   9db2:   jmp    9912 <do_lookup_x+0x702>
    0.00 :   9db7:   mov    0x30(%rbx),%rdx
    0.00 :   9dbb:   mov    0x8(%rbx),%rsi
    0.00 :   9dbf:   xor    %eax,%eax
    0.00 :   9dc1:   mov    %rcx,0x8(%rsp)
    0.00 :   9dc6:   lea    0x2209b(%rip),%rdi        # 2be68 <__PRETTY_FUNCTION__.9+0x178>
    0.00 :   9dcd:   call   d1d0 <_dl_debug_printf>
    0.00 :   9dd2:   mov    0x8(%rsp),%rcx
    0.00 :   9dd7:   jmp    9dab <do_lookup_x+0xb9b>
    0.00 :   9dd9:   mov    0x30(%rbx),%rdx
    0.00 :   9ddd:   mov    0x8(%rbx),%rsi
    0.00 :   9de1:   xor    %eax,%eax
    0.00 :   9de3:   mov    %rcx,0x8(%rsp)
    0.00 :   9de8:   lea    0x22079(%rip),%rdi        # 2be68 <__PRETTY_FUNCTION__.9+0x178>
    0.00 :   9def:   call   d1d0 <_dl_debug_printf>
    0.00 :   9df4:   mov    0x8(%rsp),%rcx
    0.00 :   9df9:   jmp    99d0 <do_lookup_x+0x7c0>
    0.00 :   9dfe:   mov    0x38(%rsp),%rdi
    0.00 :   9e03:   call   *0x2abe7(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   9e09:   lea    0x1fe4d(%rip),%rdi        # 29c5d <_sys_errname+0x89d>
    0.00 :   9e10:   xor    %eax,%eax
    0.00 :   9e12:   call   d530 <_dl_fatal_printf>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   44.97 [nf_conntrack][3382]
   15.01 [nf_conntrack][3364]
   14.69 [nf_conntrack][32c0]
   13.85 [nf_conntrack][332d]
   11.48 [nf_conntrack][333a]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (7 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000032c0 <__nf_conntrack_find_get>:
         : 6    __nf_conntrack_find_get():
   14.69 :   32c0:   call   32c5 <__nf_conntrack_find_get+0x5> // [nf_conntrack][32c0]
    0.00 :   32c5:   push   %r15
    0.00 :   32c7:   mov    %rdx,%r15
    0.00 :   32ca:   push   %r14
    0.00 :   32cc:   mov    %rsi,%r14
    0.00 :   32cf:   push   %r13
    0.00 :   32d1:   mov    %ecx,%r13d
    0.00 :   32d4:   push   %r12
    0.00 :   32d6:   push   %rbp
    0.00 :   32d7:   push   %rbx
    0.00 :   32d8:   sub    $0x10,%rsp
    0.00 :   32dc:   mov    %rdi,0x8(%rsp)
    0.00 :   32e1:   call   32e6 <__nf_conntrack_find_get+0x26>
    0.00 :   32e6:   mov    %r13d,%eax
    0.00 :   32e9:   mov    $0xfffffffffffffff0,%r13
    0.00 :   32f0:   mov    %rax,(%rsp)
    0.00 :   32f4:   jmp    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   32f6:   pause
    0.00 :   32f8:   mov    0x0(%rip),%eax        # 32fe <__nf_conntrack_find_get+0x3e>
    0.00 :   32fe:   test   $0x1,%al
    0.00 :   3300:   jne    32f6 <__nf_conntrack_find_get+0x36>
    0.00 :   3302:   mov    0x0(%rip),%r12d        # 3309 <__nf_conntrack_find_get+0x49>
    0.00 :   3309:   mov    0x0(%rip),%rsi        # 3310 <__nf_conntrack_find_get+0x50>
    0.00 :   3310:   mov    0x0(%rip),%ecx        # 3316 <__nf_conntrack_find_get+0x56>
    0.00 :   3316:   cmp    %eax,%ecx
    0.00 :   3318:   jne    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   331a:   mov    (%rsp),%rax
    0.00 :   331e:   imul   %rax,%r12
    0.00 :   3322:   shr    $0x20,%r12
    0.00 :   3326:   lea    (%rsi,%r12,8),%rax
    0.00 :   332a:   mov    (%rax),%rbx
   13.85 :   332d:   test   $0x1,%bl // [nf_conntrack][332d]
    0.00 :   3330:   je     3360 <__nf_conntrack_find_get+0xa0>
    0.00 :   3332:   jmp    33c6 <__nf_conntrack_find_get+0x106>
    0.00 :   3337:   mov    (%r15),%rax
   11.48 :   333a:   mov    0x8(%r15),%rsi // [nf_conntrack][333a]
    0.00 :   333e:   xor    0x10(%rbx),%rax
    0.00 :   3342:   xor    0x18(%rbx),%rsi
    0.00 :   3346:   or     %rsi,%rax
    0.00 :   3349:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   334b:   mov    0x20(%rbx),%eax
    0.00 :   334e:   cmp    %eax,0x10(%r15)
    0.00 :   3352:   je     33e7 <__nf_conntrack_find_get+0x127>
    0.00 :   3358:   mov    (%rbx),%rbx
    0.00 :   335b:   test   $0x1,%bl
    0.00 :   335e:   jne    33c6 <__nf_conntrack_find_get+0x106>
    0.00 :   3360:   movzbl 0x37(%rbx),%esi
   15.01 :   3364:   mov    %r13,%rbp // [nf_conntrack][3364]
    0.00 :   3367:   lea    0x0(,%rsi,8),%rax
    0.00 :   336f:   mov    %rsi,%rcx
    0.00 :   3372:   sub    %rsi,%rax
    0.00 :   3375:   shl    $0x3,%rax
    0.00 :   3379:   sub    %rax,%rbp
    0.00 :   337c:   add    %rbx,%rbp
    0.00 :   337f:   mov    0x8(%rbp),%eax
   44.97 :   3382:   mov    0x0(%rip),%rsi        # 3389 <__nf_conntrack_find_get+0xc9> // [nf_conntrack][3382]
    0.00 :   3389:   sub    %esi,%eax
    0.00 :   338b:   test   %eax,%eax
    0.00 :   338d:   jg     3337 <__nf_conntrack_find_get+0x77>
    0.00 :   338f:   mov    0x0(%rbp),%ecx
    0.00 :   3392:   test   %ecx,%ecx
    0.00 :   3394:   je     3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3396:   lea    0x1(%rcx),%esi
    0.00 :   3399:   mov    %ecx,%eax
    0.00 :   339b:   lock cmpxchg %esi,0x0(%rbp)
    0.00 :   33a0:   jne    352f <__nf_conntrack_find_get+0x26f>
    0.00 :   33a6:   test   %ecx,%ecx
    0.00 :   33a8:   js     3520 <__nf_conntrack_find_get+0x260>
    0.00 :   33ae:   test   %esi,%esi
    0.00 :   33b0:   js     3520 <__nf_conntrack_find_get+0x260>
    0.00 :   33b6:   mov    %rbp,%rdi
    0.00 :   33b9:   call   18e0 <nf_ct_gc_expired.part.0>
    0.00 :   33be:   mov    (%rbx),%rbx
    0.00 :   33c1:   test   $0x1,%bl
    0.00 :   33c4:   je     3360 <__nf_conntrack_find_get+0xa0>
    0.00 :   33c6:   shr    %rbx
    0.00 :   33c9:   cmp    %rbx,%r12
    0.00 :   33cc:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   33d2:   mov    0x8(%rsp),%rax
    0.00 :   33d7:   mov    0xb40(%rax),%rax
    0.00 :   33de:   incl   %gs:0x2c(%rax)
    0.00 :   33e2:   jmp    32f8 <__nf_conntrack_find_get+0x38>
    0.00 :   33e7:   mov    0x14(%r15),%rax
    0.00 :   33eb:   mov    0x1c(%r15),%rsi
    0.00 :   33ef:   xor    0x24(%rbx),%rax
    0.00 :   33f3:   xor    0x2c(%rbx),%rsi
    0.00 :   33f7:   or     %rsi,%rax
    0.00 :   33fa:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3400:   mov    0x24(%r15),%eax
    0.00 :   3404:   xor    0x34(%rbx),%eax
    0.00 :   3407:   test   $0xffffff,%eax
    0.00 :   340c:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3412:   mov    $0x1,%eax
    0.00 :   3417:   movzbl 0xf(%rbp),%esi
    0.00 :   341b:   shl    %cl,%eax
    0.00 :   341d:   movzbl 0x3(%r14),%ecx
    0.00 :   3422:   and    %eax,%ecx
    0.00 :   3424:   test   %eax,%esi
    0.00 :   3426:   jne    3500 <__nf_conntrack_find_get+0x240>
    0.00 :   342c:   test   %ecx,%ecx
    0.00 :   342e:   jne    351c <__nf_conntrack_find_get+0x25c>
    0.00 :   3434:   mov    0x80(%rbp),%rax
    0.00 :   343b:   test   $0x8,%al
    0.00 :   343d:   je     3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3443:   mov    0x8(%rsp),%rax
    0.00 :   3448:   cmp    0x88(%rbp),%rax
    0.00 :   344f:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3455:   test   %rbx,%rbx
    0.00 :   3458:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   345e:   movzbl 0x37(%rbx),%edx
    0.00 :   3462:   lea    0x0(,%rdx,8),%rax
    0.00 :   346a:   sub    %rdx,%rax
    0.00 :   346d:   mov    %rbx,%rdx
    0.00 :   3470:   shl    $0x3,%rax
    0.00 :   3474:   sub    %rax,%rdx
    0.00 :   3477:   lea    -0x10(%rdx),%rbp
    0.00 :   347b:   mov    0x0(%rbp),%edx
    0.00 :   347e:   test   %edx,%edx
    0.00 :   3480:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   3482:   lea    0x1(%rdx),%ecx
    0.00 :   3485:   mov    %edx,%eax
    0.00 :   3487:   lock cmpxchg %ecx,0x0(%rbp)
    0.00 :   348c:   jne    35f1 <__nf_conntrack_find_get+0x331>
    0.00 :   3492:   test   %edx,%edx
    0.00 :   3494:   js     35de <__nf_conntrack_find_get+0x31e>
    0.00 :   349a:   test   %ecx,%ecx
    0.00 :   349c:   js     35de <__nf_conntrack_find_get+0x31e>
    0.00 :   34a2:   mov    (%r15),%rax
    0.00 :   34a5:   mov    0x8(%r15),%rdx
    0.00 :   34a9:   xor    0x10(%rbx),%rax
    0.00 :   34ad:   xor    0x18(%rbx),%rdx
    0.00 :   34b1:   or     %rdx,%rax
    0.00 :   34b4:   movzbl 0x37(%rbx),%ecx
    0.00 :   34b8:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   34ba:   mov    0x20(%rbx),%eax
    0.00 :   34bd:   cmp    %eax,0x10(%r15)
    0.00 :   34c1:   je     3536 <__nf_conntrack_find_get+0x276>
    0.00 :   34c3:   test   %rbp,%rbp
    0.00 :   34c6:   je     34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   34c8:   mov    $0xffffffff,%eax
    0.00 :   34cd:   lock xadd %eax,0x0(%rbp)
    0.00 :   34d2:   cmp    $0x1,%eax
    0.00 :   34d5:   je     360a <__nf_conntrack_find_get+0x34a>
    0.00 :   34db:   test   %eax,%eax
    0.00 :   34dd:   jle    35f8 <__nf_conntrack_find_get+0x338>
    0.00 :   34e3:   xor    %ebx,%ebx
    0.00 :   34e5:   call   34ea <__nf_conntrack_find_get+0x22a>
    0.00 :   34ea:   mov    %rbx,%rax
    0.00 :   34ed:   add    $0x10,%rsp
    0.00 :   34f1:   pop    %rbx
    0.00 :   34f2:   pop    %rbp
    0.00 :   34f3:   pop    %r12
    0.00 :   34f5:   pop    %r13
    0.00 :   34f7:   pop    %r14
    0.00 :   34f9:   pop    %r15
    0.00 :   34fb:   jmp    3500 <__nf_conntrack_find_get+0x240>
    0.00 :   3500:   movzwl 0xc(%rbp),%esi
    0.00 :   3504:   xor    %eax,%eax
    0.00 :   3506:   test   %ecx,%ecx
    0.00 :   3508:   je     350e <__nf_conntrack_find_get+0x24e>
    0.00 :   350a:   movzwl (%r14),%eax
    0.00 :   350e:   cmp    %si,%ax
    0.00 :   3511:   jne    3358 <__nf_conntrack_find_get+0x98>
    0.00 :   3517:   jmp    3434 <__nf_conntrack_find_get+0x174>
    0.00 :   351c:   xor    %esi,%esi
    0.00 :   351e:   jmp    350a <__nf_conntrack_find_get+0x24a>
    0.00 :   3520:   xor    %esi,%esi
    0.00 :   3522:   mov    %rbp,%rdi
    0.00 :   3525:   call   352a <__nf_conntrack_find_get+0x26a>
    0.00 :   352a:   jmp    33b6 <__nf_conntrack_find_get+0xf6>
    0.00 :   352f:   mov    %eax,%ecx
    0.00 :   3531:   jmp    3392 <__nf_conntrack_find_get+0xd2>
    0.00 :   3536:   mov    0x14(%r15),%rax
    0.00 :   353a:   mov    0x1c(%r15),%rdx
    0.00 :   353e:   xor    0x24(%rbx),%rax
    0.00 :   3542:   xor    0x2c(%rbx),%rdx
    0.00 :   3546:   or     %rdx,%rax
    0.00 :   3549:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   354f:   mov    0x24(%r15),%eax
    0.00 :   3553:   xor    0x34(%rbx),%eax
    0.00 :   3556:   test   $0xffffff,%eax
    0.00 :   355b:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   3561:   movzbl %cl,%edx
    0.00 :   3564:   mov    %rbx,%rsi
    0.00 :   3567:   lea    0x0(,%rdx,8),%rax
    0.00 :   356f:   sub    %rdx,%rax
    0.00 :   3572:   movzbl 0x3(%r14),%edx
    0.00 :   3577:   shl    $0x3,%rax
    0.00 :   357b:   sub    %rax,%rsi
    0.00 :   357e:   mov    $0x1,%eax
    0.00 :   3583:   shl    %cl,%eax
    0.00 :   3585:   movzbl -0x1(%rsi),%ecx
    0.00 :   3589:   lea    -0x10(%rsi),%rdi
    0.00 :   358d:   and    %eax,%edx
    0.00 :   358f:   test   %eax,%ecx
    0.00 :   3591:   jne    35bd <__nf_conntrack_find_get+0x2fd>
    0.00 :   3593:   test   %edx,%edx
    0.00 :   3595:   jne    35ed <__nf_conntrack_find_get+0x32d>
    0.00 :   3597:   mov    0x80(%rdi),%rax
    0.00 :   359e:   test   $0x8,%al
    0.00 :   35a0:   je     34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   35a6:   mov    0x8(%rsp),%rax
    0.00 :   35ab:   cmp    0x88(%rdi),%rax
    0.00 :   35b2:   jne    34c3 <__nf_conntrack_find_get+0x203>
    0.00 :   35b8:   jmp    34e5 <__nf_conntrack_find_get+0x225>
    0.00 :   35bd:   movzwl 0xc(%rdi),%ecx
    0.00 :   35c1:   xor    %eax,%eax
    0.00 :   35c3:   test   %edx,%edx
    0.00 :   35c5:   je     35cb <__nf_conntrack_find_get+0x30b>
    0.00 :   35c7:   movzwl (%r14),%eax
    0.00 :   35cb:   cmp    %cx,%ax
    0.00 :   35ce:   je     3597 <__nf_conntrack_find_get+0x2d7>
    0.00 :   35d0:   test   %rbp,%rbp
    0.00 :   35d3:   jne    34c8 <__nf_conntrack_find_get+0x208>
    0.00 :   35d9:   jmp    34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   35de:   xor    %esi,%esi
    0.00 :   35e0:   mov    %rbp,%rdi
    0.00 :   35e3:   call   35e8 <__nf_conntrack_find_get+0x328>
    0.00 :   35e8:   jmp    34a2 <__nf_conntrack_find_get+0x1e2>
    0.00 :   35ed:   xor    %ecx,%ecx
    0.00 :   35ef:   jmp    35c7 <__nf_conntrack_find_get+0x307>
    0.00 :   35f1:   mov    %eax,%edx
    0.00 :   35f3:   jmp    347e <__nf_conntrack_find_get+0x1be>
    0.00 :   35f8:   mov    $0x3,%esi
    0.00 :   35fd:   mov    %rbp,%rdi
    0.00 :   3600:   call   3605 <__nf_conntrack_find_get+0x345>
    0.00 :   3605:   jmp    34e3 <__nf_conntrack_find_get+0x223>
    0.00 :   360a:   mov    %rbp,%rdi
    0.00 :   360d:   call   3612 <__nf_conntrack_find_get+0x352>
    0.00 :   3612:   jmp    34e3 <__nf_conntrack_find_get+0x223>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   27.74 libc.so.6[55bdf]
   25.88 libc.so.6[557f1]
   16.97 libc.so.6[54bb8]
   15.28 libc.so.6[55145]
   14.12 libc.so.6[567ea]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (5 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000053e90 <__GI___printf_fp_l>:
         : 6     __printf_fp_l():
    0.00 :   53e90:  endbr64
    0.00 :   53e94:  push   %rbp
    0.00 :   53e95:  mov    %rsp,%rbp
    0.00 :   53e98:  push   %r15
    0.00 :   53e9a:  push   %r14
    0.00 :   53e9c:  push   %r13
    0.00 :   53e9e:  push   %r12
    0.00 :   53ea0:  push   %rbx
    0.00 :   53ea1:  mov    %rdi,%rbx
    0.00 :   53ea4:  mov    %rdx,%rdi
    0.00 :   53ea7:  sub    $0x128,%rsp
    0.00 :   53eae:  mov    %rdx,-0xb8(%rbp)
    0.00 :   53eb5:  mov    %rcx,%rdx
    0.00 :   53eb8:  movzbl 0xc(%rdi),%r14d
    0.00 :   53ebd:  mov    %rsi,-0xf8(%rbp)
    0.00 :   53ec4:  mov    %fs:0x28,%rax
    0.00 :   53ecd:  mov    %rax,-0x38(%rbp)
    0.00 :   53ed1:  xor    %eax,%eax
    0.00 :   53ed3:  movzbl 0xd(%rdi),%eax
    0.00 :   53ed7:  movl   $0x0,-0xa4(%rbp)
    0.00 :   53ee1:  movl   $0x0,-0xa0(%rbp)
    0.00 :   53eeb:  mov    %eax,%ecx
    0.00 :   53eed:  shr    $0x2,%cl
    0.00 :   53ef0:  and    $0x1,%ecx
    0.00 :   53ef3:  mov    %ecx,-0xbc(%rbp)
    0.00 :   53ef9:  test   $0x1,%al
    0.00 :   53efb:  jne    541f0 <__GI___printf_fp_l+0x360>
    0.00 :   53f01:  mov    0x8(%rsi),%rcx
    0.00 :   53f05:  mov    0x38(%rcx),%rdi
    0.00 :   53f09:  mov    0x50(%rcx),%esi
    0.00 :   53f0c:  mov    %rdi,-0x110(%rbp)
    0.00 :   53f13:  mov    %esi,-0xc0(%rbp)
    0.00 :   53f19:  test   %r14b,%r14b
    0.00 :   53f1c:  js     540f8 <__GI___printf_fp_l+0x268>
    0.00 :   53f22:  movq   $0x0,-0xe8(%rbp)
    0.00 :   53f2d:  movl   $0x0,-0x108(%rbp)
    0.00 :   53f37:  movq   $0x0,-0x118(%rbp)
    0.00 :   53f42:  mov    (%rdx),%rdx
    0.00 :   53f45:  test   $0x10,%al
    0.00 :   53f47:  je     541b0 <__GI___printf_fp_l+0x320>
    0.00 :   53f4d:  movdqa (%rdx),%xmm2
    0.00 :   53f51:  movdqa %xmm2,%xmm1
    0.00 :   53f55:  movdqa %xmm2,%xmm0
    0.00 :   53f59:  movaps %xmm2,-0xd0(%rbp)
    0.00 :   53f60:  call   1795c0 <__unordtf2>
    0.00 :   53f65:  test   %rax,%rax
    0.00 :   53f68:  jne    54d92 <__GI___printf_fp_l+0xf02>
    0.00 :   53f6e:  movdqa -0xd0(%rbp),%xmm0
    0.00 :   53f76:  movdqa 0x14ccd2(%rip),%xmm1        # 1a0c50 <in6addr_any+0x1a0>
    0.00 :   53f7e:  pand   0x14ccba(%rip),%xmm0        # 1a0c40 <in6addr_any+0x190>
    0.00 :   53f86:  movaps %xmm0,-0xe0(%rbp)
    0.00 :   53f8d:  call   1795c0 <__unordtf2>
    0.00 :   53f92:  test   %rax,%rax
    0.00 :   53f95:  jne    54c00 <__GI___printf_fp_l+0xd70>
    0.00 :   53f9b:  movdqa 0x14ccad(%rip),%xmm1        # 1a0c50 <in6addr_any+0x1a0>
    0.00 :   53fa3:  movdqa -0xe0(%rbp),%xmm0
    0.00 :   53fab:  call   179b90 <__letf2>
    0.00 :   53fb0:  test   %rax,%rax
    0.00 :   53fb3:  jle    54c00 <__GI___printf_fp_l+0xd70>
    0.00 :   53fb9:  movaps -0xd0(%rbp),%xmm3
    0.00 :   53fc0:  movmskps %xmm3,%r12d
    0.00 :   53fc4:  and    $0x8,%r12d
    0.00 :   53fc8:  mov    -0xb8(%rbp),%rax
    0.00 :   53fcf:  mov    %r12d,-0xa4(%rbp)
    0.00 :   53fd6:  lea    0x142fa6(%rip),%rcx        # 196f83 <not_available+0xc6>
    0.00 :   53fdd:  lea    0x14d2d4(%rip),%r15        # 1a12b8 <default_rwlockattr+0x2c8>
    0.00 :   53fe4:  movslq 0x8(%rax),%rdx
    0.00 :   53fe8:  mov    0x17ee09(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   53fef:  mov    %fs:(%rax),%rax
    0.00 :   53ff3:  testb  $0x1,0x1(%rax,%rdx,2)
    0.00 :   53ff8:  lea    0x14307d(%rip),%rax        # 19707c <not_available+0x1bf>
    0.00 :   53fff:  cmovne %rax,%rcx
    0.00 :   54003:  lea    0x14d2ce(%rip),%rax        # 1a12d8 <default_rwlockattr+0x2e8>
    0.00 :   5400a:  cmovne %rax,%r15
    0.00 :   5400e:  mov    -0xb8(%rbp),%rax
    0.00 :   54015:  mov    0x4(%rax),%r13d
    0.00 :   54019:  mov    %r14d,%eax
    0.00 :   5401c:  shr    $0x5,%al
    0.00 :   5401f:  xor    $0x1,%eax
    0.00 :   54022:  and    $0x1,%eax
    0.00 :   54025:  test   %r12d,%r12d
    0.00 :   54028:  je     542e0 <__GI___printf_fp_l+0x450>
    0.00 :   5402e:  sub    $0x4,%r13d
    0.00 :   54032:  test   %r13d,%r13d
    0.00 :   54035:  setg   %r8b
    0.00 :   54039:  jle    54043 <__GI___printf_fp_l+0x1b3>
    0.00 :   5403b:  test   %al,%al
    0.00 :   5403d:  jne    54160 <__GI___printf_fp_l+0x2d0>
    0.00 :   54043:  mov    -0xbc(%rbp),%eax
    0.00 :   54049:  xor    %r12d,%r12d
    0.00 :   5404c:  test   %eax,%eax
    0.00 :   5404e:  je     54468 <__GI___printf_fp_l+0x5d8>
    0.00 :   54054:  mov    0xa0(%rbx),%rax
    0.00 :   5405b:  test   %rax,%rax
    0.00 :   5405e:  je     5616a <__GI___printf_fp_l+0x22da>
    0.00 :   54064:  mov    0x20(%rax),%rdx
    0.00 :   54068:  cmp    0x28(%rax),%rdx
    0.00 :   5406c:  jae    5616a <__GI___printf_fp_l+0x22da>
    0.00 :   54072:  lea    0x4(%rdx),%rcx
    0.00 :   54076:  add    $0x1,%r12d
    0.00 :   5407a:  mov    %rcx,0x20(%rax)
    0.00 :   5407e:  movl   $0x2d,(%rdx)
    0.00 :   54084:  mov    (%r15),%esi
    0.00 :   54087:  lea    0x3(%r12),%r14d
    0.00 :   5408c:  test   %rax,%rax
    0.00 :   5408f:  je     540d3 <__GI___printf_fp_l+0x243>
    0.00 :   54091:  mov    0x20(%rax),%rdx
    0.00 :   54095:  cmp    0x28(%rax),%rdx
    0.00 :   54099:  jae    540d3 <__GI___printf_fp_l+0x243>
    0.00 :   5409b:  lea    0x4(%rdx),%rcx
    0.00 :   5409f:  cmp    $0xffffffff,%esi
    0.00 :   540a2:  mov    %rcx,0x20(%rax)
    0.00 :   540a6:  sete   %al
    0.00 :   540a9:  mov    %esi,(%rdx)
    0.00 :   540ab:  test   %al,%al
    0.00 :   540ad:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   540b3:  add    $0x1,%r12d
    0.00 :   540b7:  cmp    %r14d,%r12d
    0.00 :   540ba:  je     5436c <__GI___printf_fp_l+0x4dc>
    0.00 :   540c0:  mov    0xa0(%rbx),%rax
    0.00 :   540c7:  add    $0x4,%r15
    0.00 :   540cb:  mov    (%r15),%esi
    0.00 :   540ce:  test   %rax,%rax
    0.00 :   540d1:  jne    54091 <__GI___printf_fp_l+0x201>
    0.00 :   540d3:  mov    %rbx,%rdi
    0.00 :   540d6:  mov    %r8b,-0xd0(%rbp)
    0.00 :   540dd:  call   7bc60 <__woverflow>
    0.00 :   540e2:  movzbl -0xd0(%rbp),%r8d
    0.00 :   540ea:  cmp    $0xffffffff,%eax
    0.00 :   540ed:  sete   %al
    0.00 :   540f0:  jmp    540ab <__GI___printf_fp_l+0x21b>
    0.00 :   540f2:  nopw   0x0(%rax,%rax,1)
    0.00 :   540f8:  mov    0x48(%rcx),%rdi
    0.00 :   540fc:  mov    %rdi,-0xe8(%rbp)
    0.00 :   54103:  movzbl (%rdi),%edi
    0.00 :   54106:  mov    %edi,%esi
    0.00 :   54108:  mov    %dil,-0xd0(%rbp)
    0.00 :   5410f:  lea    -0x1(%rsi),%edi
    0.00 :   54112:  cmp    $0x7d,%dil
    0.00 :   54116:  ja     53f22 <__GI___printf_fp_l+0x92>
    0.00 :   5411c:  mov    -0xbc(%rbp),%r9d
    0.00 :   54123:  test   %r9d,%r9d
    0.00 :   54126:  je     54d20 <__GI___printf_fp_l+0xe90>
    0.00 :   5412c:  movq   $0x0,-0x118(%rbp)
    0.00 :   54137:  mov    0x58(%rcx),%esi
    0.00 :   5413a:  xor    %ecx,%ecx
    0.00 :   5413c:  test   %esi,%esi
    0.00 :   5413e:  cmovne -0xe8(%rbp),%rcx
    0.00 :   54146:  mov    %esi,-0x108(%rbp)
    0.00 :   5414c:  mov    %rcx,-0xe8(%rbp)
    0.00 :   54153:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   54158:  nopl   0x0(%rax,%rax,1)
    0.00 :   54160:  mov    -0xbc(%rbp),%esi
    0.00 :   54166:  movslq %r13d,%r12
    0.00 :   54169:  test   %esi,%esi
    0.00 :   5416b:  je     54490 <__GI___printf_fp_l+0x600>
    0.00 :   54171:  mov    %r12,%rdx
    0.00 :   54174:  mov    $0x20,%esi
    0.00 :   54179:  mov    %rbx,%rdi
    0.00 :   5417c:  call   7a890 <_IO_wpadn>
    0.00 :   54181:  cmp    %r12,%rax
    0.00 :   54184:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   5418a:  mov    -0xa4(%rbp),%edx
    0.00 :   54190:  test   %edx,%edx
    0.00 :   54192:  je     54c9c <__GI___printf_fp_l+0xe0c>
    0.00 :   54198:  mov    %r13d,%r12d
    0.00 :   5419b:  mov    $0x1,%r8d
    0.00 :   541a1:  jmp    54054 <__GI___printf_fp_l+0x1c4>
    0.00 :   541a6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   541b0:  test   $0x1,%r14b
    0.00 :   541b4:  je     543d0 <__GI___printf_fp_l+0x540>
    0.00 :   541ba:  fldt   (%rdx)
    0.00 :   541bc:  fucomi %st(0),%st
    0.00 :   541be:  jp     562fd <__GI___printf_fp_l+0x246d>
    0.00 :   541c4:  fld    %st(0)
    0.00 :   541c6:  fabs
    0.00 :   541c8:  fldt   0x14c982(%rip)        # 1a0b50 <in6addr_any+0xa0>
    0.00 :   541ce:  fxch   %st(1)
    0.00 :   541d0:  fucomip %st(1),%st
    0.00 :   541d2:  fstp   %st(0)
    0.00 :   541d4:  jbe    544d0 <__GI___printf_fp_l+0x640>
    0.00 :   541da:  fxam
    0.00 :   541dc:  fnstsw %ax
    0.00 :   541de:  fstp   %st(0)
    0.00 :   541e0:  mov    %eax,%r12d
    0.00 :   541e3:  and    $0x200,%r12d
    0.00 :   541ea:  jmp    53fc8 <__GI___printf_fp_l+0x138>
    0.00 :   541ef:  nop
    0.00 :   541f0:  mov    -0xf8(%rbp),%rdi
    0.00 :   541f7:  mov    0x20(%rdi),%rcx
    0.00 :   541fb:  mov    0x48(%rcx),%rsi
    0.00 :   541ff:  cmpb   $0x0,(%rsi)
    0.00 :   54202:  mov    %rsi,-0x110(%rbp)
    0.00 :   54209:  jne    5421a <__GI___printf_fp_l+0x38a>
    0.00 :   5420b:  mov    0x8(%rdi),%rdi
    0.00 :   5420f:  mov    0x38(%rdi),%rdi
    0.00 :   54213:  mov    %rdi,-0x110(%rbp)
    0.00 :   5421a:  mov    0x190(%rcx),%edi
    0.00 :   54220:  mov    %edi,-0x108(%rbp)
    0.00 :   54226:  test   %edi,%edi
    0.00 :   54228:  jne    54260 <__GI___printf_fp_l+0x3d0>
    0.00 :   5422a:  mov    -0xf8(%rbp),%rdi
    0.00 :   54231:  mov    0x8(%rdi),%rdi
    0.00 :   54235:  mov    0x50(%rdi),%esi
    0.00 :   54238:  mov    %esi,-0xc0(%rbp)
    0.00 :   5423e:  test   %r14b,%r14b
    0.00 :   54241:  js     54275 <__GI___printf_fp_l+0x3e5>
    0.00 :   54243:  movq   $0x0,-0xe8(%rbp)
    0.00 :   5424e:  movq   $0x0,-0x118(%rbp)
    0.00 :   54259:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   5425e:  xchg   %ax,%ax
    0.00 :   54260:  test   %r14b,%r14b
    0.00 :   54263:  jns    54430 <__GI___printf_fp_l+0x5a0>
    0.00 :   54269:  mov    -0x108(%rbp),%edi
    0.00 :   5426f:  mov    %edi,-0xc0(%rbp)
    0.00 :   54275:  mov    0x58(%rcx),%rdi
    0.00 :   54279:  mov    %rdi,-0xe8(%rbp)
    0.00 :   54280:  movzbl (%rdi),%edi
    0.00 :   54283:  mov    %edi,%esi
    0.00 :   54285:  mov    %dil,-0xd0(%rbp)
    0.00 :   5428c:  lea    -0x1(%rsi),%edi
    0.00 :   5428f:  cmp    $0x7d,%dil
    0.00 :   54293:  ja     53f22 <__GI___printf_fp_l+0x92>
    0.00 :   54299:  mov    -0xbc(%rbp),%r10d
    0.00 :   542a0:  test   %r10d,%r10d
    0.00 :   542a3:  je     54d5c <__GI___printf_fp_l+0xecc>
    0.00 :   542a9:  mov    0x198(%rcx),%edi
    0.00 :   542af:  xor    %ecx,%ecx
    0.00 :   542b1:  movq   $0x0,-0x118(%rbp)
    0.00 :   542bc:  test   %edi,%edi
    0.00 :   542be:  cmovne -0xe8(%rbp),%rcx
    0.00 :   542c6:  mov    %edi,-0x108(%rbp)
    0.00 :   542cc:  mov    %rcx,-0xe8(%rbp)
    0.00 :   542d3:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   542d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   542e0:  test   $0x50,%r14b
    0.00 :   542e4:  jne    54410 <__GI___printf_fp_l+0x580>
    0.00 :   542ea:  sub    $0x3,%r13d
    0.00 :   542ee:  test   %r13d,%r13d
    0.00 :   542f1:  setg   %r8b
    0.00 :   542f5:  jle    542ff <__GI___printf_fp_l+0x46f>
    0.00 :   542f7:  test   %al,%al
    0.00 :   542f9:  jne    54160 <__GI___printf_fp_l+0x2d0>
    0.00 :   542ff:  test   $0x40,%r14b
    0.00 :   54303:  je     54c40 <__GI___printf_fp_l+0xdb0>
    0.00 :   54309:  mov    -0xbc(%rbp),%eax
    0.00 :   5430f:  test   %eax,%eax
    0.00 :   54311:  jne    54cb8 <__GI___printf_fp_l+0xe28>
    0.00 :   54317:  xor    %r15d,%r15d
    0.00 :   5431a:  mov    0x28(%rbx),%rax
    0.00 :   5431e:  cmp    0x30(%rbx),%rax
    0.00 :   54322:  jae    56865 <__GI___printf_fp_l+0x29d5>
    0.00 :   54328:  lea    0x1(%rax),%rdx
    0.00 :   5432c:  add    $0x1,%r15d
    0.00 :   54330:  mov    %rdx,0x28(%rbx)
    0.00 :   54334:  movb   $0x2b,(%rax)
    0.00 :   54337:  lea    0x3(%rcx),%r14
    0.00 :   5433b:  mov    %rcx,%r12
    0.00 :   5433e:  add    $0x1,%r12
    0.00 :   54342:  mov    0x28(%rbx),%rax
    0.00 :   54346:  movzbl -0x1(%r12),%edx
    0.00 :   5434c:  cmp    0x30(%rbx),%rax
    0.00 :   54350:  jae    54c60 <__GI___printf_fp_l+0xdd0>
    0.00 :   54356:  lea    0x1(%rax),%rsi
    0.00 :   5435a:  mov    %rsi,0x28(%rbx)
    0.00 :   5435e:  mov    %dl,(%rax)
    0.00 :   54360:  cmp    %r14,%r12
    0.00 :   54363:  jne    5433e <__GI___printf_fp_l+0x4ae>
    0.00 :   54365:  sub    %ecx,%r12d
    0.00 :   54368:  lea    (%r12,%r15,1),%r14d
    0.00 :   5436c:  mov    -0xb8(%rbp),%rax
    0.00 :   54373:  testb  $0x20,0xc(%rax)
    0.00 :   54377:  je     543ab <__GI___printf_fp_l+0x51b>
    0.00 :   54379:  test   %r8b,%r8b
    0.00 :   5437c:  je     543ab <__GI___printf_fp_l+0x51b>
    0.00 :   5437e:  mov    -0xbc(%rbp),%eax
    0.00 :   54384:  movslq %r13d,%r12
    0.00 :   54387:  mov    $0x20,%esi
    0.00 :   5438c:  mov    %rbx,%rdi
    0.00 :   5438f:  mov    %r12,%rdx
    0.00 :   54392:  test   %eax,%eax
    0.00 :   54394:  je     54bf0 <__GI___printf_fp_l+0xd60>
    0.00 :   5439a:  call   7a890 <_IO_wpadn>
    0.00 :   5439f:  cmp    %r12,%rax
    0.00 :   543a2:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   543a8:  add    %r13d,%r14d
    0.00 :   543ab:  mov    -0x38(%rbp),%rax
    0.00 :   543af:  sub    %fs:0x28,%rax
    0.00 :   543b8:  jne    56ac3 <__GI___printf_fp_l+0x2c33>
    0.00 :   543be:  lea    -0x28(%rbp),%rsp
    0.00 :   543c2:  mov    %r14d,%eax
    0.00 :   543c5:  pop    %rbx
    0.00 :   543c6:  pop    %r12
    0.00 :   543c8:  pop    %r13
    0.00 :   543ca:  pop    %r14
    0.00 :   543cc:  pop    %r15
    0.00 :   543ce:  pop    %rbp
    0.00 :   543cf:  ret
    0.00 :   543d0:  movsd  (%rdx),%xmm0
    0.00 :   543d4:  ucomisd %xmm0,%xmm0
    0.00 :   543d8:  jp     562ef <__GI___printf_fp_l+0x245f>
    0.00 :   543de:  movapd %xmm0,%xmm1
    0.00 :   543e2:  andpd  0x14c7a6(%rip),%xmm1        # 1a0b90 <in6addr_any+0xe0>
    0.00 :   543ea:  ucomisd 0x14cba6(%rip),%xmm1        # 1a0f98 <conversion_rate+0x20>
    0.00 :   543f2:  jbe    54bb8 <__GI___printf_fp_l+0xd28>
    0.00 :   543f8:  movmskpd %xmm0,%r12d
    0.00 :   543fd:  and    $0x1,%r12d
    0.00 :   54401:  jmp    53fc8 <__GI___printf_fp_l+0x138>
    0.00 :   54406:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54410:  sub    $0x4,%r13d
    0.00 :   54414:  test   %r13d,%r13d
    0.00 :   54417:  setg   %r8b
    0.00 :   5441b:  jg     542f7 <__GI___printf_fp_l+0x467>
    0.00 :   54421:  jmp    542ff <__GI___printf_fp_l+0x46f>
    0.00 :   54426:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54430:  mov    -0x108(%rbp),%esi
    0.00 :   54436:  movq   $0x0,-0xe8(%rbp)
    0.00 :   54441:  movl   $0x0,-0x108(%rbp)
    0.00 :   5444b:  mov    %esi,-0xc0(%rbp)
    0.00 :   54451:  movq   $0x0,-0x118(%rbp)
    0.00 :   5445c:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   54461:  nopl   0x0(%rax)
    0.00 :   54468:  xor    %r15d,%r15d
    0.00 :   5446b:  mov    0x28(%rbx),%rax
    0.00 :   5446f:  cmp    0x30(%rbx),%rax
    0.00 :   54473:  jae    565ce <__GI___printf_fp_l+0x273e>
    0.00 :   54479:  lea    0x1(%rax),%rdx
    0.00 :   5447d:  add    $0x1,%r15d
    0.00 :   54481:  mov    %rdx,0x28(%rbx)
    0.00 :   54485:  movb   $0x2d,(%rax)
    0.00 :   54488:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   5448d:  nopl   (%rax)
    0.00 :   54490:  mov    %r12,%rdx
    0.00 :   54493:  mov    $0x20,%esi
    0.00 :   54498:  mov    %rbx,%rdi
    0.00 :   5449b:  mov    %rcx,-0xd0(%rbp)
    0.00 :   544a2:  call   78be0 <_IO_padn>
    0.00 :   544a7:  cmp    %r12,%rax
    0.00 :   544aa:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   544b0:  mov    -0xa4(%rbp),%ecx
    0.00 :   544b6:  test   %ecx,%ecx
    0.00 :   544b8:  mov    -0xd0(%rbp),%rcx
    0.00 :   544bf:  je     54d69 <__GI___printf_fp_l+0xed9>
    0.00 :   544c5:  mov    %r13d,%r15d
    0.00 :   544c8:  mov    $0x1,%r8d
    0.00 :   544ce:  jmp    5446b <__GI___printf_fp_l+0x5db>
    0.00 :   544d0:  sub    $0x10,%rsp
    0.00 :   544d4:  lea    -0x60(%rbp),%r14
    0.00 :   544d8:  lea    -0xa4(%rbp),%rcx
    0.00 :   544df:  mov    $0x2,%esi
    0.00 :   544e4:  fstpt  (%rsp)
    0.00 :   544e7:  mov    %r14,%rdi
    0.00 :   544ea:  lea    -0x98(%rbp),%rdx
    0.00 :   544f1:  call   4f460 <__mpn_extract_long_double>
    0.00 :   544f6:  pop    %rdi
    0.00 :   544f7:  pop    %r8
    0.00 :   544f9:  mov    %eax,%r13d
    0.00 :   544fc:  mov    %rax,%r12
    0.00 :   544ff:  shl    $0x6,%r13d
    0.00 :   54503:  sub    $0x3f,%r13d
    0.00 :   54507:  mov    -0x98(%rbp),%ecx
    0.00 :   5450d:  mov    %rsp,%rsi
    0.00 :   54510:  mov    %r12,-0x88(%rbp)
    0.00 :   54517:  mov    %ecx,%eax
    0.00 :   54519:  neg    %eax
    0.00 :   5451b:  cmovs  %ecx,%eax
    0.00 :   5451e:  add    $0x3f,%eax
    0.00 :   54521:  sar    $0x6,%eax
    0.00 :   54524:  add    $0x4,%eax
    0.00 :   54527:  cltq
    0.00 :   54529:  lea    0x17(,%rax,8),%rax
    0.00 :   54531:  mov    %rax,%rdi
    0.00 :   54534:  mov    %rax,%rdx
    0.00 :   54537:  and    $0xfffffffffffff000,%rdi
    0.00 :   5453e:  and    $0xfffffffffffffff0,%rdx
    0.00 :   54542:  sub    %rdi,%rsi
    0.00 :   54545:  cmp    %rsi,%rsp
    0.00 :   54548:  je     5455f <__GI___printf_fp_l+0x6cf>
    0.00 :   5454a:  sub    $0x1000,%rsp
    0.00 :   54551:  orq    $0x0,0xff8(%rsp)
    0.00 :   5455a:  cmp    %rsi,%rsp
    0.00 :   5455d:  jne    5454a <__GI___printf_fp_l+0x6ba>
    0.00 :   5455f:  and    $0xfff,%edx
    0.00 :   54565:  sub    %rdx,%rsp
    0.00 :   54568:  test   %rdx,%rdx
    0.00 :   5456b:  jne    54dec <__GI___printf_fp_l+0xf5c>
    0.00 :   54571:  mov    %rax,%r8
    0.00 :   54574:  lea    0xf(%rsp),%rdi
    0.00 :   54579:  mov    %rsp,%rsi
    0.00 :   5457c:  mov    %rax,%rdx
    0.00 :   5457f:  and    $0xfffffffffffff000,%r8
    0.00 :   54586:  and    $0xfffffffffffffff0,%rdi
    0.00 :   5458a:  and    $0xfffffffffffffff0,%rdx
    0.00 :   5458e:  sub    %r8,%rsi
    0.00 :   54591:  mov    %rdi,-0x90(%rbp)
    0.00 :   54598:  cmp    %rsi,%rsp
    0.00 :   5459b:  je     545b2 <__GI___printf_fp_l+0x722>
    0.00 :   5459d:  sub    $0x1000,%rsp
    0.00 :   545a4:  orq    $0x0,0xff8(%rsp)
    0.00 :   545ad:  cmp    %rsi,%rsp
    0.00 :   545b0:  jne    5459d <__GI___printf_fp_l+0x70d>
    0.00 :   545b2:  and    $0xfff,%edx
    0.00 :   545b8:  sub    %rdx,%rsp
    0.00 :   545bb:  test   %rdx,%rdx
    0.00 :   545be:  je     545c6 <__GI___printf_fp_l+0x736>
    0.00 :   545c0:  orq    $0x0,-0x8(%rsp,%rdx,1)
    0.00 :   545c6:  lea    0xf(%rsp),%rdx
    0.00 :   545cb:  mov    %rsp,%rsi
    0.00 :   545ce:  and    $0xfffffffffffffff0,%rdx
    0.00 :   545d2:  mov    %rdx,-0x70(%rbp)
    0.00 :   545d6:  mov    %rax,%rdx
    0.00 :   545d9:  and    $0xfffffffffffff000,%rax
    0.00 :   545df:  sub    %rax,%rsi
    0.00 :   545e2:  and    $0xfffffffffffffff0,%rdx
    0.00 :   545e6:  cmp    %rsi,%rsp
    0.00 :   545e9:  je     54600 <__GI___printf_fp_l+0x770>
    0.00 :   545eb:  sub    $0x1000,%rsp
    0.00 :   545f2:  orq    $0x0,0xff8(%rsp)
    0.00 :   545fb:  cmp    %rsi,%rsp
    0.00 :   545fe:  jne    545eb <__GI___printf_fp_l+0x75b>
    0.00 :   54600:  mov    %rdx,%rax
    0.00 :   54603:  and    $0xfff,%eax
    0.00 :   54608:  sub    %rax,%rsp
    0.00 :   5460b:  test   %rax,%rax
    0.00 :   5460e:  je     54616 <__GI___printf_fp_l+0x786>
    0.00 :   54610:  orq    $0x0,-0x8(%rsp,%rax,1)
    0.00 :   54616:  lea    0xf(%rsp),%rax
    0.00 :   5461b:  movq   $0x0,-0x78(%rbp)
    0.00 :   54623:  and    $0xfffffffffffffff0,%rax
    0.00 :   54627:  mov    %rax,-0x80(%rbp)
    0.00 :   5462b:  cmp    $0x2,%ecx
    0.00 :   5462e:  jle    5555a <__GI___printf_fp_l+0x16ca>
    0.00 :   54634:  lea    (%rcx,%r13,1),%eax
    0.00 :   54638:  test   %eax,%eax
    0.00 :   5463a:  lea    0x3f(%rax),%edx
    0.00 :   5463d:  cmovns %eax,%edx
    0.00 :   54640:  sar    $0x6,%edx
    0.00 :   54643:  test   $0x3f,%al
    0.00 :   54645:  jne    55ed1 <__GI___printf_fp_l+0x2041>
    0.00 :   5464b:  test   %r12,%r12
    0.00 :   5464e:  jle    56162 <__GI___printf_fp_l+0x22d2>
    0.00 :   54654:  movslq %edx,%r13
    0.00 :   54657:  mov    %r14,%rsi
    0.00 :   5465a:  mov    %ecx,-0xd0(%rbp)
    0.00 :   54660:  lea    0x0(,%r12,8),%rdx
    0.00 :   54668:  lea    (%rdi,%r13,8),%rdi
    0.00 :   5466c:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   54671:  mov    -0xd0(%rbp),%ecx
    0.00 :   54677:  add    %r13,%r12
    0.00 :   5467a:  mov    %r13,%rdx
    0.00 :   5467d:  mov    %r12,-0x88(%rbp)
    0.00 :   54684:  test   %rdx,%rdx
    0.00 :   54687:  jle    546a7 <__GI___printf_fp_l+0x817>
    0.00 :   54689:  mov    -0x90(%rbp),%rdi
    0.00 :   54690:  shl    $0x3,%rdx
    0.00 :   54694:  xor    %esi,%esi
    0.00 :   54696:  mov    %ecx,-0xd0(%rbp)
    0.00 :   5469c:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   546a1:  mov    -0xd0(%rbp),%ecx
    0.00 :   546a7:  mov    $0xc,%r15d
    0.00 :   546ad:  xor    %r13d,%r13d
    0.00 :   546b0:  xor    %r8d,%r8d
    0.00 :   546b3:  mov    -0x78(%rbp),%rdx
    0.00 :   546b7:  lea    0x137a1a(%rip),%r14        # 18c0d8 <_fpioconst_pow10+0x138>
    0.00 :   546be:  mov    %rbx,-0xd0(%rbp)
    0.00 :   546c5:  mov    %r13d,%ebx
    0.00 :   546c8:  mov    %r15d,%r13d
    0.00 :   546cb:  lea    -0x138(%r14),%r12
    0.00 :   546d2:  mov    %r8d,%r15d
    0.00 :   546d5:  jmp    5473e <__GI___printf_fp_l+0x8ae>
    0.00 :   546d7:  nopw   0x0(%rax,%rax,1)
    0.00 :   546e0:  mov    -0xb8(%rbp),%rax
    0.00 :   546e7:  testb  $0x10,0xd(%rax)
    0.00 :   546eb:  jne    54e50 <__GI___printf_fp_l+0xfc0>
    0.00 :   546f1:  mov    0x8(%r14),%rdx
    0.00 :   546f5:  mov    (%r14),%rax
    0.00 :   546f8:  lea    0x137a21(%rip),%rsi        # 18c120 <__tens>
    0.00 :   546ff:  mov    %rdx,-0x68(%rbp)
    0.00 :   54703:  lea    (%rsi,%rax,8),%rsi
    0.00 :   54707:  shl    $0x3,%rdx
    0.00 :   5470b:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   54710:  mov    -0x68(%rbp),%rdx
    0.00 :   54714:  cmp    %rdx,-0x88(%rbp)
    0.00 :   5471b:  jg     547a0 <__GI___printf_fp_l+0x910>
    0.00 :   54721:  je     555a0 <__GI___printf_fp_l+0x1710>
    0.00 :   54727:  mov    -0x78(%rbp),%rdx
    0.00 :   5472b:  sub    $0x1,%r13d
    0.00 :   5472f:  cmp    %r12,%r14
    0.00 :   54732:  je     547f2 <__GI___printf_fp_l+0x962>
    0.00 :   54738:  mov    -0x98(%rbp),%ecx
    0.00 :   5473e:  mov    -0x8(%r14),%eax
    0.00 :   54742:  sub    $0x18,%r14
    0.00 :   54746:  add    %ebx,%eax
    0.00 :   54748:  sub    $0x1,%eax
    0.00 :   5474b:  cmp    %ecx,%eax
    0.00 :   5474d:  jg     5472b <__GI___printf_fp_l+0x89b>
    0.00 :   5474f:  mov    -0x70(%rbp),%rdi
    0.00 :   54753:  test   %rdx,%rdx
    0.00 :   54756:  je     546e0 <__GI___printf_fp_l+0x850>
    0.00 :   54758:  mov    (%r14),%rcx
    0.00 :   5475b:  mov    0x8(%r14),%rax
    0.00 :   5475f:  lea    0x1379ba(%rip),%rsi        # 18c120 <__tens>
    0.00 :   54766:  lea    0x8(%rsi,%rcx,8),%rcx
    0.00 :   5476b:  mov    -0x80(%rbp),%rsi
    0.00 :   5476f:  lea    -0x1(%rax),%r8
    0.00 :   54773:  call   4e060 <__mpn_mul>
    0.00 :   54778:  mov    0x8(%r14),%rdx
    0.00 :   5477c:  add    -0x78(%rbp),%rdx
    0.00 :   54780:  test   %rax,%rax
    0.00 :   54783:  je     54e98 <__GI___printf_fp_l+0x1008>
    0.00 :   54789:  sub    $0x1,%rdx
    0.00 :   5478d:  mov    %rdx,-0x68(%rbp)
    0.00 :   54791:  cmp    %rdx,-0x88(%rbp)
    0.00 :   54798:  jle    54721 <__GI___printf_fp_l+0x891>
    0.00 :   5479a:  nopw   0x0(%rax,%rax,1)
    0.00 :   547a0:  mov    -0x70(%rbp),%rsi
    0.00 :   547a4:  mov    -0x80(%rbp),%rdi
    0.00 :   547a8:  mov    %rdx,-0x78(%rbp)
    0.00 :   547ac:  shl    $0x3,%rdx
    0.00 :   547b0:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   547b5:  mov    -0x78(%rbp),%rdx
    0.00 :   547b9:  mov    -0x80(%rbp),%rax
    0.00 :   547bd:  bsr    -0x8(%rax,%rdx,8),%rax
    0.00 :   547c3:  mov    %edx,%ecx
    0.00 :   547c5:  shl    $0x6,%ecx
    0.00 :   547c8:  lea    -0x81(%rcx),%r10d
    0.00 :   547cf:  mov    %r13d,%ecx
    0.00 :   547d2:  sub    $0x1,%r13d
    0.00 :   547d6:  mov    %r10d,%ebx
    0.00 :   547d9:  xor    $0x3f,%rax
    0.00 :   547dd:  sub    %eax,%ebx
    0.00 :   547df:  mov    $0x1,%eax
    0.00 :   547e4:  shl    %cl,%eax
    0.00 :   547e6:  or     %eax,%r15d
    0.00 :   547e9:  cmp    %r12,%r14
    0.00 :   547ec:  jne    54738 <__GI___printf_fp_l+0x8a8>
    0.00 :   547f2:  mov    %r15d,-0x98(%rbp)
    0.00 :   547f9:  mov    -0xd0(%rbp),%rbx
    0.00 :   54800:  test   %rdx,%rdx
    0.00 :   54803:  jle    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   54805:  mov    -0x80(%rbp),%rdi
    0.00 :   54809:  mov    -0x8(%rdi,%rdx,8),%rax
    0.00 :   5480e:  mov    (%rdi),%r8
    0.00 :   54811:  bsr    %rax,%rcx
    0.00 :   54815:  xor    $0x3f,%rcx
    0.00 :   54819:  mov    %ecx,%r11d
    0.00 :   5481c:  test   %r8,%r8
    0.00 :   5481f:  jne    56a06 <__GI___printf_fp_l+0x2b76>
    0.00 :   54825:  mov    -0x90(%rbp),%r9
    0.00 :   5482c:  mov    %rdi,%rsi
    0.00 :   5482f:  xor    %r13d,%r13d
    0.00 :   54832:  jmp    54851 <__GI___printf_fp_l+0x9c1>
    0.00 :   54834:  nopl   0x0(%rax)
    0.00 :   54838:  mov    0x8(%rsi),%rax
    0.00 :   5483c:  add    $0x8,%rsi
    0.00 :   54840:  add    $0x1,%r8
    0.00 :   54844:  add    $0x8,%r13
    0.00 :   54848:  test   %rax,%rax
    0.00 :   5484b:  jne    5609b <__GI___printf_fp_l+0x220b>
    0.00 :   54851:  cmpq   $0x0,(%r9,%r13,1)
    0.00 :   54856:  mov    %r8d,%r14d
    0.00 :   54859:  je     54838 <__GI___printf_fp_l+0x9a8>
    0.00 :   5485b:  test   %ecx,%ecx
    0.00 :   5485d:  jne    56405 <__GI___printf_fp_l+0x2575>
    0.00 :   54863:  test   %r8d,%r8d
    0.00 :   54866:  jne    560a7 <__GI___printf_fp_l+0x2217>
    0.00 :   5486c:  nopl   0x0(%rax)
    0.00 :   54870:  mov    -0xb8(%rbp),%rsi
    0.00 :   54877:  mov    0x17e56a(%rip),%rdx        # 1d2de8 <_DYNAMIC+0x268>
    0.00 :   5487e:  mov    0x4(%rsi),%eax
    0.00 :   54881:  movslq 0x8(%rsi),%rcx
    0.00 :   54885:  mov    (%rsi),%esi
    0.00 :   54887:  mov    %eax,-0x138(%rbp)
    0.00 :   5488d:  mov    %fs:(%rdx),%rdx
    0.00 :   54891:  mov    %rcx,%rax
    0.00 :   54894:  mov    %esi,-0xf0(%rbp)
    0.00 :   5489a:  mov    (%rdx,%rcx,4),%edi
    0.00 :   5489d:  mov    %edi,-0x13c(%rbp)
    0.00 :   548a3:  cmp    $0x65,%dil
    0.00 :   548a7:  je     55938 <__GI___printf_fp_l+0x1aa8>
    0.00 :   548ad:  cmpb   $0x66,-0x13c(%rbp)
    0.00 :   548b4:  je     55a4e <__GI___printf_fp_l+0x1bbe>
    0.00 :   548ba:  movl   $0x6,-0x130(%rbp)
    0.00 :   548c4:  mov    -0xf0(%rbp),%edi
    0.00 :   548ca:  test   %edi,%edi
    0.00 :   548cc:  js     548dc <__GI___printf_fp_l+0xa4c>
    0.00 :   548ce:  mov    $0x1,%edx
    0.00 :   548d3:  cmovne %edi,%edx
    0.00 :   548d6:  mov    %edx,-0x130(%rbp)
    0.00 :   548dc:  mov    -0xa0(%rbp),%r15d
    0.00 :   548e3:  mov    -0x98(%rbp),%edx
    0.00 :   548e9:  test   %r15d,%r15d
    0.00 :   548ec:  je     55ad3 <__GI___printf_fp_l+0x1c43>
    0.00 :   548f2:  cmp    $0x4,%edx
    0.00 :   548f5:  jg     55e75 <__GI___printf_fp_l+0x1fe5>
    0.00 :   548fb:  movl   $0x0,-0x100(%rbp)
    0.00 :   54905:  mov    -0x130(%rbp),%eax
    0.00 :   5490b:  mov    %eax,-0xe0(%rbp)
    0.00 :   54911:  movslq -0x130(%rbp),%rax
    0.00 :   54918:  add    $0x5,%rax
    0.00 :   5491c:  mov    %rax,-0x120(%rbp)
    0.00 :   54923:  mov    $0x66,%eax
    0.00 :   54928:  mov    %eax,-0x9c(%rbp)
    0.00 :   5492e:  mov    -0xb8(%rbp),%rax
    0.00 :   54935:  xor    %r13d,%r13d
    0.00 :   54938:  testb  $0x8,0xc(%rax)
    0.00 :   5493c:  mov    -0xe0(%rbp),%eax
    0.00 :   54942:  cmove  %r13d,%eax
    0.00 :   54946:  mov    %eax,-0xf0(%rbp)
    0.00 :   5494c:  cmpq   $0x0,-0xe8(%rbp)
    0.00 :   54954:  je     555c8 <__GI___printf_fp_l+0x1738>
    0.00 :   5495a:  mov    -0xe8(%rbp),%rax
    0.00 :   54961:  movzbl (%rax),%eax
    0.00 :   54964:  mov    %al,-0xd0(%rbp)
    0.00 :   5496a:  sub    $0x1,%eax
    0.00 :   5496d:  cmp    $0x7d,%al
    0.00 :   5496f:  ja     55ea4 <__GI___printf_fp_l+0x2014>
    0.00 :   54975:  mov    -0x100(%rbp),%edx
    0.00 :   5497b:  mov    -0xe8(%rbp),%rax
    0.00 :   54982:  xor    %r8d,%r8d
    0.00 :   54985:  jmp    549b4 <__GI___printf_fp_l+0xb24>
    0.00 :   54987:  nopw   0x0(%rax,%rax,1)
    0.00 :   54990:  movzbl 0x1(%rax),%esi
    0.00 :   54994:  add    $0x1,%rax
    0.00 :   54998:  lea    0x1(%r8),%edi
    0.00 :   5499c:  sub    %ecx,%edx
    0.00 :   5499e:  cmp    $0x7e,%sil
    0.00 :   549a2:  ja     56128 <__GI___printf_fp_l+0x2298>
    0.00 :   549a8:  test   %sil,%sil
    0.00 :   549ab:  je     56139 <__GI___printf_fp_l+0x22a9>
    0.00 :   549b1:  mov    %edi,%r8d
    0.00 :   549b4:  movsbl (%rax),%ecx
    0.00 :   549b7:  cmp    %edx,%ecx
    0.00 :   549b9:  jb     54990 <__GI___printf_fp_l+0xb00>
    0.00 :   549bb:  mov    %r8d,%eax
    0.00 :   549be:  mov    %r8d,-0x12c(%rbp)
    0.00 :   549c5:  add    $0x1,%eax
    0.00 :   549c8:  cltq
    0.00 :   549ca:  add    %rax,-0x120(%rbp)
    0.00 :   549d1:  mov    -0x120(%rbp),%rsi
    0.00 :   549d8:  movabs $0x3ffffffffffffffc,%rax
    0.00 :   549e2:  cmp    %rsi,%rax
    0.00 :   549e5:  jb     55e62 <__GI___printf_fp_l+0x1fd2>
    0.00 :   549eb:  movslq -0xe0(%rbp),%rax
    0.00 :   549f2:  mov    -0x120(%rbp),%rsi
    0.00 :   549f9:  cmp    %rax,%rsi
    0.00 :   549fc:  jb     55e62 <__GI___printf_fp_l+0x1fd2>
    0.00 :   54a02:  lea    0x8(,%rsi,4),%r12
    0.00 :   54a0a:  mov    %r12,%rdi
    0.00 :   54a0d:  call   87570 <__libc_alloca_cutoff>
    0.00 :   54a12:  cmp    $0x1000,%r12
    0.00 :   54a19:  jbe    54a23 <__GI___printf_fp_l+0xb93>
    0.00 :   54a1b:  test   %eax,%eax
    0.00 :   54a1d:  je     56358 <__GI___printf_fp_l+0x24c8>
    0.00 :   54a23:  add    $0x17,%r12
    0.00 :   54a27:  mov    %rsp,%rdx
    0.00 :   54a2a:  mov    %r12,%rax
    0.00 :   54a2d:  and    $0xfffffffffffff000,%r12
    0.00 :   54a34:  sub    %r12,%rdx
    0.00 :   54a37:  and    $0xfffffffffffffff0,%rax
    0.00 :   54a3b:  cmp    %rdx,%rsp
    0.00 :   54a3e:  je     54a55 <__GI___printf_fp_l+0xbc5>
    0.00 :   54a40:  sub    $0x1000,%rsp
    0.00 :   54a47:  orq    $0x0,0xff8(%rsp)
    0.00 :   54a50:  cmp    %rdx,%rsp
    0.00 :   54a53:  jne    54a40 <__GI___printf_fp_l+0xbb0>
    0.00 :   54a55:  and    $0xfff,%eax
    0.00 :   54a5a:  sub    %rax,%rsp
    0.00 :   54a5d:  test   %rax,%rax
    0.00 :   54a60:  je     54a68 <__GI___printf_fp_l+0xbd8>
    0.00 :   54a62:  orq    $0x0,-0x8(%rsp,%rax,1)
    0.00 :   54a68:  movl   $0x1,-0x140(%rbp)
    0.00 :   54a72:  lea    0xf(%rsp),%rax
    0.00 :   54a77:  movq   $0x0,-0x150(%rbp)
    0.00 :   54a82:  and    $0xfffffffffffffff0,%rax
    0.00 :   54a86:  mov    %rax,-0x128(%rbp)
    0.00 :   54a8d:  mov    -0x128(%rbp),%rax
    0.00 :   54a94:  mov    -0xa0(%rbp),%r14d
    0.00 :   54a9b:  lea    0x8(%rax),%r8
    0.00 :   54a9f:  test   %r14d,%r14d
    0.00 :   54aa2:  je     54ab1 <__GI___printf_fp_l+0xc21>
    0.00 :   54aa4:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   54aab:  je     5604b <__GI___printf_fp_l+0x21bb>
    0.00 :   54ab1:  movslq -0x100(%rbp),%rax
    0.00 :   54ab8:  test   %eax,%eax
    0.00 :   54aba:  jle    564f0 <__GI___printf_fp_l+0x2660>
    0.00 :   54ac0:  lea    -0xa0(%rbp),%r14
    0.00 :   54ac7:  mov    -0x128(%rbp),%rsi
    0.00 :   54ace:  mov    %r8,%r13
    0.00 :   54ad1:  mov    %r8,%r15
    0.00 :   54ad4:  mov    %r14,-0xd0(%rbp)
    0.00 :   54adb:  lea    0x8(%rsi,%rax,4),%r12
    0.00 :   54ae0:  mov    %r14,%rdi
    0.00 :   54ae3:  add    $0x4,%r13
    0.00 :   54ae7:  call   53a60 <hack_digit>
    0.00 :   54aec:  mov    %eax,-0x4(%r13)
    0.00 :   54af0:  cmp    %r12,%r13
    0.00 :   54af3:  jne    54ae0 <__GI___printf_fp_l+0xc50>
    0.00 :   54af5:  mov    -0x100(%rbp),%eax
    0.00 :   54afb:  mov    %r15,%r8
    0.00 :   54afe:  mov    %rax,%rdi
    0.00 :   54b01:  lea    (%r15,%rax,4),%rax
    0.00 :   54b05:  mov    %edi,-0x134(%rbp)
    0.00 :   54b0b:  mov    -0xb8(%rbp),%rdi
    0.00 :   54b12:  testb  $0x8,0xc(%rdi)
    0.00 :   54b16:  jne    54b28 <__GI___printf_fp_l+0xc98>
    0.00 :   54b18:  mov    -0xf0(%rbp),%r13d
    0.00 :   54b1f:  test   %r13d,%r13d
    0.00 :   54b22:  jle    55fe8 <__GI___printf_fp_l+0x2158>
    0.00 :   54b28:  mov    -0xc0(%rbp),%esi
    0.00 :   54b2e:  lea    0x4(%rax),%r15
    0.00 :   54b32:  mov    $0x1,%r13d
    0.00 :   54b38:  mov    %esi,(%rax)
    0.00 :   54b3a:  mov    -0xf0(%rbp),%r12d
    0.00 :   54b41:  mov    %rbx,-0x148(%rbp)
    0.00 :   54b48:  xor    %r14d,%r14d
    0.00 :   54b4b:  mov    %r13d,%ebx
    0.00 :   54b4e:  movl   $0x0,-0xfc(%rbp)
    0.00 :   54b58:  mov    %r12d,%r13d
    0.00 :   54b5b:  mov    %r8,%r12
    0.00 :   54b5e:  mov    %r13d,%esi
    0.00 :   54b61:  cmp    %r14d,%r13d
    0.00 :   54b64:  jg     54b81 <__GI___printf_fp_l+0xcf1>
    0.00 :   54b66:  cmp    %r14d,-0xe0(%rbp)
    0.00 :   54b6d:  jle    54eb9 <__GI___printf_fp_l+0x1029>
    0.00 :   54b73:  cmpq   $0x1,-0x88(%rbp)
    0.00 :   54b7b:  jle    54ea8 <__GI___printf_fp_l+0x1018>
    0.00 :   54b81:  mov    -0xd0(%rbp),%rdi
    0.00 :   54b88:  add    $0x1,%r14d
    0.00 :   54b8c:  add    $0x4,%r15
    0.00 :   54b90:  call   53a60 <hack_digit>
    0.00 :   54b95:  mov    %eax,-0x4(%r15)
    0.00 :   54b99:  cmp    $0x30,%eax
    0.00 :   54b9c:  jne    54ba6 <__GI___printf_fp_l+0xd16>
    0.00 :   54b9e:  test   %ebx,%ebx
    0.00 :   54ba0:  je     55398 <__GI___printf_fp_l+0x1508>
    0.00 :   54ba6:  mov    $0x1,%ebx
    0.00 :   54bab:  mov    %r13d,%esi
    0.00 :   54bae:  cmp    %r14d,%r13d
    0.00 :   54bb1:  jle    54b66 <__GI___printf_fp_l+0xcd6>
    0.00 :   54bb3:  jmp    54b81 <__GI___printf_fp_l+0xcf1>
    0.00 :   54bb5:  nopl   (%rax)
   16.97 :   54bb8:  lea    -0x60(%rbp),%r14 // libc.so.6[54bb8]
    0.00 :   54bbc:  lea    -0xa4(%rbp),%rcx
    0.00 :   54bc3:  mov    $0x2,%esi
    0.00 :   54bc8:  lea    -0x98(%rbp),%rdx
    0.00 :   54bcf:  mov    %r14,%rdi
    0.00 :   54bd2:  call   4f3d0 <__mpn_extract_double>
    0.00 :   54bd7:  mov    %eax,%r13d
    0.00 :   54bda:  mov    %rax,%r12
    0.00 :   54bdd:  shl    $0x6,%r13d
    0.00 :   54be1:  sub    $0x34,%r13d
    0.00 :   54be5:  jmp    54507 <__GI___printf_fp_l+0x677>
    0.00 :   54bea:  nopw   0x0(%rax,%rax,1)
    0.00 :   54bf0:  call   78be0 <_IO_padn>
    0.00 :   54bf5:  jmp    5439f <__GI___printf_fp_l+0x50f>
    0.00 :   54bfa:  nopw   0x0(%rax,%rax,1)
    0.00 :   54c00:  lea    -0x60(%rbp),%r14
    0.00 :   54c04:  movdqa -0xd0(%rbp),%xmm0
    0.00 :   54c0c:  lea    -0xa4(%rbp),%rcx
    0.00 :   54c13:  mov    $0x2,%esi
    0.00 :   54c18:  lea    -0x98(%rbp),%rdx
    0.00 :   54c1f:  mov    %r14,%rdi
    0.00 :   54c22:  call   4f5c0 <__mpn_extract_float128>
    0.00 :   54c27:  mov    %eax,%r13d
    0.00 :   54c2a:  mov    %rax,%r12
    0.00 :   54c2d:  shl    $0x6,%r13d
    0.00 :   54c31:  sub    $0x70,%r13d
    0.00 :   54c35:  jmp    54507 <__GI___printf_fp_l+0x677>
    0.00 :   54c3a:  nopw   0x0(%rax,%rax,1)
    0.00 :   54c40:  and    $0x10,%r14d
    0.00 :   54c44:  jne    54ced <__GI___printf_fp_l+0xe5d>
    0.00 :   54c4a:  mov    -0xbc(%rbp),%eax
    0.00 :   54c50:  test   %eax,%eax
    0.00 :   54c52:  jne    56961 <__GI___printf_fp_l+0x2ad1>
    0.00 :   54c58:  xor    %r15d,%r15d
    0.00 :   54c5b:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   54c60:  movzbl %dl,%esi
    0.00 :   54c63:  mov    %rbx,%rdi
    0.00 :   54c66:  mov    %rcx,-0xe0(%rbp)
    0.00 :   54c6d:  mov    %r8b,-0xd0(%rbp)
    0.00 :   54c74:  call   84a60 <__overflow>
    0.00 :   54c79:  movzbl -0xd0(%rbp),%r8d
    0.00 :   54c81:  mov    -0xe0(%rbp),%rcx
    0.00 :   54c88:  cmp    $0xffffffff,%eax
    0.00 :   54c8b:  jne    54360 <__GI___printf_fp_l+0x4d0>
    0.00 :   54c91:  mov    $0xffffffff,%r14d
    0.00 :   54c97:  jmp    543ab <__GI___printf_fp_l+0x51b>
    0.00 :   54c9c:  mov    -0xb8(%rbp),%rax
    0.00 :   54ca3:  movzbl 0xc(%rax),%eax
    0.00 :   54ca7:  test   $0x40,%al
    0.00 :   54ca9:  je     54df7 <__GI___printf_fp_l+0xf67>
    0.00 :   54caf:  mov    %r13d,%r12d
    0.00 :   54cb2:  mov    $0x1,%r8d
    0.00 :   54cb8:  mov    0xa0(%rbx),%rax
    0.00 :   54cbf:  test   %rax,%rax
    0.00 :   54cc2:  je     56625 <__GI___printf_fp_l+0x2795>
    0.00 :   54cc8:  mov    0x20(%rax),%rdx
    0.00 :   54ccc:  cmp    0x28(%rax),%rdx
    0.00 :   54cd0:  jae    56625 <__GI___printf_fp_l+0x2795>
    0.00 :   54cd6:  lea    0x4(%rdx),%rcx
    0.00 :   54cda:  add    $0x1,%r12d
    0.00 :   54cde:  mov    %rcx,0x20(%rax)
    0.00 :   54ce2:  movl   $0x2b,(%rdx)
    0.00 :   54ce8:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   54ced:  mov    -0xbc(%rbp),%eax
    0.00 :   54cf3:  xor    %r14d,%r14d
    0.00 :   54cf6:  test   %eax,%eax
    0.00 :   54cf8:  jne    54e0b <__GI___printf_fp_l+0xf7b>
    0.00 :   54cfe:  mov    0x28(%rbx),%rax
    0.00 :   54d02:  cmp    0x30(%rbx),%rax
    0.00 :   54d06:  jae    56a2a <__GI___printf_fp_l+0x2b9a>
    0.00 :   54d0c:  lea    0x1(%rax),%rsi
    0.00 :   54d10:  lea    0x1(%r14),%r15d
    0.00 :   54d14:  mov    %rsi,0x28(%rbx)
    0.00 :   54d18:  movb   $0x20,(%rax)
    0.00 :   54d1b:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   54d20:  mov    0x40(%rcx),%rsi
    0.00 :   54d24:  mov    %rsi,-0x118(%rbp)
    0.00 :   54d2b:  mov    -0x118(%rbp),%rsi
    0.00 :   54d32:  xor    %ecx,%ecx
    0.00 :   54d34:  cmpb   $0x0,(%rsi)
    0.00 :   54d37:  movzbl (%rsi),%esi
    0.00 :   54d3a:  cmovne -0xe8(%rbp),%rcx
    0.00 :   54d42:  neg    %sil
    0.00 :   54d45:  sbb    %edi,%edi
    0.00 :   54d47:  mov    %rcx,-0xe8(%rbp)
    0.00 :   54d4e:  and    $0xfffffffe,%edi
    0.00 :   54d51:  mov    %edi,-0x108(%rbp)
    0.00 :   54d57:  jmp    53f42 <__GI___printf_fp_l+0xb2>
    0.00 :   54d5c:  mov    0x50(%rcx),%rdi
    0.00 :   54d60:  mov    %rdi,-0x118(%rbp)
    0.00 :   54d67:  jmp    54d2b <__GI___printf_fp_l+0xe9b>
    0.00 :   54d69:  mov    -0xb8(%rbp),%rax
    0.00 :   54d70:  movzbl 0xc(%rax),%eax
    0.00 :   54d74:  test   $0x40,%al
    0.00 :   54d76:  jne    54e40 <__GI___printf_fp_l+0xfb0>
    0.00 :   54d7c:  test   $0x10,%al
    0.00 :   54d7e:  jne    56732 <__GI___printf_fp_l+0x28a2>
    0.00 :   54d84:  mov    %r13d,%r15d
    0.00 :   54d87:  mov    $0x1,%r8d
    0.00 :   54d8d:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   54d92:  movaps -0xd0(%rbp),%xmm5
    0.00 :   54d99:  movmskps %xmm5,%r12d
    0.00 :   54d9d:  and    $0x8,%r12d
    0.00 :   54da1:  mov    -0xb8(%rbp),%rax
    0.00 :   54da8:  mov    %r12d,-0xa4(%rbp)
    0.00 :   54daf:  lea    0x1421d7(%rip),%rcx        # 196f8d <not_available+0xd0>
    0.00 :   54db6:  lea    0x14c52b(%rip),%r15        # 1a12e8 <default_rwlockattr+0x2f8>
    0.00 :   54dbd:  movslq 0x8(%rax),%rdx
    0.00 :   54dc1:  mov    0x17e030(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   54dc8:  mov    %fs:(%rax),%rax
    0.00 :   54dcc:  testb  $0x1,0x1(%rax,%rdx,2)
    0.00 :   54dd1:  lea    0x1422a0(%rip),%rax        # 197078 <not_available+0x1bb>
    0.00 :   54dd8:  cmovne %rax,%rcx
    0.00 :   54ddc:  lea    0x14c4e5(%rip),%rax        # 1a12c8 <default_rwlockattr+0x2d8>
    0.00 :   54de3:  cmovne %rax,%r15
    0.00 :   54de7:  jmp    5400e <__GI___printf_fp_l+0x17e>
    0.00 :   54dec:  orq    $0x0,-0x8(%rsp,%rdx,1)
    0.00 :   54df2:  jmp    54571 <__GI___printf_fp_l+0x6e1>
    0.00 :   54df7:  mov    %r13d,%r12d
    0.00 :   54dfa:  mov    $0x1,%r8d
    0.00 :   54e00:  mov    %r13d,%edx
    0.00 :   54e03:  test   $0x10,%al
    0.00 :   54e05:  je     56967 <__GI___printf_fp_l+0x2ad7>
    0.00 :   54e0b:  mov    0xa0(%rbx),%rax
    0.00 :   54e12:  test   %rax,%rax
    0.00 :   54e15:  je     56854 <__GI___printf_fp_l+0x29c4>
    0.00 :   54e1b:  mov    0x20(%rax),%rdx
    0.00 :   54e1f:  cmp    0x28(%rax),%rdx
    0.00 :   54e23:  jae    56854 <__GI___printf_fp_l+0x29c4>
    0.00 :   54e29:  lea    0x4(%rdx),%rcx
    0.00 :   54e2d:  add    $0x1,%r12d
    0.00 :   54e31:  mov    %rcx,0x20(%rax)
    0.00 :   54e35:  movl   $0x20,(%rdx)
    0.00 :   54e3b:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   54e40:  mov    %r13d,%r15d
    0.00 :   54e43:  mov    $0x1,%r8d
    0.00 :   54e49:  jmp    5431a <__GI___printf_fp_l+0x48a>
    0.00 :   54e4e:  xchg   %ax,%ax
    0.00 :   54e50:  mov    0x8(%r14),%rax
    0.00 :   54e54:  lea    0x1372c5(%rip),%rsi        # 18c120 <__tens>
    0.00 :   54e5b:  add    $0x8,%rdi
    0.00 :   54e5f:  lea    0x1(%rax),%rdx
    0.00 :   54e63:  mov    (%r14),%rax
    0.00 :   54e66:  mov    %rdx,-0x68(%rbp)
    0.00 :   54e6a:  shl    $0x3,%rdx
    0.00 :   54e6e:  lea    (%rsi,%rax,8),%rsi
    0.00 :   54e72:  call   26610 <*ABS*+0x9e3e0@plt>
    0.00 :   54e77:  mov    -0x70(%rbp),%rax
    0.00 :   54e7b:  movq   $0x0,(%rax)
    0.00 :   54e82:  mov    -0x68(%rbp),%rdx
    0.00 :   54e86:  addl   $0x40,-0x98(%rbp)
    0.00 :   54e8d:  jmp    54714 <__GI___printf_fp_l+0x884>
    0.00 :   54e92:  nopw   0x0(%rax,%rax,1)
    0.00 :   54e98:  sub    $0x2,%rdx
    0.00 :   54e9c:  mov    %rdx,-0x68(%rbp)
    0.00 :   54ea0:  jmp    54714 <__GI___printf_fp_l+0x884>
    0.00 :   54ea5:  nopl   (%rax)
    0.00 :   54ea8:  mov    -0x90(%rbp),%rax
    0.00 :   54eaf:  cmpq   $0x0,(%rax)
    0.00 :   54eb3:  jne    54b81 <__GI___printf_fp_l+0xcf1>
    0.00 :   54eb9:  mov    -0x148(%rbp),%rbx
    0.00 :   54ec0:  mov    %r12,%r8
    0.00 :   54ec3:  mov    -0x4(%r15),%r12d
    0.00 :   54ec7:  mov    -0xc0(%rbp),%eax
    0.00 :   54ecd:  cmp    %eax,%r12d
    0.00 :   54ed0:  jne    54ed6 <__GI___printf_fp_l+0x1046>
    0.00 :   54ed2:  mov    -0x8(%r15),%r12d
    0.00 :   54ed6:  mov    -0xd0(%rbp),%rdi
    0.00 :   54edd:  mov    %r8,-0x148(%rbp)
    0.00 :   54ee4:  mov    %esi,-0xe0(%rbp)
    0.00 :   54eea:  call   53a60 <hack_digit>
    0.00 :   54eef:  mov    -0xe0(%rbp),%esi
    0.00 :   54ef5:  mov    -0x148(%rbp),%r8
    0.00 :   54efc:  cmp    $0x30,%eax
    0.00 :   54eff:  mov    %eax,%edi
    0.00 :   54f01:  setne  %r9b
    0.00 :   54f05:  cmp    $0x35,%eax
    0.00 :   54f08:  setne  %al
    0.00 :   54f0b:  and    %al,%r9b
    0.00 :   54f0e:  jne    54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   54f10:  mov    -0x88(%rbp),%rax
    0.00 :   54f17:  cmp    $0x1,%rax
    0.00 :   54f1b:  je     56025 <__GI___printf_fp_l+0x2195>
    0.00 :   54f21:  cmpq   $0x0,-0x78(%rbp)
    0.00 :   54f26:  jne    54f4e <__GI___printf_fp_l+0x10be>
    0.00 :   54f28:  test   %rax,%rax
    0.00 :   54f2b:  je     54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   54f2d:  mov    -0x90(%rbp),%r10
    0.00 :   54f34:  jmp    54f46 <__GI___printf_fp_l+0x10b6>
    0.00 :   54f36:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54f40:  sub    $0x1,%rax
    0.00 :   54f44:  je     54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   54f46:  cmpq   $0x0,-0x8(%r10,%rax,8)
    0.00 :   54f4c:  je     54f40 <__GI___printf_fp_l+0x10b0>
    0.00 :   54f4e:  mov    $0x1,%r9d
    0.00 :   54f54:  fnstcw -0xa6(%rbp)
    0.00 :   54f5a:  movzwl -0xa6(%rbp),%eax
    0.00 :   54f61:  and    $0xc00,%ax
    0.00 :   54f65:  cmp    $0x800,%ax
    0.00 :   54f69:  je     55e07 <__GI___printf_fp_l+0x1f77>
    0.00 :   54f6f:  ja     553d0 <__GI___printf_fp_l+0x1540>
    0.00 :   54f75:  test   %ax,%ax
    0.00 :   54f78:  jne    553e0 <__GI___printf_fp_l+0x1550>
    0.00 :   54f7e:  cmp    $0x34,%edi
    0.00 :   54f81:  jle    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   54f83:  and    $0x1,%r12d
    0.00 :   54f87:  jne    55403 <__GI___printf_fp_l+0x1573>
    0.00 :   54f8d:  test   %r9b,%r9b
    0.00 :   54f90:  jne    55403 <__GI___printf_fp_l+0x1573>
    0.00 :   54f96:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54fa0:  cmp    %esi,%r14d
    0.00 :   54fa3:  jg     54fbd <__GI___printf_fp_l+0x112d>
    0.00 :   54fa5:  jmp    54fc4 <__GI___printf_fp_l+0x1134>
    0.00 :   54fa7:  nopw   0x0(%rax,%rax,1)
    0.00 :   54fb0:  sub    $0x1,%r14d
    0.00 :   54fb4:  sub    $0x4,%r15
    0.00 :   54fb8:  cmp    %esi,%r14d
    0.00 :   54fbb:  jle    54fc4 <__GI___printf_fp_l+0x1134>
    0.00 :   54fbd:  cmpl   $0x30,-0x4(%r15)
    0.00 :   54fc2:  je     54fb0 <__GI___printf_fp_l+0x1120>
    0.00 :   54fc4:  test   %r14d,%r14d
    0.00 :   54fc7:  jne    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   54fc9:  mov    -0xb8(%rbp),%rax
    0.00 :   54fd0:  testb  $0x8,0xc(%rax)
    0.00 :   54fd4:  jne    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   54fd6:  mov    -0xc0(%rbp),%eax
    0.00 :   54fdc:  cmp    %eax,-0x4(%r15)
    0.00 :   54fe0:  jne    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   54fe2:  sub    $0x4,%r15
    0.00 :   54fe6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   54ff0:  mov    -0xe8(%rbp),%rsi
    0.00 :   54ff7:  test   %rsi,%rsi
    0.00 :   54ffa:  je     55145 <__GI___printf_fp_l+0x12b5>
    0.00 :   55000:  mov    -0x134(%rbp),%edx
    0.00 :   55006:  mov    %edx,%r12d
    0.00 :   55009:  cmp    %edx,-0x100(%rbp)
    0.00 :   5500f:  je     55067 <__GI___printf_fp_l+0x11d7>
    0.00 :   55011:  movl   $0x0,-0x12c(%rbp)
    0.00 :   5501b:  movzbl (%rsi),%eax
    0.00 :   5501e:  mov    %al,-0xd0(%rbp)
    0.00 :   55024:  sub    $0x1,%eax
    0.00 :   55027:  cmp    $0x7d,%al
    0.00 :   55029:  ja     55145 <__GI___printf_fp_l+0x12b5>
    0.00 :   5502f:  mov    %rsi,%rax
    0.00 :   55032:  xor    %esi,%esi
    0.00 :   55034:  jmp    5505a <__GI___printf_fp_l+0x11ca>
    0.00 :   55036:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   55040:  movzbl 0x1(%rax),%ecx
    0.00 :   55044:  add    $0x1,%rax
    0.00 :   55048:  add    $0x1,%esi
    0.00 :   5504b:  sub    %edi,%edx
    0.00 :   5504d:  cmp    $0x7e,%cl
    0.00 :   55050:  ja     55061 <__GI___printf_fp_l+0x11d1>
    0.00 :   55052:  test   %cl,%cl
    0.00 :   55054:  je     565c0 <__GI___printf_fp_l+0x2730>
    0.00 :   5505a:  movsbl (%rax),%edi
    0.00 :   5505d:  cmp    %edx,%edi
    0.00 :   5505f:  jb     55040 <__GI___printf_fp_l+0x11b0>
    0.00 :   55061:  mov    %esi,-0x12c(%rbp)
    0.00 :   55067:  mov    -0x12c(%rbp),%edi
    0.00 :   5506d:  test   %edi,%edi
    0.00 :   5506f:  je     55145 <__GI___printf_fp_l+0x12b5>
    0.00 :   55075:  movslq -0x134(%rbp),%rax
    0.00 :   5507c:  movslq %edi,%r13
    0.00 :   5507f:  mov    %r15,%rdx
    0.00 :   55082:  mov    %r8,-0xd0(%rbp)
    0.00 :   55089:  lea    (%r8,%rax,4),%rsi
    0.00 :   5508d:  add    %r13,%rax
    0.00 :   55090:  lea    0x0(,%rax,4),%r14
    0.00 :   55098:  sub    %rsi,%rdx
    0.00 :   5509b:  lea    (%r8,%r14,1),%rdi
    0.00 :   5509f:  sar    $0x2,%rdx
    0.00 :   550a3:  call   b3c20 <wmemmove>
    0.00 :   550a8:  mov    -0xe8(%rbp),%rsi
    0.00 :   550af:  mov    -0xd0(%rbp),%r8
    0.00 :   550b6:  mov    -0x108(%rbp),%r10d
    0.00 :   550bd:  movsbl (%rsi),%edi
    0.00 :   550c0:  lea    -0x4(%r8,%r14,1),%r9
    0.00 :   550c5:  nopl   (%rax)
    0.00 :   550c8:  mov    %r12d,%eax
    0.00 :   550cb:  mov    %r9,%rdx
    0.00 :   550ce:  sub    %edi,%r12d
    0.00 :   550d1:  nopl   0x0(%rax)
    0.00 :   550d8:  lea    -0x1(%rax),%ecx
    0.00 :   550db:  sub    $0x4,%rdx
    0.00 :   550df:  mov    %rcx,%rax
    0.00 :   550e2:  mov    (%r8,%rcx,4),%ecx
    0.00 :   550e6:  mov    %ecx,0x4(%rdx)
    0.00 :   550e9:  cmp    %r12d,%eax
    0.00 :   550ec:  jne    550d8 <__GI___printf_fp_l+0x1248>
    0.00 :   550ee:  lea    -0x1(%rdi),%eax
    0.00 :   550f1:  mov    %rax,%rdx
    0.00 :   550f4:  neg    %rax
    0.00 :   550f7:  not    %rdx
    0.00 :   550fa:  lea    (%r9,%rdx,4),%rdx
    0.00 :   550fe:  lea    -0x8(%r9,%rax,4),%r9
    0.00 :   55103:  mov    %r10d,(%rdx)
    0.00 :   55106:  movzbl 0x1(%rsi),%eax
    0.00 :   5510a:  cmp    $0x7e,%al
    0.00 :   5510c:  ja     55128 <__GI___printf_fp_l+0x1298>
    0.00 :   5510e:  test   %al,%al
    0.00 :   55110:  je     553c8 <__GI___printf_fp_l+0x1538>
    0.00 :   55116:  add    $0x1,%rsi
    0.00 :   5511a:  movsbl %al,%edi
    0.00 :   5511d:  cmp    %r12d,%edi
    0.00 :   55120:  jb     550c8 <__GI___printf_fp_l+0x1238>
    0.00 :   55122:  nopw   0x0(%rax,%rax,1)
    0.00 :   55128:  lea    -0x1(%r12),%eax
    0.00 :   5512d:  sub    $0x4,%r9
    0.00 :   55131:  mov    %rax,%r12
    0.00 :   55134:  mov    (%r8,%rax,4),%eax
    0.00 :   55138:  mov    %eax,0x4(%r9)
    0.00 :   5513c:  cmp    %r9,%r8
    0.00 :   5513f:  jb     55128 <__GI___printf_fp_l+0x1298>
    0.00 :   55141:  lea    (%r15,%r13,4),%r15
   15.28 :   55145:  mov    -0x9c(%rbp),%edx // libc.so.6[55145]
    0.00 :   5514b:  cmp    $0x66,%edx
    0.00 :   5514e:  je     551d0 <__GI___printf_fp_l+0x1340>
    0.00 :   55154:  mov    -0xa0(%rbp),%ecx
    0.00 :   5515a:  mov    -0x98(%rbp),%eax
    0.00 :   55160:  mov    $0x2b,%edi
    0.00 :   55165:  test   %ecx,%ecx
    0.00 :   55167:  jne    55a17 <__GI___printf_fp_l+0x1b87>
    0.00 :   5516d:  movd   %edx,%xmm0
    0.00 :   55171:  movd   %edi,%xmm4
    0.00 :   55175:  lea    0x8(%r15),%rsi
    0.00 :   55179:  punpckldq %xmm4,%xmm0
    0.00 :   5517d:  movq   %xmm0,(%r15)
    0.00 :   55182:  cmp    $0x9,%eax
    0.00 :   55185:  jle    55a3d <__GI___printf_fp_l+0x1bad>
    0.00 :   5518b:  mov    $0xa,%ecx
    0.00 :   55190:  lea    (%rcx,%rcx,4),%ecx
    0.00 :   55193:  add    %ecx,%ecx
    0.00 :   55195:  cmp    %eax,%ecx
    0.00 :   55197:  jle    55190 <__GI___printf_fp_l+0x1300>
    0.00 :   55199:  mov    $0xcccccccd,%r9d
    0.00 :   5519f:  nop
    0.00 :   551a0:  mov    %ecx,%ecx
    0.00 :   551a2:  cltd
    0.00 :   551a3:  add    $0x4,%rsi
    0.00 :   551a7:  mov    %rcx,%rdi
    0.00 :   551aa:  imul   %r9,%rcx
    0.00 :   551ae:  shr    $0x23,%rcx
    0.00 :   551b2:  idiv   %ecx
    0.00 :   551b4:  add    $0x30,%eax
    0.00 :   551b7:  mov    %eax,-0x4(%rsi)
    0.00 :   551ba:  mov    %edx,%eax
    0.00 :   551bc:  cmp    $0x6d,%edi
    0.00 :   551bf:  jg     551a0 <__GI___printf_fp_l+0x1310>
    0.00 :   551c1:  mov    %edx,-0x98(%rbp)
    0.00 :   551c7:  add    $0x30,%eax
    0.00 :   551ca:  lea    0x4(%rsi),%r15
    0.00 :   551ce:  mov    %eax,(%rsi)
    0.00 :   551d0:  mov    -0xb8(%rbp),%rax
    0.00 :   551d7:  mov    -0xa4(%rbp),%r14d
    0.00 :   551de:  mov    -0x138(%rbp),%edi
    0.00 :   551e4:  movzbl 0xc(%rax),%edx
    0.00 :   551e8:  mov    %r15,%rax
    0.00 :   551eb:  sub    %r8,%rax
    0.00 :   551ee:  mov    %rax,-0xe0(%rbp)
    0.00 :   551f5:  mov    %edx,%esi
    0.00 :   551f7:  sar    $0x2,%rax
    0.00 :   551fb:  and    $0x20,%esi
    0.00 :   551fe:  neg    %rax
    0.00 :   55201:  test   %r14d,%r14d
    0.00 :   55204:  je     555e0 <__GI___printf_fp_l+0x1750>
    0.00 :   5520a:  lea    -0x1(%rdi,%rax,1),%eax
    0.00 :   5520e:  mov    %eax,-0xd0(%rbp)
    0.00 :   55214:  test   %sil,%sil
    0.00 :   55217:  jne    55828 <__GI___printf_fp_l+0x1998>
    0.00 :   5521d:  mov    -0xb8(%rbp),%rax
    0.00 :   55224:  mov    -0xd0(%rbp),%edx
    0.00 :   5522a:  mov    0x10(%rax),%esi
    0.00 :   5522d:  test   %edx,%edx
    0.00 :   5522f:  jle    55828 <__GI___printf_fp_l+0x1998>
    0.00 :   55235:  cmp    $0x30,%esi
    0.00 :   55238:  je     55828 <__GI___printf_fp_l+0x1998>
    0.00 :   5523e:  mov    -0xbc(%rbp),%edx
    0.00 :   55244:  mov    -0xd0(%rbp),%r12d
    0.00 :   5524b:  mov    %r8,-0xe8(%rbp)
    0.00 :   55252:  mov    %rbx,%rdi
    0.00 :   55255:  test   %edx,%edx
    0.00 :   55257:  mov    %r12,%rdx
    0.00 :   5525a:  je     563d6 <__GI___printf_fp_l+0x2546>
    0.00 :   55260:  call   7a890 <_IO_wpadn>
    0.00 :   55265:  mov    -0xe8(%rbp),%r8
    0.00 :   5526c:  cmp    %r12,%rax
    0.00 :   5526f:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   55275:  mov    -0xa4(%rbp),%eax
    0.00 :   5527b:  test   %eax,%eax
    0.00 :   5527d:  je     561a9 <__GI___printf_fp_l+0x2319>
    0.00 :   55283:  mov    -0xd0(%rbp),%r14d
    0.00 :   5528a:  mov    0xa0(%rbx),%rax
    0.00 :   55291:  test   %rax,%rax
    0.00 :   55294:  je     55f88 <__GI___printf_fp_l+0x20f8>
    0.00 :   5529a:  mov    0x20(%rax),%rdx
    0.00 :   5529e:  cmp    0x28(%rax),%rdx
    0.00 :   552a2:  jae    55f88 <__GI___printf_fp_l+0x20f8>
    0.00 :   552a8:  lea    0x4(%rdx),%rsi
    0.00 :   552ac:  add    $0x1,%r14d
    0.00 :   552b0:  mov    %rsi,0x20(%rax)
    0.00 :   552b4:  mov    -0xb8(%rbp),%rax
    0.00 :   552bb:  movl   $0x2d,(%rdx)
    0.00 :   552c1:  testb  $0x20,0xc(%rax)
    0.00 :   552c5:  je     55867 <__GI___printf_fp_l+0x19d7>
    0.00 :   552cb:  movq   $0x0,-0x120(%rbp)
    0.00 :   552d6:  xor    %edi,%edi
    0.00 :   552d8:  xor    %r11d,%r11d
    0.00 :   552db:  nopl   0x0(%rax,%rax,1)
    0.00 :   552e0:  mov    -0xb8(%rbp),%rax
    0.00 :   552e7:  mov    %r11,%r13
    0.00 :   552ea:  testb  $0x8,0xd(%rax)
    0.00 :   552ee:  jne    5639a <__GI___printf_fp_l+0x250a>
    0.00 :   552f4:  mov    -0xbc(%rbp),%r10d
    0.00 :   552fb:  test   %r10d,%r10d
    0.00 :   552fe:  jne    558ab <__GI___printf_fp_l+0x1a1b>
    0.00 :   55304:  sub    %r11,%rdi
    0.00 :   55307:  mov    %rdi,%r15
    0.00 :   5530a:  mov    %rdi,%r12
    0.00 :   5530d:  cmp    $0x14,%rdi
    0.00 :   55311:  jg     55e32 <__GI___printf_fp_l+0x1fa2>
    0.00 :   55317:  mov    %r11,%r12
    0.00 :   5531a:  test   %rdi,%rdi
    0.00 :   5531d:  je     554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   55323:  mov    %r14d,-0xe0(%rbp)
    0.00 :   5532a:  mov    %r11,%r14
    0.00 :   5532d:  jmp    55349 <__GI___printf_fp_l+0x14b9>
    0.00 :   5532f:  nop
    0.00 :   55330:  lea    0x1(%rax),%rcx
    0.00 :   55334:  mov    %rcx,0x28(%rbx)
    0.00 :   55338:  mov    %dl,(%rax)
    0.00 :   5533a:  mov    %r14,%rax
    0.00 :   5533d:  sub    %r12,%rax
    0.00 :   55340:  add    %r15,%rax
    0.00 :   55343:  je     55eb8 <__GI___printf_fp_l+0x2028>
    0.00 :   55349:  add    $0x1,%r12
    0.00 :   5534d:  mov    0x28(%rbx),%rax
    0.00 :   55351:  movzbl -0x1(%r12),%edx
    0.00 :   55357:  cmp    0x30(%rbx),%rax
    0.00 :   5535b:  jb     55330 <__GI___printf_fp_l+0x14a0>
    0.00 :   5535d:  movzbl %dl,%esi
    0.00 :   55360:  mov    %rbx,%rdi
    0.00 :   55363:  call   84a60 <__overflow>
    0.00 :   55368:  cmp    $0xffffffff,%eax
    0.00 :   5536b:  jne    5533a <__GI___printf_fp_l+0x14aa>
    0.00 :   5536d:  mov    -0x140(%rbp),%edi
    0.00 :   55373:  test   %edi,%edi
    0.00 :   55375:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   5537b:  mov    %r13,%rdi
    0.00 :   5537e:  call   26420 <free@plt>
    0.00 :   55383:  mov    -0x128(%rbp),%rdi
    0.00 :   5538a:  call   26420 <free@plt>
    0.00 :   5538f:  jmp    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   55394:  nopl   0x0(%rax)
    0.00 :   55398:  mov    -0xf0(%rbp),%eax
    0.00 :   5539e:  addl   $0x1,-0xe0(%rbp)
    0.00 :   553a5:  test   %eax,%eax
    0.00 :   553a7:  jle    54b5e <__GI___printf_fp_l+0xcce>
    0.00 :   553ad:  addl   $0x1,-0xfc(%rbp)
    0.00 :   553b4:  mov    -0xfc(%rbp),%esi
    0.00 :   553ba:  lea    (%rsi,%rax,1),%r13d
    0.00 :   553be:  jmp    54b5e <__GI___printf_fp_l+0xcce>
    0.00 :   553c3:  nopl   0x0(%rax,%rax,1)
    0.00 :   553c8:  movzbl (%rsi),%eax
    0.00 :   553cb:  jmp    5511a <__GI___printf_fp_l+0x128a>
    0.00 :   553d0:  cmp    $0xc00,%ax
    0.00 :   553d4:  je     54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   553da:  jmp    2690e <__GI___printf_fp_l.cold>
    0.00 :   553df:  nop
    0.00 :   553e0:  cmp    $0x400,%ax
    0.00 :   553e4:  jne    56ac8 <__GI___printf_fp_l+0x2c38>
    0.00 :   553ea:  mov    -0xa4(%rbp),%r10d
    0.00 :   553f1:  test   %r10d,%r10d
    0.00 :   553f4:  je     54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   553fa:  cmp    $0x34,%edi
    0.00 :   553fd:  jle    54f8d <__GI___printf_fp_l+0x10fd>
    0.00 :   55403:  mov    -0x4(%r15),%edi
    0.00 :   55407:  mov    %r15,%rax
    0.00 :   5540a:  test   %r14d,%r14d
    0.00 :   5540d:  je     55980 <__GI___printf_fp_l+0x1af0>
    0.00 :   55413:  lea    -0x4(%r15),%rax
    0.00 :   55417:  xor    %esi,%esi
    0.00 :   55419:  cmp    $0x39,%edi
    0.00 :   5541c:  jne    55449 <__GI___printf_fp_l+0x15b9>
    0.00 :   5541e:  mov    -0xc0(%rbp),%edx
    0.00 :   55424:  cmp    %edi,%edx
    0.00 :   55426:  jne    55435 <__GI___printf_fp_l+0x15a5>
    0.00 :   55428:  jmp    55449 <__GI___printf_fp_l+0x15b9>
    0.00 :   5542a:  nopw   0x0(%rax,%rax,1)
    0.00 :   55430:  cmp    $0x39,%edi
    0.00 :   55433:  jne    55449 <__GI___printf_fp_l+0x15b9>
    0.00 :   55435:  movl   $0x30,(%rax)
    0.00 :   5543b:  mov    -0x4(%rax),%edi
    0.00 :   5543e:  sub    $0x4,%rax
    0.00 :   55442:  add    $0x1,%esi
    0.00 :   55445:  cmp    %edx,%edi
    0.00 :   55447:  jne    55430 <__GI___printf_fp_l+0x15a0>
    0.00 :   55449:  mov    -0xf0(%rbp),%edx
    0.00 :   5544f:  cmp    %edx,%esi
    0.00 :   55451:  jne    5546c <__GI___printf_fp_l+0x15dc>
    0.00 :   55453:  mov    -0xfc(%rbp),%ecx
    0.00 :   55459:  test   %ecx,%ecx
    0.00 :   5545b:  setg   %sil
    0.00 :   5545f:  cmp    $0x1,%sil
    0.00 :   55463:  adc    $0xffffffff,%ecx
    0.00 :   55466:  mov    %ecx,-0xfc(%rbp)
    0.00 :   5546c:  mov    -0xc0(%rbp),%esi
    0.00 :   55472:  cmp    %esi,%edi
    0.00 :   55474:  je     5655b <__GI___printf_fp_l+0x26cb>
    0.00 :   5547a:  add    $0x1,%edi
    0.00 :   5547d:  mov    %edi,(%rax)
    0.00 :   5547f:  mov    -0xfc(%rbp),%esi
    0.00 :   55485:  mov    -0xf0(%rbp),%edx
    0.00 :   5548b:  add    %edx,%esi
    0.00 :   5548d:  cmp    %edi,-0xc0(%rbp)
    0.00 :   55493:  je     55980 <__GI___printf_fp_l+0x1af0>
    0.00 :   55499:  cmp    %esi,%r14d
    0.00 :   5549c:  jg     54fbd <__GI___printf_fp_l+0x112d>
    0.00 :   554a2:  jmp    54ff0 <__GI___printf_fp_l+0x1160>
    0.00 :   554a7:  nopw   0x0(%rax,%rax,1)
    0.00 :   554b0:  mov    0xd8(%rbx),%r15
    0.00 :   554b7:  lea    0x17a542(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   554be:  lea    0x17b2a3(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   554c5:  sub    %rdx,%rax
    0.00 :   554c8:  mov    %r15,%rcx
    0.00 :   554cb:  sub    %rdx,%rcx
    0.00 :   554ce:  cmp    %rax,%rcx
    0.00 :   554d1:  jae    568d6 <__GI___printf_fp_l+0x2a46>
    0.00 :   554d7:  mov    0x38(%r15),%rax
    0.00 :   554db:  mov    %r8,%r11
    0.00 :   554de:  mov    %r12,%rdx
    0.00 :   554e1:  mov    %r11,%rsi
    0.00 :   554e4:  mov    %rbx,%rdi
    0.00 :   554e7:  call   *%rax
    0.00 :   554e9:  cmp    %r12,%rax
    0.00 :   554ec:  jne    5536d <__GI___printf_fp_l+0x14dd>
    0.00 :   554f2:  add    %r12d,%r14d
    0.00 :   554f5:  cmpq   $0x0,-0x150(%rbp)
    0.00 :   554fd:  jne    56510 <__GI___printf_fp_l+0x2680>
    0.00 :   55503:  mov    -0xb8(%rbp),%rax
    0.00 :   5550a:  testb  $0x20,0xc(%rax)
    0.00 :   5550e:  je     543ab <__GI___printf_fp_l+0x51b>
    0.00 :   55514:  mov    -0xd0(%rbp),%esi
    0.00 :   5551a:  test   %esi,%esi
    0.00 :   5551c:  jle    543ab <__GI___printf_fp_l+0x51b>
    0.00 :   55522:  mov    -0xbc(%rbp),%r8d
    0.00 :   55529:  mov    %esi,%r12d
    0.00 :   5552c:  mov    %rbx,%rdi
    0.00 :   5552f:  mov    0x10(%rax),%esi
    0.00 :   55532:  mov    %r12,%rdx
    0.00 :   55535:  test   %r8d,%r8d
    0.00 :   55538:  je     5619f <__GI___printf_fp_l+0x230f>
    0.00 :   5553e:  call   7a890 <_IO_wpadn>
    0.00 :   55543:  cmp    %r12,%rax
    0.00 :   55546:  jne    5536d <__GI___printf_fp_l+0x14dd>
    0.00 :   5554c:  mov    -0xd0(%rbp),%eax
    0.00 :   55552:  add    %eax,%r14d
    0.00 :   55555:  jmp    543ab <__GI___printf_fp_l+0x51b>
    0.00 :   5555a:  test   %ecx,%ecx
    0.00 :   5555c:  js     55afb <__GI___printf_fp_l+0x1c6b>
    0.00 :   55562:  add    %r13d,%ecx
    0.00 :   55565:  mov    %r12,%rdx
    0.00 :   55568:  mov    %r14,%rsi
    0.00 :   5556b:  call   4def0 <__mpn_lshift>
    0.00 :   55570:  mov    %rax,%rcx
    0.00 :   55573:  mov    -0x88(%rbp),%rax
    0.00 :   5557a:  lea    0x1(%rax),%rdx
    0.00 :   5557e:  mov    %rdx,-0x88(%rbp)
    0.00 :   55585:  mov    -0x90(%rbp),%rdx
    0.00 :   5558c:  mov    %rcx,(%rdx,%rax,8)
    0.00 :   55590:  movl   $0x0,-0x98(%rbp)
    0.00 :   5559a:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   5559f:  nop
    0.00 :   555a0:  mov    -0x70(%rbp),%rsi
    0.00 :   555a4:  mov    -0x90(%rbp),%rdi
    0.00 :   555ab:  call   4d800 <__mpn_cmp>
    0.00 :   555b0:  test   %eax,%eax
    0.00 :   555b2:  js     54727 <__GI___printf_fp_l+0x897>
    0.00 :   555b8:  mov    -0x68(%rbp),%rdx
    0.00 :   555bc:  jmp    547a0 <__GI___printf_fp_l+0x910>
    0.00 :   555c1:  nopl   0x0(%rax)
    0.00 :   555c8:  movl   $0x0,-0x12c(%rbp)
    0.00 :   555d2:  jmp    549eb <__GI___printf_fp_l+0xb5b>
    0.00 :   555d7:  nopw   0x0(%rax,%rax,1)
    0.00 :   555e0:  test   $0x50,%dl
    0.00 :   555e3:  je     55e1c <__GI___printf_fp_l+0x1f8c>
    0.00 :   555e9:  lea    -0x1(%rdi,%rax,1),%eax
    0.00 :   555ed:  mov    %eax,-0xd0(%rbp)
    0.00 :   555f3:  test   %sil,%sil
    0.00 :   555f6:  jne    55615 <__GI___printf_fp_l+0x1785>
    0.00 :   555f8:  mov    -0xb8(%rbp),%rax
    0.00 :   555ff:  mov    0x10(%rax),%esi
    0.00 :   55602:  mov    -0xd0(%rbp),%eax
    0.00 :   55608:  test   %eax,%eax
    0.00 :   5560a:  jle    55615 <__GI___printf_fp_l+0x1785>
    0.00 :   5560c:  cmp    $0x30,%esi
    0.00 :   5560f:  jne    5523e <__GI___printf_fp_l+0x13ae>
    0.00 :   55615:  test   $0x40,%dl
    0.00 :   55618:  je     55f3f <__GI___printf_fp_l+0x20af>
    0.00 :   5561e:  mov    -0xbc(%rbp),%eax
    0.00 :   55624:  test   %eax,%eax
    0.00 :   55626:  jne    561c4 <__GI___printf_fp_l+0x2334>
    0.00 :   5562c:  xor    %r14d,%r14d
    0.00 :   5562f:  mov    0x28(%rbx),%rax
    0.00 :   55633:  cmp    0x30(%rbx),%rax
    0.00 :   55637:  jae    56a77 <__GI___printf_fp_l+0x2be7>
    0.00 :   5563d:  lea    0x1(%rax),%rdx
    0.00 :   55641:  add    $0x1,%r14d
    0.00 :   55645:  mov    %rdx,0x28(%rbx)
    0.00 :   55649:  movb   $0x2b,(%rax)
    0.00 :   5564c:  mov    -0xb8(%rbp),%rax
    0.00 :   55653:  testb  $0x20,0xc(%rax)
    0.00 :   55657:  jne    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55659:  mov    -0xb8(%rbp),%rax
    0.00 :   55660:  cmpl   $0x30,0x10(%rax)
    0.00 :   55664:  jne    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55666:  mov    -0xd0(%rbp),%esi
    0.00 :   5566c:  test   %esi,%esi
    0.00 :   5566e:  jg     56646 <__GI___printf_fp_l+0x27b6>
    0.00 :   55674:  nopl   0x0(%rax)
    0.00 :   55678:  mov    -0xb8(%rbp),%rax
    0.00 :   5567f:  testb  $0x8,0xd(%rax)
    0.00 :   55683:  je     556a7 <__GI___printf_fp_l+0x1817>
    0.00 :   55685:  mov    -0xf8(%rbp),%rax
    0.00 :   5568c:  mov    -0x120(%rbp),%rdi
    0.00 :   55693:  mov    (%rax),%rax
    0.00 :   55696:  mov    0xa0(%rax),%eax
    0.00 :   5569c:  imul   %rax,%rdi
    0.00 :   556a0:  mov    %rdi,-0x120(%rbp)
    0.00 :   556a7:  mov    -0x110(%rbp),%rdi
    0.00 :   556ae:  mov    %r8,-0xe8(%rbp)
    0.00 :   556b5:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   556ba:  mov    -0x118(%rbp),%rdi
    0.00 :   556c1:  mov    -0xe8(%rbp),%r8
    0.00 :   556c8:  mov    %rax,%r13
    0.00 :   556cb:  test   %rdi,%rdi
    0.00 :   556ce:  je     5611f <__GI___printf_fp_l+0x228f>
    0.00 :   556d4:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   556d9:  mov    -0xe8(%rbp),%r8
    0.00 :   556e0:  mov    %rax,%rdx
    0.00 :   556e3:  movslq -0x12c(%rbp),%rax
    0.00 :   556ea:  imul   %rdx,%rax
    0.00 :   556ee:  mov    -0x120(%rbp),%rsi
    0.00 :   556f5:  lea    0x2(%rsi,%r13,1),%r12
    0.00 :   556fa:  add    %rax,%r12
    0.00 :   556fd:  cmpq   $0x0,-0x150(%rbp)
    0.00 :   55705:  jne    56740 <__GI___printf_fp_l+0x28b0>
    0.00 :   5570b:  lea    0x17(%r12),%rax
    0.00 :   55710:  mov    %rsp,%rdi
    0.00 :   55713:  mov    %rax,%rsi
    0.00 :   55716:  and    $0xfffffffffffff000,%rax
    0.00 :   5571c:  sub    %rax,%rdi
    0.00 :   5571f:  and    $0xfffffffffffffff0,%rsi
    0.00 :   55723:  cmp    %rdi,%rsp
    0.00 :   55726:  je     5573d <__GI___printf_fp_l+0x18ad>
    0.00 :   55728:  sub    $0x1000,%rsp
    0.00 :   5572f:  orq    $0x0,0xff8(%rsp)
    0.00 :   55738:  cmp    %rdi,%rsp
    0.00 :   5573b:  jne    55728 <__GI___printf_fp_l+0x1898>
    0.00 :   5573d:  and    $0xfff,%esi
    0.00 :   55743:  sub    %rsi,%rsp
    0.00 :   55746:  test   %rsi,%rsi
    0.00 :   55749:  je     55751 <__GI___printf_fp_l+0x18c1>
    0.00 :   5574b:  orq    $0x0,-0x8(%rsp,%rsi,1)
    0.00 :   55751:  lea    0xf(%rsp),%r11
    0.00 :   55756:  and    $0xfffffffffffffff0,%r11
    0.00 :   5575a:  lea    (%r11,%r12,1),%rax
    0.00 :   5575e:  mov    %rax,-0x120(%rbp)
    0.00 :   55765:  cmp    %r15,%r8
    0.00 :   55768:  jae    56716 <__GI___printf_fp_l+0x2886>
    0.00 :   5576e:  mov    %r14d,-0xfc(%rbp)
    0.00 :   55775:  mov    %r11,%rdi
    0.00 :   55778:  mov    %r8,%r14
    0.00 :   5577b:  mov    -0x108(%rbp),%r12d
    0.00 :   55782:  mov    %r11,-0xf0(%rbp)
    0.00 :   55789:  mov    %rbx,-0x108(%rbp)
    0.00 :   55790:  mov    %r15,%rbx
    0.00 :   55793:  mov    -0xc0(%rbp),%r15d
    0.00 :   5579a:  mov    %rdx,-0xe8(%rbp)
    0.00 :   557a1:  mov    %r8,-0xf8(%rbp)
    0.00 :   557a8:  jmp    557c4 <__GI___printf_fp_l+0x1934>
    0.00 :   557aa:  nopw   0x0(%rax,%rax,1)
    0.00 :   557b0:  cmp    %edx,%r12d
    0.00 :   557b3:  je     55810 <__GI___printf_fp_l+0x1980>
    0.00 :   557b5:  mov    %dl,(%rdi)
    0.00 :   557b7:  add    $0x1,%rdi
    0.00 :   557bb:  add    $0x4,%r14
    0.00 :   557bf:  cmp    %rbx,%r14
    0.00 :   557c2:  jae    557e7 <__GI___printf_fp_l+0x1957>
    0.00 :   557c4:  mov    (%r14),%edx
    0.00 :   557c7:  cmp    %r15d,%edx
    0.00 :   557ca:  jne    557b0 <__GI___printf_fp_l+0x1920>
    0.00 :   557cc:  mov    -0x110(%rbp),%rsi
    0.00 :   557d3:  mov    %r13,%rdx
    0.00 :   557d6:  add    $0x4,%r14
    0.00 :   557da:  call   263d0 <*ABS*+0x9ec40@plt>
    0.00 :   557df:  mov    %rax,%rdi
    0.00 :   557e2:  cmp    %rbx,%r14
    0.00 :   557e5:  jb     557c4 <__GI___printf_fp_l+0x1934>
    0.00 :   557e7:  mov    %rbx,%r15
    0.00 :   557ea:  mov    -0xf0(%rbp),%r11
   25.88 :   557f1:  mov    -0xf8(%rbp),%r8 // libc.so.6[557f1]
    0.00 :   557f8:  mov    -0xfc(%rbp),%r14d
    0.00 :   557ff:  mov    -0x108(%rbp),%rbx
    0.00 :   55806:  jmp    552e0 <__GI___printf_fp_l+0x1450>
    0.00 :   5580b:  nopl   0x0(%rax,%rax,1)
    0.00 :   55810:  mov    -0xe8(%rbp),%rdx
    0.00 :   55817:  mov    -0x118(%rbp),%rsi
    0.00 :   5581e:  call   263d0 <*ABS*+0x9ec40@plt>
    0.00 :   55823:  mov    %rax,%rdi
    0.00 :   55826:  jmp    557bb <__GI___printf_fp_l+0x192b>
    0.00 :   55828:  mov    -0xbc(%rbp),%eax
    0.00 :   5582e:  xor    %r14d,%r14d
    0.00 :   55831:  test   %eax,%eax
    0.00 :   55833:  jne    5528a <__GI___printf_fp_l+0x13fa>
    0.00 :   55839:  mov    0x28(%rbx),%rax
    0.00 :   5583d:  cmp    0x30(%rbx),%rax
    0.00 :   55841:  jae    5690e <__GI___printf_fp_l+0x2a7e>
    0.00 :   55847:  lea    0x1(%rax),%rdx
    0.00 :   5584b:  add    $0x1,%r14d
    0.00 :   5584f:  mov    %rdx,0x28(%rbx)
    0.00 :   55853:  movb   $0x2d,(%rax)
    0.00 :   55856:  mov    -0xb8(%rbp),%rax
    0.00 :   5585d:  testb  $0x20,0xc(%rax)
    0.00 :   55861:  jne    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55867:  mov    -0xb8(%rbp),%rax
    0.00 :   5586e:  cmpl   $0x30,0x10(%rax)
    0.00 :   55872:  jne    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   55874:  mov    -0xd0(%rbp),%r13d
    0.00 :   5587b:  test   %r13d,%r13d
    0.00 :   5587e:  jg     56636 <__GI___printf_fp_l+0x27a6>
    0.00 :   55884:  mov    -0xbc(%rbp),%r11d
    0.00 :   5588b:  test   %r11d,%r11d
    0.00 :   5588e:  je     55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55894:  mov    -0xb8(%rbp),%rax
    0.00 :   5589b:  testb  $0x8,0xd(%rax)
    0.00 :   5589f:  jne    5638a <__GI___printf_fp_l+0x24fa>
    0.00 :   558a5:  xor    %r11d,%r11d
    0.00 :   558a8:  xor    %r13d,%r13d
    0.00 :   558ab:  mov    -0xe0(%rbp),%rdx
    0.00 :   558b2:  sar    $0x2,%rdx
    0.00 :   558b6:  mov    %rdx,%r12
    0.00 :   558b9:  cmp    %r8,%r15
    0.00 :   558bc:  jne    554b0 <__GI___printf_fp_l+0x1620>
    0.00 :   558c2:  test   %rdx,%rdx
    0.00 :   558c5:  je     554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   558cb:  mov    %r14d,-0xe0(%rbp)
    0.00 :   558d2:  mov    %rdx,%r15
    0.00 :   558d5:  mov    %rbx,%r14
    0.00 :   558d8:  mov    %r8,%rbx
    0.00 :   558db:  jmp    55912 <__GI___printf_fp_l+0x1a82>
    0.00 :   558dd:  nopl   (%rax)
    0.00 :   558e0:  mov    0x20(%rax),%rdx
    0.00 :   558e4:  cmp    0x28(%rax),%rdx
    0.00 :   558e8:  jae    55925 <__GI___printf_fp_l+0x1a95>
    0.00 :   558ea:  lea    0x4(%rdx),%rcx
    0.00 :   558ee:  cmp    $0xffffffff,%esi
    0.00 :   558f1:  mov    %rcx,0x20(%rax)
    0.00 :   558f5:  sete   %al
    0.00 :   558f8:  mov    %esi,(%rdx)
    0.00 :   558fa:  test   %al,%al
    0.00 :   558fc:  jne    5536d <__GI___printf_fp_l+0x14dd>
    0.00 :   55902:  mov    %r12,%rax
    0.00 :   55905:  sub    $0x1,%rax
    0.00 :   55909:  je     56260 <__GI___printf_fp_l+0x23d0>
    0.00 :   5590f:  mov    %rax,%r12
    0.00 :   55912:  mov    0xa0(%r14),%rax
    0.00 :   55919:  add    $0x4,%rbx
    0.00 :   5591d:  mov    -0x4(%rbx),%esi
    0.00 :   55920:  test   %rax,%rax
    0.00 :   55923:  jne    558e0 <__GI___printf_fp_l+0x1a50>
    0.00 :   55925:  mov    %r14,%rdi
    0.00 :   55928:  call   7bc60 <__woverflow>
    0.00 :   5592d:  cmp    $0xffffffff,%eax
    0.00 :   55930:  sete   %al
    0.00 :   55933:  jmp    558fa <__GI___printf_fp_l+0x1a6a>
    0.00 :   55935:  nopl   (%rax)
    0.00 :   55938:  movslq %esi,%rax
    0.00 :   5593b:  mov    %ecx,-0x9c(%rbp)
    0.00 :   55941:  test   %eax,%eax
    0.00 :   55943:  js     55fce <__GI___printf_fp_l+0x213e>
    0.00 :   55949:  add    $0x8,%rax
    0.00 :   5594d:  mov    %rax,-0x120(%rbp)
    0.00 :   55954:  mov    -0xf0(%rbp),%eax
    0.00 :   5595a:  mov    $0x1,%r13d
    0.00 :   55960:  movl   $0x7fffffff,-0x130(%rbp)
    0.00 :   5596a:  movl   $0x1,-0x100(%rbp)
    0.00 :   55974:  mov    %eax,-0xe0(%rbp)
    0.00 :   5597a:  jmp    5494c <__GI___printf_fp_l+0xabc>
    0.00 :   5597f:  nop
    0.00 :   55980:  mov    -0xc0(%rbp),%edi
    0.00 :   55986:  cmp    %edi,-0x4(%rax)
    0.00 :   55989:  jne    559a7 <__GI___printf_fp_l+0x1b17>
    0.00 :   5598b:  sub    $0x4,%rax
    0.00 :   5598f:  jmp    559a7 <__GI___printf_fp_l+0x1b17>
    0.00 :   55991:  nopl   0x0(%rax)
    0.00 :   55998:  cmpl   $0x39,(%rax)
    0.00 :   5599b:  jne    5608a <__GI___printf_fp_l+0x21fa>
    0.00 :   559a1:  movl   $0x30,(%rax)
    0.00 :   559a7:  sub    $0x4,%rax
    0.00 :   559ab:  cmp    %r8,%rax
    0.00 :   559ae:  jae    55998 <__GI___printf_fp_l+0x1b08>
    0.00 :   559b0:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   559b7:  je     566d2 <__GI___printf_fp_l+0x2842>
    0.00 :   559bd:  mov    -0x128(%rbp),%rax
    0.00 :   559c4:  cmpl   $0x1,-0xa0(%rbp)
    0.00 :   559cb:  movl   $0x31,0x8(%rax)
    0.00 :   559d2:  sbb    %eax,%eax
    0.00 :   559d4:  and    $0x2,%eax
    0.00 :   559d7:  sub    $0x1,%eax
    0.00 :   559da:  add    %eax,-0x98(%rbp)
    0.00 :   559e0:  jne    559ec <__GI___printf_fp_l+0x1b5c>
    0.00 :   559e2:  movl   $0x0,-0xa0(%rbp)
    0.00 :   559ec:  mov    -0x134(%rbp),%eax
    0.00 :   559f2:  mov    -0x130(%rbp),%edi
    0.00 :   559f8:  add    %r14d,%eax
    0.00 :   559fb:  cmp    %edi,%eax
    0.00 :   559fd:  jle    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   55a03:  sub    %edi,%eax
    0.00 :   55a05:  movslq %eax,%rdi
    0.00 :   55a08:  sub    %eax,%r14d
    0.00 :   55a0b:  shl    $0x2,%rdi
    0.00 :   55a0f:  sub    %rdi,%r15
    0.00 :   55a12:  jmp    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   55a17:  mov    $0x2d,%edi
    0.00 :   55a1c:  cmp    $0x4,%eax
    0.00 :   55a1f:  jne    5516d <__GI___printf_fp_l+0x12dd>
    0.00 :   55a25:  cmpb   $0x67,-0x13c(%rbp)
    0.00 :   55a2c:  je     56acd <__GI___printf_fp_l+0x2c3d>
    0.00 :   55a32:  mov    %edx,(%r15)
    0.00 :   55a35:  movl   $0x2d,0x4(%r15)
    0.00 :   55a3d:  movl   $0x30,0x8(%r15)
    0.00 :   55a45:  lea    0xc(%r15),%rsi
    0.00 :   55a49:  jmp    551c7 <__GI___printf_fp_l+0x1337>
    0.00 :   55a4e:  movl   $0x66,-0x9c(%rbp)
    0.00 :   55a58:  mov    -0xf0(%rbp),%eax
    0.00 :   55a5e:  movslq %eax,%rdx
    0.00 :   55a61:  test   %eax,%eax
    0.00 :   55a63:  jns    55a74 <__GI___printf_fp_l+0x1be4>
    0.00 :   55a65:  movl   $0x6,-0xf0(%rbp)
    0.00 :   55a6f:  mov    $0x6,%edx
    0.00 :   55a74:  mov    -0xa0(%rbp),%eax
    0.00 :   55a7a:  mov    %eax,-0x12c(%rbp)
    0.00 :   55a80:  test   %eax,%eax
    0.00 :   55a82:  jne    56152 <__GI___printf_fp_l+0x22c2>
    0.00 :   55a88:  movslq -0x98(%rbp),%rax
    0.00 :   55a8f:  cmpq   $0x0,-0xe8(%rbp)
    0.00 :   55a97:  movl   $0x7fffffff,-0x130(%rbp)
    0.00 :   55aa1:  mov    $0x1,%r13d
    0.00 :   55aa7:  lea    0x1(%rax),%edi
    0.00 :   55aaa:  lea    0x2(%rdx,%rax,1),%rax
    0.00 :   55aaf:  mov    %rax,-0x120(%rbp)
    0.00 :   55ab6:  mov    -0xf0(%rbp),%eax
    0.00 :   55abc:  mov    %edi,-0x100(%rbp)
    0.00 :   55ac2:  mov    %eax,-0xe0(%rbp)
    0.00 :   55ac8:  jne    5495a <__GI___printf_fp_l+0xaca>
    0.00 :   55ace:  jmp    549d1 <__GI___printf_fp_l+0xb41>
    0.00 :   55ad3:  cmp    %edx,-0x130(%rbp)
    0.00 :   55ad9:  jle    55e75 <__GI___printf_fp_l+0x1fe5>
    0.00 :   55adf:  mov    -0x130(%rbp),%edi
    0.00 :   55ae5:  lea    0x1(%rdx),%eax
    0.00 :   55ae8:  mov    %eax,-0x100(%rbp)
    0.00 :   55aee:  sub    %eax,%edi
    0.00 :   55af0:  mov    %edi,-0xe0(%rbp)
    0.00 :   55af6:  jmp    54911 <__GI___printf_fp_l+0xa81>
    0.00 :   55afb:  mov    %r12,%rdx
    0.00 :   55afe:  mov    %r13d,%ecx
    0.00 :   55b01:  mov    %r14,%rsi
    0.00 :   55b04:  mov    $0xc,%r15d
    0.00 :   55b0a:  call   4def0 <__mpn_lshift>
    0.00 :   55b0f:  lea    0x1365c2(%rip),%r12        # 18c0d8 <_fpioconst_pow10+0x138>
    0.00 :   55b16:  movl   $0x0,-0xd0(%rbp)
    0.00 :   55b20:  mov    %rax,%rcx
    0.00 :   55b23:  mov    -0x88(%rbp),%rax
    0.00 :   55b2a:  lea    0x1(%rax),%rdx
    0.00 :   55b2e:  mov    %rdx,-0x88(%rbp)
    0.00 :   55b35:  mov    -0x90(%rbp),%rdx
    0.00 :   55b3c:  mov    %rcx,(%rdx,%rax,8)
    0.00 :   55b40:  mov    -0x98(%rbp),%eax
    0.00 :   55b46:  movl   $0x1,-0xa0(%rbp)
    0.00 :   55b50:  neg    %eax
    0.00 :   55b52:  mov    %eax,-0x98(%rbp)
    0.00 :   55b58:  jmp    55bfb <__GI___printf_fp_l+0x1d6b>
    0.00 :   55b5d:  nopl   (%rax)
    0.00 :   55b60:  lea    0x8(%r11,%rcx,8),%r9
    0.00 :   55b65:  mov    %rax,%r8
    0.00 :   55b68:  mov    %rsi,%rcx
    0.00 :   55b6b:  mov    %r9,%rsi
    0.00 :   55b6e:  call   4e060 <__mpn_mul>
    0.00 :   55b73:  mov    -0x88(%rbp),%rcx
    0.00 :   55b7a:  mov    0x8(%r12),%rsi
    0.00 :   55b7f:  mov    -0x70(%rbp),%rdi
    0.00 :   55b83:  mov    -0x98(%rbp),%r11d
    0.00 :   55b8a:  add    %rcx,%rsi
    0.00 :   55b8d:  cmp    $0x1,%rax
    0.00 :   55b91:  sbb    $0x1,%rsi
    0.00 :   55b95:  mov    %r11d,%eax
    0.00 :   55b98:  lea    0x0(,%rsi,8),%r10
    0.00 :   55ba0:  mov    %rsi,-0x68(%rbp)
    0.00 :   55ba4:  mov    %rsi,%r13
    0.00 :   55ba7:  lea    -0x8(%rdi,%r10,1),%rdx
    0.00 :   55bac:  bsr    (%rdx),%r9
    0.00 :   55bb0:  sub    %rcx,%r13
    0.00 :   55bb3:  lea    0x3(%r11),%ecx
    0.00 :   55bb7:  add    $0x1,%r13
    0.00 :   55bbb:  shl    $0x6,%r13d
    0.00 :   55bbf:  xor    $0x3f,%r9
    0.00 :   55bc3:  sub    %r9d,%r13d
    0.00 :   55bc6:  mov    %r9d,%r14d
    0.00 :   55bc9:  sub    $0x1,%r13d
    0.00 :   55bcd:  cmp    %r13d,%ecx
    0.00 :   55bd0:  je     55d10 <__GI___printf_fp_l+0x1e80>
    0.00 :   55bd6:  lea    0x2(%r11),%edx
    0.00 :   55bda:  cmp    %edx,%r13d
    0.00 :   55bdd:  jle    55c58 <__GI___printf_fp_l+0x1dc8>
   27.74 :   55bdf:  lea    0x1363d2(%rip),%rdi        # 18bfb8 <_fpioconst_pow10+0x18> // libc.so.6[55bdf]
    0.00 :   55be6:  sub    $0x1,%r15d
    0.00 :   55bea:  cmp    %rdi,%r12
    0.00 :   55bed:  je     55d5a <__GI___printf_fp_l+0x1eca>
    0.00 :   55bf3:  test   %eax,%eax
    0.00 :   55bf5:  jle    55df6 <__GI___printf_fp_l+0x1f66>
    0.00 :   55bfb:  sub    $0x18,%r12
    0.00 :   55bff:  cmp    %eax,0x14(%r12)
    0.00 :   55c04:  jg     55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   55c06:  mov    0x8(%r12),%rsi
    0.00 :   55c0b:  mov    -0x70(%rbp),%rdi
    0.00 :   55c0f:  lea    0x13650a(%rip),%r11        # 18c120 <__tens>
    0.00 :   55c16:  mov    -0x88(%rbp),%rax
    0.00 :   55c1d:  mov    (%r12),%rcx
    0.00 :   55c21:  lea    -0x1(%rsi),%rdx
    0.00 :   55c25:  mov    -0x90(%rbp),%rsi
    0.00 :   55c2c:  cmp    %rdx,%rax
    0.00 :   55c2f:  jl     55b60 <__GI___printf_fp_l+0x1cd0>
    0.00 :   55c35:  mov    %rdx,%r8
    0.00 :   55c38:  lea    0x8(%r11,%rcx,8),%rcx
    0.00 :   55c3d:  mov    %rax,%rdx
    0.00 :   55c40:  call   4e060 <__mpn_mul>
    0.00 :   55c45:  jmp    55b73 <__GI___printf_fp_l+0x1ce3>
    0.00 :   55c4a:  mov    -0x70(%rbp),%rdi
    0.00 :   55c4e:  mov    -0x68(%rbp),%rsi
    0.00 :   55c52:  nopw   0x0(%rax,%rax,1)
    0.00 :   55c58:  mov    %r11d,%eax
    0.00 :   55c5b:  mov    $0x1,%edx
    0.00 :   55c60:  mov    %r15d,%ecx
    0.00 :   55c63:  sub    %r13d,%eax
    0.00 :   55c66:  shl    %cl,%edx
    0.00 :   55c68:  or     %edx,-0xd0(%rbp)
    0.00 :   55c6e:  mov    (%rdi),%rdx
    0.00 :   55c71:  sub    %eax,%r9d
    0.00 :   55c74:  test   %eax,%eax
    0.00 :   55c76:  mov    %eax,-0x98(%rbp)
    0.00 :   55c7c:  cmovs  %r9d,%r14d
    0.00 :   55c80:  test   %rdx,%rdx
    0.00 :   55c83:  jne    567f7 <__GI___printf_fp_l+0x2967>
    0.00 :   55c89:  lea    0x8(%rdi),%rdx
    0.00 :   55c8d:  mov    $0x1,%r10d
    0.00 :   55c93:  nopl   0x0(%rax,%rax,1)
    0.00 :   55c98:  mov    (%rdx),%rcx
    0.00 :   55c9b:  mov    %rdx,%r11
    0.00 :   55c9e:  mov    %r10,%r9
    0.00 :   55ca1:  add    $0x8,%rdx
    0.00 :   55ca5:  lea    0x1(%r10),%r10
    0.00 :   55ca9:  test   %rcx,%rcx
    0.00 :   55cac:  je     55c98 <__GI___printf_fp_l+0x1e08>
    0.00 :   55cae:  movslq %r9d,%r13
    0.00 :   55cb1:  cmp    $0x3f,%r14d
    0.00 :   55cb5:  je     56778 <__GI___printf_fp_l+0x28e8>
    0.00 :   55cbb:  mov    $0x3f,%eax
    0.00 :   55cc0:  tzcnt  %rcx,%rcx
    0.00 :   55cc5:  sub    %r14d,%eax
    0.00 :   55cc8:  cmp    %ecx,%eax
    0.00 :   55cca:  jle    567e4 <__GI___printf_fp_l+0x2954>
    0.00 :   55cd0:  lea    -0x1(%r9),%r13d
    0.00 :   55cd4:  mov    %eax,%ecx
    0.00 :   55cd6:  movslq %r13d,%r13
    0.00 :   55cd9:  sub    %r13,%rsi
    0.00 :   55cdc:  mov    %rsi,%rdx
    0.00 :   55cdf:  lea    -0x8(%rdi,%r9,8),%rsi
    0.00 :   55ce4:  mov    -0x90(%rbp),%rdi
    0.00 :   55ceb:  call   4f120 <__mpn_rshift>
    0.00 :   55cf0:  mov    -0x68(%rbp),%rax
    0.00 :   55cf4:  sub    %r13,%rax
    0.00 :   55cf7:  mov    %rax,-0x88(%rbp)
    0.00 :   55cfe:  mov    -0x98(%rbp),%eax
    0.00 :   55d04:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   55d09:  nopl   0x0(%rax)
    0.00 :   55d10:  cmp    $0x3c,%r9d
    0.00 :   55d14:  jg     5627a <__GI___printf_fp_l+0x23ea>
    0.00 :   55d1a:  mov    $0x3c,%ecx
    0.00 :   55d1f:  mov    $0xa,%eax
    0.00 :   55d24:  movq   $0x0,-0x50(%rbp)
    0.00 :   55d2c:  sub    %r9d,%ecx
    0.00 :   55d2f:  shl    %cl,%rax
    0.00 :   55d32:  lea    0x2(%r11),%ecx
    0.00 :   55d36:  mov    %rax,-0x48(%rbp)
    0.00 :   55d3a:  cmp    %ecx,%r13d
    0.00 :   55d3d:  jle    55c58 <__GI___printf_fp_l+0x1dc8>
    0.00 :   55d43:  cmp    %rax,(%rdx)
    0.00 :   55d46:  jb     55c58 <__GI___printf_fp_l+0x1dc8>
    0.00 :   55d4c:  je     56702 <__GI___printf_fp_l+0x2872>
    0.00 :   55d52:  mov    %r11d,%eax
    0.00 :   55d55:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   55d5a:  test   %eax,%eax
    0.00 :   55d5c:  jle    55df6 <__GI___printf_fp_l+0x1f66>
    0.00 :   55d62:  mov    -0x88(%rbp),%rdx
    0.00 :   55d69:  mov    -0x70(%rbp),%rdi
    0.00 :   55d6d:  mov    $0xa,%ecx
    0.00 :   55d72:  mov    -0x90(%rbp),%rsi
    0.00 :   55d79:  call   4e4c0 <__mpn_mul_1>
    0.00 :   55d7e:  mov    -0x88(%rbp),%rdi
    0.00 :   55d85:  mov    -0x70(%rbp),%rsi
    0.00 :   55d89:  xor    %r8d,%r8d
    0.00 :   55d8c:  mov    -0x98(%rbp),%eax
    0.00 :   55d92:  mov    $0x4,%edx
    0.00 :   55d97:  mov    %rdi,-0x68(%rbp)
    0.00 :   55d9b:  mov    %edx,%ecx
    0.00 :   55d9d:  tzcnt  (%rsi),%r8
    0.00 :   55da2:  cmp    %edx,%eax
    0.00 :   55da4:  cmovle %eax,%ecx
    0.00 :   55da7:  cmp    %r8d,%ecx
    0.00 :   55daa:  jle    5671e <__GI___printf_fp_l+0x288e>
    0.00 :   55db0:  mov    $0x40,%eax
    0.00 :   55db5:  mov    %rdi,%rdx
    0.00 :   55db8:  mov    -0x90(%rbp),%rdi
    0.00 :   55dbf:  sub    %ecx,%eax
    0.00 :   55dc1:  mov    %eax,%ecx
    0.00 :   55dc3:  call   4def0 <__mpn_lshift>
    0.00 :   55dc8:  test   %rax,%rax
    0.00 :   55dcb:  je     55de4 <__GI___printf_fp_l+0x1f54>
    0.00 :   55dcd:  mov    -0x68(%rbp),%rdx
    0.00 :   55dd1:  lea    0x1(%rdx),%rcx
    0.00 :   55dd5:  mov    %rcx,-0x68(%rbp)
    0.00 :   55dd9:  mov    -0x90(%rbp),%rcx
    0.00 :   55de0:  mov    %rax,(%rcx,%rdx,8)
    0.00 :   55de4:  mov    -0x68(%rbp),%rax
    0.00 :   55de8:  orl    $0x1,-0xd0(%rbp)
    0.00 :   55def:  mov    %rax,-0x88(%rbp)
    0.00 :   55df6:  mov    -0xd0(%rbp),%eax
    0.00 :   55dfc:  mov    %eax,-0x98(%rbp)
    0.00 :   55e02:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   55e07:  mov    -0xa4(%rbp),%r11d
    0.00 :   55e0e:  test   %r11d,%r11d
    0.00 :   55e11:  jne    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   55e17:  jmp    553fa <__GI___printf_fp_l+0x156a>
    0.00 :   55e1c:  add    %eax,%edi
    0.00 :   55e1e:  mov    %edi,-0xd0(%rbp)
    0.00 :   55e24:  test   %sil,%sil
    0.00 :   55e27:  je     555f8 <__GI___printf_fp_l+0x1768>
    0.00 :   55e2d:  jmp    55615 <__GI___printf_fp_l+0x1785>
    0.00 :   55e32:  mov    0xd8(%rbx),%r15
    0.00 :   55e39:  lea    0x179bc0(%rip),%rdx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   55e40:  lea    0x17a921(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   55e47:  sub    %rdx,%rax
    0.00 :   55e4a:  mov    %r15,%rcx
    0.00 :   55e4d:  sub    %rdx,%rcx
    0.00 :   55e50:  cmp    %rax,%rcx
    0.00 :   55e53:  jae    56934 <__GI___printf_fp_l+0x2aa4>
    0.00 :   55e59:  mov    0x38(%r15),%rax
    0.00 :   55e5d:  jmp    554de <__GI___printf_fp_l+0x164e>
    0.00 :   55e62:  mov    0x17cfa7(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   55e69:  movl   $0x22,%fs:(%rax)
    0.00 :   55e70:  jmp    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   55e75:  mov    -0x130(%rbp),%esi
    0.00 :   55e7b:  sub    $0x2,%eax
    0.00 :   55e7e:  movl   $0x1,-0x100(%rbp)
    0.00 :   55e88:  sub    $0x1,%esi
    0.00 :   55e8b:  movslq %esi,%rdx
    0.00 :   55e8e:  mov    %esi,-0xe0(%rbp)
    0.00 :   55e94:  lea    0x8(%rdx),%rdi
    0.00 :   55e98:  mov    %rdi,-0x120(%rbp)
    0.00 :   55e9f:  jmp    54928 <__GI___printf_fp_l+0xa98>
    0.00 :   55ea4:  movl   $0x0,-0x12c(%rbp)
    0.00 :   55eae:  mov    $0x1,%eax
    0.00 :   55eb3:  jmp    549ca <__GI___printf_fp_l+0xb3a>
    0.00 :   55eb8:  mov    %r14,%r11
    0.00 :   55ebb:  mov    -0xe0(%rbp),%r14d
    0.00 :   55ec2:  lea    (%r14,%r12,1),%eax
    0.00 :   55ec6:  sub    %r11d,%eax
    0.00 :   55ec9:  mov    %eax,%r14d
    0.00 :   55ecc:  jmp    554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   55ed1:  mov    %eax,%esi
    0.00 :   55ed3:  movslq %edx,%rdx
    0.00 :   55ed6:  sar    $0x1f,%esi
    0.00 :   55ed9:  lea    (%rdi,%rdx,8),%rdi
    0.00 :   55edd:  mov    %r12,%rdx
    0.00 :   55ee0:  shr    $0x1a,%esi
    0.00 :   55ee3:  lea    (%rax,%rsi,1),%ecx
    0.00 :   55ee6:  and    $0x3f,%ecx
    0.00 :   55ee9:  sub    %esi,%ecx
    0.00 :   55eeb:  mov    %r14,%rsi
    0.00 :   55eee:  call   4def0 <__mpn_lshift>
    0.00 :   55ef3:  mov    -0x98(%rbp),%ecx
    0.00 :   55ef9:  mov    -0x88(%rbp),%rsi
    0.00 :   55f00:  add    %ecx,%r13d
    0.00 :   55f03:  lea    0x3f(%r13),%edx
    0.00 :   55f07:  cmovns %r13d,%edx
    0.00 :   55f0b:  sar    $0x6,%edx
    0.00 :   55f0e:  movslq %edx,%rdx
    0.00 :   55f11:  add    %rdx,%rsi
    0.00 :   55f14:  mov    %rsi,-0x88(%rbp)
    0.00 :   55f1b:  test   %rax,%rax
    0.00 :   55f1e:  je     54684 <__GI___printf_fp_l+0x7f4>
    0.00 :   55f24:  lea    0x1(%rsi),%rdi
    0.00 :   55f28:  mov    %rdi,-0x88(%rbp)
    0.00 :   55f2f:  mov    -0x90(%rbp),%rdi
    0.00 :   55f36:  mov    %rax,(%rdi,%rsi,8)
    0.00 :   55f3a:  jmp    54684 <__GI___printf_fp_l+0x7f4>
    0.00 :   55f3f:  test   $0x10,%dl
    0.00 :   55f42:  je     55fc0 <__GI___printf_fp_l+0x2130>
    0.00 :   55f44:  mov    -0xbc(%rbp),%eax
    0.00 :   55f4a:  test   %eax,%eax
    0.00 :   55f4c:  jne    5668c <__GI___printf_fp_l+0x27fc>
    0.00 :   55f52:  xor    %r14d,%r14d
    0.00 :   55f55:  mov    0x28(%rbx),%rax
    0.00 :   55f59:  cmp    0x30(%rbx),%rax
    0.00 :   55f5d:  jae    56a94 <__GI___printf_fp_l+0x2c04>
    0.00 :   55f63:  lea    0x1(%rax),%rdx
    0.00 :   55f67:  add    $0x1,%r14d
    0.00 :   55f6b:  mov    %rdx,0x28(%rbx)
    0.00 :   55f6f:  movb   $0x20,(%rax)
    0.00 :   55f72:  mov    -0xb8(%rbp),%rax
    0.00 :   55f79:  testb  $0x20,0xc(%rax)
    0.00 :   55f7d:  je     55659 <__GI___printf_fp_l+0x17c9>
    0.00 :   55f83:  jmp    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   55f88:  mov    %r8,-0xe8(%rbp)
    0.00 :   55f8f:  mov    $0x2d,%esi
    0.00 :   55f94:  mov    %rbx,%rdi
    0.00 :   55f97:  call   7bc60 <__woverflow>
    0.00 :   55f9c:  mov    -0xe8(%rbp),%r8
    0.00 :   55fa3:  cmp    $0xffffffff,%eax
    0.00 :   55fa6:  sete   %al
    0.00 :   55fa9:  test   %al,%al
    0.00 :   55fab:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   55fb1:  mov    -0xb8(%rbp),%rax
    0.00 :   55fb8:  add    $0x1,%r14d
    0.00 :   55fbc:  movzbl 0xc(%rax),%edx
    0.00 :   55fc0:  and    $0x20,%edx
    0.00 :   55fc3:  jne    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   55fc9:  jmp    55867 <__GI___printf_fp_l+0x19d7>
    0.00 :   55fce:  movq   $0xe,-0x120(%rbp)
    0.00 :   55fd9:  movl   $0x6,-0xf0(%rbp)
    0.00 :   55fe3:  jmp    55954 <__GI___printf_fp_l+0x1ac4>
    0.00 :   55fe8:  mov    -0xe0(%rbp),%r12d
    0.00 :   55fef:  test   %r12d,%r12d
    0.00 :   55ff2:  je     5660a <__GI___printf_fp_l+0x277a>
    0.00 :   55ff8:  cmpq   $0x1,-0x88(%rbp)
    0.00 :   56000:  jg     54b28 <__GI___printf_fp_l+0xc98>
    0.00 :   56006:  mov    -0x90(%rbp),%rdx
    0.00 :   5600d:  cmpq   $0x0,(%rdx)
    0.00 :   56011:  jne    54b28 <__GI___printf_fp_l+0xc98>
    0.00 :   56017:  mov    %rax,%r15
    0.00 :   5601a:  mov    $0x1,%r13d
    0.00 :   56020:  jmp    54b3a <__GI___printf_fp_l+0xcaa>
    0.00 :   56025:  mov    -0x90(%rbp),%r10
    0.00 :   5602c:  cmpq   $0x0,(%r10)
    0.00 :   56030:  je     54f54 <__GI___printf_fp_l+0x10c4>
    0.00 :   56036:  cmpq   $0x0,-0x78(%rbp)
    0.00 :   5603b:  jne    54f4e <__GI___printf_fp_l+0x10be>
    0.00 :   56041:  mov    $0x1,%eax
    0.00 :   56046:  jmp    54f46 <__GI___printf_fp_l+0x10b6>
    0.00 :   5604b:  mov    -0x128(%rbp),%rax
    0.00 :   56052:  mov    -0xc0(%rbp),%esi
    0.00 :   56058:  movl   $0x0,-0x134(%rbp)
    0.00 :   56062:  subl   $0x1,-0x98(%rbp)
    0.00 :   56069:  movl   $0x30,0x8(%rax)
    0.00 :   56070:  lea    0x10(%rax),%r15
    0.00 :   56074:  mov    %esi,0xc(%rax)
    0.00 :   56077:  lea    -0xa0(%rbp),%rax
    0.00 :   5607e:  mov    %rax,-0xd0(%rbp)
    0.00 :   56085:  jmp    54b3a <__GI___printf_fp_l+0xcaa>
    0.00 :   5608a:  cmp    %r8,%rax
    0.00 :   5608d:  jb     559b0 <__GI___printf_fp_l+0x1b20>
    0.00 :   56093:  addl   $0x1,(%rax)
    0.00 :   56096:  jmp    54fa0 <__GI___printf_fp_l+0x1110>
    0.00 :   5609b:  add    $0x1,%r14d
    0.00 :   5609f:  test   %ecx,%ecx
    0.00 :   560a1:  jne    56537 <__GI___printf_fp_l+0x26a7>
    0.00 :   560a7:  movslq %r14d,%r14
    0.00 :   560aa:  sub    %r14,%rdx
    0.00 :   560ad:  test   %rdx,%rdx
    0.00 :   560b0:  jle    560d8 <__GI___printf_fp_l+0x2248>
    0.00 :   560b2:  lea    (%rdi,%r8,8),%rcx
    0.00 :   560b6:  xor    %eax,%eax
    0.00 :   560b8:  nopl   0x0(%rax,%rax,1)
    0.00 :   560c0:  mov    (%rcx,%rax,8),%rdx
    0.00 :   560c4:  mov    %rdx,(%rdi,%rax,8)
    0.00 :   560c8:  mov    -0x78(%rbp),%rdx
    0.00 :   560cc:  add    $0x1,%rax
    0.00 :   560d0:  sub    %r14,%rdx
    0.00 :   560d3:  cmp    %rax,%rdx
    0.00 :   560d6:  jg     560c0 <__GI___printf_fp_l+0x2230>
    0.00 :   560d8:  mov    %rdx,-0x78(%rbp)
    0.00 :   560dc:  mov    -0x88(%rbp),%rdx
    0.00 :   560e3:  sub    %r14,%rdx
    0.00 :   560e6:  test   %rdx,%rdx
    0.00 :   560e9:  jle    56113 <__GI___printf_fp_l+0x2283>
    0.00 :   560eb:  lea    (%r9,%r8,8),%rcx
    0.00 :   560ef:  xor    %eax,%eax
    0.00 :   560f1:  nopl   0x0(%rax)
    0.00 :   560f8:  mov    (%rcx,%rax,8),%rdx
    0.00 :   560fc:  mov    %rdx,(%r9,%rax,8)
    0.00 :   56100:  mov    -0x88(%rbp),%rdx
    0.00 :   56107:  add    $0x1,%rax
    0.00 :   5610b:  sub    %r14,%rdx
    0.00 :   5610e:  cmp    %rax,%rdx
    0.00 :   56111:  jg     560f8 <__GI___printf_fp_l+0x2268>
    0.00 :   56113:  mov    %rdx,-0x88(%rbp)
    0.00 :   5611a:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   5611f:  xor    %eax,%eax
    0.00 :   56121:  xor    %edx,%edx
    0.00 :   56123:  jmp    556ee <__GI___printf_fp_l+0x185e>
    0.00 :   56128:  lea    0x2(%r8),%eax
    0.00 :   5612c:  mov    %edi,-0x12c(%rbp)
    0.00 :   56132:  cltq
    0.00 :   56134:  jmp    549ca <__GI___printf_fp_l+0xb3a>
    0.00 :   56139:  lea    -0x1(%rdx),%eax
    0.00 :   5613c:  xor    %edx,%edx
    0.00 :   5613e:  div    %ecx
    0.00 :   56140:  add    %edi,%eax
    0.00 :   56142:  mov    %eax,-0x12c(%rbp)
    0.00 :   56148:  add    $0x1,%eax
    0.00 :   5614b:  cltq
    0.00 :   5614d:  jmp    549ca <__GI___printf_fp_l+0xb3a>
    0.00 :   56152:  lea    0x2(%rdx),%rax
    0.00 :   56156:  mov    %rax,-0x120(%rbp)
    0.00 :   5615d:  jmp    55954 <__GI___printf_fp_l+0x1ac4>
    0.00 :   56162:  movslq %edx,%r13
    0.00 :   56165:  jmp    54677 <__GI___printf_fp_l+0x7e7>
    0.00 :   5616a:  mov    %r8b,-0xd0(%rbp)
    0.00 :   56171:  mov    $0x2d,%esi
    0.00 :   56176:  mov    %rbx,%rdi
    0.00 :   56179:  call   7bc60 <__woverflow>
    0.00 :   5617e:  movzbl -0xd0(%rbp),%r8d
    0.00 :   56186:  cmp    $0xffffffff,%eax
    0.00 :   56189:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   5618f:  mov    0xa0(%rbx),%rax
    0.00 :   56196:  add    $0x1,%r12d
    0.00 :   5619a:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   5619f:  call   78be0 <_IO_padn>
    0.00 :   561a4:  jmp    55543 <__GI___printf_fp_l+0x16b3>
    0.00 :   561a9:  mov    -0xb8(%rbp),%rax
    0.00 :   561b0:  movzbl 0xc(%rax),%edx
    0.00 :   561b4:  test   $0x40,%dl
    0.00 :   561b7:  je     5667c <__GI___printf_fp_l+0x27ec>
    0.00 :   561bd:  mov    -0xd0(%rbp),%r14d
    0.00 :   561c4:  mov    0xa0(%rbx),%rax
    0.00 :   561cb:  test   %rax,%rax
    0.00 :   561ce:  je     56950 <__GI___printf_fp_l+0x2ac0>
    0.00 :   561d4:  mov    0x20(%rax),%rdx
    0.00 :   561d8:  cmp    0x28(%rax),%rdx
    0.00 :   561dc:  jae    56950 <__GI___printf_fp_l+0x2ac0>
    0.00 :   561e2:  lea    0x4(%rdx),%rsi
    0.00 :   561e6:  add    $0x1,%r14d
    0.00 :   561ea:  mov    %rsi,0x20(%rax)
    0.00 :   561ee:  mov    -0xb8(%rbp),%rax
    0.00 :   561f5:  movl   $0x2b,(%rdx)
    0.00 :   561fb:  testb  $0x20,0xc(%rax)
    0.00 :   561ff:  jne    55894 <__GI___printf_fp_l+0x1a04>
    0.00 :   56205:  mov    -0xb8(%rbp),%rax
    0.00 :   5620c:  cmpl   $0x30,0x10(%rax)
    0.00 :   56210:  jne    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   56216:  mov    -0xd0(%rbp),%ecx
    0.00 :   5621c:  test   %ecx,%ecx
    0.00 :   5621e:  jle    55884 <__GI___printf_fp_l+0x19f4>
    0.00 :   56224:  mov    -0xd0(%rbp),%r12d
    0.00 :   5622b:  mov    $0x30,%esi
    0.00 :   56230:  mov    %rbx,%rdi
    0.00 :   56233:  mov    %r8,-0xe8(%rbp)
    0.00 :   5623a:  mov    %r12,%rdx
    0.00 :   5623d:  call   7a890 <_IO_wpadn>
    0.00 :   56242:  mov    -0xe8(%rbp),%r8
    0.00 :   56249:  cmp    %rax,%r12
    0.00 :   5624c:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   56252:  mov    -0xd0(%rbp),%eax
    0.00 :   56258:  add    %eax,%r14d
    0.00 :   5625b:  jmp    55894 <__GI___printf_fp_l+0x1a04>
    0.00 :   56260:  mov    %r14,%rbx
    0.00 :   56263:  mov    -0xe0(%rbp),%r14d
    0.00 :   5626a:  lea    0x1(%r14,%r15,1),%r9d
    0.00 :   5626f:  sub    %r12d,%r9d
    0.00 :   56272:  mov    %r9d,%r14d
    0.00 :   56275:  jmp    554f5 <__GI___printf_fp_l+0x1665>
    0.00 :   5627a:  lea    -0x50(%rbp),%rdi
    0.00 :   5627e:  mov    $0x40,%ecx
    0.00 :   56283:  movdqa 0x14aa75(%rip),%xmm0        # 1a0d00 <in6addr_any+0x250>
    0.00 :   5628b:  mov    $0x2,%edx
    0.00 :   56290:  sub    %r9d,%ecx
    0.00 :   56293:  mov    %rdi,%rsi
    0.00 :   56296:  mov    %r9,-0xe0(%rbp)
    0.00 :   5629d:  movaps %xmm0,-0x50(%rbp)
    0.00 :   562a1:  call   4def0 <__mpn_lshift>
    0.00 :   562a6:  mov    -0x98(%rbp),%r11d
    0.00 :   562ad:  mov    -0xe0(%rbp),%r9
    0.00 :   562b4:  lea    0x2(%r11),%edx
    0.00 :   562b8:  mov    %r11d,%eax
    0.00 :   562bb:  cmp    %r13d,%edx
    0.00 :   562be:  jge    55c4a <__GI___printf_fp_l+0x1dba>
    0.00 :   562c4:  lea    0x3(%r11),%edx
    0.00 :   562c8:  cmp    %r13d,%edx
    0.00 :   562cb:  jne    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   562d1:  mov    -0x68(%rbp),%rsi
    0.00 :   562d5:  mov    -0x70(%rbp),%rdi
    0.00 :   562d9:  mov    -0x48(%rbp),%rax
    0.00 :   562dd:  lea    0x0(,%rsi,8),%r10
    0.00 :   562e5:  lea    -0x8(%rdi,%r10,1),%rdx
    0.00 :   562ea:  jmp    55d43 <__GI___printf_fp_l+0x1eb3>
    0.00 :   562ef:  movmskpd %xmm0,%r12d
    0.00 :   562f4:  and    $0x1,%r12d
    0.00 :   562f8:  jmp    54da1 <__GI___printf_fp_l+0xf11>
    0.00 :   562fd:  fxam
    0.00 :   562ff:  fnstsw %ax
    0.00 :   56301:  fstp   %st(0)
    0.00 :   56303:  lea    0x140d6e(%rip),%rcx        # 197078 <not_available+0x1bb>
    0.00 :   5630a:  lea    0x14afb7(%rip),%r15        # 1a12c8 <default_rwlockattr+0x2d8>
    0.00 :   56311:  mov    %eax,%r12d
    0.00 :   56314:  mov    -0xb8(%rbp),%rax
    0.00 :   5631b:  and    $0x200,%r12d
    0.00 :   56322:  movslq 0x8(%rax),%rdx
    0.00 :   56326:  mov    0x17cacb(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   5632d:  mov    %r12d,-0xa4(%rbp)
    0.00 :   56334:  mov    %fs:(%rax),%rax
    0.00 :   56338:  testb  $0x1,0x1(%rax,%rdx,2)
    0.00 :   5633d:  lea    0x140c49(%rip),%rax        # 196f8d <not_available+0xd0>
    0.00 :   56344:  cmove  %rax,%rcx
    0.00 :   56348:  lea    0x14af99(%rip),%rax        # 1a12e8 <default_rwlockattr+0x2f8>
    0.00 :   5634f:  cmove  %rax,%r15
    0.00 :   56353:  jmp    5400e <__GI___printf_fp_l+0x17e>
    0.00 :   56358:  mov    %r12,%rdi
    0.00 :   5635b:  call   266c0 <malloc@plt>
    0.00 :   56360:  mov    %rax,-0x128(%rbp)
    0.00 :   56367:  test   %rax,%rax
    0.00 :   5636a:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56370:  movl   $0x0,-0x140(%rbp)
    0.00 :   5637a:  movq   $0x1,-0x150(%rbp)
    0.00 :   56385:  jmp    54a8d <__GI___printf_fp_l+0xbfd>
    0.00 :   5638a:  movq   $0x0,-0x120(%rbp)
    0.00 :   56395:  xor    %edi,%edi
    0.00 :   56397:  xor    %r11d,%r11d
    0.00 :   5639a:  mov    -0x120(%rbp),%r12
    0.00 :   563a1:  mov    %rdi,%rsi
    0.00 :   563a4:  mov    %r11,%rdi
    0.00 :   563a7:  mov    %r8,-0xf0(%rbp)
    0.00 :   563ae:  mov    %r11,-0xe8(%rbp)
    0.00 :   563b5:  mov    %r12,%rdx
    0.00 :   563b8:  call   53ba0 <_i18n_number_rewrite>
    0.00 :   563bd:  mov    -0xe8(%rbp),%r13
    0.00 :   563c4:  mov    -0xf0(%rbp),%r8
    0.00 :   563cb:  mov    %r12,%rdi
    0.00 :   563ce:  mov    %rax,%r11
    0.00 :   563d1:  jmp    552f4 <__GI___printf_fp_l+0x1464>
    0.00 :   563d6:  call   78be0 <_IO_padn>
    0.00 :   563db:  cmp    %r12,%rax
    0.00 :   563de:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   563e4:  mov    -0xa4(%rbp),%eax
    0.00 :   563ea:  mov    -0xe8(%rbp),%r8
    0.00 :   563f1:  test   %eax,%eax
    0.00 :   563f3:  je     567b4 <__GI___printf_fp_l+0x2924>
    0.00 :   563f9:  mov    -0xd0(%rbp),%r14d
    0.00 :   56400:  jmp    55839 <__GI___printf_fp_l+0x19a9>
    0.00 :   56405:  xor    %r8d,%r8d
    0.00 :   56408:  tzcnt  (%r9,%r13,1),%r8
    0.00 :   5640e:  mov    $0x40,%r15d
    0.00 :   56414:  sub    %ecx,%r15d
    0.00 :   56417:  test   %r14d,%r14d
    0.00 :   5641a:  jne    56489 <__GI___printf_fp_l+0x25f9>
    0.00 :   5641c:  xor    %r12d,%r12d
    0.00 :   5641f:  cmp    %r15d,%r8d
    0.00 :   56422:  jl     5687d <__GI___printf_fp_l+0x29ed>
    0.00 :   56428:  sub    %r12,%rdx
    0.00 :   5642b:  mov    %r15d,%ecx
    0.00 :   5642e:  add    $0x1,%r14d
    0.00 :   56432:  call   4f120 <__mpn_rshift>
    0.00 :   56437:  mov    -0x90(%rbp),%rdi
    0.00 :   5643e:  mov    %r15d,%ecx
    0.00 :   56441:  movslq %r14d,%r14
    0.00 :   56444:  mov    -0x88(%rbp),%rdx
    0.00 :   5644b:  sub    %r14,-0x78(%rbp)
    0.00 :   5644f:  lea    (%rdi,%r13,1),%rsi
    0.00 :   56453:  sub    %r12,%rdx
    0.00 :   56456:  call   4f120 <__mpn_rshift>
    0.00 :   5645b:  mov    -0x88(%rbp),%rdx
    0.00 :   56462:  mov    -0x90(%rbp),%rcx
    0.00 :   56469:  mov    %rdx,%rax
    0.00 :   5646c:  sub    %r12,%rax
    0.00 :   5646f:  cmpq   $0x0,-0x8(%rcx,%rax,8)
    0.00 :   56475:  jne    5647d <__GI___printf_fp_l+0x25ed>
    0.00 :   56477:  mov    %rdx,%rax
    0.00 :   5647a:  sub    %r14,%rax
    0.00 :   5647d:  mov    %rax,-0x88(%rbp)
    0.00 :   56484:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   56489:  movslq %r14d,%r12
    0.00 :   5648c:  cmp    %r15d,%r8d
    0.00 :   5648f:  jge    56428 <__GI___printf_fp_l+0x2598>
    0.00 :   56491:  sub    $0x1,%r14d
    0.00 :   56495:  sub    $0x8,%r13
    0.00 :   56499:  mov    %r15d,%ecx
    0.00 :   5649c:  movslq %r14d,%r14
    0.00 :   5649f:  lea    (%rdi,%r13,1),%rsi
    0.00 :   564a3:  sub    %r14,%rdx
    0.00 :   564a6:  call   4f120 <__mpn_rshift>
    0.00 :   564ab:  mov    -0x90(%rbp),%rdi
    0.00 :   564b2:  mov    %r15d,%ecx
    0.00 :   564b5:  sub    %r12,-0x78(%rbp)
    0.00 :   564b9:  mov    -0x88(%rbp),%rdx
    0.00 :   564c0:  lea    (%rdi,%r13,1),%rsi
    0.00 :   564c4:  sub    %r14,%rdx
    0.00 :   564c7:  call   4f120 <__mpn_rshift>
    0.00 :   564cc:  mov    -0x88(%rbp),%rdx
    0.00 :   564d3:  mov    -0x90(%rbp),%rcx
    0.00 :   564da:  mov    %rdx,%rax
    0.00 :   564dd:  sub    %r14,%rax
    0.00 :   564e0:  cmpq   $0x0,-0x8(%rcx,%rax,8)
    0.00 :   564e6:  jne    5647d <__GI___printf_fp_l+0x25ed>
    0.00 :   564e8:  mov    %rdx,%rax
    0.00 :   564eb:  sub    %r12,%rax
    0.00 :   564ee:  jmp    5647d <__GI___printf_fp_l+0x25ed>
    0.00 :   564f0:  lea    -0xa0(%rbp),%rdi
    0.00 :   564f7:  mov    %r8,%rax
    0.00 :   564fa:  movl   $0x0,-0x134(%rbp)
    0.00 :   56504:  mov    %rdi,-0xd0(%rbp)
    0.00 :   5650b:  jmp    54b0b <__GI___printf_fp_l+0xc7b>
    0.00 :   56510:  mov    %r13,%rdi
    0.00 :   56513:  xor    %r13d,%r13d
    0.00 :   56516:  call   26420 <free@plt>
    0.00 :   5651b:  mov    -0x128(%rbp),%rdi
    0.00 :   56522:  call   26420 <free@plt>
    0.00 :   56527:  movq   $0x0,-0x128(%rbp)
    0.00 :   56532:  jmp    55503 <__GI___printf_fp_l+0x1673>
    0.00 :   56537:  mov    (%r9,%r13,1),%r9
    0.00 :   5653b:  xor    %r8d,%r8d
    0.00 :   5653e:  tzcnt  %rax,%rax
    0.00 :   56543:  tzcnt  %r9,%r8
    0.00 :   56548:  cmp    %eax,%r8d
    0.00 :   5654b:  cmovg  %eax,%r8d
    0.00 :   5654f:  test   %r9,%r9
    0.00 :   56552:  cmove  %eax,%r8d
    0.00 :   56556:  jmp    5640e <__GI___printf_fp_l+0x257e>
    0.00 :   5655b:  cmpb   $0x67,-0x13c(%rbp)
    0.00 :   56562:  mov    (%rax),%edi
    0.00 :   56564:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   5656a:  cmpl   $0x66,-0x9c(%rbp)
    0.00 :   56571:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   56577:  mov    -0xb8(%rbp),%rsi
    0.00 :   5657e:  testb  $0x8,0xc(%rsi)
    0.00 :   56582:  je     5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   56588:  mov    -0x128(%rbp),%rsi
    0.00 :   5658f:  add    $0xc,%rsi
    0.00 :   56593:  cmp    %rsi,%rax
    0.00 :   56596:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   5659c:  mov    -0x128(%rbp),%rsi
    0.00 :   565a3:  cmpl   $0x30,0x8(%rsi)
    0.00 :   565a7:  jne    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   565ad:  subl   $0x1,-0xfc(%rbp)
    0.00 :   565b4:  jmp    5547f <__GI___printf_fp_l+0x15ef>
    0.00 :   565b9:  nopl   0x0(%rax)
    0.00 :   565c0:  lea    -0x1(%rdx),%eax
    0.00 :   565c3:  xor    %edx,%edx
    0.00 :   565c5:  div    %edi
    0.00 :   565c7:  add    %eax,%esi
    0.00 :   565c9:  jmp    55061 <__GI___printf_fp_l+0x11d1>
    0.00 :   565ce:  mov    %rcx,-0xe0(%rbp)
    0.00 :   565d5:  mov    $0x2d,%esi
    0.00 :   565da:  mov    %r8b,-0xd0(%rbp)
    0.00 :   565e1:  mov    %rbx,%rdi
    0.00 :   565e4:  call   84a60 <__overflow>
    0.00 :   565e9:  movzbl -0xd0(%rbp),%r8d
    0.00 :   565f1:  mov    -0xe0(%rbp),%rcx
    0.00 :   565f8:  cmp    $0xffffffff,%eax
    0.00 :   565fb:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56601:  add    $0x1,%r15d
    0.00 :   56605:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   5660a:  movl   $0x0,-0xfc(%rbp)
    0.00 :   56614:  mov    -0xf0(%rbp),%esi
    0.00 :   5661a:  xor    %r14d,%r14d
    0.00 :   5661d:  mov    %rax,%r15
    0.00 :   56620:  jmp    54ec3 <__GI___printf_fp_l+0x1033>
    0.00 :   56625:  mov    %r8b,-0xd0(%rbp)
    0.00 :   5662c:  mov    $0x2b,%esi
    0.00 :   56631:  jmp    56176 <__GI___printf_fp_l+0x22e6>
    0.00 :   56636:  mov    -0xbc(%rbp),%r12d
    0.00 :   5663d:  test   %r12d,%r12d
    0.00 :   56640:  jne    56224 <__GI___printf_fp_l+0x2394>
    0.00 :   56646:  mov    -0xd0(%rbp),%r12d
    0.00 :   5664d:  mov    $0x30,%esi
    0.00 :   56652:  mov    %rbx,%rdi
    0.00 :   56655:  mov    %r8,-0xe8(%rbp)
    0.00 :   5665c:  mov    %r12,%rdx
    0.00 :   5665f:  call   78be0 <_IO_padn>
    0.00 :   56664:  cmp    %rax,%r12
    0.00 :   56667:  jne    56aa5 <__GI___printf_fp_l+0x2c15>
    0.00 :   5666d:  mov    -0xe8(%rbp),%r8
    0.00 :   56674:  add    %r12d,%r14d
    0.00 :   56677:  jmp    55678 <__GI___printf_fp_l+0x17e8>
    0.00 :   5667c:  test   $0x10,%dl
    0.00 :   5667f:  je     567d8 <__GI___printf_fp_l+0x2948>
    0.00 :   56685:  mov    -0xd0(%rbp),%r14d
    0.00 :   5668c:  mov    0xa0(%rbx),%rax
    0.00 :   56693:  test   %rax,%rax
    0.00 :   56696:  je     56a66 <__GI___printf_fp_l+0x2bd6>
    0.00 :   5669c:  mov    0x20(%rax),%rdx
    0.00 :   566a0:  cmp    0x28(%rax),%rdx
    0.00 :   566a4:  jae    56a66 <__GI___printf_fp_l+0x2bd6>
    0.00 :   566aa:  lea    0x4(%rdx),%rsi
    0.00 :   566ae:  add    $0x1,%r14d
    0.00 :   566b2:  mov    %rsi,0x20(%rax)
    0.00 :   566b6:  mov    -0xb8(%rbp),%rax
    0.00 :   566bd:  movl   $0x20,(%rdx)
    0.00 :   566c3:  testb  $0x20,0xc(%rax)
    0.00 :   566c7:  je     56205 <__GI___printf_fp_l+0x2375>
    0.00 :   566cd:  jmp    55894 <__GI___printf_fp_l+0x1a04>
    0.00 :   566d2:  mov    -0x130(%rbp),%edi
    0.00 :   566d8:  mov    -0x128(%rbp),%rax
    0.00 :   566df:  cmp    %edi,-0x134(%rbp)
    0.00 :   566e5:  je     56979 <__GI___printf_fp_l+0x2ae9>
    0.00 :   566eb:  addl   $0x1,-0x134(%rbp)
    0.00 :   566f2:  lea    0x4(%rax),%r8
    0.00 :   566f6:  movl   $0x31,0x4(%rax)
    0.00 :   566fd:  jmp    559ec <__GI___printf_fp_l+0x1b5c>
    0.00 :   56702:  mov    -0x50(%rbp),%rax
    0.00 :   56706:  cmp    %rax,-0x10(%rdi,%r10,1)
    0.00 :   5670b:  jae    55d52 <__GI___printf_fp_l+0x1ec2>
    0.00 :   56711:  jmp    55c58 <__GI___printf_fp_l+0x1dc8>
    0.00 :   56716:  mov    %r11,%rdi
    0.00 :   56719:  jmp    552e0 <__GI___printf_fp_l+0x1450>
    0.00 :   5671e:  mov    %rdi,%rdx
    0.00 :   56721:  mov    -0x90(%rbp),%rdi
    0.00 :   56728:  call   4f120 <__mpn_rshift>
    0.00 :   5672d:  jmp    55de4 <__GI___printf_fp_l+0x1f54>
    0.00 :   56732:  mov    %r13d,%r14d
    0.00 :   56735:  mov    $0x1,%r8d
    0.00 :   5673b:  jmp    54cfe <__GI___printf_fp_l+0xe6e>
    0.00 :   56740:  mov    %r12,%rdi
    0.00 :   56743:  mov    %r8,-0xf0(%rbp)
    0.00 :   5674a:  mov    %rdx,-0xe8(%rbp)
    0.00 :   56751:  call   266c0 <malloc@plt>
    0.00 :   56756:  mov    -0xe8(%rbp),%rdx
    0.00 :   5675d:  mov    -0xf0(%rbp),%r8
    0.00 :   56764:  test   %rax,%rax
    0.00 :   56767:  mov    %rax,%r11
    0.00 :   5676a:  jne    5575a <__GI___printf_fp_l+0x18ca>
    0.00 :   56770:  jmp    55383 <__GI___printf_fp_l+0x14f3>
    0.00 :   56775:  nopl   (%rax)
    0.00 :   56778:  movslq %r9d,%r8
    0.00 :   5677b:  sub    %r8,%rsi
    0.00 :   5677e:  test   %rsi,%rsi
    0.00 :   56781:  jle    567a8 <__GI___printf_fp_l+0x2918>
    0.00 :   56783:  mov    -0x90(%rbp),%r10
    0.00 :   5678a:  lea    (%rdi,%r9,8),%rdi
    0.00 :   5678e:  xor    %edx,%edx
    0.00 :   56790:  mov    (%rdi,%rdx,8),%rcx
    0.00 :   56794:  mov    %rcx,(%r10,%rdx,8)
    0.00 :   56798:  mov    -0x68(%rbp),%rsi
    0.00 :   5679c:  add    $0x1,%rdx
    0.00 :   567a0:  sub    %r8,%rsi
    0.00 :   567a3:  cmp    %rdx,%rsi
    0.00 :   567a6:  jg     56790 <__GI___printf_fp_l+0x2900>
    0.00 :   567a8:  mov    %rsi,-0x88(%rbp)
    0.00 :   567af:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   567b4:  mov    -0xb8(%rbp),%rax
    0.00 :   567bb:  mov    -0xd0(%rbp),%r14d
    0.00 :   567c2:  movzbl 0xc(%rax),%edx
    0.00 :   567c6:  test   $0x40,%dl
    0.00 :   567c9:  jne    5562f <__GI___printf_fp_l+0x179f>
    0.00 :   567cf:  test   $0x10,%dl
    0.00 :   567d2:  jne    55f55 <__GI___printf_fp_l+0x20c5>
    0.00 :   567d8:  mov    -0xd0(%rbp),%r14d
    0.00 :   567df:  jmp    55fc0 <__GI___printf_fp_l+0x2130>
    0.00 :   567e4:  sub    %r13,%rsi
    0.00 :   567e7:  mov    %r11,%rdi
   14.12 :   567ea:  mov    %rsi,%rdx // libc.so.6[567ea]
    0.00 :   567ed:  mov    %eax,%ecx
    0.00 :   567ef:  mov    %rdi,%rsi
    0.00 :   567f2:  jmp    55ce4 <__GI___printf_fp_l+0x1e54>
    0.00 :   567f7:  cmp    $0x3f,%r14d
    0.00 :   567fb:  je     56ab8 <__GI___printf_fp_l+0x2c28>
    0.00 :   56801:  mov    $0x3f,%eax
    0.00 :   56806:  tzcnt  %rdx,%rdx
    0.00 :   5680b:  xor    %r13d,%r13d
    0.00 :   5680e:  sub    %r14d,%eax
    0.00 :   56811:  cmp    %edx,%eax
    0.00 :   56813:  jle    567ea <__GI___printf_fp_l+0x295a>
    0.00 :   56815:  mov    %rsi,%rdx
    0.00 :   56818:  mov    %rdi,%rsi
    0.00 :   5681b:  mov    -0x90(%rbp),%rdi
    0.00 :   56822:  lea    0x1(%r14),%ecx
    0.00 :   56826:  call   4def0 <__mpn_lshift>
    0.00 :   5682b:  mov    -0x90(%rbp),%rdx
    0.00 :   56832:  mov    %rax,%rcx
    0.00 :   56835:  mov    -0x68(%rbp),%rax
    0.00 :   56839:  add    $0x1,%rax
    0.00 :   5683d:  mov    %rax,-0x88(%rbp)
    0.00 :   56844:  mov    %rcx,-0x8(%rdx,%rax,8)
    0.00 :   56849:  mov    -0x98(%rbp),%eax
    0.00 :   5684f:  jmp    55bdf <__GI___printf_fp_l+0x1d4f>
    0.00 :   56854:  mov    %r8b,-0xd0(%rbp)
    0.00 :   5685b:  mov    $0x20,%esi
    0.00 :   56860:  jmp    56176 <__GI___printf_fp_l+0x22e6>
    0.00 :   56865:  mov    %rcx,-0xe0(%rbp)
    0.00 :   5686c:  mov    $0x2b,%esi
    0.00 :   56871:  mov    %r8b,-0xd0(%rbp)
    0.00 :   56878:  jmp    565e1 <__GI___printf_fp_l+0x2751>
    0.00 :   5687d:  mov    %rdi,%rsi
    0.00 :   56880:  mov    %r11d,%ecx
    0.00 :   56883:  mov    %r11d,-0xd0(%rbp)
    0.00 :   5688a:  call   4def0 <__mpn_lshift>
    0.00 :   5688f:  mov    -0x90(%rbp),%rdi
    0.00 :   56896:  mov    -0xd0(%rbp),%ecx
    0.00 :   5689c:  mov    -0x88(%rbp),%rdx
    0.00 :   568a3:  mov    %rdi,%rsi
    0.00 :   568a6:  call   4def0 <__mpn_lshift>
    0.00 :   568ab:  test   %rax,%rax
    0.00 :   568ae:  je     54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   568b4:  mov    -0x88(%rbp),%rdx
    0.00 :   568bb:  lea    0x1(%rdx),%rcx
    0.00 :   568bf:  mov    %rcx,-0x88(%rbp)
    0.00 :   568c6:  mov    -0x90(%rbp),%rcx
    0.00 :   568cd:  mov    %rax,(%rcx,%rdx,8)
    0.00 :   568d1:  jmp    54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   568d6:  mov    %r8,-0xe8(%rbp)
    0.00 :   568dd:  mov    %r11,-0xe0(%rbp)
    0.00 :   568e4:  call   818e0 <_IO_vtable_check>
    0.00 :   568e9:  mov    -0xbc(%rbp),%r9d
    0.00 :   568f0:  mov    -0xe0(%rbp),%r11
    0.00 :   568f7:  mov    -0xe8(%rbp),%r8
    0.00 :   568fe:  mov    0x38(%r15),%rax
    0.00 :   56902:  test   %r9d,%r9d
    0.00 :   56905:  cmovne %r8,%r11
    0.00 :   56909:  jmp    554de <__GI___printf_fp_l+0x164e>
    0.00 :   5690e:  mov    %r8,-0xe8(%rbp)
    0.00 :   56915:  mov    $0x2d,%esi
    0.00 :   5691a:  mov    %rbx,%rdi
    0.00 :   5691d:  call   84a60 <__overflow>
    0.00 :   56922:  mov    -0xe8(%rbp),%r8
    0.00 :   56929:  cmp    $0xffffffff,%eax
    0.00 :   5692c:  sete   %al
    0.00 :   5692f:  jmp    55fa9 <__GI___printf_fp_l+0x2119>
    0.00 :   56934:  mov    %r11,-0xe0(%rbp)
    0.00 :   5693b:  call   818e0 <_IO_vtable_check>
    0.00 :   56940:  mov    0x38(%r15),%rax
    0.00 :   56944:  mov    -0xe0(%rbp),%r11
    0.00 :   5694b:  jmp    554de <__GI___printf_fp_l+0x164e>
    0.00 :   56950:  mov    %r8,-0xe8(%rbp)
    0.00 :   56957:  mov    $0x2b,%esi
    0.00 :   5695c:  jmp    55f94 <__GI___printf_fp_l+0x2104>
    0.00 :   56961:  mov    %r13d,%edx
    0.00 :   56964:  xor    %r13d,%r13d
    0.00 :   56967:  mov    %r13d,%r12d
    0.00 :   5696a:  mov    0xa0(%rbx),%rax
    0.00 :   56971:  mov    %edx,%r13d
    0.00 :   56974:  jmp    54084 <__GI___printf_fp_l+0x1f4>
    0.00 :   56979:  mov    -0xc0(%rbp),%edi
    0.00 :   5697f:  movl   $0x31,(%rax)
    0.00 :   56985:  mov    %edi,0x4(%rax)
    0.00 :   56988:  mov    -0xb8(%rbp),%rax
    0.00 :   5698f:  testb  $0x8,0xc(%rax)
    0.00 :   56993:  jne    5699e <__GI___printf_fp_l+0x2b0e>
    0.00 :   56995:  test   %r14d,%r14d
    0.00 :   56998:  je     56a88 <__GI___printf_fp_l+0x2bf8>
    0.00 :   5699e:  movslq -0x134(%rbp),%rax
    0.00 :   569a5:  mov    -0x128(%rbp),%rcx
    0.00 :   569ac:  movl   $0x30,0x8(%rcx,%rax,4)
    0.00 :   569b4:  lea    0x1(%r14,%rax,1),%r14d
    0.00 :   569b9:  mov    -0xb8(%rbp),%rax
    0.00 :   569c0:  addl   $0x1,-0x98(%rbp)
    0.00 :   569c7:  mov    -0x128(%rbp),%r8
    0.00 :   569ce:  movslq 0x8(%rax),%rdi
    0.00 :   569d2:  mov    0x17c41f(%rip),%rax        # 1d2df8 <_DYNAMIC+0x278>
    0.00 :   569d9:  mov    %fs:(%rax),%rax
    0.00 :   569dd:  movl   $0x1,-0x134(%rbp)
    0.00 :   569e7:  movzwl (%rax,%rdi,2),%eax
    0.00 :   569eb:  and    $0x100,%ax
    0.00 :   569ef:  cmp    $0x1,%ax
    0.00 :   569f3:  sbb    %eax,%eax
    0.00 :   569f5:  and    $0x20,%eax
    0.00 :   569f8:  add    $0x45,%eax
    0.00 :   569fb:  mov    %eax,-0x9c(%rbp)
    0.00 :   56a01:  jmp    559ec <__GI___printf_fp_l+0x1b5c>
    0.00 :   56a06:  test   %rax,%rax
    0.00 :   56a09:  js     54870 <__GI___printf_fp_l+0x9e0>
    0.00 :   56a0f:  mov    -0x90(%rbp),%rax
    0.00 :   56a16:  mov    %rdi,%rsi
    0.00 :   56a19:  xor    %r14d,%r14d
    0.00 :   56a1c:  xor    %r13d,%r13d
    0.00 :   56a1f:  mov    (%rax),%r9
    0.00 :   56a22:  mov    %r8,%rax
    0.00 :   56a25:  jmp    5653b <__GI___printf_fp_l+0x26ab>
    0.00 :   56a2a:  mov    $0x20,%esi
    0.00 :   56a2f:  mov    %rbx,%rdi
    0.00 :   56a32:  mov    %rcx,-0xe0(%rbp)
    0.00 :   56a39:  mov    %r8b,-0xd0(%rbp)
    0.00 :   56a40:  call   84a60 <__overflow>
    0.00 :   56a45:  movzbl -0xd0(%rbp),%r8d
    0.00 :   56a4d:  mov    -0xe0(%rbp),%rcx
    0.00 :   56a54:  cmp    $0xffffffff,%eax
    0.00 :   56a57:  je     54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56a5d:  lea    0x1(%r14),%r15d
    0.00 :   56a61:  jmp    54337 <__GI___printf_fp_l+0x4a7>
    0.00 :   56a66:  mov    %r8,-0xe8(%rbp)
    0.00 :   56a6d:  mov    $0x20,%esi
    0.00 :   56a72:  jmp    55f94 <__GI___printf_fp_l+0x2104>
    0.00 :   56a77:  mov    %r8,-0xe8(%rbp)
    0.00 :   56a7e:  mov    $0x2b,%esi
    0.00 :   56a83:  jmp    5691a <__GI___printf_fp_l+0x2a8a>
    0.00 :   56a88:  mov    -0x130(%rbp),%r14d
    0.00 :   56a8f:  jmp    569b9 <__GI___printf_fp_l+0x2b29>
    0.00 :   56a94:  mov    %r8,-0xe8(%rbp)
    0.00 :   56a9b:  mov    $0x20,%esi
    0.00 :   56aa0:  jmp    5691a <__GI___printf_fp_l+0x2a8a>
    0.00 :   56aa5:  mov    -0x140(%rbp),%ebx
    0.00 :   56aab:  test   %ebx,%ebx
    0.00 :   56aad:  jne    54c91 <__GI___printf_fp_l+0xe01>
    0.00 :   56ab3:  jmp    55383 <__GI___printf_fp_l+0x14f3>
    0.00 :   56ab8:  xor    %r8d,%r8d
    0.00 :   56abb:  xor    %r9d,%r9d
    0.00 :   56abe:  jmp    5677e <__GI___printf_fp_l+0x28ee>
    0.00 :   56ac3:  call   11ba20 <__stack_chk_fail>
    0.00 :   56ac8:  jmp    2690e <__GI___printf_fp_l.cold>
    0.00 :   56acd:  mov    %r8,%rdi
    0.00 :   56ad0:  mov    $0x6,%edx
    0.00 :   56ad5:  lea    0x14a81c(%rip),%rsi        # 1a12f8 <default_rwlockattr+0x308>
    0.00 :   56adc:  mov    %r8,-0xd0(%rbp)
    0.00 :   56ae3:  call   b3c10 <wmemcpy>
    0.00 :   56ae8:  mov    -0xc0(%rbp),%eax
    0.00 :   56aee:  mov    -0xd0(%rbp),%r8
    0.00 :   56af5:  mov    %eax,0x4(%r8)
    0.00 :   56af9:  lea    0x8(%r8),%rax
    0.00 :   56afd:  cmp    %rax,%r15
    0.00 :   56b00:  jae    56b0b <__GI___printf_fp_l+0x2c7b>
    0.00 :   56b02:  add    $0x14,%r15
    0.00 :   56b06:  jmp    551d0 <__GI___printf_fp_l+0x1340>
    0.00 :   56b0b:  mov    %r15,%rdx
    0.00 :   56b0e:  lea    0x18(%r8),%rdi
    0.00 :   56b12:  mov    $0x30,%esi
    0.00 :   56b17:  add    $0x10,%r15
    0.00 :   56b1b:  sub    %rax,%rdx
    0.00 :   56b1e:  sar    $0x2,%rdx
    0.00 :   56b22:  call   263e0 <*ABS*+0xb3c30@plt>
    0.00 :   56b27:  mov    -0xd0(%rbp),%r8
    0.00 :   56b2e:  jmp    551d0 <__GI___printf_fp_l+0x1340>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   50.08 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:2104
   49.92 /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:239
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (2 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000023430 <strcmp>:
         : 6     strcmp():
    0.00 :   23430:  endbr64
    0.00 :   23434:  mov    %esi,%ecx
    0.00 :   23436:  mov    %edi,%eax
    0.00 :   23438:  and    $0x3f,%rcx
    0.00 :   2343c:  and    $0x3f,%rax
    0.00 :   23440:  cmp    $0x30,%ecx
    0.00 :   23443:  ja     23490 <strcmp+0x60>
    0.00 :   23445:  cmp    $0x30,%eax
    0.00 :   23448:  ja     23490 <strcmp+0x60>
    0.00 :   2344a:  movlpd (%rdi),%xmm1
    0.00 :   2344e:  movlpd (%rsi),%xmm2
    0.00 :   23452:  movhpd 0x8(%rdi),%xmm1
    0.00 :   23457:  movhpd 0x8(%rsi),%xmm2
    0.00 :   2345c:  pxor   %xmm0,%xmm0
    0.00 :   23460:  pcmpeqb %xmm1,%xmm0
    0.00 :   23464:  pcmpeqb %xmm2,%xmm1
    0.00 :   23468:  psubb  %xmm0,%xmm1
    0.00 :   2346c:  pmovmskb %xmm1,%edx
    0.00 :   23470:  sub    $0xffff,%edx
    0.00 :   23476:  jne    24850 <strcmp+0x1420>
    0.00 :   2347c:  add    $0x10,%rsi
    0.00 :   23480:  add    $0x10,%rdi
    0.00 :   23484:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2348f:  nop
    0.00 :   23490:  and    $0xfffffffffffffff0,%rsi
    0.00 :   23494:  and    $0xfffffffffffffff0,%rdi
    0.00 :   23498:  mov    $0xffff,%edx
    0.00 :   2349d:  xor    %r8d,%r8d
    0.00 :   234a0:  and    $0xf,%ecx
    0.00 :   234a3:  and    $0xf,%eax
    0.00 :   234a6:  cmp    %eax,%ecx
    0.00 :   234a8:  je     234d0 <strcmp+0xa0>
    0.00 :   234aa:  ja     234b3 <strcmp+0x83>
    0.00 :   234ac:  mov    %edx,%r8d
    0.00 :   234af:  xchg   %eax,%ecx
    0.00 :   234b0:  xchg   %rsi,%rdi
    0.00 :   234b3:  lea    0xf(%rax),%r9
    0.00 :   234b7:  sub    %rcx,%r9
    0.00 :   234ba:  lea    0x5d57(%rip),%r10        # 29218 <debopts.5+0x2d8>
    0.00 :   234c1:  movslq (%r10,%r9,4),%r9
    0.00 :   234c5:  lea    (%r10,%r9,1),%r10
    0.00 :   234c9:  notrack jmp *%r10
    0.00 :   234cd:  nopl   (%rax)
    0.00 :   234d0:  movdqa (%rsi),%xmm1
    0.00 :   234d4:  pxor   %xmm0,%xmm0
    0.00 :   234d8:  pcmpeqb %xmm1,%xmm0
    0.00 :   234dc:  pcmpeqb (%rdi),%xmm1
   49.92 :   234e0:  psubb  %xmm0,%xmm1 // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:239
    0.00 :   234e4:  pmovmskb %xmm1,%r9d
    0.00 :   234e9:  shr    %cl,%edx
    0.00 :   234eb:  shr    %cl,%r9d
    0.00 :   234ee:  sub    %r9d,%edx
    0.00 :   234f1:  jne    24835 <strcmp+0x1405>
    0.00 :   234f7:  mov    $0x10,%rcx
    0.00 :   234fe:  mov    $0x10,%r9
    0.00 :   23505:  pxor   %xmm0,%xmm0
    0.00 :   23509:  nopl   0x0(%rax)
    0.00 :   23510:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23515:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2351a:  pcmpeqb %xmm1,%xmm0
    0.00 :   2351e:  pcmpeqb %xmm2,%xmm1
    0.00 :   23522:  psubb  %xmm0,%xmm1
    0.00 :   23526:  pmovmskb %xmm1,%edx
    0.00 :   2352a:  sub    $0xffff,%edx
    0.00 :   23530:  jne    24830 <strcmp+0x1400>
    0.00 :   23536:  add    $0x10,%rcx
    0.00 :   2353a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2353f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23544:  pcmpeqb %xmm1,%xmm0
    0.00 :   23548:  pcmpeqb %xmm2,%xmm1
    0.00 :   2354c:  psubb  %xmm0,%xmm1
    0.00 :   23550:  pmovmskb %xmm1,%edx
    0.00 :   23554:  sub    $0xffff,%edx
    0.00 :   2355a:  jne    24830 <strcmp+0x1400>
    0.00 :   23560:  add    $0x10,%rcx
    0.00 :   23564:  jmp    23510 <strcmp+0xe0>
    0.00 :   23566:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   23570:  pxor   %xmm0,%xmm0
    0.00 :   23574:  movdqa (%rdi),%xmm2
    0.00 :   23578:  movdqa (%rsi),%xmm1
    0.00 :   2357c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23580:  pslldq $0xf,%xmm2
    0.00 :   23585:  pcmpeqb %xmm1,%xmm2
    0.00 :   23589:  psubb  %xmm0,%xmm2
    0.00 :   2358d:  pmovmskb %xmm2,%r9d
    0.00 :   23592:  shr    %cl,%edx
    0.00 :   23594:  shr    %cl,%r9d
    0.00 :   23597:  sub    %r9d,%edx
    0.00 :   2359a:  jne    24835 <strcmp+0x1405>
    0.00 :   235a0:  movdqa (%rdi),%xmm3
    0.00 :   235a4:  pxor   %xmm0,%xmm0
    0.00 :   235a8:  mov    $0x10,%rcx
    0.00 :   235af:  mov    $0x1,%r9d
    0.00 :   235b5:  lea    0x1(%rdi),%r10
    0.00 :   235b9:  and    $0xfff,%r10
    0.00 :   235c0:  sub    $0x1000,%r10
    0.00 :   235c7:  nopw   0x0(%rax,%rax,1)
    0.00 :   235d0:  add    $0x10,%r10
    0.00 :   235d4:  jg     23670 <strcmp+0x240>
    0.00 :   235da:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   235df:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   235e4:  movdqa %xmm2,%xmm4
    0.00 :   235e8:  psrldq $0x1,%xmm3
    0.00 :   235ed:  pslldq $0xf,%xmm2
    0.00 :   235f2:  por    %xmm3,%xmm2
    0.00 :   235f6:  pcmpeqb %xmm1,%xmm0
    0.00 :   235fa:  pcmpeqb %xmm2,%xmm1
    0.00 :   235fe:  psubb  %xmm0,%xmm1
    0.00 :   23602:  pmovmskb %xmm1,%edx
    0.00 :   23606:  sub    $0xffff,%edx
    0.00 :   2360c:  jne    24830 <strcmp+0x1400>
    0.00 :   23612:  add    $0x10,%rcx
    0.00 :   23616:  movdqa %xmm4,%xmm3
    0.00 :   2361a:  add    $0x10,%r10
    0.00 :   2361e:  jg     23670 <strcmp+0x240>
    0.00 :   23620:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23625:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2362a:  movdqa %xmm2,%xmm4
    0.00 :   2362e:  psrldq $0x1,%xmm3
    0.00 :   23633:  pslldq $0xf,%xmm2
    0.00 :   23638:  por    %xmm3,%xmm2
    0.00 :   2363c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23640:  pcmpeqb %xmm2,%xmm1
    0.00 :   23644:  psubb  %xmm0,%xmm1
    0.00 :   23648:  pmovmskb %xmm1,%edx
    0.00 :   2364c:  sub    $0xffff,%edx
    0.00 :   23652:  jne    24830 <strcmp+0x1400>
    0.00 :   23658:  add    $0x10,%rcx
    0.00 :   2365c:  movdqa %xmm4,%xmm3
    0.00 :   23660:  jmp    235d0 <strcmp+0x1a0>
    0.00 :   23665:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23670:  pcmpeqb %xmm3,%xmm0
    0.00 :   23674:  pmovmskb %xmm0,%edx
    0.00 :   23678:  test   $0xfffe,%edx
    0.00 :   2367e:  jne    23690 <strcmp+0x260>
    0.00 :   23680:  pxor   %xmm0,%xmm0
    0.00 :   23684:  sub    $0x1000,%r10
    0.00 :   2368b:  jmp    235da <strcmp+0x1aa>
    0.00 :   23690:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23695:  psrldq $0x1,%xmm0
    0.00 :   2369a:  psrldq $0x1,%xmm3
    0.00 :   2369f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   236a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   236af:  nop
    0.00 :   236b0:  pxor   %xmm0,%xmm0
    0.00 :   236b4:  movdqa (%rdi),%xmm2
    0.00 :   236b8:  movdqa (%rsi),%xmm1
    0.00 :   236bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   236c0:  pslldq $0xe,%xmm2
    0.00 :   236c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   236c9:  psubb  %xmm0,%xmm2
    0.00 :   236cd:  pmovmskb %xmm2,%r9d
    0.00 :   236d2:  shr    %cl,%edx
    0.00 :   236d4:  shr    %cl,%r9d
    0.00 :   236d7:  sub    %r9d,%edx
    0.00 :   236da:  jne    24835 <strcmp+0x1405>
    0.00 :   236e0:  movdqa (%rdi),%xmm3
    0.00 :   236e4:  pxor   %xmm0,%xmm0
    0.00 :   236e8:  mov    $0x10,%rcx
    0.00 :   236ef:  mov    $0x2,%r9d
    0.00 :   236f5:  lea    0x2(%rdi),%r10
    0.00 :   236f9:  and    $0xfff,%r10
    0.00 :   23700:  sub    $0x1000,%r10
    0.00 :   23707:  nopw   0x0(%rax,%rax,1)
    0.00 :   23710:  add    $0x10,%r10
    0.00 :   23714:  jg     237b0 <strcmp+0x380>
    0.00 :   2371a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2371f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23724:  movdqa %xmm2,%xmm4
    0.00 :   23728:  psrldq $0x2,%xmm3
    0.00 :   2372d:  pslldq $0xe,%xmm2
    0.00 :   23732:  por    %xmm3,%xmm2
    0.00 :   23736:  pcmpeqb %xmm1,%xmm0
    0.00 :   2373a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2373e:  psubb  %xmm0,%xmm1
    0.00 :   23742:  pmovmskb %xmm1,%edx
    0.00 :   23746:  sub    $0xffff,%edx
    0.00 :   2374c:  jne    24830 <strcmp+0x1400>
    0.00 :   23752:  add    $0x10,%rcx
    0.00 :   23756:  movdqa %xmm4,%xmm3
    0.00 :   2375a:  add    $0x10,%r10
    0.00 :   2375e:  jg     237b0 <strcmp+0x380>
    0.00 :   23760:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23765:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2376a:  movdqa %xmm2,%xmm4
    0.00 :   2376e:  psrldq $0x2,%xmm3
    0.00 :   23773:  pslldq $0xe,%xmm2
    0.00 :   23778:  por    %xmm3,%xmm2
    0.00 :   2377c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23780:  pcmpeqb %xmm2,%xmm1
    0.00 :   23784:  psubb  %xmm0,%xmm1
    0.00 :   23788:  pmovmskb %xmm1,%edx
    0.00 :   2378c:  sub    $0xffff,%edx
    0.00 :   23792:  jne    24830 <strcmp+0x1400>
    0.00 :   23798:  add    $0x10,%rcx
    0.00 :   2379c:  movdqa %xmm4,%xmm3
    0.00 :   237a0:  jmp    23710 <strcmp+0x2e0>
    0.00 :   237a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   237b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   237b4:  pmovmskb %xmm0,%edx
    0.00 :   237b8:  test   $0xfffc,%edx
    0.00 :   237be:  jne    237d0 <strcmp+0x3a0>
    0.00 :   237c0:  pxor   %xmm0,%xmm0
    0.00 :   237c4:  sub    $0x1000,%r10
    0.00 :   237cb:  jmp    2371a <strcmp+0x2ea>
    0.00 :   237d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   237d5:  psrldq $0x2,%xmm0
    0.00 :   237da:  psrldq $0x2,%xmm3
    0.00 :   237df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   237e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   237ef:  nop
    0.00 :   237f0:  pxor   %xmm0,%xmm0
    0.00 :   237f4:  movdqa (%rdi),%xmm2
    0.00 :   237f8:  movdqa (%rsi),%xmm1
    0.00 :   237fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23800:  pslldq $0xd,%xmm2
    0.00 :   23805:  pcmpeqb %xmm1,%xmm2
    0.00 :   23809:  psubb  %xmm0,%xmm2
    0.00 :   2380d:  pmovmskb %xmm2,%r9d
    0.00 :   23812:  shr    %cl,%edx
    0.00 :   23814:  shr    %cl,%r9d
    0.00 :   23817:  sub    %r9d,%edx
    0.00 :   2381a:  jne    24835 <strcmp+0x1405>
    0.00 :   23820:  movdqa (%rdi),%xmm3
    0.00 :   23824:  pxor   %xmm0,%xmm0
    0.00 :   23828:  mov    $0x10,%rcx
    0.00 :   2382f:  mov    $0x3,%r9d
    0.00 :   23835:  lea    0x3(%rdi),%r10
    0.00 :   23839:  and    $0xfff,%r10
    0.00 :   23840:  sub    $0x1000,%r10
    0.00 :   23847:  nopw   0x0(%rax,%rax,1)
    0.00 :   23850:  add    $0x10,%r10
    0.00 :   23854:  jg     238f0 <strcmp+0x4c0>
    0.00 :   2385a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2385f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23864:  movdqa %xmm2,%xmm4
    0.00 :   23868:  psrldq $0x3,%xmm3
    0.00 :   2386d:  pslldq $0xd,%xmm2
    0.00 :   23872:  por    %xmm3,%xmm2
    0.00 :   23876:  pcmpeqb %xmm1,%xmm0
    0.00 :   2387a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2387e:  psubb  %xmm0,%xmm1
    0.00 :   23882:  pmovmskb %xmm1,%edx
    0.00 :   23886:  sub    $0xffff,%edx
    0.00 :   2388c:  jne    24830 <strcmp+0x1400>
    0.00 :   23892:  add    $0x10,%rcx
    0.00 :   23896:  movdqa %xmm4,%xmm3
    0.00 :   2389a:  add    $0x10,%r10
    0.00 :   2389e:  jg     238f0 <strcmp+0x4c0>
    0.00 :   238a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   238a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   238aa:  movdqa %xmm2,%xmm4
    0.00 :   238ae:  psrldq $0x3,%xmm3
    0.00 :   238b3:  pslldq $0xd,%xmm2
    0.00 :   238b8:  por    %xmm3,%xmm2
    0.00 :   238bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   238c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   238c4:  psubb  %xmm0,%xmm1
    0.00 :   238c8:  pmovmskb %xmm1,%edx
    0.00 :   238cc:  sub    $0xffff,%edx
    0.00 :   238d2:  jne    24830 <strcmp+0x1400>
    0.00 :   238d8:  add    $0x10,%rcx
    0.00 :   238dc:  movdqa %xmm4,%xmm3
    0.00 :   238e0:  jmp    23850 <strcmp+0x420>
    0.00 :   238e5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   238f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   238f4:  pmovmskb %xmm0,%edx
    0.00 :   238f8:  test   $0xfff8,%edx
    0.00 :   238fe:  jne    23910 <strcmp+0x4e0>
    0.00 :   23900:  pxor   %xmm0,%xmm0
    0.00 :   23904:  sub    $0x1000,%r10
    0.00 :   2390b:  jmp    2385a <strcmp+0x42a>
    0.00 :   23910:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23915:  psrldq $0x3,%xmm0
    0.00 :   2391a:  psrldq $0x3,%xmm3
    0.00 :   2391f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23924:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2392f:  nop
    0.00 :   23930:  pxor   %xmm0,%xmm0
    0.00 :   23934:  movdqa (%rdi),%xmm2
    0.00 :   23938:  movdqa (%rsi),%xmm1
    0.00 :   2393c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23940:  pslldq $0xc,%xmm2
    0.00 :   23945:  pcmpeqb %xmm1,%xmm2
    0.00 :   23949:  psubb  %xmm0,%xmm2
    0.00 :   2394d:  pmovmskb %xmm2,%r9d
    0.00 :   23952:  shr    %cl,%edx
    0.00 :   23954:  shr    %cl,%r9d
    0.00 :   23957:  sub    %r9d,%edx
    0.00 :   2395a:  jne    24835 <strcmp+0x1405>
    0.00 :   23960:  movdqa (%rdi),%xmm3
    0.00 :   23964:  pxor   %xmm0,%xmm0
    0.00 :   23968:  mov    $0x10,%rcx
    0.00 :   2396f:  mov    $0x4,%r9d
    0.00 :   23975:  lea    0x4(%rdi),%r10
    0.00 :   23979:  and    $0xfff,%r10
    0.00 :   23980:  sub    $0x1000,%r10
    0.00 :   23987:  nopw   0x0(%rax,%rax,1)
    0.00 :   23990:  add    $0x10,%r10
    0.00 :   23994:  jg     23a30 <strcmp+0x600>
    0.00 :   2399a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2399f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   239a4:  movdqa %xmm2,%xmm4
    0.00 :   239a8:  psrldq $0x4,%xmm3
    0.00 :   239ad:  pslldq $0xc,%xmm2
    0.00 :   239b2:  por    %xmm3,%xmm2
    0.00 :   239b6:  pcmpeqb %xmm1,%xmm0
    0.00 :   239ba:  pcmpeqb %xmm2,%xmm1
    0.00 :   239be:  psubb  %xmm0,%xmm1
    0.00 :   239c2:  pmovmskb %xmm1,%edx
    0.00 :   239c6:  sub    $0xffff,%edx
    0.00 :   239cc:  jne    24830 <strcmp+0x1400>
    0.00 :   239d2:  add    $0x10,%rcx
    0.00 :   239d6:  movdqa %xmm4,%xmm3
    0.00 :   239da:  add    $0x10,%r10
    0.00 :   239de:  jg     23a30 <strcmp+0x600>
    0.00 :   239e0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   239e5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   239ea:  movdqa %xmm2,%xmm4
    0.00 :   239ee:  psrldq $0x4,%xmm3
    0.00 :   239f3:  pslldq $0xc,%xmm2
    0.00 :   239f8:  por    %xmm3,%xmm2
    0.00 :   239fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23a00:  pcmpeqb %xmm2,%xmm1
    0.00 :   23a04:  psubb  %xmm0,%xmm1
    0.00 :   23a08:  pmovmskb %xmm1,%edx
    0.00 :   23a0c:  sub    $0xffff,%edx
    0.00 :   23a12:  jne    24830 <strcmp+0x1400>
    0.00 :   23a18:  add    $0x10,%rcx
    0.00 :   23a1c:  movdqa %xmm4,%xmm3
    0.00 :   23a20:  jmp    23990 <strcmp+0x560>
    0.00 :   23a25:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23a30:  pcmpeqb %xmm3,%xmm0
    0.00 :   23a34:  pmovmskb %xmm0,%edx
    0.00 :   23a38:  test   $0xfff0,%edx
    0.00 :   23a3e:  jne    23a50 <strcmp+0x620>
    0.00 :   23a40:  pxor   %xmm0,%xmm0
    0.00 :   23a44:  sub    $0x1000,%r10
    0.00 :   23a4b:  jmp    2399a <strcmp+0x56a>
    0.00 :   23a50:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23a55:  psrldq $0x4,%xmm0
    0.00 :   23a5a:  psrldq $0x4,%xmm3
    0.00 :   23a5f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23a64:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23a6f:  nop
    0.00 :   23a70:  pxor   %xmm0,%xmm0
    0.00 :   23a74:  movdqa (%rdi),%xmm2
    0.00 :   23a78:  movdqa (%rsi),%xmm1
    0.00 :   23a7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23a80:  pslldq $0xb,%xmm2
    0.00 :   23a85:  pcmpeqb %xmm1,%xmm2
    0.00 :   23a89:  psubb  %xmm0,%xmm2
    0.00 :   23a8d:  pmovmskb %xmm2,%r9d
    0.00 :   23a92:  shr    %cl,%edx
    0.00 :   23a94:  shr    %cl,%r9d
    0.00 :   23a97:  sub    %r9d,%edx
    0.00 :   23a9a:  jne    24835 <strcmp+0x1405>
    0.00 :   23aa0:  movdqa (%rdi),%xmm3
    0.00 :   23aa4:  pxor   %xmm0,%xmm0
    0.00 :   23aa8:  mov    $0x10,%rcx
    0.00 :   23aaf:  mov    $0x5,%r9d
    0.00 :   23ab5:  lea    0x5(%rdi),%r10
    0.00 :   23ab9:  and    $0xfff,%r10
    0.00 :   23ac0:  sub    $0x1000,%r10
    0.00 :   23ac7:  nopw   0x0(%rax,%rax,1)
    0.00 :   23ad0:  add    $0x10,%r10
    0.00 :   23ad4:  jg     23b70 <strcmp+0x740>
    0.00 :   23ada:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23adf:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23ae4:  movdqa %xmm2,%xmm4
    0.00 :   23ae8:  psrldq $0x5,%xmm3
    0.00 :   23aed:  pslldq $0xb,%xmm2
    0.00 :   23af2:  por    %xmm3,%xmm2
    0.00 :   23af6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23afa:  pcmpeqb %xmm2,%xmm1
    0.00 :   23afe:  psubb  %xmm0,%xmm1
    0.00 :   23b02:  pmovmskb %xmm1,%edx
    0.00 :   23b06:  sub    $0xffff,%edx
    0.00 :   23b0c:  jne    24830 <strcmp+0x1400>
    0.00 :   23b12:  add    $0x10,%rcx
    0.00 :   23b16:  movdqa %xmm4,%xmm3
    0.00 :   23b1a:  add    $0x10,%r10
    0.00 :   23b1e:  jg     23b70 <strcmp+0x740>
    0.00 :   23b20:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23b25:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23b2a:  movdqa %xmm2,%xmm4
    0.00 :   23b2e:  psrldq $0x5,%xmm3
    0.00 :   23b33:  pslldq $0xb,%xmm2
    0.00 :   23b38:  por    %xmm3,%xmm2
    0.00 :   23b3c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23b40:  pcmpeqb %xmm2,%xmm1
    0.00 :   23b44:  psubb  %xmm0,%xmm1
    0.00 :   23b48:  pmovmskb %xmm1,%edx
    0.00 :   23b4c:  sub    $0xffff,%edx
    0.00 :   23b52:  jne    24830 <strcmp+0x1400>
    0.00 :   23b58:  add    $0x10,%rcx
    0.00 :   23b5c:  movdqa %xmm4,%xmm3
    0.00 :   23b60:  jmp    23ad0 <strcmp+0x6a0>
    0.00 :   23b65:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23b70:  pcmpeqb %xmm3,%xmm0
    0.00 :   23b74:  pmovmskb %xmm0,%edx
    0.00 :   23b78:  test   $0xffe0,%edx
    0.00 :   23b7e:  jne    23b90 <strcmp+0x760>
    0.00 :   23b80:  pxor   %xmm0,%xmm0
    0.00 :   23b84:  sub    $0x1000,%r10
    0.00 :   23b8b:  jmp    23ada <strcmp+0x6aa>
    0.00 :   23b90:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23b95:  psrldq $0x5,%xmm0
    0.00 :   23b9a:  psrldq $0x5,%xmm3
    0.00 :   23b9f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23ba4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23baf:  nop
    0.00 :   23bb0:  pxor   %xmm0,%xmm0
    0.00 :   23bb4:  movdqa (%rdi),%xmm2
    0.00 :   23bb8:  movdqa (%rsi),%xmm1
    0.00 :   23bbc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23bc0:  pslldq $0xa,%xmm2
    0.00 :   23bc5:  pcmpeqb %xmm1,%xmm2
    0.00 :   23bc9:  psubb  %xmm0,%xmm2
    0.00 :   23bcd:  pmovmskb %xmm2,%r9d
    0.00 :   23bd2:  shr    %cl,%edx
    0.00 :   23bd4:  shr    %cl,%r9d
    0.00 :   23bd7:  sub    %r9d,%edx
    0.00 :   23bda:  jne    24835 <strcmp+0x1405>
    0.00 :   23be0:  movdqa (%rdi),%xmm3
    0.00 :   23be4:  pxor   %xmm0,%xmm0
    0.00 :   23be8:  mov    $0x10,%rcx
    0.00 :   23bef:  mov    $0x6,%r9d
    0.00 :   23bf5:  lea    0x6(%rdi),%r10
    0.00 :   23bf9:  and    $0xfff,%r10
    0.00 :   23c00:  sub    $0x1000,%r10
    0.00 :   23c07:  nopw   0x0(%rax,%rax,1)
    0.00 :   23c10:  add    $0x10,%r10
    0.00 :   23c14:  jg     23cb0 <strcmp+0x880>
    0.00 :   23c1a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23c1f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23c24:  movdqa %xmm2,%xmm4
    0.00 :   23c28:  psrldq $0x6,%xmm3
    0.00 :   23c2d:  pslldq $0xa,%xmm2
    0.00 :   23c32:  por    %xmm3,%xmm2
    0.00 :   23c36:  pcmpeqb %xmm1,%xmm0
    0.00 :   23c3a:  pcmpeqb %xmm2,%xmm1
    0.00 :   23c3e:  psubb  %xmm0,%xmm1
    0.00 :   23c42:  pmovmskb %xmm1,%edx
    0.00 :   23c46:  sub    $0xffff,%edx
    0.00 :   23c4c:  jne    24830 <strcmp+0x1400>
    0.00 :   23c52:  add    $0x10,%rcx
    0.00 :   23c56:  movdqa %xmm4,%xmm3
    0.00 :   23c5a:  add    $0x10,%r10
    0.00 :   23c5e:  jg     23cb0 <strcmp+0x880>
    0.00 :   23c60:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23c65:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23c6a:  movdqa %xmm2,%xmm4
    0.00 :   23c6e:  psrldq $0x6,%xmm3
    0.00 :   23c73:  pslldq $0xa,%xmm2
    0.00 :   23c78:  por    %xmm3,%xmm2
    0.00 :   23c7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23c80:  pcmpeqb %xmm2,%xmm1
    0.00 :   23c84:  psubb  %xmm0,%xmm1
    0.00 :   23c88:  pmovmskb %xmm1,%edx
    0.00 :   23c8c:  sub    $0xffff,%edx
    0.00 :   23c92:  jne    24830 <strcmp+0x1400>
    0.00 :   23c98:  add    $0x10,%rcx
    0.00 :   23c9c:  movdqa %xmm4,%xmm3
    0.00 :   23ca0:  jmp    23c10 <strcmp+0x7e0>
    0.00 :   23ca5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23cb0:  pcmpeqb %xmm3,%xmm0
    0.00 :   23cb4:  pmovmskb %xmm0,%edx
    0.00 :   23cb8:  test   $0xffc0,%edx
    0.00 :   23cbe:  jne    23cd0 <strcmp+0x8a0>
    0.00 :   23cc0:  pxor   %xmm0,%xmm0
    0.00 :   23cc4:  sub    $0x1000,%r10
    0.00 :   23ccb:  jmp    23c1a <strcmp+0x7ea>
    0.00 :   23cd0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23cd5:  psrldq $0x6,%xmm0
    0.00 :   23cda:  psrldq $0x6,%xmm3
    0.00 :   23cdf:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23ce4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23cef:  nop
    0.00 :   23cf0:  pxor   %xmm0,%xmm0
    0.00 :   23cf4:  movdqa (%rdi),%xmm2
    0.00 :   23cf8:  movdqa (%rsi),%xmm1
    0.00 :   23cfc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23d00:  pslldq $0x9,%xmm2
    0.00 :   23d05:  pcmpeqb %xmm1,%xmm2
    0.00 :   23d09:  psubb  %xmm0,%xmm2
    0.00 :   23d0d:  pmovmskb %xmm2,%r9d
    0.00 :   23d12:  shr    %cl,%edx
    0.00 :   23d14:  shr    %cl,%r9d
    0.00 :   23d17:  sub    %r9d,%edx
    0.00 :   23d1a:  jne    24835 <strcmp+0x1405>
    0.00 :   23d20:  movdqa (%rdi),%xmm3
    0.00 :   23d24:  pxor   %xmm0,%xmm0
    0.00 :   23d28:  mov    $0x10,%rcx
    0.00 :   23d2f:  mov    $0x7,%r9d
    0.00 :   23d35:  lea    0x7(%rdi),%r10
    0.00 :   23d39:  and    $0xfff,%r10
    0.00 :   23d40:  sub    $0x1000,%r10
    0.00 :   23d47:  nopw   0x0(%rax,%rax,1)
    0.00 :   23d50:  add    $0x10,%r10
    0.00 :   23d54:  jg     23df0 <strcmp+0x9c0>
    0.00 :   23d5a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23d5f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23d64:  movdqa %xmm2,%xmm4
    0.00 :   23d68:  psrldq $0x7,%xmm3
    0.00 :   23d6d:  pslldq $0x9,%xmm2
    0.00 :   23d72:  por    %xmm3,%xmm2
    0.00 :   23d76:  pcmpeqb %xmm1,%xmm0
    0.00 :   23d7a:  pcmpeqb %xmm2,%xmm1
    0.00 :   23d7e:  psubb  %xmm0,%xmm1
    0.00 :   23d82:  pmovmskb %xmm1,%edx
    0.00 :   23d86:  sub    $0xffff,%edx
    0.00 :   23d8c:  jne    24830 <strcmp+0x1400>
    0.00 :   23d92:  add    $0x10,%rcx
    0.00 :   23d96:  movdqa %xmm4,%xmm3
    0.00 :   23d9a:  add    $0x10,%r10
    0.00 :   23d9e:  jg     23df0 <strcmp+0x9c0>
    0.00 :   23da0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23da5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23daa:  movdqa %xmm2,%xmm4
    0.00 :   23dae:  psrldq $0x7,%xmm3
    0.00 :   23db3:  pslldq $0x9,%xmm2
    0.00 :   23db8:  por    %xmm3,%xmm2
    0.00 :   23dbc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23dc0:  pcmpeqb %xmm2,%xmm1
    0.00 :   23dc4:  psubb  %xmm0,%xmm1
    0.00 :   23dc8:  pmovmskb %xmm1,%edx
    0.00 :   23dcc:  sub    $0xffff,%edx
    0.00 :   23dd2:  jne    24830 <strcmp+0x1400>
    0.00 :   23dd8:  add    $0x10,%rcx
    0.00 :   23ddc:  movdqa %xmm4,%xmm3
    0.00 :   23de0:  jmp    23d50 <strcmp+0x920>
    0.00 :   23de5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23df0:  pcmpeqb %xmm3,%xmm0
    0.00 :   23df4:  pmovmskb %xmm0,%edx
    0.00 :   23df8:  test   $0xff80,%edx
    0.00 :   23dfe:  jne    23e10 <strcmp+0x9e0>
    0.00 :   23e00:  pxor   %xmm0,%xmm0
    0.00 :   23e04:  sub    $0x1000,%r10
    0.00 :   23e0b:  jmp    23d5a <strcmp+0x92a>
    0.00 :   23e10:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23e15:  psrldq $0x7,%xmm0
    0.00 :   23e1a:  psrldq $0x7,%xmm3
    0.00 :   23e1f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23e24:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23e2f:  nop
    0.00 :   23e30:  pxor   %xmm0,%xmm0
    0.00 :   23e34:  movdqa (%rdi),%xmm2
    0.00 :   23e38:  movdqa (%rsi),%xmm1
    0.00 :   23e3c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23e40:  pslldq $0x8,%xmm2
    0.00 :   23e45:  pcmpeqb %xmm1,%xmm2
    0.00 :   23e49:  psubb  %xmm0,%xmm2
    0.00 :   23e4d:  pmovmskb %xmm2,%r9d
    0.00 :   23e52:  shr    %cl,%edx
    0.00 :   23e54:  shr    %cl,%r9d
    0.00 :   23e57:  sub    %r9d,%edx
    0.00 :   23e5a:  jne    24835 <strcmp+0x1405>
    0.00 :   23e60:  movdqa (%rdi),%xmm3
    0.00 :   23e64:  pxor   %xmm0,%xmm0
    0.00 :   23e68:  mov    $0x10,%rcx
    0.00 :   23e6f:  mov    $0x8,%r9d
    0.00 :   23e75:  lea    0x8(%rdi),%r10
    0.00 :   23e79:  and    $0xfff,%r10
    0.00 :   23e80:  sub    $0x1000,%r10
    0.00 :   23e87:  nopw   0x0(%rax,%rax,1)
    0.00 :   23e90:  add    $0x10,%r10
    0.00 :   23e94:  jg     23f30 <strcmp+0xb00>
    0.00 :   23e9a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23e9f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23ea4:  movdqa %xmm2,%xmm4
    0.00 :   23ea8:  psrldq $0x8,%xmm3
    0.00 :   23ead:  pslldq $0x8,%xmm2
    0.00 :   23eb2:  por    %xmm3,%xmm2
    0.00 :   23eb6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23eba:  pcmpeqb %xmm2,%xmm1
    0.00 :   23ebe:  psubb  %xmm0,%xmm1
    0.00 :   23ec2:  pmovmskb %xmm1,%edx
    0.00 :   23ec6:  sub    $0xffff,%edx
    0.00 :   23ecc:  jne    24830 <strcmp+0x1400>
    0.00 :   23ed2:  add    $0x10,%rcx
    0.00 :   23ed6:  movdqa %xmm4,%xmm3
    0.00 :   23eda:  add    $0x10,%r10
    0.00 :   23ede:  jg     23f30 <strcmp+0xb00>
    0.00 :   23ee0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23ee5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23eea:  movdqa %xmm2,%xmm4
    0.00 :   23eee:  psrldq $0x8,%xmm3
    0.00 :   23ef3:  pslldq $0x8,%xmm2
    0.00 :   23ef8:  por    %xmm3,%xmm2
    0.00 :   23efc:  pcmpeqb %xmm1,%xmm0
    0.00 :   23f00:  pcmpeqb %xmm2,%xmm1
    0.00 :   23f04:  psubb  %xmm0,%xmm1
    0.00 :   23f08:  pmovmskb %xmm1,%edx
    0.00 :   23f0c:  sub    $0xffff,%edx
    0.00 :   23f12:  jne    24830 <strcmp+0x1400>
    0.00 :   23f18:  add    $0x10,%rcx
    0.00 :   23f1c:  movdqa %xmm4,%xmm3
    0.00 :   23f20:  jmp    23e90 <strcmp+0xa60>
    0.00 :   23f25:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23f30:  pcmpeqb %xmm3,%xmm0
    0.00 :   23f34:  pmovmskb %xmm0,%edx
    0.00 :   23f38:  test   $0xff00,%edx
    0.00 :   23f3e:  jne    23f50 <strcmp+0xb20>
    0.00 :   23f40:  pxor   %xmm0,%xmm0
    0.00 :   23f44:  sub    $0x1000,%r10
    0.00 :   23f4b:  jmp    23e9a <strcmp+0xa6a>
    0.00 :   23f50:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23f55:  psrldq $0x8,%xmm0
    0.00 :   23f5a:  psrldq $0x8,%xmm3
    0.00 :   23f5f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   23f64:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   23f6f:  nop
    0.00 :   23f70:  pxor   %xmm0,%xmm0
    0.00 :   23f74:  movdqa (%rdi),%xmm2
    0.00 :   23f78:  movdqa (%rsi),%xmm1
    0.00 :   23f7c:  pcmpeqb %xmm1,%xmm0
    0.00 :   23f80:  pslldq $0x7,%xmm2
    0.00 :   23f85:  pcmpeqb %xmm1,%xmm2
    0.00 :   23f89:  psubb  %xmm0,%xmm2
    0.00 :   23f8d:  pmovmskb %xmm2,%r9d
    0.00 :   23f92:  shr    %cl,%edx
    0.00 :   23f94:  shr    %cl,%r9d
    0.00 :   23f97:  sub    %r9d,%edx
    0.00 :   23f9a:  jne    24835 <strcmp+0x1405>
    0.00 :   23fa0:  movdqa (%rdi),%xmm3
    0.00 :   23fa4:  pxor   %xmm0,%xmm0
    0.00 :   23fa8:  mov    $0x10,%rcx
    0.00 :   23faf:  mov    $0x9,%r9d
    0.00 :   23fb5:  lea    0x9(%rdi),%r10
    0.00 :   23fb9:  and    $0xfff,%r10
    0.00 :   23fc0:  sub    $0x1000,%r10
    0.00 :   23fc7:  nopw   0x0(%rax,%rax,1)
    0.00 :   23fd0:  add    $0x10,%r10
    0.00 :   23fd4:  jg     24070 <strcmp+0xc40>
    0.00 :   23fda:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   23fdf:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   23fe4:  movdqa %xmm2,%xmm4
    0.00 :   23fe8:  psrldq $0x9,%xmm3
    0.00 :   23fed:  pslldq $0x7,%xmm2
    0.00 :   23ff2:  por    %xmm3,%xmm2
    0.00 :   23ff6:  pcmpeqb %xmm1,%xmm0
    0.00 :   23ffa:  pcmpeqb %xmm2,%xmm1
    0.00 :   23ffe:  psubb  %xmm0,%xmm1
    0.00 :   24002:  pmovmskb %xmm1,%edx
    0.00 :   24006:  sub    $0xffff,%edx
    0.00 :   2400c:  jne    24830 <strcmp+0x1400>
    0.00 :   24012:  add    $0x10,%rcx
    0.00 :   24016:  movdqa %xmm4,%xmm3
    0.00 :   2401a:  add    $0x10,%r10
    0.00 :   2401e:  jg     24070 <strcmp+0xc40>
    0.00 :   24020:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24025:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2402a:  movdqa %xmm2,%xmm4
    0.00 :   2402e:  psrldq $0x9,%xmm3
    0.00 :   24033:  pslldq $0x7,%xmm2
    0.00 :   24038:  por    %xmm3,%xmm2
    0.00 :   2403c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24040:  pcmpeqb %xmm2,%xmm1
    0.00 :   24044:  psubb  %xmm0,%xmm1
    0.00 :   24048:  pmovmskb %xmm1,%edx
    0.00 :   2404c:  sub    $0xffff,%edx
    0.00 :   24052:  jne    24830 <strcmp+0x1400>
    0.00 :   24058:  add    $0x10,%rcx
    0.00 :   2405c:  movdqa %xmm4,%xmm3
    0.00 :   24060:  jmp    23fd0 <strcmp+0xba0>
    0.00 :   24065:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24070:  pcmpeqb %xmm3,%xmm0
    0.00 :   24074:  pmovmskb %xmm0,%edx
    0.00 :   24078:  test   $0xfe00,%edx
    0.00 :   2407e:  jne    24090 <strcmp+0xc60>
    0.00 :   24080:  pxor   %xmm0,%xmm0
    0.00 :   24084:  sub    $0x1000,%r10
    0.00 :   2408b:  jmp    23fda <strcmp+0xbaa>
    0.00 :   24090:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24095:  psrldq $0x9,%xmm0
    0.00 :   2409a:  psrldq $0x9,%xmm3
    0.00 :   2409f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   240a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   240af:  nop
    0.00 :   240b0:  pxor   %xmm0,%xmm0
    0.00 :   240b4:  movdqa (%rdi),%xmm2
    0.00 :   240b8:  movdqa (%rsi),%xmm1
    0.00 :   240bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   240c0:  pslldq $0x6,%xmm2
    0.00 :   240c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   240c9:  psubb  %xmm0,%xmm2
    0.00 :   240cd:  pmovmskb %xmm2,%r9d
    0.00 :   240d2:  shr    %cl,%edx
    0.00 :   240d4:  shr    %cl,%r9d
    0.00 :   240d7:  sub    %r9d,%edx
    0.00 :   240da:  jne    24835 <strcmp+0x1405>
    0.00 :   240e0:  movdqa (%rdi),%xmm3
    0.00 :   240e4:  pxor   %xmm0,%xmm0
    0.00 :   240e8:  mov    $0x10,%rcx
    0.00 :   240ef:  mov    $0xa,%r9d
    0.00 :   240f5:  lea    0xa(%rdi),%r10
    0.00 :   240f9:  and    $0xfff,%r10
    0.00 :   24100:  sub    $0x1000,%r10
    0.00 :   24107:  nopw   0x0(%rax,%rax,1)
    0.00 :   24110:  add    $0x10,%r10
    0.00 :   24114:  jg     241b0 <strcmp+0xd80>
    0.00 :   2411a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2411f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24124:  movdqa %xmm2,%xmm4
    0.00 :   24128:  psrldq $0xa,%xmm3
    0.00 :   2412d:  pslldq $0x6,%xmm2
    0.00 :   24132:  por    %xmm3,%xmm2
    0.00 :   24136:  pcmpeqb %xmm1,%xmm0
    0.00 :   2413a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2413e:  psubb  %xmm0,%xmm1
    0.00 :   24142:  pmovmskb %xmm1,%edx
    0.00 :   24146:  sub    $0xffff,%edx
    0.00 :   2414c:  jne    24830 <strcmp+0x1400>
    0.00 :   24152:  add    $0x10,%rcx
    0.00 :   24156:  movdqa %xmm4,%xmm3
    0.00 :   2415a:  add    $0x10,%r10
    0.00 :   2415e:  jg     241b0 <strcmp+0xd80>
    0.00 :   24160:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24165:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2416a:  movdqa %xmm2,%xmm4
    0.00 :   2416e:  psrldq $0xa,%xmm3
    0.00 :   24173:  pslldq $0x6,%xmm2
    0.00 :   24178:  por    %xmm3,%xmm2
    0.00 :   2417c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24180:  pcmpeqb %xmm2,%xmm1
    0.00 :   24184:  psubb  %xmm0,%xmm1
    0.00 :   24188:  pmovmskb %xmm1,%edx
    0.00 :   2418c:  sub    $0xffff,%edx
    0.00 :   24192:  jne    24830 <strcmp+0x1400>
    0.00 :   24198:  add    $0x10,%rcx
    0.00 :   2419c:  movdqa %xmm4,%xmm3
    0.00 :   241a0:  jmp    24110 <strcmp+0xce0>
    0.00 :   241a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   241b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   241b4:  pmovmskb %xmm0,%edx
    0.00 :   241b8:  test   $0xfc00,%edx
    0.00 :   241be:  jne    241d0 <strcmp+0xda0>
    0.00 :   241c0:  pxor   %xmm0,%xmm0
    0.00 :   241c4:  sub    $0x1000,%r10
    0.00 :   241cb:  jmp    2411a <strcmp+0xcea>
    0.00 :   241d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   241d5:  psrldq $0xa,%xmm0
    0.00 :   241da:  psrldq $0xa,%xmm3
    0.00 :   241df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   241e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   241ef:  nop
    0.00 :   241f0:  pxor   %xmm0,%xmm0
    0.00 :   241f4:  movdqa (%rdi),%xmm2
    0.00 :   241f8:  movdqa (%rsi),%xmm1
    0.00 :   241fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24200:  pslldq $0x5,%xmm2
    0.00 :   24205:  pcmpeqb %xmm1,%xmm2
    0.00 :   24209:  psubb  %xmm0,%xmm2
    0.00 :   2420d:  pmovmskb %xmm2,%r9d
    0.00 :   24212:  shr    %cl,%edx
    0.00 :   24214:  shr    %cl,%r9d
    0.00 :   24217:  sub    %r9d,%edx
    0.00 :   2421a:  jne    24835 <strcmp+0x1405>
    0.00 :   24220:  movdqa (%rdi),%xmm3
    0.00 :   24224:  pxor   %xmm0,%xmm0
    0.00 :   24228:  mov    $0x10,%rcx
    0.00 :   2422f:  mov    $0xb,%r9d
    0.00 :   24235:  lea    0xb(%rdi),%r10
    0.00 :   24239:  and    $0xfff,%r10
    0.00 :   24240:  sub    $0x1000,%r10
    0.00 :   24247:  nopw   0x0(%rax,%rax,1)
    0.00 :   24250:  add    $0x10,%r10
    0.00 :   24254:  jg     242f0 <strcmp+0xec0>
    0.00 :   2425a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2425f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24264:  movdqa %xmm2,%xmm4
    0.00 :   24268:  psrldq $0xb,%xmm3
    0.00 :   2426d:  pslldq $0x5,%xmm2
    0.00 :   24272:  por    %xmm3,%xmm2
    0.00 :   24276:  pcmpeqb %xmm1,%xmm0
    0.00 :   2427a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2427e:  psubb  %xmm0,%xmm1
    0.00 :   24282:  pmovmskb %xmm1,%edx
    0.00 :   24286:  sub    $0xffff,%edx
    0.00 :   2428c:  jne    24830 <strcmp+0x1400>
    0.00 :   24292:  add    $0x10,%rcx
    0.00 :   24296:  movdqa %xmm4,%xmm3
    0.00 :   2429a:  add    $0x10,%r10
    0.00 :   2429e:  jg     242f0 <strcmp+0xec0>
    0.00 :   242a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   242a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   242aa:  movdqa %xmm2,%xmm4
    0.00 :   242ae:  psrldq $0xb,%xmm3
    0.00 :   242b3:  pslldq $0x5,%xmm2
    0.00 :   242b8:  por    %xmm3,%xmm2
    0.00 :   242bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   242c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   242c4:  psubb  %xmm0,%xmm1
    0.00 :   242c8:  pmovmskb %xmm1,%edx
    0.00 :   242cc:  sub    $0xffff,%edx
    0.00 :   242d2:  jne    24830 <strcmp+0x1400>
    0.00 :   242d8:  add    $0x10,%rcx
    0.00 :   242dc:  movdqa %xmm4,%xmm3
    0.00 :   242e0:  jmp    24250 <strcmp+0xe20>
    0.00 :   242e5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   242f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   242f4:  pmovmskb %xmm0,%edx
    0.00 :   242f8:  test   $0xf800,%edx
    0.00 :   242fe:  jne    24310 <strcmp+0xee0>
    0.00 :   24300:  pxor   %xmm0,%xmm0
    0.00 :   24304:  sub    $0x1000,%r10
    0.00 :   2430b:  jmp    2425a <strcmp+0xe2a>
    0.00 :   24310:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24315:  psrldq $0xb,%xmm0
    0.00 :   2431a:  psrldq $0xb,%xmm3
    0.00 :   2431f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   24324:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2432f:  nop
    0.00 :   24330:  pxor   %xmm0,%xmm0
    0.00 :   24334:  movdqa (%rdi),%xmm2
    0.00 :   24338:  movdqa (%rsi),%xmm1
    0.00 :   2433c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24340:  pslldq $0x4,%xmm2
    0.00 :   24345:  pcmpeqb %xmm1,%xmm2
    0.00 :   24349:  psubb  %xmm0,%xmm2
    0.00 :   2434d:  pmovmskb %xmm2,%r9d
    0.00 :   24352:  shr    %cl,%edx
    0.00 :   24354:  shr    %cl,%r9d
    0.00 :   24357:  sub    %r9d,%edx
    0.00 :   2435a:  jne    24835 <strcmp+0x1405>
    0.00 :   24360:  movdqa (%rdi),%xmm3
    0.00 :   24364:  pxor   %xmm0,%xmm0
    0.00 :   24368:  mov    $0x10,%rcx
    0.00 :   2436f:  mov    $0xc,%r9d
    0.00 :   24375:  lea    0xc(%rdi),%r10
    0.00 :   24379:  and    $0xfff,%r10
    0.00 :   24380:  sub    $0x1000,%r10
    0.00 :   24387:  nopw   0x0(%rax,%rax,1)
    0.00 :   24390:  add    $0x10,%r10
    0.00 :   24394:  jg     24430 <strcmp+0x1000>
    0.00 :   2439a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2439f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   243a4:  movdqa %xmm2,%xmm4
    0.00 :   243a8:  psrldq $0xc,%xmm3
    0.00 :   243ad:  pslldq $0x4,%xmm2
    0.00 :   243b2:  por    %xmm3,%xmm2
    0.00 :   243b6:  pcmpeqb %xmm1,%xmm0
    0.00 :   243ba:  pcmpeqb %xmm2,%xmm1
    0.00 :   243be:  psubb  %xmm0,%xmm1
    0.00 :   243c2:  pmovmskb %xmm1,%edx
    0.00 :   243c6:  sub    $0xffff,%edx
    0.00 :   243cc:  jne    24830 <strcmp+0x1400>
    0.00 :   243d2:  add    $0x10,%rcx
    0.00 :   243d6:  movdqa %xmm4,%xmm3
    0.00 :   243da:  add    $0x10,%r10
    0.00 :   243de:  jg     24430 <strcmp+0x1000>
    0.00 :   243e0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   243e5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   243ea:  movdqa %xmm2,%xmm4
    0.00 :   243ee:  psrldq $0xc,%xmm3
    0.00 :   243f3:  pslldq $0x4,%xmm2
    0.00 :   243f8:  por    %xmm3,%xmm2
    0.00 :   243fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24400:  pcmpeqb %xmm2,%xmm1
    0.00 :   24404:  psubb  %xmm0,%xmm1
    0.00 :   24408:  pmovmskb %xmm1,%edx
    0.00 :   2440c:  sub    $0xffff,%edx
    0.00 :   24412:  jne    24830 <strcmp+0x1400>
    0.00 :   24418:  add    $0x10,%rcx
    0.00 :   2441c:  movdqa %xmm4,%xmm3
    0.00 :   24420:  jmp    24390 <strcmp+0xf60>
    0.00 :   24425:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24430:  pcmpeqb %xmm3,%xmm0
    0.00 :   24434:  pmovmskb %xmm0,%edx
    0.00 :   24438:  test   $0xf000,%edx
    0.00 :   2443e:  jne    24450 <strcmp+0x1020>
    0.00 :   24440:  pxor   %xmm0,%xmm0
    0.00 :   24444:  sub    $0x1000,%r10
    0.00 :   2444b:  jmp    2439a <strcmp+0xf6a>
    0.00 :   24450:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24455:  psrldq $0xc,%xmm0
    0.00 :   2445a:  psrldq $0xc,%xmm3
    0.00 :   2445f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   24464:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2446f:  nop
    0.00 :   24470:  pxor   %xmm0,%xmm0
    0.00 :   24474:  movdqa (%rdi),%xmm2
    0.00 :   24478:  movdqa (%rsi),%xmm1
    0.00 :   2447c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24480:  pslldq $0x3,%xmm2
    0.00 :   24485:  pcmpeqb %xmm1,%xmm2
    0.00 :   24489:  psubb  %xmm0,%xmm2
    0.00 :   2448d:  pmovmskb %xmm2,%r9d
    0.00 :   24492:  shr    %cl,%edx
    0.00 :   24494:  shr    %cl,%r9d
    0.00 :   24497:  sub    %r9d,%edx
    0.00 :   2449a:  jne    24835 <strcmp+0x1405>
    0.00 :   244a0:  movdqa (%rdi),%xmm3
    0.00 :   244a4:  pxor   %xmm0,%xmm0
    0.00 :   244a8:  mov    $0x10,%rcx
    0.00 :   244af:  mov    $0xd,%r9d
    0.00 :   244b5:  lea    0xd(%rdi),%r10
    0.00 :   244b9:  and    $0xfff,%r10
    0.00 :   244c0:  sub    $0x1000,%r10
    0.00 :   244c7:  nopw   0x0(%rax,%rax,1)
    0.00 :   244d0:  add    $0x10,%r10
    0.00 :   244d4:  jg     24570 <strcmp+0x1140>
    0.00 :   244da:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   244df:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   244e4:  movdqa %xmm2,%xmm4
    0.00 :   244e8:  psrldq $0xd,%xmm3
    0.00 :   244ed:  pslldq $0x3,%xmm2
    0.00 :   244f2:  por    %xmm3,%xmm2
    0.00 :   244f6:  pcmpeqb %xmm1,%xmm0
    0.00 :   244fa:  pcmpeqb %xmm2,%xmm1
    0.00 :   244fe:  psubb  %xmm0,%xmm1
    0.00 :   24502:  pmovmskb %xmm1,%edx
    0.00 :   24506:  sub    $0xffff,%edx
    0.00 :   2450c:  jne    24830 <strcmp+0x1400>
    0.00 :   24512:  add    $0x10,%rcx
    0.00 :   24516:  movdqa %xmm4,%xmm3
    0.00 :   2451a:  add    $0x10,%r10
    0.00 :   2451e:  jg     24570 <strcmp+0x1140>
    0.00 :   24520:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24525:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2452a:  movdqa %xmm2,%xmm4
    0.00 :   2452e:  psrldq $0xd,%xmm3
    0.00 :   24533:  pslldq $0x3,%xmm2
    0.00 :   24538:  por    %xmm3,%xmm2
    0.00 :   2453c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24540:  pcmpeqb %xmm2,%xmm1
    0.00 :   24544:  psubb  %xmm0,%xmm1
    0.00 :   24548:  pmovmskb %xmm1,%edx
    0.00 :   2454c:  sub    $0xffff,%edx
    0.00 :   24552:  jne    24830 <strcmp+0x1400>
    0.00 :   24558:  add    $0x10,%rcx
    0.00 :   2455c:  movdqa %xmm4,%xmm3
    0.00 :   24560:  jmp    244d0 <strcmp+0x10a0>
    0.00 :   24565:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   24570:  pcmpeqb %xmm3,%xmm0
    0.00 :   24574:  pmovmskb %xmm0,%edx
    0.00 :   24578:  test   $0xe000,%edx
    0.00 :   2457e:  jne    24590 <strcmp+0x1160>
    0.00 :   24580:  pxor   %xmm0,%xmm0
    0.00 :   24584:  sub    $0x1000,%r10
    0.00 :   2458b:  jmp    244da <strcmp+0x10aa>
    0.00 :   24590:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24595:  psrldq $0xd,%xmm0
    0.00 :   2459a:  psrldq $0xd,%xmm3
    0.00 :   2459f:  jmp    24820 <strcmp+0x13f0>
    0.00 :   245a4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   245af:  nop
    0.00 :   245b0:  pxor   %xmm0,%xmm0
    0.00 :   245b4:  movdqa (%rdi),%xmm2
    0.00 :   245b8:  movdqa (%rsi),%xmm1
    0.00 :   245bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   245c0:  pslldq $0x2,%xmm2
    0.00 :   245c5:  pcmpeqb %xmm1,%xmm2
    0.00 :   245c9:  psubb  %xmm0,%xmm2
    0.00 :   245cd:  pmovmskb %xmm2,%r9d
    0.00 :   245d2:  shr    %cl,%edx
    0.00 :   245d4:  shr    %cl,%r9d
    0.00 :   245d7:  sub    %r9d,%edx
    0.00 :   245da:  jne    24835 <strcmp+0x1405>
    0.00 :   245e0:  movdqa (%rdi),%xmm3
    0.00 :   245e4:  pxor   %xmm0,%xmm0
    0.00 :   245e8:  mov    $0x10,%rcx
    0.00 :   245ef:  mov    $0xe,%r9d
    0.00 :   245f5:  lea    0xe(%rdi),%r10
    0.00 :   245f9:  and    $0xfff,%r10
    0.00 :   24600:  sub    $0x1000,%r10
    0.00 :   24607:  nopw   0x0(%rax,%rax,1)
    0.00 :   24610:  add    $0x10,%r10
    0.00 :   24614:  jg     246b0 <strcmp+0x1280>
    0.00 :   2461a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2461f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24624:  movdqa %xmm2,%xmm4
    0.00 :   24628:  psrldq $0xe,%xmm3
    0.00 :   2462d:  pslldq $0x2,%xmm2
    0.00 :   24632:  por    %xmm3,%xmm2
    0.00 :   24636:  pcmpeqb %xmm1,%xmm0
    0.00 :   2463a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2463e:  psubb  %xmm0,%xmm1
    0.00 :   24642:  pmovmskb %xmm1,%edx
    0.00 :   24646:  sub    $0xffff,%edx
    0.00 :   2464c:  jne    24830 <strcmp+0x1400>
    0.00 :   24652:  add    $0x10,%rcx
    0.00 :   24656:  movdqa %xmm4,%xmm3
    0.00 :   2465a:  add    $0x10,%r10
    0.00 :   2465e:  jg     246b0 <strcmp+0x1280>
    0.00 :   24660:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24665:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   2466a:  movdqa %xmm2,%xmm4
    0.00 :   2466e:  psrldq $0xe,%xmm3
    0.00 :   24673:  pslldq $0x2,%xmm2
    0.00 :   24678:  por    %xmm3,%xmm2
    0.00 :   2467c:  pcmpeqb %xmm1,%xmm0
    0.00 :   24680:  pcmpeqb %xmm2,%xmm1
    0.00 :   24684:  psubb  %xmm0,%xmm1
    0.00 :   24688:  pmovmskb %xmm1,%edx
    0.00 :   2468c:  sub    $0xffff,%edx
    0.00 :   24692:  jne    24830 <strcmp+0x1400>
    0.00 :   24698:  add    $0x10,%rcx
    0.00 :   2469c:  movdqa %xmm4,%xmm3
    0.00 :   246a0:  jmp    24610 <strcmp+0x11e0>
    0.00 :   246a5:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   246b0:  pcmpeqb %xmm3,%xmm0
    0.00 :   246b4:  pmovmskb %xmm0,%edx
    0.00 :   246b8:  test   $0xc000,%edx
    0.00 :   246be:  jne    246d0 <strcmp+0x12a0>
    0.00 :   246c0:  pxor   %xmm0,%xmm0
    0.00 :   246c4:  sub    $0x1000,%r10
    0.00 :   246cb:  jmp    2461a <strcmp+0x11ea>
    0.00 :   246d0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   246d5:  psrldq $0xe,%xmm0
    0.00 :   246da:  psrldq $0xe,%xmm3
    0.00 :   246df:  jmp    24820 <strcmp+0x13f0>
    0.00 :   246e4:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   246ef:  nop
    0.00 :   246f0:  pxor   %xmm0,%xmm0
    0.00 :   246f4:  movdqa (%rdi),%xmm2
    0.00 :   246f8:  movdqa (%rsi),%xmm1
    0.00 :   246fc:  pcmpeqb %xmm1,%xmm0
    0.00 :   24700:  pslldq $0x1,%xmm2
    0.00 :   24705:  pcmpeqb %xmm1,%xmm2
    0.00 :   24709:  psubb  %xmm0,%xmm2
    0.00 :   2470d:  pmovmskb %xmm2,%r9d
    0.00 :   24712:  shr    %cl,%edx
    0.00 :   24714:  shr    %cl,%r9d
    0.00 :   24717:  sub    %r9d,%edx
    0.00 :   2471a:  jne    24835 <strcmp+0x1405>
    0.00 :   24720:  movdqa (%rdi),%xmm3
    0.00 :   24724:  pxor   %xmm0,%xmm0
    0.00 :   24728:  mov    $0x10,%rcx
    0.00 :   2472f:  mov    $0xf,%r9d
    0.00 :   24735:  lea    0xf(%rdi),%r10
    0.00 :   24739:  and    $0xfff,%r10
    0.00 :   24740:  sub    $0x1000,%r10
    0.00 :   24747:  nopw   0x0(%rax,%rax,1)
    0.00 :   24750:  add    $0x10,%r10
    0.00 :   24754:  jg     247f0 <strcmp+0x13c0>
    0.00 :   2475a:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   2475f:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   24764:  movdqa %xmm2,%xmm4
    0.00 :   24768:  psrldq $0xf,%xmm3
    0.00 :   2476d:  pslldq $0x1,%xmm2
    0.00 :   24772:  por    %xmm3,%xmm2
    0.00 :   24776:  pcmpeqb %xmm1,%xmm0
    0.00 :   2477a:  pcmpeqb %xmm2,%xmm1
    0.00 :   2477e:  psubb  %xmm0,%xmm1
    0.00 :   24782:  pmovmskb %xmm1,%edx
    0.00 :   24786:  sub    $0xffff,%edx
    0.00 :   2478c:  jne    24830 <strcmp+0x1400>
    0.00 :   24792:  add    $0x10,%rcx
    0.00 :   24796:  movdqa %xmm4,%xmm3
    0.00 :   2479a:  add    $0x10,%r10
    0.00 :   2479e:  jg     247f0 <strcmp+0x13c0>
    0.00 :   247a0:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   247a5:  movdqa (%rdi,%rcx,1),%xmm2
    0.00 :   247aa:  movdqa %xmm2,%xmm4
    0.00 :   247ae:  psrldq $0xf,%xmm3
    0.00 :   247b3:  pslldq $0x1,%xmm2
    0.00 :   247b8:  por    %xmm3,%xmm2
    0.00 :   247bc:  pcmpeqb %xmm1,%xmm0
    0.00 :   247c0:  pcmpeqb %xmm2,%xmm1
    0.00 :   247c4:  psubb  %xmm0,%xmm1
    0.00 :   247c8:  pmovmskb %xmm1,%edx
    0.00 :   247cc:  sub    $0xffff,%edx
    0.00 :   247d2:  jne    24830 <strcmp+0x1400>
    0.00 :   247d4:  add    $0x10,%rcx
    0.00 :   247d8:  movdqa %xmm4,%xmm3
    0.00 :   247dc:  jmp    24750 <strcmp+0x1320>
    0.00 :   247e1:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   247ec:  nopl   0x0(%rax)
    0.00 :   247f0:  pcmpeqb %xmm3,%xmm0
    0.00 :   247f4:  pmovmskb %xmm0,%edx
    0.00 :   247f8:  test   $0x8000,%edx
    0.00 :   247fe:  jne    24810 <strcmp+0x13e0>
    0.00 :   24800:  pxor   %xmm0,%xmm0
    0.00 :   24804:  sub    $0x1000,%r10
    0.00 :   2480b:  jmp    2475a <strcmp+0x132a>
    0.00 :   24810:  movdqa (%rsi,%rcx,1),%xmm1
    0.00 :   24815:  psrldq $0xf,%xmm3
    0.00 :   2481a:  psrldq $0xf,%xmm0
    0.00 :   2481f:  nop
    0.00 :   24820:  pcmpeqb %xmm3,%xmm1
    0.00 :   24824:  psubb  %xmm0,%xmm1
    0.00 :   24828:  pmovmskb %xmm1,%edx
    0.00 :   2482c:  not    %edx
    0.00 :   2482e:  xchg   %ax,%ax
    0.00 :   24830:  lea    -0x10(%r9,%rcx,1),%rax
    0.00 :   24835:  lea    (%rdi,%rax,1),%rdi
    0.00 :   24839:  lea    (%rsi,%rcx,1),%rsi
    0.00 :   2483d:  test   %r8d,%r8d
    0.00 :   24840:  je     24850 <strcmp+0x1420>
    0.00 :   24842:  xchg   %rsi,%rdi
    0.00 :   24845:  data16 cs nopw 0x0(%rax,%rax,1)
   50.08 :   24850:  bsf    %rdx,%rdx // /usr/src/debug/glibc-2.36-9.fc37.x86_64/string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:2104
    0.00 :   24854:  movzbl (%rsi,%rdx,1),%ecx
    0.00 :   24858:  movzbl (%rdi,%rdx,1),%eax
    0.00 :   2485c:  sub    %ecx,%eax
    0.00 :   2485e:  ret
    0.00 :   2485f:  xor    %eax,%eax
    0.00 :   24861:  ret
    0.00 :   24862:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   2486d:  nopl   (%rax)
    0.00 :   24870:  movzbl (%rsi),%ecx
    0.00 :   24873:  movzbl (%rdi),%eax
    0.00 :   24876:  sub    %ecx,%eax
    0.00 :   24878:  ret

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

   50.14 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:542
   49.86 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:876
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (2 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000009e20 <_dl_lookup_symbol_x>:
         : 6    _dl_lookup_symbol_x():
    0.00 :   9e20:   endbr64
    0.00 :   9e24:   push   %r15
    0.00 :   9e26:   push   %r14
    0.00 :   9e28:   push   %r13
    0.00 :   9e2a:   mov    %rsi,%r13
    0.00 :   9e2d:   push   %r12
    0.00 :   9e2f:   mov    %r8,%r12
    0.00 :   9e32:   push   %rbp
    0.00 :   9e33:   mov    %rdx,%rbp
    0.00 :   9e36:   push   %rbx
    0.00 :   9e37:   mov    %rdi,%rbx
    0.00 :   9e3a:   sub    $0x88,%rsp
    0.00 :   9e41:   mov    %rcx,0x10(%rsp)
    0.00 :   9e46:   mov    %r9d,0x38(%rsp)
    0.00 :   9e4b:   movzbl (%rbx),%eax
    0.00 :   9e4e:   test   %eax,%eax
    0.00 :   9e50:   je     a0c8 <_dl_lookup_symbol_x+0x2a8>
    0.00 :   9e56:   mov    %rbx,%rcx
    0.00 :   9e59:   mov    $0x1505,%r14d
    0.00 :   9e5f:   nop
    0.00 :   9e60:   movzbl 0x1(%rcx),%edx
    0.00 :   9e64:   test   %edx,%edx
    0.00 :   9e66:   je     a0b0 <_dl_lookup_symbol_x+0x290>
    0.00 :   9e6c:   imul   $0x441,%r14d,%r14d
    0.00 :   9e73:   add    %eax,%edx
    0.00 :   9e75:   add    $0x2,%rcx
    0.00 :   9e79:   shl    $0x5,%eax
    0.00 :   9e7c:   add    %edx,%eax
    0.00 :   9e7e:   add    %eax,%r14d
    0.00 :   9e81:   movzbl (%rcx),%eax
    0.00 :   9e84:   test   %eax,%eax
    0.00 :   9e86:   jne    9e60 <_dl_lookup_symbol_x+0x40>
    0.00 :   9e88:   mov    $0xffffffff,%eax
    0.00 :   9e8d:   pxor   %xmm1,%xmm1
    0.00 :   9e91:   addq   $0x1,0x2bbff(%rip)        # 35a98 <_rtld_global+0xa98>
    0.00 :   9e99:   mov    %rax,0x48(%rsp)
    0.00 :   9e9e:   movaps %xmm1,0x50(%rsp)
    0.00 :   9ea3:   test   %r12,%r12
    0.00 :   9ea6:   je     9eb6 <_dl_lookup_symbol_x+0x96>
    0.00 :   9ea8:   testb  $0x2,0xc0(%rsp)
    0.00 :   9eb0:   jne    a626 <_dl_lookup_symbol_x+0x806>
    0.00 :   9eb6:   cmpq   $0x0,0xc8(%rsp)
    0.00 :   9ebf:   mov    0x10(%rsp),%rax
    0.00 :   9ec4:   mov    (%rax),%r9
    0.00 :   9ec7:   jne    a0d8 <_dl_lookup_symbol_x+0x2b8>
    0.00 :   9ecd:   test   %r9,%r9
    0.00 :   9ed0:   je     a107 <_dl_lookup_symbol_x+0x2e7>
    0.00 :   9ed6:   xor    %edx,%edx
    0.00 :   9ed8:   mov    0x10(%rsp),%r15
    0.00 :   9edd:   lea    0x50(%rsp),%rsi
    0.00 :   9ee2:   lea    0x48(%rsp),%rdi
    0.00 :   9ee7:   mov    %rdx,%rax
    0.00 :   9eea:   mov    %rsi,0x8(%rsp)
    0.00 :   9eef:   mov    %rbp,%rsi
    0.00 :   9ef2:   mov    %rdi,(%rsp)
    0.00 :   9ef6:   mov    %r15,%rbp
    0.00 :   9ef9:   mov    %rsi,%r15
    0.00 :   9efc:   mov    %rdx,0x18(%rsp)
    0.00 :   9f01:   jmp    9f17 <_dl_lookup_symbol_x+0xf7>
    0.00 :   9f03:   nopl   0x0(%rax,%rax,1)
    0.00 :   9f08:   mov    0x8(%rbp),%r9
    0.00 :   9f0c:   add    $0x8,%rbp
    0.00 :   9f10:   xor    %eax,%eax
    0.00 :   9f12:   test   %r9,%r9
    0.00 :   9f15:   je     9f50 <_dl_lookup_symbol_x+0x130>
    0.00 :   9f17:   mov    (%r15),%rcx
    0.00 :   9f1a:   push   %r13
    0.00 :   9f1c:   mov    0x40(%rsp),%esi
    0.00 :   9f20:   push   %rsi
    0.00 :   9f21:   mov    %r14d,%esi
    0.00 :   9f24:   push   0xd8(%rsp)
    0.00 :   9f2b:   mov    0xd8(%rsp),%edi
    0.00 :   9f32:   push   %rdi
    0.00 :   9f33:   mov    %rbx,%rdi
    0.00 :   9f36:   push   %r12
    0.00 :   9f38:   push   %rax
    0.00 :   9f39:   mov    0x38(%rsp),%r8
    0.00 :   9f3e:   mov    0x30(%rsp),%rdx
    0.00 :   9f43:   call   9210 <do_lookup_x>
    0.00 :   9f48:   add    $0x30,%rsp
    0.00 :   9f4c:   test   %eax,%eax
    0.00 :   9f4e:   je     9f08 <_dl_lookup_symbol_x+0xe8>
    0.00 :   9f50:   mov    (%r15),%rcx
    0.00 :   9f53:   mov    0x50(%rsp),%rdi
    0.00 :   9f58:   mov    %r15,%rbp
    0.00 :   9f5b:   mov    0x18(%rsp),%rdx
    0.00 :   9f60:   mov    %rcx,%rax
    0.00 :   9f63:   test   %rdi,%rdi
    0.00 :   9f66:   je     a10b <_dl_lookup_symbol_x+0x2eb>
    0.00 :   9f6c:   test   %rcx,%rcx
    0.00 :   9f6f:   je     9f7c <_dl_lookup_symbol_x+0x15c>
    0.00 :   9f71:   movzbl 0x5(%rcx),%eax
    0.00 :   9f75:   and    $0x3,%eax
    0.00 :   9f78:   cmp    $0x3,%al
    0.00 :   9f7a:   je     9fd8 <_dl_lookup_symbol_x+0x1b8>
    0.00 :   9f7c:   mov    0x58(%rsp),%r15
    0.00 :   9f81:   xor    %r9d,%r9d
    0.00 :   9f84:   movzbl 0x334(%r15),%eax
    0.00 :   9f8c:   and    $0x3,%eax
    0.00 :   9f8f:   cmp    $0x2,%al
    0.00 :   9f91:   je     a230 <_dl_lookup_symbol_x+0x410>
    0.00 :   9f97:   mov    0x50(%rsp),%r10
    0.00 :   9f9c:   mov    0x3fc(%r15),%esi
    0.00 :   9fa3:   test   %esi,%esi
    0.00 :   9fa5:   je     a220 <_dl_lookup_symbol_x+0x400>
    0.00 :   9fab:   testb  $0x4,0x2aaae(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   9fb2:   jne    a1a0 <_dl_lookup_symbol_x+0x380>
    0.00 :   9fb8:   mov    %r10,0x0(%rbp)
   49.86 :   9fbc:   add    $0x88,%rsp // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:876
    0.00 :   9fc3:   mov    %r15,%rax
    0.00 :   9fc6:   pop    %rbx
    0.00 :   9fc7:   pop    %rbp
    0.00 :   9fc8:   pop    %r12
    0.00 :   9fca:   pop    %r13
    0.00 :   9fcc:   pop    %r14
    0.00 :   9fce:   pop    %r15
    0.00 :   9fd0:   ret
    0.00 :   9fd1:   nopl   0x0(%rax)
    0.00 :   9fd8:   cmpl   $0x1,0x38(%rsp)
    0.00 :   9fdd:   je     a3c8 <_dl_lookup_symbol_x+0x5a8>
    0.00 :   9fe3:   mov    0x10(%rsp),%r15
    0.00 :   9fe8:   pxor   %xmm0,%xmm0
    0.00 :   9fec:   lea    0x60(%rsp),%rax
    0.00 :   9ff1:   movaps %xmm0,0x60(%rsp)
    0.00 :   9ff6:   mov    (%r15),%r9
    0.00 :   9ff9:   mov    %rax,0x8(%rsp)
    0.00 :   9ffe:   test   %r9,%r9
    0.00 :   a001:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a007:   mov    %r14d,0x18(%rsp)
    0.00 :   a00c:   mov    %r15,%r14
    0.00 :   a00f:   mov    0xc8(%rsp),%r15
    0.00 :   a017:   mov    %r13,0x20(%rsp)
    0.00 :   a01c:   mov    0xc0(%rsp),%r13d
    0.00 :   a024:   jmp    a043 <_dl_lookup_symbol_x+0x223>
    0.00 :   a026:   cs nopw 0x0(%rax,%rax,1)
    0.00 :   a030:   mov    0x8(%r14),%r9
    0.00 :   a034:   add    $0x8,%r14
    0.00 :   a038:   test   %r9,%r9
    0.00 :   a03b:   je     a06c <_dl_lookup_symbol_x+0x24c>
    0.00 :   a03d:   mov    0x0(%rbp),%rcx
    0.00 :   a041:   xor    %edx,%edx
    0.00 :   a043:   push   $0x0
    0.00 :   a045:   mov    %rbx,%rdi
    0.00 :   a048:   push   $0x1
    0.00 :   a04a:   push   %r15
    0.00 :   a04c:   push   %r13
    0.00 :   a04e:   push   %r12
    0.00 :   a050:   push   %rdx
    0.00 :   a051:   mov    0x38(%rsp),%r8
    0.00 :   a056:   mov    0x30(%rsp),%rdx
    0.00 :   a05b:   mov    0x48(%rsp),%esi
    0.00 :   a05f:   call   9210 <do_lookup_x>
    0.00 :   a064:   add    $0x30,%rsp
    0.00 :   a068:   test   %eax,%eax
    0.00 :   a06a:   je     a030 <_dl_lookup_symbol_x+0x210>
    0.00 :   a06c:   cmpq   $0x0,0x60(%rsp)
    0.00 :   a072:   mov    0x20(%rsp),%r13
    0.00 :   a077:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a07d:   cmp    %r13,0x68(%rsp)
    0.00 :   a082:   je     a428 <_dl_lookup_symbol_x+0x608>
    0.00 :   a088:   movq   0x0(%rbp),%xmm0
    0.00 :   a08d:   movq   %r13,%xmm2
    0.00 :   a092:   mov    %r13,%r15
    0.00 :   a095:   punpcklqdq %xmm2,%xmm0
    0.00 :   a099:   movaps %xmm0,0x50(%rsp)
    0.00 :   a09e:   mov    $0x1,%r9d
    0.00 :   a0a4:   jmp    9f84 <_dl_lookup_symbol_x+0x164>
    0.00 :   a0a9:   nopl   0x0(%rax)
    0.00 :   a0b0:   add    %r14d,%eax
    0.00 :   a0b3:   mov    %r14d,%esi
    0.00 :   a0b6:   shl    $0x5,%esi
    0.00 :   a0b9:   lea    (%rax,%rsi,1),%r14d
    0.00 :   a0bd:   jmp    9e88 <_dl_lookup_symbol_x+0x68>
    0.00 :   a0c2:   nopw   0x0(%rax,%rax,1)
    0.00 :   a0c8:   mov    $0x1505,%r14d
    0.00 :   a0ce:   jmp    9e88 <_dl_lookup_symbol_x+0x68>
    0.00 :   a0d3:   nopl   0x0(%rax,%rax,1)
    0.00 :   a0d8:   mov    (%r9),%rax
    0.00 :   a0db:   mov    0xc8(%rsp),%rdi
    0.00 :   a0e3:   xor    %edx,%edx
    0.00 :   a0e5:   cmp    %rdi,(%rax)
    0.00 :   a0e8:   je     9ed8 <_dl_lookup_symbol_x+0xb8>
    0.00 :   a0ee:   mov    %rdi,%rcx
    0.00 :   a0f1:   nopl   0x0(%rax)
    0.00 :   a0f8:   add    $0x1,%rdx
    0.00 :   a0fc:   cmp    %rcx,(%rax,%rdx,8)
    0.00 :   a100:   jne    a0f8 <_dl_lookup_symbol_x+0x2d8>
    0.00 :   a102:   jmp    9ed8 <_dl_lookup_symbol_x+0xb8>
    0.00 :   a107:   mov    0x0(%rbp),%rax
    0.00 :   a10b:   test   %rax,%rax
    0.00 :   a10e:   je     a11b <_dl_lookup_symbol_x+0x2fb>
    0.00 :   a110:   movzbl 0x4(%rax),%eax
    0.00 :   a114:   shr    $0x4,%al
    0.00 :   a117:   cmp    $0x2,%al
    0.00 :   a119:   je     a191 <_dl_lookup_symbol_x+0x371>
    0.00 :   a11b:   testb  $0x1,0x2a93f(%rip)        # 34a61 <_rtld_global_ro+0x1>
    0.00 :   a122:   jne    a191 <_dl_lookup_symbol_x+0x371>
    0.00 :   a124:   test   %r13,%r13
    0.00 :   a127:   je     a44d <_dl_lookup_symbol_x+0x62d>
    0.00 :   a12d:   mov    0x8(%r13),%rsi
    0.00 :   a131:   lea    0x20ae1(%rip),%r8        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a138:   mov    %r8,%r9
    0.00 :   a13b:   movzbl (%rsi),%eax
    0.00 :   a13e:   test   %r12,%r12
    0.00 :   a141:   je     a157 <_dl_lookup_symbol_x+0x337>
    0.00 :   a143:   mov    (%r12),%r9
    0.00 :   a147:   lea    0x1fb1e(%rip),%r8        # 29c6c <_sys_errname+0x8ac>
    0.00 :   a14e:   test   %r9,%r9
    0.00 :   a151:   je     a498 <_dl_lookup_symbol_x+0x678>
    0.00 :   a157:   test   %al,%al
    0.00 :   a159:   je     a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a15f:   lea    0x60(%rsp),%r12
    0.00 :   a164:   mov    %rbx,%rcx
    0.00 :   a167:   lea    0x1fb1a(%rip),%rdx        # 29c88 <_sys_errname+0x8c8>
    0.00 :   a16e:   xor    %eax,%eax
    0.00 :   a170:   mov    %r12,%rdi
    0.00 :   a173:   call   3450 <_dl_exception_create_format>
    0.00 :   a178:   xor    %edi,%edi
    0.00 :   a17a:   lea    0x1fb20(%rip),%rdx        # 29ca1 <_sys_errname+0x8e1>
    0.00 :   a181:   mov    %r12,%rsi
    0.00 :   a184:   call   18e20 <_dl_signal_cexception>
    0.00 :   a189:   mov    %r12,%rdi
    0.00 :   a18c:   call   38c0 <_dl_exception_free>
    0.00 :   a191:   xor    %r10d,%r10d
    0.00 :   a194:   xor    %r15d,%r15d
    0.00 :   a197:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a19c:   nopl   0x0(%rax)
    0.00 :   a1a0:   mov    0x8(%r15),%rcx
    0.00 :   a1a4:   test   %r9d,%r9d
    0.00 :   a1a7:   lea    0x1fac9(%rip),%rax        # 29c77 <_sys_errname+0x8b7>
    0.00 :   a1ae:   mov    0x8(%r13),%rsi
    0.00 :   a1b2:   lea    0x1fac8(%rip),%r9        # 29c81 <_sys_errname+0x8c1>
    0.00 :   a1b9:   mov    0x30(%r15),%r8
    0.00 :   a1bd:   cmovne %rax,%r9
    0.00 :   a1c1:   cmpb   $0x0,(%rcx)
    0.00 :   a1c4:   je     a40b <_dl_lookup_symbol_x+0x5eb>
    0.00 :   a1ca:   cmpb   $0x0,(%rsi)
    0.00 :   a1cd:   mov    0x30(%r13),%rdx
    0.00 :   a1d1:   je     a3ee <_dl_lookup_symbol_x+0x5ce>
    0.00 :   a1d7:   mov    %r10,(%rsp)
    0.00 :   a1db:   sub    $0x8,%rsp
    0.00 :   a1df:   xor    %eax,%eax
    0.00 :   a1e1:   lea    0x21df8(%rip),%rdi        # 2bfe0 <__PRETTY_FUNCTION__.9+0x2f0>
    0.00 :   a1e8:   push   %rbx
    0.00 :   a1e9:   call   d1d0 <_dl_debug_printf>
    0.00 :   a1ee:   test   %r12,%r12
    0.00 :   a1f1:   pop    %rdx
    0.00 :   a1f2:   pop    %rcx
    0.00 :   a1f3:   mov    (%rsp),%r10
    0.00 :   a1f7:   je     a432 <_dl_lookup_symbol_x+0x612>
    0.00 :   a1fd:   mov    (%r12),%rsi
    0.00 :   a201:   lea    0x1faad(%rip),%rdi        # 29cb5 <_sys_errname+0x8f5>
    0.00 :   a208:   xor    %eax,%eax
    0.00 :   a20a:   call   d280 <_dl_debug_printf_c>
    0.00 :   a20f:   mov    (%rsp),%r10
    0.00 :   a213:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a218:   nopl   0x0(%rax,%rax,1)
    0.00 :   a220:   movl   $0x1,0x3fc(%r15)
    0.00 :   a22b:   jmp    9fab <_dl_lookup_symbol_x+0x18b>
    0.00 :   a230:   testb  $0x1,0xc0(%rsp)
    0.00 :   a238:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a23e:   cmp    %r15,%r13
    0.00 :   a241:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a247:   cmpb   $0x0,0x337(%r15)
    0.00 :   a24f:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a255:   mov    0xc0(%rsp),%eax
    0.00 :   a25c:   and    $0x8,%eax
    0.00 :   a25f:   mov    %eax,(%rsp)
    0.00 :   a262:   je     a272 <_dl_lookup_symbol_x+0x452>
    0.00 :   a264:   cmpb   $0x0,0x338(%r15)
    0.00 :   a26c:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a272:   mov    0x3f0(%r13),%rax
    0.00 :   a279:   mov    %rax,0x18(%rsp)
    0.00 :   a27e:   mov    0x3e8(%r13),%r8
    0.00 :   a285:   test   %r8,%r8
    0.00 :   a288:   je     a2ac <_dl_lookup_symbol_x+0x48c>
    0.00 :   a28a:   mov    (%r8),%rax
    0.00 :   a28d:   test   %rax,%rax
    0.00 :   a290:   je     a2ac <_dl_lookup_symbol_x+0x48c>
    0.00 :   a292:   xor    %edx,%edx
    0.00 :   a294:   cmp    %r15,%rax
    0.00 :   a297:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a29d:   lea    0x1(%rdx),%eax
    0.00 :   a2a0:   mov    %rax,%rdx
    0.00 :   a2a3:   mov    (%r8,%rax,8),%rax
   50.14 :   a2a7:   test   %rax,%rax // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-lookup.c:542
    0.00 :   a2aa:   jne    a294 <_dl_lookup_symbol_x+0x474>
    0.00 :   a2ac:   mov    0x18(%rsp),%rdi
    0.00 :   a2b1:   mov    %rdi,%rax
    0.00 :   a2b4:   test   %rdi,%rdi
    0.00 :   a2b7:   je     a4a4 <_dl_lookup_symbol_x+0x684>
    0.00 :   a2bd:   mov    (%rdi),%r14d
    0.00 :   a2c0:   test   %r14d,%r14d
    0.00 :   a2c3:   je     a2df <_dl_lookup_symbol_x+0x4bf>
    0.00 :   a2c5:   mov    %r14d,%edx
    0.00 :   a2c8:   lea    (%rdi,%rdx,8),%rdx
    0.00 :   a2cc:   cmp    %r15,0x8(%rax)
    0.00 :   a2d0:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a2d6:   add    $0x8,%rax
    0.00 :   a2da:   cmp    %rax,%rdx
    0.00 :   a2dd:   jne    a2cc <_dl_lookup_symbol_x+0x4ac>
    0.00 :   a2df:   mov    0x498(%r15),%rax
    0.00 :   a2e6:   mov    %rax,0x20(%rsp)
    0.00 :   a2eb:   mov    0xc0(%rsp),%eax
    0.00 :   a2f2:   and    $0x4,%eax
    0.00 :   a2f5:   mov    %eax,0x8(%rsp)
    0.00 :   a2f9:   jne    a555 <_dl_lookup_symbol_x+0x735>
    0.00 :   a2ff:   lea    0x2b702(%rip),%rdi        # 35a08 <_rtld_global+0xa08>
    0.00 :   a306:   mov    %r9d,0x28(%rsp)
    0.00 :   a30b:   mov    %rdi,0x18(%rsp)
    0.00 :   a310:   call   *0x2a6e2(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   a316:   mov    0x18(%rsp),%rdi
    0.00 :   a31b:   mov    0x28(%rsp),%r9d
    0.00 :   a320:   mov    %r15,%rcx
    0.00 :   a323:   mov    0x30(%r13),%rdx
    0.00 :   a327:   lea    0x2acd2(%rip),%rsi        # 35000 <_rtld_global>
    0.00 :   a32e:   lea    (%rdx,%rdx,4),%rax
    0.00 :   a332:   shl    $0x5,%rax
    0.00 :   a336:   mov    (%rsi,%rax,1),%rax
    0.00 :   a33a:   test   %rax,%rax
    0.00 :   a33d:   jne    a355 <_dl_lookup_symbol_x+0x535>
    0.00 :   a33f:   jmp    a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a344:   nopl   0x0(%rax)
    0.00 :   a348:   mov    0x18(%rax),%rax
    0.00 :   a34c:   test   %rax,%rax
    0.00 :   a34f:   je     a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a355:   cmp    %rcx,%rax
    0.00 :   a358:   jne    a348 <_dl_lookup_symbol_x+0x528>
    0.00 :   a35a:   test   %rax,%rax
    0.00 :   a35d:   je     a535 <_dl_lookup_symbol_x+0x715>
    0.00 :   a363:   mov    0x20(%rsp),%rax
    0.00 :   a368:   cmp    0x498(%rcx),%rax
    0.00 :   a36f:   jne    a4ac <_dl_lookup_symbol_x+0x68c>
    0.00 :   a375:   cmpb   $0x0,0x337(%rcx)
    0.00 :   a37c:   mov    %r14d,0x38(%rsp)
    0.00 :   a381:   mov    %rdx,%r8
    0.00 :   a384:   mov    %rcx,%r14
    0.00 :   a387:   mov    %rdi,0x18(%rsp)
    0.00 :   a38c:   je     a4f1 <_dl_lookup_symbol_x+0x6d1>
    0.00 :   a392:   mov    %r9d,(%rsp)
    0.00 :   a396:   mov    0x18(%rsp),%rdi
    0.00 :   a39b:   call   *0x2a64f(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a3a1:   cmpl   $0x0,0x8(%rsp)
    0.00 :   a3a6:   mov    (%rsp),%r9d
    0.00 :   a3aa:   je     9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a3b0:   movl   $0x1,%fs:0x1c
    0.00 :   a3bc:   jmp    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a3c1:   nopl   0x0(%rax)
    0.00 :   a3c8:   mov    %rcx,%r10
    0.00 :   a3cb:   cmp    %r13,0x58(%rsp)
    0.00 :   a3d0:   je     a490 <_dl_lookup_symbol_x+0x670>
    0.00 :   a3d6:   mov    %r10,0x50(%rsp)
    0.00 :   a3db:   mov    %r13,0x58(%rsp)
    0.00 :   a3e0:   mov    $0x1,%r9d
    0.00 :   a3e6:   mov    %r13,%r15
    0.00 :   a3e9:   jmp    9f9c <_dl_lookup_symbol_x+0x17c>
    0.00 :   a3ee:   mov    0x2a643(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a3f5:   mov    (%rax),%rsi
    0.00 :   a3f8:   lea    0x1f52d(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a3ff:   test   %rsi,%rsi
    0.00 :   a402:   cmove  %rax,%rsi
    0.00 :   a406:   jmp    a1d7 <_dl_lookup_symbol_x+0x3b7>
    0.00 :   a40b:   mov    0x2a626(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a412:   mov    (%rax),%rcx
    0.00 :   a415:   lea    0x1f510(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a41c:   test   %rcx,%rcx
    0.00 :   a41f:   cmove  %rax,%rcx
    0.00 :   a423:   jmp    a1ca <_dl_lookup_symbol_x+0x3aa>
    0.00 :   a428:   mov    0x58(%rsp),%r15
    0.00 :   a42d:   jmp    a09e <_dl_lookup_symbol_x+0x27e>
    0.00 :   a432:   lea    0x207df(%rip),%rdi        # 2ac18 <__PRETTY_FUNCTION__.2+0x53d>
    0.00 :   a439:   xor    %eax,%eax
    0.00 :   a43b:   mov    %r10,(%rsp)
    0.00 :   a43f:   call   d280 <_dl_debug_printf_c>
    0.00 :   a444:   mov    (%rsp),%r10
    0.00 :   a448:   jmp    9fb8 <_dl_lookup_symbol_x+0x198>
    0.00 :   a44d:   lea    0x207c5(%rip),%r8        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a454:   mov    %r8,%r9
    0.00 :   a457:   test   %r12,%r12
    0.00 :   a45a:   je     a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a45c:   mov    (%r12),%r9
    0.00 :   a460:   lea    0x1f805(%rip),%r8        # 29c6c <_sys_errname+0x8ac>
    0.00 :   a467:   test   %r9,%r9
    0.00 :   a46a:   jne    a473 <_dl_lookup_symbol_x+0x653>
    0.00 :   a46c:   lea    0x207a6(%rip),%r9        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a473:   mov    0x2a5be(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a47a:   mov    (%rax),%rsi
    0.00 :   a47d:   lea    0x1f4a8(%rip),%rax        # 2992c <_sys_errname+0x56c>
    0.00 :   a484:   test   %rsi,%rsi
    0.00 :   a487:   cmove  %rax,%rsi
    0.00 :   a48b:   jmp    a15f <_dl_lookup_symbol_x+0x33f>
    0.00 :   a490:   mov    %rdi,%r10
    0.00 :   a493:   jmp    a3e0 <_dl_lookup_symbol_x+0x5c0>
    0.00 :   a498:   lea    0x2077a(%rip),%r9        # 2ac19 <__PRETTY_FUNCTION__.2+0x53e>
    0.00 :   a49f:   jmp    a157 <_dl_lookup_symbol_x+0x337>
    0.00 :   a4a4:   xor    %r14d,%r14d
    0.00 :   a4a7:   jmp    a2df <_dl_lookup_symbol_x+0x4bf>
    0.00 :   a4ac:   mov    %r9d,(%rsp)
    0.00 :   a4b0:   call   *0x2a53a(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a4b6:   mov    0x8(%rsp),%eax
    0.00 :   a4ba:   mov    (%rsp),%r9d
    0.00 :   a4be:   test   %eax,%eax
    0.00 :   a4c0:   je     9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a4c6:   or     $0xffffffff,%r14d
    0.00 :   a4ca:   movl   $0x1,%fs:0x1c
    0.00 :   a4d6:   add    $0x1,%r14d
    0.00 :   a4da:   jne    9f97 <_dl_lookup_symbol_x+0x177>
    0.00 :   a4e0:   mov    0x3b0(%r13),%rax
    0.00 :   a4e7:   mov    %rax,0x10(%rsp)
    0.00 :   a4ec:   jmp    9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a4f1:   cmpl   $0x0,(%rsp)
    0.00 :   a4f5:   je     a645 <_dl_lookup_symbol_x+0x825>
    0.00 :   a4fb:   cmpb   $0x0,0x338(%rcx)
    0.00 :   a502:   jne    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a508:   movzbl 0x334(%r13),%eax
    0.00 :   a510:   and    $0x3,%eax
    0.00 :   a513:   cmp    $0x2,%al
    0.00 :   a515:   je     a6a1 <_dl_lookup_symbol_x+0x881>
    0.00 :   a51b:   testb  $0x4,0x2a53e(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a522:   jne    a65d <_dl_lookup_symbol_x+0x83d>
    0.00 :   a528:   movb   $0x1,0x338(%r14)
    0.00 :   a530:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a535:   call   *0x2a4b5(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a53b:   mov    0x8(%rsp),%edi
    0.00 :   a53f:   test   %edi,%edi
    0.00 :   a541:   je     9e4b <_dl_lookup_symbol_x+0x2b>
    0.00 :   a547:   movl   $0x1,%fs:0x1c
    0.00 :   a553:   jmp    a4e0 <_dl_lookup_symbol_x+0x6c0>
    0.00 :   a555:   xor    %eax,%eax
    0.00 :   a557:   xchg   %eax,%fs:0x1c
    0.00 :   a55f:   cmp    $0x2,%eax
    0.00 :   a562:   jne    a585 <_dl_lookup_symbol_x+0x765>
    0.00 :   a564:   xor    %r10d,%r10d
    0.00 :   a567:   mov    $0x1,%edx
    0.00 :   a56c:   mov    $0x81,%esi
    0.00 :   a571:   mov    %fs:0x10,%rax
    0.00 :   a57a:   lea    0x1c(%rax),%rdi
    0.00 :   a57e:   mov    $0xca,%eax
    0.00 :   a583:   syscall
    0.00 :   a585:   lea    0x2b47c(%rip),%rdi        # 35a08 <_rtld_global+0xa08>
    0.00 :   a58c:   mov    %r9d,0x3c(%rsp)
    0.00 :   a591:   mov    %r8,0x30(%rsp)
    0.00 :   a596:   mov    %rdi,0x28(%rsp)
    0.00 :   a59b:   call   *0x2a457(%rip)        # 349f8 <___rtld_mutex_lock>
    0.00 :   a5a1:   mov    0x3e8(%r13),%rax
    0.00 :   a5a8:   mov    0x30(%rsp),%r8
    0.00 :   a5ad:   mov    %r15,%rdx
    0.00 :   a5b0:   cmp    %r8,%rax
    0.00 :   a5b3:   mov    0x28(%rsp),%rdi
    0.00 :   a5b8:   mov    0x3c(%rsp),%r9d
    0.00 :   a5bd:   mov    %rdx,%rcx
    0.00 :   a5c0:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5c6:   test   %rax,%rax
    0.00 :   a5c9:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5cf:   mov    (%rax),%rsi
    0.00 :   a5d2:   test   %rsi,%rsi
    0.00 :   a5d5:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5db:   xor    %r10d,%r10d
    0.00 :   a5de:   jmp    a5f4 <_dl_lookup_symbol_x+0x7d4>
    0.00 :   a5e0:   lea    0x1(%r10),%esi
    0.00 :   a5e4:   mov    %rsi,%r10
    0.00 :   a5e7:   mov    (%rax,%rsi,8),%rsi
    0.00 :   a5eb:   test   %rsi,%rsi
    0.00 :   a5ee:   je     a869 <_dl_lookup_symbol_x+0xa49>
    0.00 :   a5f4:   cmp    %rsi,%rdx
    0.00 :   a5f7:   jne    a5e0 <_dl_lookup_symbol_x+0x7c0>
    0.00 :   a5f9:   mov    0x498(%rdx),%rax
    0.00 :   a600:   mov    0x20(%rsp),%rsi
    0.00 :   a605:   mov    %r9d,(%rsp)
    0.00 :   a609:   cmp    %rsi,%rax
    0.00 :   a60c:   setne  %al
    0.00 :   a60f:   movzbl %al,%eax
    0.00 :   a612:   neg    %eax
    0.00 :   a614:   mov    %eax,%r14d
    0.00 :   a617:   call   *0x2a3d3(%rip)        # 349f0 <___rtld_mutex_unlock>
    0.00 :   a61d:   mov    (%rsp),%r9d
    0.00 :   a621:   jmp    a4ca <_dl_lookup_symbol_x+0x6aa>
    0.00 :   a626:   lea    0x20823(%rip),%rcx        # 2ae50 <__PRETTY_FUNCTION__.2>
    0.00 :   a62d:   mov    $0x2fe,%edx
    0.00 :   a632:   lea    0x1f618(%rip),%rsi        # 29c51 <_sys_errname+0x891>
    0.00 :   a639:   lea    0x21860(%rip),%rdi        # 2bea0 <__PRETTY_FUNCTION__.9+0x1b0>
    0.00 :   a640:   call   19f20 <__GI___assert_fail>
    0.00 :   a645:   movzbl 0x334(%r13),%eax
    0.00 :   a64d:   and    $0x3,%eax
    0.00 :   a650:   cmp    $0x2,%al
    0.00 :   a652:   je     a6a1 <_dl_lookup_symbol_x+0x881>
    0.00 :   a654:   testb  $0x4,0x2a405(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a65b:   je     a694 <_dl_lookup_symbol_x+0x874>
    0.00 :   a65d:   mov    0x8(%r13),%rcx
    0.00 :   a661:   mov    0x30(%r14),%rdx
    0.00 :   a665:   mov    %r9d,0x38(%rsp)
    0.00 :   a66a:   mov    0x8(%r14),%rsi
    0.00 :   a66e:   cmpb   $0x0,(%rcx)
    0.00 :   a671:   jne    a851 <_dl_lookup_symbol_x+0xa31>
    0.00 :   a677:   lea    0x2185a(%rip),%rdi        # 2bed8 <__PRETTY_FUNCTION__.9+0x1e8>
    0.00 :   a67e:   xor    %eax,%eax
    0.00 :   a680:   call   d1d0 <_dl_debug_printf>
    0.00 :   a685:   mov    0x38(%rsp),%r9d
    0.00 :   a68a:   cmpl   $0x0,(%rsp)
    0.00 :   a68e:   jne    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a694:   movb   $0x1,0x337(%r14)
    0.00 :   a69c:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a6a1:   mov    0x3f8(%r13),%eax
    0.00 :   a6a8:   cmp    %eax,0x38(%rsp)
    0.00 :   a6ac:   jae    a73e <_dl_lookup_symbol_x+0x91e>
    0.00 :   a6b2:   mov    0x38(%rsp),%edx
    0.00 :   a6b6:   mov    0x3f0(%r13),%rax
    0.00 :   a6bd:   mov    %rdx,%rdi
    0.00 :   a6c0:   mov    %r14,0x8(%rax,%rdx,8)
    0.00 :   a6c5:   mov    0x3f0(%r13),%rdx
    0.00 :   a6cc:   lea    0x1(%rdi),%eax
    0.00 :   a6cf:   mov    %eax,(%rdx)
    0.00 :   a6d1:   testb  $0x40,0x2a388(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a6d8:   je     a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a6de:   mov    0x8(%r13),%rcx
    0.00 :   a6e2:   mov    0x30(%r13),%r8
    0.00 :   a6e6:   cmpb   $0x0,(%rcx)
    0.00 :   a6e9:   jne    a6fe <_dl_lookup_symbol_x+0x8de>
    0.00 :   a6eb:   mov    0x2a346(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a6f2:   mov    (%rax),%rcx
    0.00 :   a6f5:   test   %rcx,%rcx
    0.00 :   a6f8:   je     a7c4 <_dl_lookup_symbol_x+0x9a4>
    0.00 :   a6fe:   mov    0x8(%r14),%rsi
    0.00 :   a702:   mov    0x30(%r14),%rdx
    0.00 :   a706:   cmpb   $0x0,(%rsi)
    0.00 :   a709:   jne    a71a <_dl_lookup_symbol_x+0x8fa>
    0.00 :   a70b:   mov    0x2a326(%rip),%rax        # 34a38 <_dl_argv>
    0.00 :   a712:   mov    (%rax),%rsi
    0.00 :   a715:   test   %rsi,%rsi
    0.00 :   a718:   je     a735 <_dl_lookup_symbol_x+0x915>
    0.00 :   a71a:   lea    0x2187f(%rip),%rdi        # 2bfa0 <__PRETTY_FUNCTION__.9+0x2b0>
    0.00 :   a721:   xor    %eax,%eax
    0.00 :   a723:   mov    %r9d,(%rsp)
    0.00 :   a727:   call   d1d0 <_dl_debug_printf>
    0.00 :   a72c:   mov    (%rsp),%r9d
    0.00 :   a730:   jmp    a392 <_dl_lookup_symbol_x+0x572>
    0.00 :   a735:   lea    0x1f1f0(%rip),%rsi        # 2992c <_sys_errname+0x56c>
    0.00 :   a73c:   jmp    a71a <_dl_lookup_symbol_x+0x8fa>
    0.00 :   a73e:   movl   $0xa,0x10(%rsp)
    0.00 :   a746:   test   %eax,%eax
    0.00 :   a748:   je     a750 <_dl_lookup_symbol_x+0x930>
    0.00 :   a74a:   add    %eax,%eax
    0.00 :   a74c:   mov    %eax,0x10(%rsp)
    0.00 :   a750:   mov    0x10(%rsp),%eax
    0.00 :   a754:   mov    %r9d,0x20(%rsp)
    0.00 :   a759:   lea    0x8(,%rax,8),%rdi
    0.00 :   a761:   call   *0x2a271(%rip)        # 349d8 <__rtld_malloc>
    0.00 :   a767:   mov    0x20(%rsp),%r9d
    0.00 :   a76c:   test   %rax,%rax
    0.00 :   a76f:   mov    %rax,%rcx
    0.00 :   a772:   je     a80d <_dl_lookup_symbol_x+0x9ed>
    0.00 :   a778:   mov    0x38(%rsp),%r8d
    0.00 :   a77d:   test   %r8d,%r8d
    0.00 :   a780:   jne    a7d0 <_dl_lookup_symbol_x+0x9b0>
    0.00 :   a782:   mov    0x38(%rsp),%eax
    0.00 :   a786:   mov    %r14,0x8(%rcx,%r8,8)
    0.00 :   a78b:   add    $0x1,%eax
    0.00 :   a78e:   mov    %eax,(%rcx)
    0.00 :   a790:   mov    0x3f0(%r13),%rdi
    0.00 :   a797:   mov    0x10(%rsp),%eax
    0.00 :   a79b:   mov    %rcx,0x3f0(%r13)
    0.00 :   a7a2:   mov    %eax,0x3f8(%r13)
    0.00 :   a7a9:   test   %rdi,%rdi
    0.00 :   a7ac:   je     a6d1 <_dl_lookup_symbol_x+0x8b1>
    0.00 :   a7b2:   mov    %r9d,(%rsp)
    0.00 :   a7b6:   call   10a80 <_dl_scope_free>
    0.00 :   a7bb:   mov    (%rsp),%r9d
    0.00 :   a7bf:   jmp    a6d1 <_dl_lookup_symbol_x+0x8b1>
    0.00 :   a7c4:   lea    0x1f161(%rip),%rcx        # 2992c <_sys_errname+0x56c>
    0.00 :   a7cb:   jmp    a6fe <_dl_lookup_symbol_x+0x8de>
    0.00 :   a7d0:   mov    0x3f0(%r13),%rax
    0.00 :   a7d7:   lea    0x8(%rcx),%rdi
    0.00 :   a7db:   mov    %r9d,0x28(%rsp)
    0.00 :   a7e0:   lea    0x0(,%r8,8),%rdx
    0.00 :   a7e8:   mov    %rcx,0x20(%rsp)
    0.00 :   a7ed:   lea    0x8(%rax),%rsi
    0.00 :   a7f1:   mov    %r8,(%rsp)
    0.00 :   a7f5:   call   22660 <memcpy>
    0.00 :   a7fa:   mov    0x28(%rsp),%r9d
    0.00 :   a7ff:   mov    0x20(%rsp),%rcx
    0.00 :   a804:   mov    (%rsp),%r8
    0.00 :   a808:   jmp    a782 <_dl_lookup_symbol_x+0x962>
    0.00 :   a80d:   testb  $0x4,0x2a24c(%rip)        # 34a60 <_rtld_global_ro>
    0.00 :   a814:   je     a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a81a:   cmpb   $0x0,0x337(%r14)
    0.00 :   a822:   jne    a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a828:   cmpl   $0x0,(%rsp)
    0.00 :   a82c:   jne    a8a3 <_dl_lookup_symbol_x+0xa83>
    0.00 :   a82e:   mov    0x30(%r14),%rdx
    0.00 :   a832:   mov    0x8(%r14),%rsi
    0.00 :   a836:   xor    %eax,%eax
    0.00 :   a838:   mov    %r9d,(%rsp)
    0.00 :   a83c:   lea    0x2171d(%rip),%rdi        # 2bf60 <__PRETTY_FUNCTION__.9+0x270>
    0.00 :   a843:   call   d1d0 <_dl_debug_printf>
    0.00 :   a848:   mov    (%rsp),%r9d
    0.00 :   a84c:   jmp    a694 <_dl_lookup_symbol_x+0x874>
    0.00 :   a851:   lea    0x216c8(%rip),%rdi        # 2bf20 <__PRETTY_FUNCTION__.9+0x230>
    0.00 :   a858:   xor    %eax,%eax
    0.00 :   a85a:   call   d1d0 <_dl_debug_printf>
    0.00 :   a85f:   mov    0x38(%rsp),%r9d
    0.00 :   a864:   jmp    a68a <_dl_lookup_symbol_x+0x86a>
    0.00 :   a869:   mov    0x3f0(%r13),%rax
    0.00 :   a870:   test   %rax,%rax
    0.00 :   a873:   je     a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a879:   mov    (%rax),%esi
    0.00 :   a87b:   cmp    %rax,0x18(%rsp)
    0.00 :   a880:   je     a8e4 <_dl_lookup_symbol_x+0xac4>
    0.00 :   a882:   test   %esi,%esi
    0.00 :   a884:   je     a8dc <_dl_lookup_symbol_x+0xabc>
    0.00 :   a886:   mov    %esi,%r10d
    0.00 :   a889:   lea    (%rax,%r10,8),%r10
    0.00 :   a88d:   jmp    a898 <_dl_lookup_symbol_x+0xa78>
    0.00 :   a88f:   add    $0x8,%rax
    0.00 :   a893:   cmp    %r10,%rax
    0.00 :   a896:   je     a8d4 <_dl_lookup_symbol_x+0xab4>
    0.00 :   a898:   cmp    %rdx,0x8(%rax)
    0.00 :   a89c:   jne    a88f <_dl_lookup_symbol_x+0xa6f>
    0.00 :   a89e:   jmp    a5f9 <_dl_lookup_symbol_x+0x7d9>
    0.00 :   a8a3:   cmpb   $0x0,0x338(%r14)
    0.00 :   a8ab:   jne    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a8b1:   mov    0x30(%r14),%rdx
    0.00 :   a8b5:   mov    0x8(%r14),%rsi
    0.00 :   a8b9:   xor    %eax,%eax
    0.00 :   a8bb:   mov    %r9d,(%rsp)
    0.00 :   a8bf:   lea    0x2169a(%rip),%rdi        # 2bf60 <__PRETTY_FUNCTION__.9+0x270>
    0.00 :   a8c6:   call   d1d0 <_dl_debug_printf>
    0.00 :   a8cb:   mov    (%rsp),%r9d
    0.00 :   a8cf:   jmp    a528 <_dl_lookup_symbol_x+0x708>
    0.00 :   a8d4:   mov    %esi,%r14d
    0.00 :   a8d7:   jmp    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8dc:   xor    %r14d,%r14d
    0.00 :   a8df:   jmp    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8e4:   cmp    %esi,%r14d
    0.00 :   a8e7:   jae    a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a8ed:   mov    0x18(%rsp),%r11
    0.00 :   a8f2:   mov    %r14d,%eax
    0.00 :   a8f5:   lea    (%r11,%rax,8),%rax
    0.00 :   a8f9:   jmp    a908 <_dl_lookup_symbol_x+0xae8>
    0.00 :   a8fb:   add    $0x1,%r14d
    0.00 :   a8ff:   cmp    %esi,%r14d
    0.00 :   a902:   je     a323 <_dl_lookup_symbol_x+0x503>
    0.00 :   a908:   add    $0x8,%rax
    0.00 :   a90c:   cmp    %rdx,(%rax)
    0.00 :   a90f:   jne    a8fb <_dl_lookup_symbol_x+0xadb>
    0.00 :   a911:   jmp    a5f9 <_dl_lookup_symbol_x+0x7d9>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   50.82 libc.so.6[b45be]
   32.33 libc.so.6[b45c5]
   16.86 libc.so.6[b4607]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000b4590 <wcsrtombs>:
         : 6     __wcsrtombs():
    0.00 :   b4590:  endbr64
    0.00 :   b4594:  push   %r15
    0.00 :   b4596:  push   %r14
    0.00 :   b4598:  mov    %rsi,%r14
    0.00 :   b459b:  push   %r13
    0.00 :   b459d:  push   %r12
    0.00 :   b459f:  push   %rbp
    0.00 :   b45a0:  mov    %rdi,%rbp
    0.00 :   b45a3:  push   %rbx
    0.00 :   b45a4:  sub    $0x178,%rsp
    0.00 :   b45ab:  mov    %fs:0x28,%rax
    0.00 :   b45b4:  mov    %rax,0x168(%rsp)
    0.00 :   b45bc:  xor    %eax,%eax
   50.82 :   b45be:  mov    0xeca13(%rip),%rax        # 1a0fd8 <_sys_errlist_internal_len+0x8> // libc.so.6[b45be]
   32.33 :   b45c5:  test   %rcx,%rcx // libc.so.6[b45c5]
    0.00 :   b45c8:  movl   $0x1,0x48(%rsp)
    0.00 :   b45d0:  mov    %rax,0x40(%rsp)
    0.00 :   b45d5:  lea    0x125fbc(%rip),%rax        # 1da598 <state>
    0.00 :   b45dc:  cmove  %rax,%rcx
    0.00 :   b45e0:  mov    0x11e989(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
    0.00 :   b45e7:  mov    %rcx,0x50(%rsp)
    0.00 :   b45ec:  mov    %fs:(%rax),%rax
    0.00 :   b45f0:  mov    (%rax),%rdi
    0.00 :   b45f3:  mov    0x20(%rdi),%rbx
    0.00 :   b45f7:  mov    (%rbx),%rax
    0.00 :   b45fa:  test   %rax,%rax
    0.00 :   b45fd:  je     b47e0 <wcsrtombs+0x250>
    0.00 :   b4603:  mov    0x10(%rax),%r12
   16.86 :   b4607:  cmpq   $0x0,(%r12) // libc.so.6[b4607]
    0.00 :   b460c:  mov    0x28(%r12),%rbx
    0.00 :   b4611:  je     b4620 <wcsrtombs+0x90>
    0.00 :   b4613:  ror    $0x11,%rbx
    0.00 :   b4617:  xor    %fs:0x30,%rbx
    0.00 :   b4620:  mov    (%r14),%r13
    0.00 :   b4623:  test   %rbp,%rbp
    0.00 :   b4626:  je     b4700 <wcsrtombs+0x170>
    0.00 :   b462c:  mov    %rdx,%rsi
    0.00 :   b462f:  mov    %r13,%rdi
    0.00 :   b4632:  mov    %rdx,(%rsp)
    0.00 :   b4636:  call   26670 <*ABS*+0xb4e30@plt>
    0.00 :   b463b:  mov    (%rsp),%rdx
    0.00 :   b463f:  mov    %rbx,%rdi
    0.00 :   b4642:  mov    %rbp,0x30(%rsp)
    0.00 :   b4647:  lea    0x4(%r13,%rax,4),%r15
    0.00 :   b464c:  lea    0x0(%rbp,%rdx,1),%r13
    0.00 :   b4651:  mov    %r13,0x38(%rsp)
    0.00 :   b4656:  call   14f660 <_dl_mcount_wrapper_check>
    0.00 :   b465b:  lea    0x30(%rsp),%rsi
    0.00 :   b4660:  push   $0x1
    0.00 :   b4662:  mov    %r15,%rcx
    0.00 :   b4665:  push   $0x0
    0.00 :   b4667:  mov    %r14,%rdx
    0.00 :   b466a:  mov    %r12,%rdi
    0.00 :   b466d:  xor    %r8d,%r8d
    0.00 :   b4670:  lea    0x30(%rsp),%r9
    0.00 :   b4675:  call   *%rbx
    0.00 :   b4677:  mov    0x40(%rsp),%rcx
    0.00 :   b467c:  pop    %rsi
    0.00 :   b467d:  mov    %eax,%edx
    0.00 :   b467f:  pop    %rdi
    0.00 :   b4680:  mov    %rcx,%rax
    0.00 :   b4683:  sub    %rbp,%rax
    0.00 :   b4686:  test   $0xfffffffb,%edx
    0.00 :   b468c:  je     b46d0 <wcsrtombs+0x140>
    0.00 :   b468e:  lea    -0x6(%rdx),%ecx
    0.00 :   b4691:  cmp    $0x1,%ecx
    0.00 :   b4694:  jbe    b47ab <wcsrtombs+0x21b>
    0.00 :   b469a:  cmp    $0x5,%edx
    0.00 :   b469d:  jne    b4838 <wcsrtombs+0x2a8>
    0.00 :   b46a3:  mov    0x168(%rsp),%rdx
    0.00 :   b46ab:  sub    %fs:0x28,%rdx
    0.00 :   b46b4:  jne    b47f5 <wcsrtombs+0x265>
    0.00 :   b46ba:  add    $0x178,%rsp
    0.00 :   b46c1:  pop    %rbx
    0.00 :   b46c2:  pop    %rbp
    0.00 :   b46c3:  pop    %r12
    0.00 :   b46c5:  pop    %r13
    0.00 :   b46c7:  pop    %r14
    0.00 :   b46c9:  pop    %r15
    0.00 :   b46cb:  ret
    0.00 :   b46cc:  nopl   0x0(%rax)
    0.00 :   b46d0:  cmpb   $0x0,-0x1(%rcx)
    0.00 :   b46d4:  jne    b46a3 <wcsrtombs+0x113>
    0.00 :   b46d6:  cmp    %rbp,%rcx
    0.00 :   b46d9:  je     b4819 <wcsrtombs+0x289>
    0.00 :   b46df:  mov    0x50(%rsp),%rdx
    0.00 :   b46e4:  mov    (%rdx),%edx
    0.00 :   b46e6:  test   %edx,%edx
    0.00 :   b46e8:  jne    b47fa <wcsrtombs+0x26a>
    0.00 :   b46ee:  movq   $0x0,(%r14)
    0.00 :   b46f5:  sub    $0x1,%rax
    0.00 :   b46f9:  jmp    b46a3 <wcsrtombs+0x113>
    0.00 :   b46fb:  nopl   0x0(%rax,%rax,1)
    0.00 :   b4700:  mov    %r13,%rdi
    0.00 :   b4703:  lea    0x20(%rsp),%r14
    0.00 :   b4708:  call   26650 <*ABS*+0xb36b0@plt>
    0.00 :   b470d:  mov    %r13,0x18(%rsp)
    0.00 :   b4712:  lea    0x4(%r13,%rax,4),%r15
    0.00 :   b4717:  mov    0x50(%rsp),%rax
    0.00 :   b471c:  lea    0x60(%rsp),%r13
    0.00 :   b4721:  mov    (%rax),%rax
    0.00 :   b4724:  mov    %rax,0x28(%rsp)
    0.00 :   b4729:  lea    0x28(%rsp),%rax
    0.00 :   b472e:  mov    %rax,0x50(%rsp)
    0.00 :   b4733:  lea    0x160(%rsp),%rax
    0.00 :   b473b:  mov    %rax,0x38(%rsp)
    0.00 :   b4740:  lea    0x18(%rsp),%rax
    0.00 :   b4745:  mov    %rax,(%rsp)
    0.00 :   b4749:  lea    0x30(%rsp),%rax
    0.00 :   b474e:  mov    %rax,0x8(%rsp)
    0.00 :   b4753:  nopl   0x0(%rax,%rax,1)
    0.00 :   b4758:  mov    %rbx,%rdi
    0.00 :   b475b:  mov    %r13,0x30(%rsp)
    0.00 :   b4760:  call   14f660 <_dl_mcount_wrapper_check>
    0.00 :   b4765:  push   $0x1
    0.00 :   b4767:  mov    %r14,%r9
    0.00 :   b476a:  xor    %r8d,%r8d
    0.00 :   b476d:  push   $0x0
    0.00 :   b476f:  mov    %r15,%rcx
    0.00 :   b4772:  mov    0x10(%rsp),%rdx
    0.00 :   b4777:  mov    %r12,%rdi
    0.00 :   b477a:  mov    0x18(%rsp),%rsi
    0.00 :   b477f:  call   *%rbx
    0.00 :   b4781:  mov    0x40(%rsp),%rdx
    0.00 :   b4786:  pop    %r8
    0.00 :   b4788:  pop    %r9
    0.00 :   b478a:  mov    %rdx,%rcx
    0.00 :   b478d:  sub    %r13,%rcx
    0.00 :   b4790:  add    %rcx,%rbp
    0.00 :   b4793:  cmp    $0x5,%eax
    0.00 :   b4796:  je     b4758 <wcsrtombs+0x1c8>
    0.00 :   b4798:  test   $0xfffffffb,%eax
    0.00 :   b479d:  je     b47c8 <wcsrtombs+0x238>
    0.00 :   b479f:  sub    $0x6,%eax
    0.00 :   b47a2:  cmp    $0x1,%eax
    0.00 :   b47a5:  ja     b4838 <wcsrtombs+0x2a8>
    0.00 :   b47ab:  mov    0x11e65e(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   b47b2:  movl   $0x54,%fs:(%rax)
    0.00 :   b47b9:  mov    $0xffffffffffffffff,%rax
    0.00 :   b47c0:  jmp    b46a3 <wcsrtombs+0x113>
    0.00 :   b47c5:  nopl   (%rax)
    0.00 :   b47c8:  cmpb   $0x0,-0x1(%rdx)
    0.00 :   b47cc:  jne    b4857 <wcsrtombs+0x2c7>
    0.00 :   b47d2:  lea    -0x1(%rbp),%rax
    0.00 :   b47d6:  jmp    b46a3 <wcsrtombs+0x113>
    0.00 :   b47db:  nopl   0x0(%rax,%rax,1)
    0.00 :   b47e0:  mov    %rdx,(%rsp)
    0.00 :   b47e4:  call   c0040 <__wcsmbs_load_conv>
    0.00 :   b47e9:  mov    (%rbx),%rax
    0.00 :   b47ec:  mov    (%rsp),%rdx
    0.00 :   b47f0:  jmp    b4603 <wcsrtombs+0x73>
    0.00 :   b47f5:  call   11ba20 <__stack_chk_fail>
    0.00 :   b47fa:  lea    0xe95b7(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b4801:  mov    $0x7a,%edx
    0.00 :   b4806:  lea    0xe3b48(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b480d:  lea    0xe3b1d(%rip),%rdi        # 198331 <__nss_invalid_field_characters+0xa7>
    0.00 :   b4814:  call   35610 <__assert_fail>
    0.00 :   b4819:  lea    0xe9598(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b4820:  mov    $0x79,%edx
    0.00 :   b4825:  lea    0xe3b29(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b482c:  lea    0xe955d(%rip),%rdi        # 19dd90 <aliasfile.0+0x2348>
    0.00 :   b4833:  call   35610 <__assert_fail>
    0.00 :   b4838:  lea    0xe9579(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b483f:  mov    $0x82,%edx
    0.00 :   b4844:  lea    0xe3b0a(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b484b:  lea    0xe948e(%rip),%rdi        # 19dce0 <aliasfile.0+0x2298>
    0.00 :   b4852:  call   35610 <__assert_fail>
    0.00 :   b4857:  lea    0xe955a(%rip),%rcx        # 19ddb8 <aliasfile.0+0x2370>
    0.00 :   b485e:  mov    $0x5d,%edx
    0.00 :   b4863:  lea    0xe3aeb(%rip),%rsi        # 198355 <__nss_invalid_field_characters+0xcb>
    0.00 :   b486a:  lea    0xe3af0(%rip),%rdi        # 198361 <__nss_invalid_field_characters+0xd7>
    0.00 :   b4871:  call   35610 <__assert_fail>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   33.00 libc.so.6[1528b0]
   29.40 libc.so.6[1528e1]
   21.71 libc.so.6[152880]
   15.89 libc.so.6[152910]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (4 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000152880 <__memcpy_avx_unaligned_erms>:
         : 6      __memcpy_avx_unaligned_erms():
   21.71 :   152880: endbr64 // libc.so.6[152880]
    0.00 :   152884: mov    %rdi,%rax
    0.00 :   152887: cmp    $0x20,%rdx
    0.00 :   15288b: jb     1528b0 <__memcpy_avx_unaligned_erms+0x30>
    0.00 :   15288d: vmovdqu (%rsi),%ymm0
    0.00 :   152891: cmp    $0x40,%rdx
    0.00 :   152895: ja     152940 <__memcpy_avx_unaligned_erms+0xc0>
    0.00 :   15289b: vmovdqu -0x20(%rsi,%rdx,1),%ymm1
    0.00 :   1528a1: vmovdqu %ymm0,(%rdi)
    0.00 :   1528a5: vmovdqu %ymm1,-0x20(%rdi,%rdx,1)
    0.00 :   1528ab: vzeroupper
    0.00 :   1528ae: ret
    0.00 :   1528af: nop
   33.00 :   1528b0: cmp    $0x10,%edx // libc.so.6[1528b0]
    0.00 :   1528b3: jae    1528e2 <__memcpy_avx_unaligned_erms+0x62>
    0.00 :   1528b5: cmp    $0x8,%edx
    0.00 :   1528b8: jae    152900 <__memcpy_avx_unaligned_erms+0x80>
    0.00 :   1528ba: cmp    $0x4,%edx
    0.00 :   1528bd: jae    1528d5 <__memcpy_avx_unaligned_erms+0x55>
    0.00 :   1528bf: cmp    $0x1,%edx
    0.00 :   1528c2: jl     1528d4 <__memcpy_avx_unaligned_erms+0x54>
    0.00 :   1528c4: mov    (%rsi),%cl
    0.00 :   1528c6: je     1528d2 <__memcpy_avx_unaligned_erms+0x52>
    0.00 :   1528c8: movzwl -0x2(%rsi,%rdx,1),%esi
    0.00 :   1528cd: mov    %si,-0x2(%rdi,%rdx,1)
    0.00 :   1528d2: mov    %cl,(%rdi)
    0.00 :   1528d4: ret
    0.00 :   1528d5: mov    -0x4(%rsi,%rdx,1),%ecx
    0.00 :   1528d9: mov    (%rsi),%esi
    0.00 :   1528db: mov    %ecx,-0x4(%rdi,%rdx,1)
    0.00 :   1528df: mov    %esi,(%rdi)
   29.40 :   1528e1: ret // libc.so.6[1528e1]
    0.00 :   1528e2: vmovdqu (%rsi),%xmm0
    0.00 :   1528e6: vmovdqu -0x10(%rsi,%rdx,1),%xmm1
    0.00 :   1528ec: vmovdqu %xmm0,(%rdi)
    0.00 :   1528f0: vmovdqu %xmm1,-0x10(%rdi,%rdx,1)
    0.00 :   1528f6: ret
    0.00 :   1528f7: nopw   0x0(%rax,%rax,1)
    0.00 :   152900: mov    -0x8(%rsi,%rdx,1),%rcx
    0.00 :   152905: mov    (%rsi),%rsi
    0.00 :   152908: mov    %rsi,(%rdi)
    0.00 :   15290b: mov    %rcx,-0x8(%rdi,%rdx,1)
   15.89 :   152910: ret // libc.so.6[152910]
    0.00 :   152911: vmovdqu -0x20(%rsi,%rdx,1),%ymm2
    0.00 :   152917: vmovdqu -0x40(%rsi,%rdx,1),%ymm3
    0.00 :   15291d: vmovdqu %ymm0,(%rdi)
    0.00 :   152921: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   152926: vmovdqu %ymm2,-0x20(%rdi,%rdx,1)
    0.00 :   15292c: vmovdqu %ymm3,-0x40(%rdi,%rdx,1)
    0.00 :   152932: vzeroupper
    0.00 :   152935: ret
    0.00 :   152936: cs nopw 0x0(%rax,%rax,1)
    0.00 :   152940: cmp    0x80ab1(%rip),%rdx        # 1d33f8 <__x86_rep_movsb_threshold>
    0.00 :   152947: ja     152b40 <__memcpy_avx_unaligned_erms+0x2c0>
    0.00 :   15294d: cmp    $0x100,%rdx
    0.00 :   152954: ja     1529b5 <__memcpy_avx_unaligned_erms+0x135>
    0.00 :   152956: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   15295b: cmp    $0x80,%rdx
    0.00 :   152962: jbe    152911 <__memcpy_avx_unaligned_erms+0x91>
    0.00 :   152964: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152969: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   15296e: vmovdqu -0x20(%rsi,%rdx,1),%ymm4
    0.00 :   152974: vmovdqu -0x40(%rsi,%rdx,1),%ymm5
    0.00 :   15297a: vmovdqu -0x60(%rsi,%rdx,1),%ymm6
    0.00 :   152980: vmovdqu -0x80(%rsi,%rdx,1),%ymm7
    0.00 :   152986: vmovdqu %ymm0,(%rdi)
    0.00 :   15298a: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   15298f: vmovdqu %ymm2,0x40(%rdi)
    0.00 :   152994: vmovdqu %ymm3,0x60(%rdi)
    0.00 :   152999: vmovdqu %ymm4,-0x20(%rdi,%rdx,1)
    0.00 :   15299f: vmovdqu %ymm5,-0x40(%rdi,%rdx,1)
    0.00 :   1529a5: vmovdqu %ymm6,-0x60(%rdi,%rdx,1)
    0.00 :   1529ab: vmovdqu %ymm7,-0x80(%rdi,%rdx,1)
    0.00 :   1529b1: vzeroupper
    0.00 :   1529b4: ret
    0.00 :   1529b5: mov    %rdi,%rcx
    0.00 :   1529b8: sub    %rsi,%rcx
    0.00 :   1529bb: cmp    %rdx,%rcx
    0.00 :   1529be: jb     152a70 <__memcpy_avx_unaligned_erms+0x1f0>
    0.00 :   1529c4: cmp    0x87ba5(%rip),%rdx        # 1da570 <__x86_shared_non_temporal_threshold>
    0.00 :   1529cb: ja     152ba0 <__memcpy_avx_unaligned_erms+0x320>
    0.00 :   1529d1: lea    (%rcx,%rdx,1),%r8
    0.00 :   1529d5: xor    %rcx,%r8
    0.00 :   1529d8: shr    $0x3f,%r8
    0.00 :   1529dc: and    $0xf00,%ecx
    0.00 :   1529e2: add    %r8d,%ecx
    0.00 :   1529e5: je     152a75 <__memcpy_avx_unaligned_erms+0x1f5>
    0.00 :   1529eb: vmovdqu -0x20(%rsi,%rdx,1),%ymm5
    0.00 :   1529f1: vmovdqu -0x40(%rsi,%rdx,1),%ymm6
    0.00 :   1529f7: mov    %rdi,%rcx
    0.00 :   1529fa: or     $0x1f,%rdi
    0.00 :   1529fe: vmovdqu -0x60(%rsi,%rdx,1),%ymm7
    0.00 :   152a04: vmovdqu -0x80(%rsi,%rdx,1),%ymm8
    0.00 :   152a0a: sub    %rcx,%rsi
    0.00 :   152a0d: inc    %rdi
    0.00 :   152a10: add    %rdi,%rsi
    0.00 :   152a13: lea    -0x80(%rcx,%rdx,1),%rdx
    0.00 :   152a18: nopl   0x0(%rax,%rax,1)
    0.00 :   152a20: vmovdqu (%rsi),%ymm1
    0.00 :   152a24: vmovdqu 0x20(%rsi),%ymm2
    0.00 :   152a29: vmovdqu 0x40(%rsi),%ymm3
    0.00 :   152a2e: vmovdqu 0x60(%rsi),%ymm4
    0.00 :   152a33: sub    $0xffffffffffffff80,%rsi
    0.00 :   152a37: vmovdqa %ymm1,(%rdi)
    0.00 :   152a3b: vmovdqa %ymm2,0x20(%rdi)
    0.00 :   152a40: vmovdqa %ymm3,0x40(%rdi)
    0.00 :   152a45: vmovdqa %ymm4,0x60(%rdi)
    0.00 :   152a4a: sub    $0xffffffffffffff80,%rdi
    0.00 :   152a4e: cmp    %rdi,%rdx
    0.00 :   152a51: ja     152a20 <__memcpy_avx_unaligned_erms+0x1a0>
    0.00 :   152a53: vmovdqu %ymm5,0x60(%rdx)
    0.00 :   152a58: vmovdqu %ymm6,0x40(%rdx)
    0.00 :   152a5d: vmovdqu %ymm7,0x20(%rdx)
    0.00 :   152a62: vmovdqu %ymm8,(%rdx)
    0.00 :   152a66: vmovdqu %ymm0,(%rcx)
    0.00 :   152a6a: vzeroupper
    0.00 :   152a6d: ret
    0.00 :   152a6e: xchg   %ax,%ax
    0.00 :   152a70: test   %rcx,%rcx
    0.00 :   152a73: je     152a6a <__memcpy_avx_unaligned_erms+0x1ea>
    0.00 :   152a75: vmovdqu 0x20(%rsi),%ymm5
    0.00 :   152a7a: vmovdqu 0x40(%rsi),%ymm6
    0.00 :   152a7f: lea    -0x81(%rdi,%rdx,1),%rcx
    0.00 :   152a87: vmovdqu 0x60(%rsi),%ymm7
    0.00 :   152a8c: vmovdqu -0x20(%rsi,%rdx,1),%ymm8
    0.00 :   152a92: sub    %rdi,%rsi
    0.00 :   152a95: and    $0xffffffffffffffe0,%rcx
    0.00 :   152a99: add    %rcx,%rsi
    0.00 :   152a9c: nopl   0x0(%rax)
    0.00 :   152aa0: vmovdqu 0x60(%rsi),%ymm1
    0.00 :   152aa5: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152aaa: vmovdqu 0x20(%rsi),%ymm3
    0.00 :   152aaf: vmovdqu (%rsi),%ymm4
    0.00 :   152ab3: add    $0xffffffffffffff80,%rsi
    0.00 :   152ab7: vmovdqa %ymm1,0x60(%rcx)
    0.00 :   152abc: vmovdqa %ymm2,0x40(%rcx)
    0.00 :   152ac1: vmovdqa %ymm3,0x20(%rcx)
    0.00 :   152ac6: vmovdqa %ymm4,(%rcx)
    0.00 :   152aca: add    $0xffffffffffffff80,%rcx
    0.00 :   152ace: cmp    %rcx,%rdi
    0.00 :   152ad1: jb     152aa0 <__memcpy_avx_unaligned_erms+0x220>
    0.00 :   152ad3: vmovdqu %ymm0,(%rdi)
    0.00 :   152ad7: vmovdqu %ymm5,0x20(%rdi)
    0.00 :   152adc: vmovdqu %ymm6,0x40(%rdi)
    0.00 :   152ae1: vmovdqu %ymm7,0x60(%rdi)
    0.00 :   152ae6: vmovdqu %ymm8,-0x20(%rdx,%rdi,1)
    0.00 :   152aec: vzeroupper
    0.00 :   152aef: ret
    0.00 :   152af0: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   152afb: nopl   0x0(%rax,%rax,1)
    0.00 :   152b00: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152b05: test   $0xe00,%ecx
    0.00 :   152b0b: jne    152b75 <__memcpy_avx_unaligned_erms+0x2f5>
    0.00 :   152b0d: mov    %rcx,%r9
    0.00 :   152b10: lea    -0x1(%rsi,%rdx,1),%rcx
    0.00 :   152b15: or     $0x3f,%rsi
    0.00 :   152b19: lea    0x1(%rsi,%r9,1),%rdi
    0.00 :   152b1e: sub    %rsi,%rcx
    0.00 :   152b21: inc    %rsi
    0.00 :   152b24: rep movsb %ds:(%rsi),%es:(%rdi)
    0.00 :   152b26: vmovdqu %ymm0,(%r8)
    0.00 :   152b2b: vmovdqu %ymm1,0x20(%r8)
    0.00 :   152b31: vzeroupper
    0.00 :   152b34: ret
    0.00 :   152b35: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   152b40: mov    %rdi,%rcx
    0.00 :   152b43: sub    %rsi,%rcx
    0.00 :   152b46: cmp    %rdx,%rcx
    0.00 :   152b49: jb     152a70 <__memcpy_avx_unaligned_erms+0x1f0>
    0.00 :   152b4f: mov    %rdi,%r8
    0.00 :   152b52: cmp    0x87a0f(%rip),%rdx        # 1da568 <__x86_rep_movsb_stop_threshold>
    0.00 :   152b59: jae    152ba0 <__memcpy_avx_unaligned_erms+0x320>
    0.00 :   152b5b: testl  $0x1,0x879fb(%rip)        # 1da560 <__x86_string_control>
    0.00 :   152b65: je     152b00 <__memcpy_avx_unaligned_erms+0x280>
    0.00 :   152b67: cmp    $0xffffffc0,%ecx
    0.00 :   152b6a: ja     1529eb <__memcpy_avx_unaligned_erms+0x16b>
    0.00 :   152b70: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152b75: sub    %rdi,%rsi
    0.00 :   152b78: add    $0x3f,%rdi
    0.00 :   152b7c: lea    (%r8,%rdx,1),%rcx
    0.00 :   152b80: and    $0xffffffffffffffc0,%rdi
    0.00 :   152b84: add    %rdi,%rsi
    0.00 :   152b87: sub    %rdi,%rcx
    0.00 :   152b8a: rep movsb %ds:(%rsi),%es:(%rdi)
    0.00 :   152b8c: vmovdqu %ymm0,(%r8)
    0.00 :   152b91: vmovdqu %ymm1,0x20(%r8)
    0.00 :   152b97: vzeroupper
    0.00 :   152b9a: ret
    0.00 :   152b9b: nopl   0x0(%rax,%rax,1)
    0.00 :   152ba0: mov    0x879c9(%rip),%r11        # 1da570 <__x86_shared_non_temporal_threshold>
    0.00 :   152ba7: cmp    %r11,%rdx
    0.00 :   152baa: jb     1529d1 <__memcpy_avx_unaligned_erms+0x151>
    0.00 :   152bb0: neg    %rcx
    0.00 :   152bb3: cmp    %rcx,%rdx
    0.00 :   152bb6: ja     1529eb <__memcpy_avx_unaligned_erms+0x16b>
    0.00 :   152bbc: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152bc1: vmovdqu %ymm0,(%rdi)
    0.00 :   152bc5: vmovdqu %ymm1,0x20(%rdi)
    0.00 :   152bca: mov    %rdi,%r8
    0.00 :   152bcd: and    $0x3f,%r8
    0.00 :   152bd1: sub    $0x40,%r8
    0.00 :   152bd5: sub    %r8,%rsi
    0.00 :   152bd8: sub    %r8,%rdi
    0.00 :   152bdb: add    %r8,%rdx
    0.00 :   152bde: not    %ecx
    0.00 :   152be0: mov    %rdx,%r10
    0.00 :   152be3: test   $0xf00,%ecx
    0.00 :   152be9: je     152d70 <__memcpy_avx_unaligned_erms+0x4f0>
    0.00 :   152bef: shl    $0x4,%r11
    0.00 :   152bf3: cmp    %r11,%rdx
    0.00 :   152bf6: jae    152d70 <__memcpy_avx_unaligned_erms+0x4f0>
    0.00 :   152bfc: and    $0x1fff,%edx
    0.00 :   152c02: shr    $0xd,%r10
    0.00 :   152c06: cs nopw 0x0(%rax,%rax,1)
    0.00 :   152c10: mov    $0x20,%ecx
    0.00 :   152c15: prefetcht0 0x80(%rsi)
    0.00 :   152c1c: prefetcht0 0xc0(%rsi)
    0.00 :   152c23: prefetcht0 0x100(%rsi)
    0.00 :   152c2a: prefetcht0 0x140(%rsi)
    0.00 :   152c31: prefetcht0 0x1080(%rsi)
    0.00 :   152c38: prefetcht0 0x10c0(%rsi)
    0.00 :   152c3f: prefetcht0 0x1100(%rsi)
    0.00 :   152c46: prefetcht0 0x1140(%rsi)
    0.00 :   152c4d: vmovdqu (%rsi),%ymm0
    0.00 :   152c51: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152c56: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152c5b: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152c60: vmovdqu 0x1000(%rsi),%ymm4
    0.00 :   152c68: vmovdqu 0x1020(%rsi),%ymm5
    0.00 :   152c70: vmovdqu 0x1040(%rsi),%ymm6
    0.00 :   152c78: vmovdqu 0x1060(%rsi),%ymm7
    0.00 :   152c80: sub    $0xffffffffffffff80,%rsi
    0.00 :   152c84: vmovntdq %ymm0,(%rdi)
    0.00 :   152c88: vmovntdq %ymm1,0x20(%rdi)
    0.00 :   152c8d: vmovntdq %ymm2,0x40(%rdi)
    0.00 :   152c92: vmovntdq %ymm3,0x60(%rdi)
    0.00 :   152c97: vmovntdq %ymm4,0x1000(%rdi)
    0.00 :   152c9f: vmovntdq %ymm5,0x1020(%rdi)
    0.00 :   152ca7: vmovntdq %ymm6,0x1040(%rdi)
    0.00 :   152caf: vmovntdq %ymm7,0x1060(%rdi)
    0.00 :   152cb7: sub    $0xffffffffffffff80,%rdi
    0.00 :   152cbb: dec    %ecx
    0.00 :   152cbd: jne    152c15 <__memcpy_avx_unaligned_erms+0x395>
    0.00 :   152cc3: add    $0x1000,%rdi
    0.00 :   152cca: add    $0x1000,%rsi
    0.00 :   152cd1: dec    %r10
    0.00 :   152cd4: jne    152c10 <__memcpy_avx_unaligned_erms+0x390>
    0.00 :   152cda: sfence
    0.00 :   152cdd: cmp    $0x80,%edx
    0.00 :   152ce3: jbe    152d3a <__memcpy_avx_unaligned_erms+0x4ba>
    0.00 :   152ce5: prefetcht0 0x80(%rsi)
    0.00 :   152cec: prefetcht0 0xc0(%rsi)
    0.00 :   152cf3: prefetcht0 0x80(%rdi)
    0.00 :   152cfa: prefetcht0 0xc0(%rdi)
    0.00 :   152d01: vmovdqu (%rsi),%ymm0
    0.00 :   152d05: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152d0a: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152d0f: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152d14: sub    $0xffffffffffffff80,%rsi
    0.00 :   152d18: add    $0xffffff80,%edx
    0.00 :   152d1b: vmovdqa %ymm0,(%rdi)
    0.00 :   152d1f: vmovdqa %ymm1,0x20(%rdi)
    0.00 :   152d24: vmovdqa %ymm2,0x40(%rdi)
    0.00 :   152d29: vmovdqa %ymm3,0x60(%rdi)
    0.00 :   152d2e: sub    $0xffffffffffffff80,%rdi
    0.00 :   152d32: cmp    $0x80,%edx
    0.00 :   152d38: ja     152ce5 <__memcpy_avx_unaligned_erms+0x465>
    0.00 :   152d3a: vmovdqu -0x80(%rsi,%rdx,1),%ymm0
    0.00 :   152d40: vmovdqu -0x60(%rsi,%rdx,1),%ymm1
    0.00 :   152d46: vmovdqu -0x40(%rsi,%rdx,1),%ymm2
    0.00 :   152d4c: vmovdqu -0x20(%rsi,%rdx,1),%ymm3
    0.00 :   152d52: vmovdqu %ymm0,-0x80(%rdi,%rdx,1)
    0.00 :   152d58: vmovdqu %ymm1,-0x60(%rdi,%rdx,1)
    0.00 :   152d5e: vmovdqu %ymm2,-0x40(%rdi,%rdx,1)
    0.00 :   152d64: vmovdqu %ymm3,-0x20(%rdi,%rdx,1)
    0.00 :   152d6a: vzeroupper
    0.00 :   152d6d: ret
    0.00 :   152d6e: xchg   %ax,%ax
    0.00 :   152d70: and    $0x3fff,%edx
    0.00 :   152d76: shr    $0xe,%r10
    0.00 :   152d7a: nopw   0x0(%rax,%rax,1)
    0.00 :   152d80: mov    $0x20,%ecx
    0.00 :   152d85: prefetcht0 0x80(%rsi)
    0.00 :   152d8c: prefetcht0 0xc0(%rsi)
    0.00 :   152d93: prefetcht0 0x1080(%rsi)
    0.00 :   152d9a: prefetcht0 0x10c0(%rsi)
    0.00 :   152da1: prefetcht0 0x2080(%rsi)
    0.00 :   152da8: prefetcht0 0x20c0(%rsi)
    0.00 :   152daf: prefetcht0 0x3080(%rsi)
    0.00 :   152db6: prefetcht0 0x30c0(%rsi)
    0.00 :   152dbd: vmovdqu (%rsi),%ymm0
    0.00 :   152dc1: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152dc6: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152dcb: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152dd0: vmovdqu 0x1000(%rsi),%ymm4
    0.00 :   152dd8: vmovdqu 0x1020(%rsi),%ymm5
    0.00 :   152de0: vmovdqu 0x1040(%rsi),%ymm6
    0.00 :   152de8: vmovdqu 0x1060(%rsi),%ymm7
    0.00 :   152df0: vmovdqu 0x2000(%rsi),%ymm8
    0.00 :   152df8: vmovdqu 0x2020(%rsi),%ymm9
    0.00 :   152e00: vmovdqu 0x2040(%rsi),%ymm10
    0.00 :   152e08: vmovdqu 0x2060(%rsi),%ymm11
    0.00 :   152e10: vmovdqu 0x3000(%rsi),%ymm12
    0.00 :   152e18: vmovdqu 0x3020(%rsi),%ymm13
    0.00 :   152e20: vmovdqu 0x3040(%rsi),%ymm14
    0.00 :   152e28: vmovdqu 0x3060(%rsi),%ymm15
    0.00 :   152e30: sub    $0xffffffffffffff80,%rsi
    0.00 :   152e34: vmovntdq %ymm0,(%rdi)
    0.00 :   152e38: vmovntdq %ymm1,0x20(%rdi)
    0.00 :   152e3d: vmovntdq %ymm2,0x40(%rdi)
    0.00 :   152e42: vmovntdq %ymm3,0x60(%rdi)
    0.00 :   152e47: vmovntdq %ymm4,0x1000(%rdi)
    0.00 :   152e4f: vmovntdq %ymm5,0x1020(%rdi)
    0.00 :   152e57: vmovntdq %ymm6,0x1040(%rdi)
    0.00 :   152e5f: vmovntdq %ymm7,0x1060(%rdi)
    0.00 :   152e67: vmovntdq %ymm8,0x2000(%rdi)
    0.00 :   152e6f: vmovntdq %ymm9,0x2020(%rdi)
    0.00 :   152e77: vmovntdq %ymm10,0x2040(%rdi)
    0.00 :   152e7f: vmovntdq %ymm11,0x2060(%rdi)
    0.00 :   152e87: vmovntdq %ymm12,0x3000(%rdi)
    0.00 :   152e8f: vmovntdq %ymm13,0x3020(%rdi)
    0.00 :   152e97: vmovntdq %ymm14,0x3040(%rdi)
    0.00 :   152e9f: vmovntdq %ymm15,0x3060(%rdi)
    0.00 :   152ea7: sub    $0xffffffffffffff80,%rdi
    0.00 :   152eab: dec    %ecx
    0.00 :   152ead: jne    152d85 <__memcpy_avx_unaligned_erms+0x505>
    0.00 :   152eb3: add    $0x3000,%rdi
    0.00 :   152eba: add    $0x3000,%rsi
    0.00 :   152ec1: dec    %r10
    0.00 :   152ec4: jne    152d80 <__memcpy_avx_unaligned_erms+0x500>
    0.00 :   152eca: sfence
    0.00 :   152ecd: cmp    $0x80,%edx
    0.00 :   152ed3: jbe    152f2a <__memcpy_avx_unaligned_erms+0x6aa>
    0.00 :   152ed5: prefetcht0 0x80(%rsi)
    0.00 :   152edc: prefetcht0 0xc0(%rsi)
    0.00 :   152ee3: prefetcht0 0x80(%rdi)
    0.00 :   152eea: prefetcht0 0xc0(%rdi)
    0.00 :   152ef1: vmovdqu (%rsi),%ymm0
    0.00 :   152ef5: vmovdqu 0x20(%rsi),%ymm1
    0.00 :   152efa: vmovdqu 0x40(%rsi),%ymm2
    0.00 :   152eff: vmovdqu 0x60(%rsi),%ymm3
    0.00 :   152f04: sub    $0xffffffffffffff80,%rsi
    0.00 :   152f08: add    $0xffffff80,%edx
    0.00 :   152f0b: vmovdqa %ymm0,(%rdi)
    0.00 :   152f0f: vmovdqa %ymm1,0x20(%rdi)
    0.00 :   152f14: vmovdqa %ymm2,0x40(%rdi)
    0.00 :   152f19: vmovdqa %ymm3,0x60(%rdi)
    0.00 :   152f1e: sub    $0xffffffffffffff80,%rdi
    0.00 :   152f22: cmp    $0x80,%edx
    0.00 :   152f28: ja     152ed5 <__memcpy_avx_unaligned_erms+0x655>
    0.00 :   152f2a: vmovdqu -0x80(%rsi,%rdx,1),%ymm0
    0.00 :   152f30: vmovdqu -0x60(%rsi,%rdx,1),%ymm1
    0.00 :   152f36: vmovdqu -0x40(%rsi,%rdx,1),%ymm2
    0.00 :   152f3c: vmovdqu -0x20(%rsi,%rdx,1),%ymm3
    0.00 :   152f42: vmovdqu %ymm0,-0x80(%rdi,%rdx,1)
    0.00 :   152f48: vmovdqu %ymm1,-0x60(%rdi,%rdx,1)
    0.00 :   152f4e: vmovdqu %ymm2,-0x40(%rdi,%rdx,1)
    0.00 :   152f54: vmovdqu %ymm3,-0x20(%rdi,%rdx,1)
    0.00 :   152f5a: vzeroupper
    0.00 :   152f5d: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[10dc00]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000010dc00 <__recv>:
         : 6      __libc_recv():
  100.00 :   10dc00: endbr64 // libc.so.6[10dc00]
    0.00 :   10dc04: cmpb   $0x0,0xcd9ed(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   10dc0b: mov    %ecx,%r10d
    0.00 :   10dc0e: je     10dc30 <__recv+0x30>
    0.00 :   10dc10: xor    %r9d,%r9d
    0.00 :   10dc13: xor    %r8d,%r8d
    0.00 :   10dc16: mov    $0x2d,%eax
    0.00 :   10dc1b: syscall
    0.00 :   10dc1d: cmp    $0xfffffffffffff000,%rax
    0.00 :   10dc23: ja     10dc90 <__recv+0x90>
    0.00 :   10dc25: ret
    0.00 :   10dc26: cs nopw 0x0(%rax,%rax,1)
    0.00 :   10dc30: push   %rbp
    0.00 :   10dc31: sub    $0x20,%rsp
    0.00 :   10dc35: mov    %rdx,0x10(%rsp)
    0.00 :   10dc3a: mov    %rsi,0x8(%rsp)
    0.00 :   10dc3f: mov    %edi,(%rsp)
    0.00 :   10dc42: mov    %ecx,0x1c(%rsp)
    0.00 :   10dc46: call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   10dc4b: mov    0x1c(%rsp),%r10d
    0.00 :   10dc50: mov    (%rsp),%edi
    0.00 :   10dc53: xor    %r9d,%r9d
    0.00 :   10dc56: mov    %eax,%ebp
    0.00 :   10dc58: mov    0x10(%rsp),%rdx
    0.00 :   10dc5d: mov    0x8(%rsp),%rsi
    0.00 :   10dc62: xor    %r8d,%r8d
    0.00 :   10dc65: mov    $0x2d,%eax
    0.00 :   10dc6a: syscall
    0.00 :   10dc6c: cmp    $0xfffffffffffff000,%rax
    0.00 :   10dc72: ja     10dca8 <__recv+0xa8>
    0.00 :   10dc74: mov    %ebp,%edi
    0.00 :   10dc76: mov    %rax,(%rsp)
    0.00 :   10dc7a: call   87640 <__GI___pthread_disable_asynccancel>
    0.00 :   10dc7f: mov    (%rsp),%rax
    0.00 :   10dc83: add    $0x20,%rsp
    0.00 :   10dc87: pop    %rbp
    0.00 :   10dc88: ret
    0.00 :   10dc89: nopl   0x0(%rax)
    0.00 :   10dc90: mov    0xc5179(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dc97: neg    %eax
    0.00 :   10dc99: mov    %eax,%fs:(%rdx)
    0.00 :   10dc9c: mov    $0xffffffffffffffff,%rax
    0.00 :   10dca3: ret
    0.00 :   10dca4: nopl   0x0(%rax)
    0.00 :   10dca8: mov    0xc5161(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   10dcaf: neg    %eax
    0.00 :   10dcb1: mov    %eax,%fs:(%rdx)
    0.00 :   10dcb4: mov    $0xffffffffffffffff,%rax
    0.00 :   10dcbb: jmp    10dc74 <__recv+0x74>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   82.70 libc.so.6[156041]
   17.30 libc.so.6[156049]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000156020 <__strlen_avx2>:
         : 6      __strlen_avx2():
    0.00 :   156020: endbr64
    0.00 :   156024: mov    %edi,%eax
    0.00 :   156026: mov    %rdi,%rdx
    0.00 :   156029: vpxor  %xmm0,%xmm0,%xmm0
    0.00 :   15602d: and    $0xfff,%eax
    0.00 :   156032: cmp    $0xfe0,%eax
    0.00 :   156037: ja     156170 <__strlen_avx2+0x150>
    0.00 :   15603d: vpcmpeqb (%rdi),%ymm0,%ymm1
   82.70 :   156041: vpmovmskb %ymm1,%eax // libc.so.6[156041]
    0.00 :   156045: test   %eax,%eax
    0.00 :   156047: je     1560a0 <__strlen_avx2+0x80>
   17.30 :   156049: tzcnt  %eax,%eax // libc.so.6[156049]
    0.00 :   15604d: vzeroupper
    0.00 :   156050: ret
    0.00 :   156051: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15605c: nopl   0x0(%rax)
    0.00 :   156060: tzcnt  %eax,%eax
    0.00 :   156064: sub    %edx,%edi
    0.00 :   156066: inc    %edi
    0.00 :   156068: add    %edi,%eax
    0.00 :   15606a: vzeroupper
    0.00 :   15606d: ret
    0.00 :   15606e: xchg   %ax,%ax
    0.00 :   156070: tzcnt  %eax,%eax
    0.00 :   156074: sub    %edx,%edi
    0.00 :   156076: add    $0x21,%edi
    0.00 :   156079: add    %edi,%eax
    0.00 :   15607b: vzeroupper
    0.00 :   15607e: ret
    0.00 :   15607f: nop
    0.00 :   156080: tzcnt  %eax,%eax
    0.00 :   156084: sub    %edx,%edi
    0.00 :   156086: add    $0x41,%edi
    0.00 :   156089: add    %edi,%eax
    0.00 :   15608b: vzeroupper
    0.00 :   15608e: ret
    0.00 :   15608f: nop
    0.00 :   156090: tzcnt  %eax,%eax
    0.00 :   156094: sub    %edx,%edi
    0.00 :   156096: add    $0x61,%edi
    0.00 :   156099: add    %edi,%eax
    0.00 :   15609b: vzeroupper
    0.00 :   15609e: ret
    0.00 :   15609f: nop
    0.00 :   1560a0: or     $0x1f,%rdi
    0.00 :   1560a4: vpcmpeqb 0x1(%rdi),%ymm0,%ymm1
    0.00 :   1560a9: vpmovmskb %ymm1,%eax
    0.00 :   1560ad: test   %eax,%eax
    0.00 :   1560af: jne    156060 <__strlen_avx2+0x40>
    0.00 :   1560b1: vpcmpeqb 0x21(%rdi),%ymm0,%ymm1
    0.00 :   1560b6: vpmovmskb %ymm1,%eax
    0.00 :   1560ba: test   %eax,%eax
    0.00 :   1560bc: jne    156070 <__strlen_avx2+0x50>
    0.00 :   1560be: vpcmpeqb 0x41(%rdi),%ymm0,%ymm1
    0.00 :   1560c3: vpmovmskb %ymm1,%eax
    0.00 :   1560c7: test   %eax,%eax
    0.00 :   1560c9: jne    156080 <__strlen_avx2+0x60>
    0.00 :   1560cb: vpcmpeqb 0x61(%rdi),%ymm0,%ymm1
    0.00 :   1560d0: vpmovmskb %ymm1,%eax
    0.00 :   1560d4: test   %eax,%eax
    0.00 :   1560d6: jne    156090 <__strlen_avx2+0x70>
    0.00 :   1560d8: inc    %rdi
    0.00 :   1560db: or     $0x7f,%rdi
    0.00 :   1560df: nop
    0.00 :   1560e0: vmovdqa 0x1(%rdi),%ymm1
    0.00 :   1560e5: vpminub 0x21(%rdi),%ymm1,%ymm2
    0.00 :   1560ea: vmovdqa 0x41(%rdi),%ymm3
    0.00 :   1560ef: vpminub 0x61(%rdi),%ymm3,%ymm4
    0.00 :   1560f4: vpminub %ymm2,%ymm4,%ymm5
    0.00 :   1560f8: vpcmpeqb %ymm5,%ymm0,%ymm5
    0.00 :   1560fc: vpmovmskb %ymm5,%ecx
    0.00 :   156100: sub    $0xffffffffffffff80,%rdi
    0.00 :   156104: test   %ecx,%ecx
    0.00 :   156106: je     1560e0 <__strlen_avx2+0xc0>
    0.00 :   156108: vpcmpeqb %ymm1,%ymm0,%ymm1
    0.00 :   15610c: vpmovmskb %ymm1,%eax
    0.00 :   156110: sub    %rdx,%rdi
    0.00 :   156113: test   %eax,%eax
    0.00 :   156115: jne    156150 <__strlen_avx2+0x130>
    0.00 :   156117: vpcmpeqb %ymm2,%ymm0,%ymm2
    0.00 :   15611b: vpmovmskb %ymm2,%eax
    0.00 :   15611f: test   %eax,%eax
    0.00 :   156121: jne    156160 <__strlen_avx2+0x140>
    0.00 :   156123: vpcmpeqb %ymm3,%ymm0,%ymm3
    0.00 :   156127: vpmovmskb %ymm3,%eax
    0.00 :   15612b: shl    $0x20,%rcx
    0.00 :   15612f: or     %rcx,%rax
    0.00 :   156132: tzcnt  %rax,%rax
    0.00 :   156137: sub    $0x3f,%rdi
    0.00 :   15613b: add    %rdi,%rax
    0.00 :   15613e: vzeroupper
    0.00 :   156141: ret
    0.00 :   156142: data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   15614d: nopl   (%rax)
    0.00 :   156150: tzcnt  %eax,%eax
    0.00 :   156154: sub    $0x7f,%rdi
    0.00 :   156158: add    %rdi,%rax
    0.00 :   15615b: vzeroupper
    0.00 :   15615e: ret
    0.00 :   15615f: nop
    0.00 :   156160: tzcnt  %eax,%eax
    0.00 :   156164: sub    $0x5f,%rdi
    0.00 :   156168: add    %rdi,%rax
    0.00 :   15616b: vzeroupper
    0.00 :   15616e: ret
    0.00 :   15616f: nop
    0.00 :   156170: or     $0x1f,%rdi
    0.00 :   156174: vpcmpeqb -0x1f(%rdi),%ymm0,%ymm1
    0.00 :   156179: vpmovmskb %ymm1,%eax
    0.00 :   15617d: sarx   %edx,%eax,%eax
    0.00 :   156182: test   %eax,%eax
    0.00 :   156184: je     1560a4 <__strlen_avx2+0x84>
    0.00 :   15618a: tzcnt  %eax,%eax
    0.00 :   15618e: vzeroupper
    0.00 :   156191: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   72.96 [virtio_net][6481]
   27.04 [virtio_net][6527]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (3 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000006140 <receive_buf>:
         : 6    receive_buf():
    0.00 :   6140:   call   6145 <receive_buf+0x5>
    0.00 :   6145:   push   %r15
    0.00 :   6147:   push   %r14
    0.00 :   6149:   push   %r13
    0.00 :   614b:   mov    %ecx,%r13d
    0.00 :   614e:   push   %r12
    0.00 :   6150:   push   %rbp
    0.00 :   6151:   mov    %rsi,%rbp
    0.00 :   6154:   push   %rbx
    0.00 :   6155:   mov    %rdi,%rbx
    0.00 :   6158:   sub    $0xa0,%rsp
    0.00 :   615f:   mov    0x10(%rdi),%rax
    0.00 :   6163:   mov    %rdx,0x8(%rsp)
    0.00 :   6168:   mov    0xd8(%rsp),%r12
    0.00 :   6170:   mov    %rax,(%rsp)
    0.00 :   6174:   movzbl 0x4a(%rdi),%eax
    0.00 :   6178:   lea    0xe(%rax),%edx
    0.00 :   617b:   cmp    %edx,%ecx
    0.00 :   617d:   jb     6a2a <receive_buf+0x8ea>
    0.00 :   6183:   cmpb   $0x0,0x38(%rdi)
    0.00 :   6187:   mov    %r9,%r14
    0.00 :   618a:   jne    645d <receive_buf+0x31d>
    0.00 :   6190:   cmpb   $0x0,0x33(%rdi)
    0.00 :   6194:   je     626a <receive_buf+0x12a>
    0.00 :   619a:   push   $0x0
    0.00 :   619c:   mov    %ecx,%r8d
    0.00 :   619f:   mov    $0x1000,%r9d
    0.00 :   61a5:   xor    %ecx,%ecx
    0.00 :   61a7:   push   $0x0
    0.00 :   61a9:   push   $0x1
    0.00 :   61ab:   mov    0x20(%rsp),%rdx
    0.00 :   61b0:   call   2170 <page_to_skb>
    0.00 :   61b5:   mov    %rax,%r14
    0.00 :   61b8:   movzbl 0x4a(%rbx),%eax
    0.00 :   61bc:   add    $0x18,%rsp
    0.00 :   61c0:   sub    %eax,%r13d
    0.00 :   61c3:   add    %r13,0x8(%r12)
    0.00 :   61c8:   test   %r14,%r14
    0.00 :   61cb:   je     6e71 <receive_buf+0xd31>
    0.00 :   61d1:   lea    0x28(%r14),%rdx
    0.00 :   61d5:   mov    (%rsp),%rax
    0.00 :   61d9:   testb  $0x80,0xec(%rax)
    0.00 :   61e0:   je     61ec <receive_buf+0xac>
    0.00 :   61e2:   cmpb   $0x0,0x3a(%rbx)
    0.00 :   61e6:   jne    69cc <receive_buf+0x88c>
    0.00 :   61ec:   movzbl 0x28(%r14),%edx
    0.00 :   61f1:   test   $0x2,%dl
    0.00 :   61f4:   je     620b <receive_buf+0xcb>
    0.00 :   61f6:   movzbl 0x80(%r14),%eax
    0.00 :   61fe:   and    $0xffffff9f,%eax
    0.00 :   6201:   or     $0x20,%eax
    0.00 :   6204:   mov    %al,0x80(%r14)
    0.00 :   620b:   movzbl 0x29(%r14),%eax
    0.00 :   6210:   test   %al,%al
    0.00 :   6212:   je     637f <receive_buf+0x23f>
    0.00 :   6218:   mov    %eax,%esi
    0.00 :   621a:   and    $0x7f,%esi
    0.00 :   621d:   cmp    $0x3,%esi
    0.00 :   6220:   je     6a14 <receive_buf+0x8d4>
    0.00 :   6226:   cmp    $0x4,%esi
    0.00 :   6229:   je     686d <receive_buf+0x72d>
    0.00 :   622f:   cmp    $0x1,%esi
    0.00 :   6232:   je     69b6 <receive_buf+0x876>
    0.00 :   6238:   call   623d <receive_buf+0xfd>
    0.00 :   623d:   test   %eax,%eax
    0.00 :   623f:   jne    6245 <receive_buf+0x105>
    0.00 :   6245:   mov    (%rsp),%rax
    0.00 :   6249:   mov    %r14,%rdi
    0.00 :   624c:   addq   $0x1,0x198(%rax)
    0.00 :   6254:   add    $0xa0,%rsp
    0.00 :   625b:   pop    %rbx
    0.00 :   625c:   pop    %rbp
    0.00 :   625d:   pop    %r12
    0.00 :   625f:   pop    %r13
    0.00 :   6261:   pop    %r14
    0.00 :   6263:   pop    %r15
    0.00 :   6265:   jmp    626a <receive_buf+0x12a>
    0.00 :   626a:   lea    0x40(%r8),%esi
    0.00 :   626e:   mov    0x8(%rsp),%rcx
    0.00 :   6273:   lea    (%rsi,%rax,1),%r11d
    0.00 :   6277:   mov    %esi,0x38(%rsp)
    0.00 :   627b:   lea    0x62d(%r11),%edx
    0.00 :   6282:   and    $0xffffffc0,%edx
    0.00 :   6285:   lea    0x140(%rdx),%edi
    0.00 :   628b:   mov    $0x80000000,%edx
    0.00 :   6290:   mov    %edi,0x10(%rsp)
    0.00 :   6294:   add    %rcx,%rdx
    0.00 :   6297:   jb     7b9b <receive_buf+0x1a5b>
    0.00 :   629d:   mov    $0xffffffff80000000,%rcx
    0.00 :   62a4:   sub    0x0(%rip),%rcx        # 62ab <receive_buf+0x16b>
    0.00 :   62ab:   add    %rcx,%rdx
    0.00 :   62ae:   shr    $0xc,%rdx
    0.00 :   62b2:   shl    $0x6,%rdx
    0.00 :   62b6:   add    0x0(%rip),%rdx        # 62bd <receive_buf+0x17d>
    0.00 :   62bd:   mov    0x8(%rdx),%rcx
    0.00 :   62c1:   mov    %rdx,0x30(%rsp)
    0.00 :   62c6:   test   $0x1,%cl
    0.00 :   62c9:   jne    6e63 <receive_buf+0xd23>
    0.00 :   62cf:   nopl   0x0(%rax,%rax,1)
    0.00 :   62d4:   mov    %r13d,%edx
    0.00 :   62d7:   sub    %eax,%edx
    0.00 :   62d9:   mov    %edx,%r10d
    0.00 :   62dc:   add    %r10,0x8(%r12)
    0.00 :   62e1:   cmp    $0x5ee,%edx
    0.00 :   62e7:   ja     6c0b <receive_buf+0xacb>
    0.00 :   62ed:   movq   $0x0,0x18(%rsp)
    0.00 :   62f6:   xor    %r13d,%r13d
    0.00 :   62f9:   xor    %r15d,%r15d
    0.00 :   62fc:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6300:   jne    6ebc <receive_buf+0xd7c>
    0.00 :   6306:   mov    0x10(%rsp),%esi
    0.00 :   630a:   mov    0x8(%rsp),%rdi
    0.00 :   630f:   mov    %edx,0x28(%rsp)
    0.00 :   6313:   mov    %r11d,0x20(%rsp)
    0.00 :   6318:   call   631d <receive_buf+0x1dd>
    0.00 :   631d:   mov    %rax,%r14
    0.00 :   6320:   test   %rax,%rax
    0.00 :   6323:   je     6c1c <receive_buf+0xadc>
    0.00 :   6329:   mov    0x20(%rsp),%r11d
    0.00 :   632e:   mov    0x28(%rsp),%esi
    0.00 :   6332:   mov    %r14,%rdi
    0.00 :   6335:   sub    %r15d,%r11d
    0.00 :   6338:   add    %r11d,0xbc(%r14)
    0.00 :   633f:   movslq %r11d,%rax
    0.00 :   6342:   add    %rax,0xd0(%r14)
    0.00 :   6349:   call   634e <receive_buf+0x20e>
    0.00 :   634e:   cmpq   $0x0,0x18(%rsp)
    0.00 :   6354:   lea    0x28(%r14),%rdx
    0.00 :   6358:   je     67d8 <receive_buf+0x698>
    0.00 :   635e:   test   %r13d,%r13d
    0.00 :   6361:   je     61d5 <receive_buf+0x95>
    0.00 :   6367:   mov    0xc0(%r14),%eax
    0.00 :   636e:   mov    0xc8(%r14),%rcx
    0.00 :   6375:   mov    %r13b,0x1(%rcx,%rax,1)
    0.00 :   637a:   jmp    61d5 <receive_buf+0x95>
    0.00 :   637f:   mov    0xd0(%r14),%rax
    0.00 :   6386:   sub    0xc8(%r14),%rax
    0.00 :   638d:   and    $0x1,%edx
    0.00 :   6390:   mov    %ax,0xba(%r14)
    0.00 :   6398:   je     6416 <receive_buf+0x2d6>
    0.00 :   639a:   xor    %r12d,%r12d
    0.00 :   639d:   xor    %r15d,%r15d
    0.00 :   63a0:   movzwl 0x30(%r14),%edx
    0.00 :   63a5:   mov    0x70(%r14),%ecx
    0.00 :   63a9:   movzwl 0x2e(%r14),%ebx
    0.00 :   63ae:   mov    0x74(%r14),%esi
    0.00 :   63b2:   lea    0x2(%rdx),%eax
    0.00 :   63b5:   mov    %ecx,%edi
    0.00 :   63b7:   cmp    %r15d,%eax
    0.00 :   63ba:   cmovb  %r15d,%eax
    0.00 :   63be:   sub    %esi,%edi
    0.00 :   63c0:   add    %ebx,%eax
    0.00 :   63c2:   cmp    %eax,%edi
    0.00 :   63c4:   jb     6e17 <receive_buf+0xcd7>
    0.00 :   63ca:   mov    %ebx,%esi
    0.00 :   63cc:   mov    %r14,%rdi
    0.00 :   63cf:   call   63d4 <receive_buf+0x294>
    0.00 :   63d4:   test   %al,%al
    0.00 :   63d6:   je     6238 <receive_buf+0xf8>
    0.00 :   63dc:   mov    0x70(%r14),%eax
    0.00 :   63e0:   mov    0x74(%r14),%esi
    0.00 :   63e4:   movzwl 0xb6(%r14),%ebx
    0.00 :   63ec:   add    0xc8(%r14),%rbx
    0.00 :   63f3:   mov    %eax,%edx
    0.00 :   63f5:   sub    0xd0(%r14),%rbx
    0.00 :   63fc:   add    %r15d,%ebx
    0.00 :   63ff:   sub    %esi,%edx
    0.00 :   6401:   cmp    %ebx,%edx
    0.00 :   6403:   jb     6e41 <receive_buf+0xd01>
    0.00 :   6409:   movzbl 0x29(%r14),%eax
    0.00 :   640e:   test   %al,%al
    0.00 :   6410:   jne    681f <receive_buf+0x6df>
    0.00 :   6416:   mov    0x0(%rbp),%rax
    0.00 :   641a:   mov    (%rsp),%rsi
    0.00 :   641e:   mov    %r14,%rdi
    0.00 :   6421:   mov    0x28(%rax),%eax
    0.00 :   6424:   shr    %eax
    0.00 :   6426:   add    $0x1,%eax
    0.00 :   6429:   mov    %ax,0x7c(%r14)
    0.00 :   642e:   call   6433 <receive_buf+0x2f3>
    0.00 :   6433:   mov    %ax,0xb4(%r14)
    0.00 :   643b:   nopl   0x0(%rax,%rax,1)
    0.00 :   6440:   add    $0xa0,%rsp
    0.00 :   6447:   lea    0x8(%rbp),%rdi
    0.00 :   644b:   mov    %r14,%rsi
    0.00 :   644e:   pop    %rbx
    0.00 :   644f:   pop    %rbp
    0.00 :   6450:   pop    %r12
    0.00 :   6452:   pop    %r13
    0.00 :   6454:   pop    %r14
    0.00 :   6456:   pop    %r15
    0.00 :   6458:   jmp    645d <receive_buf+0x31d>
    0.00 :   645d:   mov    0x8(%rsp),%rsi
    0.00 :   6462:   mov    $0x80000000,%edx
    0.00 :   6467:   xor    %edi,%edi
    0.00 :   6469:   mov    %ecx,0x54(%rsp)
    0.00 :   646d:   mov    $0xffffffff80000000,%rcx
    0.00 :   6474:   mov    %r8,0x58(%rsp)
    0.00 :   6479:   add    %rsi,%rdx
    0.00 :   647c:   movzwl 0xa(%rsi),%r9d
   72.96 :   6481:   mov    0x0(%rip),%rsi        # 6488 <receive_buf+0x348> // [virtio_net][6481]
    0.00 :   6488:   setb   %dil
    0.00 :   648c:   sub    %rsi,%rcx
    0.00 :   648f:   test   %rdi,%rdi
    0.00 :   6492:   cmovne 0x0(%rip),%rcx        # 649a <receive_buf+0x35a>
    0.00 :   649a:   mov    0x0(%rip),%rdi        # 64a1 <receive_buf+0x361>
    0.00 :   64a1:   mov    %r9w,0x52(%rsp)
    0.00 :   64a7:   add    %rcx,%rdx
    0.00 :   64aa:   shr    $0xc,%rdx
    0.00 :   64ae:   shl    $0x6,%rdx
    0.00 :   64b2:   add    %rdi,%rdx
    0.00 :   64b5:   mov    0x8(%rdx),%rcx
    0.00 :   64b9:   mov    %rdx,%r10
    0.00 :   64bc:   test   $0x1,%cl
    0.00 :   64bf:   jne    6eb3 <receive_buf+0xd73>
    0.00 :   64c5:   nopl   0x0(%rax,%rax,1)
    0.00 :   64ca:   mov    %r10,%rcx
    0.00 :   64cd:   mov    0x8(%rsp),%rdx
    0.00 :   64d2:   mov    %r8d,%r11d
    0.00 :   64d5:   sub    %rdi,%rcx
    0.00 :   64d8:   and    $0x3fffff,%r11d
    0.00 :   64df:   mov    %r13d,%edi
    0.00 :   64e2:   sar    $0x6,%rcx
    0.00 :   64e6:   sub    %eax,%edi
    0.00 :   64e8:   add    %rdi,0x8(%r12)
    0.00 :   64ed:   shl    $0xc,%rcx
    0.00 :   64f1:   add    %rsi,%rcx
    0.00 :   64f4:   mov    %r8,%rsi
    0.00 :   64f7:   sub    %rcx,%rdx
    0.00 :   64fa:   shr    $0x16,%rsi
    0.00 :   64fe:   mov    %edx,%r15d
    0.00 :   6501:   mov    %esi,%ecx
    0.00 :   6503:   cmp    %r13d,%r11d
    0.00 :   6506:   jb     6e9a <receive_buf+0xd5a>
    0.00 :   650c:   xor    %edi,%edi
    0.00 :   650e:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6512:   mov    $0x1,%eax
    0.00 :   6517:   jne    7020 <receive_buf+0xee0>
    0.00 :   651d:   push   %rcx
    0.00 :   651e:   mov    %r10,%rdx
    0.00 :   6521:   mov    %r11d,%r9d
    0.00 :   6524:   mov    %r13d,%r8d
   27.04 :   6527:   push   %rdi // [virtio_net][6527]
    0.00 :   6528:   mov    %r15d,%ecx
    0.00 :   652b:   mov    %rbp,%rsi
    0.00 :   652e:   mov    %rbx,%rdi
    0.00 :   6531:   push   %rax
    0.00 :   6532:   mov    %r10,0x28(%rsp)
    0.00 :   6537:   call   2170 <page_to_skb>
    0.00 :   653c:   mov    0x28(%rsp),%r10
    0.00 :   6541:   add    $0x18,%rsp
    0.00 :   6545:   test   %rax,%rax
    0.00 :   6548:   mov    %rax,%r14
    0.00 :   654b:   je     6eab <receive_buf+0xd6b>
    0.00 :   6551:   movzwl 0x52(%rsp),%eax
    0.00 :   6556:   mov    %r14,%r15
    0.00 :   6559:   lea    0x54(%rsp),%rdx
    0.00 :   655e:   lea    -0x1(%rax),%r13d
    0.00 :   6562:   mov    %r13w,0x52(%rsp)
    0.00 :   6568:   test   %r13w,%r13w
    0.00 :   656c:   je     669d <receive_buf+0x55d>
    0.00 :   6572:   mov    %rdx,0x10(%rsp)
    0.00 :   6577:   mov    %rbx,0x20(%rsp)
    0.00 :   657c:   mov    %r13d,%ebx
    0.00 :   657f:   mov    0x0(%rbp),%rdi
    0.00 :   6583:   mov    0x10(%rsp),%rsi
    0.00 :   6588:   lea    0x58(%rsp),%rdx
    0.00 :   658d:   call   6592 <receive_buf+0x452>
    0.00 :   6592:   mov    %rax,%r13
    0.00 :   6595:   test   %rax,%rax
    0.00 :   6598:   je     6ace <receive_buf+0x98e>
    0.00 :   659e:   mov    0x54(%rsp),%eax
    0.00 :   65a2:   add    %rax,0x8(%r12)
    0.00 :   65a7:   mov    %rax,%rcx
    0.00 :   65aa:   mov    $0x80000000,%eax
    0.00 :   65af:   add    %r13,%rax
    0.00 :   65b2:   jb     7ab2 <receive_buf+0x1972>
    0.00 :   65b8:   mov    $0xffffffff80000000,%rsi
    0.00 :   65bf:   sub    0x0(%rip),%rsi        # 65c6 <receive_buf+0x486>
    0.00 :   65c6:   add    %rsi,%rax
    0.00 :   65c9:   mov    0x0(%rip),%rdx        # 65d0 <receive_buf+0x490>
    0.00 :   65d0:   shr    $0xc,%rax
    0.00 :   65d4:   shl    $0x6,%rax
    0.00 :   65d8:   add    %rdx,%rax
    0.00 :   65db:   mov    0x8(%rax),%rsi
    0.00 :   65df:   mov    %rax,%rbx
    0.00 :   65e2:   test   $0x1,%sil
    0.00 :   65e6:   jne    6c02 <receive_buf+0xac2>
    0.00 :   65ec:   nopl   0x0(%rax,%rax,1)
    0.00 :   65f1:   mov    0x58(%rsp),%r8
    0.00 :   65f6:   mov    %r8d,%r9d
    0.00 :   65f9:   and    $0x3fffff,%r9d
    0.00 :   6600:   cmp    %ecx,%r9d
    0.00 :   6603:   jb     6b03 <receive_buf+0x9c3>
    0.00 :   6609:   mov    0xc0(%r15),%eax
    0.00 :   6610:   mov    0xc8(%r15),%rcx
    0.00 :   6617:   movzbl 0x2(%rcx,%rax,1),%esi
    0.00 :   661c:   cmp    $0x11,%esi
    0.00 :   661f:   je     6c3d <receive_buf+0xafd>
    0.00 :   6625:   mov    %rbx,%rax
    0.00 :   6628:   mov    %r13,%rcx
    0.00 :   662b:   sub    %rdx,%rax
    0.00 :   662e:   sar    $0x6,%rax
    0.00 :   6632:   shl    $0xc,%rax
    0.00 :   6636:   add    0x0(%rip),%rax        # 663d <receive_buf+0x4fd>
    0.00 :   663d:   sub    %rax,%rcx
    0.00 :   6640:   cmp    %r15,%r14
    0.00 :   6643:   je     6658 <receive_buf+0x518>
    0.00 :   6645:   mov    0x54(%rsp),%eax
    0.00 :   6649:   add    %r9d,0xd8(%r14)
    0.00 :   6650:   add    %eax,0x74(%r14)
    0.00 :   6654:   add    %eax,0x70(%r14)
    0.00 :   6658:   mov    0xc0(%r15),%eax
    0.00 :   665f:   add    0xc8(%r15),%rax
    0.00 :   6666:   testb  $0x1,(%rax)
    0.00 :   6669:   je     66ce <receive_buf+0x58e>
    0.00 :   666b:   cmpq   $0x0,0x28(%rax)
    0.00 :   6670:   je     66ce <receive_buf+0x58e>
    0.00 :   6672:   mov    0x54(%rsp),%r8d
    0.00 :   6677:   mov    %rbx,%rdx
    0.00 :   667a:   mov    %r15,%rdi
    0.00 :   667d:   call   6682 <receive_buf+0x542>
    0.00 :   6682:   movzwl 0x52(%rsp),%eax
    0.00 :   6687:   lea    -0x1(%rax),%ebx
    0.00 :   668a:   mov    %bx,0x52(%rsp)
    0.00 :   668f:   test   %bx,%bx
    0.00 :   6692:   jne    657f <receive_buf+0x43f>
    0.00 :   6698:   mov    0x20(%rsp),%rbx
    0.00 :   669d:   mov    0x1e8(%rbp),%rdx
    0.00 :   66a4:   mov    0x70(%r14),%eax
    0.00 :   66a8:   test   %rdx,%rdx
    0.00 :   66ab:   je     66be <receive_buf+0x57e>
    0.00 :   66ad:   mov    %rdx,%rcx
    0.00 :   66b0:   shl    $0x6,%rcx
    0.00 :   66b4:   sub    %rdx,%rcx
    0.00 :   66b7:   add    %rcx,%rax
    0.00 :   66ba:   shr    $0x6,%rax
    0.00 :   66be:   mov    %rax,0x1e8(%rbp)
    0.00 :   66c5:   lea    0x28(%r14),%rdx
    0.00 :   66c9:   jmp    61d5 <receive_buf+0x95>
    0.00 :   66ce:   test   %esi,%esi
    0.00 :   66d0:   je     6672 <receive_buf+0x532>
    0.00 :   66d2:   lea    -0x1(%rsi),%r13d
    0.00 :   66d6:   movslq %r13d,%rdx
    0.00 :   66d9:   shl    $0x4,%rdx
    0.00 :   66dd:   add    %rdx,%rax
    0.00 :   66e0:   cmp    0x30(%rax),%rbx
    0.00 :   66e4:   jne    6672 <receive_buf+0x532>
    0.00 :   66e6:   mov    0x38(%rax),%edx
    0.00 :   66e9:   add    0x3c(%rax),%edx
    0.00 :   66ec:   cmp    %ecx,%edx
    0.00 :   66ee:   jne    6672 <receive_buf+0x532>
    0.00 :   66f0:   mov    %rbx,%rdi
    0.00 :   66f3:   mov    %r9d,0x18(%rsp)
    0.00 :   66f8:   call   1ef0 <put_page>
    0.00 :   66fd:   mov    0x18(%rsp),%ecx
    0.00 :   6701:   mov    0x54(%rsp),%edx
    0.00 :   6705:   mov    %r13d,%esi
    0.00 :   6708:   mov    %r15,%rdi
    0.00 :   670b:   call   6710 <receive_buf+0x5d0>
    0.00 :   6710:   jmp    6682 <receive_buf+0x542>
    0.00 :   6715:   test   $0xfff,%eax
    0.00 :   671a:   jne    65f1 <receive_buf+0x4b1>
    0.00 :   6720:   mov    (%rax),%rsi
    0.00 :   6723:   test   $0x10000,%esi
    0.00 :   6729:   je     65f1 <receive_buf+0x4b1>
    0.00 :   672f:   mov    0x48(%rax),%rsi
    0.00 :   6733:   lea    -0x1(%rsi),%r10
    0.00 :   6737:   and    $0x1,%esi
    0.00 :   673a:   cmovne %r10,%rax
    0.00 :   673e:   mov    %rax,%rbx
    0.00 :   6741:   jmp    65f1 <receive_buf+0x4b1>
    0.00 :   6746:   movzbl 0x80(%r14),%r8d
    0.00 :   674e:   rol    $0x8,%ax
    0.00 :   6752:   mov    0x70(%r14),%ecx
    0.00 :   6756:   mov    $0x0,%rsi
    0.00 :   675d:   movzwl %ax,%edx
    0.00 :   6760:   mov    $0x0,%rdi
    0.00 :   6767:   and    $0x7,%r8d
    0.00 :   676b:   call   6770 <receive_buf+0x630>
    0.00 :   6770:   jmp    6440 <receive_buf+0x300>
    0.00 :   6775:   test   $0xfff,%edx
    0.00 :   677b:   jne    62d4 <receive_buf+0x194>
    0.00 :   6781:   mov    (%rdx),%rcx
    0.00 :   6784:   test   $0x10000,%ecx
    0.00 :   678a:   je     62d4 <receive_buf+0x194>
    0.00 :   6790:   mov    0x48(%rdx),%rcx
    0.00 :   6794:   lea    -0x1(%rcx),%rsi
    0.00 :   6798:   and    $0x1,%ecx
    0.00 :   679b:   cmovne %rsi,%rdx
    0.00 :   679f:   mov    %rdx,0x30(%rsp)
    0.00 :   67a4:   jmp    62d4 <receive_buf+0x194>
    0.00 :   67a9:   test   $0xfff,%edx
    0.00 :   67af:   jne    64ca <receive_buf+0x38a>
    0.00 :   67b5:   mov    (%rdx),%rcx
    0.00 :   67b8:   test   $0x10000,%ecx
    0.00 :   67be:   je     64ca <receive_buf+0x38a>
    0.00 :   67c4:   mov    0x48(%rdx),%rcx
    0.00 :   67c8:   lea    -0x1(%rcx),%r10
    0.00 :   67cc:   and    $0x1,%ecx
    0.00 :   67cf:   cmove  %rdx,%r10
    0.00 :   67d3:   jmp    64ca <receive_buf+0x38a>
    0.00 :   67d8:   mov    0x38(%rsp),%eax
    0.00 :   67dc:   mov    0x8(%rsp),%rsi
    0.00 :   67e1:   movzbl 0x4a(%rbx),%ecx
    0.00 :   67e5:   add    %rax,%rsi
    0.00 :   67e8:   cmp    $0x8,%ecx
    0.00 :   67eb:   jae    6d3d <receive_buf+0xbfd>
    0.00 :   67f1:   test   $0x4,%cl
    0.00 :   67f4:   jne    77fd <receive_buf+0x16bd>
    0.00 :   67fa:   test   %ecx,%ecx
    0.00 :   67fc:   je     635e <receive_buf+0x21e>
    0.00 :   6802:   movzbl (%rsi),%eax
    0.00 :   6805:   mov    %al,(%rdx)
    0.00 :   6807:   test   $0x2,%cl
    0.00 :   680a:   je     635e <receive_buf+0x21e>
    0.00 :   6810:   movzwl -0x2(%rcx,%rsi,1),%eax
    0.00 :   6815:   mov    %ax,-0x2(%rdx,%rcx,1)
    0.00 :   681a:   jmp    635e <receive_buf+0x21e>
    0.00 :   681f:   mov    0x70(%r14),%eax
    0.00 :   6823:   mov    %ebx,%edi
    0.00 :   6825:   movzwl 0x2c(%r14),%esi
    0.00 :   682a:   mov    0xc8(%r14),%rdx
    0.00 :   6831:   sub    %r15d,%edi
    0.00 :   6834:   test   $0x10000,%r12d
    0.00 :   683b:   mov    0xc0(%r14),%ecx
    0.00 :   6842:   cmovne %edi,%ebx
    0.00 :   6845:   movzwl %si,%edi
    0.00 :   6848:   sub    %ebx,%eax
    0.00 :   684a:   cmp    %eax,%edi
    0.00 :   684c:   jae    6416 <receive_buf+0x2d6>
    0.00 :   6852:   lea    (%rdx,%rcx,1),%rax
    0.00 :   6856:   or     $0x2,%r12d
    0.00 :   685a:   xor    %edx,%edx
    0.00 :   685c:   mov    %si,0x4(%rax)
    0.00 :   6860:   mov    %r12d,0x18(%rax)
    0.00 :   6864:   mov    %dx,0x6(%rax)
    0.00 :   6868:   jmp    6416 <receive_buf+0x2d6>
    0.00 :   686d:   mov    $0x6,%ecx
    0.00 :   6872:   mov    $0x14,%r15d
    0.00 :   6878:   mov    $0x10,%r12d
    0.00 :   687e:   mov    %r12d,%edi
    0.00 :   6881:   or     $0x4,%edi
    0.00 :   6884:   test   %al,%al
    0.00 :   6886:   cmovs  %edi,%r12d
    0.00 :   688a:   cmpw   $0x0,0x2c(%r14)
    0.00 :   6890:   je     6238 <receive_buf+0xf8>
    0.00 :   6896:   mov    0xd0(%r14),%rax
    0.00 :   689d:   sub    0xc8(%r14),%rax
    0.00 :   68a4:   and    $0x1,%edx
    0.00 :   68a7:   mov    %ax,0xba(%r14)
    0.00 :   68af:   jne    63a0 <receive_buf+0x260>
    0.00 :   68b5:   cmpw   $0x0,0xb8(%r14)
    0.00 :   68be:   je     6c95 <receive_buf+0xb55>
    0.00 :   68c4:   movq   $0x0,0x68(%rsp)
    0.00 :   68cd:   movl   $0x0,0x70(%rsp)
    0.00 :   68d5:   cmpw   $0x0,0xb4(%r14)
    0.00 :   68de:   je     6da3 <receive_buf+0xc63>
    0.00 :   68e4:   mov    %rbp,%rax
    0.00 :   68e7:   mov    %r12d,%ebx
    0.00 :   68ea:   mov    %r14,%rbp
    0.00 :   68ed:   mov    %ecx,0x8(%rsp)
    0.00 :   68f1:   lea    0x68(%rsp),%r13
    0.00 :   68f6:   and    $0x10000,%ebx
    0.00 :   68fc:   mov    %rax,%r14
    0.00 :   68ff:   jmp    6923 <receive_buf+0x7e3>
    0.00 :   6901:   test   %ebx,%ebx
    0.00 :   6903:   je     6c8d <receive_buf+0xb4d>
    0.00 :   6909:   cmpw   $0x8,0xb4(%rbp)
    0.00 :   6911:   jne    6c8d <receive_buf+0xb4d>
    0.00 :   6917:   mov    $0xffffdd86,%ecx
    0.00 :   691c:   mov    %cx,0xb4(%rbp)
    0.00 :   6923:   movq   $0x0,0x0(%r13)
    0.00 :   692b:   xor    %r9d,%r9d
    0.00 :   692e:   xor    %r8d,%r8d
    0.00 :   6931:   xor    %edi,%edi
    0.00 :   6933:   movl   $0x0,0x8(%r13)
    0.00 :   693b:   mov    %r13,%rcx
    0.00 :   693e:   mov    $0x0,%rdx
    0.00 :   6945:   mov    %rbp,%rsi
    0.00 :   6948:   push   $0x0
    0.00 :   694a:   push   $0x0
    0.00 :   694c:   push   $0x0
    0.00 :   694e:   call   6953 <receive_buf+0x813>
    0.00 :   6953:   add    $0x18,%rsp
    0.00 :   6957:   test   %al,%al
    0.00 :   6959:   je     6901 <receive_buf+0x7c1>
    0.00 :   695b:   mov    %r14,%rax
    0.00 :   695e:   mov    %rbp,%r14
    0.00 :   6961:   movzwl 0x68(%rsp),%ebx
    0.00 :   6966:   mov    0x8(%rsp),%ecx
    0.00 :   696a:   mov    %rax,%rbp
    0.00 :   696d:   mov    0x70(%r14),%eax
    0.00 :   6971:   mov    0x74(%r14),%edx
    0.00 :   6975:   add    %r15d,%ebx
    0.00 :   6978:   mov    %eax,%esi
    0.00 :   697a:   sub    %edx,%esi
    0.00 :   697c:   cmp    %ebx,%esi
    0.00 :   697e:   jb     7768 <receive_buf+0x1628>
    0.00 :   6984:   movzbl 0x72(%rsp),%eax
    0.00 :   6989:   cmp    %ecx,%eax
    0.00 :   698b:   jne    6238 <receive_buf+0xf8>
    0.00 :   6991:   mov    0xd0(%r14),%rax
    0.00 :   6998:   sub    0xc8(%r14),%rax
    0.00 :   699f:   add    0x68(%rsp),%ax
    0.00 :   69a4:   mov    %ax,0xb6(%r14)
    0.00 :   69ac:   movzbl 0x29(%r14),%eax
    0.00 :   69b1:   jmp    640e <receive_buf+0x2ce>
    0.00 :   69b6:   mov    $0x6,%ecx
    0.00 :   69bb:   mov    $0x14,%r15d
    0.00 :   69c1:   mov    $0x1,%r12d
    0.00 :   69c7:   jmp    687e <receive_buf+0x73e>
    0.00 :   69cc:   test   %rdx,%rdx
    0.00 :   69cf:   je     61ec <receive_buf+0xac>
    0.00 :   69d5:   movzwl 0x38(%r14),%eax
    0.00 :   69da:   cmp    $0x9,%ax
    0.00 :   69de:   ja     7267 <receive_buf+0x1127>
    0.00 :   69e4:   mov    $0x36c,%edx
    0.00 :   69e9:   bt     %rax,%rdx
    0.00 :   69ed:   setb   %cl
    0.00 :   69f0:   movzbl 0x81(%r14),%eax
    0.00 :   69f8:   mov    0x34(%r14),%edx
    0.00 :   69fc:   and    $0xfffffffc,%eax
    0.00 :   69ff:   mov    %edx,0x94(%r14)
    0.00 :   6a06:   or     %ecx,%eax
    0.00 :   6a08:   mov    %al,0x81(%r14)
    0.00 :   6a0f:   jmp    61ec <receive_buf+0xac>
    0.00 :   6a14:   mov    $0x11,%ecx
    0.00 :   6a19:   mov    $0x8,%r15d
    0.00 :   6a1f:   mov    $0x10000,%r12d
    0.00 :   6a25:   jmp    687e <receive_buf+0x73e>
    0.00 :   6a2a:   nopl   0x0(%rax,%rax,1)
    0.00 :   6a2f:   mov    (%rsp),%rax
    0.00 :   6a33:   addq   $0x1,0x180(%rax)
    0.00 :   6a3b:   cmpb   $0x0,0x38(%rbx)
    0.00 :   6a3f:   jne    6a7e <receive_buf+0x93e>
    0.00 :   6a41:   cmpb   $0x0,0x33(%rbx)
    0.00 :   6a45:   je     6a7e <receive_buf+0x93e>
    0.00 :   6a47:   mov    0x8(%rsp),%rax
    0.00 :   6a4c:   mov    0x28(%rax),%rax
    0.00 :   6a50:   test   %rax,%rax
    0.00 :   6a53:   je     748a <receive_buf+0x134a>
    0.00 :   6a59:   mov    %rax,%rdx
    0.00 :   6a5c:   mov    0x28(%rax),%rax
    0.00 :   6a60:   test   %rax,%rax
    0.00 :   6a63:   jne    6a59 <receive_buf+0x919>
    0.00 :   6a65:   mov    0x1e0(%rbp),%rax
    0.00 :   6a6c:   mov    %rax,0x28(%rdx)
    0.00 :   6a70:   mov    0x8(%rsp),%rax
    0.00 :   6a75:   mov    %rax,0x1e0(%rbp)
    0.00 :   6a7c:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   6a7e:   mov    0x8(%rsp),%rbx
    0.00 :   6a83:   mov    $0x80000000,%eax
    0.00 :   6a88:   add    %rax,%rbx
    0.00 :   6a8b:   mov    %rbx,%rax
    0.00 :   6a8e:   jb     7ba7 <receive_buf+0x1a67>
    0.00 :   6a94:   mov    $0xffffffff80000000,%rdx
    0.00 :   6a9b:   sub    0x0(%rip),%rdx        # 6aa2 <receive_buf+0x962>
    0.00 :   6aa2:   add    %rdx,%rax
    0.00 :   6aa5:   shr    $0xc,%rax
    0.00 :   6aa9:   shl    $0x6,%rax
    0.00 :   6aad:   add    0x0(%rip),%rax        # 6ab4 <receive_buf+0x974>
    0.00 :   6ab4:   mov    0x8(%rax),%rdx
    0.00 :   6ab8:   mov    %rax,%rdi
    0.00 :   6abb:   test   $0x1,%dl
    0.00 :   6abe:   jne    6d9a <receive_buf+0xc5a>
    0.00 :   6ac4:   nopl   0x0(%rax,%rax,1)
    0.00 :   6ac9:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6ace:   nopl   0x0(%rax,%rax,1)
    0.00 :   6ad3:   mov    (%rsp),%rax
    0.00 :   6ad7:   addq   $0x1,0x180(%rax)
    0.00 :   6adf:   addq   $0x1,0x10(%r12)
    0.00 :   6ae5:   mov    %r14,%rdi
    0.00 :   6ae8:   call   6aed <receive_buf+0x9ad>
    0.00 :   6aed:   add    $0xa0,%rsp
    0.00 :   6af4:   pop    %rbx
    0.00 :   6af5:   pop    %rbp
    0.00 :   6af6:   pop    %r12
    0.00 :   6af8:   pop    %r13
    0.00 :   6afa:   pop    %r14
    0.00 :   6afc:   pop    %r15
    0.00 :   6afe:   jmp    6b03 <receive_buf+0x9c3>
    0.00 :   6b03:   mov    %rbx,%r10
    0.00 :   6b06:   nopl   0x0(%rax,%rax,1)
    0.00 :   6b0b:   mov    (%rsp),%rax
    0.00 :   6b0f:   addq   $0x1,0x180(%rax)
    0.00 :   6b17:   mov    %r10,%rdi
    0.00 :   6b1a:   call   1ef0 <put_page>
    0.00 :   6b1f:   movzwl 0x52(%rsp),%eax
    0.00 :   6b24:   lea    -0x1(%rax),%r13d
    0.00 :   6b28:   mov    %r13w,0x52(%rsp)
    0.00 :   6b2e:   cmp    $0x1,%ax
    0.00 :   6b32:   jbe    6adf <receive_buf+0x99f>
    0.00 :   6b34:   lea    0x54(%rsp),%rdx
    0.00 :   6b39:   mov    $0x80000000,%ebx
    0.00 :   6b3e:   mov    %rdx,%r15
    0.00 :   6b41:   jmp    6ba1 <receive_buf+0xa61>
    0.00 :   6b43:   mov    0x54(%rsp),%edx
    0.00 :   6b47:   add    %rdx,0x8(%r12)
    0.00 :   6b4c:   add    %rbx,%rax
    0.00 :   6b4f:   jb     7aa6 <receive_buf+0x1966>
    0.00 :   6b55:   mov    $0xffffffff80000000,%rdx
    0.00 :   6b5c:   sub    0x0(%rip),%rdx        # 6b63 <receive_buf+0xa23>
    0.00 :   6b63:   add    %rdx,%rax
    0.00 :   6b66:   shr    $0xc,%rax
    0.00 :   6b6a:   shl    $0x6,%rax
    0.00 :   6b6e:   add    0x0(%rip),%rax        # 6b75 <receive_buf+0xa35>
    0.00 :   6b75:   mov    0x8(%rax),%rdx
    0.00 :   6b79:   mov    %rax,%rdi
    0.00 :   6b7c:   test   $0x1,%dl
    0.00 :   6b7f:   jne    6bfc <receive_buf+0xabc>
    0.00 :   6b81:   xchg   %ax,%ax
    0.00 :   6b83:   call   1ef0 <put_page>
    0.00 :   6b88:   movzwl 0x52(%rsp),%eax
    0.00 :   6b8d:   lea    -0x1(%rax),%r13d
    0.00 :   6b91:   mov    %r13w,0x52(%rsp)
    0.00 :   6b97:   cmp    $0x1,%ax
    0.00 :   6b9b:   jbe    6adf <receive_buf+0x99f>
    0.00 :   6ba1:   mov    0x0(%rbp),%rdi
    0.00 :   6ba5:   mov    %r15,%rsi
    0.00 :   6ba8:   call   6bad <receive_buf+0xa6d>
    0.00 :   6bad:   test   %rax,%rax
    0.00 :   6bb0:   jne    6b43 <receive_buf+0xa03>
    0.00 :   6bb2:   xchg   %ax,%ax
    0.00 :   6bb4:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6bb9:   mov    (%rsp),%rdx
    0.00 :   6bbd:   movzwl %r13w,%ecx
    0.00 :   6bc1:   mov    $0x0,%rsi
    0.00 :   6bc8:   mov    $0x0,%rdi
    0.00 :   6bcf:   call   6bd4 <receive_buf+0xa94>
    0.00 :   6bd4:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6bd9:   test   $0xfff,%eax
    0.00 :   6bde:   jne    6b83 <receive_buf+0xa43>
    0.00 :   6be0:   mov    (%rax),%rdx
    0.00 :   6be3:   test   $0x10000,%edx
    0.00 :   6be9:   je     6b83 <receive_buf+0xa43>
    0.00 :   6beb:   mov    0x48(%rax),%rdx
    0.00 :   6bef:   lea    -0x1(%rdx),%rdi
    0.00 :   6bf3:   and    $0x1,%edx
    0.00 :   6bf6:   cmove  %rax,%rdi
    0.00 :   6bfa:   jmp    6b83 <receive_buf+0xa43>
    0.00 :   6bfc:   lea    -0x1(%rdx),%rdi
    0.00 :   6c00:   jmp    6b83 <receive_buf+0xa43>
    0.00 :   6c02:   lea    -0x1(%rsi),%rbx
    0.00 :   6c06:   jmp    65f1 <receive_buf+0x4b1>
    0.00 :   6c0b:   nopl   0x0(%rax,%rax,1)
    0.00 :   6c10:   mov    (%rsp),%rax
    0.00 :   6c14:   addq   $0x1,0x180(%rax)
    0.00 :   6c1c:   addq   $0x1,0x10(%r12)
    0.00 :   6c22:   mov    0x30(%rsp),%rdi
    0.00 :   6c27:   add    $0xa0,%rsp
    0.00 :   6c2e:   pop    %rbx
    0.00 :   6c2f:   pop    %rbp
    0.00 :   6c30:   pop    %r12
    0.00 :   6c32:   pop    %r13
    0.00 :   6c34:   pop    %r14
    0.00 :   6c36:   pop    %r15
    0.00 :   6c38:   jmp    1ef0 <put_page>
    0.00 :   6c3d:   xor    %edx,%edx
    0.00 :   6c3f:   xor    %edi,%edi
    0.00 :   6c41:   mov    $0xffffffff,%ecx
    0.00 :   6c46:   mov    $0xa20,%esi
    0.00 :   6c4b:   mov    %r9d,0x18(%rsp)
    0.00 :   6c50:   call   6c55 <receive_buf+0xb15>
    0.00 :   6c55:   test   %rax,%rax
    0.00 :   6c58:   je     74c7 <receive_buf+0x1387>
    0.00 :   6c5e:   cmp    %r15,%r14
    0.00 :   6c61:   mov    0x18(%rsp),%r9d
    0.00 :   6c66:   je     71cd <receive_buf+0x108d>
    0.00 :   6c6c:   mov    %rax,(%r15)
    0.00 :   6c6f:   mov    0xd8(%rax),%edx
    0.00 :   6c75:   mov    %rax,%r15
    0.00 :   6c78:   xor    %esi,%esi
    0.00 :   6c7a:   add    %edx,0xd8(%r14)
    0.00 :   6c81:   mov    0x0(%rip),%rdx        # 6c88 <receive_buf+0xb48>
    0.00 :   6c88:   jmp    6625 <receive_buf+0x4e5>
    0.00 :   6c8d:   mov    %rbp,%r14
    0.00 :   6c90:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6c95:   mov    0x70(%r14),%eax
    0.00 :   6c99:   mov    0x74(%r14),%edx
    0.00 :   6c9d:   mov    %r15d,%ebx
    0.00 :   6ca0:   mov    %eax,%ecx
    0.00 :   6ca2:   sub    %edx,%ecx
    0.00 :   6ca4:   cmp    %r15d,%ecx
    0.00 :   6ca7:   jae    6823 <receive_buf+0x6e3>
    0.00 :   6cad:   cmp    %r15d,%eax
    0.00 :   6cb0:   jb     6238 <receive_buf+0xf8>
    0.00 :   6cb6:   sub    %eax,%edx
    0.00 :   6cb8:   mov    %r14,%rdi
    0.00 :   6cbb:   lea    (%rdx,%r15,1),%esi
    0.00 :   6cbf:   call   6cc4 <receive_buf+0xb84>
    0.00 :   6cc4:   test   %rax,%rax
    0.00 :   6cc7:   jne    6409 <receive_buf+0x2c9>
    0.00 :   6ccd:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6cd2:   mov    (%rsp),%rdx
    0.00 :   6cd6:   mov    $0x0,%rsi
    0.00 :   6cdd:   mov    $0x0,%rdi
    0.00 :   6ce4:   call   6ce9 <receive_buf+0xba9>
    0.00 :   6ce9:   jmp    6a2f <receive_buf+0x8ef>
    0.00 :   6cee:   mov    0x8(%rsp),%rax
    0.00 :   6cf3:   mov    (%rsp),%rdx
    0.00 :   6cf7:   movzwl %bx,%ecx
    0.00 :   6cfa:   mov    $0x0,%rsi
    0.00 :   6d01:   mov    $0x0,%rdi
    0.00 :   6d08:   movzwl 0xa(%rax),%r8d
    0.00 :   6d0d:   call   6d12 <receive_buf+0xbd2>
    0.00 :   6d12:   jmp    6ad3 <receive_buf+0x993>
    0.00 :   6d17:   mov    (%rsp),%rdx
    0.00 :   6d1b:   mov    $0x0,%rsi
    0.00 :   6d22:   mov    %rbx,0x8(%rsp)
    0.00 :   6d27:   mov    $0x0,%rdi
    0.00 :   6d2e:   call   6d33 <receive_buf+0xbf3>
    0.00 :   6d33:   mov    0x8(%rsp),%r10
    0.00 :   6d38:   jmp    6b0b <receive_buf+0x9cb>
    0.00 :   6d3d:   mov    (%rsi),%rax
    0.00 :   6d40:   lea    0x30(%r14),%rdi
    0.00 :   6d44:   and    $0xfffffffffffffff8,%rdi
    0.00 :   6d48:   mov    %rax,(%rdx)
    0.00 :   6d4b:   mov    -0x8(%rcx,%rsi,1),%rax
    0.00 :   6d50:   mov    %rax,-0x8(%rdx,%rcx,1)
    0.00 :   6d55:   mov    %rdx,%rax
    0.00 :   6d58:   sub    %rdi,%rax
    0.00 :   6d5b:   add    %eax,%ecx
    0.00 :   6d5d:   sub    %rax,%rsi
    0.00 :   6d60:   shr    $0x3,%ecx
    0.00 :   6d63:   rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   6d66:   jmp    635e <receive_buf+0x21e>
    0.00 :   6d6b:   test   $0xfff,%eax
    0.00 :   6d70:   jne    6c27 <receive_buf+0xae7>
    0.00 :   6d76:   mov    (%rax),%rdx
    0.00 :   6d79:   test   $0x10000,%edx
    0.00 :   6d7f:   je     6c27 <receive_buf+0xae7>
    0.00 :   6d85:   mov    0x48(%rax),%rax
    0.00 :   6d89:   test   $0x1,%al
    0.00 :   6d8b:   je     6c27 <receive_buf+0xae7>
    0.00 :   6d91:   lea    -0x1(%rax),%rdi
    0.00 :   6d95:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6d9a:   lea    -0x1(%rdx),%rdi
    0.00 :   6d9e:   jmp    6c27 <receive_buf+0xae7>
    0.00 :   6da3:   mov    0x10(%r14),%rax
    0.00 :   6da7:   mov    0x230(%rax),%rax
    0.00 :   6dae:   test   %rax,%rax
    0.00 :   6db1:   je     7461 <receive_buf+0x1321>
    0.00 :   6db7:   mov    0x28(%rax),%rax
    0.00 :   6dbb:   test   %rax,%rax
    0.00 :   6dbe:   je     7461 <receive_buf+0x1321>
    0.00 :   6dc4:   mov    %ecx,0x8(%rsp)
    0.00 :   6dc8:   mov    %r14,%rdi
    0.00 :   6dcb:   call   6dd0 <receive_buf+0xc90>
    0.00 :   6dd0:   mov    0x8(%rsp),%ecx
    0.00 :   6dd4:   test   %ax,%ax
    0.00 :   6dd7:   je     7449 <receive_buf+0x1309>
    0.00 :   6ddd:   movzbl 0x29(%r14),%edx
    0.00 :   6de2:   and    $0x7f,%dl
    0.00 :   6de5:   cmp    $0x3,%edx
    0.00 :   6de8:   je     7390 <receive_buf+0x1250>
    0.00 :   6dee:   cmp    $0x4,%edx
    0.00 :   6df1:   je     739a <receive_buf+0x125a>
    0.00 :   6df7:   cmp    $0x1,%edx
    0.00 :   6dfa:   jne    6238 <receive_buf+0xf8>
    0.00 :   6e00:   cmp    $0x8,%ax
    0.00 :   6e04:   jne    6238 <receive_buf+0xf8>
    0.00 :   6e0a:   mov    %ax,0xb4(%r14)
    0.00 :   6e12:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   6e17:   mov    %edx,0x8(%rsp)
    0.00 :   6e1b:   cmp    %eax,%ecx
    0.00 :   6e1d:   jb     6238 <receive_buf+0xf8>
    0.00 :   6e23:   sub    %ecx,%esi
    0.00 :   6e25:   mov    %r14,%rdi
    0.00 :   6e28:   add    %eax,%esi
    0.00 :   6e2a:   call   6e2f <receive_buf+0xcef>
    0.00 :   6e2f:   mov    0x8(%rsp),%edx
    0.00 :   6e33:   test   %rax,%rax
    0.00 :   6e36:   jne    63ca <receive_buf+0x28a>
    0.00 :   6e3c:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6e41:   cmp    %ebx,%eax
    0.00 :   6e43:   jb     6238 <receive_buf+0xf8>
    0.00 :   6e49:   sub    %eax,%esi
    0.00 :   6e4b:   mov    %r14,%rdi
    0.00 :   6e4e:   add    %ebx,%esi
    0.00 :   6e50:   call   6e55 <receive_buf+0xd15>
    0.00 :   6e55:   test   %rax,%rax
    0.00 :   6e58:   jne    6409 <receive_buf+0x2c9>
    0.00 :   6e5e:   jmp    6238 <receive_buf+0xf8>
    0.00 :   6e63:   lea    -0x1(%rcx),%rdi
    0.00 :   6e67:   mov    %rdi,0x30(%rsp)
    0.00 :   6e6c:   jmp    62d4 <receive_buf+0x194>
    0.00 :   6e71:   mov    0x8(%rsp),%rax
    0.00 :   6e76:   addq   $0x1,0x10(%r12)
    0.00 :   6e7c:   mov    0x28(%rax),%rax
    0.00 :   6e80:   test   %rax,%rax
    0.00 :   6e83:   je     748a <receive_buf+0x134a>
    0.00 :   6e89:   mov    %rax,%rdx
    0.00 :   6e8c:   mov    0x28(%rax),%rax
    0.00 :   6e90:   test   %rax,%rax
    0.00 :   6e93:   jne    6e89 <receive_buf+0xd49>
    0.00 :   6e95:   jmp    6a65 <receive_buf+0x925>
    0.00 :   6e9a:   nopl   0x0(%rax,%rax,1)
    0.00 :   6e9f:   mov    (%rsp),%rax
    0.00 :   6ea3:   addq   $0x1,0x180(%rax)
    0.00 :   6eab:   xor    %r14d,%r14d
    0.00 :   6eae:   jmp    6b17 <receive_buf+0x9d7>
    0.00 :   6eb3:   lea    -0x1(%rcx),%r10
    0.00 :   6eb7:   jmp    64ca <receive_buf+0x38a>
    0.00 :   6ebc:   mov    %edx,0x28(%rsp)
    0.00 :   6ec0:   mov    %r11d,0x20(%rsp)
    0.00 :   6ec5:   mov    %r8,0x48(%rsp)
    0.00 :   6eca:   mov    %r10,0x40(%rsp)
    0.00 :   6ecf:   call   6ed4 <receive_buf+0xd94>
    0.00 :   6ed4:   mov    0x198(%rbp),%rax
    0.00 :   6edb:   mov    0x20(%rsp),%r11d
    0.00 :   6ee0:   mov    0x28(%rsp),%edx
    0.00 :   6ee4:   test   %rax,%rax
    0.00 :   6ee7:   mov    %rax,0x18(%rsp)
    0.00 :   6eec:   je     74ab <receive_buf+0x136b>
    0.00 :   6ef2:   lea    0x68(%rsp),%r13
    0.00 :   6ef7:   xor    %eax,%eax
    0.00 :   6ef9:   mov    $0x7,%ecx
    0.00 :   6efe:   mov    0x38(%rsp),%esi
    0.00 :   6f02:   movq   $0x0,0x60(%rsp)
    0.00 :   6f0b:   mov    %r13,%rdi
    0.00 :   6f0e:   rep stos %rax,%es:(%rdi)
    0.00 :   6f11:   mov    0x8(%rsp),%rax
    0.00 :   6f16:   cmpb   $0x0,0x1(%rax,%rsi,1)
    0.00 :   6f1b:   jne    7010 <receive_buf+0xed0>
    0.00 :   6f21:   mov    0x48(%rsp),%r8
    0.00 :   6f26:   movzbl 0x4a(%rbx),%eax
    0.00 :   6f2a:   mov    0x40(%rsp),%r10
    0.00 :   6f2f:   cmp    $0xff,%r8d
    0.00 :   6f36:   ja     6f42 <receive_buf+0xe02>
    0.00 :   6f38:   cmpb   $0x0,0x32(%rbx)
    0.00 :   6f3c:   jne    78db <receive_buf+0x179b>
    0.00 :   6f42:   movslq %r8d,%r8
    0.00 :   6f45:   mov    0x10(%rsp),%eax
    0.00 :   6f49:   mov    0x8(%rsp),%rdi
    0.00 :   6f4e:   movl   $0x0,0x9c(%rsp)
    0.00 :   6f59:   mov    %eax,0x98(%rsp)
    0.00 :   6f60:   lea    0x4c0(%rbp),%rax
    0.00 :   6f67:   mov    %rax,0x88(%rsp)
    0.00 :   6f6f:   movzbl 0x4a(%rbx),%eax
    0.00 :   6f73:   lea    0x40(%rdi,%rax,1),%rax
    0.00 :   6f78:   add    %rax,%r8
    0.00 :   6f7b:   mov    %rax,0x80(%rsp)
    0.00 :   6f83:   add    %r8,%r10
    0.00 :   6f86:   mov    %r8,0x68(%rsp)
    0.00 :   6f8b:   mov    %r10,0x70(%rsp)
    0.00 :   6f90:   mov    %r8,0x78(%rsp)
    0.00 :   6f95:   nopl   0x0(%rax,%rax,1)
    0.00 :   6f9a:   mov    0x18(%rsp),%rax
    0.00 :   6f9f:   mov    %r13,%rdi
    0.00 :   6fa2:   mov    %r8,0x28(%rsp)
    0.00 :   6fa7:   mov    %r11d,0x20(%rsp)
    0.00 :   6fac:   mov    0x30(%rax),%rdx
    0.00 :   6fb0:   lea    0x48(%rax),%rsi
    0.00 :   6fb4:   call   6fb9 <receive_buf+0xe79>
    0.00 :   6fb9:   mov    0x28(%rsp),%r8
    0.00 :   6fbe:   mov    0x20(%rsp),%r11d
    0.00 :   6fc3:   mov    %eax,%ecx
    0.00 :   6fc5:   nopl   0x0(%rax,%rax,1)
    0.00 :   6fca:   addq   $0x1,0x18(%r12)
    0.00 :   6fd0:   cmp    $0x2,%ecx
    0.00 :   6fd3:   je     7494 <receive_buf+0x1354>
    0.00 :   6fd9:   jbe    7203 <receive_buf+0x10c3>
    0.00 :   6fdf:   cmp    $0x3,%ecx
    0.00 :   6fe2:   je     750d <receive_buf+0x13cd>
    0.00 :   6fe8:   cmp    $0x4,%ecx
    0.00 :   6feb:   jne    77e2 <receive_buf+0x16a2>
    0.00 :   6ff1:   addq   $0x1,0x28(%r12)
    0.00 :   6ff7:   mov    0x18(%rsp),%rdx
    0.00 :   6ffc:   mov    %r13,%rsi
    0.00 :   6fff:   mov    (%rsp),%rdi
    0.00 :   7003:   call   7008 <receive_buf+0xec8>
    0.00 :   7008:   test   %eax,%eax
    0.00 :   700a:   je     79bf <receive_buf+0x187f>
    0.00 :   7010:   call   7015 <receive_buf+0xed5>
    0.00 :   7015:   addq   $0x1,0x30(%r12)
    0.00 :   701b:   jmp    6c1c <receive_buf+0xadc>
    0.00 :   7020:   mov    %r10,0x30(%rsp)
    0.00 :   7025:   mov    %edi,0x28(%rsp)
    0.00 :   7029:   mov    %r11d,0x18(%rsp)
    0.00 :   702e:   mov    %rsi,0x40(%rsp)
    0.00 :   7033:   mov    %rdx,0x48(%rsp)
    0.00 :   7038:   mov    %esi,0x20(%rsp)
    0.00 :   703c:   mov    %r9d,0x38(%rsp)
    0.00 :   7041:   call   7046 <receive_buf+0xf06>
    0.00 :   7046:   mov    0x198(%rbp),%rax
    0.00 :   704d:   mov    0x18(%rsp),%r11d
    0.00 :   7052:   mov    0x20(%rsp),%ecx
    0.00 :   7056:   mov    0x28(%rsp),%edi
    0.00 :   705a:   test   %rax,%rax
    0.00 :   705d:   mov    %rax,0x10(%rsp)
    0.00 :   7062:   mov    0x30(%rsp),%r10
    0.00 :   7067:   je     74cf <receive_buf+0x138f>
    0.00 :   706d:   lea    0x68(%rsp),%r13
    0.00 :   7072:   xor    %eax,%eax
    0.00 :   7074:   mov    $0x7,%ecx
    0.00 :   7079:   movq   $0x0,0x60(%rsp)
    0.00 :   7082:   mov    %r13,%rdi
    0.00 :   7085:   rep stos %rax,%es:(%rdi)
    0.00 :   7088:   mov    0x8(%rsp),%rax
    0.00 :   708d:   cmpb   $0x0,0x1(%rax)
    0.00 :   7091:   jne    71b3 <receive_buf+0x1073>
    0.00 :   7097:   mov    0x40(%rsp),%rsi
    0.00 :   709c:   mov    0x38(%rsp),%r9d
    0.00 :   70a1:   mov    $0x1000,%ecx
    0.00 :   70a6:   test   %esi,%esi
    0.00 :   70a8:   cmove  %r11d,%ecx
    0.00 :   70ac:   cmp    $0x1,%r9w
    0.00 :   70b1:   ja     7793 <receive_buf+0x1653>
    0.00 :   70b7:   cmpb   $0x0,0x32(%rbx)
    0.00 :   70bb:   mov    0x48(%rsp),%rdx
    0.00 :   70c0:   je     70ce <receive_buf+0xf8e>
    0.00 :   70c2:   cmp    $0xff,%esi
    0.00 :   70c8:   jbe    7793 <receive_buf+0x1653>
    0.00 :   70ce:   mov    %r10,0x18(%rsp)
    0.00 :   70d3:   movslq %edx,%rdx
    0.00 :   70d6:   movzbl 0x4a(%rbx),%edi
    0.00 :   70da:   mov    0x18(%rsp),%rax
    0.00 :   70df:   movl   $0x0,0x9c(%rsp)
    0.00 :   70ea:   sub    0x0(%rip),%rax        # 70f1 <receive_buf+0xfb1>
    0.00 :   70f1:   sar    $0x6,%rax
    0.00 :   70f5:   sub    %edi,%ecx
    0.00 :   70f7:   shl    $0xc,%rax
    0.00 :   70fb:   add    0x0(%rip),%rax        # 7102 <receive_buf+0xfc2>
    0.00 :   7102:   mov    %ecx,0x98(%rsp)
    0.00 :   7109:   lea    0x4c0(%rbp),%rcx
    0.00 :   7110:   mov    %rax,%rsi
    0.00 :   7113:   mov    %edi,%eax
    0.00 :   7115:   mov    %rcx,0x88(%rsp)
    0.00 :   711d:   mov    0x54(%rsp),%ecx
    0.00 :   7121:   or     $0xffffffffffffff00,%rax
    0.00 :   7127:   add    %rdx,%rax
    0.00 :   712a:   sub    %edi,%ecx
    0.00 :   712c:   add    %rsi,%rax
    0.00 :   712f:   lea    0x100(%rax),%rdx
    0.00 :   7136:   mov    %rax,0x80(%rsp)
    0.00 :   713e:   movslq %ecx,%rax
    0.00 :   7141:   add    %rdx,%rax
    0.00 :   7144:   mov    %rdx,0x68(%rsp)
    0.00 :   7149:   mov    %rax,0x70(%rsp)
    0.00 :   714e:   mov    %rdx,0x78(%rsp)
    0.00 :   7153:   nopl   0x0(%rax,%rax,1)
    0.00 :   7158:   mov    0x10(%rsp),%rax
    0.00 :   715d:   mov    %r13,%rdi
    0.00 :   7160:   mov    %r10,0x28(%rsp)
    0.00 :   7165:   mov    %r11d,0x20(%rsp)
    0.00 :   716a:   mov    0x30(%rax),%rdx
    0.00 :   716e:   lea    0x48(%rax),%rsi
    0.00 :   7172:   call   7177 <receive_buf+0x1037>
    0.00 :   7177:   mov    0x28(%rsp),%r10
    0.00 :   717c:   mov    0x20(%rsp),%r11d
    0.00 :   7181:   mov    %eax,%r15d
    0.00 :   7184:   nopl   0x0(%rax,%rax,1)
    0.00 :   7189:   addq   $0x1,0x18(%r12)
    0.00 :   718f:   cmp    $0x2,%r15d
    0.00 :   7193:   je     780e <receive_buf+0x16ce>
    0.00 :   7199:   ja     726e <receive_buf+0x112e>
    0.00 :   719f:   test   %r15d,%r15d
    0.00 :   71a2:   je     7701 <receive_buf+0x15c1>
    0.00 :   71a8:   cmp    %r10,0x18(%rsp)
    0.00 :   71ad:   jne    79cd <receive_buf+0x188d>
    0.00 :   71b3:   mov    %r10,0x8(%rsp)
    0.00 :   71b8:   call   71bd <receive_buf+0x107d>
    0.00 :   71bd:   addq   $0x1,0x30(%r12)
    0.00 :   71c3:   mov    0x8(%rsp),%r10
    0.00 :   71c8:   jmp    6eab <receive_buf+0xd6b>
    0.00 :   71cd:   mov    0xc0(%r14),%edx
    0.00 :   71d4:   mov    0xc8(%r14),%rcx
    0.00 :   71db:   mov    %rax,0x8(%rcx,%rdx,1)
    0.00 :   71e0:   jmp    6c6f <receive_buf+0xb2f>
    0.00 :   71e5:   cmp    $0x3,%ecx
    0.00 :   71e8:   je     7a4b <receive_buf+0x190b>
    0.00 :   71ee:   addq   $0x1,0x18(%r12)
    0.00 :   71f4:   cmp    $0x2,%ecx
    0.00 :   71f7:   je     7494 <receive_buf+0x1354>
    0.00 :   71fd:   ja     6fe8 <receive_buf+0xea8>
    0.00 :   7203:   test   %ecx,%ecx
    0.00 :   7205:   jne    7010 <receive_buf+0xed0>
    0.00 :   720b:   xor    %ecx,%ecx
    0.00 :   720d:   xchg   %ax,%ax
    0.00 :   720f:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7214:   mov    0x10(%rbx),%rsi
    0.00 :   7218:   mov    %gs:0x0(%rip),%eax        # 721f <receive_buf+0x10df>
    0.00 :   721f:   mov    %eax,%eax
    0.00 :   7221:   bt     %rax,0x0(%rip)        # 7229 <receive_buf+0x10e9>
    0.00 :   7229:   jae    7010 <receive_buf+0xed0>
    0.00 :   722f:   incl   %gs:0x0(%rip)        # 7236 <receive_buf+0x10f6>
    0.00 :   7236:   mov    0x0(%rip),%rax        # 723d <receive_buf+0x10fd>
    0.00 :   723d:   test   %rax,%rax
    0.00 :   7240:   je     7250 <receive_buf+0x1110>
    0.00 :   7242:   mov    0x8(%rax),%rdi
    0.00 :   7246:   mov    0x18(%rsp),%rdx
    0.00 :   724b:   call   7250 <receive_buf+0x1110>
    0.00 :   7250:   decl   %gs:0x0(%rip)        # 7257 <receive_buf+0x1117>
    0.00 :   7257:   jne    7010 <receive_buf+0xed0>
    0.00 :   725d:   call   7262 <receive_buf+0x1122>
    0.00 :   7262:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7267:   xor    %ecx,%ecx
    0.00 :   7269:   jmp    69f0 <receive_buf+0x8b0>
    0.00 :   726e:   cmp    $0x3,%r15d
    0.00 :   7272:   je     75eb <receive_buf+0x14ab>
    0.00 :   7278:   cmp    $0x4,%r15d
    0.00 :   727c:   jne    76e6 <receive_buf+0x15a6>
    0.00 :   7282:   addq   $0x1,0x28(%r12)
    0.00 :   7288:   mov    0x10(%rsp),%rdx
    0.00 :   728d:   mov    %r13,%rsi
    0.00 :   7290:   mov    (%rsp),%rdi
    0.00 :   7294:   mov    %r10,0x8(%rsp)
    0.00 :   7299:   call   729e <receive_buf+0x115e>
    0.00 :   729e:   mov    0x8(%rsp),%r10
    0.00 :   72a3:   test   %eax,%eax
    0.00 :   72a5:   je     79ab <receive_buf+0x186b>
    0.00 :   72ab:   cmp    %r10,0x18(%rsp)
    0.00 :   72b0:   je     71b3 <receive_buf+0x1073>
    0.00 :   72b6:   mov    0x18(%rsp),%rdi
    0.00 :   72bb:   call   1ef0 <put_page>
    0.00 :   72c0:   mov    0x8(%rsp),%r10
    0.00 :   72c5:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   72ca:   mov    %edx,%ecx
    0.00 :   72cc:   mov    (%rsp),%rdx
    0.00 :   72d0:   mov    $0x5ee,%r8d
    0.00 :   72d6:   mov    $0x0,%rsi
    0.00 :   72dd:   mov    $0x0,%rdi
    0.00 :   72e4:   call   72e9 <receive_buf+0x11a9>
    0.00 :   72e9:   jmp    6c10 <receive_buf+0xad0>
    0.00 :   72ee:   mov    (%rsp),%rdx
    0.00 :   72f2:   mov    %r13d,%ecx
    0.00 :   72f5:   mov    $0x0,%rsi
    0.00 :   72fc:   mov    $0x0,%rdi
    0.00 :   7303:   mov    %r10,0x8(%rsp)
    0.00 :   7308:   call   730d <receive_buf+0x11cd>
    0.00 :   730d:   mov    0x8(%rsp),%r10
    0.00 :   7312:   jmp    6e9f <receive_buf+0xd5f>
    0.00 :   7317:   mov    %r8,0x48(%rsp)
    0.00 :   731c:   mov    %r11d,0x40(%rsp)
    0.00 :   7321:   call   7326 <receive_buf+0x11e6>
    0.00 :   7326:   mov    %r13,%rdi
    0.00 :   7329:   mov    %rax,%r15
    0.00 :   732c:   mov    0x18(%rsp),%rax
    0.00 :   7331:   mov    0x30(%rax),%rdx
    0.00 :   7335:   lea    0x48(%rax),%rsi
    0.00 :   7339:   call   733e <receive_buf+0x11fe>
    0.00 :   733e:   mov    %eax,0x28(%rsp)
    0.00 :   7342:   mov    0x18(%rsp),%rax
    0.00 :   7347:   mov    0x20(%rax),%rdx
    0.00 :   734b:   mov    %rdx,0x20(%rsp)
    0.00 :   7350:   call   7355 <receive_buf+0x1215>
    0.00 :   7355:   mov    0x20(%rsp),%rdx
    0.00 :   735a:   mov    %eax,%eax
    0.00 :   735c:   add    0x0(,%rax,8),%rdx
    0.00 :   7364:   incq   (%rdx)
    0.00 :   7367:   mov    %rdx,0x20(%rsp)
    0.00 :   736c:   call   7371 <receive_buf+0x1231>
    0.00 :   7371:   mov    0x20(%rsp),%rdx
    0.00 :   7376:   sub    %r15,%rax
    0.00 :   7379:   add    %rax,0x8(%rdx)
    0.00 :   737d:   mov    0x28(%rsp),%ecx
    0.00 :   7381:   mov    0x40(%rsp),%r11d
    0.00 :   7386:   mov    0x48(%rsp),%r8
    0.00 :   738b:   jmp    6fc5 <receive_buf+0xe85>
    0.00 :   7390:   cmp    $0x8,%ax
    0.00 :   7394:   je     6e0a <receive_buf+0xcca>
    0.00 :   739a:   cmp    $0xdd86,%ax
    0.00 :   739e:   je     6e0a <receive_buf+0xcca>
    0.00 :   73a4:   jmp    6238 <receive_buf+0xf8>
    0.00 :   73a9:   cmp    $0x3,%r15d
    0.00 :   73ad:   je     79e8 <receive_buf+0x18a8>
    0.00 :   73b3:   addq   $0x1,0x18(%r12)
    0.00 :   73b9:   cmp    $0x2,%r15d
    0.00 :   73bd:   je     780e <receive_buf+0x16ce>
    0.00 :   73c3:   jbe    719f <receive_buf+0x105f>
    0.00 :   73c9:   jmp    7278 <receive_buf+0x1138>
    0.00 :   73ce:   mov    %r10,0x38(%rsp)
    0.00 :   73d3:   mov    %r11d,0x30(%rsp)
    0.00 :   73d8:   call   73dd <receive_buf+0x129d>
    0.00 :   73dd:   mov    %r13,%rdi
    0.00 :   73e0:   mov    %rax,0x28(%rsp)
    0.00 :   73e5:   mov    0x10(%rsp),%rax
    0.00 :   73ea:   mov    0x30(%rax),%rdx
    0.00 :   73ee:   lea    0x48(%rax),%rsi
    0.00 :   73f2:   call   73f7 <receive_buf+0x12b7>
    0.00 :   73f7:   mov    %eax,%r15d
    0.00 :   73fa:   mov    0x10(%rsp),%rax
    0.00 :   73ff:   mov    0x20(%rax),%rdx
    0.00 :   7403:   mov    %rdx,0x20(%rsp)
    0.00 :   7408:   call   740d <receive_buf+0x12cd>
    0.00 :   740d:   mov    0x20(%rsp),%rdx
    0.00 :   7412:   mov    %eax,%eax
    0.00 :   7414:   add    0x0(,%rax,8),%rdx
    0.00 :   741c:   incq   (%rdx)
    0.00 :   741f:   mov    %rdx,0x20(%rsp)
    0.00 :   7424:   call   7429 <receive_buf+0x12e9>
    0.00 :   7429:   mov    0x28(%rsp),%r8
    0.00 :   742e:   mov    0x20(%rsp),%rdx
    0.00 :   7433:   sub    %r8,%rax
    0.00 :   7436:   add    %rax,0x8(%rdx)
    0.00 :   743a:   mov    0x30(%rsp),%r11d
    0.00 :   743f:   mov    0x38(%rsp),%r10
    0.00 :   7444:   jmp    7184 <receive_buf+0x1044>
    0.00 :   7449:   cmpw   $0x0,0xb4(%r14)
    0.00 :   7452:   jne    68e4 <receive_buf+0x7a4>
    0.00 :   7458:   movzbl 0x29(%r14),%esi
    0.00 :   745d:   and    $0x7f,%sil
    0.00 :   7461:   cmp    $0x3,%esi
    0.00 :   7464:   je     7478 <receive_buf+0x1338>
    0.00 :   7466:   cmp    $0x4,%esi
    0.00 :   7469:   je     78c9 <receive_buf+0x1789>
    0.00 :   746f:   cmp    $0x1,%esi
    0.00 :   7472:   jne    68e4 <receive_buf+0x7a4>
    0.00 :   7478:   mov    $0x8,%edi
    0.00 :   747d:   mov    %di,0xb4(%r14)
    0.00 :   7485:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   748a:   mov    0x8(%rsp),%rdx
    0.00 :   748f:   jmp    6a65 <receive_buf+0x925>
    0.00 :   7494:   mov    0x68(%rsp),%r13
    0.00 :   7499:   mov    0x70(%rsp),%edx
    0.00 :   749d:   mov    %r8d,%r15d
    0.00 :   74a0:   sub    %r13d,%r15d
    0.00 :   74a3:   sub    %r13d,%edx
    0.00 :   74a6:   sub    0x78(%rsp),%r13d
    0.00 :   74ab:   mov    %edx,0x28(%rsp)
    0.00 :   74af:   mov    %r11d,0x20(%rsp)
    0.00 :   74b4:   call   74b9 <receive_buf+0x1379>
    0.00 :   74b9:   mov    0x28(%rsp),%edx
    0.00 :   74bd:   mov    0x20(%rsp),%r11d
    0.00 :   74c2:   jmp    6306 <receive_buf+0x1c6>
    0.00 :   74c7:   mov    %rbx,%r10
    0.00 :   74ca:   jmp    6b17 <receive_buf+0x9d7>
    0.00 :   74cf:   mov    %r10,0x30(%rsp)
    0.00 :   74d4:   mov    %edi,0x28(%rsp)
    0.00 :   74d8:   mov    %ecx,0x20(%rsp)
    0.00 :   74dc:   mov    %r11d,0x18(%rsp)
    0.00 :   74e1:   call   74e6 <receive_buf+0x13a6>
    0.00 :   74e6:   xor    %eax,%eax
    0.00 :   74e8:   mov    0x54(%rsp),%r13d
    0.00 :   74ed:   mov    0x28(%rsp),%edi
    0.00 :   74f1:   cmpq   $0x0,0x10(%rsp)
    0.00 :   74f7:   mov    0x30(%rsp),%r10
    0.00 :   74fc:   mov    0x20(%rsp),%ecx
    0.00 :   7500:   mov    0x18(%rsp),%r11d
    0.00 :   7505:   sete   %al
    0.00 :   7508:   jmp    651d <receive_buf+0x3dd>
    0.00 :   750d:   mov    0x88(%rsp),%rax
    0.00 :   7515:   addq   $0x1,0x20(%r12)
    0.00 :   751b:   cmpl   $0x3,0x10(%rax)
    0.00 :   751f:   je     7a8b <receive_buf+0x194b>
    0.00 :   7525:   mov    0x68(%rsp),%rsi
    0.00 :   752a:   mov    0x80(%rsp),%rbp
    0.00 :   7532:   xor    %ecx,%ecx
    0.00 :   7534:   mov    %rsi,%rdx
    0.00 :   7537:   mov    %rsi,%rax
    0.00 :   753a:   sub    0x78(%rsp),%rax
    0.00 :   753f:   sub    %rbp,%rdx
    0.00 :   7542:   test   %eax,%eax
    0.00 :   7544:   cmovs  %ecx,%eax
    0.00 :   7547:   mov    %edx,%ecx
    0.00 :   7549:   sub    %eax,%ecx
    0.00 :   754b:   cmp    $0x27,%ecx
    0.00 :   754e:   jbe    7010 <receive_buf+0xed0>
    0.00 :   7554:   mov    0x98(%rsp),%ecx
    0.00 :   755b:   lea    -0x140(%rbp,%rcx,1),%rcx
    0.00 :   7563:   cmp    0x70(%rsp),%rcx
    0.00 :   7568:   jb     7b7e <receive_buf+0x1a3e>
    0.00 :   756e:   mov    %rsi,0x0(%rbp)
    0.00 :   7572:   mov    0x70(%rsp),%rcx
    0.00 :   7577:   sub    $0x28,%edx
    0.00 :   757a:   mov    %dx,0xa(%rbp)
    0.00 :   757e:   sub    %rsi,%rcx
    0.00 :   7581:   mov    %eax,0xc(%rbp)
    0.00 :   7584:   mov    %cx,0x8(%rbp)
    0.00 :   7588:   mov    0x98(%rsp),%eax
    0.00 :   758f:   mov    %eax,0x20(%rbp)
    0.00 :   7592:   mov    0x9c(%rsp),%eax
    0.00 :   7599:   mov    %eax,0x24(%rbp)
    0.00 :   759c:   mov    0x88(%rsp),%rax
    0.00 :   75a4:   mov    0x10(%rax),%rax
    0.00 :   75a8:   mov    %rax,0x10(%rbp)
    0.00 :   75ac:   mov    %rbp,0x60(%rsp)
    0.00 :   75b1:   test   %rbp,%rbp
    0.00 :   75b4:   je     7010 <receive_buf+0xed0>
    0.00 :   75ba:   mov    (%rsp),%rdi
    0.00 :   75be:   xor    %ecx,%ecx
    0.00 :   75c0:   lea    0x60(%rsp),%rdx
    0.00 :   75c5:   mov    $0x1,%esi
    0.00 :   75ca:   call   740 <virtnet_xdp_xmit>
    0.00 :   75cf:   test   %eax,%eax
    0.00 :   75d1:   je     7b2c <receive_buf+0x19ec>
    0.00 :   75d7:   js     7b66 <receive_buf+0x1a26>
    0.00 :   75dd:   orl    $0x1,(%r14)
    0.00 :   75e1:   call   75e6 <receive_buf+0x14a6>
    0.00 :   75e6:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   75eb:   mov    0x88(%rsp),%rax
    0.00 :   75f3:   addq   $0x1,0x20(%r12)
    0.00 :   75f9:   cmpl   $0x3,0x10(%rax)
    0.00 :   75fd:   je     7a31 <receive_buf+0x18f1>
    0.00 :   7603:   mov    0x68(%rsp),%rsi
    0.00 :   7608:   mov    0x80(%rsp),%r13
    0.00 :   7610:   xor    %ecx,%ecx
    0.00 :   7612:   mov    %rsi,%rdx
    0.00 :   7615:   mov    %rsi,%rax
    0.00 :   7618:   sub    0x78(%rsp),%rax
    0.00 :   761d:   sub    %r13,%rdx
    0.00 :   7620:   test   %eax,%eax
    0.00 :   7622:   cmovs  %ecx,%eax
    0.00 :   7625:   mov    %edx,%ecx
    0.00 :   7627:   sub    %eax,%ecx
    0.00 :   7629:   cmp    $0x27,%ecx
    0.00 :   762c:   jbe    7aeb <receive_buf+0x19ab>
    0.00 :   7632:   mov    0x98(%rsp),%ecx
    0.00 :   7639:   lea    -0x140(%r13,%rcx,1),%rcx
    0.00 :   7641:   cmp    0x70(%rsp),%rcx
    0.00 :   7646:   jb     7ac9 <receive_buf+0x1989>
    0.00 :   764c:   mov    %rsi,0x0(%r13)
    0.00 :   7650:   mov    0x70(%rsp),%rcx
    0.00 :   7655:   sub    $0x28,%edx
    0.00 :   7658:   mov    %dx,0xa(%r13)
    0.00 :   765d:   sub    %rsi,%rcx
    0.00 :   7660:   mov    %eax,0xc(%r13)
    0.00 :   7664:   mov    %cx,0x8(%r13)
    0.00 :   7669:   mov    0x98(%rsp),%eax
    0.00 :   7670:   mov    %eax,0x20(%r13)
    0.00 :   7674:   mov    0x9c(%rsp),%eax
    0.00 :   767b:   mov    %eax,0x24(%r13)
    0.00 :   767f:   mov    0x88(%rsp),%rax
    0.00 :   7687:   mov    0x10(%rax),%rax
    0.00 :   768b:   mov    %rax,0x10(%r13)
    0.00 :   768f:   mov    %r13,0x60(%rsp)
    0.00 :   7694:   test   %r13,%r13
    0.00 :   7697:   je     7af3 <receive_buf+0x19b3>
    0.00 :   769d:   mov    (%rsp),%rdi
    0.00 :   76a1:   xor    %ecx,%ecx
    0.00 :   76a3:   lea    0x60(%rsp),%rdx
    0.00 :   76a8:   mov    $0x1,%esi
    0.00 :   76ad:   mov    %r10,0x8(%rsp)
    0.00 :   76b2:   call   740 <virtnet_xdp_xmit>
    0.00 :   76b7:   mov    0x8(%rsp),%r10
    0.00 :   76bc:   test   %eax,%eax
    0.00 :   76be:   je     7b17 <receive_buf+0x19d7>
    0.00 :   76c4:   js     7b39 <receive_buf+0x19f9>
    0.00 :   76ca:   orl    $0x1,(%r14)
    0.00 :   76ce:   cmp    %r10,0x18(%rsp)
    0.00 :   76d3:   je     75e1 <receive_buf+0x14a1>
    0.00 :   76d9:   mov    %r10,%rdi
    0.00 :   76dc:   call   1ef0 <put_page>
    0.00 :   76e1:   jmp    75e1 <receive_buf+0x14a1>
    0.00 :   76e6:   mov    0x10(%rbx),%rdi
    0.00 :   76ea:   mov    0x10(%rsp),%rsi
    0.00 :   76ef:   mov    %r15d,%edx
    0.00 :   76f2:   mov    %r10,0x8(%rsp)
    0.00 :   76f7:   call   76fc <receive_buf+0x15bc>
    0.00 :   76fc:   mov    0x8(%rsp),%r10
    0.00 :   7701:   mov    0x10(%rbx),%rsi
    0.00 :   7705:   xchg   %ax,%ax
    0.00 :   7707:   jmp    71a8 <receive_buf+0x1068>
    0.00 :   770c:   mov    %gs:0x0(%rip),%eax        # 7713 <receive_buf+0x15d3>
    0.00 :   7713:   mov    %eax,%eax
    0.00 :   7715:   bt     %rax,0x0(%rip)        # 771d <receive_buf+0x15dd>
    0.00 :   771d:   jae    71a8 <receive_buf+0x1068>
    0.00 :   7723:   incl   %gs:0x0(%rip)        # 772a <receive_buf+0x15ea>
    0.00 :   772a:   mov    0x0(%rip),%rax        # 7731 <receive_buf+0x15f1>
    0.00 :   7731:   test   %rax,%rax
    0.00 :   7734:   je     7751 <receive_buf+0x1611>
    0.00 :   7736:   mov    0x8(%rax),%rdi
    0.00 :   773a:   mov    0x10(%rsp),%rdx
    0.00 :   773f:   mov    %r15d,%ecx
    0.00 :   7742:   mov    %r10,0x8(%rsp)
    0.00 :   7747:   call   774c <receive_buf+0x160c>
    0.00 :   774c:   mov    0x8(%rsp),%r10
    0.00 :   7751:   decl   %gs:0x0(%rip)        # 7758 <receive_buf+0x1618>
    0.00 :   7758:   jne    71a8 <receive_buf+0x1068>
    0.00 :   775e:   call   7763 <receive_buf+0x1623>
    0.00 :   7763:   jmp    71a8 <receive_buf+0x1068>
    0.00 :   7768:   mov    %ecx,0x8(%rsp)
    0.00 :   776c:   cmp    %ebx,%eax
    0.00 :   776e:   jb     6238 <receive_buf+0xf8>
    0.00 :   7774:   sub    %eax,%edx
    0.00 :   7776:   mov    %r14,%rdi
    0.00 :   7779:   lea    (%rdx,%rbx,1),%esi
    0.00 :   777c:   call   7781 <receive_buf+0x1641>
    0.00 :   7781:   mov    0x8(%rsp),%ecx
    0.00 :   7785:   test   %rax,%rax
    0.00 :   7788:   jne    6984 <receive_buf+0x844>
    0.00 :   778e:   jmp    6238 <receive_buf+0xf8>
    0.00 :   7793:   mov    %r10,%rdx
    0.00 :   7796:   lea    0x54(%rsp),%r9
    0.00 :   779b:   mov    %r15d,%ecx
    0.00 :   779e:   mov    %rbp,%rdi
    0.00 :   77a1:   mov    $0x100,%r8d
    0.00 :   77a7:   lea    0x52(%rsp),%rsi
    0.00 :   77ac:   mov    %r10,0x20(%rsp)
    0.00 :   77b1:   mov    %r11d,0x28(%rsp)
    0.00 :   77b6:   call   1f80 <xdp_linearize_page>
    0.00 :   77bb:   mov    0x20(%rsp),%r10
    0.00 :   77c0:   test   %rax,%rax
    0.00 :   77c3:   mov    %rax,0x18(%rsp)
    0.00 :   77c8:   je     71b3 <receive_buf+0x1073>
    0.00 :   77ce:   mov    0x28(%rsp),%r11d
    0.00 :   77d3:   mov    $0x100,%edx
    0.00 :   77d8:   mov    $0x1000,%ecx
    0.00 :   77dd:   jmp    70d6 <receive_buf+0xf96>
    0.00 :   77e2:   mov    0x10(%rbx),%rdi
    0.00 :   77e6:   mov    0x18(%rsp),%rsi
    0.00 :   77eb:   mov    %ecx,%edx
    0.00 :   77ed:   mov    %ecx,(%rsp)
    0.00 :   77f0:   call   77f5 <receive_buf+0x16b5>
    0.00 :   77f5:   mov    (%rsp),%ecx
    0.00 :   77f8:   jmp    720d <receive_buf+0x10cd>
    0.00 :   77fd:   mov    (%rsi),%eax
    0.00 :   77ff:   mov    %eax,(%rdx)
    0.00 :   7801:   mov    -0x4(%rcx,%rsi,1),%eax
    0.00 :   7805:   mov    %eax,-0x4(%rdx,%rcx,1)
    0.00 :   7809:   jmp    635e <receive_buf+0x21e>
    0.00 :   780e:   mov    0x18(%rsp),%r8
    0.00 :   7813:   mov    0x68(%rsp),%rcx
    0.00 :   7818:   movzbl 0x4a(%rbx),%edx
    0.00 :   781c:   mov    %r8,%rax
    0.00 :   781f:   sub    0x0(%rip),%rax        # 7826 <receive_buf+0x16e6>
    0.00 :   7826:   mov    %rcx,%rsi
    0.00 :   7829:   mov    %rcx,%r13
    0.00 :   782c:   sar    $0x6,%rax
    0.00 :   7830:   sub    0x78(%rsp),%r13
    0.00 :   7835:   shl    $0xc,%rax
    0.00 :   7839:   add    0x0(%rip),%rax        # 7840 <receive_buf+0x1700>
    0.00 :   7840:   mov    %r13d,%edi
    0.00 :   7843:   sub    %rax,%rsi
    0.00 :   7846:   lea    (%rdx,%r13,1),%eax
    0.00 :   784a:   mov    %esi,%r15d
    0.00 :   784d:   sub    %eax,%r15d
    0.00 :   7850:   mov    0x70(%rsp),%rax
    0.00 :   7855:   sub    %rcx,%rax
    0.00 :   7858:   sub    0x80(%rsp),%rcx
    0.00 :   7860:   add    %r13d,%eax
    0.00 :   7863:   sub    %r13d,%ecx
    0.00 :   7866:   add    %edx,%eax
    0.00 :   7868:   mov    %eax,0x54(%rsp)
    0.00 :   786c:   cmp    %r10,%r8
    0.00 :   786f:   je     74cf <receive_buf+0x138f>
    0.00 :   7875:   mov    %r10,0x10(%rsp)
    0.00 :   787a:   mov    %ecx,0x8(%rsp)
    0.00 :   787e:   call   7883 <receive_buf+0x1743>
    0.00 :   7883:   mov    0x10(%rsp),%rdi
    0.00 :   7888:   call   1ef0 <put_page>
    0.00 :   788d:   mov    0x8(%rsp),%ecx
    0.00 :   7891:   mov    %rbp,%rsi
    0.00 :   7894:   mov    %rbx,%rdi
    0.00 :   7897:   mov    0x54(%rsp),%r8d
    0.00 :   789c:   mov    $0x1000,%r9d
    0.00 :   78a2:   push   %rcx
    0.00 :   78a3:   mov    %r15d,%ecx
    0.00 :   78a6:   push   %r13
    0.00 :   78a8:   push   $0x0
    0.00 :   78aa:   mov    0x30(%rsp),%rdx
    0.00 :   78af:   call   2170 <page_to_skb>
    0.00 :   78b4:   mov    %rax,%r14
    0.00 :   78b7:   add    $0x18,%rsp
    0.00 :   78bb:   test   %rax,%rax
    0.00 :   78be:   jne    61d1 <receive_buf+0x91>
    0.00 :   78c4:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   78c9:   mov    $0xffffdd86,%esi
    0.00 :   78ce:   mov    %si,0xb4(%r14)
    0.00 :   78d6:   jmp    68e4 <receive_buf+0x7a4>
    0.00 :   78db:   mov    0x30(%rsp),%rdi
    0.00 :   78e0:   mov    0x8(%rsp),%rcx
    0.00 :   78e5:   add    %eax,%edx
    0.00 :   78e7:   mov    $0x1,%r8d
    0.00 :   78ed:   lea    0x140(%rax),%r11d
    0.00 :   78f4:   mov    %edx,0x58(%rsp)
    0.00 :   78f8:   add    $0x76d,%eax
    0.00 :   78fd:   lea    0x58(%rsp),%r9
    0.00 :   7902:   mov    %rdi,%rsi
    0.00 :   7905:   sub    0x0(%rip),%rsi        # 790c <receive_buf+0x17cc>
    0.00 :   790c:   and    $0xffffffc0,%eax
    0.00 :   790f:   mov    %rdi,%rdx
    0.00 :   7912:   sar    $0x6,%rsi
    0.00 :   7916:   add    $0x140,%eax
    0.00 :   791b:   mov    %rbp,%rdi
    0.00 :   791e:   mov    %r10,0x28(%rsp)
    0.00 :   7923:   shl    $0xc,%rsi
    0.00 :   7927:   add    0x0(%rip),%rsi        # 792e <receive_buf+0x17ee>
    0.00 :   792e:   mov    %r8w,0x54(%rsp)
    0.00 :   7934:   mov    $0x140,%r8d
    0.00 :   793a:   sub    %rsi,%rcx
    0.00 :   793d:   mov    0x38(%rsp),%esi
    0.00 :   7941:   mov    %r11d,0x20(%rsp)
    0.00 :   7946:   mov    %eax,0x10(%rsp)
    0.00 :   794a:   add    %ecx,%esi
    0.00 :   794c:   mov    %esi,%ecx
    0.00 :   794e:   lea    0x54(%rsp),%rsi
    0.00 :   7953:   call   1f80 <xdp_linearize_page>
    0.00 :   7958:   mov    %rax,%r15
    0.00 :   795b:   test   %rax,%rax
    0.00 :   795e:   je     7010 <receive_buf+0xed0>
    0.00 :   7964:   sub    0x0(%rip),%rax        # 796b <receive_buf+0x182b>
    0.00 :   796b:   mov    0x30(%rsp),%rdi
    0.00 :   7970:   sar    $0x6,%rax
    0.00 :   7974:   shl    $0xc,%rax
    0.00 :   7978:   add    0x0(%rip),%rax        # 797f <receive_buf+0x183f>
    0.00 :   797f:   mov    %rax,0x8(%rsp)
    0.00 :   7984:   call   1ef0 <put_page>
    0.00 :   7989:   mov    $0x100,%r8d
    0.00 :   798f:   mov    0x28(%rsp),%r10
    0.00 :   7994:   mov    0x20(%rsp),%r11d
    0.00 :   7999:   mov    %r15,0x30(%rsp)
    0.00 :   799e:   movl   $0x140,0x38(%rsp)
    0.00 :   79a6:   jmp    6f45 <receive_buf+0xe05>
    0.00 :   79ab:   orl    $0x2,(%r14)
    0.00 :   79af:   cmp    %r10,0x18(%rsp)
    0.00 :   79b4:   je     75e1 <receive_buf+0x14a1>
    0.00 :   79ba:   jmp    76d9 <receive_buf+0x1599>
    0.00 :   79bf:   orl    $0x2,(%r14)
    0.00 :   79c3:   call   79c8 <receive_buf+0x1888>
    0.00 :   79c8:   jmp    6aed <receive_buf+0x9ad>
    0.00 :   79cd:   mov    0x18(%rsp),%rdi
    0.00 :   79d2:   xor    %esi,%esi
    0.00 :   79d4:   mov    %r10,0x8(%rsp)
    0.00 :   79d9:   call   79de <receive_buf+0x189e>
    0.00 :   79de:   mov    0x8(%rsp),%r10
    0.00 :   79e3:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   79e8:   mov    0x88(%rsp),%rax
    0.00 :   79f0:   mov    (%rax),%rdx
    0.00 :   79f3:   testb  $0x8,0xc1(%rdx)
    0.00 :   79fa:   je     7abe <receive_buf+0x197e>
    0.00 :   7a00:   mov    %r11d,0x28(%rsp)
    0.00 :   7a05:   testb  $0x4,0xc8(%rdx)
    0.00 :   7a0c:   je     7abe <receive_buf+0x197e>
    0.00 :   7a12:   mov    %r13,%rdi
    0.00 :   7a15:   mov    %r10,0x20(%rsp)
    0.00 :   7a1a:   call   7a1f <receive_buf+0x18df>
    0.00 :   7a1f:   mov    0x28(%rsp),%r11d
    0.00 :   7a24:   mov    0x20(%rsp),%r10
    0.00 :   7a29:   mov    %eax,%r15d
    0.00 :   7a2c:   jmp    7189 <receive_buf+0x1049>
    0.00 :   7a31:   mov    %r13,%rdi
    0.00 :   7a34:   mov    %r10,0x8(%rsp)
    0.00 :   7a39:   call   7a3e <receive_buf+0x18fe>
    0.00 :   7a3e:   mov    0x8(%rsp),%r10
    0.00 :   7a43:   mov    %rax,%r13
    0.00 :   7a46:   jmp    768f <receive_buf+0x154f>
    0.00 :   7a4b:   mov    0x88(%rsp),%rax
    0.00 :   7a53:   mov    (%rax),%rdx
    0.00 :   7a56:   testb  $0x8,0xc1(%rdx)
    0.00 :   7a5d:   je     7a9b <receive_buf+0x195b>
    0.00 :   7a5f:   mov    %r8,0x28(%rsp)
    0.00 :   7a64:   mov    %r11d,0x20(%rsp)
    0.00 :   7a69:   testb  $0x4,0xc8(%rdx)
    0.00 :   7a70:   je     7a9b <receive_buf+0x195b>
    0.00 :   7a72:   mov    %r13,%rdi
    0.00 :   7a75:   call   7a7a <receive_buf+0x193a>
    0.00 :   7a7a:   mov    0x28(%rsp),%r8
    0.00 :   7a7f:   mov    0x20(%rsp),%r11d
    0.00 :   7a84:   mov    %eax,%ecx
    0.00 :   7a86:   jmp    6fca <receive_buf+0xe8a>
    0.00 :   7a8b:   mov    %r13,%rdi
    0.00 :   7a8e:   call   7a93 <receive_buf+0x1953>
    0.00 :   7a93:   mov    %rax,%rbp
    0.00 :   7a96:   jmp    75ac <receive_buf+0x146c>
    0.00 :   7a9b:   addq   $0x1,0x18(%r12)
    0.00 :   7aa1:   jmp    7515 <receive_buf+0x13d5>
    0.00 :   7aa6:   mov    0x0(%rip),%rdx        # 7aad <receive_buf+0x196d>
    0.00 :   7aad:   jmp    6b63 <receive_buf+0xa23>
    0.00 :   7ab2:   mov    0x0(%rip),%rsi        # 7ab9 <receive_buf+0x1979>
    0.00 :   7ab9:   jmp    65c6 <receive_buf+0x486>
    0.00 :   7abe:   addq   $0x1,0x18(%r12)
    0.00 :   7ac4:   jmp    75f3 <receive_buf+0x14b3>
    0.00 :   7ac9:   mov    $0x112,%edx
    0.00 :   7ace:   mov    $0x0,%rsi
    0.00 :   7ad5:   mov    %r10,0x8(%rsp)
    0.00 :   7ada:   mov    $0x0,%rdi
    0.00 :   7ae1:   call   7ae6 <receive_buf+0x19a6>
    0.00 :   7ae6:   mov    0x8(%rsp),%r10
    0.00 :   7aeb:   xor    %r9d,%r9d
    0.00 :   7aee:   mov    %r9,0x60(%rsp)
    0.00 :   7af3:   cmp    %r10,0x18(%rsp)
    0.00 :   7af8:   je     71b3 <receive_buf+0x1073>
    0.00 :   7afe:   mov    0x18(%rsp),%rdi
    0.00 :   7b03:   mov    %r10,0x8(%rsp)
    0.00 :   7b08:   call   1ef0 <put_page>
    0.00 :   7b0d:   mov    0x8(%rsp),%r10
    0.00 :   7b12:   jmp    71b3 <receive_buf+0x1073>
    0.00 :   7b17:   mov    %r13,%rdi
    0.00 :   7b1a:   mov    %r10,(%rsp)
    0.00 :   7b1e:   call   7b23 <receive_buf+0x19e3>
    0.00 :   7b23:   mov    (%rsp),%r10
    0.00 :   7b27:   jmp    76ca <receive_buf+0x158a>
    0.00 :   7b2c:   mov    %rbp,%rdi
    0.00 :   7b2f:   call   7b34 <receive_buf+0x19f4>
    0.00 :   7b34:   jmp    75dd <receive_buf+0x149d>
    0.00 :   7b39:   mov    0x10(%rbx),%rdi
    0.00 :   7b3d:   mov    0x10(%rsp),%rsi
    0.00 :   7b42:   mov    $0x3,%edx
    0.00 :   7b47:   mov    %r10,0x8(%rsp)
    0.00 :   7b4c:   call   e00 <trace_xdp_exception>
    0.00 :   7b51:   mov    0x8(%rsp),%r10
    0.00 :   7b56:   cmp    %r10,0x18(%rsp)
    0.00 :   7b5b:   je     71b3 <receive_buf+0x1073>
    0.00 :   7b61:   jmp    72b6 <receive_buf+0x1176>
    0.00 :   7b66:   mov    0x10(%rbx),%rdi
    0.00 :   7b6a:   mov    0x18(%rsp),%rsi
    0.00 :   7b6f:   mov    $0x3,%edx
    0.00 :   7b74:   call   e00 <trace_xdp_exception>
    0.00 :   7b79:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7b7e:   mov    $0x112,%edx
    0.00 :   7b83:   mov    $0x0,%rsi
    0.00 :   7b8a:   mov    $0x0,%rdi
    0.00 :   7b91:   call   7b96 <receive_buf+0x1a56>
    0.00 :   7b96:   jmp    7010 <receive_buf+0xed0>
    0.00 :   7b9b:   mov    0x0(%rip),%rcx        # 7ba2 <receive_buf+0x1a62>
    0.00 :   7ba2:   jmp    62ab <receive_buf+0x16b>
    0.00 :   7ba7:   mov    0x0(%rip),%rdx        # 7bae <receive_buf+0x1a6e>
    0.00 :   7bae:   jmp    6aa2 <receive_buf+0x962>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   68.83 libc.so.6[9899f]
   31.17 libc.so.6[98500]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000098500 <_int_free>:
         : 6     _int_free():
   31.17 :   98500:  push   %r15 // libc.so.6[98500]
    0.00 :   98502:  push   %r14
    0.00 :   98504:  push   %r13
    0.00 :   98506:  mov    %edx,%r13d
    0.00 :   98509:  push   %r12
    0.00 :   9850b:  push   %rbp
    0.00 :   9850c:  push   %rbx
    0.00 :   9850d:  sub    $0x38,%rsp
    0.00 :   98511:  mov    0x8(%rsi),%rdx
    0.00 :   98515:  mov    %fs:0x28,%rax
    0.00 :   9851e:  mov    %rax,0x28(%rsp)
    0.00 :   98523:  xor    %eax,%eax
    0.00 :   98525:  mov    %rdx,%r12
    0.00 :   98528:  and    $0xfffffffffffffff8,%r12
    0.00 :   9852c:  mov    %r12,%rcx
    0.00 :   9852f:  neg    %rcx
    0.00 :   98532:  cmp    %rsi,%rcx
    0.00 :   98535:  jb     989d0 <_int_free+0x4d0>
    0.00 :   9853b:  mov    %rsi,%rbx
    0.00 :   9853e:  test   $0xf,%sil
    0.00 :   98542:  jne    989d0 <_int_free+0x4d0>
    0.00 :   98548:  cmp    $0x1f,%r12
    0.00 :   9854c:  jbe    989e0 <_int_free+0x4e0>
    0.00 :   98552:  and    $0x8,%edx
    0.00 :   98555:  jne    989e0 <_int_free+0x4e0>
    0.00 :   9855b:  mov    0x13a846(%rip),%rax        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   98562:  mov    %rdi,%rbp
    0.00 :   98565:  mov    %fs:(%rax),%rsi
    0.00 :   98569:  test   %rsi,%rsi
    0.00 :   9856c:  je     985ac <_int_free+0xac>
    0.00 :   9856e:  lea    -0x11(%r12),%rcx
    0.00 :   98573:  shr    $0x4,%rcx
    0.00 :   98577:  cmp    0x13ae4a(%rip),%rcx        # 1d33c8 <mp_+0x68>
    0.00 :   9857e:  jae    985ac <_int_free+0xac>
    0.00 :   98580:  mov    0x13ae51(%rip),%rdi        # 1d33d8 <mp_+0x78>
    0.00 :   98587:  mov    0x141f0a(%rip),%r11        # 1da498 <tcache_key>
    0.00 :   9858e:  lea    0x10(%rbx),%r8
    0.00 :   98592:  cmp    %r11,0x18(%rbx)
    0.00 :   98596:  je     98c28 <_int_free+0x728>
    0.00 :   9859c:  movzwl (%rsi,%rcx,2),%edx
    0.00 :   985a0:  mov    %rdx,%rax
    0.00 :   985a3:  cmp    %rdi,%rdx
    0.00 :   985a6:  jb     98998 <_int_free+0x498>
    0.00 :   985ac:  cmp    %r12,0x141f0d(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   985b3:  jb     98670 <_int_free+0x170>
    0.00 :   985b9:  lea    (%rbx,%r12,1),%r14
    0.00 :   985bd:  mov    0x8(%r14),%rax
    0.00 :   985c1:  cmp    $0x10,%rax
    0.00 :   985c5:  jbe    989f0 <_int_free+0x4f0>
    0.00 :   985cb:  and    $0xfffffffffffffff8,%rax
    0.00 :   985cf:  cmp    0x888(%rbp),%rax
    0.00 :   985d6:  jae    989f0 <_int_free+0x4f0>
    0.00 :   985dc:  mov    0x141eda(%rip),%eax        # 1da4bc <perturb_byte>
    0.00 :   985e2:  test   %eax,%eax
    0.00 :   985e4:  jne    98b30 <_int_free+0x630>
    0.00 :   985ea:  movl   $0x1,0x8(%rbp)
    0.00 :   985f1:  shr    $0x4,%r12d
    0.00 :   985f5:  lea    -0x2(%r12),%eax
    0.00 :   985fa:  add    $0x2,%rax
    0.00 :   985fe:  cmpb   $0x0,0x142ff3(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   98605:  mov    0x0(%rbp,%rax,8),%rdx
    0.00 :   9860a:  je     98910 <_int_free+0x410>
    0.00 :   98610:  cmp    %rdx,%rbx
    0.00 :   98613:  je     98956 <_int_free+0x456>
    0.00 :   98619:  lea    0x10(%rbx),%rcx
    0.00 :   9861d:  shr    $0xc,%rcx
    0.00 :   98621:  xor    %rdx,%rcx
    0.00 :   98624:  mov    %rcx,0x10(%rbx)
    0.00 :   98628:  mov    %rbx,0x0(%rbp,%rax,8)
    0.00 :   9862d:  test   %rdx,%rdx
    0.00 :   98630:  je     98648 <_int_free+0x148>
    0.00 :   98632:  and    $0x1,%r13d
    0.00 :   98636:  je     98648 <_int_free+0x148>
    0.00 :   98638:  mov    0x8(%rdx),%rax
    0.00 :   9863c:  shr    $0x4,%eax
    0.00 :   9863f:  cmp    %eax,%r12d
    0.00 :   98642:  jne    98d34 <_int_free+0x834>
    0.00 :   98648:  mov    0x28(%rsp),%rax
    0.00 :   9864d:  sub    %fs:0x28,%rax
    0.00 :   98656:  jne    98dea <_int_free+0x8ea>
    0.00 :   9865c:  add    $0x38,%rsp
    0.00 :   98660:  pop    %rbx
    0.00 :   98661:  pop    %rbp
    0.00 :   98662:  pop    %r12
    0.00 :   98664:  pop    %r13
    0.00 :   98666:  pop    %r14
    0.00 :   98668:  pop    %r15
    0.00 :   9866a:  ret
    0.00 :   9866b:  nopl   0x0(%rax,%rax,1)
    0.00 :   98670:  testb  $0x2,0x8(%rbx)
    0.00 :   98674:  jne    98968 <_int_free+0x468>
    0.00 :   9867a:  cmpb   $0x0,0x142f77(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   98681:  jne    9868d <_int_free+0x18d>
    0.00 :   98683:  and    $0x1,%r13d
    0.00 :   98687:  je     98b00 <_int_free+0x600>
    0.00 :   9868d:  movl   $0x1,0x14(%rsp)
    0.00 :   98695:  mov    0x60(%rbp),%rax
    0.00 :   98699:  lea    (%rbx,%r12,1),%r14
    0.00 :   9869d:  cmp    %rbx,%rax
    0.00 :   986a0:  je     98c90 <_int_free+0x790>
    0.00 :   986a6:  testb  $0x2,0x4(%rbp)
    0.00 :   986aa:  je     98ca0 <_int_free+0x7a0>
    0.00 :   986b0:  mov    0x8(%r14),%rax
    0.00 :   986b4:  test   $0x1,%al
    0.00 :   986b6:  je     98cc0 <_int_free+0x7c0>
    0.00 :   986bc:  mov    %rax,%r15
    0.00 :   986bf:  and    $0xfffffffffffffff8,%r15
    0.00 :   986c3:  cmp    $0x10,%rax
    0.00 :   986c7:  jbe    98b20 <_int_free+0x620>
    0.00 :   986cd:  cmp    0x888(%rbp),%r15
    0.00 :   986d4:  jae    98b20 <_int_free+0x620>
    0.00 :   986da:  mov    0x141ddc(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   986e0:  test   %esi,%esi
    0.00 :   986e2:  jne    98cd0 <_int_free+0x7d0>
    0.00 :   986e8:  testb  $0x1,0x8(%rbx)
    0.00 :   986ec:  jne    98710 <_int_free+0x210>
    0.00 :   986ee:  mov    (%rbx),%rax
    0.00 :   986f1:  sub    %rax,%rbx
    0.00 :   986f4:  add    %rax,%r12
    0.00 :   986f7:  mov    0x8(%rbx),%rdx
    0.00 :   986fb:  and    $0xfffffffffffffff8,%rdx
    0.00 :   986ff:  cmp    %rax,%rdx
    0.00 :   98702:  jne    98d4c <_int_free+0x84c>
    0.00 :   98708:  mov    %rbx,%rdi
    0.00 :   9870b:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   98710:  cmp    %r14,0x60(%rbp)
    0.00 :   98714:  je     98ae0 <_int_free+0x5e0>
    0.00 :   9871a:  testb  $0x1,0x8(%r14,%r15,1)
    0.00 :   98720:  je     98b70 <_int_free+0x670>
    0.00 :   98726:  andq   $0xfffffffffffffffe,0x8(%r14)
    0.00 :   9872b:  mov    0x70(%rbp),%rax
    0.00 :   9872f:  lea    0x60(%rbp),%rdx
    0.00 :   98733:  movq   %rdx,%xmm1
    0.00 :   98738:  movq   %rax,%xmm0
    0.00 :   9873d:  punpcklqdq %xmm1,%xmm0
    0.00 :   98741:  cmp    %rdx,0x18(%rax)
    0.00 :   98745:  jne    98d40 <_int_free+0x840>
    0.00 :   9874b:  mov    %r12,%rcx
    0.00 :   9874e:  movups %xmm0,0x10(%rbx)
    0.00 :   98752:  lea    (%rbx,%r12,1),%rdx
    0.00 :   98756:  or     $0x1,%rcx
    0.00 :   9875a:  cmp    $0x3ff,%r12
    0.00 :   98761:  jbe    98a48 <_int_free+0x548>
    0.00 :   98767:  pxor   %xmm0,%xmm0
    0.00 :   9876b:  movups %xmm0,0x20(%rbx)
    0.00 :   9876f:  mov    %rbx,0x70(%rbp)
    0.00 :   98773:  mov    %rbx,0x18(%rax)
    0.00 :   98777:  mov    %rcx,0x8(%rbx)
    0.00 :   9877b:  mov    %r12,(%rdx)
    0.00 :   9877e:  cmp    $0xffff,%r12
    0.00 :   98785:  jbe    98a57 <_int_free+0x557>
    0.00 :   9878b:  mov    0x8(%rbp),%eax
    0.00 :   9878e:  test   %eax,%eax
    0.00 :   98790:  jne    98ce8 <_int_free+0x7e8>
    0.00 :   98796:  lea    0x13b4e3(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9879d:  cmp    %rax,%rbp
    0.00 :   987a0:  je     98cf8 <_int_free+0x7f8>
    0.00 :   987a6:  mov    0x13abe3(%rip),%rcx        # 1d3390 <mp_+0x30>
    0.00 :   987ad:  mov    0x60(%rbp),%r15
    0.00 :   987b1:  test   %rcx,%rcx
    0.00 :   987b4:  je     98d22 <_int_free+0x822>
    0.00 :   987ba:  lea    0x0(,%rcx,4),%r13
    0.00 :   987c2:  mov    %r13,%r12
    0.00 :   987c5:  neg    %r12
    0.00 :   987c8:  and    %r15,%r12
    0.00 :   987cb:  cmp    %rbp,(%r12)
    0.00 :   987cf:  jne    98ee6 <_int_free+0x9e6>
    0.00 :   987d5:  mov    0x13ab8c(%rip),%rcx        # 1d3368 <mp_+0x8>
    0.00 :   987dc:  lea    0x30(%r12),%rax
    0.00 :   987e1:  mov    %rcx,0x18(%rsp)
    0.00 :   987e6:  cmp    %rax,%r15
    0.00 :   987e9:  jne    98de1 <_int_free+0x8e1>
    0.00 :   987ef:  mov    %rcx,%rax
    0.00 :   987f2:  add    $0x20,%rax
    0.00 :   987f6:  mov    %rax,0x8(%rsp)
    0.00 :   987fb:  jmp    98844 <_int_free+0x344>
    0.00 :   987fd:  nopl   (%rax)
    0.00 :   98800:  mov    0x20(%r12),%rax
    0.00 :   98805:  lea    (%r15,%r14,1),%rsi
    0.00 :   98809:  sub    $0x1,%rax
    0.00 :   9880d:  test   %rax,%rsi
    0.00 :   98810:  jne    98e52 <_int_free+0x952>
    0.00 :   98816:  mov    0x10(%r12),%rax
    0.00 :   9881b:  add    %r12,%rax
    0.00 :   9881e:  cmp    %rax,%rsi
    0.00 :   98821:  jne    98e31 <_int_free+0x931>
    0.00 :   98827:  mov    %r14,%rdx
    0.00 :   9882a:  lea    0x30(%r12),%rax
    0.00 :   9882f:  mov    %r15,0x60(%rbp)
    0.00 :   98833:  or     $0x1,%rdx
    0.00 :   98837:  mov    %rdx,0x8(%r15)
    0.00 :   9883b:  cmp    %rax,%r15
    0.00 :   9883e:  jne    98b87 <_int_free+0x687>
    0.00 :   98844:  mov    %r12,%rdi
    0.00 :   98847:  mov    0x8(%r12),%r12
    0.00 :   9884c:  mov    0x10(%r12),%rsi
    0.00 :   98851:  lea    -0x10(%rsi),%rbx
    0.00 :   98855:  lea    (%r12,%rbx,1),%rdx
    0.00 :   98859:  and    $0xf,%edx
    0.00 :   9885c:  sub    %rdx,%rbx
    0.00 :   9885f:  add    %r12,%rbx
    0.00 :   98862:  cmpq   $0x1,0x8(%rbx)
    0.00 :   98867:  jne    98e73 <_int_free+0x973>
    0.00 :   9886d:  sub    (%rbx),%rbx
    0.00 :   98870:  mov    0x8(%rbx),%r8
    0.00 :   98874:  mov    %r8,%rax
    0.00 :   98877:  and    $0xfffffffffffffff8,%rax
    0.00 :   9887b:  add    %rdx,%rax
    0.00 :   9887e:  lea    0x10(%rax),%r14
    0.00 :   98882:  add    $0xf,%rax
    0.00 :   98886:  cmp    $0x3e,%rax
    0.00 :   9888a:  ja     98def <_int_free+0x8ef>
    0.00 :   98890:  and    $0x1,%r8d
    0.00 :   98894:  jne    98899 <_int_free+0x399>
    0.00 :   98896:  add    (%rbx),%r14
    0.00 :   98899:  test   %r14,%r14
    0.00 :   9889c:  jle    98e10 <_int_free+0x910>
    0.00 :   988a2:  cmp    %r13,%r14
    0.00 :   988a5:  jae    98e10 <_int_free+0x910>
    0.00 :   988ab:  mov    %r13,%rax
    0.00 :   988ae:  sub    %rsi,%rax
    0.00 :   988b1:  mov    0x8(%rsp),%rsi
    0.00 :   988b6:  add    0x20(%rdi),%rsi
    0.00 :   988ba:  add    %r14,%rax
    0.00 :   988bd:  cmp    %rsi,%rax
    0.00 :   988c0:  jb     98b80 <_int_free+0x680>
    0.00 :   988c6:  mov    0x10(%rdi),%rax
    0.00 :   988ca:  sub    %rax,0x888(%rbp)
    0.00 :   988d1:  nop
    0.00 :   988d2:  lea    (%rdi,%r13,1),%rax
    0.00 :   988d6:  cmp    %rax,0x141bc3(%rip)        # 1da4a0 <aligned_heap_area>
    0.00 :   988dd:  je     98ad0 <_int_free+0x5d0>
    0.00 :   988e3:  mov    %r13,%rsi
    0.00 :   988e6:  mov    %rbx,%r15
    0.00 :   988e9:  call   104b10 <__munmap>
    0.00 :   988ee:  testb  $0x1,0x8(%rbx)
    0.00 :   988f2:  jne    98800 <_int_free+0x300>
    0.00 :   988f8:  sub    (%rbx),%r15
    0.00 :   988fb:  mov    %r15,%rdi
    0.00 :   988fe:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   98903:  jmp    98800 <_int_free+0x300>
    0.00 :   98908:  nopl   0x0(%rax,%rax,1)
    0.00 :   98910:  mov    %r12d,%eax
    0.00 :   98913:  lea    0x10(%rbx),%rsi
    0.00 :   98917:  lea    0x0(%rbp,%rax,8),%rcx
    0.00 :   9891c:  shr    $0xc,%rsi
    0.00 :   98920:  jmp    98951 <_int_free+0x451>
    0.00 :   98922:  nopw   0x0(%rax,%rax,1)
    0.00 :   98928:  mov    %rdx,%rax
    0.00 :   9892b:  xor    %rsi,%rax
    0.00 :   9892e:  mov    %rax,0x10(%rbx)
    0.00 :   98932:  mov    %rdx,%rax
    0.00 :   98935:  cmpl   $0x0,%fs:0x18
    0.00 :   9893e:  je     98941 <_int_free+0x441>
    0.00 :   98940:  lock cmpxchg %rbx,(%rcx)
    0.00 :   98945:  cmp    %rax,%rdx
    0.00 :   98948:  je     9862d <_int_free+0x12d>
    0.00 :   9894e:  mov    %rax,%rdx
    0.00 :   98951:  cmp    %rbx,%rdx
    0.00 :   98954:  jne    98928 <_int_free+0x428>
    0.00 :   98956:  lea    0x1046e3(%rip),%rdi        # 19d040 <aliasfile.0+0x15f8>
    0.00 :   9895d:  call   96b80 <malloc_printerr>
    0.00 :   98962:  nopw   0x0(%rax,%rax,1)
    0.00 :   98968:  mov    0x28(%rsp),%rax
    0.00 :   9896d:  sub    %fs:0x28,%rax
    0.00 :   98976:  jne    98dea <_int_free+0x8ea>
    0.00 :   9897c:  add    $0x38,%rsp
    0.00 :   98980:  mov    %rbx,%rdi
    0.00 :   98983:  pop    %rbx
    0.00 :   98984:  pop    %rbp
    0.00 :   98985:  pop    %r12
    0.00 :   98987:  pop    %r13
    0.00 :   98989:  pop    %r14
    0.00 :   9898b:  pop    %r15
    0.00 :   9898d:  jmp    96da0 <munmap_chunk>
    0.00 :   98992:  nopw   0x0(%rax,%rax,1)
    0.00 :   98998:  mov    0x141af9(%rip),%rdx        # 1da498 <tcache_key>
   68.83 :   9899f:  add    $0x1,%eax // libc.so.6[9899f]
    0.00 :   989a2:  mov    %rdx,0x18(%rbx)
    0.00 :   989a6:  mov    %r8,%rdx
    0.00 :   989a9:  shr    $0xc,%rdx
    0.00 :   989ad:  xor    0x80(%rsi,%rcx,8),%rdx
    0.00 :   989b5:  mov    %rdx,0x10(%rbx)
    0.00 :   989b9:  mov    %r8,0x80(%rsi,%rcx,8)
    0.00 :   989c1:  mov    %ax,(%rsi,%rcx,2)
    0.00 :   989c5:  jmp    98648 <_int_free+0x148>
    0.00 :   989ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   989d0:  lea    0xff6da(%rip),%rdi        # 1980b1 <null+0xef7>
    0.00 :   989d7:  call   96b80 <malloc_printerr>
    0.00 :   989dc:  nopl   0x0(%rax)
    0.00 :   989e0:  lea    0xff6e2(%rip),%rdi        # 1980c9 <null+0xf0f>
    0.00 :   989e7:  call   96b80 <malloc_printerr>
    0.00 :   989ec:  nopl   0x0(%rax)
    0.00 :   989f0:  test   %r13d,%r13d
    0.00 :   989f3:  jne    98aae <_int_free+0x5ae>
    0.00 :   989f9:  mov    $0x1,%edx
    0.00 :   989fe:  mov    %r13d,%eax
    0.00 :   98a01:  lock cmpxchg %edx,0x0(%rbp)
    0.00 :   98a06:  jne    98ac0 <_int_free+0x5c0>
    0.00 :   98a0c:  mov    0x8(%r14),%rax
    0.00 :   98a10:  cmp    $0x10,%rax
    0.00 :   98a14:  jbe    98aa0 <_int_free+0x5a0>
    0.00 :   98a1a:  and    $0xfffffffffffffff8,%rax
    0.00 :   98a1e:  cmp    0x888(%rbp),%rax
    0.00 :   98a25:  jae    98aa0 <_int_free+0x5a0>
    0.00 :   98a27:  xor    %eax,%eax
    0.00 :   98a29:  xchg   %eax,0x0(%rbp)
    0.00 :   98a2c:  cmp    $0x1,%eax
    0.00 :   98a2f:  jle    985dc <_int_free+0xdc>
    0.00 :   98a35:  mov    %rbp,%rdi
    0.00 :   98a38:  call   87f80 <__lll_lock_wake_private>
    0.00 :   98a3d:  jmp    985dc <_int_free+0xdc>
    0.00 :   98a42:  nopw   0x0(%rax,%rax,1)
    0.00 :   98a48:  mov    %rbx,0x70(%rbp)
    0.00 :   98a4c:  mov    %rbx,0x18(%rax)
    0.00 :   98a50:  mov    %rcx,0x8(%rbx)
    0.00 :   98a54:  mov    %r12,(%rdx)
    0.00 :   98a57:  mov    0x14(%rsp),%eax
    0.00 :   98a5b:  test   %eax,%eax
    0.00 :   98a5d:  jne    98648 <_int_free+0x148>
    0.00 :   98a63:  mov    %eax,%r13d
    0.00 :   98a66:  xchg   %r13d,0x0(%rbp)
    0.00 :   98a6a:  cmp    $0x1,%r13d
    0.00 :   98a6e:  jle    98648 <_int_free+0x148>
    0.00 :   98a74:  mov    0x28(%rsp),%rax
    0.00 :   98a79:  sub    %fs:0x28,%rax
    0.00 :   98a82:  jne    98dea <_int_free+0x8ea>
    0.00 :   98a88:  add    $0x38,%rsp
    0.00 :   98a8c:  mov    %rbp,%rdi
    0.00 :   98a8f:  pop    %rbx
    0.00 :   98a90:  pop    %rbp
    0.00 :   98a91:  pop    %r12
    0.00 :   98a93:  pop    %r13
    0.00 :   98a95:  pop    %r14
    0.00 :   98a97:  pop    %r15
    0.00 :   98a99:  jmp    87f80 <__lll_lock_wake_private>
    0.00 :   98a9e:  xchg   %ax,%ax
    0.00 :   98aa0:  xor    %eax,%eax
    0.00 :   98aa2:  xchg   %eax,0x0(%rbp)
    0.00 :   98aa5:  cmp    $0x1,%eax
    0.00 :   98aa8:  jg     98d58 <_int_free+0x858>
    0.00 :   98aae:  lea    0x104563(%rip),%rdi        # 19d018 <aliasfile.0+0x15d0>
    0.00 :   98ab5:  call   96b80 <malloc_printerr>
    0.00 :   98aba:  nopw   0x0(%rax,%rax,1)
    0.00 :   98ac0:  mov    %rbp,%rdi
    0.00 :   98ac3:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   98ac8:  jmp    98a0c <_int_free+0x50c>
    0.00 :   98acd:  nopl   (%rax)
    0.00 :   98ad0:  movq   $0x0,0x1419c5(%rip)        # 1da4a0 <aligned_heap_area>
    0.00 :   98adb:  jmp    988e3 <_int_free+0x3e3>
    0.00 :   98ae0:  add    %r15,%r12
    0.00 :   98ae3:  mov    %r12,%rax
    0.00 :   98ae6:  or     $0x1,%rax
    0.00 :   98aea:  mov    %rax,0x8(%rbx)
    0.00 :   98aee:  mov    %rbx,0x60(%rbp)
    0.00 :   98af2:  jmp    9877e <_int_free+0x27e>
    0.00 :   98af7:  nopw   0x0(%rax,%rax,1)
    0.00 :   98b00:  xor    %eax,%eax
    0.00 :   98b02:  mov    $0x1,%edx
    0.00 :   98b07:  lock cmpxchg %edx,0x0(%rbp)
    0.00 :   98b0c:  jne    98d65 <_int_free+0x865>
    0.00 :   98b12:  movl   $0x0,0x14(%rsp)
    0.00 :   98b1a:  jmp    98695 <_int_free+0x195>
    0.00 :   98b1f:  nop
    0.00 :   98b20:  lea    0x1045a9(%rip),%rdi        # 19d0d0 <aliasfile.0+0x1688>
    0.00 :   98b27:  call   96b80 <malloc_printerr>
    0.00 :   98b2c:  nopl   0x0(%rax)
    0.00 :   98b30:  lea    0x18(%rbx),%rdi
    0.00 :   98b34:  lea    0x10(%rbx),%rcx
    0.00 :   98b38:  movzbl %al,%eax
    0.00 :   98b3b:  movabs $0x101010101010101,%rsi
    0.00 :   98b45:  and    $0xfffffffffffffff8,%rdi
    0.00 :   98b49:  imul   %rsi,%rax
    0.00 :   98b4d:  lea    -0x10(%r12),%rdx
    0.00 :   98b52:  sub    %rdi,%rcx
    0.00 :   98b55:  mov    %edx,%esi
    0.00 :   98b57:  add    %edx,%ecx
    0.00 :   98b59:  shr    $0x3,%ecx
    0.00 :   98b5c:  mov    %rax,0x10(%rbx)
    0.00 :   98b60:  mov    %rax,0x8(%rbx,%rsi,1)
    0.00 :   98b65:  rep stos %rax,%es:(%rdi)
    0.00 :   98b68:  jmp    985ea <_int_free+0xea>
    0.00 :   98b6d:  nopl   (%rax)
    0.00 :   98b70:  mov    %r14,%rdi
    0.00 :   98b73:  add    %r15,%r12
    0.00 :   98b76:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   98b7b:  jmp    9872b <_int_free+0x22b>
    0.00 :   98b80:  mov    0x8(%r15),%rdx
    0.00 :   98b84:  mov    %rdi,%r12
    0.00 :   98b87:  mov    %rdx,%rbx
    0.00 :   98b8a:  and    $0xfffffffffffffff8,%rbx
    0.00 :   98b8e:  cmp    0x13a7cb(%rip),%rbx        # 1d3360 <mp_>
    0.00 :   98b95:  jb     98a57 <_int_free+0x557>
    0.00 :   98b9b:  mov    %rbx,%rax
    0.00 :   98b9e:  sub    $0x21,%rax
    0.00 :   98ba2:  js     98a57 <_int_free+0x557>
    0.00 :   98ba8:  mov    0x18(%rsp),%rcx
    0.00 :   98bad:  cmp    %rax,%rcx
    0.00 :   98bb0:  jae    98a57 <_int_free+0x557>
    0.00 :   98bb6:  mov    0x20(%r12),%r14
    0.00 :   98bbb:  sub    %rcx,%rax
    0.00 :   98bbe:  neg    %r14
    0.00 :   98bc1:  and    %rax,%r14
    0.00 :   98bc4:  je     98a57 <_int_free+0x557>
    0.00 :   98bca:  mov    0x10(%r12),%r13
    0.00 :   98bcf:  sub    %r14,%r13
    0.00 :   98bd2:  cmp    $0x2f,%r13
    0.00 :   98bd6:  jle    98a57 <_int_free+0x557>
    0.00 :   98bdc:  mov    0x13a75e(%rip),%eax        # 1d3340 <may_shrink_heap.12>
    0.00 :   98be2:  test   %eax,%eax
    0.00 :   98be4:  js     98d72 <_int_free+0x872>
    0.00 :   98bea:  jne    98db3 <_int_free+0x8b3>
    0.00 :   98bf0:  lea    (%r12,%r13,1),%rdi
    0.00 :   98bf4:  mov    $0x4,%edx
    0.00 :   98bf9:  mov    %r14,%rsi
    0.00 :   98bfc:  call   104c10 <__madvise>
    0.00 :   98c01:  mov    %r13,0x10(%r12)
    0.00 :   98c06:  nop
    0.00 :   98c07:  sub    %r14,%rbx
    0.00 :   98c0a:  sub    %r14,0x888(%rbp)
    0.00 :   98c11:  mov    %rbx,%rdx
    0.00 :   98c14:  or     $0x1,%rdx
    0.00 :   98c18:  mov    %rdx,0x8(%r15)
    0.00 :   98c1c:  jmp    98a57 <_int_free+0x557>
    0.00 :   98c21:  nopl   0x0(%rax)
    0.00 :   98c28:  nop
    0.00 :   98c29:  mov    %fs:(%rax),%rsi
    0.00 :   98c2d:  mov    0x13a7a4(%rip),%rdi        # 1d33d8 <mp_+0x78>
    0.00 :   98c34:  mov    0x80(%rsi,%rcx,8),%rax
    0.00 :   98c3c:  test   %rax,%rax
    0.00 :   98c3f:  jne    98c76 <_int_free+0x776>
    0.00 :   98c41:  jmp    9859c <_int_free+0x9c>
    0.00 :   98c46:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   98c50:  cmp    %r8,%rax
    0.00 :   98c53:  je     98eda <_int_free+0x9da>
    0.00 :   98c59:  mov    (%rax),%r10
    0.00 :   98c5c:  shr    $0xc,%rax
    0.00 :   98c60:  add    $0x1,%rdx
    0.00 :   98c64:  mov    %rax,%r9
    0.00 :   98c67:  mov    %r10,%rax
    0.00 :   98c6a:  xor    %r9,%rax
    0.00 :   98c6d:  cmp    %r9,%r10
    0.00 :   98c70:  je     9859c <_int_free+0x9c>
    0.00 :   98c76:  cmp    %rdi,%rdx
    0.00 :   98c79:  je     98ece <_int_free+0x9ce>
    0.00 :   98c7f:  test   $0xf,%al
    0.00 :   98c81:  je     98c50 <_int_free+0x750>
    0.00 :   98c83:  lea    0x10432e(%rip),%rdi        # 19cfb8 <aliasfile.0+0x1570>
    0.00 :   98c8a:  call   96b80 <malloc_printerr>
    0.00 :   98c8f:  nop
    0.00 :   98c90:  lea    0x1043d1(%rip),%rdi        # 19d068 <aliasfile.0+0x1620>
    0.00 :   98c97:  call   96b80 <malloc_printerr>
    0.00 :   98c9c:  nopl   0x0(%rax)
    0.00 :   98ca0:  mov    0x8(%rax),%rdx
    0.00 :   98ca4:  and    $0xfffffffffffffff8,%rdx
    0.00 :   98ca8:  add    %rdx,%rax
    0.00 :   98cab:  cmp    %rax,%r14
    0.00 :   98cae:  jb     986b0 <_int_free+0x1b0>
    0.00 :   98cb4:  lea    0x1043cd(%rip),%rdi        # 19d088 <aliasfile.0+0x1640>
    0.00 :   98cbb:  call   96b80 <malloc_printerr>
    0.00 :   98cc0:  lea    0x1043e1(%rip),%rdi        # 19d0a8 <aliasfile.0+0x1660>
    0.00 :   98cc7:  call   96b80 <malloc_printerr>
    0.00 :   98ccc:  nopl   0x0(%rax)
    0.00 :   98cd0:  lea    -0x10(%r12),%rdx
    0.00 :   98cd5:  lea    0x10(%rbx),%rdi
    0.00 :   98cd9:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   98cde:  jmp    986e8 <_int_free+0x1e8>
    0.00 :   98ce3:  nopl   0x0(%rax,%rax,1)
    0.00 :   98ce8:  mov    %rbp,%rdi
    0.00 :   98ceb:  call   97680 <malloc_consolidate>
    0.00 :   98cf0:  jmp    98796 <_int_free+0x296>
    0.00 :   98cf5:  nopl   (%rax)
    0.00 :   98cf8:  mov    0x60(%rbp),%rax
    0.00 :   98cfc:  mov    0x8(%rax),%rax
    0.00 :   98d00:  and    $0xfffffffffffffff8,%rax
    0.00 :   98d04:  cmp    0x13a655(%rip),%rax        # 1d3360 <mp_>
    0.00 :   98d0b:  jb     98a57 <_int_free+0x557>
    0.00 :   98d11:  mov    0x13a650(%rip),%rdi        # 1d3368 <mp_+0x8>
    0.00 :   98d18:  call   98450 <systrim.constprop.0>
    0.00 :   98d1d:  jmp    98a57 <_int_free+0x557>
    0.00 :   98d22:  mov    $0xfffffffffc000000,%r12
    0.00 :   98d29:  mov    $0x4000000,%r13d
    0.00 :   98d2f:  jmp    987c8 <_int_free+0x2c8>
    0.00 :   98d34:  lea    0xff3a3(%rip),%rdi        # 1980de <null+0xf24>
    0.00 :   98d3b:  call   96b80 <malloc_printerr>
    0.00 :   98d40:  lea    0x1043e9(%rip),%rdi        # 19d130 <aliasfile.0+0x16e8>
    0.00 :   98d47:  call   96b80 <malloc_printerr>
    0.00 :   98d4c:  lea    0x1043a5(%rip),%rdi        # 19d0f8 <aliasfile.0+0x16b0>
    0.00 :   98d53:  call   96b80 <malloc_printerr>
    0.00 :   98d58:  mov    %rbp,%rdi
    0.00 :   98d5b:  call   87f80 <__lll_lock_wake_private>
    0.00 :   98d60:  jmp    98aae <_int_free+0x5ae>
    0.00 :   98d65:  mov    %rbp,%rdi
    0.00 :   98d68:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   98d6d:  jmp    98b12 <_int_free+0x612>
    0.00 :   98d72:  mov    0x13a107(%rip),%rax        # 1d2e80 <__libc_enable_secure@GLIBC_PRIVATE>
    0.00 :   98d79:  mov    (%rax),%ecx
    0.00 :   98d7b:  test   %ecx,%ecx
    0.00 :   98d7d:  mov    %ecx,0x13a5bd(%rip)        # 1d3340 <may_shrink_heap.12>
    0.00 :   98d83:  mov    %ecx,0x18(%rsp)
    0.00 :   98d87:  jne    98db3 <_int_free+0x8b3>
    0.00 :   98d89:  lea    0x1044d0(%rip),%rdi        # 19d260 <aliasfile.0+0x1818>
    0.00 :   98d90:  mov    $0x80000,%esi
    0.00 :   98d95:  xor    %eax,%eax
    0.00 :   98d97:  call   fffc0 <__open64_nocancel>
    0.00 :   98d9c:  mov    %eax,%edi
    0.00 :   98d9e:  test   %eax,%eax
    0.00 :   98da0:  jns    98e94 <_int_free+0x994>
    0.00 :   98da6:  cmpl   $0x0,0x13a593(%rip)        # 1d3340 <may_shrink_heap.12>
    0.00 :   98dad:  je     98bf0 <_int_free+0x6f0>
    0.00 :   98db3:  xor    %r9d,%r9d
    0.00 :   98db6:  or     $0xffffffff,%r8d
    0.00 :   98dba:  xor    %edx,%edx
    0.00 :   98dbc:  mov    $0x32,%ecx
    0.00 :   98dc1:  lea    (%r12,%r13,1),%rdi
    0.00 :   98dc5:  mov    %r14,%rsi
    0.00 :   98dc8:  call   104ab0 <__mmap>
    0.00 :   98dcd:  add    $0x1,%rax
    0.00 :   98dd1:  je     98a57 <_int_free+0x557>
    0.00 :   98dd7:  mov    %r13,0x18(%r12)
    0.00 :   98ddc:  jmp    98c01 <_int_free+0x701>
    0.00 :   98de1:  mov    0x8(%r15),%rdx
    0.00 :   98de5:  jmp    98b87 <_int_free+0x687>
    0.00 :   98dea:  call   11ba20 <__stack_chk_fail>
    0.00 :   98def:  lea    0x104392(%rip),%rcx        # 19d188 <aliasfile.0+0x1740>
    0.00 :   98df6:  lea    0x104cc3(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98dfd:  mov    $0x1,%edi
    0.00 :   98e02:  xor    %eax,%eax
    0.00 :   98e04:  lea    0x103cc5(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e0b:  call   80df0 <__libc_message>
    0.00 :   98e10:  lea    0x1043a1(%rip),%rcx        # 19d1b8 <aliasfile.0+0x1770>
    0.00 :   98e17:  lea    0x104ca2(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e1e:  mov    $0x1,%edi
    0.00 :   98e23:  xor    %eax,%eax
    0.00 :   98e25:  lea    0x103ca4(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e2c:  call   80df0 <__libc_message>
    0.00 :   98e31:  lea    0x1043f0(%rip),%rcx        # 19d228 <aliasfile.0+0x17e0>
    0.00 :   98e38:  lea    0x104c81(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e3f:  mov    $0x1,%edi
    0.00 :   98e44:  xor    %eax,%eax
    0.00 :   98e46:  lea    0x103c83(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e4d:  call   80df0 <__libc_message>
    0.00 :   98e52:  lea    0x104387(%rip),%rcx        # 19d1e0 <aliasfile.0+0x1798>
    0.00 :   98e59:  lea    0x104c60(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e60:  mov    $0x1,%edi
    0.00 :   98e65:  xor    %eax,%eax
    0.00 :   98e67:  lea    0x103c62(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e6e:  call   80df0 <__libc_message>
    0.00 :   98e73:  lea    0x1042de(%rip),%rcx        # 19d158 <aliasfile.0+0x1710>
    0.00 :   98e7a:  lea    0x104c3f(%rip),%rdx        # 19dac0 <aliasfile.0+0x2078>
    0.00 :   98e81:  mov    $0x1,%edi
    0.00 :   98e86:  xor    %eax,%eax
    0.00 :   98e88:  lea    0x103c41(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98e8f:  call   80df0 <__libc_message>
    0.00 :   98e94:  lea    0x27(%rsp),%rsi
    0.00 :   98e99:  mov    $0x1,%edx
    0.00 :   98e9e:  mov    %eax,0x8(%rsp)
    0.00 :   98ea2:  call   100110 <__read_nocancel>
    0.00 :   98ea7:  mov    0x8(%rsp),%edi
    0.00 :   98eab:  mov    0x18(%rsp),%ecx
    0.00 :   98eaf:  test   %rax,%rax
    0.00 :   98eb2:  jle    98ebe <_int_free+0x9be>
    0.00 :   98eb4:  xor    %ecx,%ecx
    0.00 :   98eb6:  cmpb   $0x32,0x27(%rsp)
    0.00 :   98ebb:  sete   %cl
    0.00 :   98ebe:  mov    %ecx,0x13a47c(%rip)        # 1d3340 <may_shrink_heap.12>
    0.00 :   98ec4:  call   ffe50 <__close_nocancel>
    0.00 :   98ec9:  jmp    98da6 <_int_free+0x8a6>
    0.00 :   98ece:  lea    0x1040b3(%rip),%rdi        # 19cf88 <aliasfile.0+0x1540>
    0.00 :   98ed5:  call   96b80 <malloc_printerr>
    0.00 :   98eda:  lea    0x104107(%rip),%rdi        # 19cfe8 <aliasfile.0+0x15a0>
    0.00 :   98ee1:  call   96b80 <malloc_printerr>
    0.00 :   98ee6:  lea    0xff20e(%rip),%rcx        # 1980fb <null+0xf41>
    0.00 :   98eed:  lea    0x104bdc(%rip),%rdx        # 19dad0 <aliasfile.0+0x2088>
    0.00 :   98ef4:  mov    $0x1,%edi
    0.00 :   98ef9:  xor    %eax,%eax
    0.00 :   98efb:  lea    0x103bce(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   98f02:  call   80df0 <__libc_message>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   71.34 [virtio_net][7bc5]
   28.66 [virtio_net][7bc0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (3 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000007bc0 <virtnet_poll>:
         : 6    virtnet_poll():
   28.66 :   7bc0:   call   7bc5 <virtnet_poll+0x5> // [virtio_net][7bc0]
   71.34 :   7bc5:   push   %r15 // [virtio_net][7bc5]
    0.00 :   7bc7:   push   %r14
    0.00 :   7bc9:   lea    -0x8(%rdi),%r14
    0.00 :   7bcd:   push   %r13
    0.00 :   7bcf:   push   %r12
    0.00 :   7bd1:   push   %rbp
    0.00 :   7bd2:   push   %rbx
    0.00 :   7bd3:   mov    %rdi,%rbx
    0.00 :   7bd6:   sub    $0x68,%rsp
    0.00 :   7bda:   mov    -0x8(%rdi),%r9
    0.00 :   7bde:   mov    %esi,0x8(%rsp)
    0.00 :   7be2:   mov    0x20(%r9),%rax
    0.00 :   7be6:   movl   $0x0,0x18(%rsp)
    0.00 :   7bee:   mov    0x330(%rax),%r15
    0.00 :   7bf5:   mov    0x28(%r9),%eax
    0.00 :   7bf9:   shr    %eax
    0.00 :   7bfb:   mov    %r15,%rbp
    0.00 :   7bfe:   mov    %eax,%edx
    0.00 :   7c00:   imul   $0x458,%rdx,%r13
    0.00 :   7c07:   add    0x18(%r15),%r13
    0.00 :   7c0b:   mov    0x2d8(%r13),%edi
    0.00 :   7c12:   test   %edi,%edi
    0.00 :   7c14:   je     7cc5 <virtnet_poll+0x105>
    0.00 :   7c1a:   movzwl 0x2e(%r15),%ecx
    0.00 :   7c1f:   movzwl 0x30(%r15),%edi
    0.00 :   7c24:   mov    %ecx,%esi
    0.00 :   7c26:   sub    %edi,%esi
    0.00 :   7c28:   cmp    %esi,%eax
    0.00 :   7c2a:   jl     7c34 <virtnet_poll+0x74>
    0.00 :   7c2c:   cmp    %ecx,%eax
    0.00 :   7c2e:   jl     7cc5 <virtnet_poll+0x105>
    0.00 :   7c34:   mov    0x10(%r15),%rax
    0.00 :   7c38:   lea    (%rdx,%rdx,4),%rbp
    0.00 :   7c3c:   shl    $0x6,%rbp
    0.00 :   7c40:   add    0x400(%rax),%rbp
    0.00 :   7c47:   lea    0x80(%rbp),%r12
    0.00 :   7c4e:   mov    %r12,%rdi
    0.00 :   7c51:   call   7c56 <virtnet_poll+0x96>
    0.00 :   7c56:   test   %eax,%eax
    0.00 :   7c58:   je     7cb6 <virtnet_poll+0xf6>
    0.00 :   7c5a:   call   7c5f <virtnet_poll+0x9f>
    0.00 :   7c5f:   mov    %eax,0x84(%rbp)
    0.00 :   7c65:   cmpb   $0x0,0x450(%r13)
    0.00 :   7c6d:   jne    7ca4 <virtnet_poll+0xe4>
    0.00 :   7c6f:   mov    0x0(%r13),%rdi
    0.00 :   7c73:   call   7c78 <virtnet_poll+0xb8>
    0.00 :   7c78:   mov    %r13,%rdi
    0.00 :   7c7b:   mov    $0x1,%esi
    0.00 :   7c80:   call   390 <free_old_xmit_skbs>
    0.00 :   7c85:   mov    0x0(%r13),%rdi
    0.00 :   7c89:   call   7c8e <virtnet_poll+0xce>
    0.00 :   7c8e:   test   %al,%al
    0.00 :   7c90:   je     7c6f <virtnet_poll+0xaf>
    0.00 :   7c92:   mov    0x0(%r13),%rax
    0.00 :   7c96:   cmpl   $0x12,0x2c(%rax)
    0.00 :   7c9a:   jbe    7ca4 <virtnet_poll+0xe4>
    0.00 :   7c9c:   mov    %rbp,%rdi
    0.00 :   7c9f:   call   7ca4 <virtnet_poll+0xe4>
    0.00 :   7ca4:   movl   $0xffffffff,0x84(%rbp)
    0.00 :   7cae:   mov    %r12,%rdi
    0.00 :   7cb1:   call   7cb6 <virtnet_poll+0xf6>
    0.00 :   7cb6:   mov    -0x8(%rbx),%r9
    0.00 :   7cba:   mov    0x20(%r9),%rax
    0.00 :   7cbe:   mov    0x330(%rax),%rbp
    0.00 :   7cc5:   lea    0x28(%rsp),%r12
    0.00 :   7cca:   xor    %eax,%eax
    0.00 :   7ccc:   mov    $0x8,%ecx
    0.00 :   7cd1:   cmpb   $0x0,0x33(%rbp)
    0.00 :   7cd5:   mov    %r12,%rdi
    0.00 :   7cd8:   movl   $0x0,0x1c(%rsp)
    0.00 :   7ce0:   movslq 0x8(%rsp),%r13
    0.00 :   7ce5:   rep stos %rax,%es:(%rdi)
    0.00 :   7ce8:   je     7d7e <virtnet_poll+0x1be>
    0.00 :   7cee:   cmpb   $0x0,0x38(%rbp)
    0.00 :   7cf2:   jne    7d7e <virtnet_poll+0x1be>
    0.00 :   7cf8:   lea    0x1c(%rsp),%rcx
    0.00 :   7cfd:   mov    %rcx,(%rsp)
    0.00 :   7d01:   test   %r13d,%r13d
    0.00 :   7d04:   jne    7d40 <virtnet_poll+0x180>
    0.00 :   7d06:   jmp    80c4 <virtnet_poll+0x504>
    0.00 :   7d0b:   push   %r12
    0.00 :   7d0d:   mov    0x24(%rsp),%ecx
    0.00 :   7d11:   xor    %r8d,%r8d
    0.00 :   7d14:   mov    %r14,%rsi
    0.00 :   7d17:   mov    %rbp,%rdi
    0.00 :   7d1a:   lea    0x20(%rsp),%r9
    0.00 :   7d1f:   call   6140 <receive_buf>
    0.00 :   7d24:   mov    0x30(%rsp),%rax
    0.00 :   7d29:   lea    0x1(%rax),%r8
    0.00 :   7d2d:   mov    %r8,0x30(%rsp)
    0.00 :   7d32:   pop    %rcx
    0.00 :   7d33:   cmp    %r13,%r8
    0.00 :   7d36:   jae    800e <virtnet_poll+0x44e>
    0.00 :   7d3c:   mov    -0x8(%rbx),%r9
    0.00 :   7d40:   mov    (%rsp),%rsi
    0.00 :   7d44:   mov    %r9,%rdi
    0.00 :   7d47:   call   7d4c <virtnet_poll+0x18c>
    0.00 :   7d4c:   mov    %rax,%rdx
    0.00 :   7d4f:   test   %rax,%rax
    0.00 :   7d52:   jne    7d0b <virtnet_poll+0x14b>
    0.00 :   7d54:   mov    0x18(%rsp),%eax
    0.00 :   7d58:   mov    0x28(%rsp),%r8
    0.00 :   7d5d:   mov    -0x8(%rbx),%r9
    0.00 :   7d61:   mov    %eax,%edi
    0.00 :   7d63:   and    $0x1,%eax
    0.00 :   7d66:   mov    %r8d,0xc(%rsp)
    0.00 :   7d6b:   mov    %r8d,%r12d
    0.00 :   7d6e:   and    $0x2,%edi
    0.00 :   7d71:   mov    %eax,0x14(%rsp)
    0.00 :   7d75:   mov    %edi,0x10(%rsp)
    0.00 :   7d79:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   7d7e:   movq   $0x0,0x20(%rsp)
    0.00 :   7d87:   lea    0x1c(%rsp),%rax
    0.00 :   7d8c:   mov    %rax,(%rsp)
    0.00 :   7d90:   test   %r13,%r13
    0.00 :   7d93:   jne    7dd1 <virtnet_poll+0x211>
    0.00 :   7d95:   jmp    8081 <virtnet_poll+0x4c1>
    0.00 :   7d9a:   push   %r12
    0.00 :   7d9c:   mov    0x28(%rsp),%r8
    0.00 :   7da1:   mov    %r14,%rsi
    0.00 :   7da4:   mov    %rbp,%rdi
    0.00 :   7da7:   mov    0x24(%rsp),%ecx
    0.00 :   7dab:   lea    0x20(%rsp),%r9
    0.00 :   7db0:   call   6140 <receive_buf>
    0.00 :   7db5:   mov    0x30(%rsp),%rax
    0.00 :   7dba:   mov    -0x8(%rbx),%r9
    0.00 :   7dbe:   lea    0x1(%rax),%r8
    0.00 :   7dc2:   mov    %r8,0x30(%rsp)
    0.00 :   7dc7:   pop    %rsi
    0.00 :   7dc8:   cmp    %r13,%r8
    0.00 :   7dcb:   jae    7ea0 <virtnet_poll+0x2e0>
    0.00 :   7dd1:   mov    (%rsp),%rsi
    0.00 :   7dd5:   lea    0x20(%rsp),%rdx
    0.00 :   7dda:   mov    %r9,%rdi
    0.00 :   7ddd:   call   7de2 <virtnet_poll+0x222>
    0.00 :   7de2:   mov    %rax,%rdx
    0.00 :   7de5:   test   %rax,%rax
    0.00 :   7de8:   jne    7d9a <virtnet_poll+0x1da>
    0.00 :   7dea:   mov    0x18(%rsp),%eax
    0.00 :   7dee:   mov    0x28(%rsp),%r8
    0.00 :   7df3:   mov    -0x8(%rbx),%r9
    0.00 :   7df7:   mov    %eax,%ecx
    0.00 :   7df9:   and    $0x1,%eax
    0.00 :   7dfc:   mov    %r8d,0xc(%rsp)
    0.00 :   7e01:   mov    %r8d,%r12d
    0.00 :   7e04:   and    $0x2,%ecx
    0.00 :   7e07:   mov    %eax,0x14(%rsp)
    0.00 :   7e0b:   mov    %ecx,0x10(%rsp)
    0.00 :   7e0f:   mov    %r9,%rdi
    0.00 :   7e12:   mov    %r8,(%rsp)
    0.00 :   7e16:   mov    0x2c(%r9),%r13d
    0.00 :   7e1a:   call   7e1f <virtnet_poll+0x25f>
    0.00 :   7e1f:   mov    0x8(%rsp),%ecx
    0.00 :   7e23:   mov    (%rsp),%r8
    0.00 :   7e27:   cmp    %eax,%ecx
    0.00 :   7e29:   cmovbe %ecx,%eax
    0.00 :   7e2c:   shr    %eax
    0.00 :   7e2e:   cmp    %r13d,%eax
    0.00 :   7e31:   jb     7ec1 <virtnet_poll+0x301>
    0.00 :   7e37:   add    %r8,0x198(%rbx)
    0.00 :   7e3e:   lea    0x198(%rbx),%rcx
    0.00 :   7e45:   mov    $0x0,%rax
    0.00 :   7e4c:   mov    (%rax),%rdx
    0.00 :   7e4f:   add    $0x28,%rax
    0.00 :   7e53:   mov    0x28(%rsp,%rdx,1),%rsi
    0.00 :   7e58:   add    %rsi,(%rcx,%rdx,1)
    0.00 :   7e5c:   cmp    $0x0,%rax
    0.00 :   7e62:   jne    7e4c <virtnet_poll+0x28c>
    0.00 :   7e64:   mov    0x10(%rsp),%edx
    0.00 :   7e68:   test   %edx,%edx
    0.00 :   7e6a:   jne    7ff7 <virtnet_poll+0x437>
    0.00 :   7e70:   mov    0x8(%rsp),%ecx
    0.00 :   7e74:   cmp    %ecx,0xc(%rsp)
    0.00 :   7e78:   jb     7fa3 <virtnet_poll+0x3e3>
    0.00 :   7e7e:   mov    0x14(%rsp),%eax
    0.00 :   7e82:   test   %eax,%eax
    0.00 :   7e84:   jne    7f12 <virtnet_poll+0x352>
    0.00 :   7e8a:   add    $0x68,%rsp
    0.00 :   7e8e:   mov    %r12d,%eax
    0.00 :   7e91:   pop    %rbx
    0.00 :   7e92:   pop    %rbp
    0.00 :   7e93:   pop    %r12
    0.00 :   7e95:   pop    %r13
    0.00 :   7e97:   pop    %r14
    0.00 :   7e99:   pop    %r15
    0.00 :   7e9b:   jmp    7ea0 <virtnet_poll+0x2e0>
    0.00 :   7ea0:   mov    0x18(%rsp),%eax
    0.00 :   7ea4:   mov    %r8d,0xc(%rsp)
    0.00 :   7ea9:   mov    %r8d,%r12d
    0.00 :   7eac:   mov    %eax,%edi
    0.00 :   7eae:   and    $0x1,%eax
    0.00 :   7eb1:   and    $0x2,%edi
    0.00 :   7eb4:   mov    %eax,0x14(%rsp)
    0.00 :   7eb8:   mov    %edi,0x10(%rsp)
    0.00 :   7ebc:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   7ec1:   mov    $0xa20,%edx
    0.00 :   7ec6:   mov    %r14,%rsi
    0.00 :   7ec9:   mov    %rbp,%rdi
    0.00 :   7ecc:   call   4fc0 <try_fill_recv>
    0.00 :   7ed1:   mov    (%rsp),%r8
    0.00 :   7ed5:   test   %al,%al
    0.00 :   7ed7:   jne    7e37 <virtnet_poll+0x277>
    0.00 :   7edd:   lea    0xac(%rbp),%r14
    0.00 :   7ee4:   mov    %r14,%rdi
    0.00 :   7ee7:   call   7eec <virtnet_poll+0x32c>
    0.00 :   7eec:   cmpb   $0x0,0xa8(%rbp)
    0.00 :   7ef3:   mov    (%rsp),%r8
    0.00 :   7ef7:   jne    80a4 <virtnet_poll+0x4e4>
    0.00 :   7efd:   mov    %r14,%rdi
    0.00 :   7f00:   mov    %r8,(%rsp)
    0.00 :   7f04:   call   7f09 <virtnet_poll+0x349>
    0.00 :   7f09:   mov    (%rsp),%r8
    0.00 :   7f0d:   jmp    7e37 <virtnet_poll+0x277>
    0.00 :   7f12:   call   7f17 <virtnet_poll+0x357>
    0.00 :   7f17:   movzwl 0x2e(%r15),%ebx
    0.00 :   7f1c:   cmp    %ebx,0x0(%rip)        # 7f22 <virtnet_poll+0x362>
    0.00 :   7f22:   mov    %eax,%ebp
    0.00 :   7f24:   jae    8050 <virtnet_poll+0x490>
    0.00 :   7f2a:   movzwl 0x30(%r15),%eax
    0.00 :   7f2f:   sub    %eax,%ebx
    0.00 :   7f31:   lea    0x0(%rbp,%rbx,1),%ebx
    0.00 :   7f35:   imul   $0x458,%rbx,%rbx
    0.00 :   7f3c:   add    0x18(%r15),%rbx
    0.00 :   7f40:   mov    (%rbx),%rdi
    0.00 :   7f43:   call   7f48 <virtnet_poll+0x388>
    0.00 :   7f48:   test   %al,%al
    0.00 :   7f4a:   jne    8033 <virtnet_poll+0x473>
    0.00 :   7f50:   mov    0x10(%r15),%rax
    0.00 :   7f54:   mov    0x18(%r15),%rcx
    0.00 :   7f58:   mov    0x400(%rax),%rdx
    0.00 :   7f5f:   movzwl 0x2e(%r15),%eax
    0.00 :   7f64:   cmp    %eax,0x0(%rip)        # 7f6a <virtnet_poll+0x3aa>
    0.00 :   7f6a:   jb     7e8a <virtnet_poll+0x2ca>
    0.00 :   7f70:   sub    %rcx,%rbx
    0.00 :   7f73:   sar    $0x3,%rbx
    0.00 :   7f77:   imul   $0x70586723,%ebx,%eax
    0.00 :   7f7d:   lea    (%rax,%rax,4),%rax
    0.00 :   7f81:   shl    $0x6,%rax
    0.00 :   7f85:   add    %rax,%rdx
    0.00 :   7f88:   movl   $0xffffffff,0x84(%rdx)
    0.00 :   7f92:   lea    0x80(%rdx),%rdi
    0.00 :   7f99:   call   7f9e <virtnet_poll+0x3de>
    0.00 :   7f9e:   jmp    7e8a <virtnet_poll+0x2ca>
    0.00 :   7fa3:   mov    -0x8(%rbx),%r13
    0.00 :   7fa7:   mov    %r13,%rdi
    0.00 :   7faa:   call   7faf <virtnet_poll+0x3ef>
    0.00 :   7faf:   mov    %r12d,%esi
    0.00 :   7fb2:   mov    %rbx,%rdi
    0.00 :   7fb5:   mov    %eax,%ebp
    0.00 :   7fb7:   call   7fbc <virtnet_poll+0x3fc>
    0.00 :   7fbc:   test   %al,%al
    0.00 :   7fbe:   je     8001 <virtnet_poll+0x441>
    0.00 :   7fc0:   mov    %ebp,%esi
    0.00 :   7fc2:   mov    %r13,%rdi
    0.00 :   7fc5:   call   7fca <virtnet_poll+0x40a>
    0.00 :   7fca:   test   %al,%al
    0.00 :   7fcc:   je     7e7e <virtnet_poll+0x2be>
    0.00 :   7fd2:   mov    %rbx,%rdi
    0.00 :   7fd5:   call   7fda <virtnet_poll+0x41a>
    0.00 :   7fda:   test   %al,%al
    0.00 :   7fdc:   je     7e7e <virtnet_poll+0x2be>
    0.00 :   7fe2:   mov    %r13,%rdi
    0.00 :   7fe5:   call   7fea <virtnet_poll+0x42a>
    0.00 :   7fea:   mov    %rbx,%rdi
    0.00 :   7fed:   call   7ff2 <virtnet_poll+0x432>
    0.00 :   7ff2:   jmp    7e7e <virtnet_poll+0x2be>
    0.00 :   7ff7:   call   7ffc <virtnet_poll+0x43c>
    0.00 :   7ffc:   jmp    7e70 <virtnet_poll+0x2b0>
    0.00 :   8001:   mov    %r13,%rdi
    0.00 :   8004:   call   8009 <virtnet_poll+0x449>
    0.00 :   8009:   jmp    7e7e <virtnet_poll+0x2be>
    0.00 :   800e:   mov    0x18(%rsp),%eax
    0.00 :   8012:   mov    -0x8(%rbx),%r9
    0.00 :   8016:   mov    %r8d,0xc(%rsp)
    0.00 :   801b:   mov    %r8d,%r12d
    0.00 :   801e:   mov    %eax,%ecx
    0.00 :   8020:   and    $0x1,%eax
    0.00 :   8023:   and    $0x2,%ecx
    0.00 :   8026:   mov    %eax,0x14(%rsp)
    0.00 :   802a:   mov    %ecx,0x10(%rsp)
    0.00 :   802e:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   8033:   mov    (%rbx),%rdi
    0.00 :   8036:   call   803b <virtnet_poll+0x47b>
    0.00 :   803b:   test   %al,%al
    0.00 :   803d:   je     7f50 <virtnet_poll+0x390>
    0.00 :   8043:   addq   $0x1,0x2b0(%rbx)
    0.00 :   804b:   jmp    7f50 <virtnet_poll+0x390>
    0.00 :   8050:   cltd
    0.00 :   8051:   idiv   %ebx
    0.00 :   8053:   mov    0x10(%r15),%rax
    0.00 :   8057:   lea    (%rdx,%rdx,4),%r13
    0.00 :   805b:   mov    %rdx,%rbx
    0.00 :   805e:   shl    $0x6,%r13
    0.00 :   8062:   add    0x400(%rax),%r13
    0.00 :   8069:   lea    0x80(%r13),%rdi
    0.00 :   8070:   call   8075 <virtnet_poll+0x4b5>
    0.00 :   8075:   mov    %ebp,0x84(%r13)
    0.00 :   807c:   jmp    7f35 <virtnet_poll+0x375>
    0.00 :   8081:   movl   $0x0,0x14(%rsp)
    0.00 :   8089:   xor    %r8d,%r8d
    0.00 :   808c:   xor    %r12d,%r12d
    0.00 :   808f:   movl   $0x0,0x10(%rsp)
    0.00 :   8097:   movl   $0x0,0xc(%rsp)
    0.00 :   809f:   jmp    7e0f <virtnet_poll+0x24f>
    0.00 :   80a4:   mov    0x0(%rip),%rsi        # 80ab <virtnet_poll+0x4eb>
    0.00 :   80ab:   lea    0x50(%rbp),%rdx
    0.00 :   80af:   xor    %ecx,%ecx
    0.00 :   80b1:   mov    $0x2000,%edi
    0.00 :   80b6:   call   80bb <virtnet_poll+0x4fb>
    0.00 :   80bb:   mov    (%rsp),%r8
    0.00 :   80bf:   jmp    7efd <virtnet_poll+0x33d>
    0.00 :   80c4:   movl   $0x0,0xc(%rsp)
    0.00 :   80cc:   xor    %r12d,%r12d
    0.00 :   80cf:   xor    %r8d,%r8d
    0.00 :   80d2:   movl   $0x0,0x14(%rsp)
    0.00 :   80da:   movl   $0x0,0x10(%rsp)
    0.00 :   80e2:   jmp    7e0f <virtnet_poll+0x24f>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

   71.89 libpq.so.private14-5.14[278f0]
   28.11 libpq.so.private14-5.14[27913]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (3 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000278f0 <resetPQExpBuffer@@Base>:
   71.89 :   278f0:  endbr64 // libpq.so.private14-5.14[278f0]
    0.00 :   278f4:  test   %rdi,%rdi
    0.00 :   278f7:  je     27918 <resetPQExpBuffer@@Base+0x28>
    0.00 :   278f9:  mov    (%rdi),%rax
    0.00 :   278fc:  lea    0x1f133(%rip),%rdx        # 46a36 <PQencryptPasswordConn@@Base+0x190b6>
    0.00 :   27903:  cmp    %rdx,%rax
    0.00 :   27906:  je     27920 <resetPQExpBuffer@@Base+0x30>
    0.00 :   27908:  movq   $0x0,0x8(%rdi)
    0.00 :   27910:  movb   $0x0,(%rax)
   28.11 :   27913:  ret // libpq.so.private14-5.14[27913]
    0.00 :   27914:  nopl   0x0(%rax)
    0.00 :   27918:  ret
    0.00 :   27919:  nopl   0x0(%rax)
    0.00 :   27920:  jmp    c260 <initPQExpBuffer@plt>

Sorted summary for file /usr/local/bin/dbt2-driver3
----------------------------------------------

   46.07 dbt2-driver3[4119fd]
   23.03 dbt2-driver3[411a7b]
   19.63 dbt2-driver3[411ba2]
   11.27 dbt2-driver3[411c00]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver3 for cycles (4 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004119fd <process_transaction>:
         : 6      process_transaction():
   46.07 :   4119fd: push   %rbp // dbt2-driver3[4119fd]
    0.00 :   4119fe: mov    %rsp,%rbp
    0.00 :   411a01: sub    $0x30,%rsp
    0.00 :   411a05: mov    %edi,-0x14(%rbp)
    0.00 :   411a08: mov    %rsi,-0x20(%rbp)
    0.00 :   411a0c: mov    %rdx,-0x28(%rbp)
    0.00 :   411a10: cmpl   $0xa,-0x14(%rbp)
    0.00 :   411a14: ja     411bc1 <process_transaction+0x1c4>
    0.00 :   411a1a: mov    -0x14(%rbp),%eax
    0.00 :   411a1d: mov    0x4176e8(,%rax,8),%rax
    0.00 :   411a25: jmp    *%rax
    0.00 :   411a27: mov    -0x20(%rbp),%rax
    0.00 :   411a2b: mov    0x30(%rax),%rcx
    0.00 :   411a2f: mov    -0x28(%rbp),%rdx
    0.00 :   411a33: mov    -0x20(%rbp),%rax
    0.00 :   411a37: mov    %rdx,%rsi
    0.00 :   411a3a: mov    %rax,%rdi
    0.00 :   411a3d: call   *%rcx
    0.00 :   411a3f: mov    %eax,-0x4(%rbp)
    0.00 :   411a42: jmp    411be6 <process_transaction+0x1e9>
    0.00 :   411a47: mov    -0x20(%rbp),%rax
    0.00 :   411a4b: mov    0x28(%rax),%rcx
    0.00 :   411a4f: mov    -0x28(%rbp),%rdx
    0.00 :   411a53: mov    -0x20(%rbp),%rax
    0.00 :   411a57: mov    %rdx,%rsi
    0.00 :   411a5a: mov    %rax,%rdi
    0.00 :   411a5d: call   *%rcx
    0.00 :   411a5f: mov    %eax,-0x4(%rbp)
    0.00 :   411a62: jmp    411be6 <process_transaction+0x1e9>
    0.00 :   411a67: mov    -0x28(%rbp),%rax
    0.00 :   411a6b: movl   $0x1,0x10(%rax)
    0.00 :   411a72: movl   $0x0,-0x8(%rbp)
    0.00 :   411a79: jmp    411ac1 <process_transaction+0xc4>
   23.03 :   411a7b: mov    -0x28(%rbp),%rcx // dbt2-driver3[411a7b]
    0.00 :   411a7f: mov    -0x8(%rbp),%eax
    0.00 :   411a82: movslq %eax,%rdx
    0.00 :   411a85: mov    %rdx,%rax
    0.00 :   411a88: add    %rax,%rax
    0.00 :   411a8b: add    %rdx,%rax
    0.00 :   411a8e: lea    0x0(,%rax,8),%rdx
    0.00 :   411a96: add    %rdx,%rax
    0.00 :   411a99: shl    $0x4,%rax
    0.00 :   411a9d: add    %rcx,%rax
    0.00 :   411aa0: add    $0x1c,%rax
    0.00 :   411aa4: mov    (%rax),%edx
    0.00 :   411aa6: mov    -0x28(%rbp),%rax
    0.00 :   411aaa: mov    (%rax),%eax
    0.00 :   411aac: cmp    %eax,%edx
    0.00 :   411aae: je     411abd <process_transaction+0xc0>
    0.00 :   411ab0: mov    -0x28(%rbp),%rax
    0.00 :   411ab4: movl   $0x0,0x10(%rax)
    0.00 :   411abb: jmp    411acd <process_transaction+0xd0>
    0.00 :   411abd: addl   $0x1,-0x8(%rbp)
    0.00 :   411ac1: mov    -0x28(%rbp),%rax
    0.00 :   411ac5: mov    0xc(%rax),%eax
    0.00 :   411ac8: cmp    %eax,-0x8(%rbp)
    0.00 :   411acb: jl     411a7b <process_transaction+0x7e>
    0.00 :   411acd: mov    -0x20(%rbp),%rax
    0.00 :   411ad1: mov    0x38(%rax),%rcx
    0.00 :   411ad5: mov    -0x28(%rbp),%rdx
    0.00 :   411ad9: mov    -0x20(%rbp),%rax
    0.00 :   411add: mov    %rdx,%rsi
    0.00 :   411ae0: mov    %rax,%rdi
    0.00 :   411ae3: call   *%rcx
    0.00 :   411ae5: mov    %eax,-0x4(%rbp)
    0.00 :   411ae8: cmpl   $0x0,-0x4(%rbp)
    0.00 :   411aec: je     411b61 <process_transaction+0x164>
    0.00 :   411aee: mov    -0x28(%rbp),%rax
    0.00 :   411af2: mov    0x19d8(%rax),%eax
    0.00 :   411af8: test   %eax,%eax
    0.00 :   411afa: jne    411b61 <process_transaction+0x164>
    0.00 :   411afc: mov    -0x28(%rbp),%rax
    0.00 :   411b00: movsd  0x1970(%rax),%xmm1
    0.00 :   411b08: mov    -0x28(%rbp),%rax
    0.00 :   411b0c: movsd  0x19d0(%rax),%xmm2
    0.00 :   411b14: movsd  0x5c24(%rip),%xmm0        # 417740 <s_dist+0x100>
    0.00 :   411b1c: subsd  %xmm2,%xmm0
    0.00 :   411b20: mulsd  %xmm0,%xmm1
    0.00 :   411b24: mov    -0x28(%rbp),%rax
    0.00 :   411b28: movsd  0x1978(%rax),%xmm2
    0.00 :   411b30: movsd  0x5c08(%rip),%xmm0        # 417740 <s_dist+0x100>
    0.00 :   411b38: addsd  %xmm0,%xmm2
    0.00 :   411b3c: mov    -0x28(%rbp),%rax
    0.00 :   411b40: movsd  0x1980(%rax),%xmm0
    0.00 :   411b48: addsd  %xmm2,%xmm0
    0.00 :   411b4c: mulsd  %xmm1,%xmm0
    0.00 :   411b50: mov    -0x28(%rbp),%rax
    0.00 :   411b54: movsd  %xmm0,0x1970(%rax)
    0.00 :   411b5c: jmp    411be6 <process_transaction+0x1e9>
    0.00 :   411b61: movl   $0x0,-0x4(%rbp)
    0.00 :   411b68: jmp    411be6 <process_transaction+0x1e9>
    0.00 :   411b6a: mov    -0x20(%rbp),%rax
    0.00 :   411b6e: mov    0x40(%rax),%rcx
    0.00 :   411b72: mov    -0x28(%rbp),%rdx
    0.00 :   411b76: mov    -0x20(%rbp),%rax
    0.00 :   411b7a: mov    %rdx,%rsi
    0.00 :   411b7d: mov    %rax,%rdi
    0.00 :   411b80: call   *%rcx
    0.00 :   411b82: mov    %eax,-0x4(%rbp)
    0.00 :   411b85: jmp    411be6 <process_transaction+0x1e9>
    0.00 :   411b87: mov    -0x20(%rbp),%rax
    0.00 :   411b8b: mov    0x48(%rax),%rcx
    0.00 :   411b8f: mov    -0x28(%rbp),%rdx
    0.00 :   411b93: mov    -0x20(%rbp),%rax
    0.00 :   411b97: mov    %rdx,%rsi
    0.00 :   411b9a: mov    %rax,%rdi
    0.00 :   411b9d: call   *%rcx
    0.00 :   411b9f: mov    %eax,-0x4(%rbp)
   19.63 :   411ba2: jmp    411be6 <process_transaction+0x1e9> // dbt2-driver3[411ba2]
    0.00 :   411ba4: mov    -0x20(%rbp),%rax
    0.00 :   411ba8: mov    0x50(%rax),%rcx
    0.00 :   411bac: mov    -0x28(%rbp),%rdx
    0.00 :   411bb0: mov    -0x20(%rbp),%rax
    0.00 :   411bb4: mov    %rdx,%rsi
    0.00 :   411bb7: mov    %rax,%rdi
    0.00 :   411bba: call   *%rcx
    0.00 :   411bbc: mov    %eax,-0x4(%rbp)
    0.00 :   411bbf: jmp    411be6 <process_transaction+0x1e9>
    0.00 :   411bc1: mov    -0x14(%rbp),%eax
    0.00 :   411bc4: mov    %eax,%ecx
    0.00 :   411bc6: mov    $0x4176ae,%edx
    0.00 :   411bcb: mov    $0x81,%esi
    0.00 :   411bd0: mov    $0x4176ca,%edi
    0.00 :   411bd5: mov    $0x0,%eax
    0.00 :   411bda: call   4083bf <log_error_message>
    0.00 :   411bdf: mov    $0x0,%eax
    0.00 :   411be4: jmp    411c19 <process_transaction+0x21c>
    0.00 :   411be6: cmpl   $0x1,-0x4(%rbp)
    0.00 :   411bea: jne    411c02 <process_transaction+0x205>
    0.00 :   411bec: mov    -0x20(%rbp),%rax
    0.00 :   411bf0: mov    0x10(%rax),%rdx
    0.00 :   411bf4: mov    -0x20(%rbp),%rax
    0.00 :   411bf8: mov    %rax,%rdi
    0.00 :   411bfb: call   *%rdx
    0.00 :   411bfd: mov    %eax,-0xc(%rbp)
   11.27 :   411c00: jmp    411c16 <process_transaction+0x219> // dbt2-driver3[411c00]
    0.00 :   411c02: mov    -0x20(%rbp),%rax
    0.00 :   411c06: mov    0x20(%rax),%rdx
    0.00 :   411c0a: mov    -0x20(%rbp),%rax
    0.00 :   411c0e: mov    %rax,%rdi
    0.00 :   411c11: call   *%rdx
    0.00 :   411c13: mov    %eax,-0xc(%rbp)
    0.00 :   411c16: mov    -0xc(%rbp),%eax
    0.00 :   411c19: leave
    0.00 :   411c1a: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   67.63 libc.so.6[ff1ec]
   32.37 libc.so.6[ff1d0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000ff1d0 <__poll>:
         : 6     __libc_poll():
   32.37 :   ff1d0:  endbr64 // libc.so.6[ff1d0]
    0.00 :   ff1d4:  cmpb   $0x0,0xdc41d(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   ff1db:  je     ff1f0 <__poll+0x20>
    0.00 :   ff1dd:  mov    $0x7,%eax
    0.00 :   ff1e2:  syscall
    0.00 :   ff1e4:  cmp    $0xfffffffffffff000,%rax
    0.00 :   ff1ea:  ja     ff240 <__poll+0x70>
   67.63 :   ff1ec:  ret // libc.so.6[ff1ec]
    0.00 :   ff1ed:  nopl   (%rax)
    0.00 :   ff1f0:  sub    $0x28,%rsp
    0.00 :   ff1f4:  mov    %edx,0x1c(%rsp)
    0.00 :   ff1f8:  mov    %rsi,0x10(%rsp)
    0.00 :   ff1fd:  mov    %rdi,0x8(%rsp)
    0.00 :   ff202:  call   875c0 <__GI___pthread_enable_asynccancel>
    0.00 :   ff207:  mov    0x1c(%rsp),%edx
    0.00 :   ff20b:  mov    0x10(%rsp),%rsi
    0.00 :   ff210:  mov    %eax,%r8d
    0.00 :   ff213:  mov    0x8(%rsp),%rdi
    0.00 :   ff218:  mov    $0x7,%eax
    0.00 :   ff21d:  syscall
    0.00 :   ff21f:  cmp    $0xfffffffffffff000,%rax
    0.00 :   ff225:  ja     ff258 <__poll+0x88>
    0.00 :   ff227:  mov    %r8d,%edi
    0.00 :   ff22a:  mov    %eax,0x8(%rsp)
    0.00 :   ff22e:  call   87640 <__GI___pthread_disable_asynccancel>
    0.00 :   ff233:  mov    0x8(%rsp),%eax
    0.00 :   ff237:  add    $0x28,%rsp
    0.00 :   ff23b:  ret
    0.00 :   ff23c:  nopl   0x0(%rax)
    0.00 :   ff240:  mov    0xd3bc9(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   ff247:  neg    %eax
    0.00 :   ff249:  mov    %eax,%fs:(%rdx)
    0.00 :   ff24c:  mov    $0xffffffff,%eax
    0.00 :   ff251:  ret
    0.00 :   ff252:  nopw   0x0(%rax,%rax,1)
    0.00 :   ff258:  mov    0xd3bb1(%rip),%rdx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   ff25f:  neg    %eax
    0.00 :   ff261:  mov    %eax,%fs:(%rdx)
    0.00 :   ff264:  mov    $0xffffffff,%eax
    0.00 :   ff269:  jmp    ff227 <__poll+0x57>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

   36.87 libc.so.6[5db7a]
   34.64 libc.so.6[5eb57]
   28.49 libc.so.6[5f9c4]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (3 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000005d910 <__vfprintf_internal>:
         : 6     __vfprintf_internal():
    0.00 :   5d910:  endbr64
    0.00 :   5d914:  push   %r15
    0.00 :   5d916:  push   %r14
    0.00 :   5d918:  push   %r13
    0.00 :   5d91a:  push   %r12
    0.00 :   5d91c:  mov    %rdx,%r12
    0.00 :   5d91f:  push   %rbp
    0.00 :   5d920:  push   %rbx
    0.00 :   5d921:  mov    %rdi,%rbx
    0.00 :   5d924:  sub    $0x508,%rsp
    0.00 :   5d92b:  mov    %rsi,(%rsp)
    0.00 :   5d92f:  mov    %ecx,0x3c(%rsp)
    0.00 :   5d933:  mov    %fs:0x28,%rax
    0.00 :   5d93c:  mov    %rax,0x4f8(%rsp)
    0.00 :   5d944:  mov    0x1754c5(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5d94b:  mov    %fs:(%rax),%eax
    0.00 :   5d94e:  mov    %eax,0x54(%rsp)
    0.00 :   5d952:  mov    0xc0(%rdi),%eax
    0.00 :   5d958:  test   %eax,%eax
    0.00 :   5d95a:  jne    5dc20 <__vfprintf_internal+0x310>
    0.00 :   5d960:  movl   $0xffffffff,0xc0(%rdi)
    0.00 :   5d96a:  mov    (%rbx),%ebp
    0.00 :   5d96c:  test   $0x8,%bpl
    0.00 :   5d970:  jne    5fbb4 <__vfprintf_internal+0x22a4>
    0.00 :   5d976:  cmpq   $0x0,(%rsp)
    0.00 :   5d97b:  je     5fce0 <__vfprintf_internal+0x23d0>
    0.00 :   5d981:  test   $0x2,%bpl
    0.00 :   5d985:  jne    5eee8 <__vfprintf_internal+0x15d8>
    0.00 :   5d98b:  movdqu (%r12),%xmm1
    0.00 :   5d991:  mov    (%rsp),%rdi
    0.00 :   5d995:  mov    $0x25,%esi
    0.00 :   5d99a:  movups %xmm1,0xe8(%rsp)
    0.00 :   5d9a2:  mov    0x10(%r12),%rax
    0.00 :   5d9a7:  mov    %rax,0xf8(%rsp)
    0.00 :   5d9af:  call   264d0 <*ABS*+0x9fc40@plt>
    0.00 :   5d9b4:  and    $0x8000,%ebp
    0.00 :   5d9ba:  movb   $0x0,0x7a(%rsp)
    0.00 :   5d9bf:  mov    %rax,0x40(%rsp)
    0.00 :   5d9c4:  mov    %rax,0x80(%rsp)
    0.00 :   5d9cc:  mov    %rbx,0xc8(%rsp)
    0.00 :   5d9d4:  je     5dc38 <__vfprintf_internal+0x328>
    0.00 :   5d9da:  mov    (%rsp),%rax
    0.00 :   5d9de:  mov    0x40(%rsp),%r13
    0.00 :   5d9e3:  lea    0x172016(%rip),%rdi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5d9ea:  mov    0xd8(%rbx),%rbp
    0.00 :   5d9f1:  sub    %rax,%r13
    0.00 :   5d9f4:  lea    0x172d6d(%rip),%rax        # 1d0768 <__stop___libc_IO_vtables>
    0.00 :   5d9fb:  sub    %rdi,%rax
    0.00 :   5d9fe:  mov    %rax,0x10(%rsp)
    0.00 :   5da03:  mov    %rax,%rsi
    0.00 :   5da06:  mov    %rbp,%rax
    0.00 :   5da09:  sub    %rdi,%rax
    0.00 :   5da0c:  cmp    %rsi,%rax
    0.00 :   5da0f:  jae    5f1f0 <__vfprintf_internal+0x18e0>
    0.00 :   5da15:  mov    (%rsp),%rsi
    0.00 :   5da19:  mov    %r13,%rdx
    0.00 :   5da1c:  mov    %rbx,%rdi
    0.00 :   5da1f:  call   *0x38(%rbp)
    0.00 :   5da22:  cmp    %rax,%r13
    0.00 :   5da25:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5da2b:  movslq %r13d,%rdx
    0.00 :   5da2e:  mov    %r13,%rax
    0.00 :   5da31:  movslq %r13d,%rbp
    0.00 :   5da34:  shr    $0x3f,%rax
    0.00 :   5da38:  cmp    %rdx,%r13
    0.00 :   5da3b:  mov    $0x1,%edx
    0.00 :   5da40:  cmovne %edx,%eax
    0.00 :   5da43:  test   %eax,%eax
    0.00 :   5da45:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5da4b:  test   %r13d,%r13d
    0.00 :   5da4e:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5da54:  mov    0x80(%rsp),%r13
    0.00 :   5da5c:  cmpb   $0x0,0x0(%r13)
    0.00 :   5da61:  je     5db32 <__vfprintf_internal+0x222>
    0.00 :   5da67:  mov    0x177f32(%rip),%rsi        # 1d59a0 <__printf_function_table>
    0.00 :   5da6e:  mov    %rsi,0x68(%rsp)
    0.00 :   5da73:  test   %rsi,%rsi
    0.00 :   5da76:  jne    5f710 <__vfprintf_internal+0x1e00>
    0.00 :   5da7c:  cmpq   $0x0,0x177f0c(%rip)        # 1d5990 <__printf_modifier_table>
    0.00 :   5da84:  jne    5f760 <__vfprintf_internal+0x1e50>
    0.00 :   5da8a:  cmpq   $0x0,0x176e26(%rip)        # 1d48b8 <__printf_va_arg_table>
    0.00 :   5da92:  movl   $0x0,0x7c(%rsp)
    0.00 :   5da9a:  jne    5f830 <__vfprintf_internal+0x1f20>
    0.00 :   5daa0:  movl   $0x0,0x4c(%rsp)
    0.00 :   5daa8:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5dab1:  nopl   0x0(%rax)
    0.00 :   5dab8:  movzbl 0x1(%r13),%r9d
    0.00 :   5dabd:  lea    0x1(%r13),%rax
    0.00 :   5dac1:  mov    %rax,0x80(%rsp)
    0.00 :   5dac9:  lea    -0x20(%r9),%eax
    0.00 :   5dacd:  cmp    $0x5a,%al
    0.00 :   5dacf:  jbe    5dba0 <__vfprintf_internal+0x290>
    0.00 :   5dad5:  endbr64
    0.00 :   5dad9:  test   %r9b,%r9b
    0.00 :   5dadc:  je     5f4b8 <__vfprintf_internal+0x1ba8>
    0.00 :   5dae2:  mov    0x4c(%rsp),%eax
    0.00 :   5dae6:  sub    $0x8,%rsp
    0.00 :   5daea:  mov    %ebp,%r9d
    0.00 :   5daed:  mov    0x44(%rsp),%edi
    0.00 :   5daf1:  push   %rdi
    0.00 :   5daf2:  mov    %rbx,%rdi
    0.00 :   5daf5:  push   0x78(%rsp)
    0.00 :   5daf9:  push   0x78(%rsp)
    0.00 :   5dafd:  mov    0x74(%rsp),%ecx
    0.00 :   5db01:  push   %rcx
    0.00 :   5db02:  mov    %r12,%rcx
    0.00 :   5db05:  lea    0x138(%rsp),%rdx
    0.00 :   5db0d:  push   %rdx
    0.00 :   5db0e:  push   0x70(%rsp)
    0.00 :   5db12:  push   %rax
    0.00 :   5db13:  mov    0xbc(%rsp),%edx
    0.00 :   5db1a:  mov    0x40(%rsp),%rsi
    0.00 :   5db1f:  lea    0x128(%rsp),%r8
    0.00 :   5db27:  call   5b410 <printf_positional>
    0.00 :   5db2c:  add    $0x40,%rsp
    0.00 :   5db30:  mov    %eax,%ebp
    0.00 :   5db32:  testl  $0x8000,(%rbx)
    0.00 :   5db38:  je     5db70 <__vfprintf_internal+0x260>
    0.00 :   5db3a:  cmpb   $0x0,0x7a(%rsp)
    0.00 :   5db3f:  jne    5dca0 <__vfprintf_internal+0x390>
    0.00 :   5db45:  mov    0x4f8(%rsp),%rax
    0.00 :   5db4d:  sub    %fs:0x28,%rax
    0.00 :   5db56:  jne    5fdb4 <__vfprintf_internal+0x24a4>
    0.00 :   5db5c:  add    $0x508,%rsp
    0.00 :   5db63:  mov    %ebp,%eax
    0.00 :   5db65:  pop    %rbx
    0.00 :   5db66:  pop    %rbp
    0.00 :   5db67:  pop    %r12
    0.00 :   5db69:  pop    %r13
    0.00 :   5db6b:  pop    %r14
    0.00 :   5db6d:  pop    %r15
    0.00 :   5db6f:  ret
    0.00 :   5db70:  mov    0x88(%rbx),%rdi
    0.00 :   5db77:  mov    0x4(%rdi),%eax
   36.87 :   5db7a:  sub    $0x1,%eax // libc.so.6[5db7a]
    0.00 :   5db7d:  mov    %eax,0x4(%rdi)
    0.00 :   5db80:  jne    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db82:  movq   $0x0,0x8(%rdi)
    0.00 :   5db8a:  xchg   %eax,(%rdi)
    0.00 :   5db8c:  cmp    $0x1,%eax
    0.00 :   5db8f:  jle    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db91:  call   87f80 <__lll_lock_wake_private>
    0.00 :   5db96:  jmp    5db3a <__vfprintf_internal+0x22a>
    0.00 :   5db98:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dba0:  movzbl %r9b,%eax
    0.00 :   5dba4:  lea    0x1325f5(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5dbab:  lea    0x13256e(%rip),%rsi        # 190120 <step0_jumps.9>
    0.00 :   5dbb2:  movl   $0x0,0x50(%rsp)
    0.00 :   5dbba:  sub    $0x20,%eax
    0.00 :   5dbbd:  movl   $0x0,0x18(%rsp)
    0.00 :   5dbc5:  xor    %r14d,%r14d
    0.00 :   5dbc8:  xor    %r13d,%r13d
    0.00 :   5dbcb:  cltq
    0.00 :   5dbcd:  movl   $0x0,0x8(%rsp)
    0.00 :   5dbd5:  xor    %r10d,%r10d
    0.00 :   5dbd8:  xor    %r15d,%r15d
    0.00 :   5dbdb:  movzbl (%rcx,%rax,1),%eax
    0.00 :   5dbdf:  lea    -0x111(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5dbe6:  movl   $0x0,0x30(%rsp)
    0.00 :   5dbee:  mov    $0xffffffff,%r11d
    0.00 :   5dbf4:  movl   $0x0,0x20(%rsp)
    0.00 :   5dbfc:  movslq (%rsi,%rax,4),%rax
    0.00 :   5dc00:  movl   $0x0,0x38(%rsp)
    0.00 :   5dc08:  movl   $0x0,0x48(%rsp)
    0.00 :   5dc10:  add    %rcx,%rax
    0.00 :   5dc13:  movb   $0x20,0x34(%rsp)
    0.00 :   5dc18:  jmp    *%rax
    0.00 :   5dc1a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5dc20:  cmp    $0xffffffff,%eax
    0.00 :   5dc23:  je     5d96a <__vfprintf_internal+0x5a>
    0.00 :   5dc29:  mov    $0xffffffff,%ebp
    0.00 :   5dc2e:  jmp    5db45 <__vfprintf_internal+0x235>
    0.00 :   5dc33:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dc38:  mov    0x175301(%rip),%rax        # 1d2f40 <_IO_funlockfile@@GLIBC_2.2.5+0x17fd00>
    0.00 :   5dc3f:  lea    0xc0(%rsp),%rdi
    0.00 :   5dc47:  mov    %rax,0xc0(%rsp)
    0.00 :   5dc4f:  call   87df0 <__GI___libc_cleanup_push_defer>
    0.00 :   5dc54:  mov    (%rbx),%eax
    0.00 :   5dc56:  and    $0x8000,%eax
    0.00 :   5dc5b:  jne    5dc91 <__vfprintf_internal+0x381>
    0.00 :   5dc5d:  mov    %fs:0x10,%rbp
    0.00 :   5dc66:  mov    0x88(%rbx),%rdi
    0.00 :   5dc6d:  cmp    %rbp,0x8(%rdi)
    0.00 :   5dc71:  je     5dc8d <__vfprintf_internal+0x37d>
    0.00 :   5dc73:  mov    $0x1,%edx
    0.00 :   5dc78:  lock cmpxchg %edx,(%rdi)
    0.00 :   5dc7c:  jne    5f60a <__vfprintf_internal+0x1cfa>
    0.00 :   5dc82:  mov    0x88(%rbx),%rdi
    0.00 :   5dc89:  mov    %rbp,0x8(%rdi)
    0.00 :   5dc8d:  addl   $0x1,0x4(%rdi)
    0.00 :   5dc91:  movb   $0x1,0x7a(%rsp)
    0.00 :   5dc96:  jmp    5d9da <__vfprintf_internal+0xca>
    0.00 :   5dc9b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5dca0:  lea    0xc0(%rsp),%rdi
    0.00 :   5dca8:  call   87e40 <__GI___libc_cleanup_pop_restore>
    0.00 :   5dcad:  jmp    5db45 <__vfprintf_internal+0x235>
    0.00 :   5dcb2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5dcb8:  endbr64
    0.00 :   5dcbc:  endbr64
    0.00 :   5dcc0:  testb  $0x1,0x3c(%rsp)
    0.00 :   5dcc5:  jne    5fa38 <__vfprintf_internal+0x2128>
    0.00 :   5dccb:  mov    %r10d,%edx
    0.00 :   5dcce:  and    $0x1,%edx
    0.00 :   5dcd1:  mov    0x18(%rsp),%eax
    0.00 :   5dcd5:  movzbl %dl,%edx
    0.00 :   5dcd8:  movsbl %r9b,%r9d
    0.00 :   5dcdc:  movl   $0x0,0xac(%rsp)
    0.00 :   5dce7:  mov    %r11d,0xa0(%rsp)
    0.00 :   5dcef:  mov    %eax,0xa4(%rsp)
    0.00 :   5dcf6:  lea    0x0(%r13,%r13,1),%eax
    0.00 :   5dcfb:  or     %edx,%eax
    0.00 :   5dcfd:  movzwl 0x8(%rsp),%edx
    0.00 :   5dd02:  mov    %r9d,0xa8(%rsp)
    0.00 :   5dd0a:  shl    $0x2,%edx
    0.00 :   5dd0d:  or     %edx,%eax
    0.00 :   5dd0f:  movzwl 0x48(%rsp),%edx
    0.00 :   5dd14:  shl    $0x3,%edx
    0.00 :   5dd17:  or     %edx,%eax
    0.00 :   5dd19:  movzwl 0x38(%rsp),%edx
    0.00 :   5dd1e:  shl    $0x4,%edx
    0.00 :   5dd21:  or     %edx,%eax
    0.00 :   5dd23:  movzwl 0x20(%rsp),%edx
    0.00 :   5dd28:  shl    $0x5,%edx
    0.00 :   5dd2b:  or     %edx,%eax
    0.00 :   5dd2d:  movzwl 0x30(%rsp),%edx
    0.00 :   5dd32:  shl    $0x6,%edx
    0.00 :   5dd35:  or     %edx,%eax
    0.00 :   5dd37:  mov    %r15d,%edx
    0.00 :   5dd3a:  shl    $0x7,%edx
    0.00 :   5dd3d:  or     %edx,%eax
    0.00 :   5dd3f:  movzwl 0x50(%rsp),%edx
    0.00 :   5dd44:  shl    $0xb,%edx
    0.00 :   5dd47:  or     %edx,%eax
    0.00 :   5dd49:  and    $0x8ff,%ax
    0.00 :   5dd4d:  mov    %ax,0xac(%rsp)
    0.00 :   5dd55:  movzbl 0x34(%rsp),%eax
    0.00 :   5dd5a:  mov    %eax,0xb0(%rsp)
    0.00 :   5dd61:  test   %r10d,%r10d
    0.00 :   5dd64:  je     5f0b0 <__vfprintf_internal+0x17a0>
    0.00 :   5dd6a:  testb  $0x8,0x3c(%rsp)
    0.00 :   5dd6f:  je     5f440 <__vfprintf_internal+0x1b30>
    0.00 :   5dd75:  orb    $0x10,0xad(%rsp)
    0.00 :   5dd7d:  mov    0x4(%r12),%edx
    0.00 :   5dd82:  cmp    $0xaf,%edx
    0.00 :   5dd88:  ja     5f973 <__vfprintf_internal+0x2063>
    0.00 :   5dd8e:  mov    %edx,%eax
    0.00 :   5dd90:  add    $0x10,%edx
    0.00 :   5dd93:  add    0x10(%r12),%rax
    0.00 :   5dd98:  mov    %edx,0x4(%r12)
    0.00 :   5dd9d:  movdqa (%rax),%xmm2
    0.00 :   5dda1:  movaps %xmm2,0x90(%rsp)
    0.00 :   5dda9:  jmp    5f0dc <__vfprintf_internal+0x17cc>
    0.00 :   5ddae:  xchg   %ax,%ax
    0.00 :   5ddb0:  endbr64
    0.00 :   5ddb4:  mov    (%r12),%eax
    0.00 :   5ddb8:  lea    0xe0(%rsp),%rcx
    0.00 :   5ddc0:  movq   $0x0,0xe0(%rsp)
    0.00 :   5ddcc:  cmp    $0x2f,%eax
    0.00 :   5ddcf:  ja     5f2c0 <__vfprintf_internal+0x19b0>
    0.00 :   5ddd5:  mov    %eax,%edx
    0.00 :   5ddd7:  add    $0x8,%eax
    0.00 :   5ddda:  add    0x10(%r12),%rdx
    0.00 :   5dddf:  mov    %eax,(%r12)
    0.00 :   5dde3:  mov    (%rdx),%esi
    0.00 :   5dde5:  lea    0x100(%rsp),%r13
    0.00 :   5dded:  mov    %rcx,%rdx
    0.00 :   5ddf0:  mov    %r13,%rdi
    0.00 :   5ddf3:  call   b4550 <wcrtomb>
    0.00 :   5ddf8:  mov    %rax,%r14
    0.00 :   5ddfb:  cmp    $0xffffffffffffffff,%rax
    0.00 :   5ddff:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5de05:  mov    0x18(%rsp),%r15d
    0.00 :   5de0a:  mov    0x20(%rsp),%edx
    0.00 :   5de0e:  sub    %eax,%r15d
    0.00 :   5de11:  test   %edx,%edx
    0.00 :   5de13:  jne    5de1e <__vfprintf_internal+0x50e>
    0.00 :   5de15:  test   %r15d,%r15d
    0.00 :   5de18:  jg     5f53f <__vfprintf_internal+0x1c2f>
    0.00 :   5de1e:  mov    0xd8(%rbx),%rax
    0.00 :   5de25:  lea    0x171bd4(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5de2c:  mov    0x10(%rsp),%rsi
    0.00 :   5de31:  mov    %rax,%rdx
    0.00 :   5de34:  sub    %rcx,%rdx
    0.00 :   5de37:  cmp    %rsi,%rdx
    0.00 :   5de3a:  jae    5fb10 <__vfprintf_internal+0x2200>
    0.00 :   5de40:  mov    %r14,%rdx
    0.00 :   5de43:  mov    %r13,%rsi
    0.00 :   5de46:  mov    %rbx,%rdi
    0.00 :   5de49:  call   *0x38(%rax)
    0.00 :   5de4c:  cmp    %rax,%r14
    0.00 :   5de4f:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5de55:  mov    %r14,%rax
    0.00 :   5de58:  xor    %edx,%edx
    0.00 :   5de5a:  add    %rbp,%rax
    0.00 :   5de5d:  js     5fdf5 <__vfprintf_internal+0x24e5>
    0.00 :   5de63:  cmp    %rbp,%rax
    0.00 :   5de66:  jb     5fdf5 <__vfprintf_internal+0x24e5>
    0.00 :   5de6c:  movslq %eax,%rcx
    0.00 :   5de6f:  mov    %eax,%ebp
    0.00 :   5de71:  cmp    %rcx,%rax
    0.00 :   5de74:  mov    $0x1,%ecx
    0.00 :   5de79:  cmovne %ecx,%edx
    0.00 :   5de7c:  test   %edx,%edx
    0.00 :   5de7e:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5de84:  test   %eax,%eax
    0.00 :   5de86:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5de8c:  test   %r15d,%r15d
    0.00 :   5de8f:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5de91:  testb  $0x1,0x20(%rsp)
    0.00 :   5de96:  jne    5fa42 <__vfprintf_internal+0x2132>
    0.00 :   5de9c:  nopl   0x0(%rax)
    0.00 :   5dea0:  mov    0x80(%rsp),%rax
    0.00 :   5dea8:  mov    $0x25,%esi
    0.00 :   5dead:  addl   $0x1,0x4c(%rsp)
    0.00 :   5deb2:  lea    0x1(%rax),%r14
    0.00 :   5deb6:  mov    %r14,%rdi
    0.00 :   5deb9:  call   264d0 <*ABS*+0x9fc40@plt>
    0.00 :   5debe:  lea    0x171b3b(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5dec5:  mov    0x10(%rsp),%rsi
    0.00 :   5deca:  mov    %rax,%r15
    0.00 :   5decd:  mov    %rax,0x80(%rsp)
    0.00 :   5ded5:  mov    %rax,%r13
    0.00 :   5ded8:  mov    0xd8(%rbx),%rax
    0.00 :   5dedf:  sub    %r14,%r15
    0.00 :   5dee2:  mov    %rax,%rdx
    0.00 :   5dee5:  sub    %rcx,%rdx
    0.00 :   5dee8:  cmp    %rsi,%rdx
    0.00 :   5deeb:  jae    5efb0 <__vfprintf_internal+0x16a0>
    0.00 :   5def1:  mov    %r15,%rdx
    0.00 :   5def4:  mov    %r14,%rsi
    0.00 :   5def7:  mov    %rbx,%rdi
    0.00 :   5defa:  call   *0x38(%rax)
    0.00 :   5defd:  cmp    %rax,%r15
    0.00 :   5df00:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5df06:  movslq %ebp,%rax
    0.00 :   5df09:  xor    %edx,%edx
    0.00 :   5df0b:  add    %r15,%rax
    0.00 :   5df0e:  js     5fdaa <__vfprintf_internal+0x249a>
    0.00 :   5df14:  cmp    %r15,%rax
    0.00 :   5df17:  jb     5fdaa <__vfprintf_internal+0x249a>
    0.00 :   5df1d:  movslq %eax,%rcx
    0.00 :   5df20:  movslq %eax,%rbp
    0.00 :   5df23:  cmp    %rcx,%rax
    0.00 :   5df26:  mov    $0x1,%ecx
    0.00 :   5df2b:  cmovne %ecx,%edx
    0.00 :   5df2e:  test   %edx,%edx
    0.00 :   5df30:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5df36:  test   %eax,%eax
    0.00 :   5df38:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5df3e:  cmpb   $0x0,0x0(%r13)
    0.00 :   5df43:  jne    5dab8 <__vfprintf_internal+0x1a8>
    0.00 :   5df49:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5df4e:  xchg   %ax,%ax
    0.00 :   5df50:  endbr64
    0.00 :   5df54:  mov    0x80(%rsp),%rax
    0.00 :   5df5c:  movzbl 0x1(%rax),%r9d
    0.00 :   5df61:  lea    0x1(%rax),%rdx
    0.00 :   5df65:  mov    %rdx,0x80(%rsp)
    0.00 :   5df6d:  lea    -0x20(%r9),%eax
    0.00 :   5df71:  cmp    $0x5a,%al
    0.00 :   5df73:  ja     5f480 <__vfprintf_internal+0x1b70>
    0.00 :   5df79:  movzbl %r9b,%eax
    0.00 :   5df7d:  lea    0x13221c(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5df84:  lea    0x132195(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5df8b:  movl   $0x1,0x38(%rsp)
    0.00 :   5df93:  sub    $0x20,%eax
    0.00 :   5df96:  lea    -0x4c8(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5df9d:  cltq
    0.00 :   5df9f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5dfa3:  movslq (%rcx,%rax,4),%rax
    0.00 :   5dfa7:  add    %rsi,%rax
    0.00 :   5dfaa:  jmp    *%rax
    0.00 :   5dfac:  nopl   0x0(%rax)
    0.00 :   5dfb0:  endbr64
    0.00 :   5dfb4:  mov    0x8(%rsp),%r8d
    0.00 :   5dfb9:  test   %r8d,%r8d
    0.00 :   5dfbc:  jne    5ddb0 <__vfprintf_internal+0x4a0>
    0.00 :   5dfc2:  mov    0x18(%rsp),%r13d
    0.00 :   5dfc7:  mov    0x20(%rsp),%edi
    0.00 :   5dfcb:  sub    $0x1,%r13d
    0.00 :   5dfcf:  test   %edi,%edi
    0.00 :   5dfd1:  je     5f588 <__vfprintf_internal+0x1c78>
    0.00 :   5dfd7:  mov    (%r12),%eax
    0.00 :   5dfdb:  cmp    $0x2f,%eax
    0.00 :   5dfde:  ja     5f518 <__vfprintf_internal+0x1c08>
    0.00 :   5dfe4:  mov    %eax,%edx
    0.00 :   5dfe6:  add    $0x8,%eax
    0.00 :   5dfe9:  add    0x10(%r12),%rdx
    0.00 :   5dfee:  mov    %eax,(%r12)
    0.00 :   5dff2:  mov    (%rdx),%edx
    0.00 :   5dff4:  mov    0x28(%rbx),%rax
    0.00 :   5dff8:  cmp    0x30(%rbx),%rax
    0.00 :   5dffc:  jae    5fc55 <__vfprintf_internal+0x2345>
    0.00 :   5e002:  lea    0x1(%rax),%rcx
    0.00 :   5e006:  mov    %rcx,0x28(%rbx)
    0.00 :   5e00a:  mov    %dl,(%rax)
    0.00 :   5e00c:  cmp    $0x7fffffff,%ebp
    0.00 :   5e012:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5e014:  mov    0x20(%rsp),%esi
    0.00 :   5e018:  add    $0x1,%ebp
    0.00 :   5e01b:  test   %esi,%esi
    0.00 :   5e01d:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e023:  test   %r13d,%r13d
    0.00 :   5e026:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e02c:  movslq %r13d,%r14
    0.00 :   5e02f:  mov    $0x20,%esi
    0.00 :   5e034:  mov    %rbx,%rdi
    0.00 :   5e037:  mov    %r14,%rdx
    0.00 :   5e03a:  call   78be0 <_IO_padn>
    0.00 :   5e03f:  cmp    %rax,%r14
    0.00 :   5e042:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e044:  add    %r13d,%ebp
    0.00 :   5e047:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5e049:  cmp    %r13d,%ebp
    0.00 :   5e04c:  jae    5f12a <__vfprintf_internal+0x181a>
    0.00 :   5e052:  nopw   0x0(%rax,%rax,1)
    0.00 :   5e058:  mov    0x174db1(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5e05f:  movl   $0x4b,%fs:(%rax)
    0.00 :   5e066:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5e070:  mov    $0xffffffff,%ebp
    0.00 :   5e075:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e07a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5e080:  endbr64
    0.00 :   5e084:  mov    0x48(%rsp),%r10d
    0.00 :   5e089:  mov    %r9b,0x28(%rsp)
    0.00 :   5e08e:  mov    %r11d,0x8(%rsp)
    0.00 :   5e093:  test   %r10d,%r10d
    0.00 :   5e096:  jne    5f498 <__vfprintf_internal+0x1b88>
    0.00 :   5e09c:  mov    0x54(%rsp),%edi
    0.00 :   5e0a0:  lea    0x110(%rsp),%rsi
    0.00 :   5e0a8:  mov    $0x3e8,%edx
    0.00 :   5e0ad:  call   9d370 <__strerror_r>
    0.00 :   5e0b2:  movzbl 0x28(%rsp),%r9d
    0.00 :   5e0b8:  mov    0x8(%rsp),%r11d
    0.00 :   5e0bd:  mov    %rax,%r13
    0.00 :   5e0c0:  mov    $0x1,%eax
    0.00 :   5e0c5:  test   %r13,%r13
    0.00 :   5e0c8:  je     5f897 <__vfprintf_internal+0x1f87>
    0.00 :   5e0ce:  cmp    $0x53,%r9b
    0.00 :   5e0d2:  je     5f656 <__vfprintf_internal+0x1d46>
    0.00 :   5e0d8:  test   %al,%al
    0.00 :   5e0da:  je     5f656 <__vfprintf_internal+0x1d46>
    0.00 :   5e0e0:  cmp    $0xffffffff,%r11d
    0.00 :   5e0e4:  je     5f820 <__vfprintf_internal+0x1f10>
    0.00 :   5e0ea:  movslq %r11d,%rsi
    0.00 :   5e0ed:  mov    %r13,%rdi
    0.00 :   5e0f0:  call   26380 <*ABS*+0xa1b90@plt>
    0.00 :   5e0f5:  mov    %rax,%r14
    0.00 :   5e0f8:  mov    0x18(%rsp),%r15d
    0.00 :   5e0fd:  sub    %eax,%r15d
    0.00 :   5e100:  js     5f6a0 <__vfprintf_internal+0x1d90>
    0.00 :   5e106:  mov    0x20(%rsp),%ecx
    0.00 :   5e10a:  test   %ecx,%ecx
    0.00 :   5e10c:  jne    5e117 <__vfprintf_internal+0x807>
    0.00 :   5e10e:  test   %r15d,%r15d
    0.00 :   5e111:  jne    5f9ec <__vfprintf_internal+0x20dc>
    0.00 :   5e117:  mov    0xd8(%rbx),%rax
    0.00 :   5e11e:  lea    0x1718db(%rip),%rcx        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5e125:  mov    0x10(%rsp),%rdi
    0.00 :   5e12a:  mov    %rax,%rdx
    0.00 :   5e12d:  sub    %rcx,%rdx
    0.00 :   5e130:  cmp    %rdi,%rdx
    0.00 :   5e133:  jae    5fba0 <__vfprintf_internal+0x2290>
    0.00 :   5e139:  mov    %r14,%rdx
    0.00 :   5e13c:  mov    %r13,%rsi
    0.00 :   5e13f:  mov    %rbx,%rdi
    0.00 :   5e142:  call   *0x38(%rax)
    0.00 :   5e145:  cmp    %rax,%r14
    0.00 :   5e148:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e14e:  mov    %r14,%rax
    0.00 :   5e151:  xor    %edx,%edx
    0.00 :   5e153:  add    %rbp,%rax
    0.00 :   5e156:  js     5fdeb <__vfprintf_internal+0x24db>
    0.00 :   5e15c:  cmp    %rbp,%rax
    0.00 :   5e15f:  jb     5fdeb <__vfprintf_internal+0x24db>
    0.00 :   5e165:  movslq %eax,%r13
    0.00 :   5e168:  mov    $0x1,%ecx
    0.00 :   5e16d:  mov    %eax,%ebp
    0.00 :   5e16f:  cmp    %r13,%rax
    0.00 :   5e172:  cmovne %ecx,%edx
    0.00 :   5e175:  test   %edx,%edx
    0.00 :   5e177:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e17d:  test   %eax,%eax
    0.00 :   5e17f:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5e185:  test   %r15d,%r15d
    0.00 :   5e188:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e18e:  testb  $0x1,0x20(%rsp)
    0.00 :   5e193:  je     5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e199:  mov    %r15d,%r15d
    0.00 :   5e19c:  mov    $0x20,%esi
    0.00 :   5e1a1:  mov    %rbx,%rdi
    0.00 :   5e1a4:  mov    %r15,%rdx
    0.00 :   5e1a7:  call   78be0 <_IO_padn>
    0.00 :   5e1ac:  cmp    %rax,%r15
    0.00 :   5e1af:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e1b5:  lea    (%r15,%r13,1),%rax
    0.00 :   5e1b9:  movslq %eax,%rdx
    0.00 :   5e1bc:  mov    %eax,%ebp
    0.00 :   5e1be:  cmp    %rdx,%rax
    0.00 :   5e1c1:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e1c7:  test   %eax,%eax
    0.00 :   5e1c9:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e1cf:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e1d4:  nopl   0x0(%rax)
    0.00 :   5e1d8:  endbr64
    0.00 :   5e1dc:  mov    (%r12),%eax
    0.00 :   5e1e0:  cmp    $0x2f,%eax
    0.00 :   5e1e3:  ja     5f468 <__vfprintf_internal+0x1b58>
    0.00 :   5e1e9:  mov    %eax,%edx
    0.00 :   5e1eb:  add    $0x8,%eax
    0.00 :   5e1ee:  add    0x10(%r12),%rdx
    0.00 :   5e1f3:  mov    %eax,(%r12)
    0.00 :   5e1f7:  mov    (%rdx),%r13
    0.00 :   5e1fa:  test   %r13,%r13
    0.00 :   5e1fd:  jne    5fc22 <__vfprintf_internal+0x2312>
    0.00 :   5e203:  cmp    $0xffffffff,%r11d
    0.00 :   5e207:  je     5f880 <__vfprintf_internal+0x1f70>
    0.00 :   5e20d:  cmp    $0x5,%r11d
    0.00 :   5e211:  jg     5f880 <__vfprintf_internal+0x1f70>
    0.00 :   5e217:  xor    %eax,%eax
    0.00 :   5e219:  xor    %r14d,%r14d
    0.00 :   5e21c:  lea    0x143105(%rip),%r13        # 1a1328 <default_rwlockattr+0x338>
    0.00 :   5e223:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5e228:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e230:  endbr64
    0.00 :   5e234:  testb  $0x2,0x3c(%rsp)
    0.00 :   5e239:  je     5e278 <__vfprintf_internal+0x968>
    0.00 :   5e23b:  mov    0x7c(%rsp),%r15d
    0.00 :   5e240:  test   %r15d,%r15d
    0.00 :   5e243:  jne    5e278 <__vfprintf_internal+0x968>
    0.00 :   5e245:  mov    (%rsp),%r15
    0.00 :   5e249:  mov    %r15,%rdi
    0.00 :   5e24c:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   5e251:  mov    %r15,%rdi
    0.00 :   5e254:  lea    0x1(%rax),%rsi
    0.00 :   5e258:  call   11a410 <__readonly_area>
    0.00 :   5e25d:  mov    %eax,0x7c(%rsp)
    0.00 :   5e261:  test   %eax,%eax
    0.00 :   5e263:  jns    5e278 <__vfprintf_internal+0x968>
    0.00 :   5e265:  lea    0x13de74(%rip),%rdi        # 19c0e0 <aliasfile.0+0x698>
    0.00 :   5e26c:  call   810e0 <__libc_fatal>
    0.00 :   5e271:  nopl   0x0(%rax)
    0.00 :   5e278:  mov    (%r12),%eax
    0.00 :   5e27c:  cmp    $0x2f,%eax
    0.00 :   5e27f:  jbe    5f4e8 <__vfprintf_internal+0x1bd8>
    0.00 :   5e285:  mov    0x8(%r12),%rdx
    0.00 :   5e28a:  lea    0x8(%rdx),%rax
    0.00 :   5e28e:  mov    %rax,0x8(%r12)
    0.00 :   5e293:  mov    0x8(%rsp),%r11d
    0.00 :   5e298:  mov    (%rdx),%rax
    0.00 :   5e29b:  test   %r11d,%r11d
    0.00 :   5e29e:  je     5f628 <__vfprintf_internal+0x1d18>
    0.00 :   5e2a4:  movslq %ebp,%rdx
    0.00 :   5e2a7:  mov    %rdx,(%rax)
    0.00 :   5e2aa:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e2af:  nop
    0.00 :   5e2b0:  endbr64
    0.00 :   5e2b4:  mov    (%r12),%eax
    0.00 :   5e2b8:  cmp    $0x2f,%eax
    0.00 :   5e2bb:  ja     5f4d0 <__vfprintf_internal+0x1bc0>
    0.00 :   5e2c1:  mov    %eax,%edx
    0.00 :   5e2c3:  add    $0x8,%eax
    0.00 :   5e2c6:  add    0x10(%r12),%rdx
    0.00 :   5e2cb:  mov    %eax,(%r12)
    0.00 :   5e2cf:  mov    (%rdx),%rax
    0.00 :   5e2d2:  test   %rax,%rax
    0.00 :   5e2d5:  je     5f639 <__vfprintf_internal+0x1d29>
    0.00 :   5e2db:  movl   $0x0,0x8(%rsp)
    0.00 :   5e2e3:  mov    %rax,%r14
    0.00 :   5e2e6:  xor    %r15d,%r15d
    0.00 :   5e2e9:  mov    $0x78,%r9d
    0.00 :   5e2ef:  movl   $0x1,0x48(%rsp)
    0.00 :   5e2f7:  movl   $0x10,0x28(%rsp)
    0.00 :   5e2ff:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5e301:  nopl   0x0(%rax)
    0.00 :   5e308:  endbr64
    0.00 :   5e30c:  movl   $0x2,0x28(%rsp)
    0.00 :   5e314:  mov    0x8(%rsp),%edx
    0.00 :   5e318:  mov    (%r12),%eax
    0.00 :   5e31c:  test   %edx,%edx
    0.00 :   5e31e:  je     5ef28 <__vfprintf_internal+0x1618>
    0.00 :   5e324:  cmp    $0x2f,%eax
    0.00 :   5e327:  ja     5f140 <__vfprintf_internal+0x1830>
    0.00 :   5e32d:  mov    %eax,%edx
    0.00 :   5e32f:  add    $0x8,%eax
    0.00 :   5e332:  add    0x10(%r12),%rdx
    0.00 :   5e337:  mov    %eax,(%r12)
    0.00 :   5e33b:  movl   $0x0,0x30(%rsp)
    0.00 :   5e343:  mov    (%rdx),%r14
    0.00 :   5e346:  movl   $0x0,0x38(%rsp)
    0.00 :   5e34e:  movl   $0x0,0x8(%rsp)
    0.00 :   5e356:  test   %r11d,%r11d
    0.00 :   5e359:  js     5ef68 <__vfprintf_internal+0x1658>
    0.00 :   5e35f:  je     5ee60 <__vfprintf_internal+0x1550>
    0.00 :   5e365:  movslq %r11d,%rax
    0.00 :   5e368:  movb   $0x20,0x34(%rsp)
    0.00 :   5e36d:  mov    %rax,0x58(%rsp)
    0.00 :   5e372:  cmp    $0x58,%r9b
    0.00 :   5e376:  mov    0x28(%rsp),%edx
    0.00 :   5e37a:  mov    %r14,%rdi
    0.00 :   5e37d:  mov    %r9b,0x7b(%rsp)
    0.00 :   5e382:  sete   %cl
    0.00 :   5e385:  lea    0x4f8(%rsp),%r13
    0.00 :   5e38d:  lea    0x110(%rsp),%rax
    0.00 :   5e395:  movzbl %cl,%ecx
    0.00 :   5e398:  mov    %r13,%rsi
    0.00 :   5e39b:  mov    %rax,0x70(%rsp)
    0.00 :   5e3a0:  call   52c40 <_itoa_word>
    0.00 :   5e3a5:  mov    0x60(%rsp),%rcx
    0.00 :   5e3aa:  movzbl 0x7b(%rsp),%r9d
    0.00 :   5e3b0:  mov    %rax,%r10
    0.00 :   5e3b3:  test   %rcx,%rcx
    0.00 :   5e3b6:  je     5e3db <__vfprintf_internal+0xacb>
    0.00 :   5e3b8:  test   %r15d,%r15d
    0.00 :   5e3bb:  je     5e3db <__vfprintf_internal+0xacb>
    0.00 :   5e3bd:  mov    0x68(%rsp),%r8
    0.00 :   5e3c2:  mov    0x70(%rsp),%rdi
    0.00 :   5e3c7:  mov    %r13,%rdx
    0.00 :   5e3ca:  mov    %rax,%rsi
    0.00 :   5e3cd:  call   5aae0 <group_number>
    0.00 :   5e3d2:  movzbl 0x7b(%rsp),%r9d
    0.00 :   5e3d8:  mov    %rax,%r10
    0.00 :   5e3db:  test   %r14,%r14
    0.00 :   5e3de:  setne  %cl
    0.00 :   5e3e1:  cmpl   $0xa,0x28(%rsp)
    0.00 :   5e3e6:  jne    5eca8 <__vfprintf_internal+0x1398>
    0.00 :   5e3ec:  mov    0x50(%rsp),%r8d
    0.00 :   5e3f1:  test   %r8d,%r8d
    0.00 :   5e3f4:  je     5eca8 <__vfprintf_internal+0x1398>
    0.00 :   5e3fa:  mov    %r10,%rdi
    0.00 :   5e3fd:  mov    %r13,%rdx
    0.00 :   5e400:  mov    %r13,%rsi
    0.00 :   5e403:  mov    %cl,0x7b(%rsp)
    0.00 :   5e407:  mov    %r9b,0x50(%rsp)
    0.00 :   5e40c:  mov    %r13,%r15
    0.00 :   5e40f:  call   5ad20 <_i18n_number_rewrite>
    0.00 :   5e414:  movzbl 0x50(%rsp),%r9d
    0.00 :   5e41a:  movzbl 0x7b(%rsp),%ecx
    0.00 :   5e41f:  mov    %rax,%r10
    0.00 :   5e422:  sub    %rax,%r15
    0.00 :   5e425:  mov    0x58(%rsp),%r13
    0.00 :   5e42a:  mov    $0x0,%eax
    0.00 :   5e42f:  mov    0x20(%rsp),%esi
    0.00 :   5e433:  sub    %r15,%r13
    0.00 :   5e436:  cmovs  %rax,%r13
    0.00 :   5e43a:  mov    %r13d,%r11d
    0.00 :   5e43d:  test   %esi,%esi
    0.00 :   5e43f:  jne    5ecf8 <__vfprintf_internal+0x13e8>
    0.00 :   5e445:  mov    0x18(%rsp),%r14d
    0.00 :   5e44a:  sub    %r15d,%r14d
    0.00 :   5e44d:  sub    %r13d,%r14d
    0.00 :   5e450:  movzbl 0x48(%rsp),%r13d
    0.00 :   5e456:  and    %cl,%r13b
    0.00 :   5e459:  jne    5f200 <__vfprintf_internal+0x18f0>
    0.00 :   5e45f:  mov    0x8(%rsp),%eax
    0.00 :   5e463:  mov    0x38(%rsp),%ecx
    0.00 :   5e467:  or     %ecx,%eax
    0.00 :   5e469:  or     0x30(%rsp),%eax
    0.00 :   5e46d:  jne    5efc8 <__vfprintf_internal+0x16b8>
    0.00 :   5e473:  cmpb   $0x20,0x34(%rsp)
    0.00 :   5e478:  je     5f52e <__vfprintf_internal+0x1c1e>
    0.00 :   5e47e:  test   %r13b,%r13b
    0.00 :   5e481:  jne    5f158 <__vfprintf_internal+0x1848>
    0.00 :   5e487:  add    %r11d,%r14d
    0.00 :   5e48a:  test   %r14d,%r14d
    0.00 :   5e48d:  jg     5f010 <__vfprintf_internal+0x1700>
    0.00 :   5e493:  mov    0xd8(%rbx),%r13
    0.00 :   5e49a:  lea    0x17155f(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5e4a1:  mov    0x10(%rsp),%rdi
    0.00 :   5e4a6:  mov    %r13,%rax
    0.00 :   5e4a9:  sub    %rsi,%rax
    0.00 :   5e4ac:  cmp    %rdi,%rax
    0.00 :   5e4af:  jae    5f8d9 <__vfprintf_internal+0x1fc9>
    0.00 :   5e4b5:  mov    %r15,%rdx
    0.00 :   5e4b8:  mov    %r10,%rsi
    0.00 :   5e4bb:  mov    %rbx,%rdi
    0.00 :   5e4be:  call   *0x38(%r13)
    0.00 :   5e4c2:  cmp    %rax,%r15
    0.00 :   5e4c5:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5e4cb:  movslq %ebp,%rbp
    0.00 :   5e4ce:  xor    %eax,%eax
    0.00 :   5e4d0:  add    %rbp,%r15
    0.00 :   5e4d3:  js     5fdc3 <__vfprintf_internal+0x24b3>
    0.00 :   5e4d9:  cmp    %rbp,%r15
    0.00 :   5e4dc:  jb     5fdc3 <__vfprintf_internal+0x24b3>
    0.00 :   5e4e2:  movslq %r15d,%rdx
    0.00 :   5e4e5:  mov    %r15d,%ebp
    0.00 :   5e4e8:  cmp    %rdx,%r15
    0.00 :   5e4eb:  mov    $0x1,%edx
    0.00 :   5e4f0:  cmovne %edx,%eax
    0.00 :   5e4f3:  test   %eax,%eax
    0.00 :   5e4f5:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5e4fb:  test   %r15d,%r15d
    0.00 :   5e4fe:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e504:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5e509:  nopl   0x0(%rax)
    0.00 :   5e510:  endbr64
    0.00 :   5e514:  movl   $0x10,0x28(%rsp)
    0.00 :   5e51c:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e521:  nopl   0x0(%rax)
    0.00 :   5e528:  endbr64
    0.00 :   5e52c:  movl   $0x8,0x28(%rsp)
    0.00 :   5e534:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e539:  nopl   0x0(%rax)
    0.00 :   5e540:  endbr64
    0.00 :   5e544:  movl   $0xa,0x28(%rsp)
    0.00 :   5e54c:  jmp    5e314 <__vfprintf_internal+0xa04>
    0.00 :   5e551:  nopl   0x0(%rax)
    0.00 :   5e558:  endbr64
    0.00 :   5e55c:  mov    0x8(%rsp),%ecx
    0.00 :   5e560:  mov    (%r12),%eax
    0.00 :   5e564:  test   %ecx,%ecx
    0.00 :   5e566:  jne    5f420 <__vfprintf_internal+0x1b10>
    0.00 :   5e56c:  test   %r14d,%r14d
    0.00 :   5e56f:  je     5f9c4 <__vfprintf_internal+0x20b4>
    0.00 :   5e575:  cmp    $0x2f,%eax
    0.00 :   5e578:  ja     5fb44 <__vfprintf_internal+0x2234>
    0.00 :   5e57e:  mov    %eax,%edx
    0.00 :   5e580:  add    $0x8,%eax
    0.00 :   5e583:  add    0x10(%r12),%rdx
    0.00 :   5e588:  mov    %eax,(%r12)
    0.00 :   5e58c:  movsbq (%rdx),%rax
    0.00 :   5e590:  test   %rax,%rax
    0.00 :   5e593:  js     5f680 <__vfprintf_internal+0x1d70>
    0.00 :   5e599:  movl   $0x0,0x8(%rsp)
    0.00 :   5e5a1:  mov    %rax,%r14
    0.00 :   5e5a4:  movl   $0xa,0x28(%rsp)
    0.00 :   5e5ac:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5e5b1:  nopl   0x0(%rax)
    0.00 :   5e5b8:  endbr64
    0.00 :   5e5bc:  mov    0x28(%rbx),%rax
    0.00 :   5e5c0:  cmp    0x30(%rbx),%rax
    0.00 :   5e5c4:  jae    5fbcc <__vfprintf_internal+0x22bc>
    0.00 :   5e5ca:  lea    0x1(%rax),%rdx
    0.00 :   5e5ce:  mov    %rdx,0x28(%rbx)
    0.00 :   5e5d2:  movb   $0x25,(%rax)
    0.00 :   5e5d5:  cmp    $0x7fffffff,%ebp
    0.00 :   5e5db:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5e5e1:  add    $0x1,%ebp
    0.00 :   5e5e4:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5e5e9:  nopl   0x0(%rax)
    0.00 :   5e5f0:  endbr64
    0.00 :   5e5f4:  lea    0x80(%rsp),%rdi
    0.00 :   5e5fc:  call   5aa60 <read_int>
    0.00 :   5e601:  mov    %eax,0x18(%rsp)
    0.00 :   5e605:  cmp    $0xffffffff,%eax
    0.00 :   5e608:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5e60e:  mov    0x80(%rsp),%rax
    0.00 :   5e616:  movzbl (%rax),%r9d
    0.00 :   5e61a:  cmp    $0x24,%r9b
    0.00 :   5e61e:  je     5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5e624:  lea    -0x20(%r9),%eax
    0.00 :   5e628:  cmp    $0x5a,%al
    0.00 :   5e62a:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e630:  movzbl %r9b,%eax
    0.00 :   5e634:  lea    0x131b65(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e63b:  lea    -0xb6d(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e642:  sub    $0x20,%eax
    0.00 :   5e645:  cltq
    0.00 :   5e647:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5e64b:  lea    0x131a4e(%rip),%rax        # 1900a0 <step1_jumps.8>
    0.00 :   5e652:  movslq (%rax,%rdx,4),%rax
    0.00 :   5e656:  add    %rcx,%rax
    0.00 :   5e659:  jmp    *%rax
    0.00 :   5e65b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e660:  endbr64
    0.00 :   5e664:  mov    0x80(%rsp),%rcx
    0.00 :   5e66c:  lea    0x1(%rcx),%rax
    0.00 :   5e670:  mov    %rax,0x80(%rsp)
    0.00 :   5e678:  mov    %rax,0xa0(%rsp)
    0.00 :   5e680:  movzbl 0x1(%rcx),%eax
    0.00 :   5e684:  sub    $0x30,%eax
    0.00 :   5e687:  cmp    $0x9,%eax
    0.00 :   5e68a:  jbe    5f7e0 <__vfprintf_internal+0x1ed0>
    0.00 :   5e690:  mov    (%r12),%eax
    0.00 :   5e694:  cmp    $0x2f,%eax
    0.00 :   5e697:  ja     5f500 <__vfprintf_internal+0x1bf0>
    0.00 :   5e69d:  mov    %eax,%edx
    0.00 :   5e69f:  add    $0x8,%eax
    0.00 :   5e6a2:  add    0x10(%r12),%rdx
    0.00 :   5e6a7:  mov    %eax,(%r12)
    0.00 :   5e6ab:  mov    (%rdx),%eax
    0.00 :   5e6ad:  mov    %eax,0x18(%rsp)
    0.00 :   5e6b1:  test   %eax,%eax
    0.00 :   5e6b3:  jns    5e6c8 <__vfprintf_internal+0xdb8>
    0.00 :   5e6b5:  neg    %eax
    0.00 :   5e6b7:  movb   $0x20,0x34(%rsp)
    0.00 :   5e6bc:  mov    %eax,0x18(%rsp)
    0.00 :   5e6c0:  movl   $0x1,0x20(%rsp)
    0.00 :   5e6c8:  movzbl 0x1(%rcx),%r9d
    0.00 :   5e6cd:  lea    -0x20(%r9),%eax
    0.00 :   5e6d1:  cmp    $0x5a,%al
    0.00 :   5e6d3:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e6d9:  jmp    5e630 <__vfprintf_internal+0xd20>
    0.00 :   5e6de:  xchg   %ax,%ax
    0.00 :   5e6e0:  endbr64
    0.00 :   5e6e4:  mov    0x80(%rsp),%rax
    0.00 :   5e6ec:  movzbl 0x1(%rax),%r9d
    0.00 :   5e6f1:  lea    0x1(%rax),%rdx
    0.00 :   5e6f5:  lea    -0xc27(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e6fc:  mov    %rdx,0x80(%rsp)
    0.00 :   5e704:  lea    -0x20(%r9),%edx
    0.00 :   5e708:  cmp    $0x5a,%dl
    0.00 :   5e70b:  ja     5f410 <__vfprintf_internal+0x1b00>
    0.00 :   5e711:  movzbl %r9b,%eax
    0.00 :   5e715:  lea    0x131a84(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e71c:  lea    0x1319fd(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e723:  movl   $0x1,0x50(%rsp)
    0.00 :   5e72b:  sub    $0x20,%eax
    0.00 :   5e72e:  lea    -0xc60(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e735:  cltq
    0.00 :   5e737:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e73b:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e73f:  add    %rsi,%rax
    0.00 :   5e742:  jmp    *%rax
    0.00 :   5e744:  nopl   0x0(%rax)
    0.00 :   5e748:  endbr64
    0.00 :   5e74c:  cmpq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5e752:  je     5f83e <__vfprintf_internal+0x1f2e>
    0.00 :   5e758:  mov    0x80(%rsp),%rax
    0.00 :   5e760:  movzbl 0x1(%rax),%r9d
    0.00 :   5e765:  lea    0x1(%rax),%rdx
    0.00 :   5e769:  lea    -0xc9b(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e770:  mov    %rdx,0x80(%rsp)
    0.00 :   5e778:  lea    -0x20(%r9),%edx
    0.00 :   5e77c:  cmp    $0x5a,%dl
    0.00 :   5e77f:  ja     5f400 <__vfprintf_internal+0x1af0>
    0.00 :   5e785:  movzbl %r9b,%eax
    0.00 :   5e789:  lea    0x131a10(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e790:  lea    0x131989(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e797:  mov    $0x1,%r15d
    0.00 :   5e79d:  sub    $0x20,%eax
    0.00 :   5e7a0:  lea    -0xcd2(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e7a7:  cltq
    0.00 :   5e7a9:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e7ad:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e7b1:  add    %rsi,%rax
    0.00 :   5e7b4:  jmp    *%rax
    0.00 :   5e7b6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5e7c0:  endbr64
    0.00 :   5e7c4:  mov    0x20(%rsp),%esi
    0.00 :   5e7c8:  movzbl 0x34(%rsp),%edi
    0.00 :   5e7cd:  mov    $0x30,%eax
    0.00 :   5e7d2:  test   %esi,%esi
    0.00 :   5e7d4:  cmove  %eax,%edi
    0.00 :   5e7d7:  mov    0x80(%rsp),%rax
    0.00 :   5e7df:  movzbl 0x1(%rax),%r9d
    0.00 :   5e7e4:  lea    0x1(%rax),%rdx
    0.00 :   5e7e8:  mov    %dil,0x34(%rsp)
    0.00 :   5e7ed:  mov    %rdx,0x80(%rsp)
    0.00 :   5e7f5:  lea    -0x20(%r9),%eax
    0.00 :   5e7f9:  cmp    $0x5a,%al
    0.00 :   5e7fb:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e801:  movzbl %r9b,%eax
    0.00 :   5e805:  lea    0x131994(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e80c:  lea    0x13190d(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e813:  sub    $0x20,%eax
    0.00 :   5e816:  lea    -0xd48(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e81d:  cltq
    0.00 :   5e81f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e823:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e827:  add    %rsi,%rax
    0.00 :   5e82a:  jmp    *%rax
    0.00 :   5e82c:  nopl   0x0(%rax)
    0.00 :   5e830:  endbr64
    0.00 :   5e834:  mov    0x80(%rsp),%rax
    0.00 :   5e83c:  movzbl 0x1(%rax),%r9d
    0.00 :   5e841:  lea    0x1(%rax),%rdx
    0.00 :   5e845:  lea    -0xd77(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e84c:  mov    %rdx,0x80(%rsp)
    0.00 :   5e854:  lea    -0x20(%r9),%edx
    0.00 :   5e858:  cmp    $0x5a,%dl
    0.00 :   5e85b:  ja     5f3f0 <__vfprintf_internal+0x1ae0>
    0.00 :   5e861:  movzbl %r9b,%eax
    0.00 :   5e865:  lea    0x131934(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e86c:  lea    0x1318ad(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e873:  movl   $0x1,0x48(%rsp)
    0.00 :   5e87b:  sub    $0x20,%eax
    0.00 :   5e87e:  lea    -0xdb0(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e885:  cltq
    0.00 :   5e887:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e88b:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e88f:  add    %rsi,%rax
    0.00 :   5e892:  jmp    *%rax
    0.00 :   5e894:  nopl   0x0(%rax)
    0.00 :   5e898:  endbr64
    0.00 :   5e89c:  mov    0x80(%rsp),%rax
    0.00 :   5e8a4:  movzbl 0x1(%rax),%r9d
    0.00 :   5e8a9:  lea    0x1(%rax),%rdx
    0.00 :   5e8ad:  lea    -0xddf(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e8b4:  mov    %rdx,0x80(%rsp)
    0.00 :   5e8bc:  lea    -0x20(%r9),%edx
    0.00 :   5e8c0:  cmp    $0x5a,%dl
    0.00 :   5e8c3:  ja     5f3e0 <__vfprintf_internal+0x1ad0>
    0.00 :   5e8c9:  movzbl %r9b,%eax
    0.00 :   5e8cd:  lea    0x1318cc(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e8d4:  lea    0x131845(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e8db:  movb   $0x20,0x34(%rsp)
    0.00 :   5e8e0:  sub    $0x20,%eax
    0.00 :   5e8e3:  lea    -0xe15(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e8ea:  movl   $0x1,0x20(%rsp)
    0.00 :   5e8f2:  cltq
    0.00 :   5e8f4:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e8f8:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e8fc:  add    %rsi,%rax
    0.00 :   5e8ff:  jmp    *%rax
    0.00 :   5e901:  nopl   0x0(%rax)
    0.00 :   5e908:  endbr64
    0.00 :   5e90c:  mov    0x80(%rsp),%rax
    0.00 :   5e914:  movzbl 0x1(%rax),%r9d
    0.00 :   5e919:  lea    0x1(%rax),%rdx
    0.00 :   5e91d:  lea    -0xe4f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e924:  mov    %rdx,0x80(%rsp)
    0.00 :   5e92c:  lea    -0x20(%r9),%edx
    0.00 :   5e930:  cmp    $0x5a,%dl
    0.00 :   5e933:  ja     5f3d0 <__vfprintf_internal+0x1ac0>
    0.00 :   5e939:  movzbl %r9b,%eax
    0.00 :   5e93d:  lea    0x13185c(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5e944:  lea    0x1317d5(%rip),%rcx        # 190120 <step0_jumps.9>
    0.00 :   5e94b:  movl   $0x1,0x30(%rsp)
    0.00 :   5e953:  sub    $0x20,%eax
    0.00 :   5e956:  lea    -0xe88(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e95d:  cltq
    0.00 :   5e95f:  movzbl (%rdi,%rax,1),%eax
    0.00 :   5e963:  movslq (%rcx,%rax,4),%rax
    0.00 :   5e967:  add    %rsi,%rax
    0.00 :   5e96a:  jmp    *%rax
    0.00 :   5e96c:  nopl   0x0(%rax)
    0.00 :   5e970:  endbr64
    0.00 :   5e974:  mov    0x80(%rsp),%rax
    0.00 :   5e97c:  movzbl 0x1(%rax),%r9d
    0.00 :   5e981:  lea    0x1(%rax),%rdx
    0.00 :   5e985:  lea    -0xeb7(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e98c:  mov    %rdx,0x80(%rsp)
    0.00 :   5e994:  lea    -0x20(%r9),%edx
    0.00 :   5e998:  cmp    $0x5a,%dl
    0.00 :   5e99b:  ja     5ea09 <__vfprintf_internal+0x10f9>
    0.00 :   5e99d:  movzbl %r9b,%eax
    0.00 :   5e9a1:  lea    0x1317f8(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5e9a8:  xor    %r10d,%r10d
    0.00 :   5e9ab:  movl   $0x1,0x8(%rsp)
    0.00 :   5e9b3:  sub    $0x20,%eax
    0.00 :   5e9b6:  lea    -0xee8(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e9bd:  cltq
    0.00 :   5e9bf:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5e9c3:  lea    0x131556(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5e9ca:  movslq (%rax,%rdx,4),%rax
    0.00 :   5e9ce:  add    %rsi,%rax
    0.00 :   5e9d1:  jmp    *%rax
    0.00 :   5e9d3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5e9d8:  endbr64
    0.00 :   5e9dc:  mov    0x80(%rsp),%rax
    0.00 :   5e9e4:  movzbl 0x1(%rax),%r9d
    0.00 :   5e9e9:  lea    0x1(%rax),%rdx
    0.00 :   5e9ed:  lea    -0xf1f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5e9f4:  mov    %rdx,0x80(%rsp)
    0.00 :   5e9fc:  lea    -0x20(%r9),%edx
    0.00 :   5ea00:  cmp    $0x5a,%dl
    0.00 :   5ea03:  jbe    5f390 <__vfprintf_internal+0x1a80>
    0.00 :   5ea09:  movl   $0x1,0x8(%rsp)
    0.00 :   5ea11:  xor    %r10d,%r10d
    0.00 :   5ea14:  jmp    *%rax
    0.00 :   5ea16:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5ea20:  endbr64
    0.00 :   5ea24:  mov    0x80(%rsp),%rax
    0.00 :   5ea2c:  movzbl 0x1(%rax),%r9d
    0.00 :   5ea31:  lea    0x1(%rax),%rdx
    0.00 :   5ea35:  lea    -0xf67(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ea3c:  mov    %rdx,0x80(%rsp)
    0.00 :   5ea44:  lea    -0x20(%r9),%edx
    0.00 :   5ea48:  cmp    $0x5a,%dl
    0.00 :   5ea4b:  ja     5ea09 <__vfprintf_internal+0x10f9>
    0.00 :   5ea4d:  movzbl %r9b,%eax
    0.00 :   5ea51:  lea    0x131748(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5ea58:  xor    %r10d,%r10d
    0.00 :   5ea5b:  movl   $0x1,0x8(%rsp)
    0.00 :   5ea63:  sub    $0x20,%eax
    0.00 :   5ea66:  lea    -0xf98(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ea6d:  cltq
    0.00 :   5ea6f:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5ea73:  lea    0x1314a6(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5ea7a:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ea7e:  add    %rcx,%rax
    0.00 :   5ea81:  jmp    *%rax
    0.00 :   5ea83:  nopl   0x0(%rax,%rax,1)
    0.00 :   5ea88:  endbr64
    0.00 :   5ea8c:  mov    0x80(%rsp),%rax
    0.00 :   5ea94:  movzbl 0x1(%rax),%r9d
    0.00 :   5ea99:  lea    0x1(%rax),%rdx
    0.00 :   5ea9d:  lea    -0xfcf(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eaa4:  mov    %rdx,0x80(%rsp)
    0.00 :   5eaac:  lea    -0x20(%r9),%edx
    0.00 :   5eab0:  cmp    $0x5a,%dl
    0.00 :   5eab3:  ja     5f380 <__vfprintf_internal+0x1a70>
    0.00 :   5eab9:  movzbl %r9b,%eax
    0.00 :   5eabd:  lea    0x1316dc(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5eac4:  lea    -0xff6(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eacb:  movl   $0x1,0x8(%rsp)
    0.00 :   5ead3:  sub    $0x20,%eax
    0.00 :   5ead6:  mov    $0x1,%r10d
    0.00 :   5eadc:  cltq
    0.00 :   5eade:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5eae2:  lea    0x131437(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5eae9:  movslq (%rax,%rdx,4),%rax
    0.00 :   5eaed:  add    %rsi,%rax
    0.00 :   5eaf0:  jmp    *%rax
    0.00 :   5eaf2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5eaf8:  endbr64
    0.00 :   5eafc:  mov    0x80(%rsp),%rax
    0.00 :   5eb04:  movzbl 0x1(%rax),%r9d
    0.00 :   5eb09:  lea    0x1(%rax),%rdx
    0.00 :   5eb0d:  lea    -0x103f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb14:  mov    %rdx,0x80(%rsp)
    0.00 :   5eb1c:  lea    -0x20(%r9),%edx
    0.00 :   5eb20:  cmp    $0x5a,%dl
    0.00 :   5eb23:  ja     5f370 <__vfprintf_internal+0x1a60>
    0.00 :   5eb29:  movzbl %r9b,%eax
    0.00 :   5eb2d:  lea    0x13166c(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5eb34:  lea    -0x1066(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb3b:  movl   $0x1,0x8(%rsp)
    0.00 :   5eb43:  sub    $0x20,%eax
    0.00 :   5eb46:  cltq
    0.00 :   5eb48:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5eb4c:  lea    0x13134d(%rip),%rax        # 18fea0 <step3b_jumps.4>
    0.00 :   5eb53:  movslq (%rax,%rdx,4),%rax
   34.64 :   5eb57:  add    %rdi,%rax // libc.so.6[5eb57]
    0.00 :   5eb5a:  jmp    *%rax
    0.00 :   5eb5c:  nopl   0x0(%rax)
    0.00 :   5eb60:  endbr64
    0.00 :   5eb64:  mov    0x80(%rsp),%rax
    0.00 :   5eb6c:  movzbl 0x1(%rax),%r9d
    0.00 :   5eb71:  lea    0x1(%rax),%rdx
    0.00 :   5eb75:  lea    -0x10a7(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eb7c:  mov    %rdx,0x80(%rsp)
    0.00 :   5eb84:  lea    -0x20(%r9),%edx
    0.00 :   5eb88:  cmp    $0x5a,%dl
    0.00 :   5eb8b:  ja     5f360 <__vfprintf_internal+0x1a50>
    0.00 :   5eb91:  movzbl %r9b,%eax
    0.00 :   5eb95:  lea    0x131604(%rip),%rdi        # 1901a0 <jump_table>
    0.00 :   5eb9c:  lea    -0x10ce(%rip),%rcx        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5eba3:  xor    %r13d,%r13d
    0.00 :   5eba6:  sub    $0x20,%eax
    0.00 :   5eba9:  mov    $0x1,%r14d
    0.00 :   5ebaf:  cltq
    0.00 :   5ebb1:  movzbl (%rdi,%rax,1),%edx
    0.00 :   5ebb5:  lea    0x131364(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5ebbc:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ebc0:  add    %rcx,%rax
    0.00 :   5ebc3:  jmp    *%rax
    0.00 :   5ebc5:  nopl   (%rax)
    0.00 :   5ebc8:  endbr64
    0.00 :   5ebcc:  mov    0x80(%rsp),%rax
    0.00 :   5ebd4:  movzbl 0x1(%rax),%r9d
    0.00 :   5ebd9:  lea    0x1(%rax),%rdx
    0.00 :   5ebdd:  lea    -0x110f(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ebe4:  mov    %rdx,0x80(%rsp)
    0.00 :   5ebec:  lea    -0x20(%r9),%edx
    0.00 :   5ebf0:  cmp    $0x5a,%dl
    0.00 :   5ebf3:  ja     5f358 <__vfprintf_internal+0x1a48>
    0.00 :   5ebf9:  movzbl %r9b,%eax
    0.00 :   5ebfd:  lea    0x13159c(%rip),%rcx        # 1901a0 <jump_table>
    0.00 :   5ec04:  lea    -0x1136(%rip),%rsi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec0b:  mov    $0x1,%r13d
    0.00 :   5ec11:  sub    $0x20,%eax
    0.00 :   5ec14:  cltq
    0.00 :   5ec16:  movzbl (%rcx,%rax,1),%edx
    0.00 :   5ec1a:  lea    0x13137f(%rip),%rax        # 18ffa0 <step3a_jumps.6>
    0.00 :   5ec21:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ec25:  add    %rsi,%rax
    0.00 :   5ec28:  jmp    *%rax
    0.00 :   5ec2a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ec30:  endbr64
    0.00 :   5ec34:  mov    0x80(%rsp),%rcx
    0.00 :   5ec3c:  movzbl 0x1(%rcx),%r9d
    0.00 :   5ec41:  lea    0x1(%rcx),%rax
    0.00 :   5ec45:  mov    %rax,0x80(%rsp)
    0.00 :   5ec4d:  cmp    $0x2a,%r9b
    0.00 :   5ec51:  je     5f780 <__vfprintf_internal+0x1e70>
    0.00 :   5ec57:  movzbl %r9b,%eax
    0.00 :   5ec5b:  xor    %r11d,%r11d
    0.00 :   5ec5e:  sub    $0x30,%eax
    0.00 :   5ec61:  cmp    $0x9,%eax
    0.00 :   5ec64:  jbe    5f5e0 <__vfprintf_internal+0x1cd0>
    0.00 :   5ec6a:  lea    -0x20(%r9),%eax
    0.00 :   5ec6e:  cmp    $0x5a,%al
    0.00 :   5ec70:  ja     5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec76:  movzbl %r9b,%eax
    0.00 :   5ec7a:  lea    0x13151f(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5ec81:  lea    -0x11b3(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5ec88:  sub    $0x20,%eax
    0.00 :   5ec8b:  cltq
    0.00 :   5ec8d:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5ec91:  lea    0x131388(%rip),%rax        # 190020 <step2_jumps.7>
    0.00 :   5ec98:  movslq (%rax,%rdx,4),%rax
    0.00 :   5ec9c:  add    %rdi,%rax
    0.00 :   5ec9f:  jmp    *%rax
    0.00 :   5eca1:  nopl   0x0(%rax)
    0.00 :   5eca8:  mov    %r13,%r15
    0.00 :   5ecab:  mov    0x58(%rsp),%rax
    0.00 :   5ecb0:  sub    %r10,%r15
    0.00 :   5ecb3:  cmp    %rax,%r15
    0.00 :   5ecb6:  jl     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecbc:  test   %cl,%cl
    0.00 :   5ecbe:  je     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecc4:  cmpl   $0x8,0x28(%rsp)
    0.00 :   5ecc9:  jne    5e425 <__vfprintf_internal+0xb15>
    0.00 :   5eccf:  mov    0x48(%rsp),%edi
    0.00 :   5ecd3:  test   %edi,%edi
    0.00 :   5ecd5:  je     5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecdb:  lea    -0x1(%r10),%rax
    0.00 :   5ecdf:  mov    %r13,%r15
    0.00 :   5ece2:  movb   $0x30,-0x1(%r10)
    0.00 :   5ece7:  sub    %rax,%r15
    0.00 :   5ecea:  mov    %rax,%r10
    0.00 :   5eced:  jmp    5e425 <__vfprintf_internal+0xb15>
    0.00 :   5ecf2:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ecf8:  mov    0x8(%rsp),%eax
    0.00 :   5ecfc:  test   %eax,%eax
    0.00 :   5ecfe:  je     5ef80 <__vfprintf_internal+0x1670>
    0.00 :   5ed04:  mov    0x28(%rbx),%rax
    0.00 :   5ed08:  cmp    0x30(%rbx),%rax
    0.00 :   5ed0c:  jae    5fad0 <__vfprintf_internal+0x21c0>
    0.00 :   5ed12:  lea    0x1(%rax),%rdx
    0.00 :   5ed16:  mov    %rdx,0x28(%rbx)
    0.00 :   5ed1a:  movb   $0x2d,(%rax)
    0.00 :   5ed1d:  cmp    $0x7fffffff,%ebp
    0.00 :   5ed23:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5ed29:  subl   $0x1,0x18(%rsp)
    0.00 :   5ed2e:  add    $0x1,%ebp
    0.00 :   5ed31:  test   %r14,%r14
    0.00 :   5ed34:  je     5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5ed36:  mov    0x48(%rsp),%eax
    0.00 :   5ed3a:  test   %eax,%eax
    0.00 :   5ed3c:  jne    5f250 <__vfprintf_internal+0x1940>
    0.00 :   5ed42:  mov    0x18(%rsp),%r14d
    0.00 :   5ed47:  add    %r15d,%r13d
    0.00 :   5ed4a:  sub    %r13d,%r14d
    0.00 :   5ed4d:  test   %r11d,%r11d
    0.00 :   5ed50:  jle    5eda6 <__vfprintf_internal+0x1496>
    0.00 :   5ed52:  movslq %r11d,%r13
    0.00 :   5ed55:  mov    $0x30,%esi
    0.00 :   5ed5a:  mov    %rbx,%rdi
    0.00 :   5ed5d:  mov    %r10,0x18(%rsp)
    0.00 :   5ed62:  mov    %r13,%rdx
    0.00 :   5ed65:  mov    %r11d,0x8(%rsp)
    0.00 :   5ed6a:  call   78be0 <_IO_padn>
    0.00 :   5ed6f:  cmp    %rax,%r13
    0.00 :   5ed72:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5ed78:  mov    0x8(%rsp),%r11d
    0.00 :   5ed7d:  xor    %eax,%eax
    0.00 :   5ed7f:  mov    0x18(%rsp),%r10
    0.00 :   5ed84:  add    %r11d,%ebp
    0.00 :   5ed87:  js     5fdcd <__vfprintf_internal+0x24bd>
    0.00 :   5ed8d:  cmp    %r13d,%ebp
    0.00 :   5ed90:  jb     5fdcd <__vfprintf_internal+0x24bd>
    0.00 :   5ed96:  test   %eax,%eax
    0.00 :   5ed98:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ed9e:  test   %ebp,%ebp
    0.00 :   5eda0:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5eda6:  mov    0xd8(%rbx),%r13
    0.00 :   5edad:  lea    0x170c4c(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5edb4:  mov    0x10(%rsp),%rdi
    0.00 :   5edb9:  mov    %r13,%rax
    0.00 :   5edbc:  sub    %rsi,%rax
    0.00 :   5edbf:  cmp    %rdi,%rax
    0.00 :   5edc2:  jae    5f8c5 <__vfprintf_internal+0x1fb5>
    0.00 :   5edc8:  mov    %r15,%rdx
    0.00 :   5edcb:  mov    %r10,%rsi
    0.00 :   5edce:  mov    %rbx,%rdi
    0.00 :   5edd1:  call   *0x38(%r13)
    0.00 :   5edd5:  cmp    %rax,%r15
    0.00 :   5edd8:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5edde:  movslq %ebp,%rax
    0.00 :   5ede1:  xor    %edx,%edx
    0.00 :   5ede3:  add    %r15,%rax
    0.00 :   5ede6:  js     5fdb9 <__vfprintf_internal+0x24a9>
    0.00 :   5edec:  cmp    %r15,%rax
    0.00 :   5edef:  jb     5fdb9 <__vfprintf_internal+0x24a9>
    0.00 :   5edf5:  movslq %eax,%r13
    0.00 :   5edf8:  mov    $0x1,%ecx
    0.00 :   5edfd:  mov    %eax,%ebp
    0.00 :   5edff:  cmp    %r13,%rax
    0.00 :   5ee02:  cmovne %ecx,%edx
    0.00 :   5ee05:  test   %edx,%edx
    0.00 :   5ee07:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ee0d:  test   %eax,%eax
    0.00 :   5ee0f:  js     5db32 <__vfprintf_internal+0x222>
    0.00 :   5ee15:  test   %r14d,%r14d
    0.00 :   5ee18:  jle    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5ee1e:  mov    %r14,%rdx
    0.00 :   5ee21:  mov    $0x20,%esi
    0.00 :   5ee26:  mov    %rbx,%rdi
    0.00 :   5ee29:  call   78be0 <_IO_padn>
    0.00 :   5ee2e:  cmp    %rax,%r14
    0.00 :   5ee31:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5ee37:  add    %r13,%r14
    0.00 :   5ee3a:  movslq %r14d,%rax
    0.00 :   5ee3d:  mov    %r14d,%ebp
    0.00 :   5ee40:  cmp    %rax,%r14
    0.00 :   5ee43:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5ee49:  test   %r14d,%r14d
    0.00 :   5ee4c:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5ee52:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5ee57:  nopw   0x0(%rax,%rax,1)
    0.00 :   5ee60:  test   %r14,%r14
    0.00 :   5ee63:  jne    5f058 <__vfprintf_internal+0x1748>
    0.00 :   5ee69:  cmpl   $0x8,0x28(%rsp)
    0.00 :   5ee6e:  jne    5f2d8 <__vfprintf_internal+0x19c8>
    0.00 :   5ee74:  mov    0x48(%rsp),%r10d
    0.00 :   5ee79:  test   %r10d,%r10d
    0.00 :   5ee7c:  je     5f2d8 <__vfprintf_internal+0x19c8>
    0.00 :   5ee82:  movb   $0x30,0x4f7(%rsp)
    0.00 :   5ee8a:  mov    $0x1,%r15d
    0.00 :   5ee90:  lea    0x4f7(%rsp),%r10
    0.00 :   5ee98:  mov    0x20(%rsp),%eax
    0.00 :   5ee9c:  xor    %r13d,%r13d
    0.00 :   5ee9f:  test   %eax,%eax
    0.00 :   5eea1:  jne    5ecf8 <__vfprintf_internal+0x13e8>
    0.00 :   5eea7:  mov    0x8(%rsp),%eax
    0.00 :   5eeab:  mov    0x38(%rsp),%esi
    0.00 :   5eeaf:  mov    0x18(%rsp),%r14d
    0.00 :   5eeb4:  mov    0x30(%rsp),%r11d
    0.00 :   5eeb9:  or     %esi,%eax
    0.00 :   5eebb:  sub    %r15d,%r14d
    0.00 :   5eebe:  or     %eax,%r11d
    0.00 :   5eec1:  je     5f52b <__vfprintf_internal+0x1c1b>
    0.00 :   5eec7:  sub    $0x1,%r14d
    0.00 :   5eecb:  xor    %r13d,%r13d
    0.00 :   5eece:  mov    0x20(%rsp),%r11d
    0.00 :   5eed3:  test   %r14d,%r14d
    0.00 :   5eed6:  jg     5f8ed <__vfprintf_internal+0x1fdd>
    0.00 :   5eedc:  xor    %r14d,%r14d
    0.00 :   5eedf:  jmp    5efd7 <__vfprintf_internal+0x16c7>
    0.00 :   5eee4:  nopl   0x0(%rax)
    0.00 :   5eee8:  mov    0x4f8(%rsp),%rax
    0.00 :   5eef0:  sub    %fs:0x28,%rax
    0.00 :   5eef9:  jne    5fdb4 <__vfprintf_internal+0x24a4>
    0.00 :   5eeff:  mov    0x3c(%rsp),%ecx
    0.00 :   5ef03:  mov    (%rsp),%rsi
    0.00 :   5ef07:  mov    %r12,%rdx
    0.00 :   5ef0a:  mov    %rbx,%rdi
    0.00 :   5ef0d:  add    $0x508,%rsp
    0.00 :   5ef14:  pop    %rbx
    0.00 :   5ef15:  pop    %rbp
    0.00 :   5ef16:  pop    %r12
    0.00 :   5ef18:  pop    %r13
    0.00 :   5ef1a:  pop    %r14
    0.00 :   5ef1c:  pop    %r15
    0.00 :   5ef1e:  jmp    5fe10 <buffered_vfprintf>
    0.00 :   5ef23:  nopl   0x0(%rax,%rax,1)
    0.00 :   5ef28:  test   %r14d,%r14d
    0.00 :   5ef2b:  je     5f070 <__vfprintf_internal+0x1760>
    0.00 :   5ef31:  cmp    $0x2f,%eax
    0.00 :   5ef34:  ja     5f340 <__vfprintf_internal+0x1a30>
    0.00 :   5ef3a:  mov    %eax,%edx
    0.00 :   5ef3c:  add    $0x8,%eax
    0.00 :   5ef3f:  add    0x10(%r12),%rdx
    0.00 :   5ef44:  mov    %eax,(%r12)
    0.00 :   5ef48:  movl   $0x0,0x30(%rsp)
    0.00 :   5ef50:  movzbl (%rdx),%r14d
    0.00 :   5ef54:  movl   $0x0,0x38(%rsp)
    0.00 :   5ef5c:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5ef61:  nopl   0x0(%rax)
    0.00 :   5ef68:  movq   $0x1,0x58(%rsp)
    0.00 :   5ef71:  jmp    5e372 <__vfprintf_internal+0xa62>
    0.00 :   5ef76:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5ef80:  mov    0x30(%rsp),%eax
    0.00 :   5ef84:  test   %eax,%eax
    0.00 :   5ef86:  je     5f220 <__vfprintf_internal+0x1910>
    0.00 :   5ef8c:  mov    0x28(%rbx),%rax
    0.00 :   5ef90:  cmp    0x30(%rbx),%rax
    0.00 :   5ef94:  jae    5fc09 <__vfprintf_internal+0x22f9>
    0.00 :   5ef9a:  lea    0x1(%rax),%rdx
    0.00 :   5ef9e:  mov    %rdx,0x28(%rbx)
    0.00 :   5efa2:  movb   $0x2b,(%rax)
    0.00 :   5efa5:  jmp    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5efaa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5efb0:  mov    %rax,0x8(%rsp)
    0.00 :   5efb5:  call   818e0 <_IO_vtable_check>
    0.00 :   5efba:  mov    0x8(%rsp),%rax
    0.00 :   5efbf:  jmp    5def1 <__vfprintf_internal+0x5e1>
    0.00 :   5efc4:  nopl   0x0(%rax)
    0.00 :   5efc8:  sub    $0x1,%r14d
    0.00 :   5efcc:  cmpb   $0x20,0x34(%rsp)
    0.00 :   5efd1:  je     5fda0 <__vfprintf_internal+0x2490>
    0.00 :   5efd7:  mov    0x8(%rsp),%ecx
    0.00 :   5efdb:  test   %ecx,%ecx
    0.00 :   5efdd:  je     5f1c0 <__vfprintf_internal+0x18b0>
    0.00 :   5efe3:  mov    0x28(%rbx),%rax
    0.00 :   5efe7:  cmp    0x30(%rbx),%rax
    0.00 :   5efeb:  jae    5fa91 <__vfprintf_internal+0x2181>
    0.00 :   5eff1:  lea    0x1(%rax),%rdx
    0.00 :   5eff5:  mov    %rdx,0x28(%rbx)
    0.00 :   5eff9:  movb   $0x2d,(%rax)
    0.00 :   5effc:  cmp    $0x7fffffff,%ebp
    0.00 :   5f002:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f008:  add    $0x1,%ebp
    0.00 :   5f00b:  jmp    5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f010:  movslq %r14d,%r13
    0.00 :   5f013:  mov    $0x30,%esi
    0.00 :   5f018:  mov    %rbx,%rdi
    0.00 :   5f01b:  mov    %r10,0x8(%rsp)
    0.00 :   5f020:  mov    %r13,%rdx
    0.00 :   5f023:  call   78be0 <_IO_padn>
    0.00 :   5f028:  cmp    %rax,%r13
    0.00 :   5f02b:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f031:  add    %r14d,%ebp
    0.00 :   5f034:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f03a:  cmp    %r14d,%ebp
    0.00 :   5f03d:  jb     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f043:  test   %ebp,%ebp
    0.00 :   5f045:  mov    0x8(%rsp),%r10
    0.00 :   5f04a:  jns    5e493 <__vfprintf_internal+0xb83>
    0.00 :   5f050:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f055:  nopl   (%rax)
    0.00 :   5f058:  movq   $0x0,0x58(%rsp)
    0.00 :   5f061:  movb   $0x20,0x34(%rsp)
    0.00 :   5f066:  jmp    5e372 <__vfprintf_internal+0xa62>
    0.00 :   5f06b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f070:  test   %r13d,%r13d
    0.00 :   5f073:  jne    5f308 <__vfprintf_internal+0x19f8>
    0.00 :   5f079:  cmp    $0x2f,%eax
    0.00 :   5f07c:  ja     5f960 <__vfprintf_internal+0x2050>
    0.00 :   5f082:  mov    %eax,%edx
    0.00 :   5f084:  add    $0x8,%eax
    0.00 :   5f087:  add    0x10(%r12),%rdx
    0.00 :   5f08c:  mov    %eax,(%r12)
    0.00 :   5f090:  movl   $0x0,0x30(%rsp)
    0.00 :   5f098:  mov    (%rdx),%r14d
    0.00 :   5f09b:  movl   $0x0,0x38(%rsp)
    0.00 :   5f0a3:  movl   $0x0,0x8(%rsp)
    0.00 :   5f0ab:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f0b0:  mov    0x4(%r12),%eax
    0.00 :   5f0b5:  cmp    $0xaf,%eax
    0.00 :   5f0ba:  ja     5f2f0 <__vfprintf_internal+0x19e0>
    0.00 :   5f0c0:  mov    %eax,%edx
    0.00 :   5f0c2:  add    $0x10,%eax
    0.00 :   5f0c5:  add    0x10(%r12),%rdx
    0.00 :   5f0ca:  mov    %eax,0x4(%r12)
    0.00 :   5f0cf:  movsd  (%rdx),%xmm0
    0.00 :   5f0d3:  movsd  %xmm0,0x90(%rsp)
    0.00 :   5f0dc:  lea    0x90(%rsp),%rax
    0.00 :   5f0e4:  and    $0xffffffdf,%r9d
    0.00 :   5f0e8:  mov    %rbx,%rdi
    0.00 :   5f0eb:  mov    %rax,0x88(%rsp)
    0.00 :   5f0f3:  lea    0x88(%rsp),%rdx
    0.00 :   5f0fb:  lea    0xa0(%rsp),%rsi
    0.00 :   5f103:  cmp    $0x41,%r9d
    0.00 :   5f107:  jne    5f618 <__vfprintf_internal+0x1d08>
    0.00 :   5f10d:  call   56bb0 <__printf_fphex>
    0.00 :   5f112:  test   %eax,%eax
    0.00 :   5f114:  js     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f11a:  add    %eax,%ebp
    0.00 :   5f11c:  js     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f122:  cmp    %eax,%ebp
    0.00 :   5f124:  jb     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f12a:  test   %ebp,%ebp
    0.00 :   5f12c:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f132:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f137:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f140:  mov    0x8(%r12),%rdx
    0.00 :   5f145:  lea    0x8(%rdx),%rax
    0.00 :   5f149:  mov    %rax,0x8(%r12)
    0.00 :   5f14e:  jmp    5e33b <__vfprintf_internal+0xa2b>
    0.00 :   5f153:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f158:  mov    0x28(%rsp),%ecx
    0.00 :   5f15c:  mov    $0x10004,%eax
    0.00 :   5f161:  bt     %rcx,%rax
    0.00 :   5f165:  jae    5e487 <__vfprintf_internal+0xb77>
    0.00 :   5f16b:  mov    0x28(%rbx),%rax
    0.00 :   5f16f:  cmp    0x30(%rbx),%rax
    0.00 :   5f173:  jae    5fca0 <__vfprintf_internal+0x2390>
    0.00 :   5f179:  lea    0x1(%rax),%rdx
    0.00 :   5f17d:  mov    %rdx,0x28(%rbx)
    0.00 :   5f181:  movb   $0x30,(%rax)
    0.00 :   5f184:  cmp    $0x7fffffff,%ebp
    0.00 :   5f18a:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f190:  mov    0x28(%rbx),%rax
    0.00 :   5f194:  cmp    0x30(%rbx),%rax
    0.00 :   5f198:  jae    5fc70 <__vfprintf_internal+0x2360>
    0.00 :   5f19e:  lea    0x1(%rax),%rdx
    0.00 :   5f1a2:  mov    %rdx,0x28(%rbx)
    0.00 :   5f1a6:  mov    %r9b,(%rax)
    0.00 :   5f1a9:  cmp    $0x7ffffffe,%ebp
    0.00 :   5f1af:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f1b5:  add    $0x2,%ebp
    0.00 :   5f1b8:  jmp    5e487 <__vfprintf_internal+0xb77>
    0.00 :   5f1bd:  nopl   (%rax)
    0.00 :   5f1c0:  mov    0x30(%rsp),%edx
    0.00 :   5f1c4:  test   %edx,%edx
    0.00 :   5f1c6:  je     5f72f <__vfprintf_internal+0x1e1f>
    0.00 :   5f1cc:  mov    0x28(%rbx),%rax
    0.00 :   5f1d0:  cmp    0x30(%rbx),%rax
    0.00 :   5f1d4:  jae    5fbf0 <__vfprintf_internal+0x22e0>
    0.00 :   5f1da:  lea    0x1(%rax),%rdx
    0.00 :   5f1de:  mov    %rdx,0x28(%rbx)
    0.00 :   5f1e2:  movb   $0x2b,(%rax)
    0.00 :   5f1e5:  jmp    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5f1ea:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f1f0:  call   818e0 <_IO_vtable_check>
    0.00 :   5f1f5:  jmp    5da15 <__vfprintf_internal+0x105>
    0.00 :   5f1fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f200:  movzbl 0x28(%rsp),%ecx
    0.00 :   5f205:  mov    $0x10004,%eax
    0.00 :   5f20a:  lea    -0x2(%r14),%edx
    0.00 :   5f20e:  shr    %cl,%rax
    0.00 :   5f211:  test   $0x1,%al
    0.00 :   5f213:  cmovne %edx,%r14d
    0.00 :   5f217:  jmp    5e45f <__vfprintf_internal+0xb4f>
    0.00 :   5f21c:  nopl   0x0(%rax)
    0.00 :   5f220:  mov    0x38(%rsp),%eax
    0.00 :   5f224:  test   %eax,%eax
    0.00 :   5f226:  je     5ed31 <__vfprintf_internal+0x1421>
    0.00 :   5f22c:  mov    0x28(%rbx),%rax
    0.00 :   5f230:  cmp    0x30(%rbx),%rax
    0.00 :   5f234:  jae    5fd0c <__vfprintf_internal+0x23fc>
    0.00 :   5f23a:  lea    0x1(%rax),%rdx
    0.00 :   5f23e:  mov    %rdx,0x28(%rbx)
    0.00 :   5f242:  movb   $0x20,(%rax)
    0.00 :   5f245:  jmp    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5f24a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f250:  mov    0x28(%rsp),%edi
    0.00 :   5f254:  mov    $0x10004,%eax
    0.00 :   5f259:  bt     %rdi,%rax
    0.00 :   5f25d:  jae    5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5f263:  mov    0x28(%rbx),%rax
    0.00 :   5f267:  cmp    0x30(%rbx),%rax
    0.00 :   5f26b:  jae    5fd60 <__vfprintf_internal+0x2450>
    0.00 :   5f271:  lea    0x1(%rax),%rdx
    0.00 :   5f275:  mov    %rdx,0x28(%rbx)
    0.00 :   5f279:  movb   $0x30,(%rax)
    0.00 :   5f27c:  cmp    $0x7fffffff,%ebp
    0.00 :   5f282:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f288:  mov    0x28(%rbx),%rax
    0.00 :   5f28c:  cmp    0x30(%rbx),%rax
    0.00 :   5f290:  jae    5fd2f <__vfprintf_internal+0x241f>
    0.00 :   5f296:  lea    0x1(%rax),%rdx
    0.00 :   5f29a:  mov    %rdx,0x28(%rbx)
    0.00 :   5f29e:  mov    %r9b,(%rax)
    0.00 :   5f2a1:  cmp    $0x7ffffffe,%ebp
    0.00 :   5f2a7:  je     5e070 <__vfprintf_internal+0x760>
    0.00 :   5f2ad:  subl   $0x2,0x18(%rsp)
    0.00 :   5f2b2:  add    $0x2,%ebp
    0.00 :   5f2b5:  jmp    5ed42 <__vfprintf_internal+0x1432>
    0.00 :   5f2ba:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f2c0:  mov    0x8(%r12),%rdx
    0.00 :   5f2c5:  lea    0x8(%rdx),%rax
    0.00 :   5f2c9:  mov    %rax,0x8(%r12)
    0.00 :   5f2ce:  jmp    5dde3 <__vfprintf_internal+0x4d3>
    0.00 :   5f2d3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f2d8:  xor    %r15d,%r15d
    0.00 :   5f2db:  lea    0x4f8(%rsp),%r10
    0.00 :   5f2e3:  jmp    5ee98 <__vfprintf_internal+0x1588>
    0.00 :   5f2e8:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f2f0:  mov    0x8(%r12),%rdx
    0.00 :   5f2f5:  lea    0x8(%rdx),%rax
    0.00 :   5f2f9:  mov    %rax,0x8(%r12)
    0.00 :   5f2fe:  jmp    5f0cf <__vfprintf_internal+0x17bf>
    0.00 :   5f303:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f308:  cmp    $0x2f,%eax
    0.00 :   5f30b:  ja     5f9b1 <__vfprintf_internal+0x20a1>
    0.00 :   5f311:  mov    %eax,%edx
    0.00 :   5f313:  add    $0x8,%eax
    0.00 :   5f316:  add    0x10(%r12),%rdx
    0.00 :   5f31b:  mov    %eax,(%r12)
    0.00 :   5f31f:  movl   $0x0,0x30(%rsp)
    0.00 :   5f327:  movzwl (%rdx),%r14d
    0.00 :   5f32b:  movl   $0x0,0x38(%rsp)
    0.00 :   5f333:  movl   $0x0,0x8(%rsp)
    0.00 :   5f33b:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f340:  mov    0x8(%r12),%rdx
    0.00 :   5f345:  lea    0x8(%rdx),%rax
    0.00 :   5f349:  mov    %rax,0x8(%r12)
    0.00 :   5f34e:  jmp    5ef48 <__vfprintf_internal+0x1638>
    0.00 :   5f353:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f358:  mov    $0x1,%r13d
    0.00 :   5f35e:  jmp    *%rax
    0.00 :   5f360:  xor    %r13d,%r13d
    0.00 :   5f363:  mov    $0x1,%r14d
    0.00 :   5f369:  jmp    *%rax
    0.00 :   5f36b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f370:  movl   $0x1,0x8(%rsp)
    0.00 :   5f378:  jmp    *%rax
    0.00 :   5f37a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f380:  movl   $0x1,0x8(%rsp)
    0.00 :   5f388:  mov    $0x1,%r10d
    0.00 :   5f38e:  jmp    *%rax
    0.00 :   5f390:  movzbl %r9b,%eax
    0.00 :   5f394:  lea    0x130e05(%rip),%rsi        # 1901a0 <jump_table>
    0.00 :   5f39b:  xor    %r10d,%r10d
    0.00 :   5f39e:  movl   $0x1,0x8(%rsp)
    0.00 :   5f3a6:  sub    $0x20,%eax
    0.00 :   5f3a9:  lea    -0x18db(%rip),%rdi        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5f3b0:  cltq
    0.00 :   5f3b2:  movzbl (%rsi,%rax,1),%edx
    0.00 :   5f3b6:  lea    0x130b63(%rip),%rax        # 18ff20 <step4_jumps.5>
    0.00 :   5f3bd:  movslq (%rax,%rdx,4),%rax
    0.00 :   5f3c1:  add    %rdi,%rax
    0.00 :   5f3c4:  jmp    *%rax
    0.00 :   5f3c6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f3d0:  movl   $0x1,0x30(%rsp)
    0.00 :   5f3d8:  jmp    *%rax
    0.00 :   5f3da:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f3e0:  movb   $0x20,0x34(%rsp)
    0.00 :   5f3e5:  movl   $0x1,0x20(%rsp)
    0.00 :   5f3ed:  jmp    *%rax
    0.00 :   5f3ef:  nop
    0.00 :   5f3f0:  movl   $0x1,0x48(%rsp)
    0.00 :   5f3f8:  jmp    *%rax
    0.00 :   5f3fa:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f400:  mov    $0x1,%r15d
    0.00 :   5f406:  jmp    *%rax
    0.00 :   5f408:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f410:  movl   $0x1,0x50(%rsp)
    0.00 :   5f418:  jmp    *%rax
    0.00 :   5f41a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f420:  cmp    $0x2f,%eax
    0.00 :   5f423:  ja     5f99e <__vfprintf_internal+0x208e>
    0.00 :   5f429:  mov    %eax,%edx
    0.00 :   5f42b:  add    $0x8,%eax
    0.00 :   5f42e:  add    0x10(%r12),%rdx
    0.00 :   5f433:  mov    %eax,(%r12)
    0.00 :   5f437:  mov    (%rdx),%rax
    0.00 :   5f43a:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5f43f:  nop
    0.00 :   5f440:  mov    0x8(%r12),%rax
    0.00 :   5f445:  add    $0xf,%rax
    0.00 :   5f449:  and    $0xfffffffffffffff0,%rax
    0.00 :   5f44d:  lea    0x10(%rax),%rdx
    0.00 :   5f451:  mov    %rdx,0x8(%r12)
    0.00 :   5f456:  fldt   (%rax)
    0.00 :   5f458:  fstpt  0x90(%rsp)
    0.00 :   5f45f:  jmp    5f0dc <__vfprintf_internal+0x17cc>
    0.00 :   5f464:  nopl   0x0(%rax)
    0.00 :   5f468:  mov    0x8(%r12),%rdx
    0.00 :   5f46d:  lea    0x8(%rdx),%rax
    0.00 :   5f471:  mov    %rax,0x8(%r12)
    0.00 :   5f476:  jmp    5e1f7 <__vfprintf_internal+0x8e7>
    0.00 :   5f47b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f480:  lea    -0x19b2(%rip),%rax        # 5dad5 <__vfprintf_internal+0x1c5>
    0.00 :   5f487:  movl   $0x1,0x38(%rsp)
    0.00 :   5f48f:  jmp    *%rax
    0.00 :   5f491:  nopl   0x0(%rax)
    0.00 :   5f498:  mov    0x54(%rsp),%edi
    0.00 :   5f49c:  call   75e90 <__get_errname>
    0.00 :   5f4a1:  mov    0x8(%rsp),%r11d
    0.00 :   5f4a6:  movzbl 0x28(%rsp),%r9d
    0.00 :   5f4ac:  mov    %rax,%r13
    0.00 :   5f4af:  jmp    5e0c0 <__vfprintf_internal+0x7b0>
    0.00 :   5f4b4:  nopl   0x0(%rax)
    0.00 :   5f4b8:  mov    0x173951(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5f4bf:  movl   $0x16,%fs:(%rax)
    0.00 :   5f4c6:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f4cb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f4d0:  mov    0x8(%r12),%rdx
    0.00 :   5f4d5:  lea    0x8(%rdx),%rax
    0.00 :   5f4d9:  mov    %rax,0x8(%r12)
    0.00 :   5f4de:  jmp    5e2cf <__vfprintf_internal+0x9bf>
    0.00 :   5f4e3:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f4e8:  mov    %eax,%edx
    0.00 :   5f4ea:  add    $0x8,%eax
    0.00 :   5f4ed:  add    0x10(%r12),%rdx
    0.00 :   5f4f2:  mov    %eax,(%r12)
    0.00 :   5f4f6:  jmp    5e293 <__vfprintf_internal+0x983>
    0.00 :   5f4fb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f500:  mov    0x8(%r12),%rdx
    0.00 :   5f505:  lea    0x8(%rdx),%rax
    0.00 :   5f509:  mov    %rax,0x8(%r12)
    0.00 :   5f50e:  jmp    5e6ab <__vfprintf_internal+0xd9b>
    0.00 :   5f513:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f518:  mov    0x8(%r12),%rdx
    0.00 :   5f51d:  lea    0x8(%rdx),%rax
    0.00 :   5f521:  mov    %rax,0x8(%r12)
    0.00 :   5f526:  jmp    5dff2 <__vfprintf_internal+0x6e2>
    0.00 :   5f52b:  xor    %r13d,%r13d
    0.00 :   5f52e:  test   %r14d,%r14d
    0.00 :   5f531:  jg     5f8ed <__vfprintf_internal+0x1fdd>
    0.00 :   5f537:  xor    %r14d,%r14d
    0.00 :   5f53a:  jmp    5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f53f:  mov    %r15d,%edx
    0.00 :   5f542:  mov    $0x20,%esi
    0.00 :   5f547:  mov    %rbx,%rdi
    0.00 :   5f54a:  mov    %rdx,0x8(%rsp)
    0.00 :   5f54f:  call   78be0 <_IO_padn>
    0.00 :   5f554:  mov    0x8(%rsp),%rdx
    0.00 :   5f559:  cmp    %rax,%rdx
    0.00 :   5f55c:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f562:  movslq %ebp,%rax
    0.00 :   5f565:  add    %rdx,%rax
    0.00 :   5f568:  movslq %eax,%rdx
    0.00 :   5f56b:  movslq %eax,%rbp
    0.00 :   5f56e:  cmp    %rdx,%rax
    0.00 :   5f571:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f577:  test   %eax,%eax
    0.00 :   5f579:  jns    5de1e <__vfprintf_internal+0x50e>
    0.00 :   5f57f:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f584:  nopl   0x0(%rax)
    0.00 :   5f588:  test   %r13d,%r13d
    0.00 :   5f58b:  jle    5dfd7 <__vfprintf_internal+0x6c7>
    0.00 :   5f591:  movslq %r13d,%r14
    0.00 :   5f594:  mov    $0x20,%esi
    0.00 :   5f599:  mov    %rbx,%rdi
    0.00 :   5f59c:  mov    %r14,%rdx
    0.00 :   5f59f:  call   78be0 <_IO_padn>
    0.00 :   5f5a4:  cmp    %rax,%r14
    0.00 :   5f5a7:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f5ad:  xor    %eax,%eax
    0.00 :   5f5af:  add    %r13d,%ebp
    0.00 :   5f5b2:  js     5fdff <__vfprintf_internal+0x24ef>
    0.00 :   5f5b8:  cmp    %r13d,%ebp
    0.00 :   5f5bb:  jb     5fdff <__vfprintf_internal+0x24ef>
    0.00 :   5f5c1:  test   %eax,%eax
    0.00 :   5f5c3:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f5c9:  test   %ebp,%ebp
    0.00 :   5f5cb:  jns    5dfd7 <__vfprintf_internal+0x6c7>
    0.00 :   5f5d1:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f5d6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f5e0:  lea    0x80(%rsp),%rdi
    0.00 :   5f5e8:  call   5aa60 <read_int>
    0.00 :   5f5ed:  mov    %eax,%r11d
    0.00 :   5f5f0:  cmp    $0xffffffff,%eax
    0.00 :   5f5f3:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f5f9:  mov    0x80(%rsp),%rax
    0.00 :   5f601:  movzbl (%rax),%r9d
    0.00 :   5f605:  jmp    5ec6a <__vfprintf_internal+0x135a>
    0.00 :   5f60a:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   5f60f:  jmp    5dc82 <__vfprintf_internal+0x372>
    0.00 :   5f614:  nopl   0x0(%rax)
    0.00 :   5f618:  call   56b40 <__printf_fp>
    0.00 :   5f61d:  jmp    5f112 <__vfprintf_internal+0x1802>
    0.00 :   5f622:  nopw   0x0(%rax,%rax,1)
    0.00 :   5f628:  test   %r14d,%r14d
    0.00 :   5f62b:  je     5f98e <__vfprintf_internal+0x207e>
    0.00 :   5f631:  mov    %bpl,(%rax)
    0.00 :   5f634:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f639:  mov    $0x5,%eax
    0.00 :   5f63e:  lea    0x137b6f(%rip),%r13        # 1971b4 <not_available+0x2f7>
    0.00 :   5f645:  cmp    %eax,%r11d
    0.00 :   5f648:  cmovl  %eax,%r11d
    0.00 :   5f64c:  cmp    $0x53,%r9b
    0.00 :   5f650:  jne    5e0ea <__vfprintf_internal+0x7da>
    0.00 :   5f656:  mov    0x20(%rsp),%r8d
    0.00 :   5f65b:  mov    0x18(%rsp),%ecx
    0.00 :   5f65f:  mov    %ebp,%r9d
    0.00 :   5f662:  mov    %r11d,%edx
    0.00 :   5f665:  mov    %r13,%rsi
    0.00 :   5f668:  mov    %rbx,%rdi
    0.00 :   5f66b:  call   5b010 <outstring_converted_wide_string>
    0.00 :   5f670:  mov    %eax,%ebp
    0.00 :   5f672:  test   %eax,%eax
    0.00 :   5f674:  jns    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f67a:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f67f:  nop
    0.00 :   5f680:  neg    %rax
    0.00 :   5f683:  movl   $0xa,0x28(%rsp)
    0.00 :   5f68b:  movl   $0x1,0x8(%rsp)
    0.00 :   5f693:  mov    %rax,%r14
    0.00 :   5f696:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f69b:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f6a0:  mov    0xd8(%rbx),%r15
    0.00 :   5f6a7:  lea    0x170352(%rip),%rsi        # 1cfa00 <_IO_helper_jumps>
    0.00 :   5f6ae:  mov    0x10(%rsp),%rdi
    0.00 :   5f6b3:  mov    %r15,%rax
    0.00 :   5f6b6:  sub    %rsi,%rax
    0.00 :   5f6b9:  cmp    %rdi,%rax
    0.00 :   5f6bc:  jae    5fd25 <__vfprintf_internal+0x2415>
    0.00 :   5f6c2:  mov    %r14,%rdx
    0.00 :   5f6c5:  mov    %r13,%rsi
    0.00 :   5f6c8:  mov    %rbx,%rdi
    0.00 :   5f6cb:  call   *0x38(%r15)
    0.00 :   5f6cf:  cmp    %rax,%r14
    0.00 :   5f6d2:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f6d8:  movslq %ebp,%rax
    0.00 :   5f6db:  xor    %edx,%edx
    0.00 :   5f6dd:  add    %r14,%rax
    0.00 :   5f6e0:  js     5fde1 <__vfprintf_internal+0x24d1>
    0.00 :   5f6e6:  cmp    %r14,%rax
    0.00 :   5f6e9:  jb     5fde1 <__vfprintf_internal+0x24d1>
    0.00 :   5f6ef:  movslq %eax,%rcx
    0.00 :   5f6f2:  mov    %eax,%ebp
    0.00 :   5f6f4:  cmp    %rcx,%rax
    0.00 :   5f6f7:  mov    $0x1,%ecx
    0.00 :   5f6fc:  cmovne %ecx,%edx
    0.00 :   5f6ff:  test   %edx,%edx
    0.00 :   5f701:  je     5e1c7 <__vfprintf_internal+0x8b7>
    0.00 :   5f707:  jmp    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f70c:  nopl   0x0(%rax)
    0.00 :   5f710:  movl   $0x0,0x7c(%rsp)
    0.00 :   5f718:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f721:  movq   $0x0,0x68(%rsp)
    0.00 :   5f72a:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f72f:  mov    0x38(%rsp),%eax
    0.00 :   5f733:  test   %eax,%eax
    0.00 :   5f735:  je     5e47e <__vfprintf_internal+0xb6e>
    0.00 :   5f73b:  mov    0x28(%rbx),%rax
    0.00 :   5f73f:  cmp    0x30(%rbx),%rax
    0.00 :   5f743:  jae    5fcf3 <__vfprintf_internal+0x23e3>
    0.00 :   5f749:  lea    0x1(%rax),%rdx
    0.00 :   5f74d:  mov    %rdx,0x28(%rbx)
    0.00 :   5f751:  movb   $0x20,(%rax)
    0.00 :   5f754:  jmp    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5f759:  nopl   0x0(%rax)
    0.00 :   5f760:  movl   $0x0,0x7c(%rsp)
    0.00 :   5f768:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f771:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f776:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   5f780:  lea    0x2(%rcx),%rax
    0.00 :   5f784:  mov    %rax,0x80(%rsp)
    0.00 :   5f78c:  mov    %rax,0xa0(%rsp)
    0.00 :   5f794:  movzbl 0x2(%rcx),%eax
    0.00 :   5f798:  sub    $0x30,%eax
    0.00 :   5f79b:  cmp    $0x9,%eax
    0.00 :   5f79e:  jbe    5fb5f <__vfprintf_internal+0x224f>
    0.00 :   5f7a4:  mov    (%r12),%eax
    0.00 :   5f7a8:  cmp    $0x2f,%eax
    0.00 :   5f7ab:  ja     5fa70 <__vfprintf_internal+0x2160>
    0.00 :   5f7b1:  mov    %eax,%edx
    0.00 :   5f7b3:  add    $0x8,%eax
    0.00 :   5f7b6:  add    0x10(%r12),%rdx
    0.00 :   5f7bb:  mov    %eax,(%r12)
    0.00 :   5f7bf:  mov    (%rdx),%eax
    0.00 :   5f7c1:  mov    $0xffffffff,%edx
    0.00 :   5f7c6:  movzbl 0x2(%rcx),%r9d
    0.00 :   5f7cb:  test   %eax,%eax
    0.00 :   5f7cd:  cmovns %eax,%edx
    0.00 :   5f7d0:  mov    %edx,%r11d
    0.00 :   5f7d3:  jmp    5ec6a <__vfprintf_internal+0x135a>
    0.00 :   5f7d8:  nopl   0x0(%rax,%rax,1)
    0.00 :   5f7e0:  lea    0xa0(%rsp),%rdi
    0.00 :   5f7e8:  mov    %rcx,0x18(%rsp)
    0.00 :   5f7ed:  call   5aa60 <read_int>
    0.00 :   5f7f2:  mov    0x18(%rsp),%rcx
    0.00 :   5f7f7:  cmp    $0xffffffff,%eax
    0.00 :   5f7fa:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5f800:  test   %eax,%eax
    0.00 :   5f802:  je     5e690 <__vfprintf_internal+0xd80>
    0.00 :   5f808:  mov    0xa0(%rsp),%rax
    0.00 :   5f810:  cmpb   $0x24,(%rax)
    0.00 :   5f813:  jne    5e690 <__vfprintf_internal+0xd80>
    0.00 :   5f819:  jmp    5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5f81e:  xchg   %ax,%ax
    0.00 :   5f820:  mov    %r13,%rdi
    0.00 :   5f823:  call   26490 <*ABS*+0xa17f0@plt>
    0.00 :   5f828:  mov    %rax,%r14
    0.00 :   5f82b:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5f830:  movq   $0xffffffffffffffff,0x60(%rsp)
    0.00 :   5f839:  jmp    5dae6 <__vfprintf_internal+0x1d6>
    0.00 :   5f83e:  mov    0x17372b(%rip),%rax        # 1d2f70 <_DYNAMIC+0x3f0>
    0.00 :   5f845:  mov    %fs:(%rax),%rax
    0.00 :   5f849:  mov    0x8(%rax),%rax
    0.00 :   5f84d:  mov    0x48(%rax),%rsi
    0.00 :   5f851:  mov    0x40(%rax),%rcx
    0.00 :   5f855:  movzbl (%rsi),%eax
    0.00 :   5f858:  mov    %rcx,0x68(%rsp)
    0.00 :   5f85d:  test   %al,%al
    0.00 :   5f85f:  je     5fa83 <__vfprintf_internal+0x2173>
    0.00 :   5f865:  cmp    $0x7f,%al
    0.00 :   5f867:  je     5fa83 <__vfprintf_internal+0x2173>
    0.00 :   5f86d:  xor    %eax,%eax
    0.00 :   5f86f:  cmpb   $0x0,(%rcx)
    0.00 :   5f872:  cmovne %rsi,%rax
    0.00 :   5f876:  mov    %rax,0x60(%rsp)
    0.00 :   5f87b:  jmp    5e758 <__vfprintf_internal+0xe48>
    0.00 :   5f880:  mov    $0x6,%eax
    0.00 :   5f885:  mov    $0x6,%r14d
    0.00 :   5f88b:  lea    0x137928(%rip),%r13        # 1971ba <null>
    0.00 :   5f892:  jmp    5e0f8 <__vfprintf_internal+0x7e8>
    0.00 :   5f897:  movslq 0x54(%rsp),%r14
    0.00 :   5f89c:  movl   $0x0,0x8(%rsp)
    0.00 :   5f8a4:  movl   $0xa,0x28(%rsp)
    0.00 :   5f8ac:  test   %r14d,%r14d
    0.00 :   5f8af:  jns    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f8b5:  movl   $0x1,0x8(%rsp)
    0.00 :   5f8bd:  neg    %r14
    0.00 :   5f8c0:  jmp    5e356 <__vfprintf_internal+0xa46>
    0.00 :   5f8c5:  mov    %r10,0x8(%rsp)
    0.00 :   5f8ca:  call   818e0 <_IO_vtable_check>
    0.00 :   5f8cf:  mov    0x8(%rsp),%r10
    0.00 :   5f8d4:  jmp    5edc8 <__vfprintf_internal+0x14b8>
    0.00 :   5f8d9:  mov    %r10,0x8(%rsp)
    0.00 :   5f8de:  call   818e0 <_IO_vtable_check>
    0.00 :   5f8e3:  mov    0x8(%rsp),%r10
    0.00 :   5f8e8:  jmp    5e4b5 <__vfprintf_internal+0xba5>
    0.00 :   5f8ed:  movslq %r14d,%rdx
    0.00 :   5f8f0:  mov    $0x20,%esi
    0.00 :   5f8f5:  mov    %rbx,%rdi
    0.00 :   5f8f8:  mov    %r9b,0x48(%rsp)
    0.00 :   5f8fd:  mov    %rdx,0x18(%rsp)
    0.00 :   5f902:  mov    %r11d,0x34(%rsp)
    0.00 :   5f907:  mov    %r10,0x20(%rsp)
    0.00 :   5f90c:  call   78be0 <_IO_padn>
    0.00 :   5f911:  mov    0x18(%rsp),%rdx
    0.00 :   5f916:  cmp    %rax,%rdx
    0.00 :   5f919:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5f91f:  xor    %eax,%eax
    0.00 :   5f921:  add    %ebp,%r14d
    0.00 :   5f924:  mov    0x20(%rsp),%r10
    0.00 :   5f929:  mov    0x34(%rsp),%r11d
    0.00 :   5f92e:  movzbl 0x48(%rsp),%r9d
    0.00 :   5f934:  js     5fdd7 <__vfprintf_internal+0x24c7>
    0.00 :   5f93a:  cmp    %edx,%r14d
    0.00 :   5f93d:  jb     5fdd7 <__vfprintf_internal+0x24c7>
    0.00 :   5f943:  mov    %r14d,%ebp
    0.00 :   5f946:  mov    %eax,%r14d
    0.00 :   5f949:  test   %eax,%eax
    0.00 :   5f94b:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5f951:  test   %ebp,%ebp
    0.00 :   5f953:  jns    5efd7 <__vfprintf_internal+0x16c7>
    0.00 :   5f959:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5f95e:  xchg   %ax,%ax
    0.00 :   5f960:  mov    0x8(%r12),%rdx
    0.00 :   5f965:  lea    0x8(%rdx),%rax
    0.00 :   5f969:  mov    %rax,0x8(%r12)
    0.00 :   5f96e:  jmp    5f090 <__vfprintf_internal+0x1780>
    0.00 :   5f973:  mov    0x8(%r12),%rax
    0.00 :   5f978:  add    $0xf,%rax
    0.00 :   5f97c:  and    $0xfffffffffffffff0,%rax
    0.00 :   5f980:  lea    0x10(%rax),%rdx
    0.00 :   5f984:  mov    %rdx,0x8(%r12)
    0.00 :   5f989:  jmp    5dd9d <__vfprintf_internal+0x48d>
    0.00 :   5f98e:  test   %r13d,%r13d
    0.00 :   5f991:  jne    5fb57 <__vfprintf_internal+0x2247>
    0.00 :   5f997:  mov    %ebp,(%rax)
    0.00 :   5f999:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5f99e:  mov    0x8(%r12),%rdx
    0.00 :   5f9a3:  lea    0x8(%rdx),%rax
    0.00 :   5f9a7:  mov    %rax,0x8(%r12)
    0.00 :   5f9ac:  jmp    5f437 <__vfprintf_internal+0x1b27>
    0.00 :   5f9b1:  mov    0x8(%r12),%rdx
    0.00 :   5f9b6:  lea    0x8(%rdx),%rax
    0.00 :   5f9ba:  mov    %rax,0x8(%r12)
    0.00 :   5f9bf:  jmp    5f31f <__vfprintf_internal+0x1a0f>
   28.49 :   5f9c4:  test   %r13d,%r13d // libc.so.6[5f9c4]
    0.00 :   5f9c7:  jne    5fb24 <__vfprintf_internal+0x2214>
    0.00 :   5f9cd:  cmp    $0x2f,%eax
    0.00 :   5f9d0:  ja     5fc42 <__vfprintf_internal+0x2332>
    0.00 :   5f9d6:  mov    %eax,%edx
    0.00 :   5f9d8:  add    $0x8,%eax
    0.00 :   5f9db:  add    0x10(%r12),%rdx
    0.00 :   5f9e0:  mov    %eax,(%r12)
    0.00 :   5f9e4:  movslq (%rdx),%rax
    0.00 :   5f9e7:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5f9ec:  mov    %r15d,%edx
    0.00 :   5f9ef:  mov    $0x20,%esi
    0.00 :   5f9f4:  mov    %rbx,%rdi
    0.00 :   5f9f7:  mov    %rdx,0x8(%rsp)
    0.00 :   5f9fc:  call   78be0 <_IO_padn>
    0.00 :   5fa01:  mov    0x8(%rsp),%rdx
    0.00 :   5fa06:  cmp    %rax,%rdx
    0.00 :   5fa09:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fa0f:  movslq %ebp,%rax
    0.00 :   5fa12:  add    %rdx,%rax
    0.00 :   5fa15:  movslq %eax,%rdx
    0.00 :   5fa18:  movslq %eax,%rbp
    0.00 :   5fa1b:  cmp    %rdx,%rax
    0.00 :   5fa1e:  jne    5e058 <__vfprintf_internal+0x748>
    0.00 :   5fa24:  test   %eax,%eax
    0.00 :   5fa26:  jns    5e117 <__vfprintf_internal+0x807>
    0.00 :   5fa2c:  jmp    5db32 <__vfprintf_internal+0x222>
    0.00 :   5fa31:  nopl   0x0(%rax)
    0.00 :   5fa38:  xor    %r10d,%r10d
    0.00 :   5fa3b:  xor    %edx,%edx
    0.00 :   5fa3d:  jmp    5dcd1 <__vfprintf_internal+0x3c1>
    0.00 :   5fa42:  movslq %r15d,%r15
    0.00 :   5fa45:  mov    $0x20,%esi
    0.00 :   5fa4a:  mov    %rbx,%rdi
    0.00 :   5fa4d:  mov    %r15,%rdx
    0.00 :   5fa50:  call   78be0 <_IO_padn>
    0.00 :   5fa55:  cmp    %rax,%r15
    0.00 :   5fa58:  jne    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fa5e:  add    %ebp,%r15d
    0.00 :   5fa61:  mov    %r15d,%ebp
    0.00 :   5fa64:  jno    5f12a <__vfprintf_internal+0x181a>
    0.00 :   5fa6a:  jmp    5e058 <__vfprintf_internal+0x748>
    0.00 :   5fa6f:  nop
    0.00 :   5fa70:  mov    0x8(%r12),%rdx
    0.00 :   5fa75:  lea    0x8(%rdx),%rax
    0.00 :   5fa79:  mov    %rax,0x8(%r12)
    0.00 :   5fa7e:  jmp    5f7bf <__vfprintf_internal+0x1eaf>
    0.00 :   5fa83:  movq   $0x0,0x60(%rsp)
    0.00 :   5fa8c:  jmp    5e758 <__vfprintf_internal+0xe48>
    0.00 :   5fa91:  mov    %r9b,0x20(%rsp)
    0.00 :   5fa96:  mov    $0x2d,%esi
    0.00 :   5fa9b:  mov    %r11d,0x18(%rsp)
    0.00 :   5faa0:  mov    %r10,0x8(%rsp)
    0.00 :   5faa5:  mov    %rbx,%rdi
    0.00 :   5faa8:  call   84a60 <__overflow>
    0.00 :   5faad:  mov    0x8(%rsp),%r10
    0.00 :   5fab2:  mov    0x18(%rsp),%r11d
    0.00 :   5fab7:  cmp    $0xffffffff,%eax
    0.00 :   5faba:  movzbl 0x20(%rsp),%r9d
    0.00 :   5fac0:  jne    5effc <__vfprintf_internal+0x16ec>
    0.00 :   5fac6:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5facb:  nopl   0x0(%rax,%rax,1)
    0.00 :   5fad0:  mov    %r9b,0x30(%rsp)
    0.00 :   5fad5:  mov    $0x2d,%esi
    0.00 :   5fada:  mov    %r11d,0x20(%rsp)
    0.00 :   5fadf:  mov    %r10,0x8(%rsp)
    0.00 :   5fae4:  mov    %rbx,%rdi
    0.00 :   5fae7:  call   84a60 <__overflow>
    0.00 :   5faec:  mov    0x8(%rsp),%r10
    0.00 :   5faf1:  mov    0x20(%rsp),%r11d
    0.00 :   5faf6:  cmp    $0xffffffff,%eax
    0.00 :   5faf9:  movzbl 0x30(%rsp),%r9d
    0.00 :   5faff:  jne    5ed1d <__vfprintf_internal+0x140d>
    0.00 :   5fb05:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fb0a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fb10:  mov    %rax,0x8(%rsp)
    0.00 :   5fb15:  call   818e0 <_IO_vtable_check>
    0.00 :   5fb1a:  mov    0x8(%rsp),%rax
    0.00 :   5fb1f:  jmp    5de40 <__vfprintf_internal+0x530>
    0.00 :   5fb24:  cmp    $0x2f,%eax
    0.00 :   5fb27:  ja     5fc2f <__vfprintf_internal+0x231f>
    0.00 :   5fb2d:  mov    %eax,%edx
    0.00 :   5fb2f:  add    $0x8,%eax
    0.00 :   5fb32:  add    0x10(%r12),%rdx
    0.00 :   5fb37:  mov    %eax,(%r12)
    0.00 :   5fb3b:  movswq (%rdx),%rax
    0.00 :   5fb3f:  jmp    5e590 <__vfprintf_internal+0xc80>
    0.00 :   5fb44:  mov    0x8(%r12),%rdx
    0.00 :   5fb49:  lea    0x8(%rdx),%rax
    0.00 :   5fb4d:  mov    %rax,0x8(%r12)
    0.00 :   5fb52:  jmp    5e58c <__vfprintf_internal+0xc7c>
    0.00 :   5fb57:  mov    %bp,(%rax)
    0.00 :   5fb5a:  jmp    5dea0 <__vfprintf_internal+0x590>
    0.00 :   5fb5f:  lea    0xa0(%rsp),%rdi
    0.00 :   5fb67:  mov    %rcx,0x28(%rsp)
    0.00 :   5fb6c:  call   5aa60 <read_int>
    0.00 :   5fb71:  mov    0x28(%rsp),%rcx
    0.00 :   5fb76:  cmp    $0xffffffff,%eax
    0.00 :   5fb79:  je     5e058 <__vfprintf_internal+0x748>
    0.00 :   5fb7f:  test   %eax,%eax
    0.00 :   5fb81:  je     5f7a4 <__vfprintf_internal+0x1e94>
    0.00 :   5fb87:  mov    0xa0(%rsp),%rax
    0.00 :   5fb8f:  cmpb   $0x24,(%rax)
    0.00 :   5fb92:  jne    5f7a4 <__vfprintf_internal+0x1e94>
    0.00 :   5fb98:  jmp    5dae2 <__vfprintf_internal+0x1d2>
    0.00 :   5fb9d:  nopl   (%rax)
    0.00 :   5fba0:  mov    %rax,0x8(%rsp)
    0.00 :   5fba5:  call   818e0 <_IO_vtable_check>
    0.00 :   5fbaa:  mov    0x8(%rsp),%rax
    0.00 :   5fbaf:  jmp    5e139 <__vfprintf_internal+0x829>
    0.00 :   5fbb4:  mov    0x173255(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5fbbb:  or     $0x20,%ebp
    0.00 :   5fbbe:  mov    %ebp,(%rbx)
    0.00 :   5fbc0:  movl   $0x9,%fs:(%rax)
    0.00 :   5fbc7:  jmp    5dc29 <__vfprintf_internal+0x319>
    0.00 :   5fbcc:  mov    $0x25,%esi
    0.00 :   5fbd1:  mov    %rbx,%rdi
    0.00 :   5fbd4:  call   84a60 <__overflow>
    0.00 :   5fbd9:  cmp    $0xffffffff,%eax
    0.00 :   5fbdc:  jne    5e5d5 <__vfprintf_internal+0xcc5>
    0.00 :   5fbe2:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fbe7:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fbf0:  mov    %r9b,0x20(%rsp)
    0.00 :   5fbf5:  mov    $0x2b,%esi
    0.00 :   5fbfa:  mov    %r11d,0x18(%rsp)
    0.00 :   5fbff:  mov    %r10,0x8(%rsp)
    0.00 :   5fc04:  jmp    5faa5 <__vfprintf_internal+0x2195>
    0.00 :   5fc09:  mov    %r9b,0x30(%rsp)
    0.00 :   5fc0e:  mov    $0x2b,%esi
    0.00 :   5fc13:  mov    %r11d,0x20(%rsp)
    0.00 :   5fc18:  mov    %r10,0x8(%rsp)
    0.00 :   5fc1d:  jmp    5fae4 <__vfprintf_internal+0x21d4>
    0.00 :   5fc22:  movzbl 0x8(%rsp),%eax
    0.00 :   5fc27:  xor    $0x1,%eax
    0.00 :   5fc2a:  jmp    5e0ce <__vfprintf_internal+0x7be>
    0.00 :   5fc2f:  mov    0x8(%r12),%rdx
    0.00 :   5fc34:  lea    0x8(%rdx),%rax
    0.00 :   5fc38:  mov    %rax,0x8(%r12)
    0.00 :   5fc3d:  jmp    5fb3b <__vfprintf_internal+0x222b>
    0.00 :   5fc42:  mov    0x8(%r12),%rdx
    0.00 :   5fc47:  lea    0x8(%rdx),%rax
    0.00 :   5fc4b:  mov    %rax,0x8(%r12)
    0.00 :   5fc50:  jmp    5f9e4 <__vfprintf_internal+0x20d4>
    0.00 :   5fc55:  movzbl %dl,%esi
    0.00 :   5fc58:  mov    %rbx,%rdi
    0.00 :   5fc5b:  call   84a60 <__overflow>
    0.00 :   5fc60:  cmp    $0xffffffff,%eax
    0.00 :   5fc63:  jne    5e00c <__vfprintf_internal+0x6fc>
    0.00 :   5fc69:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fc6e:  xchg   %ax,%ax
    0.00 :   5fc70:  movzbl %r9b,%esi
    0.00 :   5fc74:  mov    %rbx,%rdi
    0.00 :   5fc77:  mov    %r11d,0x18(%rsp)
    0.00 :   5fc7c:  mov    %r10,0x8(%rsp)
    0.00 :   5fc81:  call   84a60 <__overflow>
    0.00 :   5fc86:  mov    0x8(%rsp),%r10
    0.00 :   5fc8b:  mov    0x18(%rsp),%r11d
    0.00 :   5fc90:  cmp    $0xffffffff,%eax
    0.00 :   5fc93:  jne    5f1a9 <__vfprintf_internal+0x1899>
    0.00 :   5fc99:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fc9e:  xchg   %ax,%ax
    0.00 :   5fca0:  mov    $0x30,%esi
    0.00 :   5fca5:  mov    %rbx,%rdi
    0.00 :   5fca8:  mov    %r9b,0x20(%rsp)
    0.00 :   5fcad:  mov    %r11d,0x18(%rsp)
    0.00 :   5fcb2:  mov    %r10,0x8(%rsp)
    0.00 :   5fcb7:  call   84a60 <__overflow>
    0.00 :   5fcbc:  mov    0x8(%rsp),%r10
    0.00 :   5fcc1:  mov    0x18(%rsp),%r11d
    0.00 :   5fcc6:  cmp    $0xffffffff,%eax
    0.00 :   5fcc9:  movzbl 0x20(%rsp),%r9d
    0.00 :   5fccf:  jne    5f184 <__vfprintf_internal+0x1874>
    0.00 :   5fcd5:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fcda:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fce0:  mov    0x173129(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   5fce7:  movl   $0x16,%fs:(%rax)
    0.00 :   5fcee:  jmp    5dc29 <__vfprintf_internal+0x319>
    0.00 :   5fcf3:  mov    %r9b,0x20(%rsp)
    0.00 :   5fcf8:  mov    $0x20,%esi
    0.00 :   5fcfd:  mov    %r11d,0x18(%rsp)
    0.00 :   5fd02:  mov    %r10,0x8(%rsp)
    0.00 :   5fd07:  jmp    5faa5 <__vfprintf_internal+0x2195>
    0.00 :   5fd0c:  mov    %r9b,0x30(%rsp)
    0.00 :   5fd11:  mov    $0x20,%esi
    0.00 :   5fd16:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd1b:  mov    %r10,0x8(%rsp)
    0.00 :   5fd20:  jmp    5fae4 <__vfprintf_internal+0x21d4>
    0.00 :   5fd25:  call   818e0 <_IO_vtable_check>
    0.00 :   5fd2a:  jmp    5f6c2 <__vfprintf_internal+0x1db2>
    0.00 :   5fd2f:  movzbl %r9b,%esi
    0.00 :   5fd33:  mov    %rbx,%rdi
    0.00 :   5fd36:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd3b:  mov    %r10,0x8(%rsp)
    0.00 :   5fd40:  call   84a60 <__overflow>
    0.00 :   5fd45:  mov    0x8(%rsp),%r10
    0.00 :   5fd4a:  mov    0x20(%rsp),%r11d
    0.00 :   5fd4f:  cmp    $0xffffffff,%eax
    0.00 :   5fd52:  jne    5f2a1 <__vfprintf_internal+0x1991>
    0.00 :   5fd58:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fd5d:  nopl   (%rax)
    0.00 :   5fd60:  mov    $0x30,%esi
    0.00 :   5fd65:  mov    %rbx,%rdi
    0.00 :   5fd68:  mov    %r9b,0x28(%rsp)
    0.00 :   5fd6d:  mov    %r11d,0x20(%rsp)
    0.00 :   5fd72:  mov    %r10,0x8(%rsp)
    0.00 :   5fd77:  call   84a60 <__overflow>
    0.00 :   5fd7c:  mov    0x8(%rsp),%r10
    0.00 :   5fd81:  mov    0x20(%rsp),%r11d
    0.00 :   5fd86:  cmp    $0xffffffff,%eax
    0.00 :   5fd89:  movzbl 0x28(%rsp),%r9d
    0.00 :   5fd8f:  jne    5f27c <__vfprintf_internal+0x196c>
    0.00 :   5fd95:  jmp    5e070 <__vfprintf_internal+0x760>
    0.00 :   5fd9a:  nopw   0x0(%rax,%rax,1)
    0.00 :   5fda0:  mov    %r11d,0x20(%rsp)
    0.00 :   5fda5:  jmp    5eece <__vfprintf_internal+0x15be>
    0.00 :   5fdaa:  mov    $0x1,%edx
    0.00 :   5fdaf:  jmp    5df1d <__vfprintf_internal+0x60d>
    0.00 :   5fdb4:  call   11ba20 <__stack_chk_fail>
    0.00 :   5fdb9:  mov    $0x1,%edx
    0.00 :   5fdbe:  jmp    5edf5 <__vfprintf_internal+0x14e5>
    0.00 :   5fdc3:  mov    $0x1,%eax
    0.00 :   5fdc8:  jmp    5e4e2 <__vfprintf_internal+0xbd2>
    0.00 :   5fdcd:  mov    $0x1,%eax
    0.00 :   5fdd2:  jmp    5ed96 <__vfprintf_internal+0x1486>
    0.00 :   5fdd7:  mov    $0x1,%eax
    0.00 :   5fddc:  jmp    5f943 <__vfprintf_internal+0x2033>
    0.00 :   5fde1:  mov    $0x1,%edx
    0.00 :   5fde6:  jmp    5f6ef <__vfprintf_internal+0x1ddf>
    0.00 :   5fdeb:  mov    $0x1,%edx
    0.00 :   5fdf0:  jmp    5e165 <__vfprintf_internal+0x855>
    0.00 :   5fdf5:  mov    $0x1,%edx
    0.00 :   5fdfa:  jmp    5de6c <__vfprintf_internal+0x55c>
    0.00 :   5fdff:  mov    $0x1,%eax
    0.00 :   5fe04:  jmp    5f5c1 <__vfprintf_internal+0x1cb1>

Sorted summary for file /usr/local/bin/dbt2-driver3
----------------------------------------------

   55.03 dbt2-driver3[409d90]
   44.97 dbt2-driver3[40994e]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver3 for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040974b <execute_new_order_libpq>:
         : 6      execute_new_order_libpq():
    0.00 :   40974b: push   %rbp
    0.00 :   40974c: mov    %rsp,%rbp
    0.00 :   40974f: sub    $0x420,%rsp
    0.00 :   409756: mov    %rdi,-0x418(%rbp)
    0.00 :   40975d: mov    %rsi,-0x420(%rbp)
    0.00 :   409764: movl   $0x1,-0x270(%rbp)
    0.00 :   40976e: movl   $0x1,-0x26c(%rbp)
    0.00 :   409778: movl   $0x1,-0x268(%rbp)
    0.00 :   409782: movl   $0x1,-0x264(%rbp)
    0.00 :   40978c: movl   $0x1,-0x260(%rbp)
    0.00 :   409796: movl   $0x1,-0x25c(%rbp)
    0.00 :   4097a0: movl   $0x1,-0x258(%rbp)
    0.00 :   4097aa: movl   $0x1,-0x254(%rbp)
    0.00 :   4097b4: movl   $0x1,-0x250(%rbp)
    0.00 :   4097be: movl   $0x1,-0x24c(%rbp)
    0.00 :   4097c8: movl   $0x1,-0x248(%rbp)
    0.00 :   4097d2: movl   $0x1,-0x244(%rbp)
    0.00 :   4097dc: movl   $0x1,-0x240(%rbp)
    0.00 :   4097e6: movl   $0x1,-0x23c(%rbp)
    0.00 :   4097f0: movl   $0x1,-0x238(%rbp)
    0.00 :   4097fa: movl   $0x1,-0x234(%rbp)
    0.00 :   409804: movl   $0x1,-0x230(%rbp)
    0.00 :   40980e: movl   $0x1,-0x22c(%rbp)
    0.00 :   409818: movl   $0x1,-0x228(%rbp)
    0.00 :   409822: movl   $0x1,-0x224(%rbp)
    0.00 :   40982c: movl   $0x1,-0x220(%rbp)
    0.00 :   409836: movl   $0x1,-0x21c(%rbp)
    0.00 :   409840: movl   $0x1,-0x218(%rbp)
    0.00 :   40984a: movl   $0x1,-0x214(%rbp)
    0.00 :   409854: movl   $0x1,-0x210(%rbp)
    0.00 :   40985e: movl   $0x1,-0x20c(%rbp)
    0.00 :   409868: movl   $0x1,-0x208(%rbp)
    0.00 :   409872: movl   $0x1,-0x204(%rbp)
    0.00 :   40987c: movl   $0x1,-0x200(%rbp)
    0.00 :   409886: movl   $0x1,-0x1fc(%rbp)
    0.00 :   409890: movl   $0x1,-0x1f8(%rbp)
    0.00 :   40989a: movl   $0x1,-0x1f4(%rbp)
    0.00 :   4098a4: movl   $0x1,-0x1f0(%rbp)
    0.00 :   4098ae: movl   $0x1,-0x1ec(%rbp)
    0.00 :   4098b8: movl   $0x1,-0x1e8(%rbp)
    0.00 :   4098c2: movl   $0x1,-0x1e4(%rbp)
    0.00 :   4098cc: movl   $0x1,-0x1e0(%rbp)
    0.00 :   4098d6: movl   $0x1,-0x1dc(%rbp)
    0.00 :   4098e0: movl   $0x1,-0x1d8(%rbp)
    0.00 :   4098ea: movl   $0x1,-0x1d4(%rbp)
    0.00 :   4098f4: movl   $0x1,-0x1d0(%rbp)
    0.00 :   4098fe: movl   $0x1,-0x1cc(%rbp)
    0.00 :   409908: movl   $0x1,-0x1c8(%rbp)
    0.00 :   409912: movl   $0x1,-0x1c4(%rbp)
    0.00 :   40991c: movl   $0x1,-0x1c0(%rbp)
    0.00 :   409926: movl   $0x1,-0x1bc(%rbp)
    0.00 :   409930: movl   $0x1,-0x1b8(%rbp)
    0.00 :   40993a: movl   $0x1,-0x1b4(%rbp)
    0.00 :   409944: movl   $0x1,-0x1b0(%rbp)
   44.97 :   40994e: movl   $0x1,-0x1ac(%rbp) // dbt2-driver3[40994e]
    0.00 :   409958: lea    -0x340(%rbp),%rdx
    0.00 :   40995f: mov    $0x0,%eax
    0.00 :   409964: mov    $0x19,%ecx
    0.00 :   409969: mov    %rdx,%rdi
    0.00 :   40996c: rep stos %rax,%es:(%rdi)
    0.00 :   40996f: movl   $0x4,-0x340(%rbp)
    0.00 :   409979: movl   $0x4,-0x33c(%rbp)
    0.00 :   409983: movl   $0x4,-0x338(%rbp)
    0.00 :   40998d: movl   $0x4,-0x334(%rbp)
    0.00 :   409997: movl   $0x4,-0x330(%rbp)
    0.00 :   4099a1: mov    -0x418(%rbp),%rax
    0.00 :   4099a8: mov    0x78(%rax),%rax
    0.00 :   4099ac: mov    $0x415cb0,%esi
    0.00 :   4099b1: mov    %rax,%rdi
    0.00 :   4099b4: call   407130 <PQexec@plt>
    0.00 :   4099b9: mov    %rax,-0x10(%rbp)
    0.00 :   4099bd: cmpq   $0x0,-0x10(%rbp)
    0.00 :   4099c2: je     4099d5 <execute_new_order_libpq+0x28a>
    0.00 :   4099c4: mov    -0x10(%rbp),%rax
    0.00 :   4099c8: mov    %rax,%rdi
    0.00 :   4099cb: call   407030 <PQresultStatus@plt>
    0.00 :   4099d0: cmp    $0x1,%eax
    0.00 :   4099d3: je     409a1a <execute_new_order_libpq+0x2cf>
    0.00 :   4099d5: mov    -0x418(%rbp),%rax
    0.00 :   4099dc: mov    0x78(%rax),%rax
    0.00 :   4099e0: mov    %rax,%rdi
    0.00 :   4099e3: call   4071d0 <PQerrorMessage@plt>
    0.00 :   4099e8: mov    %rax,%rcx
    0.00 :   4099eb: mov    $0x415cb6,%edx
    0.00 :   4099f0: mov    $0x41,%esi
    0.00 :   4099f5: mov    $0x415cc0,%edi
    0.00 :   4099fa: mov    $0x0,%eax
    0.00 :   4099ff: call   4083bf <log_error_message>
    0.00 :   409a04: mov    -0x10(%rbp),%rax
    0.00 :   409a08: mov    %rax,%rdi
    0.00 :   409a0b: call   407070 <PQclear@plt>
    0.00 :   409a10: mov    $0x0,%eax
    0.00 :   409a15: jmp    409e34 <execute_new_order_libpq+0x6e9>
    0.00 :   409a1a: mov    -0x10(%rbp),%rax
    0.00 :   409a1e: mov    %rax,%rdi
    0.00 :   409a21: call   407070 <PQclear@plt>
    0.00 :   409a26: mov    -0x420(%rbp),%rax
    0.00 :   409a2d: mov    (%rax),%eax
    0.00 :   409a2f: mov    %eax,%edi
    0.00 :   409a31: call   4071c0 <htonl@plt>
    0.00 :   409a36: mov    %eax,-0x344(%rbp)
    0.00 :   409a3c: mov    -0x420(%rbp),%rax
    0.00 :   409a43: mov    0x4(%rax),%eax
    0.00 :   409a46: mov    %eax,%edi
    0.00 :   409a48: call   4071c0 <htonl@plt>
    0.00 :   409a4d: mov    %eax,-0x348(%rbp)
    0.00 :   409a53: mov    -0x420(%rbp),%rax
    0.00 :   409a5a: mov    0x8(%rax),%eax
    0.00 :   409a5d: mov    %eax,%edi
    0.00 :   409a5f: call   4071c0 <htonl@plt>
    0.00 :   409a64: mov    %eax,-0x34c(%rbp)
    0.00 :   409a6a: mov    -0x420(%rbp),%rax
    0.00 :   409a71: mov    0x10(%rax),%eax
    0.00 :   409a74: mov    %eax,%edi
    0.00 :   409a76: call   4071c0 <htonl@plt>
    0.00 :   409a7b: mov    %eax,-0x350(%rbp)
    0.00 :   409a81: mov    -0x420(%rbp),%rax
    0.00 :   409a88: mov    0xc(%rax),%eax
    0.00 :   409a8b: mov    %eax,%edi
    0.00 :   409a8d: call   4071c0 <htonl@plt>
    0.00 :   409a92: mov    %eax,-0x354(%rbp)
    0.00 :   409a98: lea    -0x344(%rbp),%rax
    0.00 :   409a9f: mov    %rax,-0x1a0(%rbp)
    0.00 :   409aa6: lea    -0x348(%rbp),%rax
    0.00 :   409aad: mov    %rax,-0x198(%rbp)
    0.00 :   409ab4: lea    -0x34c(%rbp),%rax
    0.00 :   409abb: mov    %rax,-0x190(%rbp)
    0.00 :   409ac2: lea    -0x350(%rbp),%rax
    0.00 :   409ac9: mov    %rax,-0x188(%rbp)
    0.00 :   409ad0: lea    -0x354(%rbp),%rax
    0.00 :   409ad7: mov    %rax,-0x180(%rbp)
    0.00 :   409ade: movl   $0x0,-0x4(%rbp)
    0.00 :   409ae5: jmp    409c80 <execute_new_order_libpq+0x535>
    0.00 :   409aea: mov    -0x420(%rbp),%rcx
    0.00 :   409af1: mov    -0x4(%rbp),%eax
    0.00 :   409af4: movslq %eax,%rdx
    0.00 :   409af7: mov    %rdx,%rax
    0.00 :   409afa: add    %rax,%rax
    0.00 :   409afd: add    %rdx,%rax
    0.00 :   409b00: lea    0x0(,%rax,8),%rdx
    0.00 :   409b08: add    %rdx,%rax
    0.00 :   409b0b: shl    $0x4,%rax
    0.00 :   409b0f: add    %rcx,%rax
    0.00 :   409b12: add    $0x18,%rax
    0.00 :   409b16: mov    (%rax),%eax
    0.00 :   409b18: mov    %eax,%edi
    0.00 :   409b1a: call   4071c0 <htonl@plt>
    0.00 :   409b1f: mov    -0x4(%rbp),%edx
    0.00 :   409b22: movslq %edx,%rdx
    0.00 :   409b25: mov    %eax,-0x390(%rbp,%rdx,4)
    0.00 :   409b2c: mov    -0x420(%rbp),%rcx
    0.00 :   409b33: mov    -0x4(%rbp),%eax
    0.00 :   409b36: movslq %eax,%rdx
    0.00 :   409b39: mov    %rdx,%rax
    0.00 :   409b3c: add    %rax,%rax
    0.00 :   409b3f: add    %rdx,%rax
    0.00 :   409b42: lea    0x0(,%rax,8),%rdx
    0.00 :   409b4a: add    %rdx,%rax
    0.00 :   409b4d: shl    $0x4,%rax
    0.00 :   409b51: add    %rcx,%rax
    0.00 :   409b54: add    $0x1c,%rax
    0.00 :   409b58: mov    (%rax),%eax
    0.00 :   409b5a: mov    %eax,%edi
    0.00 :   409b5c: call   4071c0 <htonl@plt>
    0.00 :   409b61: mov    -0x4(%rbp),%edx
    0.00 :   409b64: movslq %edx,%rdx
    0.00 :   409b67: mov    %eax,-0x3d0(%rbp,%rdx,4)
    0.00 :   409b6e: mov    -0x420(%rbp),%rcx
    0.00 :   409b75: mov    -0x4(%rbp),%eax
    0.00 :   409b78: movslq %eax,%rdx
    0.00 :   409b7b: mov    %rdx,%rax
    0.00 :   409b7e: add    %rax,%rax
    0.00 :   409b81: add    %rdx,%rax
    0.00 :   409b84: lea    0x0(,%rax,8),%rdx
    0.00 :   409b8c: add    %rdx,%rax
    0.00 :   409b8f: shl    $0x4,%rax
    0.00 :   409b93: add    %rcx,%rax
    0.00 :   409b96: add    $0x20,%rax
    0.00 :   409b9a: mov    (%rax),%eax
    0.00 :   409b9c: mov    %eax,%edi
    0.00 :   409b9e: call   4071c0 <htonl@plt>
    0.00 :   409ba3: mov    -0x4(%rbp),%edx
    0.00 :   409ba6: movslq %edx,%rdx
    0.00 :   409ba9: mov    %eax,-0x410(%rbp,%rdx,4)
    0.00 :   409bb0: mov    -0x4(%rbp),%edx
    0.00 :   409bb3: mov    %edx,%eax
    0.00 :   409bb5: add    %eax,%eax
    0.00 :   409bb7: add    %edx,%eax
    0.00 :   409bb9: lea    0x5(%rax),%ecx
    0.00 :   409bbc: lea    -0x390(%rbp),%rax
    0.00 :   409bc3: mov    -0x4(%rbp),%edx
    0.00 :   409bc6: movslq %edx,%rdx
    0.00 :   409bc9: shl    $0x2,%rdx
    0.00 :   409bcd: add    %rax,%rdx
    0.00 :   409bd0: movslq %ecx,%rax
    0.00 :   409bd3: mov    %rdx,-0x1a0(%rbp,%rax,8)
    0.00 :   409bdb: mov    -0x4(%rbp),%edx
    0.00 :   409bde: mov    %edx,%eax
    0.00 :   409be0: add    %eax,%eax
    0.00 :   409be2: add    %edx,%eax
    0.00 :   409be4: lea    0x6(%rax),%ecx
    0.00 :   409be7: lea    -0x3d0(%rbp),%rax
    0.00 :   409bee: mov    -0x4(%rbp),%edx
    0.00 :   409bf1: movslq %edx,%rdx
    0.00 :   409bf4: shl    $0x2,%rdx
    0.00 :   409bf8: add    %rax,%rdx
    0.00 :   409bfb: movslq %ecx,%rax
    0.00 :   409bfe: mov    %rdx,-0x1a0(%rbp,%rax,8)
    0.00 :   409c06: mov    -0x4(%rbp),%edx
    0.00 :   409c09: mov    %edx,%eax
    0.00 :   409c0b: add    %eax,%eax
    0.00 :   409c0d: add    %edx,%eax
    0.00 :   409c0f: lea    0x7(%rax),%ecx
    0.00 :   409c12: lea    -0x410(%rbp),%rax
    0.00 :   409c19: mov    -0x4(%rbp),%edx
    0.00 :   409c1c: movslq %edx,%rdx
    0.00 :   409c1f: shl    $0x2,%rdx
    0.00 :   409c23: add    %rax,%rdx
    0.00 :   409c26: movslq %ecx,%rax
    0.00 :   409c29: mov    %rdx,-0x1a0(%rbp,%rax,8)
    0.00 :   409c31: mov    -0x4(%rbp),%edx
    0.00 :   409c34: mov    %edx,%eax
    0.00 :   409c36: add    %eax,%eax
    0.00 :   409c38: add    %edx,%eax
    0.00 :   409c3a: add    $0x5,%eax
    0.00 :   409c3d: cltq
    0.00 :   409c3f: movl   $0x4,-0x340(%rbp,%rax,4)
    0.00 :   409c4a: mov    -0x4(%rbp),%edx
    0.00 :   409c4d: mov    %edx,%eax
    0.00 :   409c4f: add    %eax,%eax
    0.00 :   409c51: add    %edx,%eax
    0.00 :   409c53: add    $0x6,%eax
    0.00 :   409c56: cltq
    0.00 :   409c58: movl   $0x4,-0x340(%rbp,%rax,4)
    0.00 :   409c63: mov    -0x4(%rbp),%edx
    0.00 :   409c66: mov    %edx,%eax
    0.00 :   409c68: add    %eax,%eax
    0.00 :   409c6a: add    %edx,%eax
    0.00 :   409c6c: add    $0x7,%eax
    0.00 :   409c6f: cltq
    0.00 :   409c71: movl   $0x4,-0x340(%rbp,%rax,4)
    0.00 :   409c7c: addl   $0x1,-0x4(%rbp)
    0.00 :   409c80: mov    -0x420(%rbp),%rax
    0.00 :   409c87: mov    0xc(%rax),%eax
    0.00 :   409c8a: cmp    %eax,-0x4(%rbp)
    0.00 :   409c8d: jl     409aea <execute_new_order_libpq+0x39f>
    0.00 :   409c93: mov    -0x420(%rbp),%rax
    0.00 :   409c9a: mov    0xc(%rax),%eax
    0.00 :   409c9d: mov    %eax,-0x4(%rbp)
    0.00 :   409ca0: jmp    409d42 <execute_new_order_libpq+0x5f7>
    0.00 :   409ca5: mov    -0x4(%rbp),%edx
    0.00 :   409ca8: mov    %edx,%eax
    0.00 :   409caa: add    %eax,%eax
    0.00 :   409cac: add    %edx,%eax
    0.00 :   409cae: add    $0x5,%eax
    0.00 :   409cb1: cltq
    0.00 :   409cb3: movq   $0x0,-0x1a0(%rbp,%rax,8)
    0.00 :   409cbf: mov    -0x4(%rbp),%edx
    0.00 :   409cc2: mov    %edx,%eax
    0.00 :   409cc4: add    %eax,%eax
    0.00 :   409cc6: add    %edx,%eax
    0.00 :   409cc8: add    $0x6,%eax
    0.00 :   409ccb: cltq
    0.00 :   409ccd: movq   $0x0,-0x1a0(%rbp,%rax,8)
    0.00 :   409cd9: mov    -0x4(%rbp),%edx
    0.00 :   409cdc: mov    %edx,%eax
    0.00 :   409cde: add    %eax,%eax
    0.00 :   409ce0: add    %edx,%eax
    0.00 :   409ce2: add    $0x7,%eax
    0.00 :   409ce5: cltq
    0.00 :   409ce7: movq   $0x0,-0x1a0(%rbp,%rax,8)
    0.00 :   409cf3: mov    -0x4(%rbp),%edx
    0.00 :   409cf6: mov    %edx,%eax
    0.00 :   409cf8: add    %eax,%eax
    0.00 :   409cfa: add    %edx,%eax
    0.00 :   409cfc: add    $0x5,%eax
    0.00 :   409cff: cltq
    0.00 :   409d01: movl   $0x0,-0x340(%rbp,%rax,4)
    0.00 :   409d0c: mov    -0x4(%rbp),%edx
    0.00 :   409d0f: mov    %edx,%eax
    0.00 :   409d11: add    %eax,%eax
    0.00 :   409d13: add    %edx,%eax
    0.00 :   409d15: add    $0x6,%eax
    0.00 :   409d18: cltq
    0.00 :   409d1a: movl   $0x0,-0x340(%rbp,%rax,4)
    0.00 :   409d25: mov    -0x4(%rbp),%edx
    0.00 :   409d28: mov    %edx,%eax
    0.00 :   409d2a: add    %eax,%eax
    0.00 :   409d2c: add    %edx,%eax
    0.00 :   409d2e: add    $0x7,%eax
    0.00 :   409d31: cltq
    0.00 :   409d33: movl   $0x0,-0x340(%rbp,%rax,4)
    0.00 :   409d3e: addl   $0x1,-0x4(%rbp)
    0.00 :   409d42: cmpl   $0xe,-0x4(%rbp)
    0.00 :   409d46: jle    409ca5 <execute_new_order_libpq+0x55a>
    0.00 :   409d4c: mov    -0x418(%rbp),%rax
    0.00 :   409d53: mov    0x78(%rax),%rax
    0.00 :   409d57: lea    -0x340(%rbp),%rsi
    0.00 :   409d5e: lea    -0x1a0(%rbp),%rcx
    0.00 :   409d65: push   $0x1
    0.00 :   409d67: lea    -0x270(%rbp),%rdx
    0.00 :   409d6e: push   %rdx
    0.00 :   409d6f: mov    %rsi,%r9
    0.00 :   409d72: mov    %rcx,%r8
    0.00 :   409d75: mov    $0x0,%ecx
    0.00 :   409d7a: mov    $0x32,%edx
    0.00 :   409d7f: mov    $0x415cf0,%esi
    0.00 :   409d84: mov    %rax,%rdi
    0.00 :   409d87: call   4072c0 <PQexecParams@plt>
    0.00 :   409d8c: add    $0x10,%rsp
   55.03 :   409d90: mov    %rax,-0x10(%rbp) // dbt2-driver3[409d90]
    0.00 :   409d94: mov    -0x10(%rbp),%rax
    0.00 :   409d98: mov    %rax,%rdi
    0.00 :   409d9b: call   407030 <PQresultStatus@plt>
    0.00 :   409da0: cmp    $0x2,%eax
    0.00 :   409da3: je     409df8 <execute_new_order_libpq+0x6ad>
    0.00 :   409da5: mov    -0x420(%rbp),%rax
    0.00 :   409dac: movl   $0x0,0x19d8(%rax)
    0.00 :   409db6: mov    -0x418(%rbp),%rax
    0.00 :   409dbd: mov    0x78(%rax),%rax
    0.00 :   409dc1: mov    %rax,%rdi
    0.00 :   409dc4: call   4071d0 <PQerrorMessage@plt>
    0.00 :   409dc9: mov    %rax,%rcx
    0.00 :   409dcc: mov    $0x415e17,%edx
    0.00 :   409dd1: mov    $0x7a,%esi
    0.00 :   409dd6: mov    $0x415cc0,%edi
    0.00 :   409ddb: mov    $0x0,%eax
    0.00 :   409de0: call   4083bf <log_error_message>
    0.00 :   409de5: mov    -0x10(%rbp),%rax
    0.00 :   409de9: mov    %rax,%rdi
    0.00 :   409dec: call   407070 <PQclear@plt>
    0.00 :   409df1: mov    $0x0,%eax
    0.00 :   409df6: jmp    409e34 <execute_new_order_libpq+0x6e9>
    0.00 :   409df8: mov    -0x10(%rbp),%rax
    0.00 :   409dfc: mov    $0x0,%edx
    0.00 :   409e01: mov    $0x0,%esi
    0.00 :   409e06: mov    %rax,%rdi
    0.00 :   409e09: call   407040 <PQgetvalue@plt>
    0.00 :   409e0e: mov    %rax,%rdi
    0.00 :   409e11: call   407440 <atoi@plt>
    0.00 :   409e16: mov    -0x420(%rbp),%rdx
    0.00 :   409e1d: mov    %eax,0x19d8(%rdx)
    0.00 :   409e23: mov    -0x10(%rbp),%rax
    0.00 :   409e27: mov    %rax,%rdi
    0.00 :   409e2a: call   407070 <PQclear@plt>
    0.00 :   409e2f: mov    $0x1,%eax
    0.00 :   409e34: leave
    0.00 :   409e35: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[3e040]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000003e040 <atoi>:
         : 6     __GI_atoi():
  100.00 :   3e040:  endbr64 // libc.so.6[3e040]
    0.00 :   3e044:  sub    $0x8,%rsp
    0.00 :   3e048:  mov    $0xa,%edx
    0.00 :   3e04d:  xor    %esi,%esi
    0.00 :   3e04f:  call   49ad0 <strtoimax>
    0.00 :   3e054:  add    $0x8,%rsp
    0.00 :   3e058:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   43.65 [nf_tables][19bc0]
   30.92 [nf_tables][19bcc]
   25.43 [nf_tables][19c14]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (3 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000019bc0 <nft_set_do_lookup>:
         : 6     nft_set_do_lookup():
   43.65 :   19bc0:  call   19bc5 <nft_set_do_lookup+0x5> // [nf_tables][19bc0]
    0.00 :   19bc5:  mov    0xc0(%rsi),%rax
   30.92 :   19bcc:  cmp    $0x0,%rax // [nf_tables][19bcc]
    0.00 :   19bd2:  je     19c14 <nft_set_do_lookup+0x54>
    0.00 :   19bd4:  cmp    $0x0,%rax
    0.00 :   19bda:  je     19c19 <nft_set_do_lookup+0x59>
    0.00 :   19bdc:  cmp    $0x0,%rax
    0.00 :   19be2:  je     19c1e <nft_set_do_lookup+0x5e>
    0.00 :   19be4:  cmp    $0x0,%rax
    0.00 :   19bea:  je     19c23 <nft_set_do_lookup+0x63>
    0.00 :   19bec:  cmp    $0x0,%rax
    0.00 :   19bf2:  je     19c28 <nft_set_do_lookup+0x68>
    0.00 :   19bf4:  cmp    $0x0,%rax
    0.00 :   19bfa:  je     19c2d <nft_set_do_lookup+0x6d>
    0.00 :   19bfc:  cmp    $0x0,%rax
    0.00 :   19c02:  je     19c0f <nft_set_do_lookup+0x4f>
    0.00 :   19c04:  ud2
    0.00 :   19c06:  mov    (%rax),%rax
    0.00 :   19c09:  jmp    19c0e <nft_set_do_lookup+0x4e>
    0.00 :   19c0e:  int3
    0.00 :   19c0f:  jmp    19c14 <nft_set_do_lookup+0x54>
   25.43 :   19c14:  jmp    19c19 <nft_set_do_lookup+0x59> // [nf_tables][19c14]
    0.00 :   19c19:  jmp    19c1e <nft_set_do_lookup+0x5e>
    0.00 :   19c1e:  jmp    19c23 <nft_set_do_lookup+0x63>
    0.00 :   19c23:  jmp    19c28 <nft_set_do_lookup+0x68>
    0.00 :   19c28:  jmp    19c2d <nft_set_do_lookup+0x6d>
    0.00 :   19c2d:  jmp    19c32 <nft_set_do_lookup+0x72>

Sorted summary for file /usr/lib64/ld-linux-x86-64.so.2
----------------------------------------------

  100.00 /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-reloc.c:359
 Percent |	Source code & Disassembly of /usr/lib64/ld-linux-x86-64.so.2 for cycles (1 samples, percent: local period)
--------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    000000000000e140 <_dl_protect_relro>:
         : 6    _dl_protect_relro():
    0.00 :   e140:   endbr64
    0.00 :   e144:   mov    0x2692d(%rip),%rax        # 34a78 <_rtld_global_ro+0x18>
    0.00 :   e14b:   push   %rbx
    0.00 :   e14c:   mov    %rdi,%rbx
    0.00 :   e14f:   mov    0x488(%rdi),%rsi
    0.00 :   e156:   add    (%rdi),%rsi
    0.00 :   e159:   neg    %rax
    0.00 :   e15c:   mov    %rsi,%rdi
    0.00 :   e15f:   add    0x490(%rbx),%rsi
    0.00 :   e166:   and    %rax,%rdi
  100.00 :   e169:   and    %rax,%rsi // /usr/src/debug/glibc-2.36-9.fc37.x86_64/elf/dl-reloc.c:359
    0.00 :   e16c:   cmp    %rsi,%rdi
    0.00 :   e16f:   jne    e178 <_dl_protect_relro+0x38>
    0.00 :   e171:   pop    %rbx
    0.00 :   e172:   ret
    0.00 :   e173:   nopl   0x0(%rax,%rax,1)
    0.00 :   e178:   sub    %rdi,%rsi
    0.00 :   e17b:   mov    $0x1,%edx
    0.00 :   e180:   call   21bb0 <__GI___mprotect>
    0.00 :   e185:   test   %eax,%eax
    0.00 :   e187:   jns    e171 <_dl_protect_relro+0x31>
    0.00 :   e189:   mov    0x8(%rbx),%rsi
    0.00 :   e18d:   mov    0x280ed(%rip),%edi        # 36280 <rtld_errno>
    0.00 :   e193:   lea    0x1fde6(%rip),%rcx        # 2df80 <errstring.1>
    0.00 :   e19a:   xor    %edx,%edx
    0.00 :   e19c:   call   1070 <_dl_signal_error@plt>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

   75.46 [nf_conntrack][930]
   57.22 [nf_conntrack][940]
   57.22 [nf_conntrack][93f]
    5.05 [nf_conntrack][99e]
    5.05 [nf_conntrack][99a]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (3 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000930 <get_l4proto>:
         : 6   get_l4proto():
   37.73 :   930:    call   935 <get_l4proto+0x5> // [nf_conntrack][930]
    0.00 :   935:    push   %r13
    0.00 :   937:    push   %r12
    0.00 :   939:    mov    %rcx,%r12
    0.00 :   93c:    push   %rbp
    0.00 :   93d:    mov    %rdi,%rbp
   57.22 :   940:    sub    $0x20,%rsp // [nf_conntrack][940]
    0.00 :   944:    cmp    $0x2,%dl
    0.00 :   947:    je     964 <get_l4proto+0x34>
    0.00 :   949:    cmp    $0xa,%dl
    0.00 :   94c:    je     9c4 <get_l4proto+0x94>
    0.00 :   94e:    movb   $0x0,(%rcx)
    0.00 :   951:    mov    $0xffffffff,%eax
    0.00 :   956:    add    $0x20,%rsp
    0.00 :   95a:    pop    %rbp
    0.00 :   95b:    pop    %r12
    0.00 :   95d:    pop    %r13
    0.00 :   95f:    jmp    964 <get_l4proto+0x34>
    0.00 :   964:    mov    0x70(%rdi),%eax
    0.00 :   967:    sub    0x74(%rdi),%eax
    0.00 :   96a:    movq   $0x0,0xc(%rsp)
    0.00 :   973:    sub    %esi,%eax
    0.00 :   975:    movl   $0x0,0x1c(%rsp)
    0.00 :   97d:    mov    0xd0(%rdi),%rdx
    0.00 :   984:    movq   $0x0,0x14(%rsp)
    0.00 :   98d:    cmp    $0x13,%eax
    0.00 :   990:    jle    a52 <get_l4proto+0x122>
    0.00 :   996:    movslq %esi,%rax
    0.00 :   999:    add    %rax,%rdx
    0.00 :   99c:    je     951 <get_l4proto+0x21>
    5.05 :   99e:    testw  $0xff1f,0x6(%rdx) // [nf_conntrack][99e]
    0.00 :   9a4:    jne    951 <get_l4proto+0x21>
    0.00 :   9a6:    movzbl (%rdx),%eax
    0.00 :   9a9:    movzbl 0x9(%rdx),%ecx
    0.00 :   9ad:    and    $0xf,%eax
    0.00 :   9b0:    mov    %cl,(%r12)
    0.00 :   9b4:    mov    0x70(%rbp),%r8d
    0.00 :   9b8:    lea    (%rsi,%rax,4),%eax
    0.00 :   9bb:    cmp    %eax,%r8d
    0.00 :   9be:    jae    956 <get_l4proto+0x26>
    0.00 :   9c0:    xchg   %ax,%ax
    0.00 :   9c2:    jmp    951 <get_l4proto+0x21>
    0.00 :   9c4:    xor    %eax,%eax
    0.00 :   9c6:    lea    0x28(%rsi),%r13d
    0.00 :   9ca:    mov    $0x1,%ecx
    0.00 :   9cf:    add    $0x6,%esi
    0.00 :   9d2:    lea    0xb(%rsp),%rdx
    0.00 :   9d7:    mov    %ax,0xc(%rsp)
    0.00 :   9dc:    movb   $0x0,0xb(%rsp)
    0.00 :   9e1:    call   9e6 <get_l4proto+0xb6>
    0.00 :   9e6:    test   %eax,%eax
    0.00 :   9e8:    jne    a84 <get_l4proto+0x154>
    0.00 :   9ee:    lea    0xc(%rsp),%rcx
    0.00 :   9f3:    lea    0xb(%rsp),%rdx
    0.00 :   9f8:    mov    %r13d,%esi
    0.00 :   9fb:    mov    %rbp,%rdi
    0.00 :   9fe:    call   a03 <get_l4proto+0xd3>
    0.00 :   a03:    test   %eax,%eax
    0.00 :   a05:    js     aa3 <get_l4proto+0x173>
    0.00 :   a0b:    testw  $0xf8ff,0xc(%rsp)
    0.00 :   a12:    jne    aa3 <get_l4proto+0x173>
    0.00 :   a18:    movzbl 0xb(%rsp),%edx
    0.00 :   a1d:    mov    %dl,(%r12)
    0.00 :   a21:    add    $0x20,%rsp
    0.00 :   a25:    pop    %rbp
    0.00 :   a26:    pop    %r12
    0.00 :   a28:    pop    %r13
    0.00 :   a2a:    jmp    a2f <get_l4proto+0xff>
    0.00 :   a2f:    movzbl (%rdx),%ecx
    0.00 :   a32:    mov    $0x0,%rdi
    0.00 :   a39:    mov    %esi,%edx
    0.00 :   a3b:    mov    $0x0,%rsi
    0.00 :   a42:    and    $0xf,%ecx
    0.00 :   a45:    shl    $0x2,%ecx
    0.00 :   a48:    call   a4d <get_l4proto+0x11d>
    0.00 :   a4d:    jmp    951 <get_l4proto+0x21>
    0.00 :   a52:    test   %rdi,%rdi
    0.00 :   a55:    je     951 <get_l4proto+0x21>
    0.00 :   a5b:    mov    $0x14,%ecx
    0.00 :   a60:    lea    0xc(%rsp),%rdx
    0.00 :   a65:    mov    %esi,0x4(%rsp)
    0.00 :   a69:    call   a6e <get_l4proto+0x13e>
    0.00 :   a6e:    test   %eax,%eax
    0.00 :   a70:    js     951 <get_l4proto+0x21>
    0.00 :   a76:    mov    0x4(%rsp),%esi
    0.00 :   a7a:    lea    0xc(%rsp),%rdx
    0.00 :   a7f:    jmp    99e <get_l4proto+0x6e>
    0.00 :   a84:    xchg   %ax,%ax
    0.00 :   a86:    jmp    951 <get_l4proto+0x21>
    0.00 :   a8b:    mov    $0x0,%rsi
    0.00 :   a92:    mov    $0x0,%rdi
    0.00 :   a99:    call   a9e <get_l4proto+0x16e>
    0.00 :   a9e:    jmp    951 <get_l4proto+0x21>
    0.00 :   aa3:    xchg   %ax,%ax
    0.00 :   aa5:    jmp    951 <get_l4proto+0x21>
    0.00 :   aaa:    mov    $0x0,%rsi
    0.00 :   ab1:    mov    $0x0,%rdi
    0.00 :   ab8:    call   abd <get_l4proto+0x18d>
    0.00 :   abd:    jmp    951 <get_l4proto+0x21>
         :
         : 107 Disassembly of section .text.unlikely:
         :
         : 109 0000000000000930 <nf_conntrack_dccp_packet.cold+0x7>:
         : 110 nf_conntrack_dccp_packet.cold():
   37.73 :   930:    mov    $0x0,%rcx // [nf_conntrack][930]
    0.00 :   937:    mov    $0x21,%edx
    0.00 :   93c:    mov    %r10,%rsi
   57.22 :   93f:    mov    %rbx,%rdi // [nf_conntrack][93f]
    0.00 :   942:    call   947 <nf_conntrack_dccp_packet.cold+0x1e>
    0.00 :   947:    jmp    94c <nf_conntrack_dccp_packet.cold+0x23>
    0.00 :   94c:    mov    $0x0,%r8
    0.00 :   953:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
    0.00 :   955:    mov    $0x0,%r8
    0.00 :   95c:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
    0.00 :   95e:    mov    $0x0,%r8
    0.00 :   965:    jmp    930 <nf_conntrack_dccp_packet.cold+0x7>
         :
         : 124 0000000000000967 <nf_conntrack_sctp_packet.cold>:
         : 125 nf_conntrack_sctp_packet.cold():
    0.00 :   967:    mov    $0x0,%r8
    0.00 :   96e:    mov    $0x0,%rcx
    0.00 :   975:    mov    $0x84,%edx
    0.00 :   97a:    mov    %r13,%rsi
    0.00 :   97d:    mov    %rbx,%rdi
    0.00 :   980:    call   985 <nf_conntrack_sctp_packet.cold+0x1e>
    0.00 :   985:    jmp    98a <nf_conntrack_sctp_packet.cold+0x23>
    0.00 :   98a:    mov    $0x0,%r8
    0.00 :   991:    jmp    96e <nf_conntrack_sctp_packet.cold+0x7>
    0.00 :   993:    mov    $0x0,%r8
    5.05 :   99a:    jmp    96e <nf_conntrack_sctp_packet.cold+0x7> // [nf_conntrack][99a]

Sorted summary for file /usr/local/bin/dbt2-driver3
----------------------------------------------

  100.00 dbt2-driver3[407030]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver3 for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .init:
         :
         : 5      0000000000407000 <_init>:
         : 6      _init():
    0.00 :   407000: endbr64
    0.00 :   407004: sub    $0x8,%rsp
    0.00 :   407008: mov    0x15fe9(%rip),%rax        # 41cff8 <__gmon_start__@Base>
    0.00 :   40700f: test   %rax,%rax
    0.00 :   407012: je     407016 <_init+0x16>
    0.00 :   407014: call   *%rax
    0.00 :   407016: add    $0x8,%rsp
    0.00 :   40701a: ret
         :
         : 16     Disassembly of section .plt:
         :
         : 18     0000000000407020 <PQresultStatus@plt-0x10>:
    0.00 :   407020: push   0x15fe2(%rip)        # 41d008 <_GLOBAL_OFFSET_TABLE_+0x8>
    0.00 :   407026: jmp    *0x15fe4(%rip)        # 41d010 <_GLOBAL_OFFSET_TABLE_+0x10>
    0.00 :   40702c: nopl   0x0(%rax)
         :
         : 23     0000000000407030 <PQresultStatus@plt>:
  100.00 :   407030: jmp    *0x15fe2(%rip)        # 41d018 <PQresultStatus@Base> // dbt2-driver3[407030]
    0.00 :   407036: push   $0x0
    0.00 :   40703b: jmp    407020 <_init+0x20>
         :
         : 28     0000000000407040 <PQgetvalue@plt>:
    0.00 :   407040: jmp    *0x15fda(%rip)        # 41d020 <PQgetvalue@Base>
    0.00 :   407046: push   $0x1
    0.00 :   40704b: jmp    407020 <_init+0x20>
         :
         : 33     0000000000407050 <__errno_location@plt>:
    0.00 :   407050: jmp    *0x15fd2(%rip)        # 41d028 <__errno_location@GLIBC_2.2.5>
    0.00 :   407056: push   $0x2
    0.00 :   40705b: jmp    407020 <_init+0x20>
         :
         : 38     0000000000407060 <printf@plt>:
    0.00 :   407060: jmp    *0x15fca(%rip)        # 41d030 <printf@GLIBC_2.2.5>
    0.00 :   407066: push   $0x3
    0.00 :   40706b: jmp    407020 <_init+0x20>
         :
         : 43     0000000000407070 <PQclear@plt>:
    0.00 :   407070: jmp    *0x15fc2(%rip)        # 41d038 <PQclear@Base>
    0.00 :   407076: push   $0x4
    0.00 :   40707b: jmp    407020 <_init+0x20>
         :
         : 48     0000000000407080 <htons@plt>:
    0.00 :   407080: jmp    *0x15fba(%rip)        # 41d040 <htons@GLIBC_2.2.5>
    0.00 :   407086: push   $0x5
    0.00 :   40708b: jmp    407020 <_init+0x20>
         :
         : 53     0000000000407090 <get_nprocs@plt>:
    0.00 :   407090: jmp    *0x15fb2(%rip)        # 41d048 <get_nprocs@GLIBC_2.2.5>
    0.00 :   407096: push   $0x6
    0.00 :   40709b: jmp    407020 <_init+0x20>
         :
         : 58     00000000004070a0 <bind@plt>:
    0.00 :   4070a0: jmp    *0x15faa(%rip)        # 41d050 <bind@GLIBC_2.2.5>
    0.00 :   4070a6: push   $0x7
    0.00 :   4070ab: jmp    407020 <_init+0x20>
         :
         : 63     00000000004070b0 <sprintf@plt>:
    0.00 :   4070b0: jmp    *0x15fa2(%rip)        # 41d058 <sprintf@GLIBC_2.2.5>
    0.00 :   4070b6: push   $0x8
    0.00 :   4070bb: jmp    407020 <_init+0x20>
         :
         : 68     00000000004070c0 <socket@plt>:
    0.00 :   4070c0: jmp    *0x15f9a(%rip)        # 41d060 <socket@GLIBC_2.2.5>
    0.00 :   4070c6: push   $0x9
    0.00 :   4070cb: jmp    407020 <_init+0x20>
         :
         : 73     00000000004070d0 <fork@plt>:
    0.00 :   4070d0: jmp    *0x15f92(%rip)        # 41d068 <fork@GLIBC_2.2.5>
    0.00 :   4070d6: push   $0xa
    0.00 :   4070db: jmp    407020 <_init+0x20>
         :
         : 78     00000000004070e0 <nanosleep@plt>:
    0.00 :   4070e0: jmp    *0x15f8a(%rip)        # 41d070 <nanosleep@GLIBC_2.2.5>
    0.00 :   4070e6: push   $0xb
    0.00 :   4070eb: jmp    407020 <_init+0x20>
         :
         : 83     00000000004070f0 <accept@plt>:
    0.00 :   4070f0: jmp    *0x15f82(%rip)        # 41d078 <accept@GLIBC_2.2.5>
    0.00 :   4070f6: push   $0xc
    0.00 :   4070fb: jmp    407020 <_init+0x20>
         :
         : 88     0000000000407100 <recv@plt>:
    0.00 :   407100: jmp    *0x15f7a(%rip)        # 41d080 <recv@GLIBC_2.2.5>
    0.00 :   407106: push   $0xd
    0.00 :   40710b: jmp    407020 <_init+0x20>
         :
         : 93     0000000000407110 <getprotobyname@plt>:
    0.00 :   407110: jmp    *0x15f72(%rip)        # 41d088 <getprotobyname@GLIBC_2.2.5>
    0.00 :   407116: push   $0xe
    0.00 :   40711b: jmp    407020 <_init+0x20>
         :
         : 98     0000000000407120 <strlen@plt>:
    0.00 :   407120: jmp    *0x15f6a(%rip)        # 41d090 <strlen@GLIBC_2.2.5>
    0.00 :   407126: push   $0xf
    0.00 :   40712b: jmp    407020 <_init+0x20>
         :
         : 103    0000000000407130 <PQexec@plt>:
    0.00 :   407130: jmp    *0x15f62(%rip)        # 41d098 <PQexec@Base>
    0.00 :   407136: push   $0x10
    0.00 :   40713b: jmp    407020 <_init+0x20>
         :
         : 108    0000000000407140 <send@plt>:
    0.00 :   407140: jmp    *0x15f5a(%rip)        # 41d0a0 <send@GLIBC_2.2.5>
    0.00 :   407146: push   $0x11
    0.00 :   40714b: jmp    407020 <_init+0x20>
         :
         : 113    0000000000407150 <ev_default_loop@plt>:
    0.00 :   407150: jmp    *0x15f52(%rip)        # 41d0a8 <ev_default_loop@Base>
    0.00 :   407156: push   $0x12
    0.00 :   40715b: jmp    407020 <_init+0x20>
         :
         : 118    0000000000407160 <strncpy@plt>:
    0.00 :   407160: jmp    *0x15f4a(%rip)        # 41d0b0 <strncpy@GLIBC_2.2.5>
    0.00 :   407166: push   $0x13
    0.00 :   40716b: jmp    407020 <_init+0x20>
         :
         : 123    0000000000407170 <memset@plt>:
    0.00 :   407170: jmp    *0x15f42(%rip)        # 41d0b8 <memset@GLIBC_2.2.5>
    0.00 :   407176: push   $0x14
    0.00 :   40717b: jmp    407020 <_init+0x20>
         :
         : 128    0000000000407180 <PQconnectdbParams@plt>:
    0.00 :   407180: jmp    *0x15f3a(%rip)        # 41d0c0 <PQconnectdbParams@Base>
    0.00 :   407186: push   $0x15
    0.00 :   40718b: jmp    407020 <_init+0x20>
         :
         : 133    0000000000407190 <ev_run@plt>:
    0.00 :   407190: jmp    *0x15f32(%rip)        # 41d0c8 <ev_run@Base>
    0.00 :   407196: push   $0x16
    0.00 :   40719b: jmp    407020 <_init+0x20>
         :
         : 138    00000000004071a0 <localtime@plt>:
    0.00 :   4071a0: jmp    *0x15f2a(%rip)        # 41d0d0 <localtime@GLIBC_2.2.5>
    0.00 :   4071a6: push   $0x17
    0.00 :   4071ab: jmp    407020 <_init+0x20>
         :
         : 143    00000000004071b0 <pthread_mutex_unlock@plt>:
    0.00 :   4071b0: jmp    *0x15f22(%rip)        # 41d0d8 <pthread_mutex_unlock@GLIBC_2.2.5>
    0.00 :   4071b6: push   $0x18
    0.00 :   4071bb: jmp    407020 <_init+0x20>
         :
         : 148    00000000004071c0 <htonl@plt>:
    0.00 :   4071c0: jmp    *0x15f1a(%rip)        # 41d0e0 <htonl@GLIBC_2.2.5>
    0.00 :   4071c6: push   $0x19
    0.00 :   4071cb: jmp    407020 <_init+0x20>
         :
         : 153    00000000004071d0 <PQerrorMessage@plt>:
    0.00 :   4071d0: jmp    *0x15f12(%rip)        # 41d0e8 <PQerrorMessage@Base>
    0.00 :   4071d6: push   $0x1a
    0.00 :   4071db: jmp    407020 <_init+0x20>
         :
         : 158    00000000004071e0 <sched_setaffinity@plt>:
    0.00 :   4071e0: jmp    *0x15f0a(%rip)        # 41d0f0 <sched_setaffinity@GLIBC_2.3.4>
    0.00 :   4071e6: push   $0x1b
    0.00 :   4071eb: jmp    407020 <_init+0x20>
         :
         : 163    00000000004071f0 <log@plt>:
    0.00 :   4071f0: jmp    *0x15f02(%rip)        # 41d0f8 <log@GLIBC_2.29>
    0.00 :   4071f6: push   $0x1c
    0.00 :   4071fb: jmp    407020 <_init+0x20>
         :
         : 168    0000000000407200 <strftime@plt>:
    0.00 :   407200: jmp    *0x15efa(%rip)        # 41d100 <strftime@GLIBC_2.2.5>
    0.00 :   407206: push   $0x1d
    0.00 :   40720b: jmp    407020 <_init+0x20>
         :
         : 173    0000000000407210 <ev_timer_start@plt>:
    0.00 :   407210: jmp    *0x15ef2(%rip)        # 41d108 <ev_timer_start@Base>
    0.00 :   407216: push   $0x1e
    0.00 :   40721b: jmp    407020 <_init+0x20>
         :
         : 178    0000000000407220 <connect@plt>:
    0.00 :   407220: jmp    *0x15eea(%rip)        # 41d110 <connect@GLIBC_2.2.5>
    0.00 :   407226: push   $0x1f
    0.00 :   40722b: jmp    407020 <_init+0x20>
         :
         : 183    0000000000407230 <perror@plt>:
    0.00 :   407230: jmp    *0x15ee2(%rip)        # 41d118 <perror@GLIBC_2.2.5>
    0.00 :   407236: push   $0x20
    0.00 :   40723b: jmp    407020 <_init+0x20>
         :
         : 188    0000000000407240 <wcstombs@plt>:
    0.00 :   407240: jmp    *0x15eda(%rip)        # 41d120 <wcstombs@GLIBC_2.2.5>
    0.00 :   407246: push   $0x21
    0.00 :   40724b: jmp    407020 <_init+0x20>
         :
         : 193    0000000000407250 <pthread_self@plt>:
    0.00 :   407250: jmp    *0x15ed2(%rip)        # 41d128 <pthread_self@GLIBC_2.2.5>
    0.00 :   407256: push   $0x22
    0.00 :   40725b: jmp    407020 <_init+0x20>
         :
         : 198    0000000000407260 <setlocale@plt>:
    0.00 :   407260: jmp    *0x15eca(%rip)        # 41d130 <setlocale@GLIBC_2.2.5>
    0.00 :   407266: push   $0x23
    0.00 :   40726b: jmp    407020 <_init+0x20>
         :
         : 203    0000000000407270 <wcscat@plt>:
    0.00 :   407270: jmp    *0x15ec2(%rip)        # 41d138 <wcscat@GLIBC_2.2.5>
    0.00 :   407276: push   $0x24
    0.00 :   40727b: jmp    407020 <_init+0x20>
         :
         : 208    0000000000407280 <time@plt>:
    0.00 :   407280: jmp    *0x15eba(%rip)        # 41d140 <time@GLIBC_2.2.5>
    0.00 :   407286: push   $0x25
    0.00 :   40728b: jmp    407020 <_init+0x20>
         :
         : 213    0000000000407290 <strcpy@plt>:
    0.00 :   407290: jmp    *0x15eb2(%rip)        # 41d148 <strcpy@GLIBC_2.2.5>
    0.00 :   407296: push   $0x26
    0.00 :   40729b: jmp    407020 <_init+0x20>
         :
         : 218    00000000004072a0 <fclose@plt>:
    0.00 :   4072a0: jmp    *0x15eaa(%rip)        # 41d150 <fclose@GLIBC_2.2.5>
    0.00 :   4072a6: push   $0x27
    0.00 :   4072ab: jmp    407020 <_init+0x20>
         :
         : 223    00000000004072b0 <ev_timer_stop@plt>:
    0.00 :   4072b0: jmp    *0x15ea2(%rip)        # 41d158 <ev_timer_stop@Base>
    0.00 :   4072b6: push   $0x28
    0.00 :   4072bb: jmp    407020 <_init+0x20>
         :
         : 228    00000000004072c0 <PQexecParams@plt>:
    0.00 :   4072c0: jmp    *0x15e9a(%rip)        # 41d160 <PQexecParams@Base>
    0.00 :   4072c6: push   $0x29
    0.00 :   4072cb: jmp    407020 <_init+0x20>
         :
         : 233    00000000004072d0 <listen@plt>:
    0.00 :   4072d0: jmp    *0x15e92(%rip)        # 41d168 <listen@GLIBC_2.2.5>
    0.00 :   4072d6: push   $0x2a
    0.00 :   4072db: jmp    407020 <_init+0x20>
         :
         : 238    00000000004072e0 <fflush@plt>:
    0.00 :   4072e0: jmp    *0x15e8a(%rip)        # 41d170 <fflush@GLIBC_2.2.5>
    0.00 :   4072e6: push   $0x2b
    0.00 :   4072eb: jmp    407020 <_init+0x20>
         :
         : 243    00000000004072f0 <fopen@plt>:
    0.00 :   4072f0: jmp    *0x15e82(%rip)        # 41d178 <fopen@GLIBC_2.2.5>
    0.00 :   4072f6: push   $0x2c
    0.00 :   4072fb: jmp    407020 <_init+0x20>
         :
         : 248    0000000000407300 <free@plt>:
    0.00 :   407300: jmp    *0x15e7a(%rip)        # 41d180 <free@GLIBC_2.2.5>
    0.00 :   407306: push   $0x2d
    0.00 :   40730b: jmp    407020 <_init+0x20>
         :
         : 253    0000000000407310 <PQstatus@plt>:
    0.00 :   407310: jmp    *0x15e72(%rip)        # 41d188 <PQstatus@Base>
    0.00 :   407316: push   $0x2e
    0.00 :   40731b: jmp    407020 <_init+0x20>
         :
         : 258    0000000000407320 <atof@plt>:
    0.00 :   407320: jmp    *0x15e6a(%rip)        # 41d190 <atof@GLIBC_2.2.5>
    0.00 :   407326: push   $0x2f
    0.00 :   40732b: jmp    407020 <_init+0x20>
         :
         : 263    0000000000407330 <wait@plt>:
    0.00 :   407330: jmp    *0x15e62(%rip)        # 41d198 <wait@GLIBC_2.2.5>
    0.00 :   407336: push   $0x30
    0.00 :   40733b: jmp    407020 <_init+0x20>
         :
         : 268    0000000000407340 <fputc@plt>:
    0.00 :   407340: jmp    *0x15e5a(%rip)        # 41d1a0 <fputc@GLIBC_2.2.5>
    0.00 :   407346: push   $0x31
    0.00 :   40734b: jmp    407020 <_init+0x20>
         :
         : 273    0000000000407350 <getaddrinfo@plt>:
    0.00 :   407350: jmp    *0x15e52(%rip)        # 41d1a8 <getaddrinfo@GLIBC_2.2.5>
    0.00 :   407356: push   $0x32
    0.00 :   40735b: jmp    407020 <_init+0x20>
         :
         : 278    0000000000407360 <ntohl@plt>:
    0.00 :   407360: jmp    *0x15e4a(%rip)        # 41d1b0 <ntohl@GLIBC_2.2.5>
    0.00 :   407366: push   $0x33
    0.00 :   40736b: jmp    407020 <_init+0x20>
         :
         : 283    0000000000407370 <PQntuples@plt>:
    0.00 :   407370: jmp    *0x15e42(%rip)        # 41d1b8 <PQntuples@Base>
    0.00 :   407376: push   $0x34
    0.00 :   40737b: jmp    407020 <_init+0x20>
         :
         : 288    0000000000407380 <freeaddrinfo@plt>:
    0.00 :   407380: jmp    *0x15e3a(%rip)        # 41d1c0 <freeaddrinfo@GLIBC_2.2.5>
    0.00 :   407386: push   $0x35
    0.00 :   40738b: jmp    407020 <_init+0x20>
         :
         : 293    0000000000407390 <malloc@plt>:
    0.00 :   407390: jmp    *0x15e32(%rip)        # 41d1c8 <malloc@GLIBC_2.2.5>
    0.00 :   407396: push   $0x36
    0.00 :   40739b: jmp    407020 <_init+0x20>
         :
         : 298    00000000004073a0 <vfprintf@plt>:
    0.00 :   4073a0: jmp    *0x15e2a(%rip)        # 41d1d0 <vfprintf@GLIBC_2.2.5>
    0.00 :   4073a6: push   $0x37
    0.00 :   4073ab: jmp    407020 <_init+0x20>
         :
         : 303    00000000004073b0 <gai_strerror@plt>:
    0.00 :   4073b0: jmp    *0x15e22(%rip)        # 41d1d8 <gai_strerror@GLIBC_2.2.5>
    0.00 :   4073b6: push   $0x38
    0.00 :   4073bb: jmp    407020 <_init+0x20>
         :
         : 308    00000000004073c0 <putchar@plt>:
    0.00 :   4073c0: jmp    *0x15e1a(%rip)        # 41d1e0 <putchar@GLIBC_2.2.5>
    0.00 :   4073c6: push   $0x39
    0.00 :   4073cb: jmp    407020 <_init+0x20>
         :
         : 313    00000000004073d0 <strcmp@plt>:
    0.00 :   4073d0: jmp    *0x15e12(%rip)        # 41d1e8 <strcmp@GLIBC_2.2.5>
    0.00 :   4073d6: push   $0x3a
    0.00 :   4073db: jmp    407020 <_init+0x20>
         :
         : 318    00000000004073e0 <fprintf@plt>:
    0.00 :   4073e0: jmp    *0x15e0a(%rip)        # 41d1f0 <fprintf@GLIBC_2.2.5>
    0.00 :   4073e6: push   $0x3b
    0.00 :   4073eb: jmp    407020 <_init+0x20>
         :
         : 323    00000000004073f0 <getpid@plt>:
    0.00 :   4073f0: jmp    *0x15e02(%rip)        # 41d1f8 <getpid@GLIBC_2.2.5>
    0.00 :   4073f6: push   $0x3c
    0.00 :   4073fb: jmp    407020 <_init+0x20>
         :
         : 328    0000000000407400 <pthread_mutex_lock@plt>:
    0.00 :   407400: jmp    *0x15dfa(%rip)        # 41d200 <pthread_mutex_lock@GLIBC_2.2.5>
    0.00 :   407406: push   $0x3d
    0.00 :   40740b: jmp    407020 <_init+0x20>
         :
         : 333    0000000000407410 <swprintf@plt>:
    0.00 :   407410: jmp    *0x15df2(%rip)        # 41d208 <swprintf@GLIBC_2.2.5>
    0.00 :   407416: push   $0x3e
    0.00 :   40741b: jmp    407020 <_init+0x20>
         :
         : 338    0000000000407420 <fread@plt>:
    0.00 :   407420: jmp    *0x15dea(%rip)        # 41d210 <fread@GLIBC_2.2.5>
    0.00 :   407426: push   $0x3f
    0.00 :   40742b: jmp    407020 <_init+0x20>
         :
         : 343    0000000000407430 <puts@plt>:
    0.00 :   407430: jmp    *0x15de2(%rip)        # 41d218 <puts@GLIBC_2.2.5>
    0.00 :   407436: push   $0x40
    0.00 :   40743b: jmp    407020 <_init+0x20>
         :
         : 348    0000000000407440 <atoi@plt>:
    0.00 :   407440: jmp    *0x15dda(%rip)        # 41d220 <atoi@GLIBC_2.2.5>
    0.00 :   407446: push   $0x41
    0.00 :   40744b: jmp    407020 <_init+0x20>
         :
         : 353    0000000000407450 <snprintf@plt>:
    0.00 :   407450: jmp    *0x15dd2(%rip)        # 41d228 <snprintf@GLIBC_2.2.5>
    0.00 :   407456: push   $0x42
    0.00 :   40745b: jmp    407020 <_init+0x20>
         :
         : 358    0000000000407460 <gettimeofday@plt>:
    0.00 :   407460: jmp    *0x15dca(%rip)        # 41d230 <gettimeofday@GLIBC_2.2.5>
    0.00 :   407466: push   $0x43
    0.00 :   40746b: jmp    407020 <_init+0x20>
         :
         : 363    0000000000407470 <PQfinish@plt>:
    0.00 :   407470: jmp    *0x15dc2(%rip)        # 41d238 <PQfinish@Base>
    0.00 :   407476: push   $0x44
    0.00 :   40747b: jmp    407020 <_init+0x20>
         :
         : 368    0000000000407480 <setsockopt@plt>:
    0.00 :   407480: jmp    *0x15dba(%rip)        # 41d240 <setsockopt@GLIBC_2.2.5>
    0.00 :   407486: push   $0x45
    0.00 :   40748b: jmp    407020 <_init+0x20>
         :
         : 373    0000000000407490 <get_nprocs_conf@plt>:
    0.00 :   407490: jmp    *0x15db2(%rip)        # 41d248 <get_nprocs_conf@GLIBC_2.2.5>
    0.00 :   407496: push   $0x46
    0.00 :   40749b: jmp    407020 <_init+0x20>
         :
         : 378    00000000004074a0 <fwrite@plt>:
    0.00 :   4074a0: jmp    *0x15daa(%rip)        # 41d250 <fwrite@GLIBC_2.2.5>
    0.00 :   4074a6: push   $0x47
    0.00 :   4074ab: jmp    407020 <_init+0x20>
         :
         : 383    00000000004074b0 <close@plt>:
    0.00 :   4074b0: jmp    *0x15da2(%rip)        # 41d258 <close@GLIBC_2.2.5>
    0.00 :   4074b6: push   $0x48
    0.00 :   4074bb: jmp    407020 <_init+0x20>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[99e85]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000099760 <_int_malloc>:
         : 6     _int_malloc():
    0.00 :   99760:  test   %rsi,%rsi
    0.00 :   99763:  js     99d58 <_int_malloc+0x5f8>
    0.00 :   99769:  push   %r15
    0.00 :   9976b:  push   %r14
    0.00 :   9976d:  push   %r13
    0.00 :   9976f:  push   %r12
    0.00 :   99771:  mov    %rsi,%r12
    0.00 :   99774:  push   %rbp
    0.00 :   99775:  mov    %rdi,%rbp
    0.00 :   99778:  push   %rbx
    0.00 :   99779:  lea    0x17(%rsi),%rbx
    0.00 :   9977d:  sub    $0x28,%rsp
    0.00 :   99781:  cmp    $0x1f,%rbx
    0.00 :   99785:  jbe    99b50 <_int_malloc+0x3f0>
    0.00 :   9978b:  and    $0xfffffffffffffff0,%rbx
    0.00 :   9978f:  test   %rdi,%rdi
    0.00 :   99792:  je     99d75 <_int_malloc+0x615>
    0.00 :   99798:  cmp    %rbx,0x140d21(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   9979f:  jb     99918 <_int_malloc+0x1b8>
    0.00 :   997a5:  mov    %ebx,%r13d
    0.00 :   997a8:  shr    $0x4,%r13d
    0.00 :   997ac:  lea    -0x2(%r13),%eax
    0.00 :   997b0:  mov    %r13d,%esi
    0.00 :   997b3:  lea    0x0(%rbp,%rax,8),%r8
    0.00 :   997b8:  shl    $0x3,%rsi
    0.00 :   997bc:  mov    0x10(%r8),%rdx
    0.00 :   997c0:  test   %rdx,%rdx
    0.00 :   997c3:  je     99cb4 <_int_malloc+0x554>
    0.00 :   997c9:  test   $0xf,%dl
    0.00 :   997cc:  jne    9a078 <_int_malloc+0x918>
    0.00 :   997d2:  add    %rbp,%rsi
    0.00 :   997d5:  cmpb   $0x0,0x141e1c(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   997dc:  je     998f8 <_int_malloc+0x198>
    0.00 :   997e2:  lea    0x10(%rdx),%rcx
    0.00 :   997e6:  mov    %rcx,%rax
    0.00 :   997e9:  shr    $0xc,%rax
    0.00 :   997ed:  xor    0x10(%rdx),%rax
    0.00 :   997f1:  mov    %rax,0x10(%r8)
    0.00 :   997f5:  mov    0x8(%rdx),%rax
    0.00 :   997f9:  shr    $0x4,%eax
    0.00 :   997fc:  cmp    %r13d,%eax
    0.00 :   997ff:  jne    99ff0 <_int_malloc+0x890>
    0.00 :   99805:  mov    0x13959c(%rip),%r14        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9980c:  sub    $0x11,%rbx
    0.00 :   99810:  shr    $0x4,%rbx
    0.00 :   99814:  mov    %fs:(%r14),%rax
    0.00 :   99818:  test   %rax,%rax
    0.00 :   9981b:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   99821:  cmp    0x139ba0(%rip),%rbx        # 1d33c8 <mp_+0x68>
    0.00 :   99828:  jae    99d20 <_int_malloc+0x5c0>
    0.00 :   9982e:  movzwl (%rax,%rbx,2),%eax
    0.00 :   99832:  cmp    0x139b9f(%rip),%rax        # 1d33d8 <mp_+0x78>
    0.00 :   99839:  lea    0x10(%rbx),%r11
    0.00 :   9983d:  jb     99896 <_int_malloc+0x136>
    0.00 :   9983f:  jmp    99d20 <_int_malloc+0x5c0>
    0.00 :   99844:  nopl   0x0(%rax)
    0.00 :   99848:  lea    0x10(%rdx),%r10
    0.00 :   9984c:  mov    0x10(%rdx),%rax
    0.00 :   99850:  mov    %r10,%rdi
    0.00 :   99853:  shr    $0xc,%rdi
    0.00 :   99857:  xor    %rdi,%rax
    0.00 :   9985a:  mov    %rax,0x10(%r8)
    0.00 :   9985e:  mov    0x140c33(%rip),%rax        # 1da498 <tcache_key>
    0.00 :   99865:  mov    %rax,0x18(%rdx)
    0.00 :   99869:  mov    %fs:(%r14),%r9
    0.00 :   9986d:  movzwl (%r9,%rbx,2),%eax
    0.00 :   99872:  xor    (%r9,%r11,8),%rdi
    0.00 :   99876:  mov    %rdi,0x10(%rdx)
    0.00 :   9987a:  add    $0x1,%eax
    0.00 :   9987d:  mov    %r10,(%r9,%r11,8)
    0.00 :   99881:  mov    %ax,(%r9,%rbx,2)
    0.00 :   99886:  movzwl %ax,%eax
    0.00 :   99889:  cmp    0x139b48(%rip),%rax        # 1d33d8 <mp_+0x78>
    0.00 :   99890:  jae    99d20 <_int_malloc+0x5c0>
    0.00 :   99896:  mov    0x10(%r8),%rdx
    0.00 :   9989a:  test   %rdx,%rdx
    0.00 :   9989d:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   998a3:  test   $0xf,%dl
    0.00 :   998a6:  jne    99f40 <_int_malloc+0x7e0>
    0.00 :   998ac:  cmpb   $0x0,0x141d45(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   998b3:  jne    99848 <_int_malloc+0xe8>
    0.00 :   998b5:  jmp    99c70 <_int_malloc+0x510>
    0.00 :   998ba:  nopw   0x0(%rax,%rax,1)
    0.00 :   998c0:  test   $0xf,%dil
    0.00 :   998c4:  jne    9a000 <_int_malloc+0x8a0>
    0.00 :   998ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   998d0:  mov    %rdx,%rax
    0.00 :   998d3:  cmpl   $0x0,%fs:0x18
    0.00 :   998dc:  je     998df <_int_malloc+0x17f>
    0.00 :   998de:  lock cmpxchg %rdi,(%rsi)
    0.00 :   998e3:  cmp    %rdx,%rax
    0.00 :   998e6:  je     997f5 <_int_malloc+0x95>
    0.00 :   998ec:  test   %rax,%rax
    0.00 :   998ef:  je     9a088 <_int_malloc+0x928>
    0.00 :   998f5:  mov    %rax,%rdx
    0.00 :   998f8:  lea    0x10(%rdx),%rcx
    0.00 :   998fc:  mov    0x10(%rdx),%rax
    0.00 :   99900:  mov    %rcx,%r9
    0.00 :   99903:  shr    $0xc,%r9
    0.00 :   99907:  mov    %r9,%rdi
    0.00 :   9990a:  xor    %rax,%rdi
    0.00 :   9990d:  cmp    %rax,%r9
    0.00 :   99910:  je     998d0 <_int_malloc+0x170>
    0.00 :   99912:  jmp    998c0 <_int_malloc+0x160>
    0.00 :   99914:  nopl   0x0(%rax)
    0.00 :   99918:  cmp    $0x3ff,%rbx
    0.00 :   9991f:  jbe    9a088 <_int_malloc+0x928>
    0.00 :   99925:  mov    %rbx,%r13
    0.00 :   99928:  shr    $0x6,%r13
    0.00 :   9992c:  add    $0x30,%r13d
    0.00 :   99930:  cmp    $0xc3f,%rbx
    0.00 :   99937:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99939:  mov    %rbx,%r13
    0.00 :   9993c:  shr    $0x9,%r13
    0.00 :   99940:  add    $0x5b,%r13d
    0.00 :   99944:  cmp    $0x29ff,%rbx
    0.00 :   9994b:  jbe    99990 <_int_malloc+0x230>
    0.00 :   9994d:  mov    %rbx,%r13
    0.00 :   99950:  shr    $0xc,%r13
    0.00 :   99954:  add    $0x6e,%r13d
    0.00 :   99958:  cmp    $0xafff,%rbx
    0.00 :   9995f:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99961:  mov    %rbx,%r13
    0.00 :   99964:  shr    $0xf,%r13
    0.00 :   99968:  add    $0x77,%r13d
    0.00 :   9996c:  cmp    $0x27fff,%rbx
    0.00 :   99973:  jbe    99990 <_int_malloc+0x230>
    0.00 :   99975:  mov    %rbx,%r13
    0.00 :   99978:  mov    $0x2,%eax
    0.00 :   9997d:  shr    $0x12,%r13
    0.00 :   99981:  cmp    %rax,%r13
    0.00 :   99984:  cmova  %rax,%r13
    0.00 :   99988:  add    $0x7c,%r13d
    0.00 :   9998c:  nopl   0x0(%rax)
    0.00 :   99990:  mov    0x8(%rbp),%eax
    0.00 :   99993:  test   %eax,%eax
    0.00 :   99995:  jne    99cc8 <_int_malloc+0x568>
    0.00 :   9999b:  mov    0x139406(%rip),%r14        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   999a2:  lea    -0x11(%rbx),%rax
    0.00 :   999a6:  xor    %r9d,%r9d
    0.00 :   999a9:  shr    $0x4,%rax
    0.00 :   999ad:  cmpq   $0x0,%fs:(%r14)
    0.00 :   999b2:  mov    %rax,%r11
    0.00 :   999b5:  je     999c2 <_int_malloc+0x262>
    0.00 :   999b7:  cmp    0x139a0a(%rip),%rax        # 1d33c8 <mp_+0x68>
    0.00 :   999be:  cmovb  %rbx,%r9
    0.00 :   999c2:  movq   $0x0,(%rsp)
    0.00 :   999ca:  lea    0x60(%rbp),%r15
    0.00 :   999ce:  mov    %r12,%r8
    0.00 :   999d1:  mov    %r13d,0x10(%rsp)
    0.00 :   999d6:  mov    0x78(%rbp),%rdx
    0.00 :   999da:  cmp    %r15,%rdx
    0.00 :   999dd:  je     99e6c <_int_malloc+0x70c>
    0.00 :   999e3:  mov    %r8,0x8(%rsp)
    0.00 :   999e8:  xor    %r12d,%r12d
    0.00 :   999eb:  xor    %r10d,%r10d
    0.00 :   999ee:  mov    0x8(%rdx),%rax
    0.00 :   999f2:  and    $0xfffffffffffffff8,%rax
    0.00 :   999f6:  lea    (%rdx,%rax,1),%rsi
    0.00 :   999fa:  cmp    $0x10,%rax
    0.00 :   999fe:  jbe    99d48 <_int_malloc+0x5e8>
    0.00 :   99a04:  mov    0x888(%rbp),%rdi
    0.00 :   99a0b:  cmp    %rax,%rdi
    0.00 :   99a0e:  jb     99d48 <_int_malloc+0x5e8>
    0.00 :   99a14:  mov    0x8(%rsi),%rcx
    0.00 :   99a18:  cmp    %rcx,%rdi
    0.00 :   99a1b:  jb     99d90 <_int_malloc+0x630>
    0.00 :   99a21:  cmp    $0xf,%rcx
    0.00 :   99a25:  jbe    99d90 <_int_malloc+0x630>
    0.00 :   99a2b:  mov    (%rsi),%rdi
    0.00 :   99a2e:  and    $0xfffffffffffffff8,%rdi
    0.00 :   99a32:  cmp    %rax,%rdi
    0.00 :   99a35:  jne    9a010 <_int_malloc+0x8b0>
    0.00 :   99a3b:  mov    0x18(%rdx),%rdi
    0.00 :   99a3f:  cmp    0x10(%rdi),%rdx
    0.00 :   99a43:  jne    99f30 <_int_malloc+0x7d0>
    0.00 :   99a49:  cmp    %r15,0x10(%rdx)
    0.00 :   99a4d:  jne    99f30 <_int_malloc+0x7d0>
    0.00 :   99a53:  test   $0x1,%cl
    0.00 :   99a56:  jne    9a098 <_int_malloc+0x938>
    0.00 :   99a5c:  cmp    %r15,%rdi
    0.00 :   99a5f:  jne    99a6e <_int_malloc+0x30e>
    0.00 :   99a61:  cmp    $0x3ff,%rbx
    0.00 :   99a68:  jbe    99fa0 <_int_malloc+0x840>
    0.00 :   99a6e:  mov    %rdi,0x78(%rbp)
    0.00 :   99a72:  mov    %r15,0x10(%rdi)
    0.00 :   99a76:  cmp    %rax,%rbx
    0.00 :   99a79:  je     99cd8 <_int_malloc+0x578>
    0.00 :   99a7f:  cmp    $0x3ff,%rax
    0.00 :   99a85:  jbe    99da0 <_int_malloc+0x640>
    0.00 :   99a8b:  mov    %rax,%rcx
    0.00 :   99a8e:  shr    $0x6,%rcx
    0.00 :   99a92:  cmp    $0xc3f,%rax
    0.00 :   99a98:  jbe    99fe0 <_int_malloc+0x880>
    0.00 :   99a9e:  mov    %rax,%rcx
    0.00 :   99aa1:  shr    $0x9,%rcx
    0.00 :   99aa5:  lea    0x5b(%rcx),%r13d
    0.00 :   99aa9:  cmp    $0x29ff,%rax
    0.00 :   99aaf:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ab1:  mov    %rax,%rcx
    0.00 :   99ab4:  shr    $0xc,%rcx
    0.00 :   99ab8:  lea    0x6e(%rcx),%r13d
    0.00 :   99abc:  cmp    $0xafff,%rax
    0.00 :   99ac2:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ac4:  mov    %rax,%rcx
    0.00 :   99ac7:  shr    $0xf,%rcx
    0.00 :   99acb:  lea    0x77(%rcx),%r13d
    0.00 :   99acf:  cmp    $0x27fff,%rax
    0.00 :   99ad5:  jbe    99af0 <_int_malloc+0x390>
    0.00 :   99ad7:  mov    %rax,%rcx
    0.00 :   99ada:  mov    $0x2,%esi
    0.00 :   99adf:  shr    $0x12,%rcx
    0.00 :   99ae3:  cmp    %rsi,%rcx
    0.00 :   99ae6:  cmova  %rsi,%rcx
    0.00 :   99aea:  lea    0x7c(%rcx),%r13d
    0.00 :   99aee:  xchg   %ax,%ax
    0.00 :   99af0:  lea    0xc(%r13,%r13,1),%ecx
    0.00 :   99af5:  movslq %ecx,%rcx
    0.00 :   99af8:  lea    0x0(%rbp,%rcx,8),%rdi
    0.00 :   99afd:  mov    (%rdi),%rcx
    0.00 :   99b00:  lea    -0x10(%rdi),%rsi
    0.00 :   99b04:  cmp    %rcx,%rsi
    0.00 :   99b07:  je     9a0a8 <_int_malloc+0x948>
    0.00 :   99b0d:  mov    0x8(%rdi),%rdi
    0.00 :   99b11:  or     $0x1,%rax
    0.00 :   99b15:  mov    0x8(%rdi),%r8
    0.00 :   99b19:  test   $0x4,%r8b
    0.00 :   99b1d:  jne    9a621 <_int_malloc+0xec1>
    0.00 :   99b23:  cmp    %r8,%rax
    0.00 :   99b26:  jae    9a164 <_int_malloc+0xa04>
    0.00 :   99b2c:  mov    0x28(%rcx),%rax
    0.00 :   99b30:  movq   %rcx,%xmm0
    0.00 :   99b35:  movq   %rax,%xmm1
    0.00 :   99b3a:  punpcklqdq %xmm1,%xmm0
    0.00 :   99b3e:  movups %xmm0,0x20(%rdx)
    0.00 :   99b42:  mov    %rdx,0x20(%rax)
    0.00 :   99b46:  mov    %rdx,0x28(%rcx)
    0.00 :   99b4a:  jmp    99dba <_int_malloc+0x65a>
    0.00 :   99b4f:  nop
    0.00 :   99b50:  test   %rdi,%rdi
    0.00 :   99b53:  je     99d70 <_int_malloc+0x610>
    0.00 :   99b59:  cmpq   $0x1f,0x14095f(%rip)        # 1da4c0 <global_max_fast>
    0.00 :   99b61:  ja     99c90 <_int_malloc+0x530>
    0.00 :   99b67:  mov    $0x80,%eax
    0.00 :   99b6c:  mov    $0x2,%r13d
    0.00 :   99b72:  mov    $0x20,%ebx
    0.00 :   99b77:  add    %rbp,%rax
    0.00 :   99b7a:  mov    0x8(%rax),%rcx
    0.00 :   99b7e:  lea    -0x10(%rax),%rsi
    0.00 :   99b82:  cmp    %rcx,%rsi
    0.00 :   99b85:  je     9999b <_int_malloc+0x23b>
    0.00 :   99b8b:  mov    0x18(%rcx),%rdx
    0.00 :   99b8f:  cmp    %rcx,0x10(%rdx)
    0.00 :   99b93:  jne    9a158 <_int_malloc+0x9f8>
    0.00 :   99b99:  lea    0x13a0e0(%rip),%r11        # 1d3c80 <main_arena>
    0.00 :   99ba0:  orq    $0x1,0x8(%rcx,%rbx,1)
    0.00 :   99ba6:  mov    %rdx,0x8(%rax)
    0.00 :   99baa:  mov    %rsi,0x10(%rdx)
    0.00 :   99bae:  cmp    %r11,%rbp
    0.00 :   99bb1:  je     99bb8 <_int_malloc+0x458>
    0.00 :   99bb3:  orq    $0x4,0x8(%rcx)
    0.00 :   99bb8:  mov    0x1391e9(%rip),%rdx        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   99bbf:  mov    %fs:(%rdx),%r10
    0.00 :   99bc3:  test   %r10,%r10
    0.00 :   99bc6:  je     99c10 <_int_malloc+0x4b0>
    0.00 :   99bc8:  lea    -0x11(%rbx),%r9
    0.00 :   99bcc:  shr    $0x4,%r9
    0.00 :   99bd0:  cmp    0x1397f1(%rip),%r9        # 1d33c8 <mp_+0x68>
    0.00 :   99bd7:  jae    99c10 <_int_malloc+0x4b0>
    0.00 :   99bd9:  mov    0x1397f8(%rip),%r8        # 1d33d8 <mp_+0x78>
    0.00 :   99be0:  movzwl (%r10,%r9,2),%r13d
    0.00 :   99be5:  movzwl %r13w,%edi
    0.00 :   99be9:  jmp    99c02 <_int_malloc+0x4a2>
    0.00 :   99beb:  nopl   0x0(%rax,%rax,1)
    0.00 :   99bf0:  mov    0x8(%rax),%rdx
    0.00 :   99bf4:  cmp    %rdx,%rsi
    0.00 :   99bf7:  je     99c10 <_int_malloc+0x4b0>
    0.00 :   99bf9:  test   %rdx,%rdx
    0.00 :   99bfc:  jne    9a020 <_int_malloc+0x8c0>
    0.00 :   99c02:  cmp    %r8,%rdi
    0.00 :   99c05:  jb     99bf0 <_int_malloc+0x490>
    0.00 :   99c07:  nopw   0x0(%rax,%rax,1)
    0.00 :   99c10:  mov    0x1408a6(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   99c16:  add    $0x10,%rcx
    0.00 :   99c1a:  test   %esi,%esi
    0.00 :   99c1c:  jne    99d2e <_int_malloc+0x5ce>
    0.00 :   99c22:  add    $0x28,%rsp
    0.00 :   99c26:  mov    %rcx,%rax
    0.00 :   99c29:  pop    %rbx
    0.00 :   99c2a:  pop    %rbp
    0.00 :   99c2b:  pop    %r12
    0.00 :   99c2d:  pop    %r13
    0.00 :   99c2f:  pop    %r14
    0.00 :   99c31:  pop    %r15
    0.00 :   99c33:  ret
    0.00 :   99c34:  nopl   0x0(%rax)
    0.00 :   99c38:  test   $0xf,%r9b
    0.00 :   99c3c:  jne    9a000 <_int_malloc+0x8a0>
    0.00 :   99c42:  nopw   0x0(%rax,%rax,1)
    0.00 :   99c48:  mov    %rdx,%rax
    0.00 :   99c4b:  cmpl   $0x0,%fs:0x18
    0.00 :   99c54:  je     99c57 <_int_malloc+0x4f7>
    0.00 :   99c56:  lock cmpxchg %r9,(%rsi)
    0.00 :   99c5b:  cmp    %rdx,%rax
    0.00 :   99c5e:  je     9985e <_int_malloc+0xfe>
    0.00 :   99c64:  test   %rax,%rax
    0.00 :   99c67:  je     99d20 <_int_malloc+0x5c0>
    0.00 :   99c6d:  mov    %rax,%rdx
    0.00 :   99c70:  lea    0x10(%rdx),%r10
    0.00 :   99c74:  mov    0x10(%rdx),%rax
    0.00 :   99c78:  mov    %r10,%rdi
    0.00 :   99c7b:  shr    $0xc,%rdi
    0.00 :   99c7f:  mov    %rdi,%r9
    0.00 :   99c82:  xor    %rax,%r9
    0.00 :   99c85:  cmp    %rax,%rdi
    0.00 :   99c88:  je     99c48 <_int_malloc+0x4e8>
    0.00 :   99c8a:  jmp    99c38 <_int_malloc+0x4d8>
    0.00 :   99c8c:  nopl   0x0(%rax)
    0.00 :   99c90:  xor    %eax,%eax
    0.00 :   99c92:  mov    $0x10,%esi
    0.00 :   99c97:  mov    $0x2,%r13d
    0.00 :   99c9d:  mov    $0x20,%ebx
    0.00 :   99ca2:  lea    0x0(%rbp,%rax,8),%r8
    0.00 :   99ca7:  mov    0x10(%r8),%rdx
    0.00 :   99cab:  test   %rdx,%rdx
    0.00 :   99cae:  jne    997c9 <_int_malloc+0x69>
    0.00 :   99cb4:  lea    0xc(%r13,%r13,1),%eax
    0.00 :   99cb9:  shl    $0x3,%rax
    0.00 :   99cbd:  jmp    99b77 <_int_malloc+0x417>
    0.00 :   99cc2:  nopw   0x0(%rax,%rax,1)
    0.00 :   99cc8:  mov    %rbp,%rdi
    0.00 :   99ccb:  call   97680 <malloc_consolidate>
    0.00 :   99cd0:  jmp    9999b <_int_malloc+0x23b>
    0.00 :   99cd5:  nopl   (%rax)
    0.00 :   99cd8:  or     $0x1,%rcx
    0.00 :   99cdc:  lea    0x139f9d(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   99ce3:  mov    %rcx,0x8(%rsi)
    0.00 :   99ce7:  cmp    %rax,%rbp
    0.00 :   99cea:  je     99cf1 <_int_malloc+0x591>
    0.00 :   99cec:  orq    $0x4,0x8(%rdx)
    0.00 :   99cf1:  lea    0x10(%rdx),%rcx
    0.00 :   99cf5:  test   %r9,%r9
    0.00 :   99cf8:  je     99d13 <_int_malloc+0x5b3>
    0.00 :   99cfa:  mov    %fs:(%r14),%rax
    0.00 :   99cfe:  movzwl (%rax,%r11,2),%edi
    0.00 :   99d03:  cmp    0x1396ce(%rip),%rdi        # 1d33d8 <mp_+0x78>
    0.00 :   99d0a:  mov    %rdi,%rsi
    0.00 :   99d0d:  jb     99f50 <_int_malloc+0x7f0>
    0.00 :   99d13:  mov    0x8(%rsp),%r12
    0.00 :   99d18:  nopl   0x0(%rax,%rax,1)
    0.00 :   99d20:  mov    0x140796(%rip),%esi        # 1da4bc <perturb_byte>
    0.00 :   99d26:  test   %esi,%esi
    0.00 :   99d28:  je     99c22 <_int_malloc+0x4c2>
    0.00 :   99d2e:  mov    %rcx,%rdi
    0.00 :   99d31:  xor    $0xff,%sil
    0.00 :   99d35:  mov    %r12,%rdx
    0.00 :   99d38:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   99d3d:  mov    %rax,%rcx
    0.00 :   99d40:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99d45:  nopl   (%rax)
    0.00 :   99d48:  lea    0x103769(%rip),%rdi        # 19d4b8 <aliasfile.0+0x1a70>
    0.00 :   99d4f:  call   96b80 <malloc_printerr>
    0.00 :   99d54:  nopl   0x0(%rax)
    0.00 :   99d58:  mov    0x1390b1(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   99d5f:  movl   $0xc,%fs:(%rax)
    0.00 :   99d66:  xor    %eax,%eax
    0.00 :   99d68:  ret
    0.00 :   99d69:  nopl   0x0(%rax)
    0.00 :   99d70:  mov    $0x20,%ebx
    0.00 :   99d75:  xor    %esi,%esi
    0.00 :   99d77:  mov    %rbx,%rdi
    0.00 :   99d7a:  call   98f10 <sysmalloc>
    0.00 :   99d7f:  mov    %rax,%rcx
    0.00 :   99d82:  test   %rax,%rax
    0.00 :   99d85:  jne    99d20 <_int_malloc+0x5c0>
    0.00 :   99d87:  xor    %ecx,%ecx
    0.00 :   99d89:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99d8e:  xchg   %ax,%ax
    0.00 :   99d90:  lea    0x103749(%rip),%rdi        # 19d4e0 <aliasfile.0+0x1a98>
    0.00 :   99d97:  call   96b80 <malloc_printerr>
    0.00 :   99d9c:  nopl   0x0(%rax)
    0.00 :   99da0:  mov    %eax,%r13d
    0.00 :   99da3:  shr    $0x4,%r13d
    0.00 :   99da7:  lea    0xc(%r13,%r13,1),%eax
    0.00 :   99dac:  cltq
    0.00 :   99dae:  lea    0x0(%rbp,%rax,8),%rax
    0.00 :   99db3:  mov    (%rax),%rsi
    0.00 :   99db6:  lea    -0x10(%rax),%rdi
    0.00 :   99dba:  mov    %r13d,%eax
    0.00 :   99dbd:  mov    %r13d,%ecx
    0.00 :   99dc0:  mov    $0x1,%r8d
    0.00 :   99dc6:  addq   $0x1,(%rsp)
    0.00 :   99dcb:  sar    $0x5,%eax
    0.00 :   99dce:  shl    %cl,%r8d
    0.00 :   99dd1:  mov    (%rsp),%rcx
    0.00 :   99dd5:  cltq
    0.00 :   99dd7:  or     %r8d,0x860(%rbp,%rax,4)
    0.00 :   99ddf:  mov    %rdi,0x18(%rdx)
    0.00 :   99de3:  mov    %rsi,0x10(%rdx)
    0.00 :   99de7:  mov    %rdx,0x18(%rsi)
    0.00 :   99deb:  mov    %rdx,0x10(%rdi)
    0.00 :   99def:  test   %r10d,%r10d
    0.00 :   99df2:  je     99f10 <_int_malloc+0x7b0>
    0.00 :   99df8:  mov    0x1395e1(%rip),%rax        # 1d33e0 <mp_+0x80>
    0.00 :   99dff:  test   %rax,%rax
    0.00 :   99e02:  je     99e40 <_int_malloc+0x6e0>
    0.00 :   99e04:  cmp    %rcx,%rax
    0.00 :   99e07:  jae    99e40 <_int_malloc+0x6e0>
    0.00 :   99e09:  mov    %fs:(%r14),%rax
    0.00 :   99e0d:  lea    0x10(%r11),%rsi
    0.00 :   99e11:  mov    (%rax,%rsi,8),%rcx
    0.00 :   99e15:  test   $0xf,%cl
    0.00 :   99e18:  jne    9a4eb <_int_malloc+0xd8b>
    0.00 :   99e1e:  mov    %rcx,%rdx
    0.00 :   99e21:  shr    $0xc,%rdx
    0.00 :   99e25:  xor    (%rcx),%rdx
    0.00 :   99e28:  mov    %rdx,(%rax,%rsi,8)
    0.00 :   99e2c:  xor    %edx,%edx
    0.00 :   99e2e:  subw   $0x1,(%rax,%r11,2)
    0.00 :   99e34:  mov    %rdx,0x8(%rcx)
    0.00 :   99e38:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   99e3d:  nopl   (%rax)
    0.00 :   99e40:  add    $0x1,%r12d
    0.00 :   99e44:  cmp    $0x270f,%r12d
    0.00 :   99e4b:  jg     9a3b8 <_int_malloc+0xc58>
    0.00 :   99e51:  mov    0x78(%rbp),%rdx
    0.00 :   99e55:  cmp    %r15,%rdx
    0.00 :   99e58:  jne    999ee <_int_malloc+0x28e>
    0.00 :   99e5e:  mov    0x8(%rsp),%r8
    0.00 :   99e63:  test   %r10d,%r10d
    0.00 :   99e66:  jne    9a3b8 <_int_malloc+0xc58>
    0.00 :   99e6c:  cmp    $0x3ff,%rbx
    0.00 :   99e73:  jbe    99e98 <_int_malloc+0x738>
    0.00 :   99e75:  mov    0x10(%rsp),%eax
    0.00 :   99e79:  lea    0xc(%rax,%rax,1),%eax
    0.00 :   99e7d:  lea    0x0(%rbp,%rax,8),%rax
    0.00 :   99e82:  mov    (%rax),%rdx
  100.00 :   99e85:  lea    -0x10(%rax),%rcx // libc.so.6[99e85]
    0.00 :   99e89:  cmp    %rcx,%rdx
    0.00 :   99e8c:  je     99e98 <_int_malloc+0x738>
    0.00 :   99e8e:  cmp    %rbx,0x8(%rdx)
    0.00 :   99e92:  jae    9a51e <_int_malloc+0xdbe>
    0.00 :   99e98:  mov    0x10(%rsp),%eax
    0.00 :   99e9c:  lea    0x1(%rax),%ecx
    0.00 :   99e9f:  lea    0xe(%rax,%rax,1),%eax
    0.00 :   99ea3:  mov    %ecx,%edi
    0.00 :   99ea5:  lea    -0x10(%rbp,%rax,8),%rdx
    0.00 :   99eaa:  shr    $0x5,%edi
    0.00 :   99ead:  mov    %edi,%eax
    0.00 :   99eaf:  mov    0x860(%rbp,%rax,4),%esi
    0.00 :   99eb6:  mov    $0x1,%eax
    0.00 :   99ebb:  shl    %cl,%eax
    0.00 :   99ebd:  nopl   (%rax)
    0.00 :   99ec0:  cmp    %eax,%esi
    0.00 :   99ec2:  jb     9a0c0 <_int_malloc+0x960>
    0.00 :   99ec8:  test   %eax,%eax
    0.00 :   99eca:  jne    99ee4 <_int_malloc+0x784>
    0.00 :   99ecc:  jmp    9a0c0 <_int_malloc+0x960>
    0.00 :   99ed1:  nopl   0x0(%rax)
    0.00 :   99ed8:  add    $0x10,%rdx
    0.00 :   99edc:  add    %eax,%eax
    0.00 :   99ede:  je     9a37a <_int_malloc+0xc1a>
    0.00 :   99ee4:  test   %esi,%eax
    0.00 :   99ee6:  je     99ed8 <_int_malloc+0x778>
    0.00 :   99ee8:  mov    0x18(%rdx),%r13
    0.00 :   99eec:  cmp    %r13,%rdx
    0.00 :   99eef:  jne    9a22e <_int_malloc+0xace>
    0.00 :   99ef5:  mov    %eax,%ecx
    0.00 :   99ef7:  add    $0x10,%rdx
    0.00 :   99efb:  add    %eax,%eax
    0.00 :   99efd:  not    %ecx
    0.00 :   99eff:  and    %ecx,%esi
    0.00 :   99f01:  mov    %edi,%ecx
    0.00 :   99f03:  mov    %esi,0x860(%rbp,%rcx,4)
    0.00 :   99f0a:  jmp    99ec0 <_int_malloc+0x760>
    0.00 :   99f0c:  nopl   0x0(%rax)
    0.00 :   99f10:  add    $0x1,%r12d
    0.00 :   99f14:  cmp    $0x270f,%r12d
    0.00 :   99f1b:  jle    99e51 <_int_malloc+0x6f1>
    0.00 :   99f21:  mov    0x8(%rsp),%r8
    0.00 :   99f26:  jmp    99e6c <_int_malloc+0x70c>
    0.00 :   99f2b:  nopl   0x0(%rax,%rax,1)
    0.00 :   99f30:  lea    0x103609(%rip),%rdi        # 19d540 <aliasfile.0+0x1af8>
    0.00 :   99f37:  call   96b80 <malloc_printerr>
    0.00 :   99f3c:  nopl   0x0(%rax)
    0.00 :   99f40:  lea    0x103511(%rip),%rdi        # 19d458 <aliasfile.0+0x1a10>
    0.00 :   99f47:  call   96b80 <malloc_printerr>
    0.00 :   99f4c:  nopl   0x0(%rax)
    0.00 :   99f50:  mov    0x140541(%rip),%rdi        # 1da498 <tcache_key>
    0.00 :   99f57:  lea    0x10(%r11),%r10
    0.00 :   99f5b:  add    $0x1,%esi
    0.00 :   99f5e:  mov    %rdi,0x18(%rdx)
    0.00 :   99f62:  mov    %rcx,%rdi
    0.00 :   99f65:  shr    $0xc,%rdi
    0.00 :   99f69:  xor    0x80(%rax,%r11,8),%rdi
    0.00 :   99f71:  mov    %rdi,0x10(%rdx)
    0.00 :   99f75:  mov    0x78(%rbp),%rdx
    0.00 :   99f79:  mov    %rcx,(%rax,%r10,8)
    0.00 :   99f7d:  mov    %si,(%rax,%r11,2)
    0.00 :   99f82:  cmp    %rdx,%r15
    0.00 :   99f85:  je     9a3bc <_int_malloc+0xc5c>
    0.00 :   99f8b:  mov    $0x1,%r10d
    0.00 :   99f91:  jmp    999ee <_int_malloc+0x28e>
    0.00 :   99f96:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   99fa0:  cmp    0x68(%rbp),%rdx
    0.00 :   99fa4:  jne    99a6e <_int_malloc+0x30e>
    0.00 :   99faa:  lea    0x20(%rbx),%r13
    0.00 :   99fae:  cmp    %rax,%r13
    0.00 :   99fb1:  jb     9a42d <_int_malloc+0xccd>
    0.00 :   99fb7:  mov    %rdi,0x78(%rbp)
    0.00 :   99fbb:  mov    %r15,0x10(%rdi)
    0.00 :   99fbf:  cmp    %rax,%rbx
    0.00 :   99fc2:  je     99cd8 <_int_malloc+0x578>
    0.00 :   99fc8:  cmp    $0x3ff,%rax
    0.00 :   99fce:  jbe    99da0 <_int_malloc+0x640>
    0.00 :   99fd4:  mov    $0x10,%ecx
    0.00 :   99fd9:  nopl   0x0(%rax)
    0.00 :   99fe0:  lea    0x30(%rcx),%r13d
    0.00 :   99fe4:  jmp    99af0 <_int_malloc+0x390>
    0.00 :   99fe9:  nopl   0x0(%rax)
    0.00 :   99ff0:  lea    0x103439(%rip),%rdi        # 19d430 <aliasfile.0+0x19e8>
    0.00 :   99ff7:  call   96b80 <malloc_printerr>
    0.00 :   99ffc:  nopl   0x0(%rax)
    0.00 :   9a000:  lea    0x1033f9(%rip),%rdi        # 19d400 <aliasfile.0+0x19b8>
    0.00 :   9a007:  call   96b80 <malloc_printerr>
    0.00 :   9a00c:  nopl   0x0(%rax)
    0.00 :   9a010:  lea    0x1034f1(%rip),%rdi        # 19d508 <aliasfile.0+0x1ac0>
    0.00 :   9a017:  call   96b80 <malloc_printerr>
    0.00 :   9a01c:  nopl   0x0(%rax)
    0.00 :   9a020:  mov    0x18(%rdx),%rdi
    0.00 :   9a024:  orq    $0x1,0x8(%rdx,%rbx,1)
    0.00 :   9a02a:  cmp    %r11,%rbp
    0.00 :   9a02d:  je     9a034 <_int_malloc+0x8d4>
    0.00 :   9a02f:  orq    $0x4,0x8(%rdx)
    0.00 :   9a034:  mov    %rdi,0x8(%rax)
    0.00 :   9a038:  lea    0x10(%rdx),%r14
    0.00 :   9a03c:  add    $0x1,%r13d
    0.00 :   9a040:  mov    %rsi,0x10(%rdi)
    0.00 :   9a044:  mov    0x14044d(%rip),%rdi        # 1da498 <tcache_key>
    0.00 :   9a04b:  mov    %rdi,0x18(%rdx)
    0.00 :   9a04f:  mov    %r14,%rdi
    0.00 :   9a052:  shr    $0xc,%rdi
    0.00 :   9a056:  xor    0x80(%r10,%r9,8),%rdi
    0.00 :   9a05e:  mov    %rdi,0x10(%rdx)
    0.00 :   9a062:  mov    %r14,0x80(%r10,%r9,8)
    0.00 :   9a06a:  mov    %r13w,(%r10,%r9,2)
    0.00 :   9a06f:  jmp    99be5 <_int_malloc+0x485>
    0.00 :   9a074:  nopl   0x0(%rax)
    0.00 :   9a078:  lea    0x103351(%rip),%rdi        # 19d3d0 <aliasfile.0+0x1988>
    0.00 :   9a07f:  call   96b80 <malloc_printerr>
    0.00 :   9a084:  nopl   0x0(%rax)
    0.00 :   9a088:  mov    %ebx,%r13d
    0.00 :   9a08b:  shr    $0x4,%r13d
    0.00 :   9a08f:  jmp    99cb4 <_int_malloc+0x554>
    0.00 :   9a094:  nopl   0x0(%rax)
    0.00 :   9a098:  lea    0x1034d1(%rip),%rdi        # 19d570 <aliasfile.0+0x1b28>
    0.00 :   9a09f:  call   96b80 <malloc_printerr>
    0.00 :   9a0a4:  nopl   0x0(%rax)
    0.00 :   9a0a8:  movq   %rdx,%xmm0
    0.00 :   9a0ad:  mov    %rsi,%rdi
    0.00 :   9a0b0:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a0b4:  movups %xmm0,0x20(%rdx)
    0.00 :   9a0b8:  jmp    99dba <_int_malloc+0x65a>
    0.00 :   9a0bd:  nopl   (%rax)
    0.00 :   9a0c0:  lea    0x1(%rdi),%eax
    0.00 :   9a0c3:  jmp    9a0db <_int_malloc+0x97b>
    0.00 :   9a0c5:  nopl   (%rax)
    0.00 :   9a0c8:  add    $0x1,%rax
    0.00 :   9a0cc:  mov    0x85c(%rbp,%rax,4),%esi
    0.00 :   9a0d3:  test   %esi,%esi
    0.00 :   9a0d5:  jne    9a1f0 <_int_malloc+0xa90>
    0.00 :   9a0db:  mov    %eax,%edi
    0.00 :   9a0dd:  cmp    $0x4,%eax
    0.00 :   9a0e0:  jne    9a0c8 <_int_malloc+0x968>
    0.00 :   9a0e2:  mov    0x60(%rbp),%rcx
    0.00 :   9a0e6:  mov    0x8(%rcx),%rax
    0.00 :   9a0ea:  and    $0xfffffffffffffff8,%rax
    0.00 :   9a0ee:  cmp    %rax,0x888(%rbp)
    0.00 :   9a0f5:  jb     9a342 <_int_malloc+0xbe2>
    0.00 :   9a0fb:  lea    0x20(%rbx),%rdx
    0.00 :   9a0ff:  cmp    %rdx,%rax
    0.00 :   9a102:  jae    9a4b0 <_int_malloc+0xd50>
    0.00 :   9a108:  mov    %r11,0x18(%rsp)
    0.00 :   9a10d:  mov    %r9,0x10(%rsp)
    0.00 :   9a112:  mov    0x8(%rbp),%eax
    0.00 :   9a115:  test   %eax,%eax
    0.00 :   9a117:  je     9a4f7 <_int_malloc+0xd97>
    0.00 :   9a11d:  mov    %rbp,%rdi
    0.00 :   9a120:  mov    %r8,0x8(%rsp)
    0.00 :   9a125:  call   97680 <malloc_consolidate>
    0.00 :   9a12a:  mov    0x8(%rsp),%r8
    0.00 :   9a12f:  mov    0x10(%rsp),%r9
    0.00 :   9a134:  cmp    $0x3ff,%rbx
    0.00 :   9a13b:  mov    0x18(%rsp),%r11
    0.00 :   9a140:  ja     9a20d <_int_malloc+0xaad>
    0.00 :   9a146:  mov    %ebx,%eax
    0.00 :   9a148:  shr    $0x4,%eax
    0.00 :   9a14b:  mov    %eax,0x10(%rsp)
    0.00 :   9a14f:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a154:  nopl   0x0(%rax)
    0.00 :   9a158:  lea    0x103329(%rip),%rdi        # 19d488 <aliasfile.0+0x1a40>
    0.00 :   9a15f:  call   96b80 <malloc_printerr>
    0.00 :   9a164:  mov    0x8(%rcx),%rsi
    0.00 :   9a168:  test   $0x4,%sil
    0.00 :   9a16c:  jne    9a40c <_int_malloc+0xcac>
    0.00 :   9a172:  mov    0x8(%rsp),%r8
    0.00 :   9a177:  jmp    9a192 <_int_malloc+0xa32>
    0.00 :   9a179:  nopl   0x0(%rax)
    0.00 :   9a180:  mov    0x20(%rcx),%rcx
    0.00 :   9a184:  mov    0x8(%rcx),%rsi
    0.00 :   9a188:  test   $0x4,%sil
    0.00 :   9a18c:  jne    9a40c <_int_malloc+0xcac>
    0.00 :   9a192:  cmp    %rsi,%rax
    0.00 :   9a195:  jb     9a180 <_int_malloc+0xa20>
    0.00 :   9a197:  mov    %r8,0x8(%rsp)
    0.00 :   9a19c:  je     9a207 <_int_malloc+0xaa7>
    0.00 :   9a19e:  mov    0x28(%rcx),%rax
    0.00 :   9a1a2:  movq   %rcx,%xmm0
    0.00 :   9a1a7:  movq   %rax,%xmm2
    0.00 :   9a1ac:  punpcklqdq %xmm2,%xmm0
    0.00 :   9a1b0:  movups %xmm0,0x20(%rdx)
    0.00 :   9a1b4:  cmp    %rcx,0x20(%rax)
    0.00 :   9a1b8:  jne    9a34e <_int_malloc+0xbee>
    0.00 :   9a1be:  mov    %rdx,0x28(%rcx)
    0.00 :   9a1c2:  mov    0x28(%rdx),%rax
    0.00 :   9a1c6:  mov    %rcx,%rsi
    0.00 :   9a1c9:  mov    %rdx,0x20(%rax)
    0.00 :   9a1cd:  mov    0x18(%rsi),%rdi
    0.00 :   9a1d1:  cmp    %rsi,0x10(%rdi)
    0.00 :   9a1d5:  je     99dba <_int_malloc+0x65a>
    0.00 :   9a1db:  lea    0x1033fe(%rip),%rdi        # 19d5e0 <aliasfile.0+0x1b98>
    0.00 :   9a1e2:  call   96b80 <malloc_printerr>
    0.00 :   9a1e7:  nopw   0x0(%rax,%rax,1)
    0.00 :   9a1f0:  mov    %edi,%eax
    0.00 :   9a1f2:  shl    $0x6,%eax
    0.00 :   9a1f5:  add    $0xc,%eax
    0.00 :   9a1f8:  lea    -0x10(%rbp,%rax,8),%rdx
    0.00 :   9a1fd:  mov    $0x1,%eax
    0.00 :   9a202:  jmp    99ee4 <_int_malloc+0x784>
    0.00 :   9a207:  mov    0x10(%rcx),%rsi
    0.00 :   9a20b:  jmp    9a1cd <_int_malloc+0xa6d>
    0.00 :   9a20d:  mov    %rbx,%r13
    0.00 :   9a210:  shr    $0x6,%r13
    0.00 :   9a214:  cmp    $0xc3f,%rbx
    0.00 :   9a21b:  ja     9a308 <_int_malloc+0xba8>
    0.00 :   9a221:  lea    0x30(%r13),%eax
    0.00 :   9a225:  mov    %eax,0x10(%rsp)
    0.00 :   9a229:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a22e:  mov    0x8(%r13),%r14
    0.00 :   9a232:  mov    %r8,%r12
    0.00 :   9a235:  and    $0xfffffffffffffff8,%r14
    0.00 :   9a239:  cmp    %rbx,%r14
    0.00 :   9a23c:  jb     9a600 <_int_malloc+0xea0>
    0.00 :   9a242:  mov    %r14,%rcx
    0.00 :   9a245:  mov    %r13,%rdi
    0.00 :   9a248:  sub    %rbx,%rcx
    0.00 :   9a24b:  mov    %rcx,(%rsp)
    0.00 :   9a24f:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   9a254:  mov    (%rsp),%rcx
    0.00 :   9a258:  cmp    $0x1f,%rcx
    0.00 :   9a25c:  jbe    9a35a <_int_malloc+0xbfa>
    0.00 :   9a262:  mov    0x70(%rbp),%rax
    0.00 :   9a266:  movq   %r15,%xmm4
    0.00 :   9a26b:  lea    0x0(%r13,%rbx,1),%rdx
    0.00 :   9a270:  movq   %rax,%xmm0
    0.00 :   9a275:  punpcklqdq %xmm4,%xmm0
    0.00 :   9a279:  cmp    %r15,0x18(%rax)
    0.00 :   9a27d:  jne    9a512 <_int_malloc+0xdb2>
    0.00 :   9a283:  movups %xmm0,0x10(%rdx)
    0.00 :   9a287:  mov    %rdx,0x70(%rbp)
    0.00 :   9a28b:  mov    %rdx,0x18(%rax)
    0.00 :   9a28f:  cmp    $0x3ff,%rbx
    0.00 :   9a296:  ja     9a29c <_int_malloc+0xb3c>
    0.00 :   9a298:  mov    %rdx,0x68(%rbp)
    0.00 :   9a29c:  cmp    $0x3ff,%rcx
    0.00 :   9a2a3:  jbe    9a2ad <_int_malloc+0xb4d>
    0.00 :   9a2a5:  pxor   %xmm0,%xmm0
    0.00 :   9a2a9:  movups %xmm0,0x20(%rdx)
    0.00 :   9a2ad:  lea    0x1399cc(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a2b4:  cmp    %rax,%rbp
    0.00 :   9a2b7:  setne  %al
    0.00 :   9a2ba:  movzbl %al,%eax
    0.00 :   9a2bd:  shl    $0x2,%rax
    0.00 :   9a2c1:  or     %rbx,%rax
    0.00 :   9a2c4:  or     $0x1,%rax
    0.00 :   9a2c8:  mov    %rax,0x8(%r13)
    0.00 :   9a2cc:  mov    %rcx,%rax
    0.00 :   9a2cf:  or     $0x1,%rax
    0.00 :   9a2d3:  mov    %rax,0x8(%rdx)
    0.00 :   9a2d7:  mov    %rcx,0x0(%r13,%r14,1)
    0.00 :   9a2dc:  mov    0x1401da(%rip),%eax        # 1da4bc <perturb_byte>
    0.00 :   9a2e2:  lea    0x10(%r13),%rcx
    0.00 :   9a2e6:  test   %eax,%eax
    0.00 :   9a2e8:  je     99c22 <_int_malloc+0x4c2>
    0.00 :   9a2ee:  xor    $0xff,%al
    0.00 :   9a2f0:  mov    %rcx,%rdi
    0.00 :   9a2f3:  mov    %r12,%rdx
    0.00 :   9a2f6:  mov    %eax,%esi
    0.00 :   9a2f8:  call   26660 <*ABS*+0x9edf0@plt>
    0.00 :   9a2fd:  mov    %rax,%rcx
    0.00 :   9a300:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a305:  nopl   (%rax)
    0.00 :   9a308:  mov    %rbx,%r13
    0.00 :   9a30b:  shr    $0x9,%r13
    0.00 :   9a30f:  cmp    $0x29ff,%rbx
    0.00 :   9a316:  ja     9a325 <_int_malloc+0xbc5>
    0.00 :   9a318:  lea    0x5b(%r13),%eax
    0.00 :   9a31c:  mov    %eax,0x10(%rsp)
    0.00 :   9a320:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a325:  mov    %rbx,%r13
    0.00 :   9a328:  shr    $0xc,%r13
    0.00 :   9a32c:  cmp    $0xafff,%rbx
    0.00 :   9a333:  ja     9a39b <_int_malloc+0xc3b>
    0.00 :   9a335:  lea    0x6e(%r13),%eax
    0.00 :   9a339:  mov    %eax,0x10(%rsp)
    0.00 :   9a33d:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a342:  lea    0xfde10(%rip),%rdi        # 198159 <null+0xf9f>
    0.00 :   9a349:  call   96b80 <malloc_printerr>
    0.00 :   9a34e:  lea    0x10324b(%rip),%rdi        # 19d5a0 <aliasfile.0+0x1b58>
    0.00 :   9a355:  call   96b80 <malloc_printerr>
    0.00 :   9a35a:  lea    0x13991f(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a361:  orq    $0x1,0x8(%r13,%r14,1)
    0.00 :   9a367:  cmp    %rax,%rbp
    0.00 :   9a36a:  je     9a2dc <_int_malloc+0xb7c>
    0.00 :   9a370:  orq    $0x4,0x8(%r13)
    0.00 :   9a375:  jmp    9a2dc <_int_malloc+0xb7c>
    0.00 :   9a37a:  lea    0xfddcf(%rip),%rcx        # 198150 <null+0xf96>
    0.00 :   9a381:  lea    0x103778(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a388:  mov    $0x1,%edi
    0.00 :   9a38d:  xor    %eax,%eax
    0.00 :   9a38f:  lea    0x10273a(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a396:  call   80df0 <__libc_message>
    0.00 :   9a39b:  mov    %rbx,%r13
    0.00 :   9a39e:  shr    $0xf,%r13
    0.00 :   9a3a2:  cmp    $0x27fff,%rbx
    0.00 :   9a3a9:  ja     9a3ec <_int_malloc+0xc8c>
    0.00 :   9a3ab:  lea    0x77(%r13),%eax
    0.00 :   9a3af:  mov    %eax,0x10(%rsp)
    0.00 :   9a3b3:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a3b8:  lea    0x10(%r11),%r10
    0.00 :   9a3bc:  mov    %fs:(%r14),%rax
    0.00 :   9a3c0:  mov    (%rax,%r10,8),%rcx
    0.00 :   9a3c4:  test   $0xf,%cl
    0.00 :   9a3c7:  jne    9a4eb <_int_malloc+0xd8b>
    0.00 :   9a3cd:  mov    %rcx,%rdx
    0.00 :   9a3d0:  shr    $0xc,%rdx
    0.00 :   9a3d4:  xor    (%rcx),%rdx
    0.00 :   9a3d7:  mov    %rdx,(%rax,%r10,8)
    0.00 :   9a3db:  subw   $0x1,(%rax,%r11,2)
    0.00 :   9a3e1:  xor    %eax,%eax
    0.00 :   9a3e3:  mov    %rax,0x8(%rcx)
    0.00 :   9a3e7:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a3ec:  mov    %rbx,%r13
    0.00 :   9a3ef:  mov    $0x2,%eax
    0.00 :   9a3f4:  shr    $0x12,%r13
    0.00 :   9a3f8:  cmp    %rax,%r13
    0.00 :   9a3fb:  cmova  %rax,%r13
    0.00 :   9a3ff:  lea    0x7c(%r13),%eax
    0.00 :   9a403:  mov    %eax,0x10(%rsp)
    0.00 :   9a407:  jmp    999d6 <_int_malloc+0x276>
    0.00 :   9a40c:  lea    0xfdd26(%rip),%rcx        # 198139 <null+0xf7f>
    0.00 :   9a413:  lea    0x1036e6(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a41a:  mov    $0x1,%edi
    0.00 :   9a41f:  xor    %eax,%eax
    0.00 :   9a421:  lea    0x1026a8(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a428:  call   80df0 <__libc_message>
    0.00 :   9a42d:  lea    (%rdx,%rbx,1),%rdi
    0.00 :   9a431:  sub    %rbx,%rax
    0.00 :   9a434:  mov    0x8(%rsp),%r12
    0.00 :   9a439:  movq   %rdi,%xmm0
    0.00 :   9a43e:  mov    %rdi,0x78(%rbp)
    0.00 :   9a442:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a446:  movups %xmm0,0x68(%rbp)
    0.00 :   9a44a:  movq   %r15,%xmm0
    0.00 :   9a44f:  punpcklqdq %xmm0,%xmm0
    0.00 :   9a453:  movups %xmm0,0x10(%rdi)
    0.00 :   9a457:  cmp    $0x3ff,%rax
    0.00 :   9a45d:  jbe    9a467 <_int_malloc+0xd07>
    0.00 :   9a45f:  pxor   %xmm0,%xmm0
    0.00 :   9a463:  movups %xmm0,0x20(%rdi)
    0.00 :   9a467:  lea    0x139812(%rip),%rcx        # 1d3c80 <main_arena>
    0.00 :   9a46e:  cmp    %rcx,%rbp
    0.00 :   9a471:  setne  %cl
    0.00 :   9a474:  movzbl %cl,%ecx
    0.00 :   9a477:  shl    $0x2,%rcx
    0.00 :   9a47b:  or     %rbx,%rcx
    0.00 :   9a47e:  or     $0x1,%rcx
    0.00 :   9a482:  mov    %rcx,0x8(%rdx)
    0.00 :   9a486:  mov    %rax,%rcx
    0.00 :   9a489:  or     $0x1,%rcx
    0.00 :   9a48d:  mov    %rcx,0x8(%rdi)
    0.00 :   9a491:  lea    0x10(%rdx),%rcx
    0.00 :   9a495:  mov    %rax,(%rsi)
    0.00 :   9a498:  mov    %rcx,%rdi
    0.00 :   9a49b:  mov    %r12,%rsi
    0.00 :   9a49e:  mov    %rcx,(%rsp)
    0.00 :   9a4a2:  call   96d80 <alloc_perturb>
    0.00 :   9a4a7:  mov    (%rsp),%rcx
    0.00 :   9a4ab:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a4b0:  lea    0x1397c9(%rip),%rdx        # 1d3c80 <main_arena>
    0.00 :   9a4b7:  lea    (%rcx,%rbx,1),%rsi
    0.00 :   9a4bb:  mov    %r8,%r12
    0.00 :   9a4be:  cmp    %rdx,%rbp
    0.00 :   9a4c1:  mov    %rsi,0x60(%rbp)
    0.00 :   9a4c5:  setne  %dl
    0.00 :   9a4c8:  sub    %rbx,%rax
    0.00 :   9a4cb:  add    $0x10,%rcx
    0.00 :   9a4cf:  movzbl %dl,%edx
    0.00 :   9a4d2:  or     $0x1,%rax
    0.00 :   9a4d6:  shl    $0x2,%rdx
    0.00 :   9a4da:  or     %rbx,%rdx
    0.00 :   9a4dd:  or     $0x1,%rdx
    0.00 :   9a4e1:  mov    %rdx,-0x8(%rcx)
    0.00 :   9a4e5:  mov    %rax,0x8(%rsi)
    0.00 :   9a4e9:  jmp    9a498 <_int_malloc+0xd38>
    0.00 :   9a4eb:  lea    0x103126(%rip),%rdi        # 19d618 <aliasfile.0+0x1bd0>
    0.00 :   9a4f2:  call   96b80 <malloc_printerr>
    0.00 :   9a4f7:  mov    %rbp,%rsi
    0.00 :   9a4fa:  mov    %rbx,%rdi
    0.00 :   9a4fd:  mov    %r8,%r12
    0.00 :   9a500:  call   98f10 <sysmalloc>
    0.00 :   9a505:  mov    %rax,%rcx
    0.00 :   9a508:  test   %rax,%rax
    0.00 :   9a50b:  jne    9a498 <_int_malloc+0xd38>
    0.00 :   9a50d:  jmp    99c22 <_int_malloc+0x4c2>
    0.00 :   9a512:  lea    0x103187(%rip),%rdi        # 19d6a0 <aliasfile.0+0x1c58>
    0.00 :   9a519:  call   96b80 <malloc_printerr>
    0.00 :   9a51e:  mov    0x28(%rdx),%r13
    0.00 :   9a522:  mov    %r8,%r12
    0.00 :   9a525:  jmp    9a52b <_int_malloc+0xdcb>
    0.00 :   9a527:  mov    0x28(%r13),%r13
    0.00 :   9a52b:  mov    0x8(%r13),%rdx
    0.00 :   9a52f:  mov    %rdx,%r14
    0.00 :   9a532:  and    $0xfffffffffffffff8,%r14
    0.00 :   9a536:  cmp    %rbx,%r14
    0.00 :   9a539:  jb     9a527 <_int_malloc+0xdc7>
    0.00 :   9a53b:  cmp    %r13,0x8(%rax)
    0.00 :   9a53f:  je     9a54d <_int_malloc+0xded>
    0.00 :   9a541:  mov    0x10(%r13),%rax
    0.00 :   9a545:  cmp    0x8(%rax),%rdx
    0.00 :   9a549:  cmove  %rax,%r13
    0.00 :   9a54d:  mov    %r14,%rcx
    0.00 :   9a550:  mov    %r13,%rdi
    0.00 :   9a553:  sub    %rbx,%rcx
    0.00 :   9a556:  mov    %rcx,(%rsp)
    0.00 :   9a55a:  call   975a0 <unlink_chunk.constprop.0>
    0.00 :   9a55f:  mov    (%rsp),%rcx
    0.00 :   9a563:  cmp    $0x1f,%rcx
    0.00 :   9a567:  jbe    9a5e7 <_int_malloc+0xe87>
    0.00 :   9a569:  mov    0x70(%rbp),%rax
    0.00 :   9a56d:  movq   %r15,%xmm3
    0.00 :   9a572:  lea    0x0(%r13,%rbx,1),%rdx
    0.00 :   9a577:  movq   %rax,%xmm0
    0.00 :   9a57c:  punpcklqdq %xmm3,%xmm0
    0.00 :   9a580:  cmp    %r15,0x18(%rax)
    0.00 :   9a584:  jne    9a5db <_int_malloc+0xe7b>
    0.00 :   9a586:  movups %xmm0,0x10(%rdx)
    0.00 :   9a58a:  mov    %rdx,0x70(%rbp)
    0.00 :   9a58e:  mov    %rdx,0x18(%rax)
    0.00 :   9a592:  cmp    $0x3ff,%rcx
    0.00 :   9a599:  jbe    9a5a3 <_int_malloc+0xe43>
    0.00 :   9a59b:  pxor   %xmm0,%xmm0
    0.00 :   9a59f:  movups %xmm0,0x20(%rdx)
    0.00 :   9a5a3:  lea    0x1396d6(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a5aa:  cmp    %rax,%rbp
    0.00 :   9a5ad:  setne  %al
    0.00 :   9a5b0:  movzbl %al,%eax
    0.00 :   9a5b3:  shl    $0x2,%rax
    0.00 :   9a5b7:  or     %rbx,%rax
    0.00 :   9a5ba:  or     $0x1,%rax
    0.00 :   9a5be:  mov    %rax,0x8(%r13)
    0.00 :   9a5c2:  mov    %rcx,%rax
    0.00 :   9a5c5:  or     $0x1,%rax
    0.00 :   9a5c9:  mov    %rax,0x8(%rdx)
    0.00 :   9a5cd:  mov    %rcx,0x0(%r13,%r14,1)
    0.00 :   9a5d2:  lea    0x10(%r13),%rcx
    0.00 :   9a5d6:  jmp    9a498 <_int_malloc+0xd38>
    0.00 :   9a5db:  lea    0x103066(%rip),%rdi        # 19d648 <aliasfile.0+0x1c00>
    0.00 :   9a5e2:  call   96b80 <malloc_printerr>
    0.00 :   9a5e7:  lea    0x139692(%rip),%rax        # 1d3c80 <main_arena>
    0.00 :   9a5ee:  orq    $0x1,0x8(%r13,%r14,1)
    0.00 :   9a5f4:  cmp    %rax,%rbp
    0.00 :   9a5f7:  je     9a5d2 <_int_malloc+0xe72>
    0.00 :   9a5f9:  orq    $0x4,0x8(%r13)
    0.00 :   9a5fe:  jmp    9a5d2 <_int_malloc+0xe72>
    0.00 :   9a600:  lea    0x103069(%rip),%rcx        # 19d670 <aliasfile.0+0x1c28>
    0.00 :   9a607:  lea    0x1034f2(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a60e:  mov    $0x1,%edi
    0.00 :   9a613:  xor    %eax,%eax
    0.00 :   9a615:  lea    0x1024b4(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a61c:  call   80df0 <__libc_message>
    0.00 :   9a621:  lea    0xfdaf6(%rip),%rcx        # 19811e <null+0xf64>
    0.00 :   9a628:  lea    0x1034d1(%rip),%rdx        # 19db00 <aliasfile.0+0x20b8>
    0.00 :   9a62f:  mov    $0x1,%edi
    0.00 :   9a634:  xor    %eax,%eax
    0.00 :   9a636:  lea    0x102493(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9a63d:  call   80df0 <__libc_message>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

   58.05 [virtio_net][4018]
   41.95 [virtio_net][3f0a]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (2 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000003c80 <start_xmit>:
         : 6    start_xmit():
    0.00 :   3c80:   call   3c85 <start_xmit+0x5>
    0.00 :   3c85:   push   %r15
    0.00 :   3c87:   mov    %rdi,%r15
    0.00 :   3c8a:   push   %r14
    0.00 :   3c8c:   push   %r13
    0.00 :   3c8e:   push   %r12
    0.00 :   3c90:   push   %rbp
    0.00 :   3c91:   mov    %rsi,%rbp
    0.00 :   3c94:   push   %rbx
    0.00 :   3c95:   sub    $0x20,%rsp
    0.00 :   3c99:   movzwl 0x7c(%rdi),%eax
    0.00 :   3c9d:   mov    0x400(%rsi),%rcx
    0.00 :   3ca4:   mov    $0x0,%rdi
    0.00 :   3cab:   mov    %ax,0x1e(%rsp)
    0.00 :   3cb0:   imul   $0x458,%rax,%rbx
    0.00 :   3cb7:   lea    (%rax,%rax,4),%rax
    0.00 :   3cbb:   add    0x9d8(%rsi),%rbx
    0.00 :   3cc2:   shl    $0x6,%rax
    0.00 :   3cc6:   mov    %rcx,0x8(%rsp)
    0.00 :   3ccb:   mov    %rax,(%rsp)
    0.00 :   3ccf:   call   3cd4 <start_xmit+0x54>
    0.00 :   3cd4:   mov    0x2d8(%rbx),%r13d
    0.00 :   3cdb:   mov    %gs:0x0(%rip),%r14b        # 3ce3 <start_xmit+0x63>
    0.00 :   3ce3:   test   %r13d,%r13d
    0.00 :   3ce6:   jne    3f0a <start_xmit+0x28a>
    0.00 :   3cec:   xor    %esi,%esi
    0.00 :   3cee:   mov    %rbx,%rdi
    0.00 :   3cf1:   call   390 <free_old_xmit_skbs>
    0.00 :   3cf6:   mov    %r15,%rdi
    0.00 :   3cf9:   call   3cfe <start_xmit+0x7e>
    0.00 :   3cfe:   mov    0xc0(%r15),%eax
    0.00 :   3d05:   mov    0xc8(%r15),%rdx
    0.00 :   3d0c:   testb  $0x2,0x3(%rdx,%rax,1)
    0.00 :   3d11:   jne    4050 <start_xmit+0x3d0>
    0.00 :   3d17:   mov    (%rbx),%rax
    0.00 :   3d1a:   mov    0x20(%rax),%rax
    0.00 :   3d1e:   mov    0x330(%rax),%r12
    0.00 :   3d25:   movzbl 0x4a(%r12),%eax
    0.00 :   3d2b:   mov    %eax,%r10d
    0.00 :   3d2e:   mov    %eax,0x18(%rsp)
    0.00 :   3d32:   nopl   0x0(%rax,%rax,1)
    0.00 :   3d37:   movzbl 0x49(%r12),%ecx
    0.00 :   3d3d:   test   %cl,%cl
    0.00 :   3d3f:   jne    3f37 <start_xmit+0x2b7>
    0.00 :   3d45:   lea    0x28(%r15),%rax
    0.00 :   3d49:   xor    %ecx,%ecx
    0.00 :   3d4b:   xor    %esi,%esi
    0.00 :   3d4d:   movq   $0x0,(%rax)
    0.00 :   3d54:   mov    %si,0x8(%rax)
    0.00 :   3d58:   mov    0xc0(%r15),%edx
    0.00 :   3d5f:   add    0xc8(%r15),%rdx
    0.00 :   3d66:   cmpw   $0x0,0x4(%rdx)
    0.00 :   3d6b:   je     3da7 <start_xmit+0x127>
    0.00 :   3d6d:   mov    0x70(%r15),%esi
    0.00 :   3d71:   sub    0x74(%r15),%esi
    0.00 :   3d75:   mov    %si,0x2(%rax)
    0.00 :   3d79:   movzwl 0x4(%rdx),%esi
    0.00 :   3d7d:   mov    %si,0x4(%rax)
    0.00 :   3d81:   mov    0x18(%rdx),%esi
    0.00 :   3d84:   test   $0x1,%sil
    0.00 :   3d88:   je     403d <start_xmit+0x3bd>
    0.00 :   3d8e:   mov    $0x1,%edi
    0.00 :   3d93:   mov    %edi,%esi
    0.00 :   3d95:   mov    %dil,0x1(%rax)
    0.00 :   3d99:   or     $0xffffff80,%esi
    0.00 :   3d9c:   testb  $0x4,0x18(%rdx)
    0.00 :   3da0:   cmovne %esi,%edi
    0.00 :   3da3:   mov    %dil,0x1(%rax)
    0.00 :   3da7:   movzbl 0x80(%r15),%edx
    0.00 :   3daf:   and    $0x60,%edx
    0.00 :   3db2:   cmp    $0x60,%dl
    0.00 :   3db5:   jne    3de2 <start_xmit+0x162>
    0.00 :   3db7:   movb   $0x1,(%rax)
    0.00 :   3dba:   movzwl 0x88(%r15),%edx
    0.00 :   3dc2:   mov    0xd0(%r15),%rsi
    0.00 :   3dc9:   sub    0xc8(%r15),%rsi
    0.00 :   3dd0:   sub    %esi,%edx
    0.00 :   3dd2:   mov    %dx,0x6(%rax)
    0.00 :   3dd6:   movzwl 0x8a(%r15),%edx
    0.00 :   3dde:   mov    %dx,0x8(%rax)
    0.00 :   3de2:   cmpb   $0x0,0x38(%r12)
    0.00 :   3de8:   je     3df0 <start_xmit+0x170>
    0.00 :   3dea:   xor    %edx,%edx
    0.00 :   3dec:   mov    %dx,0xa(%rax)
    0.00 :   3df0:   mov    0xc0(%r15),%edx
    0.00 :   3df7:   mov    0xc8(%r15),%rsi
    0.00 :   3dfe:   mov    %rax,0x10(%rsp)
    0.00 :   3e03:   lea    0x8(%rbx),%r12
    0.00 :   3e07:   movzbl 0x2(%rsi,%rdx,1),%esi
    0.00 :   3e0c:   test   %cl,%cl
    0.00 :   3e0e:   jne    3fcf <start_xmit+0x34f>
    0.00 :   3e14:   add    $0x2,%esi
    0.00 :   3e17:   mov    %r12,%rdi
    0.00 :   3e1a:   call   3e1f <start_xmit+0x19f>
    0.00 :   3e1f:   mov    0x10(%rsp),%rax
    0.00 :   3e24:   mov    $0x80000000,%ecx
    0.00 :   3e29:   mov    %eax,%edx
    0.00 :   3e2b:   and    $0xfff,%edx
    0.00 :   3e31:   add    %rcx,%rax
    0.00 :   3e34:   jb     41df <start_xmit+0x55f>
    0.00 :   3e3a:   mov    $0xffffffff80000000,%rcx
    0.00 :   3e41:   sub    0x0(%rip),%rcx        # 3e48 <start_xmit+0x1c8>
    0.00 :   3e48:   add    %rcx,%rax
    0.00 :   3e4b:   mov    0x8(%rbx),%rcx
    0.00 :   3e4f:   shr    $0xc,%rax
    0.00 :   3e53:   shl    $0x6,%rax
    0.00 :   3e57:   add    0x0(%rip),%rax        # 3e5e <start_xmit+0x1de>
    0.00 :   3e5e:   and    $0x3,%ecx
    0.00 :   3e61:   test   $0x3,%al
    0.00 :   3e63:   jne    41c2 <start_xmit+0x542>
    0.00 :   3e69:   or     %rcx,%rax
    0.00 :   3e6c:   mov    %edx,0x10(%rbx)
    0.00 :   3e6f:   lea    0x28(%rbx),%rsi
    0.00 :   3e73:   xor    %edx,%edx
    0.00 :   3e75:   mov    %rax,0x8(%rbx)
    0.00 :   3e79:   mov    0x18(%rsp),%eax
    0.00 :   3e7d:   mov    %r15,%rdi
    0.00 :   3e80:   mov    %eax,0x14(%rbx)
    0.00 :   3e83:   mov    0x70(%r15),%ecx
    0.00 :   3e87:   call   3e8c <start_xmit+0x20c>
    0.00 :   3e8c:   mov    %eax,%edx
    0.00 :   3e8e:   test   %eax,%eax
    0.00 :   3e90:   js     418b <start_xmit+0x50b>
    0.00 :   3e96:   add    $0x1,%edx
    0.00 :   3e99:   mov    (%rbx),%rdi
    0.00 :   3e9c:   mov    $0xa20,%r8d
    0.00 :   3ea2:   mov    %r15,%rcx
    0.00 :   3ea5:   mov    %r12,%rsi
    0.00 :   3ea8:   call   3ead <start_xmit+0x22d>
    0.00 :   3ead:   mov    %eax,%edx
    0.00 :   3eaf:   test   %eax,%eax
    0.00 :   3eb1:   jne    418b <start_xmit+0x50b>
    0.00 :   3eb7:   test   %r13d,%r13d
    0.00 :   3eba:   je     405f <start_xmit+0x3df>
    0.00 :   3ec0:   mov    (%rbx),%rax
    0.00 :   3ec3:   cmpl   $0x12,0x2c(%rax)
    0.00 :   3ec7:   jbe    40c1 <start_xmit+0x441>
    0.00 :   3ecd:   test   %r14b,%r14b
    0.00 :   3ed0:   je     3ee5 <start_xmit+0x265>
    0.00 :   3ed2:   mov    0x8(%rsp),%rax
    0.00 :   3ed7:   mov    (%rsp),%rcx
    0.00 :   3edb:   testb  $0x3,0x90(%rax,%rcx,1)
    0.00 :   3ee3:   je     3ef5 <start_xmit+0x275>
    0.00 :   3ee5:   mov    (%rbx),%rdi
    0.00 :   3ee8:   call   3eed <start_xmit+0x26d>
    0.00 :   3eed:   test   %al,%al
    0.00 :   3eef:   jne    4169 <start_xmit+0x4e9>
    0.00 :   3ef5:   add    $0x20,%rsp
    0.00 :   3ef9:   xor    %eax,%eax
    0.00 :   3efb:   pop    %rbx
    0.00 :   3efc:   pop    %rbp
    0.00 :   3efd:   pop    %r12
    0.00 :   3eff:   pop    %r13
    0.00 :   3f01:   pop    %r14
    0.00 :   3f03:   pop    %r15
    0.00 :   3f05:   jmp    3f0a <start_xmit+0x28a>
   41.95 :   3f0a:   mov    (%rbx),%rdi // [virtio_net][3f0a]
    0.00 :   3f0d:   call   3f12 <start_xmit+0x292>
    0.00 :   3f12:   xor    %esi,%esi
    0.00 :   3f14:   mov    %rbx,%rdi
    0.00 :   3f17:   call   390 <free_old_xmit_skbs>
    0.00 :   3f1c:   test   %r14b,%r14b
    0.00 :   3f1f:   jne    3cf6 <start_xmit+0x76>
    0.00 :   3f25:   mov    (%rbx),%rdi
    0.00 :   3f28:   call   3f2d <start_xmit+0x2ad>
    0.00 :   3f2d:   test   %al,%al
    0.00 :   3f2f:   jne    3cf6 <start_xmit+0x76>
    0.00 :   3f35:   jmp    3f0a <start_xmit+0x28a>
    0.00 :   3f37:   mov    0xd0(%r15),%rax
    0.00 :   3f3e:   test   $0x1,%al
    0.00 :   3f40:   jne    3d45 <start_xmit+0xc5>
    0.00 :   3f46:   mov    0xc8(%r15),%rdi
    0.00 :   3f4d:   testb  $0x1,0x7e(%r15)
    0.00 :   3f52:   je     3f72 <start_xmit+0x2f2>
    0.00 :   3f54:   mov    0xc0(%r15),%edx
    0.00 :   3f5b:   add    %rdi,%rdx
    0.00 :   3f5e:   mov    0x20(%rdx),%edx
    0.00 :   3f61:   movzwl %dx,%esi
    0.00 :   3f64:   sar    $0x10,%edx
    0.00 :   3f67:   sub    %edx,%esi
    0.00 :   3f69:   cmp    $0x1,%esi
    0.00 :   3f6c:   jne    3d45 <start_xmit+0xc5>
    0.00 :   3f72:   mov    %rax,%rdx
    0.00 :   3f75:   mov    0x18(%rsp),%esi
    0.00 :   3f79:   sub    %rdi,%rdx
    0.00 :   3f7c:   cmp    %esi,%edx
    0.00 :   3f7e:   jb     3d45 <start_xmit+0xc5>
    0.00 :   3f84:   movzbl %r10b,%edx
    0.00 :   3f88:   sub    %rdx,%rax
    0.00 :   3f8b:   jmp    3d4b <start_xmit+0xcb>
    0.00 :   3f90:   mov    0x10(%r12),%rdx
    0.00 :   3f95:   mov    %r15,%rcx
    0.00 :   3f98:   mov    0xd0(%r15),%r8
    0.00 :   3f9f:   mov    $0x0,%rsi
    0.00 :   3fa6:   mov    $0x0,%rdi
    0.00 :   3fad:   mov    %al,0x10(%rsp)
    0.00 :   3fb1:   call   3fb6 <start_xmit+0x336>
    0.00 :   3fb6:   movzbl 0x49(%r12),%ecx
    0.00 :   3fbc:   movzbl 0x10(%rsp),%r10d
    0.00 :   3fc2:   test   %cl,%cl
    0.00 :   3fc4:   je     3d45 <start_xmit+0xc5>
    0.00 :   3fca:   jmp    3f37 <start_xmit+0x2b7>
    0.00 :   3fcf:   add    $0x1,%esi
    0.00 :   3fd2:   mov    %r12,%rdi
    0.00 :   3fd5:   mov    %r10b,0x10(%rsp)
    0.00 :   3fda:   call   3fdf <start_xmit+0x35f>
    0.00 :   3fdf:   movzbl 0x10(%rsp),%r10d
    0.00 :   3fe5:   xor    %edx,%edx
    0.00 :   3fe7:   mov    %r12,%rsi
    0.00 :   3fea:   mov    0x18(%rsp),%ecx
    0.00 :   3fee:   sub    %r10,0xd0(%r15)
    0.00 :   3ff5:   mov    %r15,%rdi
    0.00 :   3ff8:   add    0x70(%r15),%ecx
    0.00 :   3ffc:   mov    %r10,0x10(%rsp)
    0.00 :   4001:   mov    %ecx,0x70(%r15)
    0.00 :   4005:   call   400a <start_xmit+0x38a>
    0.00 :   400a:   mov    %eax,%edx
    0.00 :   400c:   test   %eax,%eax
    0.00 :   400e:   js     418b <start_xmit+0x50b>
    0.00 :   4014:   mov    0x70(%r15),%eax
   58.05 :   4018:   mov    0x18(%rsp),%ecx // [virtio_net][4018]
    0.00 :   401c:   mov    0x10(%rsp),%r10
    0.00 :   4021:   sub    %ecx,%eax
    0.00 :   4023:   cmp    0x74(%r15),%eax
    0.00 :   4027:   mov    %eax,0x70(%r15)
    0.00 :   402b:   jb     41ce <start_xmit+0x54e>
    0.00 :   4031:   add    %r10,0xd0(%r15)
    0.00 :   4038:   jmp    3e99 <start_xmit+0x219>
    0.00 :   403d:   and    $0x10,%esi
    0.00 :   4040:   je     4186 <start_xmit+0x506>
    0.00 :   4046:   mov    $0x4,%edi
    0.00 :   404b:   jmp    3d93 <start_xmit+0x113>
    0.00 :   4050:   xor    %esi,%esi
    0.00 :   4052:   mov    %r15,%rdi
    0.00 :   4055:   call   405a <start_xmit+0x3da>
    0.00 :   405a:   jmp    3d17 <start_xmit+0x97>
    0.00 :   405f:   mov    0x60(%r15),%rax
    0.00 :   4063:   test   %rax,%rax
    0.00 :   4066:   je     415c <start_xmit+0x4dc>
    0.00 :   406c:   mov    %r15,%rdi
    0.00 :   406f:   call   4074 <start_xmit+0x3f4>
    0.00 :   4074:   movq   $0x0,0x60(%r15)
    0.00 :   407c:   movq   $0x0,0x18(%r15)
    0.00 :   4084:   mov    0x68(%r15),%rdi
    0.00 :   4088:   cmp    $0x7,%rdi
    0.00 :   408c:   jbe    40ac <start_xmit+0x42c>
    0.00 :   408e:   and    $0xfffffffffffffff8,%rdi
    0.00 :   4092:   mov    $0xffffffff,%eax
    0.00 :   4097:   lock xadd %eax,(%rdi)
    0.00 :   409b:   cmp    $0x1,%eax
    0.00 :   409e:   je     41c4 <start_xmit+0x544>
    0.00 :   40a4:   test   %eax,%eax
    0.00 :   40a6:   jle    41d0 <start_xmit+0x550>
    0.00 :   40ac:   movq   $0x0,0x68(%r15)
    0.00 :   40b4:   mov    (%rbx),%rax
    0.00 :   40b7:   cmpl   $0x12,0x2c(%rax)
    0.00 :   40bb:   ja     3ecd <start_xmit+0x24d>
    0.00 :   40c1:   mov    (%rsp),%rax
    0.00 :   40c5:   add    0x400(%rbp),%rax
    0.00 :   40cc:   lock orb $0x1,0x90(%rax)
    0.00 :   40d4:   mov    (%rbx),%rdi
    0.00 :   40d7:   test   %r13d,%r13d
    0.00 :   40da:   je     4118 <start_xmit+0x498>
    0.00 :   40dc:   call   40e1 <start_xmit+0x461>
    0.00 :   40e1:   test   %al,%al
    0.00 :   40e3:   jne    3ecd <start_xmit+0x24d>
    0.00 :   40e9:   lea    0x2c0(%rbx),%rbp
    0.00 :   40f0:   mov    (%rbx),%r12
    0.00 :   40f3:   mov    %rbp,%rdi
    0.00 :   40f6:   call   40fb <start_xmit+0x47b>
    0.00 :   40fb:   test   %al,%al
    0.00 :   40fd:   je     3ecd <start_xmit+0x24d>
    0.00 :   4103:   mov    %r12,%rdi
    0.00 :   4106:   call   410b <start_xmit+0x48b>
    0.00 :   410b:   mov    %rbp,%rdi
    0.00 :   410e:   call   4113 <start_xmit+0x493>
    0.00 :   4113:   jmp    3ecd <start_xmit+0x24d>
    0.00 :   4118:   call   411d <start_xmit+0x49d>
    0.00 :   411d:   test   %al,%al
    0.00 :   411f:   jne    3ecd <start_xmit+0x24d>
    0.00 :   4125:   xor    %esi,%esi
    0.00 :   4127:   mov    %rbx,%rdi
    0.00 :   412a:   call   390 <free_old_xmit_skbs>
    0.00 :   412f:   mov    (%rbx),%rax
    0.00 :   4132:   cmpl   $0x12,0x2c(%rax)
    0.00 :   4136:   jbe    3ecd <start_xmit+0x24d>
    0.00 :   413c:   mov    (%rsp),%rax
    0.00 :   4140:   add    0x400(%rbp),%rax
    0.00 :   4147:   lock andb $0xfe,0x90(%rax)
    0.00 :   414f:   mov    (%rbx),%rdi
    0.00 :   4152:   call   4157 <start_xmit+0x4d7>
    0.00 :   4157:   jmp    3ecd <start_xmit+0x24d>
    0.00 :   415c:   cmpq   $0x0,0x18(%r15)
    0.00 :   4161:   je     4084 <start_xmit+0x404>
    0.00 :   4167:   ud2
    0.00 :   4169:   mov    (%rbx),%rdi
    0.00 :   416c:   call   4171 <start_xmit+0x4f1>
    0.00 :   4171:   test   %al,%al
    0.00 :   4173:   je     3ef5 <start_xmit+0x275>
    0.00 :   4179:   addq   $0x1,0x2b0(%rbx)
    0.00 :   4181:   jmp    3ef5 <start_xmit+0x275>
    0.00 :   4186:   mov    $0xffffffb9,%edx
    0.00 :   418b:   addq   $0x1,0x1c0(%rbp)
    0.00 :   4193:   mov    %edx,0x18(%rsp)
    0.00 :   4197:   call   419c <start_xmit+0x51c>
    0.00 :   419c:   mov    0x18(%rsp),%edx
    0.00 :   41a0:   test   %eax,%eax
    0.00 :   41a2:   jne    41a8 <start_xmit+0x528>
    0.00 :   41a8:   addq   $0x1,0x168(%rbp)
    0.00 :   41b0:   mov    $0x1,%esi
    0.00 :   41b5:   mov    %r15,%rdi
    0.00 :   41b8:   call   41bd <start_xmit+0x53d>
    0.00 :   41bd:   jmp    3ef5 <start_xmit+0x275>
    0.00 :   41c2:   ud2
    0.00 :   41c4:   call   41c9 <start_xmit+0x549>
    0.00 :   41c9:   jmp    40ac <start_xmit+0x42c>
    0.00 :   41ce:   ud2
    0.00 :   41d0:   mov    $0x3,%esi
    0.00 :   41d5:   call   41da <start_xmit+0x55a>
    0.00 :   41da:   jmp    40ac <start_xmit+0x42c>
    0.00 :   41df:   mov    0x0(%rip),%rcx        # 41e6 <start_xmit+0x566>
    0.00 :   41e6:   jmp    3e48 <start_xmit+0x1c8>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

  100.00 [nf_tables][155e0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (2 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000155e0 <nft_do_chain_inet>:
         : 6     nft_do_chain_inet():
  100.00 :   155e0:  call   155e5 <nft_do_chain_inet+0x5> // [nf_tables][155e0]
    0.00 :   155e5:  push   %rbx
    0.00 :   155e6:  mov    %rdi,%rbx
    0.00 :   155e9:  mov    %rsi,%rdi
    0.00 :   155ec:  sub    $0x30,%rsp
    0.00 :   155f0:  movzbl 0x1(%rdx),%eax
    0.00 :   155f4:  movq   $0x0,0x20(%rsp)
    0.00 :   155fd:  movq   $0x0,0x28(%rsp)
    0.00 :   15606:  mov    %rsi,0x10(%rsp)
    0.00 :   1560b:  mov    %rdx,0x18(%rsp)
    0.00 :   15610:  cmp    $0x2,%al
    0.00 :   15612:  je     1567e <nft_do_chain_inet+0x9e>
    0.00 :   15614:  cmp    $0xa,%al
    0.00 :   15616:  jne    15667 <nft_do_chain_inet+0x87>
    0.00 :   15618:  xor    %eax,%eax
    0.00 :   1561a:  lea    0x8(%rsp),%r8
    0.00 :   1561f:  lea    0x6(%rsp),%rcx
    0.00 :   15624:  mov    $0xffffffff,%edx
    0.00 :   15629:  lea    0xc(%rsp),%rsi
    0.00 :   1562e:  movl   $0x2,0x8(%rsp)
    0.00 :   15636:  movl   $0x0,0xc(%rsp)
    0.00 :   1563e:  mov    %ax,0x6(%rsp)
    0.00 :   15643:  call   15648 <nft_do_chain_inet+0x68>
    0.00 :   15648:  test   %eax,%eax
    0.00 :   1564a:  js     156b9 <nft_do_chain_inet+0xd9>
    0.00 :   1564c:  mov    %al,0x21(%rsp)
    0.00 :   15650:  mov    0xc(%rsp),%eax
    0.00 :   15654:  movb   $0x1,0x20(%rsp)
    0.00 :   15659:  mov    %eax,0x24(%rsp)
    0.00 :   1565d:  movzwl 0x6(%rsp),%eax
    0.00 :   15662:  mov    %ax,0x22(%rsp)
    0.00 :   15667:  mov    %rbx,%rsi
    0.00 :   1566a:  lea    0x10(%rsp),%rdi
    0.00 :   1566f:  call   15674 <nft_do_chain_inet+0x94>
    0.00 :   15674:  add    $0x30,%rsp
    0.00 :   15678:  pop    %rbx
    0.00 :   15679:  jmp    1567e <nft_do_chain_inet+0x9e>
    0.00 :   1567e:  movzwl 0xb8(%rsi),%eax
    0.00 :   15685:  add    0xc8(%rsi),%rax
    0.00 :   1568c:  movb   $0x1,0x20(%rsp)
    0.00 :   15691:  movzbl 0x9(%rax),%edx
    0.00 :   15695:  mov    %dl,0x21(%rsp)
    0.00 :   15699:  movzbl (%rax),%edx
    0.00 :   1569c:  and    $0xf,%edx
    0.00 :   1569f:  shl    $0x2,%edx
    0.00 :   156a2:  mov    %edx,0x24(%rsp)
    0.00 :   156a6:  movzwl 0x6(%rax),%eax
    0.00 :   156aa:  rol    $0x8,%ax
    0.00 :   156ae:  and    $0x1fff,%ax
    0.00 :   156b2:  mov    %ax,0x22(%rsp)
    0.00 :   156b7:  jmp    15667 <nft_do_chain_inet+0x87>
    0.00 :   156b9:  movq   $0x0,0x20(%rsp)
    0.00 :   156c2:  jmp    15667 <nft_do_chain_inet+0x87>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[a1c80]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000a1c50 <strrchr_ifunc>:
         : 6     strrchr_ifunc():
    0.00 :   a1c50:  endbr64
    0.00 :   a1c54:  mov    0x13126d(%rip),%rax        # 1d2ec8 <_rtld_global_ro@GLIBC_PRIVATE>
    0.00 :   a1c5b:  lea    0x107be(%rip),%rdx        # b2420 <__strrchr_sse2>
    0.00 :   a1c62:  mov    0xb8(%rax),%ecx
    0.00 :   a1c68:  mov    %ecx,%esi
    0.00 :   a1c6a:  and    $0x128,%esi
    0.00 :   a1c70:  cmp    $0x128,%esi
    0.00 :   a1c76:  je     a1c80 <strrchr_ifunc+0x30>
    0.00 :   a1c78:  mov    %rdx,%rax
    0.00 :   a1c7b:  ret
    0.00 :   a1c7c:  nopl   0x0(%rax)
  100.00 :   a1c80:  testb  $0x20,0xdc(%rax) // libc.so.6[a1c80]
    0.00 :   a1c87:  je     a1c78 <strrchr_ifunc+0x28>
    0.00 :   a1c89:  mov    0x1a4(%rax),%eax
    0.00 :   a1c8f:  test   $0x2,%ah
    0.00 :   a1c92:  je     a1c78 <strrchr_ifunc+0x28>
    0.00 :   a1c94:  test   %ecx,%ecx
    0.00 :   a1c96:  js     a1cc0 <strrchr_ifunc+0x70>
    0.00 :   a1c98:  lea    0xbf8c1(%rip),%rdx        # 161560 <__strrchr_avx2_rtm>
    0.00 :   a1c9f:  and    $0x8,%ch
    0.00 :   a1ca2:  jne    a1c78 <strrchr_ifunc+0x28>
    0.00 :   a1ca4:  test   $0x4,%ah
    0.00 :   a1ca7:  lea    0x10772(%rip),%rdx        # b2420 <__strrchr_sse2>
    0.00 :   a1cae:  lea    0xb6cbb(%rip),%rax        # 158970 <__strrchr_avx2>
    0.00 :   a1cb5:  cmove  %rax,%rdx
    0.00 :   a1cb9:  jmp    a1c78 <strrchr_ifunc+0x28>
    0.00 :   a1cbb:  nopl   0x0(%rax,%rax,1)
    0.00 :   a1cc0:  lea    0xc8839(%rip),%rdx        # 16a500 <__strrchr_evex>
    0.00 :   a1cc7:  test   $0x40000000,%ecx
    0.00 :   a1ccd:  je     a1c98 <strrchr_ifunc+0x48>
    0.00 :   a1ccf:  jmp    a1c78 <strrchr_ifunc+0x28>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[4def0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (2 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000004def0 <__mpn_lshift>:
         : 6     __mpn_lshift():
  100.00 :   4def0:  endbr64 // libc.so.6[4def0]
    0.00 :   4def4:  lea    -0x8(%rdi,%rdx,8),%rdi
    0.00 :   4def9:  lea    -0x8(%rsi,%rdx,8),%rsi
    0.00 :   4defe:  mov    %edx,%eax
    0.00 :   4df00:  and    $0x3,%eax
    0.00 :   4df03:  jne    4df23 <__mpn_lshift+0x33>
    0.00 :   4df05:  mov    (%rsi),%r10
    0.00 :   4df08:  mov    -0x8(%rsi),%r11
    0.00 :   4df0c:  xor    %eax,%eax
    0.00 :   4df0e:  shld   %cl,%r10,%rax
    0.00 :   4df12:  mov    -0x10(%rsi),%r8
    0.00 :   4df16:  lea    0x18(%rdi),%rdi
    0.00 :   4df1a:  sub    $0x4,%rdx
    0.00 :   4df1e:  jmp    4dfd2 <__mpn_lshift+0xe2>
    0.00 :   4df23:  cmp    $0x2,%eax
    0.00 :   4df26:  jae    4df50 <__mpn_lshift+0x60>
    0.00 :   4df28:  mov    (%rsi),%r9
    0.00 :   4df2b:  xor    %eax,%eax
    0.00 :   4df2d:  shld   %cl,%r9,%rax
    0.00 :   4df31:  sub    $0x2,%rdx
    0.00 :   4df35:  jb     4df49 <__mpn_lshift+0x59>
    0.00 :   4df37:  mov    -0x8(%rsi),%r10
    0.00 :   4df3b:  mov    -0x10(%rsi),%r11
    0.00 :   4df3f:  lea    -0x8(%rsi),%rsi
    0.00 :   4df43:  lea    0x10(%rdi),%rdi
    0.00 :   4df47:  jmp    4dfc6 <__mpn_lshift+0xd6>
    0.00 :   4df49:  shl    %cl,%r9
    0.00 :   4df4c:  mov    %r9,(%rdi)
    0.00 :   4df4f:  ret
    0.00 :   4df50:  jne    4df90 <__mpn_lshift+0xa0>
    0.00 :   4df52:  mov    (%rsi),%r8
    0.00 :   4df55:  mov    -0x8(%rsi),%r9
    0.00 :   4df59:  xor    %eax,%eax
    0.00 :   4df5b:  shld   %cl,%r8,%rax
    0.00 :   4df5f:  sub    $0x3,%rdx
    0.00 :   4df63:  jb     4df73 <__mpn_lshift+0x83>
    0.00 :   4df65:  mov    -0x10(%rsi),%r10
    0.00 :   4df69:  lea    -0x10(%rsi),%rsi
    0.00 :   4df6d:  lea    0x8(%rdi),%rdi
    0.00 :   4df71:  jmp    4dfba <__mpn_lshift+0xca>
    0.00 :   4df73:  shld   %cl,%r9,%r8
    0.00 :   4df77:  mov    %r8,(%rdi)
    0.00 :   4df7a:  shl    %cl,%r9
    0.00 :   4df7d:  mov    %r9,-0x8(%rdi)
    0.00 :   4df81:  ret
    0.00 :   4df82:  data16 cs nopw 0x0(%rax,%rax,1)
    0.00 :   4df8d:  nopl   (%rax)
    0.00 :   4df90:  mov    (%rsi),%r11
    0.00 :   4df93:  mov    -0x8(%rsi),%r8
    0.00 :   4df97:  xor    %eax,%eax
    0.00 :   4df99:  shld   %cl,%r11,%rax
    0.00 :   4df9d:  mov    -0x10(%rsi),%r9
    0.00 :   4dfa1:  lea    -0x18(%rsi),%rsi
    0.00 :   4dfa5:  sub    $0x4,%rdx
    0.00 :   4dfa9:  jb     4dfec <__mpn_lshift+0xfc>
    0.00 :   4dfab:  nopl   0x0(%rax,%rax,1)
    0.00 :   4dfb0:  shld   %cl,%r8,%r11
    0.00 :   4dfb4:  mov    (%rsi),%r10
    0.00 :   4dfb7:  mov    %r11,(%rdi)
    0.00 :   4dfba:  shld   %cl,%r9,%r8
    0.00 :   4dfbe:  mov    -0x8(%rsi),%r11
    0.00 :   4dfc2:  mov    %r8,-0x8(%rdi)
    0.00 :   4dfc6:  shld   %cl,%r10,%r9
    0.00 :   4dfca:  mov    -0x10(%rsi),%r8
    0.00 :   4dfce:  mov    %r9,-0x10(%rdi)
    0.00 :   4dfd2:  shld   %cl,%r11,%r10
    0.00 :   4dfd6:  mov    -0x18(%rsi),%r9
    0.00 :   4dfda:  mov    %r10,-0x18(%rdi)
    0.00 :   4dfde:  add    $0xffffffffffffffe0,%rsi
    0.00 :   4dfe2:  lea    -0x20(%rdi),%rdi
    0.00 :   4dfe6:  sub    $0x4,%rdx
    0.00 :   4dfea:  jae    4dfb0 <__mpn_lshift+0xc0>
    0.00 :   4dfec:  shld   %cl,%r8,%r11
    0.00 :   4dff0:  mov    %r11,(%rdi)
    0.00 :   4dff3:  shld   %cl,%r9,%r8
    0.00 :   4dff7:  mov    %r8,-0x8(%rdi)
    0.00 :   4dffb:  shl    %cl,%r9
    0.00 :   4dffe:  mov    %r9,-0x10(%rdi)
    0.00 :   4e002:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/ipv4/netfilter/nf_defrag_ipv4.ko.xz
----------------------------------------------

   59.83 [nf_defrag_ipv4][70]
   40.17 [nf_defrag_ipv4][9f]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/ipv4/netfilter/nf_defrag_ipv4.ko.xz for cycles (2 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000070 <ipv4_conntrack_defrag>:
         : 6   ipv4_conntrack_defrag():
   59.83 :    70:     call   75 <ipv4_conntrack_defrag+0x5> // [nf_defrag_ipv4][70]
    0.00 :    75:     push   %r12
    0.00 :    77:     push   %rbp
    0.00 :    78:     push   %rbx
    0.00 :    79:     mov    %rsi,%rbx
    0.00 :    7c:     mov    %rdx,%rsi
    0.00 :    7f:     mov    0x18(%rbx),%rax
    0.00 :    83:     test   %rax,%rax
    0.00 :    86:     je     9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    88:     movzbl 0x12(%rax),%ecx
    0.00 :    8c:     mov    $0x1,%edx
    0.00 :    91:     shl    %cl,%edx
    0.00 :    93:     and    $0xffffefbf,%edx
    0.00 :    99:     jne    ca <ipv4_conntrack_defrag+0x5a>
    0.00 :    9b:     mov    0x68(%rbx),%rax
   40.17 :    9f:     cmp    $0x7,%rax // [nf_defrag_ipv4][9f]
    0.00 :    a3:     je     bc <ipv4_conntrack_defrag+0x4c>
    0.00 :    a5:     movzwl 0xb8(%rbx),%edx
    0.00 :    ac:     mov    0xc8(%rbx),%rcx
    0.00 :    b3:     testw  $0xff3f,0x6(%rcx,%rdx,1)
    0.00 :    ba:     jne    dc <ipv4_conntrack_defrag+0x6c>
    0.00 :    bc:     mov    $0x1,%eax
    0.00 :    c1:     pop    %rbx
    0.00 :    c2:     pop    %rbp
    0.00 :    c3:     pop    %r12
    0.00 :    c5:     jmp    ca <ipv4_conntrack_defrag+0x5a>
    0.00 :    ca:     cmpw   $0x2,0x10(%rax)
    0.00 :    cf:     jne    9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    d1:     cmpb   $0x0,0x328(%rax)
    0.00 :    d8:     jns    9b <ipv4_conntrack_defrag+0x2b>
    0.00 :    da:     jmp    bc <ipv4_conntrack_defrag+0x4c>
    0.00 :    dc:     movzbl (%rsi),%edi
    0.00 :    df:     xor    %edx,%edx
    0.00 :    e1:     cmp    $0x7,%rax
    0.00 :    e5:     jbe    10c <ipv4_conntrack_defrag+0x9c>
    0.00 :    e7:     mov    %rax,%r8
    0.00 :    ea:     and    $0x7,%eax
    0.00 :    ed:     mov    $0x1,%edx
    0.00 :    f2:     and    $0xfffffffffffffff8,%r8
    0.00 :    f6:     cmp    $0x2,%eax
    0.00 :    f9:     seta   %cl
    0.00 :    fc:     movzbl 0xf(%r8),%eax
    0.00 :   101:    shl    %cl,%edx
    0.00 :   103:    and    %eax,%edx
    0.00 :   105:    je     10c <ipv4_conntrack_defrag+0x9c>
    0.00 :   107:    movzwl 0xc(%r8),%edx
    0.00 :   10c:    testb  $0x1,0x7f(%rbx)
    0.00 :   110:    je     133 <ipv4_conntrack_defrag+0xc3>
    0.00 :   112:    mov    0xe0(%rbx),%rcx
    0.00 :   119:    movzbl 0x4(%rcx),%eax
    0.00 :   11d:    shl    $0x3,%eax
    0.00 :   120:    cltq
    0.00 :   122:    add    %rax,%rcx
    0.00 :   125:    je     133 <ipv4_conntrack_defrag+0xc3>
    0.00 :   127:    lea    0x20002(%rdx),%ebp
    0.00 :   12d:    testb  $0x2,0x1(%rcx)
    0.00 :   131:    jne    144 <ipv4_conntrack_defrag+0xd4>
    0.00 :   133:    lea    0x2(%rdx),%eax
    0.00 :   136:    add    $0x10002,%edx
    0.00 :   13c:    test   %dil,%dil
    0.00 :   13f:    cmovne %edx,%eax
    0.00 :   142:    mov    %eax,%ebp
    0.00 :   144:    mov    $0x200,%edi
    0.00 :   149:    mov    0x20(%rsi),%r12
    0.00 :   14d:    call   152 <ipv4_conntrack_defrag+0xe2>
    0.00 :   152:    mov    %ebp,%edx
    0.00 :   154:    mov    %rbx,%rsi
    0.00 :   157:    mov    %r12,%rdi
    0.00 :   15a:    call   15f <ipv4_conntrack_defrag+0xef>
    0.00 :   15f:    mov    $0x200,%esi
    0.00 :   164:    mov    $0x0,%rdi
    0.00 :   16b:    mov    %eax,%ebp
    0.00 :   16d:    call   172 <ipv4_conntrack_defrag+0x102>
    0.00 :   172:    mov    $0x2,%eax
    0.00 :   177:    test   %ebp,%ebp
    0.00 :   179:    jne    c1 <ipv4_conntrack_defrag+0x51>
    0.00 :   17f:    orb    $0x8,0x80(%rbx)
    0.00 :   186:    jmp    bc <ipv4_conntrack_defrag+0x4c>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/arch/x86/kvm/kvm.ko.xz
----------------------------------------------

  100.00 [kvm][1d400]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/arch/x86/kvm/kvm.ko.xz for cycles (2 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001d400 <pvclock_gtod_notify>:
         : 6     pvclock_gtod_notify():
  100.00 :   1d400:  call   1d405 <pvclock_gtod_notify+0x5> // [kvm][1d400]
    0.00 :   1d405:  addl   $0x1,0x0(%rip)        # 1d40c <pvclock_gtod_notify+0xc>
    0.00 :   1d40c:  mov    %rdx,%rax
    0.00 :   1d40f:  mov    (%rdx),%rdx
    0.00 :   1d412:  mov    0x50(%rdx),%edx
    0.00 :   1d415:  mov    %edx,0x0(%rip)        # 1d41b <pvclock_gtod_notify+0x1b>
    0.00 :   1d41b:  mov    0x10(%rax),%rdx
    0.00 :   1d41f:  mov    %rdx,0x0(%rip)        # 1d426 <pvclock_gtod_notify+0x26>
    0.00 :   1d426:  mov    0x8(%rax),%rdx
    0.00 :   1d42a:  mov    %rdx,0x0(%rip)        # 1d431 <pvclock_gtod_notify+0x31>
    0.00 :   1d431:  mov    0x18(%rax),%edx
    0.00 :   1d434:  mov    %edx,0x0(%rip)        # 1d43a <pvclock_gtod_notify+0x3a>
    0.00 :   1d43a:  mov    0x1c(%rax),%edx
    0.00 :   1d43d:  mov    %edx,0x0(%rip)        # 1d443 <pvclock_gtod_notify+0x43>
    0.00 :   1d443:  mov    0x20(%rax),%rdx
    0.00 :   1d447:  mov    %rdx,0x0(%rip)        # 1d44e <pvclock_gtod_notify+0x4e>
    0.00 :   1d44e:  mov    0x28(%rax),%rdx
    0.00 :   1d452:  mov    %rdx,0x0(%rip)        # 1d459 <pvclock_gtod_notify+0x59>
    0.00 :   1d459:  mov    0x38(%rax),%rdx
    0.00 :   1d45d:  mov    0x50(%rdx),%edx
    0.00 :   1d460:  mov    %edx,0x0(%rip)        # 1d466 <pvclock_gtod_notify+0x66>
    0.00 :   1d466:  mov    0x48(%rax),%rdx
    0.00 :   1d46a:  mov    %rdx,0x0(%rip)        # 1d471 <pvclock_gtod_notify+0x71>
    0.00 :   1d471:  mov    0x40(%rax),%rdx
    0.00 :   1d475:  mov    %rdx,0x0(%rip)        # 1d47c <pvclock_gtod_notify+0x7c>
    0.00 :   1d47c:  mov    0x50(%rax),%rdx
    0.00 :   1d480:  mov    %rdx,0x0(%rip)        # 1d487 <pvclock_gtod_notify+0x87>
    0.00 :   1d487:  mov    0x58(%rax),%rdx
    0.00 :   1d48b:  mov    %rdx,0x0(%rip)        # 1d492 <pvclock_gtod_notify+0x92>
    0.00 :   1d492:  mov    0x60(%rax),%rdx
    0.00 :   1d496:  mov    %rdx,0x0(%rip)        # 1d49d <pvclock_gtod_notify+0x9d>
    0.00 :   1d49d:  mov    0x70(%rax),%rdx
    0.00 :   1d4a1:  mov    0x98(%rax),%rax
    0.00 :   1d4a8:  mov    %rdx,0x0(%rip)        # 1d4af <pvclock_gtod_notify+0xaf>
    0.00 :   1d4af:  mov    %rax,0x0(%rip)        # 1d4b6 <pvclock_gtod_notify+0xb6>
    0.00 :   1d4b6:  mov    0x0(%rip),%eax        # 1d4bc <pvclock_gtod_notify+0xbc>
    0.00 :   1d4bc:  addl   $0x1,0x0(%rip)        # 1d4c3 <pvclock_gtod_notify+0xc3>
    0.00 :   1d4c3:  and    $0xfffffffd,%eax
    0.00 :   1d4c6:  cmp    $0x1,%eax
    0.00 :   1d4c9:  je     1d4d5 <pvclock_gtod_notify+0xd5>
    0.00 :   1d4cb:  mov    0x0(%rip),%eax        # 1d4d1 <pvclock_gtod_notify+0xd1>
    0.00 :   1d4d1:  test   %eax,%eax
    0.00 :   1d4d3:  jne    1d4dc <pvclock_gtod_notify+0xdc>
    0.00 :   1d4d5:  xor    %eax,%eax
    0.00 :   1d4d7:  jmp    1d4dc <pvclock_gtod_notify+0xdc>
    0.00 :   1d4dc:  mov    $0x0,%rdi
    0.00 :   1d4e3:  call   1d4e8 <pvclock_gtod_notify+0xe8>
    0.00 :   1d4e8:  xor    %eax,%eax
    0.00 :   1d4ea:  jmp    1d4ef <pvclock_gtod_notify+0xef>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

   58.68 [nf_nat][174f]
   41.32 [nf_nat][172b]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001710 <nf_nat_inet_fn>:
         : 6    nf_nat_inet_fn():
    0.00 :   1710:   call   1715 <nf_nat_inet_fn+0x5>
    0.00 :   1715:   push   %r15
    0.00 :   1717:   push   %r14
    0.00 :   1719:   push   %r13
    0.00 :   171b:   push   %r12
    0.00 :   171d:   push   %rbp
    0.00 :   171e:   push   %rbx
    0.00 :   171f:   sub    $0x10,%rsp
    0.00 :   1723:   mov    0x68(%rsi),%rbx
    0.00 :   1727:   movzbl (%rdx),%r15d
   41.32 :   172b:   cmp    $0x7,%rbx // [nf_nat][172b]
    0.00 :   172f:   jbe    18d2 <nf_nat_inet_fn+0x1c2>
    0.00 :   1735:   mov    %rdi,%rcx
    0.00 :   1738:   mov    %rsi,%r13
    0.00 :   173b:   mov    %rdx,%r12
    0.00 :   173e:   cmp    $0x4,%r15b
    0.00 :   1742:   je     18ea <nf_nat_inet_fn+0x1da>
    0.00 :   1748:   mov    %rbx,%r14
    0.00 :   174b:   and    $0xfffffffffffffff8,%r14
   58.68 :   174f:   mov    0xb0(%r14),%rax // [nf_nat][174f]
    0.00 :   1756:   test   %rax,%rax
    0.00 :   1759:   je     19e2 <nf_nat_inet_fn+0x2d2>
    0.00 :   175f:   movzbl 0x1(%rax),%edx
    0.00 :   1763:   test   %dl,%dl
    0.00 :   1765:   je     17d8 <nf_nat_inet_fn+0xc8>
    0.00 :   1767:   mov    0xc(%rax),%esi
    0.00 :   176a:   test   %esi,%esi
    0.00 :   176c:   jne    19fb <nf_nat_inet_fn+0x2eb>
    0.00 :   1772:   add    %rdx,%rax
    0.00 :   1775:   and    $0x7,%ebx
    0.00 :   1778:   cmp    $0x2,%ebx
    0.00 :   177b:   ja     18ff <nf_nat_inet_fn+0x1ef>
    0.00 :   1781:   test   %ebx,%ebx
    0.00 :   1783:   jne    17ee <nf_nat_inet_fn+0xde>
    0.00 :   1785:   mov    0x10(%r12),%rdx
    0.00 :   178a:   movzbl (%r12),%r15d
    0.00 :   178f:   test   %rax,%rax
    0.00 :   1792:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   1798:   mov    0x4(%rax),%eax
    0.00 :   179b:   test   %eax,%eax
    0.00 :   179d:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17a3:   cmp    $0x4,%r15b
    0.00 :   17a7:   jne    189a <nf_nat_inet_fn+0x18a>
    0.00 :   17ad:   cmp    $0x2,%ebx
    0.00 :   17b0:   ja     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17b6:   xor    %ebx,%ebx
    0.00 :   17b8:   cmp    0xd8(%rdx),%eax
    0.00 :   17be:   je     1a15 <nf_nat_inet_fn+0x305>
    0.00 :   17c4:   mov    %r13,%rdx
    0.00 :   17c7:   mov    %ebx,%esi
    0.00 :   17c9:   mov    %r14,%rdi
    0.00 :   17cc:   call   17d1 <nf_nat_inet_fn+0xc1>
    0.00 :   17d1:   xor    %eax,%eax
    0.00 :   17d3:   jmp    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   17d8:   and    $0x7,%ebx
    0.00 :   17db:   cmp    $0x2,%ebx
    0.00 :   17de:   ja     18fd <nf_nat_inet_fn+0x1ed>
    0.00 :   17e4:   test   %ebx,%ebx
    0.00 :   17e6:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   17ec:   xor    %eax,%eax
    0.00 :   17ee:   cmp    $0x4,%r15b
    0.00 :   17f2:   mov    0x80(%r14),%r8
    0.00 :   17f9:   setne  %bpl
    0.00 :   17fd:   cmp    $0x1,%r15b
    0.00 :   1801:   setne  %dl
    0.00 :   1804:   mov    %r8d,%esi
    0.00 :   1807:   mov    %r8d,%r15d
    0.00 :   180a:   and    $0x80,%esi
    0.00 :   1810:   and    $0x100,%r15d
    0.00 :   1817:   and    %dl,%bpl
    0.00 :   181a:   cmove  %esi,%r15d
    0.00 :   181e:   mov    %bpl,(%rsp)
    0.00 :   1822:   test   %r15d,%r15d
    0.00 :   1825:   jne    1946 <nf_nat_inet_fn+0x236>
    0.00 :   182b:   mov    (%rcx),%rbp
    0.00 :   182e:   test   %rbp,%rbp
    0.00 :   1831:   je     19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1837:   cmpw   $0x0,0x0(%rbp)
    0.00 :   183c:   jne    1854 <nf_nat_inet_fn+0x144>
    0.00 :   183e:   jmp    19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1843:   movzwl 0x0(%rbp),%eax
    0.00 :   1847:   add    $0x1,%r15d
    0.00 :   184b:   cmp    %r15d,%eax
    0.00 :   184e:   jle    19b6 <nf_nat_inet_fn+0x2a6>
    0.00 :   1854:   movslq %r15d,%rax
    0.00 :   1857:   mov    %r12,%rdx
    0.00 :   185a:   mov    %r13,%rsi
    0.00 :   185d:   shl    $0x4,%rax
    0.00 :   1861:   add    %rbp,%rax
    0.00 :   1864:   mov    0x10(%rax),%rdi
    0.00 :   1868:   mov    0x8(%rax),%rax
    0.00 :   186c:   call   1871 <nf_nat_inet_fn+0x161>
    0.00 :   1871:   cmp    $0x1,%eax
    0.00 :   1874:   jne    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   1876:   mov    0x80(%r14),%rax
    0.00 :   187d:   mov    %eax,%edx
    0.00 :   187f:   and    $0x100,%eax
    0.00 :   1884:   and    $0x80,%edx
    0.00 :   188a:   cmpb   $0x0,(%rsp)
    0.00 :   188e:   cmove  %edx,%eax
    0.00 :   1891:   test   %eax,%eax
    0.00 :   1893:   je     1843 <nf_nat_inet_fn+0x133>
    0.00 :   1895:   movzbl (%r12),%r15d
    0.00 :   189a:   xor    %ecx,%ecx
    0.00 :   189c:   cmp    $0x2,%ebx
    0.00 :   189f:   movzbl %r15b,%eax
    0.00 :   18a3:   seta   %cl
    0.00 :   18a6:   cmp    $0x4,%r15b
    0.00 :   18aa:   je     1922 <nf_nat_inet_fn+0x212>
    0.00 :   18ac:   cmp    $0x1,%eax
    0.00 :   18af:   je     1922 <nf_nat_inet_fn+0x212>
    0.00 :   18b1:   mov    $0x1,%esi
    0.00 :   18b6:   mov    $0x20,%eax
    0.00 :   18bb:   mov    %rax,%rdx
    0.00 :   18be:   xor    $0x30,%rdx
    0.00 :   18c2:   cmp    $0x2,%ebx
    0.00 :   18c5:   cmova  %rdx,%rax
    0.00 :   18c9:   and    0x80(%r14),%rax
    0.00 :   18d0:   jne    192b <nf_nat_inet_fn+0x21b>
    0.00 :   18d2:   mov    $0x1,%eax
    0.00 :   18d7:   add    $0x10,%rsp
    0.00 :   18db:   pop    %rbx
    0.00 :   18dc:   pop    %rbp
    0.00 :   18dd:   pop    %r12
    0.00 :   18df:   pop    %r13
    0.00 :   18e1:   pop    %r14
    0.00 :   18e3:   pop    %r15
    0.00 :   18e5:   jmp    18ea <nf_nat_inet_fn+0x1da>
    0.00 :   18ea:   mov    0x10(%rdx),%rax
    0.00 :   18ee:   testb  $0x4,0xca(%rax)
    0.00 :   18f5:   je     1748 <nf_nat_inet_fn+0x38>
    0.00 :   18fb:   jmp    18d2 <nf_nat_inet_fn+0x1c2>
    0.00 :   18fd:   xor    %eax,%eax
    0.00 :   18ff:   cmp    $0x4,%ebx
    0.00 :   1902:   je     17ee <nf_nat_inet_fn+0xde>
    0.00 :   1908:   mov    $0x9,%edx
    0.00 :   190d:   mov    %ebx,%ecx
    0.00 :   190f:   shr    %cl,%rdx
    0.00 :   1912:   test   %rdx,%rdx
    0.00 :   1915:   jne    1785 <nf_nat_inet_fn+0x75>
    0.00 :   191b:   ud2
    0.00 :   191d:   jmp    1785 <nf_nat_inet_fn+0x75>
    0.00 :   1922:   xor    %esi,%esi
    0.00 :   1924:   mov    $0x10,%eax
    0.00 :   1929:   jmp    18bb <nf_nat_inet_fn+0x1ab>
    0.00 :   192b:   add    $0x10,%rsp
    0.00 :   192f:   mov    %esi,%edx
    0.00 :   1931:   mov    %r13,%rdi
    0.00 :   1934:   mov    %r14,%rsi
    0.00 :   1937:   pop    %rbx
    0.00 :   1938:   pop    %rbp
    0.00 :   1939:   pop    %r12
    0.00 :   193b:   pop    %r13
    0.00 :   193d:   pop    %r14
    0.00 :   193f:   pop    %r15
    0.00 :   1941:   jmp    1946 <nf_nat_inet_fn+0x236>
    0.00 :   1946:   xchg   %ax,%ax
    0.00 :   1948:   mov    0x10(%r12),%rdx
    0.00 :   194d:   movzbl (%r12),%r15d
    0.00 :   1952:   test   %rax,%rax
    0.00 :   1955:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   195b:   mov    0x4(%rax),%eax
    0.00 :   195e:   test   %eax,%eax
    0.00 :   1960:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   1966:   cmp    $0x4,%r15b
    0.00 :   196a:   jne    189a <nf_nat_inet_fn+0x18a>
    0.00 :   1970:   cmp    $0x2,%ebx
    0.00 :   1973:   jbe    17b8 <nf_nat_inet_fn+0xa8>
    0.00 :   1979:   jmp    189a <nf_nat_inet_fn+0x18a>
    0.00 :   197e:   cmpb   $0x0,(%rsp)
    0.00 :   1982:   mov    $0x0,%rcx
    0.00 :   1989:   mov    $0x0,%rdx
    0.00 :   1990:   mov    $0x0,%rsi
    0.00 :   1997:   cmove  %rcx,%rdx
    0.00 :   199b:   mov    $0x0,%rdi
    0.00 :   19a2:   mov    %r14,%rcx
    0.00 :   19a5:   mov    %rax,0x8(%rsp)
    0.00 :   19aa:   call   19af <nf_nat_inet_fn+0x29f>
    0.00 :   19af:   mov    0x8(%rsp),%rax
    0.00 :   19b4:   jmp    1948 <nf_nat_inet_fn+0x238>
    0.00 :   19b6:   movzbl (%r12),%eax
    0.00 :   19bb:   mov    %r14,%rdi
    0.00 :   19be:   cmp    $0x4,%eax
    0.00 :   19c1:   setne  %dl
    0.00 :   19c4:   xor    %esi,%esi
    0.00 :   19c6:   cmp    $0x1,%eax
    0.00 :   19c9:   setne  %sil
    0.00 :   19cd:   and    %edx,%esi
    0.00 :   19cf:   call   1340 <__nf_nat_alloc_null_binding>
    0.00 :   19d4:   cmp    $0x1,%eax
    0.00 :   19d7:   jne    18d7 <nf_nat_inet_fn+0x1c7>
    0.00 :   19dd:   jmp    1895 <nf_nat_inet_fn+0x185>
    0.00 :   19e2:   and    $0x7,%ebx
    0.00 :   19e5:   cmp    $0x2,%ebx
    0.00 :   19e8:   ja     18ff <nf_nat_inet_fn+0x1ef>
    0.00 :   19ee:   test   %ebx,%ebx
    0.00 :   19f0:   je     189a <nf_nat_inet_fn+0x18a>
    0.00 :   19f6:   jmp    17ee <nf_nat_inet_fn+0xde>
    0.00 :   19fb:   mov    $0x1,%esi
    0.00 :   1a00:   mov    %rax,%rdi
    0.00 :   1a03:   mov    %rcx,(%rsp)
    0.00 :   1a07:   call   1a0c <nf_nat_inet_fn+0x2fc>
    0.00 :   1a0c:   mov    (%rsp),%rcx
    0.00 :   1a10:   jmp    1775 <nf_nat_inet_fn+0x65>
    0.00 :   1a15:   xor    %esi,%esi
    0.00 :   1a17:   xor    %ecx,%ecx
    0.00 :   1a19:   mov    $0x10,%eax
    0.00 :   1a1e:   jmp    18c9 <nf_nat_inet_fn+0x1b9>

Sorted summary for file /usr/lib64/libcrypto.so.3.0.8
----------------------------------------------

  100.00 libcrypto.so.3.0.8[e64b6]
 Percent |	Source code & Disassembly of /usr/lib64/libcrypto.so.3.0.8 for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000e5f80 <BN_div@@OPENSSL_3.0.0>:
    0.00 :   e5f80:  endbr64
    0.00 :   e5f84:  push   %r15
    0.00 :   e5f86:  mov    %rdx,%r15
    0.00 :   e5f89:  push   %r14
    0.00 :   e5f8b:  push   %r13
    0.00 :   e5f8d:  push   %r12
    0.00 :   e5f8f:  push   %rbp
    0.00 :   e5f90:  mov    %rcx,%rbp
    0.00 :   e5f93:  push   %rbx
    0.00 :   e5f94:  sub    $0x68,%rsp
    0.00 :   e5f98:  mov    %rdi,0x10(%rsp)
    0.00 :   e5f9d:  mov    %rcx,%rdi
    0.00 :   e5fa0:  mov    %rsi,0x18(%rsp)
    0.00 :   e5fa5:  mov    %r8,(%rsp)
    0.00 :   e5fa9:  call   e34f0 <BN_is_zero@@OPENSSL_3.0.0>
    0.00 :   e5fae:  test   %eax,%eax
    0.00 :   e5fb0:  jne    e6458 <BN_div@@OPENSSL_3.0.0+0x4d8>
    0.00 :   e5fb6:  movslq 0x8(%rbp),%rdx
    0.00 :   e5fba:  mov    0x0(%rbp),%rax
    0.00 :   e5fbe:  cmpq   $0x0,-0x8(%rax,%rdx,8)
    0.00 :   e5fc4:  je     e6420 <BN_div@@OPENSSL_3.0.0+0x4a0>
    0.00 :   e5fca:  mov    (%rsp),%rdi
    0.00 :   e5fce:  call   e4030 <BN_CTX_start@@OPENSSL_3.0.0>
    0.00 :   e5fd3:  mov    0x10(%rsp),%rax
    0.00 :   e5fd8:  mov    %rax,0x28(%rsp)
    0.00 :   e5fdd:  test   %rax,%rax
    0.00 :   e5fe0:  je     e6490 <BN_div@@OPENSSL_3.0.0+0x510>
    0.00 :   e5fe6:  mov    (%rsp),%rbx
    0.00 :   e5fea:  mov    %rbx,%rdi
    0.00 :   e5fed:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e5ff2:  mov    %rbx,%rdi
    0.00 :   e5ff5:  mov    %rax,0x8(%rsp)
    0.00 :   e5ffa:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e5fff:  mov    %rbx,%rdi
    0.00 :   e6002:  mov    %rax,0x20(%rsp)
    0.00 :   e6007:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e600c:  mov    %rax,%r14
    0.00 :   e600f:  test   %rax,%rax
    0.00 :   e6012:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e6018:  mov    %rbp,%rsi
    0.00 :   e601b:  mov    %rax,%rdi
    0.00 :   e601e:  call   e4bd0 <BN_copy@@OPENSSL_3.0.0>
    0.00 :   e6023:  test   %rax,%rax
    0.00 :   e6026:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e602c:  movslq 0x8(%r14),%r11
    0.00 :   e6030:  mov    (%r14),%r12
    0.00 :   e6033:  lea    0x0(,%r11,8),%rbx
    0.00 :   e603b:  mov    %r11,%r13
    0.00 :   e603e:  mov    -0x8(%r12,%rbx,1),%rdi
    0.00 :   e6043:  add    %r12,%rbx
    0.00 :   e6046:  call   e22d0 <BN_num_bits_word@@OPENSSL_3.0.0>
    0.00 :   e604b:  xor    %esi,%esi
    0.00 :   e604d:  mov    %eax,%r9d
    0.00 :   e6050:  mov    $0x40,%eax
    0.00 :   e6055:  sub    %r9d,%eax
    0.00 :   e6058:  mov    %eax,%r10d
    0.00 :   e605b:  mov    %r9d,%eax
    0.00 :   e605e:  sar    $0x1f,%eax
    0.00 :   e6061:  shr    $0x1a,%eax
    0.00 :   e6064:  lea    (%r9,%rax,1),%edi
    0.00 :   e6068:  and    $0x3f,%r9d
    0.00 :   e606c:  and    $0x3f,%edi
    0.00 :   e606f:  sub    %eax,%edi
    0.00 :   e6071:  movslq %edi,%rdi
    0.00 :   e6074:  neg    %rdi
    0.00 :   e6077:  mov    %rdi,%rax
    0.00 :   e607a:  shr    $0x8,%rax
    0.00 :   e607e:  or     %rax,%rdi
    0.00 :   e6081:  test   %r13d,%r13d
    0.00 :   e6084:  jle    e60ba <BN_div@@OPENSSL_3.0.0+0x13a>
    0.00 :   e6086:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   e6090:  mov    (%r12),%rdx
    0.00 :   e6094:  mov    %r10d,%ecx
    0.00 :   e6097:  add    $0x8,%r12
    0.00 :   e609b:  mov    %rdx,%rax
    0.00 :   e609e:  shl    %cl,%rax
    0.00 :   e60a1:  mov    %r9d,%ecx
    0.00 :   e60a4:  or     %rsi,%rax
    0.00 :   e60a7:  shr    %cl,%rdx
    0.00 :   e60aa:  mov    %rdx,%rsi
    0.00 :   e60ad:  mov    %rax,-0x8(%r12)
    0.00 :   e60b2:  and    %rdi,%rsi
    0.00 :   e60b5:  cmp    %rbx,%r12
    0.00 :   e60b8:  jne    e6090 <BN_div@@OPENSSL_3.0.0+0x110>
    0.00 :   e60ba:  mov    0x20(%rsp),%rdi
    0.00 :   e60bf:  mov    %r10d,%edx
    0.00 :   e60c2:  mov    %r15,%rsi
    0.00 :   e60c5:  mov    %r10d,0x48(%rsp)
    0.00 :   e60ca:  movl   $0x0,0x10(%r14)
    0.00 :   e60d2:  call   e5d30 <BN_rshift1@@OPENSSL_3.0.0+0x100>
    0.00 :   e60d7:  mov    0x48(%rsp),%r10d
    0.00 :   e60dc:  test   %eax,%eax
    0.00 :   e60de:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e60e4:  mov    0x20(%rsp),%rax
    0.00 :   e60e9:  mov    0x8(%r14),%r9d
    0.00 :   e60ed:  movslq 0x8(%rax),%rcx
    0.00 :   e60f1:  cmp    %ecx,%r9d
    0.00 :   e60f4:  jge    e6539 <BN_div@@OPENSSL_3.0.0+0x5b9>
    0.00 :   e60fa:  mov    %ecx,%edx
    0.00 :   e60fc:  sub    %r9d,%edx
    0.00 :   e60ff:  movslq %edx,%rax
    0.00 :   e6102:  lea    0x0(,%rax,8),%r8
    0.00 :   e610a:  mov    0x20(%rsp),%rax
    0.00 :   e610f:  movslq %r9d,%r12
    0.00 :   e6112:  xor    %r13d,%r13d
    0.00 :   e6115:  shl    $0x3,%r12
    0.00 :   e6119:  mov    (%rax),%r11
    0.00 :   e611c:  mov    (%r14),%rax
    0.00 :   e611f:  mov    -0x8(%rax,%r12,1),%rbx
    0.00 :   e6124:  cmp    $0x1,%r9d
    0.00 :   e6128:  je     e612f <BN_div@@OPENSSL_3.0.0+0x1af>
    0.00 :   e612a:  mov    -0x10(%rax,%r12,1),%r13
    0.00 :   e612f:  mov    0x28(%rsp),%rax
    0.00 :   e6134:  cmp    %edx,0xc(%rax)
    0.00 :   e6137:  jl     e63ab <BN_div@@OPENSSL_3.0.0+0x42b>
    0.00 :   e613d:  mov    0x10(%r15),%eax
    0.00 :   e6141:  mov    0x28(%rsp),%rsi
    0.00 :   e6146:  mov    %eax,0x58(%rsp)
    0.00 :   e614a:  xor    0x10(%rbp),%eax
    0.00 :   e614d:  mov    %eax,0x10(%rsi)
    0.00 :   e6150:  mov    (%rsi),%rax
    0.00 :   e6153:  mov    %edx,0x8(%rsi)
    0.00 :   e6156:  mov    0x8(%rsp),%rsi
    0.00 :   e615b:  mov    %rax,0x28(%rsp)
    0.00 :   e6160:  lea    0x1(%r9),%eax
    0.00 :   e6164:  mov    %eax,0x4c(%rsp)
    0.00 :   e6168:  cmp    0xc(%rsi),%eax
    0.00 :   e616b:  jg     e65cc <BN_div@@OPENSSL_3.0.0+0x64c>
    0.00 :   e6171:  mov    0x28(%rsp),%rax
    0.00 :   e6176:  movslq %edx,%rdx
    0.00 :   e6179:  lea    -0x8(%r11,%rcx,8),%r15
    0.00 :   e617e:  lea    (%r11,%r8,1),%rbp
    0.00 :   e6182:  neg    %rdx
    0.00 :   e6185:  mov    %r10d,0x5c(%rsp)
    0.00 :   e618a:  mov    %r14,%r10
    0.00 :   e618d:  add    %r8,%rax
    0.00 :   e6190:  mov    %rax,%r8
    0.00 :   e6193:  lea    (%r15,%rdx,8),%rax
    0.00 :   e6197:  mov    %rax,0x50(%rsp)
    0.00 :   e619c:  nopl   0x0(%rax)
    0.00 :   e61a0:  mov    (%r15),%rdx
    0.00 :   e61a3:  mov    -0x8(%r15),%rax
    0.00 :   e61a7:  mov    $0xffffffffffffffff,%r14
    0.00 :   e61ae:  cmp    %rdx,%rbx
    0.00 :   e61b1:  jne    e64a8 <BN_div@@OPENSSL_3.0.0+0x528>
    0.00 :   e61b7:  mov    0x8(%rsp),%rax
    0.00 :   e61bc:  mov    (%r10),%rsi
    0.00 :   e61bf:  sub    $0x8,%rbp
    0.00 :   e61c3:  mov    (%rax),%rdi
    0.00 :   e61c6:  lea    (%rdi,%r12,1),%r11
    0.00 :   e61ca:  test   %r9d,%r9d
    0.00 :   e61cd:  jle    e6520 <BN_div@@OPENSSL_3.0.0+0x5a0>
    0.00 :   e61d3:  mov    %r9d,%edx
    0.00 :   e61d6:  mov    %r14,%rcx
    0.00 :   e61d9:  mov    %r8,0x40(%rsp)
    0.00 :   e61de:  mov    %r10,0x38(%rsp)
    0.00 :   e61e3:  mov    %r11,0x30(%rsp)
    0.00 :   e61e8:  mov    %r9d,0x48(%rsp)
    0.00 :   e61ed:  mov    %rdi,0x28(%rsp)
    0.00 :   e61f2:  call   d9410 <BIO_sock_should_retry@@OPENSSL_3.0.0+0xbd0>
    0.00 :   e61f7:  mov    0x30(%rsp),%r11
    0.00 :   e61fc:  mov    0x28(%rsp),%rdi
    0.00 :   e6201:  mov    0x48(%rsp),%r9d
    0.00 :   e6206:  mov    0x38(%rsp),%r10
    0.00 :   e620b:  mov    %rax,(%r11)
    0.00 :   e620e:  mov    0x40(%rsp),%r8
    0.00 :   e6213:  mov    0x4c(%rsp),%ecx
    0.00 :   e6217:  xor    %edx,%edx
    0.00 :   e6219:  sub    %rax,%rax
    0.00 :   e621c:  jmp    e6220 <BN_div@@OPENSSL_3.0.0+0x2a0>
    0.00 :   e621e:  xchg   %ax,%ax
    0.00 :   e6220:  mov    0x0(%rbp,%rdx,8),%rax
    0.00 :   e6225:  sbb    (%rdi,%rdx,8),%rax
    0.00 :   e6229:  mov    %rax,0x0(%rbp,%rdx,8)
    0.00 :   e622e:  lea    0x1(%rdx),%rdx
    0.00 :   e6232:  dec    %ecx
    0.00 :   e6234:  jne    e6220 <BN_div@@OPENSSL_3.0.0+0x2a0>
    0.00 :   e6236:  sbb    %rax,%rax
    0.00 :   e6239:  and    $0x1,%eax
    0.00 :   e623c:  mov    %rax,%rcx
    0.00 :   e623f:  sub    %rax,%r14
    0.00 :   e6242:  neg    %rcx
    0.00 :   e6245:  test   %r9d,%r9d
    0.00 :   e6248:  jle    e6658 <BN_div@@OPENSSL_3.0.0+0x6d8>
    0.00 :   e624e:  mov    0x8(%rsp),%rax
    0.00 :   e6253:  mov    (%r10),%rdi
    0.00 :   e6256:  mov    (%rax),%rsi
    0.00 :   e6259:  xor    %eax,%eax
    0.00 :   e625b:  nopl   0x0(%rax,%rax,1)
    0.00 :   e6260:  mov    (%rdi,%rax,1),%rdx
    0.00 :   e6264:  and    %rcx,%rdx
    0.00 :   e6267:  mov    %rdx,(%rsi,%rax,1)
    0.00 :   e626b:  add    $0x8,%rax
    0.00 :   e626f:  cmp    %r12,%rax
    0.00 :   e6272:  jne    e6260 <BN_div@@OPENSSL_3.0.0+0x2e0>
    0.00 :   e6274:  mov    %r9d,%ecx
    0.00 :   e6277:  xor    %eax,%eax
    0.00 :   e6279:  sub    %rdx,%rdx
    0.00 :   e627c:  jmp    e6280 <BN_div@@OPENSSL_3.0.0+0x300>
    0.00 :   e627e:  xchg   %ax,%ax
    0.00 :   e6280:  mov    0x0(%rbp,%rax,8),%rdx
    0.00 :   e6285:  adc    (%rsi,%rax,8),%rdx
    0.00 :   e6289:  mov    %rdx,0x0(%rbp,%rax,8)
    0.00 :   e628e:  lea    0x1(%rax),%rax
    0.00 :   e6292:  dec    %ecx
    0.00 :   e6294:  jne    e6280 <BN_div@@OPENSSL_3.0.0+0x300>
    0.00 :   e6296:  sbb    %rdx,%rdx
    0.00 :   e6299:  mov    %rdx,%rax
    0.00 :   e629c:  and    $0x1,%eax
    0.00 :   e629f:  sub    $0x8,%r8
    0.00 :   e62a3:  add    %rax,(%r15)
    0.00 :   e62a6:  sub    $0x8,%r15
    0.00 :   e62aa:  mov    %r14,(%r8)
    0.00 :   e62ad:  cmp    %r15,0x50(%rsp)
    0.00 :   e62b2:  jne    e61a0 <BN_div@@OPENSSL_3.0.0+0x220>
    0.00 :   e62b8:  mov    0x20(%rsp),%rax
    0.00 :   e62bd:  mov    0x58(%rsp),%ebx
    0.00 :   e62c1:  cmpq   $0x0,0x18(%rsp)
    0.00 :   e62c7:  mov    0x5c(%rsp),%r10d
    0.00 :   e62cc:  mov    %ebx,0x10(%rax)
    0.00 :   e62cf:  mov    %r9d,0x8(%rax)
    0.00 :   e62d3:  je     e6621 <BN_div@@OPENSSL_3.0.0+0x6a1>
    0.00 :   e62d9:  mov    0x20(%rsp),%rsi
    0.00 :   e62de:  mov    0x18(%rsp),%rdi
    0.00 :   e62e3:  mov    %r10d,%edx
    0.00 :   e62e6:  call   e5e70 <BN_rshift1@@OPENSSL_3.0.0+0x240>
    0.00 :   e62eb:  test   %eax,%eax
    0.00 :   e62ed:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e62f3:  mov    (%rsp),%rdi
    0.00 :   e62f7:  call   e2180 <BN_CTX_end@@OPENSSL_3.0.0>
    0.00 :   e62fc:  cmpq   $0x0,0x10(%rsp)
    0.00 :   e6302:  je     e6352 <BN_div@@OPENSSL_3.0.0+0x3d2>
    0.00 :   e6304:  mov    0x10(%rsp),%rbx
    0.00 :   e6309:  mov    0x8(%rbx),%eax
    0.00 :   e630c:  test   %eax,%eax
    0.00 :   e630e:  jle    e665f <BN_div@@OPENSSL_3.0.0+0x6df>
    0.00 :   e6314:  mov    0x10(%rsp),%rbx
    0.00 :   e6319:  movslq %eax,%rdx
    0.00 :   e631c:  mov    (%rbx),%rcx
    0.00 :   e631f:  lea    (%rcx,%rdx,8),%rdx
    0.00 :   e6323:  jmp    e632d <BN_div@@OPENSSL_3.0.0+0x3ad>
    0.00 :   e6325:  nopl   (%rax)
    0.00 :   e6328:  sub    $0x1,%eax
    0.00 :   e632b:  je     e6337 <BN_div@@OPENSSL_3.0.0+0x3b7>
    0.00 :   e632d:  sub    $0x8,%rdx
    0.00 :   e6331:  cmpq   $0x0,(%rdx)
    0.00 :   e6335:  je     e6328 <BN_div@@OPENSSL_3.0.0+0x3a8>
    0.00 :   e6337:  mov    0x10(%rsp),%rbx
    0.00 :   e633c:  mov    %eax,0x8(%rbx)
    0.00 :   e633f:  test   %eax,%eax
    0.00 :   e6341:  jne    e634a <BN_div@@OPENSSL_3.0.0+0x3ca>
    0.00 :   e6343:  movl   $0x0,0x10(%rbx)
    0.00 :   e634a:  cmpq   $0x0,0x18(%rsp)
    0.00 :   e6350:  je     e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e6352:  mov    0x18(%rsp),%rax
    0.00 :   e6357:  mov    0x8(%rax),%eax
    0.00 :   e635a:  test   %eax,%eax
    0.00 :   e635c:  jle    e6387 <BN_div@@OPENSSL_3.0.0+0x407>
    0.00 :   e635e:  mov    0x18(%rsp),%rbx
    0.00 :   e6363:  movslq %eax,%rdx
    0.00 :   e6366:  mov    (%rbx),%rcx
    0.00 :   e6369:  lea    (%rcx,%rdx,8),%rdx
    0.00 :   e636d:  jmp    e6375 <BN_div@@OPENSSL_3.0.0+0x3f5>
    0.00 :   e636f:  nop
    0.00 :   e6370:  sub    $0x1,%eax
    0.00 :   e6373:  je     e637f <BN_div@@OPENSSL_3.0.0+0x3ff>
    0.00 :   e6375:  sub    $0x8,%rdx
    0.00 :   e6379:  cmpq   $0x0,(%rdx)
    0.00 :   e637d:  je     e6370 <BN_div@@OPENSSL_3.0.0+0x3f0>
    0.00 :   e637f:  mov    0x18(%rsp),%rbx
    0.00 :   e6384:  mov    %eax,0x8(%rbx)
    0.00 :   e6387:  test   %eax,%eax
    0.00 :   e6389:  jne    e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e638b:  mov    0x18(%rsp),%rax
    0.00 :   e6390:  movl   $0x0,0x10(%rax)
    0.00 :   e6397:  add    $0x68,%rsp
    0.00 :   e639b:  mov    $0x1,%eax
    0.00 :   e63a0:  pop    %rbx
    0.00 :   e63a1:  pop    %rbp
    0.00 :   e63a2:  pop    %r12
    0.00 :   e63a4:  pop    %r13
    0.00 :   e63a6:  pop    %r14
    0.00 :   e63a8:  pop    %r15
    0.00 :   e63aa:  ret
    0.00 :   e63ab:  mov    0x28(%rsp),%rdi
    0.00 :   e63b0:  mov    %edx,%esi
    0.00 :   e63b2:  mov    %r8,0x50(%rsp)
    0.00 :   e63b7:  mov    %r10d,0x4c(%rsp)
    0.00 :   e63bc:  mov    %r11,0x40(%rsp)
    0.00 :   e63c1:  mov    %ecx,0x38(%rsp)
    0.00 :   e63c5:  mov    %r9d,0x30(%rsp)
    0.00 :   e63ca:  mov    %edx,0x48(%rsp)
    0.00 :   e63ce:  call   e47e0 <BN_secure_new@@OPENSSL_3.0.0+0x20>
    0.00 :   e63d3:  mov    0x48(%rsp),%edx
    0.00 :   e63d7:  mov    0x30(%rsp),%r9d
    0.00 :   e63dc:  test   %rax,%rax
    0.00 :   e63df:  movslq 0x38(%rsp),%rcx
    0.00 :   e63e4:  mov    0x40(%rsp),%r11
    0.00 :   e63e9:  mov    0x4c(%rsp),%r10d
    0.00 :   e63ee:  mov    0x50(%rsp),%r8
    0.00 :   e63f3:  jne    e613d <BN_div@@OPENSSL_3.0.0+0x1bd>
    0.00 :   e63f9:  nopl   0x0(%rax)
    0.00 :   e6400:  mov    (%rsp),%rdi
    0.00 :   e6404:  call   e2180 <BN_CTX_end@@OPENSSL_3.0.0>
    0.00 :   e6409:  add    $0x68,%rsp
    0.00 :   e640d:  xor    %eax,%eax
    0.00 :   e640f:  pop    %rbx
    0.00 :   e6410:  pop    %rbp
    0.00 :   e6411:  pop    %r12
    0.00 :   e6413:  pop    %r13
    0.00 :   e6415:  pop    %r14
    0.00 :   e6417:  pop    %r15
    0.00 :   e6419:  ret
    0.00 :   e641a:  nopw   0x0(%rax,%rax,1)
    0.00 :   e6420:  call   16c9e0 <ERR_new@@OPENSSL_3.0.0>
    0.00 :   e6425:  lea    0x2265fb(%rip),%rdx        # 30ca27 <RC4_options@@OPENSSL_3.0.0+0x28877>
    0.00 :   e642c:  mov    $0xe1,%esi
    0.00 :   e6431:  lea    0x2266f1(%rip),%rdi        # 30cb29 <RC4_options@@OPENSSL_3.0.0+0x28979>
    0.00 :   e6438:  call   16da40 <ERR_set_debug@@OPENSSL_3.0.0>
    0.00 :   e643d:  xor    %edx,%edx
    0.00 :   e643f:  mov    $0x6b,%esi
    0.00 :   e6444:  xor    %eax,%eax
    0.00 :   e6446:  mov    $0x3,%edi
    0.00 :   e644b:  call   16cda0 <ERR_set_error@@OPENSSL_3.0.0>
    0.00 :   e6450:  jmp    e6409 <BN_div@@OPENSSL_3.0.0+0x489>
    0.00 :   e6452:  nopw   0x0(%rax,%rax,1)
    0.00 :   e6458:  call   16c9e0 <ERR_new@@OPENSSL_3.0.0>
    0.00 :   e645d:  lea    0x2265c3(%rip),%rdx        # 30ca27 <RC4_options@@OPENSSL_3.0.0+0x28877>
    0.00 :   e6464:  mov    $0xd7,%esi
    0.00 :   e6469:  lea    0x2266b9(%rip),%rdi        # 30cb29 <RC4_options@@OPENSSL_3.0.0+0x28979>
    0.00 :   e6470:  call   16da40 <ERR_set_debug@@OPENSSL_3.0.0>
    0.00 :   e6475:  xor    %edx,%edx
    0.00 :   e6477:  mov    $0x67,%esi
    0.00 :   e647c:  xor    %eax,%eax
    0.00 :   e647e:  mov    $0x3,%edi
    0.00 :   e6483:  call   16cda0 <ERR_set_error@@OPENSSL_3.0.0>
    0.00 :   e6488:  jmp    e6409 <BN_div@@OPENSSL_3.0.0+0x489>
    0.00 :   e648d:  nopl   (%rax)
    0.00 :   e6490:  mov    (%rsp),%rdi
    0.00 :   e6494:  call   e4180 <BN_CTX_get@@OPENSSL_3.0.0>
    0.00 :   e6499:  mov    %rax,0x28(%rsp)
    0.00 :   e649e:  jmp    e5fe6 <BN_div@@OPENSSL_3.0.0+0x66>
    0.00 :   e64a3:  nopl   0x0(%rax,%rax,1)
    0.00 :   e64a8:  xor    %edi,%edi
    0.00 :   e64aa:  cmp    %rbp,%r15
    0.00 :   e64ad:  je     e64b3 <BN_div@@OPENSSL_3.0.0+0x533>
    0.00 :   e64af:  mov    -0x10(%r15),%rdi
    0.00 :   e64b3:  div    %rbx
  100.00 :   e64b6:  mov    %rax,%rsi // libcrypto.so.3.0.8[e64b6]
    0.00 :   e64b9:  mov    %rax,%r14
    0.00 :   e64bc:  mov    %r13,%rax
    0.00 :   e64bf:  mov    %rdx,%rcx
    0.00 :   e64c2:  mul    %rsi
    0.00 :   e64c5:  mov    %rdx,%r11
    0.00 :   e64c8:  cmp    %rcx,%rdx
    0.00 :   e64cb:  jb     e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64d1:  cmp    %rdx,%rcx
    0.00 :   e64d4:  jne    e64df <BN_div@@OPENSSL_3.0.0+0x55f>
    0.00 :   e64d6:  cmp    %rax,%rdi
    0.00 :   e64d9:  jae    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64df:  add    %rbx,%rcx
    0.00 :   e64e2:  lea    -0x1(%rsi),%r14
    0.00 :   e64e6:  mov    %r11,%rdx
    0.00 :   e64e9:  jae    e6508 <BN_div@@OPENSSL_3.0.0+0x588>
    0.00 :   e64eb:  jmp    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64f0:  jne    e64fb <BN_div@@OPENSSL_3.0.0+0x57b>
    0.00 :   e64f2:  cmp    %rax,%rdi
    0.00 :   e64f5:  jae    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e64fb:  sub    $0x1,%r14
    0.00 :   e64ff:  add    %rbx,%rcx
    0.00 :   e6502:  jb     e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e6508:  cmp    %r13,%rax
    0.00 :   e650b:  sbb    $0x0,%rdx
    0.00 :   e650f:  sub    %r13,%rax
    0.00 :   e6512:  cmp    %rcx,%rdx
    0.00 :   e6515:  jae    e64f0 <BN_div@@OPENSSL_3.0.0+0x570>
    0.00 :   e6517:  jmp    e61b7 <BN_div@@OPENSSL_3.0.0+0x237>
    0.00 :   e651c:  nopl   0x0(%rax)
    0.00 :   e6520:  xor    %eax,%eax
    0.00 :   e6522:  cmpl   $0x1,0x4c(%rsp)
    0.00 :   e6527:  movq   $0x0,(%r11)
    0.00 :   e652e:  jne    e629f <BN_div@@OPENSSL_3.0.0+0x31f>
    0.00 :   e6534:  jmp    e6213 <BN_div@@OPENSSL_3.0.0+0x293>
    0.00 :   e6539:  mov    0x20(%rsp),%rax
    0.00 :   e653e:  lea    0x1(%r9),%ebx
    0.00 :   e6542:  cmp    0xc(%rax),%ebx
    0.00 :   e6545:  jg     e6595 <BN_div@@OPENSSL_3.0.0+0x615>
    0.00 :   e6547:  mov    0x20(%rsp),%r13
    0.00 :   e654c:  mov    %r9d,%edx
    0.00 :   e654f:  xor    %esi,%esi
    0.00 :   e6551:  mov    %r10d,0x30(%rsp)
    0.00 :   e6556:  sub    %ecx,%edx
    0.00 :   e6558:  mov    %r9d,0x48(%rsp)
    0.00 :   e655d:  mov    0x0(%r13),%rax
    0.00 :   e6561:  add    $0x1,%edx
    0.00 :   e6564:  movslq %edx,%rdx
    0.00 :   e6567:  shl    $0x3,%rdx
    0.00 :   e656b:  lea    (%rax,%rcx,8),%rdi
    0.00 :   e656f:  call   ad950 <memset@plt>
    0.00 :   e6574:  mov    %ebx,0x8(%r13)
    0.00 :   e6578:  mov    0x48(%rsp),%r9d
    0.00 :   e657d:  movslq %ebx,%rcx
    0.00 :   e6580:  mov    0x30(%rsp),%r10d
    0.00 :   e6585:  mov    $0x8,%r8d
    0.00 :   e658b:  mov    $0x1,%edx
    0.00 :   e6590:  jmp    e610a <BN_div@@OPENSSL_3.0.0+0x18a>
    0.00 :   e6595:  mov    0x20(%rsp),%rdi
    0.00 :   e659a:  mov    %ebx,%esi
    0.00 :   e659c:  mov    %r10d,0x38(%rsp)
    0.00 :   e65a1:  mov    %ecx,0x30(%rsp)
    0.00 :   e65a5:  mov    %r9d,0x48(%rsp)
    0.00 :   e65aa:  call   e47e0 <BN_secure_new@@OPENSSL_3.0.0+0x20>
    0.00 :   e65af:  mov    0x48(%rsp),%r9d
    0.00 :   e65b4:  movslq 0x30(%rsp),%rcx
    0.00 :   e65b9:  test   %rax,%rax
    0.00 :   e65bc:  mov    0x38(%rsp),%r10d
    0.00 :   e65c1:  je     e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e65c7:  jmp    e6547 <BN_div@@OPENSSL_3.0.0+0x5c7>
    0.00 :   e65cc:  mov    0x4c(%rsp),%esi
    0.00 :   e65d0:  mov    0x8(%rsp),%rdi
    0.00 :   e65d5:  mov    %edx,0x5c(%rsp)
    0.00 :   e65d9:  mov    %r8,0x50(%rsp)
    0.00 :   e65de:  mov    %r10d,0x40(%rsp)
    0.00 :   e65e3:  mov    %r11,0x38(%rsp)
    0.00 :   e65e8:  mov    %ecx,0x30(%rsp)
    0.00 :   e65ec:  mov    %r9d,0x48(%rsp)
    0.00 :   e65f1:  call   e47e0 <BN_secure_new@@OPENSSL_3.0.0+0x20>
    0.00 :   e65f6:  mov    0x48(%rsp),%r9d
    0.00 :   e65fb:  movslq 0x30(%rsp),%rcx
    0.00 :   e6600:  test   %rax,%rax
    0.00 :   e6603:  mov    0x38(%rsp),%r11
    0.00 :   e6608:  mov    0x40(%rsp),%r10d
    0.00 :   e660d:  mov    0x50(%rsp),%r8
    0.00 :   e6612:  mov    0x5c(%rsp),%edx
    0.00 :   e6616:  jne    e6171 <BN_div@@OPENSSL_3.0.0+0x1f1>
    0.00 :   e661c:  jmp    e6400 <BN_div@@OPENSSL_3.0.0+0x480>
    0.00 :   e6621:  mov    (%rsp),%rdi
    0.00 :   e6625:  call   e2180 <BN_CTX_end@@OPENSSL_3.0.0>
    0.00 :   e662a:  cmpq   $0x0,0x10(%rsp)
    0.00 :   e6630:  je     e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e6636:  mov    0x10(%rsp),%rbx
    0.00 :   e663b:  mov    0x8(%rbx),%eax
    0.00 :   e663e:  test   %eax,%eax
    0.00 :   e6640:  jg     e6314 <BN_div@@OPENSSL_3.0.0+0x394>
    0.00 :   e6646:  jne    e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e664c:  movl   $0x0,0x10(%rbx)
    0.00 :   e6653:  jmp    e6397 <BN_div@@OPENSSL_3.0.0+0x417>
    0.00 :   e6658:  xor    %eax,%eax
    0.00 :   e665a:  jmp    e629f <BN_div@@OPENSSL_3.0.0+0x31f>
    0.00 :   e665f:  jne    e6352 <BN_div@@OPENSSL_3.0.0+0x3d2>
    0.00 :   e6665:  movl   $0x0,0x10(%rbx)
    0.00 :   e666c:  jmp    e6352 <BN_div@@OPENSSL_3.0.0+0x3d2>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   55.02 [nf_tables][1f6aa]
   44.98 [nf_tables][1f6a6]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (2 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001f610 <nft_hash_lookup_fast>:
         : 6     nft_hash_lookup_fast():
    0.00 :   1f610:  call   1f615 <nft_hash_lookup_fast+0x5>
    0.00 :   1f615:  mov    %rsi,%r9
    0.00 :   1f618:  mov    %rcx,%r8
    0.00 :   1f61b:  movzbl 0xc20(%rdi),%ecx
    0.00 :   1f622:  mov    $0x1,%esi
    0.00 :   1f627:  mov    0xf0(%r9),%eax
    0.00 :   1f62e:  shl    %cl,%esi
    0.00 :   1f630:  mov    (%rdx),%ecx
    0.00 :   1f632:  lea    -0x2152410d(%rax),%edx
    0.00 :   1f638:  mov    %edx,%eax
    0.00 :   1f63a:  lea    (%rcx,%rdx,1),%edi
    0.00 :   1f63d:  rol    $0xe,%eax
    0.00 :   1f640:  neg    %eax
    0.00 :   1f642:  mov    %eax,%r10d
    0.00 :   1f645:  xor    %eax,%edi
    0.00 :   1f647:  rol    $0xb,%r10d
    0.00 :   1f64b:  sub    %r10d,%edi
    0.00 :   1f64e:  mov    %edi,%r10d
    0.00 :   1f651:  xor    %edi,%edx
    0.00 :   1f653:  ror    $0x7,%r10d
    0.00 :   1f657:  sub    %r10d,%edx
    0.00 :   1f65a:  mov    %edx,%r10d
    0.00 :   1f65d:  xor    %edx,%eax
    0.00 :   1f65f:  rol    $0x10,%r10d
    0.00 :   1f663:  sub    %r10d,%eax
    0.00 :   1f666:  mov    %eax,%r10d
    0.00 :   1f669:  xor    %eax,%edi
    0.00 :   1f66b:  rol    $0x4,%r10d
    0.00 :   1f66f:  sub    %r10d,%edi
    0.00 :   1f672:  xor    %edi,%edx
    0.00 :   1f674:  rol    $0xe,%edi
    0.00 :   1f677:  sub    %edi,%edx
    0.00 :   1f679:  xor    %edx,%eax
    0.00 :   1f67b:  ror    $0x8,%edx
    0.00 :   1f67e:  sub    %edx,%eax
    0.00 :   1f680:  mov    0xf4(%r9),%edx
    0.00 :   1f687:  imul   %rdx,%rax
    0.00 :   1f68b:  shr    $0x20,%rax
    0.00 :   1f68f:  mov    0xf8(%r9,%rax,8),%rax
    0.00 :   1f697:  test   %rax,%rax
    0.00 :   1f69a:  jne    1f6a6 <nft_hash_lookup_fast+0x96>
    0.00 :   1f69c:  jmp    1f6cd <nft_hash_lookup_fast+0xbd>
    0.00 :   1f69e:  mov    (%rax),%rax
    0.00 :   1f6a1:  test   %rax,%rax
    0.00 :   1f6a4:  je     1f6c8 <nft_hash_lookup_fast+0xb8>
   44.98 :   1f6a6:  movzbl 0x11(%rax),%edx // [nf_tables][1f6a6]
   55.02 :   1f6aa:  lea    0x10(%rax),%rdi // [nf_tables][1f6aa]
    0.00 :   1f6ae:  cmp    0x10(%rax,%rdx,1),%ecx
    0.00 :   1f6b2:  jne    1f69e <nft_hash_lookup_fast+0x8e>
    0.00 :   1f6b4:  mov    %esi,%edx
    0.00 :   1f6b6:  and    0x10(%rax),%dl
    0.00 :   1f6b9:  jne    1f69e <nft_hash_lookup_fast+0x8e>
    0.00 :   1f6bb:  mov    %rdi,(%r8)
    0.00 :   1f6be:  mov    $0x1,%eax
    0.00 :   1f6c3:  jmp    1f6c8 <nft_hash_lookup_fast+0xb8>
    0.00 :   1f6c8:  jmp    1f6cd <nft_hash_lookup_fast+0xbd>
    0.00 :   1f6cd:  xor    %eax,%eax
    0.00 :   1f6cf:  jmp    1f6d4 <nft_hash_lookup_fast+0xc4>

Sorted summary for file /usr/local/bin/dbt2-driver3
----------------------------------------------

  100.00 dbt2-driver3[410613]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver3 for cycles (2 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      00000000004105c0 <pcg_mcg_128_step_r>:
         : 6      pcg_mcg_128_step_r():
    0.00 :   4105c0: push   %rbp
    0.00 :   4105c1: mov    %rsp,%rbp
    0.00 :   4105c4: mov    %rdi,-0x8(%rbp)
    0.00 :   4105c8: mov    -0x8(%rbp),%rax
    0.00 :   4105cc: mov    0x8(%rax),%rdx
    0.00 :   4105d0: mov    (%rax),%rax
    0.00 :   4105d3: movabs $0x4385df649fccf645,%rcx
    0.00 :   4105dd: mov    %rcx,%rsi
    0.00 :   4105e0: imul   %rdx,%rsi
    0.00 :   4105e4: movabs $0x2360ed051fc65da4,%rcx
    0.00 :   4105ee: imul   %rax,%rcx
    0.00 :   4105f2: add    %rsi,%rcx
    0.00 :   4105f5: movabs $0x4385df649fccf645,%rsi
    0.00 :   4105ff: mul    %rsi
    0.00 :   410602: add    %rdx,%rcx
    0.00 :   410605: mov    %rcx,%rdx
    0.00 :   410608: mov    -0x8(%rbp),%rcx
    0.00 :   41060c: mov    %rax,(%rcx)
    0.00 :   41060f: mov    %rdx,0x8(%rcx)
  100.00 :   410613: nop // dbt2-driver3[410613]
    0.00 :   410614: pop    %rbp
    0.00 :   410615: ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[27920]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000027920 <__errno_location>:
         : 6     __GI___errno_location():
  100.00 :   27920:  endbr64 // libc.so.6[27920]
    0.00 :   27924:  mov    0x1ab4e5(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   2792b:  add    %fs:0x0,%rax
    0.00 :   27934:  ret

Sorted summary for file /usr/local/bin/dbt2-driver3
----------------------------------------------

  100.00 driver3.c:0
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver3 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000413662 <thinking_time_cb>:
         : 6      thinking_time_cb():
    0.00 :   413662: push   %rbp
    0.00 :   413663: mov    %rsp,%rbp
    0.00 :   413666: sub    $0x40,%rsp
    0.00 :   41366a: mov    %rdi,-0x28(%rbp)
    0.00 :   41366e: mov    %rsi,-0x30(%rbp)
    0.00 :   413672: mov    %edx,-0x34(%rbp)
    0.00 :   413675: mov    -0x30(%rbp),%rax
    0.00 :   413679: sub    $0x30,%rax
    0.00 :   41367d: mov    %rax,-0x10(%rbp)
    0.00 :   413681: mov    -0x30(%rbp),%rdx
    0.00 :   413685: mov    -0x28(%rbp),%rax
    0.00 :   413689: mov    %rdx,%rsi
    0.00 :   41368c: mov    %rax,%rdi
    0.00 :   41368f: call   4072b0 <ev_timer_stop@plt>
    0.00 :   413694: mov    0xa00a(%rip),%eax        # 41d6a4 <mode_altered>
    0.00 :   41369a: cmp    $0x1,%eax
    0.00 :   41369d: jne    4136ef <thinking_time_cb+0x8d>
    0.00 :   41369f: mov    0xa00f(%rip),%edx        # 41d6b4 <w_id_max>
    0.00 :   4136a5: mov    0xa005(%rip),%eax        # 41d6b0 <w_id_min>
    0.00 :   4136ab: sub    %eax,%edx
    0.00 :   4136ad: lea    0x1(%rdx),%eax
    0.00 :   4136b0: cltq
    0.00 :   4136b2: mov    %rax,%rsi
    0.00 :   4136b5: mov    $0x41d740,%edi
    0.00 :   4136ba: call   4080d5 <get_random>
    0.00 :   4136bf: mov    %eax,%edx
    0.00 :   4136c1: mov    0x9fe9(%rip),%eax        # 41d6b0 <w_id_min>
    0.00 :   4136c7: add    %eax,%edx
    0.00 :   4136c9: mov    -0x10(%rbp),%rax
    0.00 :   4136cd: mov    %edx,0x60(%rax)
    0.00 :   4136d0: mov    0x9d0e(%rip),%eax        # 41d3e4 <table_cardinality+0x4>
    0.00 :   4136d6: cltq
    0.00 :   4136d8: mov    %rax,%rsi
    0.00 :   4136db: mov    $0x41d740,%edi
    0.00 :   4136e0: call   4080d5 <get_random>
    0.00 :   4136e5: lea    0x1(%rax),%edx
    0.00 :   4136e8: mov    -0x10(%rbp),%rax
    0.00 :   4136ec: mov    %edx,0x64(%rax)
    0.00 :   4136ef: mov    $0x41d740,%edi
    0.00 :   4136f4: call   408078 <get_percentage>
    0.00 :   4136f9: movq   %xmm0,%rax
    0.00 :   4136fe: mov    %rax,-0x18(%rbp)
    0.00 :   413702: movsd  0x9f06(%rip),%xmm0        # 41d610 <transaction_mix+0x30>
    0.00 :   41370a: comisd -0x18(%rbp),%xmm0
  100.00 :   41370f: jbe    41373d <thinking_time_cb+0xdb> // driver3.c:0
    0.00 :   413711: mov    -0x10(%rbp),%rax
    0.00 :   413715: movl   $0x1,0x94(%rax)
    0.00 :   41371f: mov    0x9f0f(%rip),%eax        # 41d634 <key_time+0x4>
    0.00 :   413725: mov    %eax,-0x4(%rbp)
    0.00 :   413728: mov    0x9f26(%rip),%edx        # 41d654 <think_time+0x4>
    0.00 :   41372e: mov    -0x10(%rbp),%rax
    0.00 :   413732: mov    %edx,0x88(%rax)
    0.00 :   413738: jmp    413863 <thinking_time_cb+0x201>
    0.00 :   41373d: movsd  0x9eab(%rip),%xmm0        # 41d5f0 <transaction_mix+0x10>
    0.00 :   413745: pxor   %xmm1,%xmm1
    0.00 :   413749: ucomisd %xmm1,%xmm0
    0.00 :   41374d: jp     413759 <thinking_time_cb+0xf7>
    0.00 :   41374f: pxor   %xmm1,%xmm1
    0.00 :   413753: ucomisd %xmm1,%xmm0
    0.00 :   413757: je     413794 <thinking_time_cb+0x132>
    0.00 :   413759: movsd  0x9eb7(%rip),%xmm0        # 41d618 <transaction_mix+0x38>
    0.00 :   413761: comisd -0x18(%rbp),%xmm0
    0.00 :   413766: jbe    413794 <thinking_time_cb+0x132>
    0.00 :   413768: mov    -0x10(%rbp),%rax
    0.00 :   41376c: movl   $0x3,0x94(%rax)
    0.00 :   413776: mov    0x9ec0(%rip),%eax        # 41d63c <key_time+0xc>
    0.00 :   41377c: mov    %eax,-0x4(%rbp)
    0.00 :   41377f: mov    0x9ed7(%rip),%edx        # 41d65c <think_time+0xc>
    0.00 :   413785: mov    -0x10(%rbp),%rax
    0.00 :   413789: mov    %edx,0x88(%rax)
    0.00 :   41378f: jmp    413863 <thinking_time_cb+0x201>
    0.00 :   413794: movsd  0x9e5c(%rip),%xmm0        # 41d5f8 <transaction_mix+0x18>
    0.00 :   41379c: pxor   %xmm1,%xmm1
    0.00 :   4137a0: ucomisd %xmm1,%xmm0
    0.00 :   4137a4: jp     4137b0 <thinking_time_cb+0x14e>
    0.00 :   4137a6: pxor   %xmm1,%xmm1
    0.00 :   4137aa: ucomisd %xmm1,%xmm0
    0.00 :   4137ae: je     4137e8 <thinking_time_cb+0x186>
    0.00 :   4137b0: movsd  0x9e68(%rip),%xmm0        # 41d620 <transaction_mix+0x40>
    0.00 :   4137b8: comisd -0x18(%rbp),%xmm0
    0.00 :   4137bd: jbe    4137e8 <thinking_time_cb+0x186>
    0.00 :   4137bf: mov    -0x10(%rbp),%rax
    0.00 :   4137c3: movl   $0x2,0x94(%rax)
    0.00 :   4137cd: mov    0x9e65(%rip),%eax        # 41d638 <key_time+0x8>
    0.00 :   4137d3: mov    %eax,-0x4(%rbp)
    0.00 :   4137d6: mov    0x9e7c(%rip),%edx        # 41d658 <think_time+0x8>
    0.00 :   4137dc: mov    -0x10(%rbp),%rax
    0.00 :   4137e0: mov    %edx,0x88(%rax)
    0.00 :   4137e6: jmp    413863 <thinking_time_cb+0x201>
    0.00 :   4137e8: movsd  0x9df0(%rip),%xmm0        # 41d5e0 <transaction_mix>
    0.00 :   4137f0: pxor   %xmm1,%xmm1
    0.00 :   4137f4: ucomisd %xmm1,%xmm0
    0.00 :   4137f8: jp     413804 <thinking_time_cb+0x1a2>
    0.00 :   4137fa: pxor   %xmm1,%xmm1
    0.00 :   4137fe: ucomisd %xmm1,%xmm0
    0.00 :   413802: je     41383c <thinking_time_cb+0x1da>
    0.00 :   413804: movsd  0x9dfc(%rip),%xmm0        # 41d608 <transaction_mix+0x28>
    0.00 :   41380c: comisd -0x18(%rbp),%xmm0
    0.00 :   413811: jbe    41383c <thinking_time_cb+0x1da>
    0.00 :   413813: mov    -0x10(%rbp),%rax
    0.00 :   413817: movl   $0x0,0x94(%rax)
    0.00 :   413821: mov    0x9e09(%rip),%eax        # 41d630 <key_time>
    0.00 :   413827: mov    %eax,-0x4(%rbp)
    0.00 :   41382a: mov    0x9e20(%rip),%edx        # 41d650 <think_time>
    0.00 :   413830: mov    -0x10(%rbp),%rax
    0.00 :   413834: mov    %edx,0x88(%rax)
    0.00 :   41383a: jmp    413863 <thinking_time_cb+0x201>
    0.00 :   41383c: mov    -0x10(%rbp),%rax
    0.00 :   413840: movl   $0x4,0x94(%rax)
    0.00 :   41384a: mov    0x9df0(%rip),%eax        # 41d640 <key_time+0x10>
    0.00 :   413850: mov    %eax,-0x4(%rbp)
    0.00 :   413853: mov    0x9e07(%rip),%edx        # 41d660 <think_time+0x10>
    0.00 :   413859: mov    -0x10(%rbp),%rax
    0.00 :   41385d: mov    %edx,0x88(%rax)
    0.00 :   413863: mov    -0x10(%rbp),%rax
    0.00 :   413867: mov    0x94(%rax),%eax
    0.00 :   41386d: cmp    $0x4,%eax
    0.00 :   413870: je     4138a1 <thinking_time_cb+0x23f>
    0.00 :   413872: mov    -0x10(%rbp),%rax
    0.00 :   413876: mov    0x60(%rax),%edx
    0.00 :   413879: mov    -0x10(%rbp),%rax
    0.00 :   41387d: lea    0x98(%rax),%rsi
    0.00 :   413884: mov    -0x10(%rbp),%rax
    0.00 :   413888: mov    0x94(%rax),%eax
    0.00 :   41388e: mov    %edx,%ecx
    0.00 :   413890: mov    %rsi,%rdx
    0.00 :   413893: mov    %eax,%esi
    0.00 :   413895: mov    $0x41d740,%edi
    0.00 :   41389a: call   414300 <generate_input_data>
    0.00 :   41389f: jmp    4138d8 <thinking_time_cb+0x276>
    0.00 :   4138a1: mov    -0x10(%rbp),%rax
    0.00 :   4138a5: mov    0x64(%rax),%ecx
    0.00 :   4138a8: mov    -0x10(%rbp),%rax
    0.00 :   4138ac: mov    0x60(%rax),%edx
    0.00 :   4138af: mov    -0x10(%rbp),%rax
    0.00 :   4138b3: lea    0x98(%rax),%rsi
    0.00 :   4138ba: mov    -0x10(%rbp),%rax
    0.00 :   4138be: mov    0x94(%rax),%eax
    0.00 :   4138c4: mov    %ecx,%r8d
    0.00 :   4138c7: mov    %edx,%ecx
    0.00 :   4138c9: mov    %rsi,%rdx
    0.00 :   4138cc: mov    %eax,%esi
    0.00 :   4138ce: mov    $0x41d740,%edi
    0.00 :   4138d3: call   4143a4 <generate_input_data2>
    0.00 :   4138d8: mov    -0x10(%rbp),%rax
    0.00 :   4138dc: pxor   %xmm0,%xmm0
    0.00 :   4138e0: cvtsi2sdl -0x4(%rbp),%xmm0
    0.00 :   4138e5: movsd  %xmm0,0x20(%rax)
    0.00 :   4138ea: mov    -0x10(%rbp),%rax
    0.00 :   4138ee: pxor   %xmm0,%xmm0
    0.00 :   4138f2: movsd  %xmm0,0x28(%rax)
    0.00 :   4138f7: mov    -0x10(%rbp),%rdx
    0.00 :   4138fb: mov    -0x28(%rbp),%rax
    0.00 :   4138ff: mov    %rdx,%rsi
    0.00 :   413902: mov    %rax,%rdi
    0.00 :   413905: call   407210 <ev_timer_start@plt>
    0.00 :   41390a: nop
    0.00 :   41390b: leave
    0.00 :   41390c: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

   54.05 [nf_tables][19c53]
   45.95 [nf_tables][19c7f]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (2 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000019c40 <nft_lookup_eval>:
         : 6     nft_lookup_eval():
    0.00 :   19c40:  call   19c45 <nft_lookup_eval+0x5>
    0.00 :   19c45:  push   %r14
    0.00 :   19c47:  push   %r13
    0.00 :   19c49:  mov    %rdx,%r13
    0.00 :   19c4c:  push   %r12
    0.00 :   19c4e:  push   %rbp
    0.00 :   19c4f:  mov    %rsi,%rbp
    0.00 :   19c52:  push   %rbx
   54.05 :   19c53:  mov    %rdi,%rbx // [nf_tables][19c53]
    0.00 :   19c56:  sub    $0x8,%rsp
    0.00 :   19c5a:  mov    0x8(%rdx),%rax
    0.00 :   19c5e:  mov    0x8(%rdi),%r14
    0.00 :   19c62:  mov    %rsp,%rcx
    0.00 :   19c65:  movq   $0x0,(%rsp)
    0.00 :   19c6d:  mov    0x20(%rax),%r12
    0.00 :   19c71:  movzbl 0x10(%rdi),%eax
    0.00 :   19c75:  mov    %r12,%rdi
    0.00 :   19c78:  lea    (%rsi,%rax,4),%rdx
    0.00 :   19c7c:  mov    %r14,%rsi
   45.95 :   19c7f:  call   19c84 <nft_lookup_eval+0x44> // [nf_tables][19c7f]
    0.00 :   19c84:  cmp    0x12(%rbx),%al
    0.00 :   19c87:  je     19d5e <nft_lookup_eval+0x11e>
    0.00 :   19c8d:  mov    (%rsp),%r12
    0.00 :   19c91:  test   %r12,%r12
    0.00 :   19c94:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19c96:  testb  $0x8,0xc8(%r14)
    0.00 :   19c9e:  jne    19cff <nft_lookup_eval+0xbf>
    0.00 :   19ca0:  movzbl 0x8(%r12),%eax
    0.00 :   19ca6:  test   %al,%al
    0.00 :   19ca8:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19caa:  add    %rax,%r12
    0.00 :   19cad:  cmpb   $0x0,(%r12)
    0.00 :   19cb2:  lea    0x8(%r12),%rbx
    0.00 :   19cb7:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19cb9:  xor    %r14d,%r14d
    0.00 :   19cbc:  jmp    19cd4 <nft_lookup_eval+0x94>
    0.00 :   19cbe:  mov    (%rbx),%rax
    0.00 :   19cc1:  mov    0x10(%rax),%eax
    0.00 :   19cc4:  add    %eax,%r14d
    0.00 :   19cc7:  add    %rax,%rbx
    0.00 :   19cca:  movzbl (%r12),%eax
    0.00 :   19ccf:  cmp    %eax,%r14d
    0.00 :   19cd2:  jae    19cee <nft_lookup_eval+0xae>
    0.00 :   19cd4:  mov    (%rbx),%rax
    0.00 :   19cd7:  mov    %r13,%rdx
    0.00 :   19cda:  mov    %rbp,%rsi
    0.00 :   19cdd:  mov    %rbx,%rdi
    0.00 :   19ce0:  mov    (%rax),%rax
    0.00 :   19ce3:  call   19ce8 <nft_lookup_eval+0xa8>
    0.00 :   19ce8:  cmpl   $0xfffffffe,0x0(%rbp)
    0.00 :   19cec:  jne    19cbe <nft_lookup_eval+0x7e>
    0.00 :   19cee:  add    $0x8,%rsp
    0.00 :   19cf2:  pop    %rbx
    0.00 :   19cf3:  pop    %rbp
    0.00 :   19cf4:  pop    %r12
    0.00 :   19cf6:  pop    %r13
    0.00 :   19cf8:  pop    %r14
    0.00 :   19cfa:  jmp    19cff <nft_lookup_eval+0xbf>
    0.00 :   19cff:  movzbl 0x3(%r12),%esi
    0.00 :   19d05:  movzbl 0x11(%rbx),%edx
    0.00 :   19d09:  movzbl 0xcb(%r14),%eax
    0.00 :   19d11:  add    %r12,%rsi
    0.00 :   19d14:  lea    0x0(%rbp,%rdx,4),%rdx
    0.00 :   19d19:  test   $0x3,%al
    0.00 :   19d1b:  je     19d2d <nft_lookup_eval+0xed>
    0.00 :   19d1d:  mov    %rax,%rcx
    0.00 :   19d20:  and    $0xfc,%ecx
    0.00 :   19d26:  movl   $0x0,(%rcx,%rdx,1)
    0.00 :   19d2d:  cmp    $0x8,%eax
    0.00 :   19d30:  jae    19d85 <nft_lookup_eval+0x145>
    0.00 :   19d32:  test   $0x4,%al
    0.00 :   19d34:  jne    19dc3 <nft_lookup_eval+0x183>
    0.00 :   19d3a:  test   %eax,%eax
    0.00 :   19d3c:  je     19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d42:  movzbl (%rsi),%ecx
    0.00 :   19d45:  mov    %cl,(%rdx)
    0.00 :   19d47:  test   $0x2,%al
    0.00 :   19d49:  je     19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d4f:  movzwl -0x2(%rsi,%rax,1),%ecx
    0.00 :   19d54:  mov    %cx,-0x2(%rdx,%rax,1)
    0.00 :   19d59:  jmp    19ca0 <nft_lookup_eval+0x60>
    0.00 :   19d5e:  mov    %r12,%rdi
    0.00 :   19d61:  mov    %r14,%rsi
    0.00 :   19d64:  call   19d69 <nft_lookup_eval+0x129>
    0.00 :   19d69:  mov    %rax,(%rsp)
    0.00 :   19d6d:  mov    %rax,%r12
    0.00 :   19d70:  test   %rax,%rax
    0.00 :   19d73:  jne    19c96 <nft_lookup_eval+0x56>
    0.00 :   19d79:  movl   $0xfffffffe,0x0(%rbp)
    0.00 :   19d80:  jmp    19cee <nft_lookup_eval+0xae>
    0.00 :   19d85:  mov    (%rsi),%rcx
    0.00 :   19d88:  lea    0x8(%rdx),%rdi
    0.00 :   19d8c:  and    $0xfffffffffffffff8,%rdi
    0.00 :   19d90:  mov    %rcx,(%rdx)
    0.00 :   19d93:  mov    -0x8(%rsi,%rax,1),%rcx
    0.00 :   19d98:  mov    %rcx,-0x8(%rdx,%rax,1)
    0.00 :   19d9d:  sub    %rdi,%rdx
    0.00 :   19da0:  lea    (%rax,%rdx,1),%ecx
    0.00 :   19da3:  sub    %rdx,%rsi
    0.00 :   19da6:  mov    %ecx,%eax
    0.00 :   19da8:  shr    $0x3,%eax
    0.00 :   19dab:  mov    %eax,%ecx
    0.00 :   19dad:  rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   19db0:  movzbl 0x8(%r12),%eax
    0.00 :   19db6:  test   %al,%al
    0.00 :   19db8:  je     19cee <nft_lookup_eval+0xae>
    0.00 :   19dbe:  jmp    19caa <nft_lookup_eval+0x6a>
    0.00 :   19dc3:  mov    (%rsi),%ecx
    0.00 :   19dc5:  mov    %ecx,(%rdx)
    0.00 :   19dc7:  mov    -0x4(%rsi,%rax,1),%ecx
    0.00 :   19dcb:  mov    %ecx,-0x4(%rdx,%rax,1)
    0.00 :   19dcf:  jmp    19ca0 <nft_lookup_eval+0x60>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[53060]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000053060 <fprintf>:
         : 6     __fprintf():
  100.00 :   53060:  endbr64 // libc.so.6[53060]
    0.00 :   53064:  sub    $0xd8,%rsp
    0.00 :   5306b:  mov    %rdx,0x30(%rsp)
    0.00 :   53070:  mov    %rcx,0x38(%rsp)
    0.00 :   53075:  mov    %r8,0x40(%rsp)
    0.00 :   5307a:  mov    %r9,0x48(%rsp)
    0.00 :   5307f:  test   %al,%al
    0.00 :   53081:  je     530ba <fprintf+0x5a>
    0.00 :   53083:  movaps %xmm0,0x50(%rsp)
    0.00 :   53088:  movaps %xmm1,0x60(%rsp)
    0.00 :   5308d:  movaps %xmm2,0x70(%rsp)
    0.00 :   53092:  movaps %xmm3,0x80(%rsp)
    0.00 :   5309a:  movaps %xmm4,0x90(%rsp)
    0.00 :   530a2:  movaps %xmm5,0xa0(%rsp)
    0.00 :   530aa:  movaps %xmm6,0xb0(%rsp)
    0.00 :   530b2:  movaps %xmm7,0xc0(%rsp)
    0.00 :   530ba:  mov    %fs:0x28,%rax
    0.00 :   530c3:  mov    %rax,0x18(%rsp)
    0.00 :   530c8:  xor    %eax,%eax
    0.00 :   530ca:  lea    0xe0(%rsp),%rax
    0.00 :   530d2:  mov    %rsp,%rdx
    0.00 :   530d5:  xor    %ecx,%ecx
    0.00 :   530d7:  mov    %rax,0x8(%rsp)
    0.00 :   530dc:  lea    0x20(%rsp),%rax
    0.00 :   530e1:  movl   $0x10,(%rsp)
    0.00 :   530e8:  movl   $0x30,0x4(%rsp)
    0.00 :   530f0:  mov    %rax,0x10(%rsp)
    0.00 :   530f5:  call   5d910 <__vfprintf_internal>
    0.00 :   530fa:  mov    0x18(%rsp),%rdx
    0.00 :   530ff:  sub    %fs:0x28,%rdx
    0.00 :   53108:  jne    53112 <fprintf+0xb2>
    0.00 :   5310a:  add    $0xd8,%rsp
    0.00 :   53111:  ret
    0.00 :   53112:  call   11ba20 <__stack_chk_fail>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[22680]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000022680 <PQexec@@Base>:
  100.00 :   22680:  endbr64 // libpq.so.private14-5.14[22680]
    0.00 :   22684:  push   %rbp
    0.00 :   22685:  mov    %rsi,%rbp
    0.00 :   22688:  push   %rbx
    0.00 :   22689:  mov    %rdi,%rbx
    0.00 :   2268c:  sub    $0x8,%rsp
    0.00 :   22690:  call   22500 <PQgetResult@@Base+0x4f0>
    0.00 :   22695:  test   %al,%al
    0.00 :   22697:  je     226c0 <PQexec@@Base+0x40>
    0.00 :   22699:  mov    %rbp,%rsi
    0.00 :   2269c:  mov    %rbx,%rdi
    0.00 :   2269f:  call   c320 <PQsendQuery@plt>
    0.00 :   226a4:  test   %eax,%eax
    0.00 :   226a6:  je     226c0 <PQexec@@Base+0x40>
    0.00 :   226a8:  add    $0x8,%rsp
    0.00 :   226ac:  mov    %rbx,%rdi
    0.00 :   226af:  pop    %rbx
    0.00 :   226b0:  pop    %rbp
    0.00 :   226b1:  jmp    22620 <PQgetResult@@Base+0x610>
    0.00 :   226b6:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   226c0:  add    $0x8,%rsp
    0.00 :   226c4:  xor    %eax,%eax
    0.00 :   226c6:  pop    %rbx
    0.00 :   226c7:  pop    %rbp
    0.00 :   226c8:  ret

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[1f3da]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000001f370 <PQsendQueryParams@@Base>:
    0.00 :   1f370:  endbr64
    0.00 :   1f374:  push   %r15
    0.00 :   1f376:  mov    %r9,%r15
    0.00 :   1f379:  push   %r14
    0.00 :   1f37b:  mov    %r8,%r14
    0.00 :   1f37e:  push   %r13
    0.00 :   1f380:  mov    %rcx,%r13
    0.00 :   1f383:  push   %r12
    0.00 :   1f385:  mov    %edx,%r12d
    0.00 :   1f388:  push   %rbp
    0.00 :   1f389:  mov    %rsi,%rbp
    0.00 :   1f38c:  mov    $0x1,%esi
    0.00 :   1f391:  push   %rbx
    0.00 :   1f392:  mov    %rdi,%rbx
    0.00 :   1f395:  sub    $0x8,%rsp
    0.00 :   1f399:  call   1ab80 <PQparamtype@@Base+0x2a0>
    0.00 :   1f39e:  test   %al,%al
    0.00 :   1f3a0:  je     1f412 <PQsendQueryParams@@Base+0xa2>
    0.00 :   1f3a2:  test   %rbp,%rbp
    0.00 :   1f3a5:  je     1f420 <PQsendQueryParams@@Base+0xb0>
    0.00 :   1f3a7:  cmp    $0xffff,%r12d
    0.00 :   1f3ae:  ja     1f3f0 <PQsendQueryParams@@Base+0x80>
    0.00 :   1f3b0:  sub    $0x8,%rsp
    0.00 :   1f3b4:  mov    %r14,%r9
    0.00 :   1f3b7:  mov    %r13,%r8
    0.00 :   1f3ba:  mov    %r12d,%ecx
    0.00 :   1f3bd:  mov    0x50(%rsp),%eax
    0.00 :   1f3c1:  lea    0x27a11(%rip),%rdx        # 46dd9 <PQencryptPasswordConn@@Base+0x19459>
    0.00 :   1f3c8:  mov    %rbp,%rsi
    0.00 :   1f3cb:  mov    %rbx,%rdi
    0.00 :   1f3ce:  push   %rax
    0.00 :   1f3cf:  push   0x50(%rsp)
    0.00 :   1f3d3:  push   %r15
    0.00 :   1f3d5:  call   1eda0 <PQsendPrepare@@Base+0x310>
  100.00 :   1f3da:  add    $0x20,%rsp // libpq.so.private14-5.14[1f3da]
    0.00 :   1f3de:  add    $0x8,%rsp
    0.00 :   1f3e2:  pop    %rbx
    0.00 :   1f3e3:  pop    %rbp
    0.00 :   1f3e4:  pop    %r12
    0.00 :   1f3e6:  pop    %r13
    0.00 :   1f3e8:  pop    %r14
    0.00 :   1f3ea:  pop    %r15
    0.00 :   1f3ec:  ret
    0.00 :   1f3ed:  nopl   (%rax)
    0.00 :   1f3f0:  lea    0x129e1(%rip),%rdi        # 31dd8 <PQencryptPasswordConn@@Base+0x4458>
    0.00 :   1f3f7:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   1f3fc:  lea    0x418(%rbx),%rdi
    0.00 :   1f403:  mov    $0xffff,%edx
    0.00 :   1f408:  mov    %rax,%rsi
    0.00 :   1f40b:  xor    %eax,%eax
    0.00 :   1f40d:  call   cdd0 <appendPQExpBuffer@plt>
    0.00 :   1f412:  xor    %eax,%eax
    0.00 :   1f414:  jmp    1f3de <PQsendQueryParams@@Base+0x6e>
    0.00 :   1f416:  cs nopw 0x0(%rax,%rax,1)
    0.00 :   1f420:  lea    0x12961(%rip),%rdi        # 31d88 <PQencryptPasswordConn@@Base+0x4408>
    0.00 :   1f427:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   1f42c:  lea    0x418(%rbx),%rdi
    0.00 :   1f433:  mov    %rax,%rsi
    0.00 :   1f436:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   1f43b:  xor    %eax,%eax
    0.00 :   1f43d:  jmp    1f3de <PQsendQueryParams@@Base+0x6e>

Sorted summary for file /usr/local/bin/dbt2-driver3
----------------------------------------------

  100.00 dbt2-driver3[408065]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver3 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000407ff7 <get_nurand>:
         : 6      get_nurand():
    0.00 :   407ff7: push   %rbp
    0.00 :   407ff8: mov    %rsp,%rbp
    0.00 :   407ffb: push   %r12
    0.00 :   407ffd: push   %rbx
    0.00 :   407ffe: sub    $0x20,%rsp
    0.00 :   408002: mov    %rdi,-0x18(%rbp)
    0.00 :   408006: mov    %esi,-0x1c(%rbp)
    0.00 :   408009: mov    %edx,-0x20(%rbp)
    0.00 :   40800c: mov    %ecx,-0x24(%rbp)
    0.00 :   40800f: mov    -0x1c(%rbp),%eax
    0.00 :   408012: add    $0x1,%eax
    0.00 :   408015: movslq %eax,%rdx
    0.00 :   408018: mov    -0x18(%rbp),%rax
    0.00 :   40801c: mov    %rdx,%rsi
    0.00 :   40801f: mov    %rax,%rdi
    0.00 :   408022: call   4080d5 <get_random>
    0.00 :   408027: mov    %rax,%rbx
    0.00 :   40802a: mov    -0x20(%rbp),%eax
    0.00 :   40802d: movslq %eax,%r12
    0.00 :   408030: mov    -0x24(%rbp),%eax
    0.00 :   408033: add    $0x1,%eax
    0.00 :   408036: movslq %eax,%rdx
    0.00 :   408039: mov    -0x18(%rbp),%rax
    0.00 :   40803d: mov    %rdx,%rsi
    0.00 :   408040: mov    %rax,%rdi
    0.00 :   408043: call   4080d5 <get_random>
    0.00 :   408048: add    %r12,%rax
    0.00 :   40804b: or     %rax,%rbx
    0.00 :   40804e: mov    %rbx,%rdx
    0.00 :   408051: mov    -0x24(%rbp),%eax
    0.00 :   408054: sub    -0x20(%rbp),%eax
    0.00 :   408057: add    $0x1,%eax
    0.00 :   40805a: movslq %eax,%rcx
    0.00 :   40805d: mov    %rdx,%rax
    0.00 :   408060: cqto
    0.00 :   408062: idiv   %rcx
  100.00 :   408065: mov    %rdx,%rax // dbt2-driver3[408065]
    0.00 :   408068: mov    %eax,%edx
    0.00 :   40806a: mov    -0x20(%rbp),%eax
    0.00 :   40806d: add    %edx,%eax
    0.00 :   40806f: add    $0x20,%rsp
    0.00 :   408073: pop    %rbx
    0.00 :   408074: pop    %r12
    0.00 :   408076: pop    %rbp
    0.00 :   408077: ret

Sorted summary for file /usr/local/bin/dbt2-driver3
----------------------------------------------

  100.00 dbt2-driver3[40927c]
 Percent |	Source code & Disassembly of /usr/local/bin/dbt2-driver3 for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      000000000040927c <commit_transaction_libpq>:
         : 6      commit_transaction_libpq():
  100.00 :   40927c: push   %rbp // dbt2-driver3[40927c]
    0.00 :   40927d: mov    %rsp,%rbp
    0.00 :   409280: sub    $0x20,%rsp
    0.00 :   409284: mov    %rdi,-0x18(%rbp)
    0.00 :   409288: mov    -0x18(%rbp),%rax
    0.00 :   40928c: mov    0x78(%rax),%rax
    0.00 :   409290: mov    $0x415bb0,%esi
    0.00 :   409295: mov    %rax,%rdi
    0.00 :   409298: call   407130 <PQexec@plt>
    0.00 :   40929d: mov    %rax,-0x8(%rbp)
    0.00 :   4092a1: cmpq   $0x0,-0x8(%rbp)
    0.00 :   4092a6: je     4092b9 <commit_transaction_libpq+0x3d>
    0.00 :   4092a8: mov    -0x8(%rbp),%rax
    0.00 :   4092ac: mov    %rax,%rdi
    0.00 :   4092af: call   407030 <PQresultStatus@plt>
    0.00 :   4092b4: cmp    $0x1,%eax
    0.00 :   4092b7: je     4092e5 <commit_transaction_libpq+0x69>
    0.00 :   4092b9: mov    -0x18(%rbp),%rax
    0.00 :   4092bd: mov    0x78(%rax),%rax
    0.00 :   4092c1: mov    %rax,%rdi
    0.00 :   4092c4: call   4071d0 <PQerrorMessage@plt>
    0.00 :   4092c9: mov    %rax,%rcx
    0.00 :   4092cc: mov    $0x415bb7,%edx
    0.00 :   4092d1: mov    $0x1b,%esi
    0.00 :   4092d6: mov    $0x415bc0,%edi
    0.00 :   4092db: mov    $0x0,%eax
    0.00 :   4092e0: call   4083bf <log_error_message>
    0.00 :   4092e5: mov    -0x8(%rbp),%rax
    0.00 :   4092e9: mov    %rax,%rdi
    0.00 :   4092ec: call   407070 <PQclear@plt>
    0.00 :   4092f1: mov    $0x1,%eax
    0.00 :   4092f6: leave
    0.00 :   4092f7: ret

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[23b46]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000023b40 <PQexecParams@@Base>:
    0.00 :   23b40:  endbr64
    0.00 :   23b44:  push   %r15
  100.00 :   23b46:  push   %r14 // libpq.so.private14-5.14[23b46]
    0.00 :   23b48:  push   %r13
    0.00 :   23b4a:  mov    %r9,%r13
    0.00 :   23b4d:  push   %r12
    0.00 :   23b4f:  mov    %r8,%r12
    0.00 :   23b52:  push   %rbp
    0.00 :   23b53:  mov    %rcx,%rbp
    0.00 :   23b56:  push   %rbx
    0.00 :   23b57:  mov    %rdi,%rbx
    0.00 :   23b5a:  sub    $0x18,%rsp
    0.00 :   23b5e:  mov    0x50(%rsp),%r14
    0.00 :   23b63:  mov    0x58(%rsp),%r15d
    0.00 :   23b68:  mov    %rsi,(%rsp)
    0.00 :   23b6c:  mov    %edx,0xc(%rsp)
    0.00 :   23b70:  call   22500 <PQgetResult@@Base+0x4f0>
    0.00 :   23b75:  test   %al,%al
    0.00 :   23b77:  je     23bb8 <PQexecParams@@Base+0x78>
    0.00 :   23b79:  push   %r15
    0.00 :   23b7b:  mov    %rbp,%rcx
    0.00 :   23b7e:  mov    %r13,%r9
    0.00 :   23b81:  mov    %r12,%r8
    0.00 :   23b84:  push   %r14
    0.00 :   23b86:  mov    0x1c(%rsp),%edx
    0.00 :   23b8a:  mov    %rbx,%rdi
    0.00 :   23b8d:  mov    0x10(%rsp),%rsi
    0.00 :   23b92:  call   cea0 <PQsendQueryParams@plt>
    0.00 :   23b97:  pop    %rdx
    0.00 :   23b98:  pop    %rcx
    0.00 :   23b99:  test   %eax,%eax
    0.00 :   23b9b:  je     23bb8 <PQexecParams@@Base+0x78>
    0.00 :   23b9d:  add    $0x18,%rsp
    0.00 :   23ba1:  mov    %rbx,%rdi
    0.00 :   23ba4:  pop    %rbx
    0.00 :   23ba5:  pop    %rbp
    0.00 :   23ba6:  pop    %r12
    0.00 :   23ba8:  pop    %r13
    0.00 :   23baa:  pop    %r14
    0.00 :   23bac:  pop    %r15
    0.00 :   23bae:  jmp    22620 <PQgetResult@@Base+0x610>
    0.00 :   23bb3:  nopl   0x0(%rax,%rax,1)
    0.00 :   23bb8:  add    $0x18,%rsp
    0.00 :   23bbc:  xor    %eax,%eax
    0.00 :   23bbe:  pop    %rbx
    0.00 :   23bbf:  pop    %rbp
    0.00 :   23bc0:  pop    %r12
    0.00 :   23bc2:  pop    %r13
    0.00 :   23bc4:  pop    %r14
    0.00 :   23bc6:  pop    %r15
    0.00 :   23bc8:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz
----------------------------------------------

  100.00 [virtio_net][1af6]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/drivers/net/virtio_net.ko.xz for cycles (1 samples, percent: local period)
------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000001ad0 <skb_recv_done>:
         : 6    skb_recv_done():
    0.00 :   1ad0:   call   1ad5 <skb_recv_done+0x5>
    0.00 :   1ad5:   push   %rbp
    0.00 :   1ad6:   mov    %rdi,%rbp
    0.00 :   1ad9:   push   %rbx
    0.00 :   1ada:   mov    0x20(%rdi),%rax
    0.00 :   1ade:   mov    0x330(%rax),%rdx
    0.00 :   1ae5:   mov    0x28(%rdi),%eax
    0.00 :   1ae8:   shr    %eax
    0.00 :   1aea:   lea    (%rax,%rax,4),%rbx
    0.00 :   1aee:   shl    $0x8,%rbx
    0.00 :   1af2:   add    0x20(%rdx),%rbx
  100.00 :   1af6:   add    $0x8,%rbx // [virtio_net][1af6]
    0.00 :   1afa:   mov    %rbx,%rdi
    0.00 :   1afd:   call   1b02 <skb_recv_done+0x32>
    0.00 :   1b02:   test   %al,%al
    0.00 :   1b04:   jne    1b0d <skb_recv_done+0x3d>
    0.00 :   1b06:   pop    %rbx
    0.00 :   1b07:   pop    %rbp
    0.00 :   1b08:   jmp    1b0d <skb_recv_done+0x3d>
    0.00 :   1b0d:   mov    %rbp,%rdi
    0.00 :   1b10:   call   1b15 <skb_recv_done+0x45>
    0.00 :   1b15:   mov    %rbx,%rdi
    0.00 :   1b18:   pop    %rbx
    0.00 :   1b19:   pop    %rbp
    0.00 :   1b1a:   jmp    1b1f <skb_recv_done+0x4f>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[9ad50]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000009ad50 <__libc_malloc>:
         : 6     __GI___libc_malloc():
  100.00 :   9ad50:  endbr64 // libc.so.6[9ad50]
    0.00 :   9ad54:  push   %r12
    0.00 :   9ad56:  push   %rbp
    0.00 :   9ad57:  push   %rbx
    0.00 :   9ad58:  mov    %rdi,%rbx
    0.00 :   9ad5b:  sub    $0x10,%rsp
    0.00 :   9ad5f:  cmpb   $0x0,0x13f742(%rip)        # 1da4a8 <__malloc_initialized>
    0.00 :   9ad66:  je     9af68 <__libc_malloc+0x218>
    0.00 :   9ad6c:  test   %rbx,%rbx
    0.00 :   9ad6f:  js     9af76 <__libc_malloc+0x226>
    0.00 :   9ad75:  lea    0x17(%rbx),%rax
    0.00 :   9ad79:  xor    %ebp,%ebp
    0.00 :   9ad7b:  cmp    $0x1f,%rax
    0.00 :   9ad7f:  jbe    9ad8d <__libc_malloc+0x3d>
    0.00 :   9ad81:  and    $0xfffffffffffffff0,%rax
    0.00 :   9ad85:  lea    -0x11(%rax),%rbp
    0.00 :   9ad89:  shr    $0x4,%rbp
    0.00 :   9ad8d:  mov    0x138014(%rip),%r12        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9ad94:  mov    %fs:(%r12),%rdx
    0.00 :   9ad99:  test   %rdx,%rdx
    0.00 :   9ad9c:  je     9ae60 <__libc_malloc+0x110>
    0.00 :   9ada2:  cmp    0x13861f(%rip),%rbp        # 1d33c8 <mp_+0x68>
    0.00 :   9ada9:  jb     9ae98 <__libc_malloc+0x148>
    0.00 :   9adaf:  cmpb   $0x0,0x140842(%rip)        # 1db5f8 <__libc_single_threaded>
    0.00 :   9adb6:  jne    9aee0 <__libc_malloc+0x190>
    0.00 :   9adbc:  mov    0x137fdd(%rip),%rax        # 1d2da0 <_DYNAMIC+0x220>
    0.00 :   9adc3:  mov    %fs:(%rax),%rbp
    0.00 :   9adc7:  test   %rbp,%rbp
    0.00 :   9adca:  je     9af90 <__libc_malloc+0x240>
    0.00 :   9add0:  xor    %eax,%eax
    0.00 :   9add2:  mov    $0x1,%edx
    0.00 :   9add7:  lock cmpxchg %edx,0x0(%rbp)
    0.00 :   9addc:  jne    9b020 <__libc_malloc+0x2d0>
    0.00 :   9ade2:  mov    %rbx,%rsi
    0.00 :   9ade5:  mov    %rbp,%rdi
    0.00 :   9ade8:  call   99760 <_int_malloc>
    0.00 :   9aded:  test   %rax,%rax
    0.00 :   9adf0:  je     9afd0 <__libc_malloc+0x280>
    0.00 :   9adf6:  xor    %edx,%edx
    0.00 :   9adf8:  xchg   %edx,0x0(%rbp)
    0.00 :   9adfb:  cmp    $0x1,%edx
    0.00 :   9adfe:  jg     9b030 <__libc_malloc+0x2e0>
    0.00 :   9ae04:  test   %rax,%rax
    0.00 :   9ae07:  je     9af84 <__libc_malloc+0x234>
    0.00 :   9ae0d:  mov    -0x8(%rax),%rdx
    0.00 :   9ae11:  test   $0x2,%dl
    0.00 :   9ae14:  jne    9ae55 <__libc_malloc+0x105>
    0.00 :   9ae16:  and    $0x4,%edx
    0.00 :   9ae19:  lea    0x138e60(%rip),%rcx        # 1d3c80 <main_arena>
    0.00 :   9ae20:  je     9ae4c <__libc_malloc+0xfc>
    0.00 :   9ae22:  mov    0x138567(%rip),%rcx        # 1d3390 <mp_+0x30>
    0.00 :   9ae29:  lea    0x0(,%rcx,4),%rdx
    0.00 :   9ae31:  neg    %rdx
    0.00 :   9ae34:  test   %rcx,%rcx
    0.00 :   9ae37:  mov    $0xfffffffffc000000,%rcx
    0.00 :   9ae3e:  cmove  %rcx,%rdx
    0.00 :   9ae42:  lea    -0x10(%rax),%rcx
    0.00 :   9ae46:  and    %rcx,%rdx
    0.00 :   9ae49:  mov    (%rdx),%rcx
    0.00 :   9ae4c:  cmp    %rbp,%rcx
    0.00 :   9ae4f:  jne    9aff8 <__libc_malloc+0x2a8>
    0.00 :   9ae55:  add    $0x10,%rsp
    0.00 :   9ae59:  pop    %rbx
    0.00 :   9ae5a:  pop    %rbp
    0.00 :   9ae5b:  pop    %r12
    0.00 :   9ae5d:  ret
    0.00 :   9ae5e:  xchg   %ax,%ax
    0.00 :   9ae60:  mov    0x137f49(%rip),%rax        # 1d2db0 <_DYNAMIC+0x230>
    0.00 :   9ae67:  cmpb   $0x0,%fs:(%rax)
    0.00 :   9ae6b:  jne    9adaf <__libc_malloc+0x5f>
    0.00 :   9ae71:  call   9a650 <tcache_init.part.0>
    0.00 :   9ae76:  cmp    0x13854b(%rip),%rbp        # 1d33c8 <mp_+0x68>
    0.00 :   9ae7d:  jae    9adaf <__libc_malloc+0x5f>
    0.00 :   9ae83:  mov    %fs:(%r12),%rdx
    0.00 :   9ae88:  test   %rdx,%rdx
    0.00 :   9ae8b:  je     9adaf <__libc_malloc+0x5f>
    0.00 :   9ae91:  nopl   0x0(%rax)
    0.00 :   9ae98:  movzwl (%rdx,%rbp,2),%ecx
    0.00 :   9ae9c:  test   %cx,%cx
    0.00 :   9ae9f:  je     9adaf <__libc_malloc+0x5f>
    0.00 :   9aea5:  lea    0x10(%rbp),%rdi
    0.00 :   9aea9:  mov    (%rdx,%rdi,8),%rax
    0.00 :   9aead:  test   $0xf,%al
    0.00 :   9aeaf:  jne    9b050 <__libc_malloc+0x300>
    0.00 :   9aeb5:  mov    %rax,%rsi
    0.00 :   9aeb8:  sub    $0x1,%ecx
    0.00 :   9aebb:  shr    $0xc,%rsi
    0.00 :   9aebf:  xor    (%rax),%rsi
    0.00 :   9aec2:  mov    %rsi,(%rdx,%rdi,8)
    0.00 :   9aec6:  mov    %cx,(%rdx,%rbp,2)
    0.00 :   9aeca:  movq   $0x0,0x8(%rax)
    0.00 :   9aed2:  add    $0x10,%rsp
    0.00 :   9aed6:  pop    %rbx
    0.00 :   9aed7:  pop    %rbp
    0.00 :   9aed8:  pop    %r12
    0.00 :   9aeda:  ret
    0.00 :   9aedb:  nopl   0x0(%rax,%rax,1)
    0.00 :   9aee0:  mov    %rbx,%rsi
    0.00 :   9aee3:  lea    0x138d96(%rip),%rbx        # 1d3c80 <main_arena>
    0.00 :   9aeea:  mov    %rbx,%rdi
    0.00 :   9aeed:  call   99760 <_int_malloc>
    0.00 :   9aef2:  test   %rax,%rax
    0.00 :   9aef5:  je     9af84 <__libc_malloc+0x234>
    0.00 :   9aefb:  mov    -0x8(%rax),%rdx
    0.00 :   9aeff:  test   $0x2,%dl
    0.00 :   9af02:  jne    9ae55 <__libc_malloc+0x105>
    0.00 :   9af08:  and    $0x4,%edx
    0.00 :   9af0b:  je     9ae55 <__libc_malloc+0x105>
    0.00 :   9af11:  mov    0x138478(%rip),%rcx        # 1d3390 <mp_+0x30>
    0.00 :   9af18:  lea    0x0(,%rcx,4),%rdx
    0.00 :   9af20:  neg    %rdx
    0.00 :   9af23:  test   %rcx,%rcx
    0.00 :   9af26:  mov    $0xfffffffffc000000,%rcx
    0.00 :   9af2d:  cmove  %rcx,%rdx
    0.00 :   9af31:  lea    -0x10(%rax),%rcx
    0.00 :   9af35:  and    %rcx,%rdx
    0.00 :   9af38:  cmp    %rbx,(%rdx)
    0.00 :   9af3b:  je     9ae55 <__libc_malloc+0x105>
    0.00 :   9af41:  lea    0x102800(%rip),%rcx        # 19d748 <aliasfile.0+0x1d00>
    0.00 :   9af48:  lea    0x102be1(%rip),%rdx        # 19db30 <aliasfile.0+0x20e8>
    0.00 :   9af4f:  mov    $0x1,%edi
    0.00 :   9af54:  xor    %eax,%eax
    0.00 :   9af56:  lea    0x101b73(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9af5d:  call   80df0 <__libc_message>
    0.00 :   9af62:  nopw   0x0(%rax,%rax,1)
    0.00 :   9af68:  call   97830 <ptmalloc_init.part.0>
    0.00 :   9af6d:  test   %rbx,%rbx
    0.00 :   9af70:  jns    9ad75 <__libc_malloc+0x25>
    0.00 :   9af76:  mov    0x137e93(%rip),%rax        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   9af7d:  movl   $0xc,%fs:(%rax)
    0.00 :   9af84:  add    $0x10,%rsp
    0.00 :   9af88:  xor    %eax,%eax
    0.00 :   9af8a:  pop    %rbx
    0.00 :   9af8b:  pop    %rbp
    0.00 :   9af8c:  pop    %r12
    0.00 :   9af8e:  ret
    0.00 :   9af8f:  nop
    0.00 :   9af90:  call   96ed0 <get_free_list>
    0.00 :   9af95:  mov    %rax,%rbp
    0.00 :   9af98:  test   %rax,%rax
    0.00 :   9af9b:  jne    9ade2 <__libc_malloc+0x92>
    0.00 :   9afa1:  xor    %esi,%esi
    0.00 :   9afa3:  mov    %rbx,%rdi
    0.00 :   9afa6:  call   97cd0 <arena_get2.part.0>
    0.00 :   9afab:  mov    %rbx,%rsi
    0.00 :   9afae:  mov    %rax,%rdi
    0.00 :   9afb1:  mov    %rax,%rbp
    0.00 :   9afb4:  call   99760 <_int_malloc>
    0.00 :   9afb9:  test   %rax,%rax
    0.00 :   9afbc:  jne    9afea <__libc_malloc+0x29a>
    0.00 :   9afbe:  test   %rbp,%rbp
    0.00 :   9afc1:  je     9ae04 <__libc_malloc+0xb4>
    0.00 :   9afc7:  nopw   0x0(%rax,%rax,1)
    0.00 :   9afd0:  nop
    0.00 :   9afd1:  mov    %rbp,%rdi
    0.00 :   9afd4:  mov    %rbx,%rsi
    0.00 :   9afd7:  call   98140 <arena_get_retry>
    0.00 :   9afdc:  mov    %rbx,%rsi
    0.00 :   9afdf:  mov    %rax,%rdi
    0.00 :   9afe2:  mov    %rax,%rbp
    0.00 :   9afe5:  call   99760 <_int_malloc>
    0.00 :   9afea:  test   %rbp,%rbp
    0.00 :   9afed:  je     9ae04 <__libc_malloc+0xb4>
    0.00 :   9aff3:  jmp    9adf6 <__libc_malloc+0xa6>
    0.00 :   9aff8:  lea    0x1027b1(%rip),%rcx        # 19d7b0 <aliasfile.0+0x1d68>
    0.00 :   9afff:  lea    0x102b2a(%rip),%rdx        # 19db30 <aliasfile.0+0x20e8>
    0.00 :   9b006:  mov    $0x1,%edi
    0.00 :   9b00b:  xor    %eax,%eax
    0.00 :   9b00d:  lea    0x101abc(%rip),%rsi        # 19cad0 <aliasfile.0+0x1088>
    0.00 :   9b014:  call   80df0 <__libc_message>
    0.00 :   9b019:  nopl   0x0(%rax)
    0.00 :   9b020:  mov    %rbp,%rdi
    0.00 :   9b023:  call   87ec0 <__lll_lock_wait_private>
    0.00 :   9b028:  jmp    9ade2 <__libc_malloc+0x92>
    0.00 :   9b02d:  nopl   (%rax)
    0.00 :   9b030:  mov    %rbp,%rdi
    0.00 :   9b033:  mov    %rax,0x8(%rsp)
    0.00 :   9b038:  call   87f80 <__lll_lock_wake_private>
    0.00 :   9b03d:  mov    0x8(%rsp),%rax
    0.00 :   9b042:  jmp    9ae04 <__libc_malloc+0xb4>
    0.00 :   9b047:  nopw   0x0(%rax,%rax,1)
    0.00 :   9b050:  lea    0x1025c1(%rip),%rdi        # 19d618 <aliasfile.0+0x1bd0>
    0.00 :   9b057:  call   96b80 <malloc_printerr>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz
----------------------------------------------

  100.00 [nf_tables][167d9]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_tables.ko.xz for cycles (1 samples, percent: local period)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000167d0 <nft_immediate_eval>:
         : 6     nft_immediate_eval():
    0.00 :   167d0:  call   167d5 <nft_immediate_eval+0x5>
    0.00 :   167d5:  movzbl 0x18(%rdi),%edx
  100.00 :   167d9:  movzbl 0x19(%rdi),%ecx // [nf_tables][167d9]
    0.00 :   167dd:  mov    %rsi,%rax
    0.00 :   167e0:  lea    0x8(%rdi),%rsi
    0.00 :   167e4:  lea    (%rax,%rdx,4),%rax
    0.00 :   167e8:  test   $0x3,%cl
    0.00 :   167eb:  je     167fd <nft_immediate_eval+0x2d>
    0.00 :   167ed:  mov    %rcx,%rdx
    0.00 :   167f0:  and    $0xfc,%edx
    0.00 :   167f6:  movl   $0x0,(%rdx,%rax,1)
    0.00 :   167fd:  cmp    $0x8,%ecx
    0.00 :   16800:  jae    1681b <nft_immediate_eval+0x4b>
    0.00 :   16802:  test   $0x4,%cl
    0.00 :   16805:  jne    16847 <nft_immediate_eval+0x77>
    0.00 :   16807:  test   %ecx,%ecx
    0.00 :   16809:  je     16816 <nft_immediate_eval+0x46>
    0.00 :   1680b:  movzbl 0x8(%rdi),%edx
    0.00 :   1680f:  mov    %dl,(%rax)
    0.00 :   16811:  test   $0x2,%cl
    0.00 :   16814:  jne    16859 <nft_immediate_eval+0x89>
    0.00 :   16816:  jmp    1681b <nft_immediate_eval+0x4b>
    0.00 :   1681b:  mov    0x8(%rdi),%rdx
    0.00 :   1681f:  lea    0x8(%rax),%rdi
    0.00 :   16823:  and    $0xfffffffffffffff8,%rdi
    0.00 :   16827:  mov    %rdx,(%rax)
    0.00 :   1682a:  mov    -0x8(%rsi,%rcx,1),%rdx
    0.00 :   1682f:  mov    %rdx,-0x8(%rax,%rcx,1)
    0.00 :   16834:  sub    %rdi,%rax
    0.00 :   16837:  add    %eax,%ecx
    0.00 :   16839:  sub    %rax,%rsi
    0.00 :   1683c:  shr    $0x3,%ecx
    0.00 :   1683f:  rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :   16842:  jmp    16847 <nft_immediate_eval+0x77>
    0.00 :   16847:  mov    0x8(%rdi),%edx
    0.00 :   1684a:  mov    %edx,(%rax)
    0.00 :   1684c:  mov    -0x4(%rsi,%rcx,1),%edx
    0.00 :   16850:  mov    %edx,-0x4(%rax,%rcx,1)
    0.00 :   16854:  jmp    16859 <nft_immediate_eval+0x89>
    0.00 :   16859:  movzwl -0x2(%rsi,%rcx,1),%edx
    0.00 :   1685e:  mov    %dx,-0x2(%rax,%rcx,1)
    0.00 :   16863:  jmp    16868 <nft_immediate_eval+0x98>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[4f435]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000004f3d0 <__mpn_extract_double>:
         : 6     __mpn_extract_double():
    0.00 :   4f3d0:  endbr64
    0.00 :   4f3d4:  movq   %xmm0,%rax
    0.00 :   4f3d9:  mov    %rdi,%rsi
    0.00 :   4f3dc:  mov    %rdx,%rdi
    0.00 :   4f3df:  mov    %rax,%rdx
    0.00 :   4f3e2:  shr    $0x3f,%rdx
    0.00 :   4f3e6:  mov    %edx,(%rcx)
    0.00 :   4f3e8:  mov    %rax,%rdx
    0.00 :   4f3eb:  shr    $0x34,%rdx
    0.00 :   4f3ef:  and    $0x7ff,%edx
    0.00 :   4f3f5:  sub    $0x3ff,%edx
    0.00 :   4f3fb:  mov    %edx,(%rdi)
    0.00 :   4f3fd:  movabs $0xfffffffffffff,%rdx
    0.00 :   4f407:  and    %rax,%rdx
    0.00 :   4f40a:  shr    $0x30,%rax
    0.00 :   4f40e:  mov    %rdx,(%rsi)
    0.00 :   4f411:  test   $0x7ff0,%eax
    0.00 :   4f416:  jne    4f430 <__mpn_extract_double+0x60>
    0.00 :   4f418:  test   %rdx,%rdx
    0.00 :   4f41b:  jne    4f440 <__mpn_extract_double+0x70>
    0.00 :   4f41d:  movl   $0x0,(%rdi)
    0.00 :   4f423:  mov    $0x1,%eax
    0.00 :   4f428:  ret
    0.00 :   4f429:  nopl   0x0(%rax)
    0.00 :   4f430:  bts    $0x34,%rdx
  100.00 :   4f435:  mov    $0x1,%eax // libc.so.6[4f435]
    0.00 :   4f43a:  mov    %rdx,(%rsi)
    0.00 :   4f43d:  ret
    0.00 :   4f43e:  xchg   %ax,%ax
    0.00 :   4f440:  bsr    %rdx,%rcx
    0.00 :   4f444:  mov    $0xfffffc02,%eax
    0.00 :   4f449:  xor    $0x3f,%rcx
    0.00 :   4f44d:  sub    $0xb,%ecx
    0.00 :   4f450:  sub    %ecx,%eax
    0.00 :   4f452:  shl    %cl,%rdx
    0.00 :   4f455:  mov    %rdx,(%rsi)
    0.00 :   4f458:  mov    %eax,(%rdi)
    0.00 :   4f45a:  mov    $0x1,%eax
    0.00 :   4f45f:  ret

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[9b312]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     000000000009b2f0 <__libc_free>:
         : 6     __free():
    0.00 :   9b2f0:  endbr64
    0.00 :   9b2f4:  test   %rdi,%rdi
    0.00 :   9b2f7:  je     9b3b8 <__libc_free+0xc8>
    0.00 :   9b2fd:  push   %rbp
    0.00 :   9b2fe:  lea    -0x10(%rdi),%rsi
    0.00 :   9b302:  push   %rbx
    0.00 :   9b303:  sub    $0x18,%rsp
    0.00 :   9b307:  mov    0x137b02(%rip),%rbx        # 1d2e10 <_DYNAMIC+0x290>
    0.00 :   9b30e:  mov    -0x8(%rdi),%rax
  100.00 :   9b312:  mov    %fs:(%rbx),%ebp // libc.so.6[9b312]
    0.00 :   9b315:  test   $0x2,%al
    0.00 :   9b317:  jne    9b370 <__libc_free+0x80>
    0.00 :   9b319:  mov    0x137a88(%rip),%rdx        # 1d2da8 <_DYNAMIC+0x228>
    0.00 :   9b320:  cmpq   $0x0,%fs:(%rdx)
    0.00 :   9b325:  je     9b3c0 <__libc_free+0xd0>
    0.00 :   9b32b:  lea    0x13894e(%rip),%rdi        # 1d3c80 <main_arena>
    0.00 :   9b332:  test   $0x4,%al
    0.00 :   9b334:  je     9b35c <__libc_free+0x6c>
    0.00 :   9b336:  mov    0x138053(%rip),%rdx        # 1d3390 <mp_+0x30>
    0.00 :   9b33d:  lea    0x0(,%rdx,4),%rax
    0.00 :   9b345:  neg    %rax
    0.00 :   9b348:  test   %rdx,%rdx
    0.00 :   9b34b:  mov    $0xfffffffffc000000,%rdx
    0.00 :   9b352:  cmove  %rdx,%rax
    0.00 :   9b356:  and    %rsi,%rax
    0.00 :   9b359:  mov    (%rax),%rdi
    0.00 :   9b35c:  xor    %edx,%edx
    0.00 :   9b35e:  call   98500 <_int_free>
    0.00 :   9b363:  mov    %ebp,%fs:(%rbx)
    0.00 :   9b366:  add    $0x18,%rsp
    0.00 :   9b36a:  pop    %rbx
    0.00 :   9b36b:  pop    %rbp
    0.00 :   9b36c:  ret
    0.00 :   9b36d:  nopl   (%rax)
    0.00 :   9b370:  mov    0x138032(%rip),%edx        # 1d33a8 <mp_+0x48>
    0.00 :   9b376:  test   %edx,%edx
    0.00 :   9b378:  jne    9b3a2 <__libc_free+0xb2>
    0.00 :   9b37a:  cmp    %rax,0x137fef(%rip)        # 1d3370 <mp_+0x10>
    0.00 :   9b381:  jae    9b3a2 <__libc_free+0xb2>
    0.00 :   9b383:  cmp    $0x2000000,%rax
    0.00 :   9b389:  ja     9b3a2 <__libc_free+0xb2>
    0.00 :   9b38b:  and    $0xfffffffffffffff8,%rax
    0.00 :   9b38f:  lea    (%rax,%rax,1),%rdx
    0.00 :   9b393:  mov    %rax,0x137fd6(%rip)        # 1d3370 <mp_+0x10>
    0.00 :   9b39a:  mov    %rdx,0x137fbf(%rip)        # 1d3360 <mp_>
    0.00 :   9b3a1:  nop
    0.00 :   9b3a2:  mov    %rsi,%rdi
    0.00 :   9b3a5:  call   96da0 <munmap_chunk>
    0.00 :   9b3aa:  mov    %ebp,%fs:(%rbx)
    0.00 :   9b3ad:  add    $0x18,%rsp
    0.00 :   9b3b1:  pop    %rbx
    0.00 :   9b3b2:  pop    %rbp
    0.00 :   9b3b3:  ret
    0.00 :   9b3b4:  nopl   0x0(%rax)
    0.00 :   9b3b8:  ret
    0.00 :   9b3b9:  nopl   0x0(%rax)
    0.00 :   9b3c0:  mov    0x1379e9(%rip),%rdx        # 1d2db0 <_DYNAMIC+0x230>
    0.00 :   9b3c7:  mov    %rdi,(%rsp)
    0.00 :   9b3cb:  cmpb   $0x0,%fs:(%rdx)
    0.00 :   9b3cf:  jne    9b32b <__libc_free+0x3b>
    0.00 :   9b3d5:  mov    %rsi,0x8(%rsp)
    0.00 :   9b3da:  call   9a650 <tcache_init.part.0>
    0.00 :   9b3df:  mov    (%rsp),%rdi
    0.00 :   9b3e3:  mov    0x8(%rsp),%rsi
    0.00 :   9b3e8:  mov    -0x8(%rdi),%rax
    0.00 :   9b3ec:  jmp    9b32b <__libc_free+0x3b>

Sorted summary for file /usr/lib64/libpq.so.private14-5.14
----------------------------------------------

  100.00 libpq.so.private14-5.14[2209d]
 Percent |	Source code & Disassembly of /usr/lib64/libpq.so.private14-5.14 for cycles (1 samples, percent: local period)
-----------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     0000000000022010 <PQgetResult@@Base>:
    0.00 :   22010:  endbr64
    0.00 :   22014:  push   %r14
    0.00 :   22016:  push   %r13
    0.00 :   22018:  push   %r12
    0.00 :   2201a:  push   %rbp
    0.00 :   2201b:  push   %rbx
    0.00 :   2201c:  sub    $0x20,%rsp
    0.00 :   22020:  mov    %fs:0x28,%rax
    0.00 :   22029:  mov    %rax,0x18(%rsp)
    0.00 :   2202e:  xor    %eax,%eax
    0.00 :   22030:  test   %rdi,%rdi
    0.00 :   22033:  je     221fe <PQgetResult@@Base+0x1ee>
    0.00 :   22039:  mov    %rdi,%rbx
    0.00 :   2203c:  call   20b70 <PQgetline@@Base+0x140>
    0.00 :   22041:  mov    0x15c(%rbx),%ebp
    0.00 :   22047:  cmp    $0x1,%ebp
    0.00 :   2204a:  jne    220b2 <PQgetResult@@Base+0xa2>
    0.00 :   2204c:  nopl   0x0(%rax)
    0.00 :   22050:  mov    0x35c(%rbx),%esi
    0.00 :   22056:  test   %esi,%esi
    0.00 :   22058:  jg     220d0 <PQgetResult@@Base+0xc0>
    0.00 :   2205a:  xor    %edx,%edx
    0.00 :   2205c:  mov    $0xffffffffffffffff,%rcx
    0.00 :   22063:  mov    $0x1,%esi
    0.00 :   22068:  mov    %rbx,%rdi
    0.00 :   2206b:  call   1bc10 <PQescapeBytea@@Base+0x470>
    0.00 :   22070:  test   %eax,%eax
    0.00 :   22072:  js     22132 <PQgetResult@@Base+0x122>
    0.00 :   22078:  je     22117 <PQgetResult@@Base+0x107>
    0.00 :   2207e:  mov    %rbx,%rdi
    0.00 :   22081:  call   1d860 <PQresultVerboseErrorMessage@@Base+0xa60>
    0.00 :   22086:  test   %eax,%eax
    0.00 :   22088:  js     22132 <PQgetResult@@Base+0x122>
    0.00 :   2208e:  mov    %rbx,%rdi
    0.00 :   22091:  call   20b70 <PQgetline@@Base+0x140>
    0.00 :   22096:  cmpb   $0x0,0x2dc(%rbx)
  100.00 :   2209d:  mov    0x15c(%rbx),%ebp // libpq.so.private14-5.14[2209d]
    0.00 :   220a3:  je     221d0 <PQgetResult@@Base+0x1c0>
    0.00 :   220a9:  cmp    $0x1,%ebp
    0.00 :   220ac:  je     22217 <PQgetResult@@Base+0x207>
    0.00 :   220b2:  cmp    $0x6,%ebp
    0.00 :   220b5:  ja     223d0 <PQgetResult@@Base+0x3c0>
    0.00 :   220bb:  lea    0x105be(%rip),%rcx        # 32680 <PQencryptPasswordConn@@Base+0x4d00>
    0.00 :   220c2:  mov    %ebp,%eax
    0.00 :   220c4:  movslq (%rcx,%rax,4),%rax
    0.00 :   220c8:  add    %rcx,%rax
    0.00 :   220cb:  notrack jmp *%rax
    0.00 :   220ce:  xchg   %ax,%ax
    0.00 :   220d0:  mov    0x118(%rbx),%rdi
    0.00 :   220d7:  test   %rdi,%rdi
    0.00 :   220da:  je     220e7 <PQgetResult@@Base+0xd7>
    0.00 :   220dc:  call   cb00 <fflush@plt>
    0.00 :   220e1:  mov    0x35c(%rbx),%esi
    0.00 :   220e7:  mov    %rbx,%rdi
    0.00 :   220ea:  call   1dad0 <PQresultVerboseErrorMessage@@Base+0xcd0>
    0.00 :   220ef:  test   %eax,%eax
    0.00 :   220f1:  jle    224ea <PQgetResult@@Base+0x4da>
    0.00 :   220f7:  xor    %esi,%esi
    0.00 :   220f9:  mov    $0xffffffffffffffff,%rcx
    0.00 :   22100:  mov    $0x1,%edx
    0.00 :   22105:  mov    %rbx,%rdi
    0.00 :   22108:  call   1bc10 <PQescapeBytea@@Base+0x470>
    0.00 :   2210d:  test   %eax,%eax
    0.00 :   2210f:  js     22132 <PQgetResult@@Base+0x122>
    0.00 :   22111:  jne    22050 <PQgetResult@@Base+0x40>
    0.00 :   22117:  lea    0xd40f(%rip),%rdi        # 2f52d <PQencryptPasswordConn@@Base+0x1bad>
    0.00 :   2211e:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   22123:  lea    0x418(%rbx),%rdi
    0.00 :   2212a:  mov    %rax,%rsi
    0.00 :   2212d:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   22132:  mov    0x378(%rbx),%rdi
    0.00 :   22139:  test   %rdi,%rdi
    0.00 :   2213c:  je     22143 <PQgetResult@@Base+0x133>
    0.00 :   2213e:  call   c1a0 <PQclear@plt>
    0.00 :   22143:  mov    0x380(%rbx),%rdi
    0.00 :   2214a:  movq   $0x0,0x378(%rbx)
    0.00 :   22155:  test   %rdi,%rdi
    0.00 :   22158:  je     2215f <PQgetResult@@Base+0x14f>
    0.00 :   2215a:  call   c1a0 <PQclear@plt>
    0.00 :   2215f:  movq   $0x0,0x380(%rbx)
    0.00 :   2216a:  mov    $0x7,%esi
    0.00 :   2216f:  mov    %rbx,%rdi
    0.00 :   22172:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   22177:  movl   $0x0,0x15c(%rbx)
    0.00 :   22181:  mov    %rax,0x378(%rbx)
    0.00 :   22188:  mov    %rax,%rbp
    0.00 :   2218b:  test   %rax,%rax
    0.00 :   2218e:  je     22202 <PQgetResult@@Base+0x1f2>
    0.00 :   22190:  mov    0x380(%rbx),%rax
    0.00 :   22197:  movq   $0x0,0x380(%rbx)
    0.00 :   221a2:  mov    %rax,0x378(%rbx)
    0.00 :   221a9:  mov    0x18(%rsp),%rax
    0.00 :   221ae:  sub    %fs:0x28,%rax
    0.00 :   221b7:  jne    224e5 <PQgetResult@@Base+0x4d5>
    0.00 :   221bd:  add    $0x20,%rsp
    0.00 :   221c1:  mov    %rbp,%rax
    0.00 :   221c4:  pop    %rbx
    0.00 :   221c5:  pop    %rbp
    0.00 :   221c6:  pop    %r12
    0.00 :   221c8:  pop    %r13
    0.00 :   221ca:  pop    %r14
    0.00 :   221cc:  ret
    0.00 :   221cd:  nopl   (%rax)
    0.00 :   221d0:  cmp    $0x1,%ebp
    0.00 :   221d3:  je     22050 <PQgetResult@@Base+0x40>
    0.00 :   221d9:  jmp    220b2 <PQgetResult@@Base+0xa2>
    0.00 :   221de:  xchg   %ax,%ax
    0.00 :   221e0:  mov    0x16c(%rbx),%edi
    0.00 :   221e6:  test   %edi,%edi
    0.00 :   221e8:  je     221fe <PQgetResult@@Base+0x1ee>
    0.00 :   221ea:  lea    0x418(%rbx),%rdi
    0.00 :   221f1:  call   cc10 <resetPQExpBuffer@plt>
    0.00 :   221f6:  mov    %rbx,%rdi
    0.00 :   221f9:  call   1ad10 <PQenterPipelineMode@@Base+0x70>
    0.00 :   221fe:  xor    %ebp,%ebp
    0.00 :   22200:  jmp    221a9 <PQgetResult@@Base+0x199>
    0.00 :   22202:  mov    $0x7,%esi
    0.00 :   22207:  mov    %rbx,%rdi
    0.00 :   2220a:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   2220f:  mov    %rax,%rbp
    0.00 :   22212:  jmp    22190 <PQgetResult@@Base+0x180>
    0.00 :   22217:  mov    0x2e0(%rbx),%rsi
    0.00 :   2221e:  lea    0x418(%rbx),%rbp
    0.00 :   22225:  test   %rsi,%rsi
    0.00 :   22228:  je     22404 <PQgetResult@@Base+0x3f4>
    0.00 :   2222e:  mov    %rbp,%rdi
    0.00 :   22231:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   22236:  mov    0x2e0(%rbx),%rax
    0.00 :   2223d:  movb   $0x0,(%rax)
    0.00 :   22240:  jmp    22132 <PQgetResult@@Base+0x122>
    0.00 :   22245:  mov    $0x8,%esi
    0.00 :   2224a:  mov    %rbx,%rdi
    0.00 :   2224d:  call   1a940 <PQparamtype@@Base+0x60>
    0.00 :   22252:  mov    %rax,%rbp
    0.00 :   22255:  test   %rbp,%rbp
    0.00 :   22258:  je     221fe <PQgetResult@@Base+0x1ee>
    0.00 :   2225a:  mov    0x98(%rbp),%eax
    0.00 :   22260:  test   %eax,%eax
    0.00 :   22262:  jle    221a9 <PQgetResult@@Base+0x199>
    0.00 :   22268:  xor    %r13d,%r13d
    0.00 :   2226b:  mov    %rsp,%r14
    0.00 :   2226e:  jmp    22287 <PQgetResult@@Base+0x277>
    0.00 :   22270:  movb   $0x1,0x20(%rax,%r12,1)
    0.00 :   22276:  add    $0x1,%r13d
    0.00 :   2227a:  cmp    %r13d,0x98(%rbp)
    0.00 :   22281:  jle    221a9 <PQgetResult@@Base+0x199>
    0.00 :   22287:  movslq %r13d,%rax
    0.00 :   2228a:  mov    %rbx,(%rsp)
    0.00 :   2228e:  mov    %r14,%rsi
    0.00 :   22291:  mov    $0x3,%edi
    0.00 :   22296:  lea    (%rax,%rax,4),%r12
    0.00 :   2229a:  mov    0x90(%rbp),%rax
    0.00 :   222a1:  mov    %rbp,0x8(%rsp)
    0.00 :   222a6:  shl    $0x3,%r12
    0.00 :   222aa:  add    %r12,%rax
    0.00 :   222ad:  mov    0x10(%rax),%rdx
    0.00 :   222b1:  call   *(%rax)
    0.00 :   222b3:  test   %eax,%eax
    0.00 :   222b5:  mov    0x90(%rbp),%rax
    0.00 :   222bc:  jne    22270 <PQgetResult@@Base+0x260>
    0.00 :   222be:  mov    0x8(%rax,%r12,1),%r12
    0.00 :   222c3:  lea    0xfe26(%rip),%rdi        # 320f0 <PQencryptPasswordConn@@Base+0x4770>
    0.00 :   222ca:  add    $0x418,%rbx
    0.00 :   222d1:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   222d6:  mov    %rbx,%rdi
    0.00 :   222d9:  mov    %rax,%rsi
    0.00 :   222dc:  mov    %r12,%rdx
    0.00 :   222df:  xor    %eax,%eax
    0.00 :   222e1:  call   cdd0 <appendPQExpBuffer@plt>
    0.00 :   222e6:  mov    %rbx,%rsi
    0.00 :   222e9:  mov    %rbp,%rdi
    0.00 :   222ec:  call   182c0 <PQdsplen@@Base+0xd0>
    0.00 :   222f1:  movl   $0x7,0x28(%rbp)
    0.00 :   222f8:  jmp    221a9 <PQgetResult@@Base+0x199>
    0.00 :   222fd:  mov    $0x3,%esi
    0.00 :   22302:  mov    %rbx,%rdi
    0.00 :   22305:  call   1a940 <PQparamtype@@Base+0x60>
    0.00 :   2230a:  mov    %rax,%rbp
    0.00 :   2230d:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22312:  mov    $0x4,%esi
    0.00 :   22317:  mov    %rbx,%rdi
    0.00 :   2231a:  call   1a940 <PQparamtype@@Base+0x60>
    0.00 :   2231f:  mov    %rax,%rbp
    0.00 :   22322:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22327:  mov    0x378(%rbx),%rbp
    0.00 :   2232e:  test   %rbp,%rbp
    0.00 :   22331:  je     22460 <PQgetResult@@Base+0x450>
    0.00 :   22337:  mov    0x380(%rbx),%rax
    0.00 :   2233e:  movq   $0x0,0x380(%rbx)
    0.00 :   22349:  mov    %rax,0x378(%rbx)
    0.00 :   22350:  movl   $0x1,0x15c(%rbx)
    0.00 :   2235a:  jmp    2225a <PQgetResult@@Base+0x24a>
    0.00 :   2235f:  mov    0x1a0(%rbx),%rbp
    0.00 :   22366:  test   %rbp,%rbp
    0.00 :   22369:  je     22376 <PQgetResult@@Base+0x366>
    0.00 :   2236b:  mov    0x0(%rbp),%esi
    0.00 :   2236e:  test   %esi,%esi
    0.00 :   22370:  jne    22420 <PQgetResult@@Base+0x410>
    0.00 :   22376:  mov    0x378(%rbx),%rbp
    0.00 :   2237d:  test   %rbp,%rbp
    0.00 :   22380:  je     22498 <PQgetResult@@Base+0x488>
    0.00 :   22386:  mov    0x380(%rbx),%rax
    0.00 :   2238d:  mov    0x16c(%rbx),%ecx
    0.00 :   22393:  movq   $0x0,0x380(%rbx)
    0.00 :   2239e:  mov    %rax,0x378(%rbx)
    0.00 :   223a5:  test   %ecx,%ecx
    0.00 :   223a7:  je     22350 <PQgetResult@@Base+0x340>
    0.00 :   223a9:  movl   $0x0,0x15c(%rbx)
    0.00 :   223b3:  cmpl   $0xa,0x28(%rbp)
    0.00 :   223b7:  jne    2225a <PQgetResult@@Base+0x24a>
    0.00 :   223bd:  mov    %rbx,%rdi
    0.00 :   223c0:  call   1ad10 <PQenterPipelineMode@@Base+0x70>
    0.00 :   223c5:  jmp    2225a <PQgetResult@@Base+0x24a>
    0.00 :   223ca:  nopw   0x0(%rax,%rax,1)
    0.00 :   223d0:  lea    0xf1be(%rip),%rdi        # 31595 <PQencryptPasswordConn@@Base+0x3c15>
    0.00 :   223d7:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   223dc:  mov    %ebp,%edx
    0.00 :   223de:  lea    0x418(%rbx),%rdi
    0.00 :   223e5:  mov    %rax,%rsi
    0.00 :   223e8:  xor    %eax,%eax
    0.00 :   223ea:  call   cdd0 <appendPQExpBuffer@plt>
    0.00 :   223ef:  mov    $0x7,%esi
    0.00 :   223f4:  mov    %rbx,%rdi
    0.00 :   223f7:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   223fc:  mov    %rax,%rbp
    0.00 :   223ff:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22404:  lea    0xf172(%rip),%rdi        # 3157d <PQencryptPasswordConn@@Base+0x3bfd>
    0.00 :   2240b:  call   18240 <PQdsplen@@Base+0x50>
    0.00 :   22410:  mov    %rbp,%rdi
    0.00 :   22413:  mov    %rax,%rsi
    0.00 :   22416:  call   d230 <appendPQExpBufferStr@plt>
    0.00 :   2241b:  jmp    22132 <PQgetResult@@Base+0x122>
    0.00 :   22420:  mov    0x10(%rbp),%rax
    0.00 :   22424:  mov    %rax,0x1a0(%rbx)
    0.00 :   2242b:  mov    0x8(%rbp),%rdi
    0.00 :   2242f:  movq   $0x0,0x10(%rbp)
    0.00 :   22437:  test   %rdi,%rdi
    0.00 :   2243a:  je     22449 <PQgetResult@@Base+0x439>
    0.00 :   2243c:  call   cb30 <free@plt>
    0.00 :   22441:  movq   $0x0,0x8(%rbp)
    0.00 :   22449:  mov    0x1b0(%rbx),%rax
    0.00 :   22450:  mov    %rax,0x10(%rbp)
    0.00 :   22454:  mov    %rbp,0x1b0(%rbx)
    0.00 :   2245b:  jmp    22376 <PQgetResult@@Base+0x366>
    0.00 :   22460:  mov    $0x7,%esi
    0.00 :   22465:  mov    %rbx,%rdi
    0.00 :   22468:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   2246d:  mov    %rax,%rbp
    0.00 :   22470:  mov    0x380(%rbx),%rax
    0.00 :   22477:  movq   $0x0,0x380(%rbx)
    0.00 :   22482:  mov    %rax,0x378(%rbx)
    0.00 :   22489:  movl   $0x1,0x15c(%rbx)
    0.00 :   22493:  jmp    22255 <PQgetResult@@Base+0x245>
    0.00 :   22498:  mov    $0x7,%esi
    0.00 :   2249d:  mov    %rbx,%rdi
    0.00 :   224a0:  call   ccb0 <PQmakeEmptyPGresult@plt>
    0.00 :   224a5:  mov    0x16c(%rbx),%edx
    0.00 :   224ab:  mov    %rax,%rbp
    0.00 :   224ae:  mov    0x380(%rbx),%rax
    0.00 :   224b5:  movq   $0x0,0x380(%rbx)
    0.00 :   224c0:  mov    %rax,0x378(%rbx)
    0.00 :   224c7:  test   %edx,%edx
    0.00 :   224c9:  je     22489 <PQgetResult@@Base+0x479>
    0.00 :   224cb:  movl   $0x0,0x15c(%rbx)
    0.00 :   224d5:  test   %rbp,%rbp
    0.00 :   224d8:  jne    223b3 <PQgetResult@@Base+0x3a3>
    0.00 :   224de:  xor    %ebp,%ebp
    0.00 :   224e0:  jmp    221a9 <PQgetResult@@Base+0x199>
    0.00 :   224e5:  call   ca70 <__stack_chk_fail@plt>
    0.00 :   224ea:  je     2205a <PQgetResult@@Base+0x4a>
    0.00 :   224f0:  jmp    22132 <PQgetResult@@Base+0x122>

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[d7fa0]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3     Disassembly of section .text:
         :
         : 5     00000000000d7fa0 <__getpid>:
         : 6     __GI___getpid():
  100.00 :   d7fa0:  endbr64 // libc.so.6[d7fa0]
    0.00 :   d7fa4:  mov    $0x27,%eax
    0.00 :   d7fa9:  syscall
    0.00 :   d7fab:  ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  200.00 [nf_conntrack][447]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   00000000000003c0 <hash_conntrack_raw>:
         : 6   hash_conntrack_raw():
    0.00 :   3c0:    call   3c5 <hash_conntrack_raw+0x5>
    0.00 :   3c5:    push   %rbp
    0.00 :   3c6:    mov    $0x6,%ecx
    0.00 :   3cb:    mov    %rsp,%rbp
    0.00 :   3ce:    push   %r14
    0.00 :   3d0:    mov    %esi,%r14d
    0.00 :   3d3:    push   %r13
    0.00 :   3d5:    mov    %rdx,%r13
    0.00 :   3d8:    push   %r12
    0.00 :   3da:    push   %rbx
    0.00 :   3db:    mov    %rdi,%rbx
    0.00 :   3de:    sub    $0x40,%rsp
    0.00 :   3e2:    mov    %gs:0x28,%rax
    0.00 :   3eb:    mov    %rax,0x38(%rsp)
    0.00 :   3f0:    xor    %eax,%eax
    0.00 :   3f2:    lea    0x8(%rsp),%r12
    0.00 :   3f7:    mov    %r12,%rdi
    0.00 :   3fa:    rep stos %rax,%es:(%rdi)
    0.00 :   3fd:    jmp    482 <hash_conntrack_raw+0xc2>
    0.00 :   402:    mov    (%rbx),%rax
    0.00 :   405:    mov    0x1c(%rbx),%rdx
    0.00 :   409:    mov    $0x30,%esi
    0.00 :   40e:    mov    %r12,%rdi
    0.00 :   411:    mov    %r14d,0x2c(%rsp)
    0.00 :   416:    mov    %rax,0x8(%rsp)
    0.00 :   41b:    mov    0x8(%rbx),%rax
    0.00 :   41f:    mov    %rdx,0x24(%rsp)
    0.00 :   424:    movzbl 0x26(%rbx),%edx
    0.00 :   428:    mov    %rax,0x10(%rsp)
    0.00 :   42d:    mov    0x10(%rbx),%eax
    0.00 :   430:    shl    $0x10,%edx
    0.00 :   433:    mov    %eax,0x18(%rsp)
    0.00 :   437:    mov    0x14(%rbx),%rax
    0.00 :   43b:    mov    %rax,0x1c(%rsp)
    0.00 :   440:    mov    0x140(%r13),%eax
  100.00 :   447:    mov    %eax,0x30(%rsp) // [nf_conntrack][447]
    0.00 :   44b:    movzwl 0x24(%rbx),%eax
    0.00 :   44f:    or     %edx,%eax
    0.00 :   451:    mov    $0x0,%rdx
    0.00 :   458:    mov    %eax,0x34(%rsp)
    0.00 :   45c:    call   461 <hash_conntrack_raw+0xa1>
    0.00 :   461:    mov    0x38(%rsp),%rdx
    0.00 :   466:    sub    %gs:0x28,%rdx
    0.00 :   46f:    jne    4d4 <hash_conntrack_raw+0x114>
    0.00 :   471:    add    $0x40,%rsp
    0.00 :   475:    pop    %rbx
    0.00 :   476:    pop    %r12
    0.00 :   478:    pop    %r13
    0.00 :   47a:    pop    %r14
    0.00 :   47c:    pop    %rbp
    0.00 :   47d:    jmp    482 <hash_conntrack_raw+0xc2>
    0.00 :   482:    mov    %rsp,%rsi
    0.00 :   485:    mov    $0x0,%rdi
    0.00 :   48c:    movq   $0x0,(%rsp)
    0.00 :   494:    call   499 <hash_conntrack_raw+0xd9>
    0.00 :   499:    test   %al,%al
    0.00 :   49b:    je     402 <hash_conntrack_raw+0x42>
    0.00 :   4a1:    mov    $0x10,%esi
    0.00 :   4a6:    mov    $0x0,%rdi
    0.00 :   4ad:    call   4b2 <hash_conntrack_raw+0xf2>
    0.00 :   4b2:    mov    $0x0,%rcx
    0.00 :   4b9:    mov    $0x0,%rsi
    0.00 :   4c0:    mov    $0x0,%rdi
    0.00 :   4c7:    mov    %rsp,%rdx
    0.00 :   4ca:    call   4cf <hash_conntrack_raw+0x10f>
    0.00 :   4cf:    jmp    402 <hash_conntrack_raw+0x42>
    0.00 :   4d4:    call   4d9 <hash_conntrack_raw+0x119>
         :
         : 75  Disassembly of section .text.unlikely:
         :
         : 77  00000000000003c0 <nf_ct_resolve_clash+0x1b0>:
         : 78  nf_ct_resolve_clash():
    0.00 :   3c0:    add    %al,(%rax)
    0.00 :   3c2:    jmp    3f6 <nf_ct_resolve_clash+0x1e6>
    0.00 :   3c4:    mov    $0x0,%rdi
    0.00 :   3cb:    call   3d0 <nf_ct_resolve_clash+0x1c0>
    0.00 :   3d0:    mov    $0x0,%rdi
    0.00 :   3d7:    mov    0xb40(%r12),%rax
    0.00 :   3df:    incl   %gs:0x14(%rax)
    0.00 :   3e3:    call   3e8 <nf_ct_resolve_clash+0x1d8>
    0.00 :   3e8:    mov    0xb40(%r12),%rax
    0.00 :   3f0:    incl   %gs:0xc(%rax)
    0.00 :   3f4:    xor    %eax,%eax
    0.00 :   3f6:    pop    %rbx
    0.00 :   3f7:    pop    %rbp
    0.00 :   3f8:    pop    %r12
    0.00 :   3fa:    pop    %r13
    0.00 :   3fc:    pop    %r14
    0.00 :   3fe:    jmp    403 <__nf_conntrack_alloc.cold>
         :
         : 97  0000000000000403 <__nf_conntrack_alloc.cold>:
         : 98  __nf_conntrack_alloc.cold():
    0.00 :   403:    mov    $0x0,%rdi
    0.00 :   40a:    call   40f <__nf_conntrack_alloc.cold+0xc>
    0.00 :   40f:    jmp    414 <__nf_conntrack_confirm.cold>
         :
         : 103 0000000000000414 <__nf_conntrack_confirm.cold>:
         : 104 __nf_conntrack_confirm.cold():
    0.00 :   414:    mov    0x20(%rsp),%rdi
    0.00 :   419:    mov    %r12d,%edx
    0.00 :   41c:    call   210 <nf_ct_resolve_clash>
    0.00 :   421:    mov    %eax,%ebx
    0.00 :   423:    jmp    428 <nf_conntrack_in.cold>
         :
         : 111 0000000000000428 <nf_conntrack_in.cold>:
         : 112 nf_conntrack_in.cold():
    0.00 :   428:    cmp    $0x2,%dl
    0.00 :   42b:    jne    465 <nf_conntrack_in.cold+0x3d>
    0.00 :   42d:    sub    $0x1,%r8b
    0.00 :   431:    jne    486 <nf_conntrack_in.cold+0x5e>
    0.00 :   433:    mov    0x4(%rsp),%edx
    0.00 :   437:    mov    0x10(%rsp),%rdi
    0.00 :   43c:    mov    %rbp,%rcx
    0.00 :   43f:    mov    %r14,%rsi
    0.00 :   442:    call   447 <nf_conntrack_in.cold+0x1f>
  100.00 :   447:    mov    %eax,%edx
    0.00 :   449:    test   %edx,%edx
    0.00 :   44b:    jg     48b <nf_conntrack_in.cold+0x63>
    0.00 :   44d:    mov    0x20(%rbp),%rax
    0.00 :   451:    mov    0xb40(%rax),%rax
    0.00 :   458:    incl   %gs:0x1c(%rax)
    0.00 :   45c:    mov    %edx,%ebx
    0.00 :   45e:    neg    %ebx
    0.00 :   460:    jmp    465 <nf_conntrack_in.cold+0x3d>
    0.00 :   465:    cmp    $0xa,%dl
    0.00 :   468:    jne    486 <nf_conntrack_in.cold+0x5e>
    0.00 :   46a:    test   %al,%al
    0.00 :   46c:    je     486 <nf_conntrack_in.cold+0x5e>
    0.00 :   46e:    mov    0x4(%rsp),%edx
    0.00 :   472:    mov    0x10(%rsp),%rdi
    0.00 :   477:    mov    %rbp,%rcx
    0.00 :   47a:    mov    %r14,%rsi
    0.00 :   47d:    call   482 <nf_conntrack_in.cold+0x5a>
    0.00 :   482:    mov    %eax,%edx
    0.00 :   484:    jmp    449 <nf_conntrack_in.cold+0x21>
    0.00 :   486:    mov    $0x1,%edx
    0.00 :   48b:    cmpq   $0x0,0x68(%r14)
    0.00 :   490:    je     499 <nf_conntrack_in.cold+0x71>
    0.00 :   492:    mov    %edx,%ebx
    0.00 :   494:    jmp    499 <nf_conntrack_in.cold+0x71>
    0.00 :   499:    movzbl 0x1b(%rsp),%r8d
    0.00 :   49f:    jmp    4a4 <nf_ct_expect_related_report.cold>
         :
         : 150 00000000000004a4 <nf_ct_expect_related_report.cold>:
         : 151 nf_ct_expect_related_report.cold():
    0.00 :   4a4:    mov    $0x0,%rdi
    0.00 :   4ab:    call   4b0 <nf_ct_expect_related_report.cold+0xc>
    0.00 :   4b0:    jmp    4b5 <nf_conntrack_helper_register.cold>
         :
         : 156 00000000000004b5 <nf_conntrack_helper_register.cold>:
         : 157 nf_conntrack_helper_register.cold():
    0.00 :   4b5:    mov    $0x0,%rdi
    0.00 :   4bc:    call   4c1 <nf_conntrack_helper_register.cold+0xc>
    0.00 :   4c1:    mov    $0x0,%rdi
    0.00 :   4c8:    call   4cd <nf_l4proto_log_invalid>
         :
         : 163 00000000000004cd <nf_l4proto_log_invalid>:
         : 164 nf_l4proto_log_invalid():
    0.00 :   4cd:    call   4d2 <nf_l4proto_log_invalid+0x5>
    0.00 :   4d2:    push   %rbp
    0.00 :   4d3:    xor    %eax,%eax
    0.00 :   4d5:    mov    %rdi,%r11
    0.00 :   4d8:    rex.W

Sorted summary for file /usr/lib64/libc.so.6
----------------------------------------------

  100.00 libc.so.6[15556b]
 Percent |	Source code & Disassembly of /usr/lib64/libc.so.6 for cycles (1 samples, percent: local period)
---------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3      Disassembly of section .text:
         :
         : 5      0000000000155540 <__strchrnul_avx2>:
         : 6      __strchrnul_avx2():
    0.00 :   155540: endbr64
    0.00 :   155544: vmovd  %esi,%xmm0
    0.00 :   155548: mov    %edi,%eax
    0.00 :   15554a: and    $0xfff,%eax
    0.00 :   15554f: vpbroadcastb %xmm0,%ymm0
    0.00 :   155554: vpxor  %xmm1,%xmm1,%xmm1
    0.00 :   155558: cmp    $0xfe0,%eax
    0.00 :   15555d: ja     1556f0 <__strchrnul_avx2+0x1b0>
    0.00 :   155563: vmovdqu (%rdi),%ymm2
    0.00 :   155567: vpcmpeqb %ymm2,%ymm0,%ymm3
  100.00 :   15556b: vpcmpeqb %ymm2,%ymm1,%ymm2 // libc.so.6[15556b]
    0.00 :   15556f: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155573: vpmovmskb %ymm3,%eax
    0.00 :   155577: test   %eax,%eax
    0.00 :   155579: je     1555d0 <__strchrnul_avx2+0x90>
    0.00 :   15557b: tzcnt  %eax,%eax
    0.00 :   15557f: add    %rdi,%rax
    0.00 :   155582: vzeroupper
    0.00 :   155585: ret
    0.00 :   155586: cs nopw 0x0(%rax,%rax,1)
    0.00 :   155590: bsf    %eax,%eax
    0.00 :   155593: inc    %rdi
    0.00 :   155596: add    %rdi,%rax
    0.00 :   155599: vzeroupper
    0.00 :   15559c: ret
    0.00 :   15559d: nopl   (%rax)
    0.00 :   1555a0: bsf    %eax,%eax
    0.00 :   1555a3: add    $0x21,%rdi
    0.00 :   1555a7: add    %rdi,%rax
    0.00 :   1555aa: vzeroupper
    0.00 :   1555ad: ret
    0.00 :   1555ae: xchg   %ax,%ax
    0.00 :   1555b0: bsf    %eax,%eax
    0.00 :   1555b3: add    $0x41,%rdi
    0.00 :   1555b7: add    %rdi,%rax
    0.00 :   1555ba: vzeroupper
    0.00 :   1555bd: ret
    0.00 :   1555be: xchg   %ax,%ax
    0.00 :   1555c0: bsf    %eax,%eax
    0.00 :   1555c3: add    $0x61,%rdi
    0.00 :   1555c7: add    %rdi,%rax
    0.00 :   1555ca: vzeroupper
    0.00 :   1555cd: ret
    0.00 :   1555ce: xchg   %ax,%ax
    0.00 :   1555d0: or     $0x1f,%rdi
    0.00 :   1555d4: vmovdqa 0x1(%rdi),%ymm2
    0.00 :   1555d9: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   1555dd: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   1555e1: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   1555e5: vpmovmskb %ymm3,%eax
    0.00 :   1555e9: test   %eax,%eax
    0.00 :   1555eb: jne    155590 <__strchrnul_avx2+0x50>
    0.00 :   1555ed: vmovdqa 0x21(%rdi),%ymm2
    0.00 :   1555f2: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   1555f6: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   1555fa: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   1555fe: vpmovmskb %ymm3,%eax
    0.00 :   155602: test   %eax,%eax
    0.00 :   155604: jne    1555a0 <__strchrnul_avx2+0x60>
    0.00 :   155606: vmovdqa 0x41(%rdi),%ymm2
    0.00 :   15560b: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   15560f: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   155613: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155617: vpmovmskb %ymm3,%eax
    0.00 :   15561b: test   %eax,%eax
    0.00 :   15561d: jne    1555b0 <__strchrnul_avx2+0x70>
    0.00 :   15561f: vmovdqa 0x61(%rdi),%ymm2
    0.00 :   155624: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   155628: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   15562c: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155630: vpmovmskb %ymm3,%eax
    0.00 :   155634: test   %eax,%eax
    0.00 :   155636: jne    1555c0 <__strchrnul_avx2+0x80>
    0.00 :   155638: inc    %rdi
    0.00 :   15563b: or     $0x7f,%rdi
    0.00 :   15563f: nop
    0.00 :   155640: vmovdqa 0x1(%rdi),%ymm6
    0.00 :   155645: vmovdqa 0x21(%rdi),%ymm7
    0.00 :   15564a: vpxor  %ymm6,%ymm0,%ymm2
    0.00 :   15564e: vpxor  %ymm7,%ymm0,%ymm3
    0.00 :   155652: vpminub %ymm2,%ymm6,%ymm2
    0.00 :   155656: vpminub %ymm3,%ymm7,%ymm3
    0.00 :   15565a: vmovdqa 0x41(%rdi),%ymm6
    0.00 :   15565f: vmovdqa 0x61(%rdi),%ymm7
    0.00 :   155664: vpxor  %ymm6,%ymm0,%ymm4
    0.00 :   155668: vpxor  %ymm7,%ymm0,%ymm5
    0.00 :   15566c: vpminub %ymm4,%ymm6,%ymm4
    0.00 :   155670: vpminub %ymm5,%ymm7,%ymm5
    0.00 :   155674: vpminub %ymm2,%ymm3,%ymm6
    0.00 :   155678: vpminub %ymm4,%ymm5,%ymm7
    0.00 :   15567c: vpminub %ymm6,%ymm7,%ymm7
    0.00 :   155680: vpcmpeqb %ymm7,%ymm1,%ymm7
    0.00 :   155684: vpmovmskb %ymm7,%ecx
    0.00 :   155688: sub    $0xffffffffffffff80,%rdi
    0.00 :   15568c: test   %ecx,%ecx
    0.00 :   15568e: je     155640 <__strchrnul_avx2+0x100>
    0.00 :   155690: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   155694: vpmovmskb %ymm2,%eax
    0.00 :   155698: test   %eax,%eax
    0.00 :   15569a: jne    1556d0 <__strchrnul_avx2+0x190>
    0.00 :   15569c: vpcmpeqb %ymm3,%ymm1,%ymm3
    0.00 :   1556a0: vpmovmskb %ymm3,%eax
    0.00 :   1556a4: test   %eax,%eax
    0.00 :   1556a6: jne    1556e0 <__strchrnul_avx2+0x1a0>
    0.00 :   1556a8: vpcmpeqb %ymm4,%ymm1,%ymm4
    0.00 :   1556ac: vpmovmskb %ymm4,%eax
    0.00 :   1556b0: shl    $0x20,%rcx
    0.00 :   1556b4: or     %rcx,%rax
    0.00 :   1556b7: tzcnt  %rax,%rax
    0.00 :   1556bc: sub    $0x3f,%rdi
    0.00 :   1556c0: add    %rdi,%rax
    0.00 :   1556c3: vzeroupper
    0.00 :   1556c6: ret
    0.00 :   1556c7: nopw   0x0(%rax,%rax,1)
    0.00 :   1556d0: bsf    %eax,%eax
    0.00 :   1556d3: add    $0xffffffffffffff81,%rdi
    0.00 :   1556d7: add    %rdi,%rax
    0.00 :   1556da: vzeroupper
    0.00 :   1556dd: ret
    0.00 :   1556de: xchg   %ax,%ax
    0.00 :   1556e0: tzcnt  %eax,%eax
    0.00 :   1556e4: sub    $0x5f,%rdi
    0.00 :   1556e8: add    %rdi,%rax
    0.00 :   1556eb: vzeroupper
    0.00 :   1556ee: ret
    0.00 :   1556ef: nop
    0.00 :   1556f0: mov    %rdi,%rdx
    0.00 :   1556f3: or     $0x1f,%rdi
    0.00 :   1556f7: vmovdqa -0x1f(%rdi),%ymm2
    0.00 :   1556fc: vpcmpeqb %ymm2,%ymm0,%ymm3
    0.00 :   155700: vpcmpeqb %ymm2,%ymm1,%ymm2
    0.00 :   155704: vpor   %ymm3,%ymm2,%ymm3
    0.00 :   155708: vpmovmskb %ymm3,%eax
    0.00 :   15570c: sarx   %edx,%eax,%eax
    0.00 :   155711: test   %eax,%eax
    0.00 :   155713: je     1555d4 <__strchrnul_avx2+0x94>
    0.00 :   155719: tzcnt  %eax,%eax
    0.00 :   15571d: add    %rdx,%rax
    0.00 :   155720: vzeroupper
    0.00 :   155723: ret

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz
----------------------------------------------

  100.00 [nf_nat][2e93]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_nat.ko.xz for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000002da0 <nf_nat_ipv4_local_fn>:
         : 6    nf_nat_ipv4_local_fn():
    0.00 :   2da0:   call   2da5 <nf_nat_ipv4_local_fn+0x5>
    0.00 :   2da5:   push   %rbp
    0.00 :   2da6:   push   %rbx
    0.00 :   2da7:   mov    %rsi,%rbx
    0.00 :   2daa:   mov    0x68(%rsi),%rsi
    0.00 :   2dae:   cmp    $0x7,%rsi
    0.00 :   2db2:   jbe    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2db8:   mov    %rdx,%rbp
    0.00 :   2dbb:   mov    %esi,%edx
    0.00 :   2dbd:   mov    $0x12,%eax
    0.00 :   2dc2:   and    $0x7,%edx
    0.00 :   2dc5:   bt     %rdx,%rax
    0.00 :   2dc9:   jae    2de0 <nf_nat_ipv4_local_fn+0x40>
    0.00 :   2dcb:   movzwl 0xb8(%rbx),%eax
    0.00 :   2dd2:   mov    0xc8(%rbx),%rcx
    0.00 :   2dd9:   cmpb   $0x1,0x9(%rcx,%rax,1)
    0.00 :   2dde:   je     2df7 <nf_nat_ipv4_local_fn+0x57>
    0.00 :   2de0:   mov    %rbp,%rdx
    0.00 :   2de3:   mov    %rbx,%rsi
    0.00 :   2de6:   call   2deb <nf_nat_ipv4_local_fn+0x4b>
    0.00 :   2deb:   cmp    $0x1,%eax
    0.00 :   2dee:   je     2e0f <nf_nat_ipv4_local_fn+0x6f>
    0.00 :   2df0:   pop    %rbx
    0.00 :   2df1:   pop    %rbp
    0.00 :   2df2:   jmp    2df7 <nf_nat_ipv4_local_fn+0x57>
    0.00 :   2df7:   movzbl 0x0(%rbp),%ecx
    0.00 :   2dfb:   and    $0xfffffffffffffff8,%rsi
    0.00 :   2dff:   mov    %rbx,%rdi
    0.00 :   2e02:   call   2e07 <nf_nat_ipv4_local_fn+0x67>
    0.00 :   2e07:   mov    %eax,%edx
    0.00 :   2e09:   xor    %eax,%eax
    0.00 :   2e0b:   test   %edx,%edx
    0.00 :   2e0d:   je     2df0 <nf_nat_ipv4_local_fn+0x50>
    0.00 :   2e0f:   mov    0x68(%rbx),%rax
    0.00 :   2e13:   mov    %eax,%edx
    0.00 :   2e15:   mov    %rax,%rcx
    0.00 :   2e18:   and    $0x7,%edx
    0.00 :   2e1b:   and    $0xfffffffffffffff8,%rcx
    0.00 :   2e1f:   cmp    $0x7,%rax
    0.00 :   2e23:   jbe    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e25:   xor    %eax,%eax
    0.00 :   2e27:   cmp    $0x2,%edx
    0.00 :   2e2a:   seta   %sil
    0.00 :   2e2e:   setbe  %al
    0.00 :   2e31:   movzbl %sil,%esi
    0.00 :   2e35:   lea    0x0(,%rsi,8),%rdx
    0.00 :   2e3d:   sub    %rsi,%rdx
    0.00 :   2e40:   lea    (%rcx,%rdx,8),%rsi
    0.00 :   2e44:   lea    0x0(,%rax,8),%rdx
    0.00 :   2e4c:   sub    %rax,%rdx
    0.00 :   2e4f:   lea    (%rcx,%rdx,8),%rax
    0.00 :   2e53:   mov    0x20(%rax),%ecx
    0.00 :   2e56:   cmp    %ecx,0x34(%rsi)
    0.00 :   2e59:   jne    2e73 <nf_nat_ipv4_local_fn+0xd3>
    0.00 :   2e5b:   testb  $0x4,0x3c(%rbx)
    0.00 :   2e5f:   jne    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e61:   cmpb   $0x1,0x46(%rsi)
    0.00 :   2e65:   jne    2e93 <nf_nat_ipv4_local_fn+0xf3>
    0.00 :   2e67:   mov    $0x1,%eax
    0.00 :   2e6c:   pop    %rbx
    0.00 :   2e6d:   pop    %rbp
    0.00 :   2e6e:   jmp    2e73 <nf_nat_ipv4_local_fn+0xd3>
    0.00 :   2e73:   mov    0x18(%rbp),%rsi
    0.00 :   2e77:   mov    0x20(%rbp),%rdi
    0.00 :   2e7b:   xor    %ecx,%ecx
    0.00 :   2e7d:   mov    %rbx,%rdx
    0.00 :   2e80:   call   2e85 <nf_nat_ipv4_local_fn+0xe5>
    0.00 :   2e85:   test   %eax,%eax
    0.00 :   2e87:   jns    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e89:   neg    %eax
    0.00 :   2e8b:   shl    $0x10,%eax
    0.00 :   2e8e:   jmp    2df0 <nf_nat_ipv4_local_fn+0x50>
  100.00 :   2e93:   movzwl 0x30(%rax),%eax // [nf_nat][2e93]
    0.00 :   2e97:   cmp    %ax,0x44(%rsi)
    0.00 :   2e9b:   je     2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2e9d:   mov    0x20(%rbp),%rdi
    0.00 :   2ea1:   mov    $0x2,%edx
    0.00 :   2ea6:   mov    %rbx,%rsi
    0.00 :   2ea9:   call   2c40 <nf_xfrm_me_harder>
    0.00 :   2eae:   test   %eax,%eax
    0.00 :   2eb0:   jns    2e67 <nf_nat_ipv4_local_fn+0xc7>
    0.00 :   2eb2:   jmp    2e89 <nf_nat_ipv4_local_fn+0xe9>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  100.00 [nf_conntrack][7eb0]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    0000000000007eb0 <ipv4_conntrack_in>:
         : 6    ipv4_conntrack_in():
  100.00 :   7eb0:   call   7eb5 <ipv4_conntrack_in+0x5> // [nf_conntrack][7eb0]
    0.00 :   7eb5:   mov    %rsi,%rdi
    0.00 :   7eb8:   mov    %rdx,%rsi
    0.00 :   7ebb:   jmp    7ec0 <nf_ct_netns_do_get>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  100.00 [nf_conntrack][8881]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3    Disassembly of section .text:
         :
         : 5    00000000000087f0 <nf_confirm>:
         : 6    nf_confirm():
    0.00 :   87f0:   call   87f5 <nf_confirm+0x5>
    0.00 :   87f5:   push   %r13
    0.00 :   87f7:   mov    %esi,%r13d
    0.00 :   87fa:   push   %r12
    0.00 :   87fc:   mov    %ecx,%r12d
    0.00 :   87ff:   push   %rbp
    0.00 :   8800:   mov    %rdi,%rbp
    0.00 :   8803:   push   %rbx
    0.00 :   8804:   mov    0xb0(%rdx),%rdi
    0.00 :   880b:   mov    %rdx,%rbx
    0.00 :   880e:   test   %rdi,%rdi
    0.00 :   8811:   je     885a <nf_confirm+0x6a>
    0.00 :   8813:   movzbl (%rdi),%eax
    0.00 :   8816:   test   %al,%al
    0.00 :   8818:   je     885a <nf_confirm+0x6a>
    0.00 :   881a:   mov    0xc(%rdi),%ecx
    0.00 :   881d:   add    %rdi,%rax
    0.00 :   8820:   test   %ecx,%ecx
    0.00 :   8822:   jne    8903 <nf_confirm+0x113>
    0.00 :   8828:   test   %rax,%rax
    0.00 :   882b:   je     885a <nf_confirm+0x6a>
    0.00 :   882d:   mov    (%rax),%rax
    0.00 :   8830:   test   %rax,%rax
    0.00 :   8833:   je     885a <nf_confirm+0x6a>
    0.00 :   8835:   mov    0x60(%rax),%rax
    0.00 :   8839:   mov    %r12d,%ecx
    0.00 :   883c:   mov    %rbx,%rdx
    0.00 :   883f:   mov    %r13d,%esi
    0.00 :   8842:   mov    %rbp,%rdi
    0.00 :   8845:   call   884a <nf_confirm+0x5a>
    0.00 :   884a:   cmp    $0x1,%eax
    0.00 :   884d:   je     885a <nf_confirm+0x6a>
    0.00 :   884f:   pop    %rbx
    0.00 :   8850:   pop    %rbp
    0.00 :   8851:   pop    %r12
    0.00 :   8853:   pop    %r13
    0.00 :   8855:   jmp    885a <nf_confirm+0x6a>
    0.00 :   885a:   mov    0x80(%rbx),%rax
    0.00 :   8861:   test   $0x40,%al
    0.00 :   8863:   je     8881 <nf_confirm+0x91>
    0.00 :   8865:   mov    0x10(%rbp),%rax
    0.00 :   8869:   test   %rax,%rax
    0.00 :   886c:   je     88ba <nf_confirm+0xca>
    0.00 :   886e:   mov    0x90(%rbp),%edx
    0.00 :   8874:   test   %edx,%edx
    0.00 :   8876:   je     88ba <nf_confirm+0xca>
    0.00 :   8878:   testb  $0x8,0xc0(%rax)
    0.00 :   887f:   je     88ba <nf_confirm+0xca>
  100.00 :   8881:   mov    0x68(%rbp),%rdi // [nf_conntrack][8881]
    0.00 :   8885:   cmp    $0x7,%rdi
    0.00 :   8889:   ja     8892 <nf_confirm+0xa2>
    0.00 :   888b:   mov    $0x1,%eax
    0.00 :   8890:   jmp    884f <nf_confirm+0x5f>
    0.00 :   8892:   and    $0xfffffffffffffff8,%rdi
    0.00 :   8896:   mov    0x80(%rdi),%rax
    0.00 :   889d:   test   $0x8,%al
    0.00 :   889f:   je     88e8 <nf_confirm+0xf8>
    0.00 :   88a1:   mov    0xb0(%rdi),%rax
    0.00 :   88a8:   test   %rax,%rax
    0.00 :   88ab:   je     888b <nf_confirm+0x9b>
    0.00 :   88ad:   cmpb   $0x0,0x4(%rax)
    0.00 :   88b1:   je     888b <nf_confirm+0x9b>
    0.00 :   88b3:   call   88b8 <nf_confirm+0xc8>
    0.00 :   88b8:   jmp    888b <nf_confirm+0x9b>
    0.00 :   88ba:   mov    %r13d,%ecx
    0.00 :   88bd:   mov    %r12d,%edx
    0.00 :   88c0:   mov    %rbx,%rsi
    0.00 :   88c3:   mov    %rbp,%rdi
    0.00 :   88c6:   call   88cb <nf_confirm+0xdb>
    0.00 :   88cb:   test   %eax,%eax
    0.00 :   88cd:   jne    8881 <nf_confirm+0x91>
    0.00 :   88cf:   mov    0x88(%rbx),%rax
    0.00 :   88d6:   mov    0xb40(%rax),%rax
    0.00 :   88dd:   incl   %gs:0x14(%rax)
    0.00 :   88e1:   xor    %eax,%eax
    0.00 :   88e3:   jmp    884f <nf_confirm+0x5f>
    0.00 :   88e8:   mov    %rbp,%rdi
    0.00 :   88eb:   call   88f0 <nf_confirm+0x100>
    0.00 :   88f0:   cmp    $0x1,%eax
    0.00 :   88f3:   jne    884f <nf_confirm+0x5f>
    0.00 :   88f9:   mov    0x68(%rbp),%rdi
    0.00 :   88fd:   and    $0xfffffffffffffff8,%rdi
    0.00 :   8901:   jmp    88a1 <nf_confirm+0xb1>
    0.00 :   8903:   xor    %esi,%esi
    0.00 :   8905:   call   890a <nf_confirm+0x11a>
    0.00 :   890a:   jmp    8828 <nf_confirm+0x38>

Sorted summary for file /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz
----------------------------------------------

  100.00 [nf_conntrack][cfe]
 Percent |	Source code & Disassembly of /lib/modules/6.1.12-200.fc37.x86_64/kernel/net/netfilter/nf_conntrack.ko.xz for cycles (1 samples, percent: local period)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         :
         :
         :
         : 3   Disassembly of section .text:
         :
         : 5   0000000000000cc0 <__nf_ct_refresh_acct>:
         : 6   __nf_ct_refresh_acct():
    0.00 :   cc0:    call   cc5 <__nf_ct_refresh_acct+0x5>
    0.00 :   cc5:    mov    0x80(%rdi),%rax
    0.00 :   ccc:    test   $0x4,%ah
    0.00 :   ccf:    je     cdb <__nf_ct_refresh_acct+0x1b>
    0.00 :   cd1:    test   %r8b,%r8b
    0.00 :   cd4:    jne    cfe <__nf_ct_refresh_acct+0x3e>
    0.00 :   cd6:    jmp    cdb <__nf_ct_refresh_acct+0x1b>
    0.00 :   cdb:    mov    0x80(%rdi),%rax
    0.00 :   ce2:    test   $0x8,%al
    0.00 :   ce4:    je     cef <__nf_ct_refresh_acct+0x2f>
    0.00 :   ce6:    mov    0x0(%rip),%rax        # ced <__nf_ct_refresh_acct+0x2d>
    0.00 :   ced:    add    %eax,%ecx
    0.00 :   cef:    mov    0x8(%rdi),%eax
    0.00 :   cf2:    cmp    %eax,%ecx
    0.00 :   cf4:    je     cd1 <__nf_ct_refresh_acct+0x11>
    0.00 :   cf6:    mov    %ecx,0x8(%rdi)
    0.00 :   cf9:    test   %r8b,%r8b
    0.00 :   cfc:    je     cd6 <__nf_ct_refresh_acct+0x16>
  100.00 :   cfe:    cmp    $0x2,%esi // [nf_conntrack][cfe]
    0.00 :   d01:    mov    0x70(%rdx),%ecx
    0.00 :   d04:    mov    $0x1,%edx
    0.00 :   d09:    seta   %sil
    0.00 :   d0d:    movzbl %sil,%esi
    0.00 :   d11:    jmp    c40 <nf_ct_acct_add>
